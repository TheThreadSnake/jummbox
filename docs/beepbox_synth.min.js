var beepbox=function(e){"use strict";
/*!
    Copyright (C) 2020 John Nesky

    Permission is hereby granted, free of charge, to any person obtaining a copy of
    this software and associated documentation files (the "Software"), to deal in
    the Software without restriction, including without limitation the rights to
    use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
    of the Software, and to permit persons to whom the Software is furnished to do
    so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
    */class t{}function i(e){let t=0;for(let i=0;i<e.length;i++)t+=e[i];const i=t/e.length;let s=0,r=0;for(let t=0;t<e.length;t++)s+=r,r=e[t]-i,e[t]=s;return e.push(0),new Float64Array(e)}function s(e){let t=0,i=0;for(let s=0;s<e.length;s++)t+=e[s],i+=Math.abs(e[s]);const s=t/e.length,r=i/e.length;let n=0,a=0;for(let t=0;t<e.length;t++)n+=a,a=(e[t]-s)/r,e[t]=n;return e.push(0),new Float64Array(e)}function r(e,i=null,s=null){let r=t.chipNoises[e].samples;if(null==r){if(r=new Float32Array(t.chipNoiseLength+1),t.chipNoises[e].samples=r,0==e){let e=1;for(let i=0;i<t.chipNoiseLength;i++){r[i]=2*(1&e)-1;let t=e>>1;1==(e+t&1)&&(t+=16384),e=t}}else if(1==e)for(let e=0;e<t.chipNoiseLength;e++)r[e]=2*Math.random()-1;else if(2==e){let e=1;for(let i=0;i<t.chipNoiseLength;i++){r[i]=2*(1&e)-1;let t=e>>1;1==(e+t&1)&&(t+=32768),e=t}}else if(3==e){let e=1;for(let i=0;i<t.chipNoiseLength;i++){r[i]=2*(1&e)-1;let t=e>>1;1==(e+t&1)&&(t+=40),e=t}}else if(4==e)n(r,10,11,1,1,0),n(r,11,14,.6578,.6578,0),i(r,t.chipNoiseLength),s(r,1/Math.sqrt(t.chipNoiseLength));else if(5==e)for(var a=1,o=0;o<t.chipNoiseLength;o++){r[o]=2*(1&a)-1,1==(a+(l=a>>1)&1)&&(l+=40),a=l}else if(6==e)n(r,1,10,1,1,0),n(r,20,14,-2,-2,0),i(r,t.chipNoiseLength),s(r,1/Math.sqrt(t.chipNoiseLength));else if(7==e)for(a=1,o=0;o<t.chipNoiseLength;o++){r[o]=4*(1&a)*(14*Math.random()+1),1==(a+(l=a>>1)&1)&&(l+=60),a=l}else{if(8!=e)throw new Error("Unrecognized drum index: "+e);for(a=1,o=0;o<32768;o++){var l;r[o]=(1&a)/2+.5,1==(a+(l=a>>1)&1)&&(l-=40),a=l}}r[t.chipNoiseLength]=r[0]}return r}function n(e,i,s,n,a,o){const l=0|Math.pow(2,i),h=Math.min(t.chipNoiseLength>>1,0|Math.pow(2,s)),f=r(0);let c=0;for(let r=l;r<h;r++){let l=n+(a-n)*(Math.log(r)/Math.LN2-i)/(s-i),h=Math.pow(2,(l-1)*t.spectrumMax+1)*l;h*=Math.pow(r/2048,o),c+=h,h*=f[r];const m=.61803398875*r*r*Math.PI*2;e[r]=Math.cos(m)*h,e[t.chipNoiseLength-r]=Math.sin(m)*h}return c}function a(e,i,s){let r=t.arpeggioPatterns[e-1];return null!=r?(2==e&&0==i&&(r=[0,0,1,1]),r[s%r.length]):s%e}function o(e){const t={};for(let i=0;i<e.length;i++){const s=e[i];s.index=i,t[s.name]=s}const i=e;return i.dictionary=t,i}t.thresholdVal=-10,t.kneeVal=40,t.ratioVal=12,t.attackVal=0,t.releaseVal=.25,t.scales=o([{name:"Free",realName:"chromatic",flags:[!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0,!0]},{name:"Major",realName:"ionian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0]},{name:"Minor",realName:"aeolian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Mixolydian",realName:"mixolydian",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!0,!1]},{name:"Lydian",realName:"lydian",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0]},{name:"Dorian",realName:"dorian",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!0,!1]},{name:"Phrygian",realName:"phrygian",flags:[!0,!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!1]},{name:"Locrian",realName:"locrian",flags:[!0,!0,!1,!0,!1,!0,!0,!1,!0,!1,!0,!1]},{name:"Lydian Dominant",realName:"lydian dominant",flags:[!0,!1,!0,!1,!0,!1,!0,!0,!1,!0,!0,!1]},{name:"Phrygian Dominant",realName:"phrygian dominant",flags:[!0,!0,!1,!1,!0,!0,!1,!0,!0,!1,!0,!1]},{name:"Harmonic Major",realName:"harmonic major",flags:[!0,!1,!0,!1,!0,!0,!1,!0,!0,!1,!1,!0]},{name:"Harmonic Minor",realName:"harmonic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!0,!1,!1,!0]},{name:"Melodic Minor",realName:"melodic minor",flags:[!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1,!0]},{name:"Blues",realName:"blues",flags:[!0,!1,!1,!0,!1,!0,!0,!0,!1,!1,!0,!1]},{name:"Altered",realName:"altered",flags:[!0,!0,!1,!0,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Major Pentatonic",realName:"major pentatonic",flags:[!0,!1,!0,!1,!0,!1,!1,!0,!1,!0,!1,!1]},{name:"Minor Pentatonic",realName:"minor pentatonic",flags:[!0,!1,!1,!0,!1,!0,!1,!0,!1,!1,!0,!1]},{name:"Whole Tone",realName:"whole tone",flags:[!0,!1,!0,!1,!0,!1,!0,!1,!0,!1,!0,!1]},{name:"Octatonic",realName:"octatonic",flags:[!0,!1,!0,!0,!1,!0,!0,!1,!0,!0,!1,!0]},{name:"Hexatonic",realName:"hexatonic",flags:[!0,!1,!1,!0,!0,!1,!1,!0,!0,!1,!1,!0]}]),t.keys=o([{name:"0",isWhiteKey:!0,basePitch:0},{name:"1",isWhiteKey:!1,basePitch:1},{name:"2",isWhiteKey:!0,basePitch:2},{name:"3",isWhiteKey:!1,basePitch:3},{name:"4",isWhiteKey:!0,basePitch:4},{name:"5",isWhiteKey:!0,basePitch:5},{name:"6",isWhiteKey:!1,basePitch:6},{name:"7",isWhiteKey:!0,basePitch:7},{name:"8",isWhiteKey:!1,basePitch:8},{name:"9",isWhiteKey:!0,basePitch:9},{name:"A",isWhiteKey:!1,basePitch:10},{name:"B",isWhiteKey:!0,basePitch:11}]),t.blackKeyNameParents=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],t.tempoMin=16,t.tempoMax=512,t.reverbRange=32,t.beatsPerBarMin=1,t.beatsPerBarMax=32,t.barCountMin=1,t.barCountMax=512,t.edoMin=1,t.edoMax=72,t.instrumentsPerChannelMin=1,t.instrumentsPerChannelMax=16,t.partsPerBeat=48,t.ticksPerPart=2,t.ticksPerArpeggio=3,t.arpeggioPatterns=[[0],[0,1],[0,1,2,1],[0,1,2,3],[0,1,2,3,4],[0,1,2,3,4,5],[0,1,2,3,4,5,6],[0,1,2,3,4,5,6,7]],t.rhythms=o([{name:"÷1 (singlets '_')",stepsPerBeat:1,roundUpThresholds:[5,12,18]},{name:"÷2 (duplets)",stepsPerBeat:2,roundUpThresholds:[5,12,18]},{name:"÷3 (triplets)",stepsPerBeat:3,roundUpThresholds:[5,12,18]},{name:"÷4 (standard)",stepsPerBeat:4,roundUpThresholds:[3,9,17,21]},{name:"÷6",stepsPerBeat:6,roundUpThresholds:null},{name:"÷8",stepsPerBeat:8,roundUpThresholds:null},{name:"÷12",stepsPerBeat:12,roundUpThresholds:null},{name:"÷16",stepsPerBeat:16,roundUpThresholds:null},{name:"÷24 (freehand)",stepsPerBeat:24,roundUpThresholds:null}]),t.instrumentTypeNames=["chip","FM","noise","spectrum","drumset","harmonics","PWM","custom chip","mod"],t.instrumentTypeHasSpecialInterval=[!0,!0,!1,!1,!1,!0,!1,!0],t.chipWaves=o([{name:"rounded",volume:.94,samples:i([0,.2,.4,.5,.6,.7,.8,.85,.9,.95,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,.95,.9,.85,.8,.7,.6,.5,.4,.2,0,-.2,-.4,-.5,-.6,-.7,-.8,-.85,-.9,-.95,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-.95,-.9,-.85,-.8,-.7,-.6,-.5,-.4,-.2])},{name:"triangle",volume:1,samples:i([1/15,.2,5/15,7/15,.6,11/15,13/15,1,1,13/15,11/15,.6,7/15,5/15,.2,1/15,-1/15,-.2,-5/15,-7/15,-.6,-11/15,-13/15,-1,-1,-13/15,-11/15,-.6,-7/15,-5/15,-.2,-1/15])},{name:"square",volume:.5,samples:i([1,-1])},{name:"1/4 pulse",volume:.5,samples:i([1,-1,-1,-1])},{name:"1/8 pulse",volume:.5,samples:i([1,-1,-1,-1,-1,-1,-1,-1])},{name:"sawtooth",volume:.65,samples:i([1/31,3/31,5/31,7/31,9/31,11/31,13/31,15/31,17/31,19/31,21/31,23/31,25/31,27/31,29/31,1,-1,-29/31,-27/31,-25/31,-23/31,-21/31,-19/31,-17/31,-15/31,-13/31,-11/31,-9/31,-7/31,-5/31,-3/31,-1/31])},{name:"double saw",volume:.5,samples:i([0,-.2,-.4,-.6,-.8,-1,1,-.8,-.6,-.4,-.2,1,.8,.6,.4,.2])},{name:"double pulse",volume:.4,samples:i([1,1,1,1,1,-1,-1,-1,1,1,1,1,-1,-1,-1,-1])},{name:"spiky",volume:.4,samples:i([1,-1,1,-1,1,0])},{name:"sine",volume:.88,samples:s([8,9,11,12,13,14,15,15,15,15,14,14,13,11,10,9,7,6,4,3,2,1,0,0,0,0,1,1,2,4,5,6])},{name:"flute",volume:.8,samples:s([3,4,6,8,10,11,13,14,15,15,14,13,11,8,5,3])},{name:"harp",volume:.8,samples:s([0,3,3,3,4,5,5,6,7,8,9,11,11,13,13,15,15,14,12,11,10,9,8,7,7,5,4,3,2,1,0,0])},{name:"sharp clarinet",volume:.38,samples:s([0,0,0,1,1,8,8,9,9,9,8,8,8,8,8,9,9,7,9,9,10,4,0,0,0,0,0,0,0,0,0,0])},{name:"soft clarinet",volume:.45,samples:s([0,1,5,8,9,9,9,9,9,9,9,11,11,12,13,12,10,9,7,6,4,3,3,3,1,1,1,1,1,1,1,1])},{name:"alto sax",volume:.3,samples:s([5,5,6,4,3,6,8,7,2,1,5,6,5,4,5,7,9,11,13,14,14,14,14,13,10,8,7,7,4,3,4,2])},{name:"bassoon",volume:.35,samples:s([9,9,7,6,5,4,4,4,4,5,7,8,9,10,11,13,13,11,10,9,7,6,4,2,1,1,1,2,2,5,11,14])},{name:"trumpet",volume:.22,samples:s([10,11,8,6,5,5,5,6,7,7,7,7,6,6,7,7,7,7,7,6,6,6,6,6,6,6,6,7,8,9,11,14])},{name:"electric guitar",volume:.2,samples:s([11,12,12,10,6,6,8,0,2,4,8,10,9,10,1,7,11,3,6,6,8,13,14,2,0,12,8,4,13,11,10,13])},{name:"organ",volume:.2,samples:s([11,10,12,11,14,7,5,5,12,10,10,9,12,6,4,5,13,12,12,10,12,5,2,2,8,6,6,5,8,3,2,1])},{name:"pan flute",volume:.35,samples:s([1,4,7,6,7,9,7,7,11,12,13,15,13,11,11,12,13,10,7,5,3,6,10,7,3,3,1,0,1,0,1,0])},{name:"glitch",volume:.5,samples:i}]),t.chipNoises=o([{name:"retro",volume:.25,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"white",volume:1,basePitch:69,pitchFilterMult:8,isSoft:!0,samples:null},{name:"clang",volume:.4,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"buzz",volume:.3,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"hollow",volume:1.5,basePitch:96,pitchFilterMult:1,isSoft:!0,samples:null},{name:"shine",volume:1,basePitch:69,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"deep",volume:1.5,basePitch:120,pitchFilterMult:1024,isSoft:!0,samples:null},{name:"cutter",volume:.005,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null},{name:"metallic",volume:1,basePitch:96,pitchFilterMult:1024,isSoft:!1,samples:null}]),t.filterCutoffMaxHz=8e3,t.filterCutoffMinHz=1,t.filterMax=.95,t.filterMaxResonance=.95,t.filterCutoffRange=11,t.filterResonanceRange=8,t.transitions=o([{name:"seamless",isSeamless:!0,attackSeconds:0,releases:!1,releaseTicks:1,slides:!1,slideTicks:3},{name:"hard",isSeamless:!1,attackSeconds:0,releases:!1,releaseTicks:3,slides:!1,slideTicks:3},{name:"soft",isSeamless:!1,attackSeconds:.025,releases:!1,releaseTicks:3,slides:!1,slideTicks:3},{name:"slide",isSeamless:!0,attackSeconds:.025,releases:!1,releaseTicks:3,slides:!0,slideTicks:3},{name:"cross fade",isSeamless:!1,attackSeconds:.04,releases:!0,releaseTicks:6,slides:!1,slideTicks:3},{name:"hard fade",isSeamless:!1,attackSeconds:0,releases:!0,releaseTicks:48,slides:!1,slideTicks:3},{name:"medium fade",isSeamless:!1,attackSeconds:.0125,releases:!0,releaseTicks:72,slides:!1,slideTicks:3},{name:"soft fade",isSeamless:!1,attackSeconds:.06,releases:!0,releaseTicks:96,slides:!1,slideTicks:6}]),t.vibratos=o([{name:"none",amplitude:0,type:0,delayParts:0},{name:"light",amplitude:.15,type:0,delayParts:0},{name:"delayed",amplitude:.3,type:0,delayParts:18},{name:"heavy",amplitude:.45,type:0,delayParts:0},{name:"shaky",amplitude:.1,type:1,delayParts:0}]),t.vibratoTypes=o([{name:"normal",periodsSeconds:[.14],period:.14},{name:"shaky",periodsSeconds:[.11,.17798,.33],period:266.97}]),t.arpSpeedScale=[0,.0625,.125,.2,.25,1/3,.4,.5,2/3,.75,.8,.9,1,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,2.1,2.2,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.15,4.3,4.5,4.8,5,5.5,6,8],t.intervals=o([{name:"union",spread:0,offset:0,volume:.7,sign:1},{name:"shimmer",spread:.018,offset:0,volume:.8,sign:1},{name:"hum",spread:.045,offset:0,volume:1,sign:1},{name:"honky tonk",spread:.09,offset:0,volume:1,sign:1},{name:"dissonant",spread:.25,offset:0,volume:.9,sign:1},{name:"fifth",spread:3.5,offset:3.5,volume:.9,sign:1},{name:"octave",spread:6,offset:6,volume:.8,sign:1},{name:"bowed",spread:.02,offset:0,volume:1,sign:-1},{name:"piano",spread:.01,offset:0,volume:1,sign:.7}]),t.effectsNames=["none","reverb","chorus","chorus & reverb"],t.volumeRange=50,t.volumeLogScale=.1428,t.panCenter=50,t.panMax=2*t.panCenter,t.detuneMin=-50,t.detuneMax=50,t.songDetuneMin=-250,t.songDetuneMax=250,t.chords=o([{name:"harmony",harmonizes:!0,customInterval:!1,arpeggiates:!1,isCustomInterval:!1,strumParts:0},{name:"strum",harmonizes:!0,customInterval:!1,arpeggiates:!1,isCustomInterval:!1,strumParts:1},{name:"arpeggio",harmonizes:!1,customInterval:!1,arpeggiates:!0,isCustomInterval:!1,strumParts:0},{name:"custom interval",harmonizes:!0,customInterval:!0,arpeggiates:!0,isCustomInterval:!0,strumParts:0}]),t.maxChordSize=9,t.operatorCount=4,t.algorithms=o([{name:"1←(2 3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3,4],[],[],[]]},{name:"1←(2 3←4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[],[4],[]]},{name:"1←2←(3 4)",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3,4],[],[]]},{name:"1←(2 3)←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2,3],[4],[4],[]]},{name:"1←2←3←4",carrierCount:1,associatedCarrier:[1,1,1,1],modulatedBy:[[2],[3],[4],[]]},{name:"1←3 2←4",carrierCount:2,associatedCarrier:[1,2,1,2],modulatedBy:[[3],[4],[],[]]},{name:"1 2←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3,4],[],[]]},{name:"1 2←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[],[3],[4],[]]},{name:"(1 2)←3←4",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3],[3],[4],[]]},{name:"(1 2)←(3 4)",carrierCount:2,associatedCarrier:[1,2,2,2],modulatedBy:[[3,4],[3,4],[],[]]},{name:"1 2 3←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[],[],[4],[]]},{name:"(1 2 3)←4",carrierCount:3,associatedCarrier:[1,2,3,3],modulatedBy:[[4],[4],[4],[]]},{name:"1 2 3 4",carrierCount:4,associatedCarrier:[1,2,3,4],modulatedBy:[[],[],[],[]]}]),t.operatorCarrierInterval=[0,.04,-.073,.091],t.operatorAmplitudeMax=15,t.operatorFrequencies=o([{name:"1×",mult:1,hzOffset:0,amplitudeSign:1},{name:"~1×",mult:1,hzOffset:1.5,amplitudeSign:-1},{name:"2×",mult:2,hzOffset:0,amplitudeSign:1},{name:"~2×",mult:2,hzOffset:-1.3,amplitudeSign:-1},{name:"3×",mult:3,hzOffset:0,amplitudeSign:1},{name:"4×",mult:4,hzOffset:0,amplitudeSign:1},{name:"5×",mult:5,hzOffset:0,amplitudeSign:1},{name:"6×",mult:6,hzOffset:0,amplitudeSign:1},{name:"7×",mult:7,hzOffset:0,amplitudeSign:1},{name:"8×",mult:8,hzOffset:0,amplitudeSign:1},{name:"9×",mult:9,hzOffset:0,amplitudeSign:1},{name:"11×",mult:11,hzOffset:0,amplitudeSign:1},{name:"13×",mult:13,hzOffset:0,amplitudeSign:1},{name:"16×",mult:16,hzOffset:0,amplitudeSign:1},{name:"20×",mult:20,hzOffset:0,amplitudeSign:1}]),t.envelopes=o([{name:"custom",type:0,speed:0},{name:"steady",type:1,speed:0},{name:"punch",type:2,speed:0},{name:"flare 1",type:3,speed:32},{name:"flare 2",type:3,speed:8},{name:"flare 3",type:3,speed:2},{name:"twang 1",type:4,speed:32},{name:"twang 2",type:4,speed:8},{name:"twang 3",type:4,speed:2},{name:"swell 1",type:5,speed:32},{name:"swell 2",type:5,speed:8},{name:"swell 3",type:5,speed:2},{name:"tremolo1",type:6,speed:4},{name:"tremolo2",type:6,speed:2},{name:"tremolo3",type:6,speed:1},{name:"tremolo4",type:7,speed:4},{name:"tremolo5",type:7,speed:2},{name:"tremolo6",type:7,speed:1},{name:"decay 1",type:8,speed:10},{name:"decay 2",type:8,speed:7},{name:"decay 3",type:8,speed:4}]),t.feedbacks=o([{name:"1⟲",indices:[[1],[],[],[]]},{name:"2⟲",indices:[[],[2],[],[]]},{name:"3⟲",indices:[[],[],[3],[]]},{name:"4⟲",indices:[[],[],[],[4]]},{name:"1⟲ 2⟲",indices:[[1],[2],[],[]]},{name:"3⟲ 4⟲",indices:[[],[],[3],[4]]},{name:"1⟲ 2⟲ 3⟲",indices:[[1],[2],[3],[]]},{name:"2⟲ 3⟲ 4⟲",indices:[[],[2],[3],[4]]},{name:"1⟲ 2⟲ 3⟲ 4⟲",indices:[[1],[2],[3],[4]]},{name:"1→2",indices:[[],[1],[],[]]},{name:"1→3",indices:[[],[],[1],[]]},{name:"1→4",indices:[[],[],[],[1]]},{name:"2→3",indices:[[],[],[2],[]]},{name:"2→4",indices:[[],[],[],[2]]},{name:"3→4",indices:[[],[],[],[3]]},{name:"1→3 2→4",indices:[[],[],[1],[2]]},{name:"1→4 2→3",indices:[[],[],[2],[1]]},{name:"1→2→3→4",indices:[[],[1],[2],[3]]}]),t.chipNoiseLength=32768,t.spectrumBasePitch=24,t.spectrumControlPoints=30,t.spectrumControlPointsPerOctave=7,t.spectrumControlPointBits=3,t.spectrumMax=(1<<t.spectrumControlPointBits)-1,t.harmonicsControlPoints=28,t.harmonicsRendered=64,t.harmonicsControlPointBits=3,t.harmonicsMax=(1<<t.harmonicsControlPointBits)-1,t.harmonicsWavelength=2048,t.pulseWidthRange=50,t.pitchChannelCountMin=1,t.pitchChannelCountMax=32,t.noiseChannelCountMin=0,t.noiseChannelCountMax=8,t.modChannelCountMin=0,t.modChannelCountMax=8,t.noiseInterval=6,t.drumCount=12,t.modCount=6,t.pitchOctaves=9,t.maxScrollableOctaves=5,t.maximumTonesPerChannel=2*t.maxChordSize,t.sineWaveLength=256,t.sineWaveMask=t.sineWaveLength-1,t.sineWave=function(){const e=new Float64Array(t.sineWaveLength+1);for(let i=0;i<t.sineWaveLength+1;i++)e[i]=Math.sin(i*Math.PI*2/t.sineWaveLength);return e}(),t.barEditorHeight=10;/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);class l{static valueToPreset(e){const t=e>>6,i=63&e;return l.presetCategories[t].presets[i]}static midiProgramToPresetValue(e){for(let t=0;t<l.presetCategories.length;t++){const i=l.presetCategories[t];for(let s=0;s<i.presets.length;s++){const r=i.presets[s];if(r.generalMidi&&r.midiProgram==e)return(t<<6)+s}}return null}static nameToPresetValue(e){for(let t=0;t<l.presetCategories.length;t++){const i=l.presetCategories[t];for(let s=0;s<i.presets.length;s++){if(i.presets[s].name==e)return(t<<6)+s}}return null}}function h(e,t){for(let i=0;i<e.length;i++)e[i]*=t}function f(e){if(!function(e){return!(!e||e&e-1)}(e))throw new Error("FFT array length must be a power of 2.");return Math.round(Math.log(e)/Math.log(2))}function c(e,t){const i=f(t);if(t<4)throw new Error("FFT array length must be at least 4.");for(let s=i-1;s>=2;s--){const i=1<<s,r=i>>1,n=i<<1,a=2*Math.PI/n,o=Math.cos(a),l=Math.sin(a),h=2*o;for(let s=0;s<t;s+=n){const t=s,n=t+r,a=t+i,f=a+r,c=a+i,m=e[t],u=e[a];e[t]=m+u,e[n]*=2,e[a]=m-u,e[f]*=2;let d=o,p=-l,v=1,y=0;for(let i=1;i<r;i++){const s=t+i,r=a-i,n=a+i,o=c-i,l=e[s],f=e[r],m=e[n],u=e[o],b=l-f,g=m+u;e[s]=l+f,e[r]=u-m,e[n]=b*d-g*p,e[o]=g*d+b*p;const M=h*d-v,k=h*p-y;v=d,y=p,d=M,p=k}}}for(let i=0;i<t;i+=4){const t=i+1,s=i+2,r=i+3,n=e[i],a=2*e[t],o=e[s],l=2*e[r],h=n+o,f=n-o;e[i]=h+a,e[t]=h-a,e[s]=f+l,e[r]=f-l}!function(e,t){const i=f(t);if(i>16)throw new Error("FFT array length must not be greater than 2^16.");const s=16-i;for(let i=0;i<t;i++){let t;if(t=(43690&i)>>1|(21845&i)<<1,t=(52428&t)>>2|(13107&t)<<2,t=(61680&t)>>4|(3855&t)<<4,t=(t>>8|(255&t)<<8)>>s,t>i){let s=e[i];e[i]=e[t],e[t]=s}}}(e,t)}l.version="2.3",l.versionDisplayName="MicroBox Alpha "+l.version,l.presetCategories=o([{name:"Custom Instruments",presets:o([{name:"chip wave",customType:0},{name:"FM (expert)",customType:1},{name:"basic noise",customType:2},{name:"spectrum",customType:3},{name:"drumset",customType:4},{name:"harmonics",customType:5},{name:"pulse width",customType:6},{name:"custom chip",customType:7}])},{name:"Retro Presets",presets:o([{name:"square wave",midiProgram:80,settings:{type:"chip",transition:"seamless",effects:"none",chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",wave:"square",interval:"union",vibrato:"none"}},{name:"triangle wave",midiProgram:71,settings:{type:"chip",transition:"seamless",effects:"none",chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",wave:"triangle",interval:"union",vibrato:"none"}},{name:"square lead",midiProgram:80,generalMidi:!0,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",wave:"square",interval:"hum",vibrato:"none"}},{name:"sawtooth lead 1",midiProgram:81,generalMidi:!0,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",wave:"sawtooth",interval:"shimmer",vibrato:"none"}},{name:"sawtooth lead 2",midiProgram:81,settings:{type:"chip",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:5657,filterResonance:29,filterEnvelope:"steady",wave:"sawtooth",interval:"hum",vibrato:"light"}},{name:"chip noise",midiProgram:116,isNoise:!0,settings:{type:"noise",transition:"hard",effects:"none",chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",wave:"retro"}},{name:"FM twang",midiProgram:32,settings:{type:"FM",transition:"hard",effects:"none",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"twang 2"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"FM bass",midiProgram:36,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"custom interval",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"1×",amplitude:7,envelope:"twang 2"},{frequency:"1×",amplitude:9,envelope:"twang 3"},{frequency:"20×",amplitude:3,envelope:"twang 2"}]}},{name:"FM flute",midiProgram:73,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"twang 2"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"FM organ",midiProgram:16,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"custom interval",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"1×",amplitude:11,envelope:"steady"},{frequency:"2×",amplitude:11,envelope:"steady"}]}},{name:"NES Pulse",midiProgram:80,settings:{type:"custom chip",transition:"hard",effects:"none",chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",interval:"union",vibrato:"none",customChipWave:[-24,-24,-24,-24,-23,-23,-23,-23,-22,-22,-22,-22,-21,-21,-21,-21,-20,-20,-20,-20,-19,-19,-19,-19,-18,-18,-18,-18,-17,-17,-17,-17,24,24,24,24,23,23,23,23,22,22,22,22,21,21,21,21,20,20,20,20,19,19,19,19,18,18,18,18,17,17,17,17]}},{name:"Gameboy Pulse",midiProgram:80,settings:{type:"custom chip",transition:"hard",effects:"none",chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",interval:"union",vibrato:"none",customChipWave:[-24,-20,-17,-15,-13,-13,-11,-11,-11,-9,-9,-9,-9,-7,-7,-7,-7,-7,-5,-5,-5,-5,-5,-5,-3,-3,-3,-3,-3,-3,-3,-3,24,20,17,15,13,13,11,11,11,9,9,9,9,7,7,7,7,7,5,5,5,5,5,5,3,3,3,3,3,3,3,3]}},{name:"VRC6 Sawtooth",midiProgram:81,settings:{type:"custom chip",transition:"hard",effects:"none",chord:"arpeggio",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"steady",interval:"union",vibrato:"none",customChipWave:[-24,-20,-16,-13,-10,-8,-6,-5,-4,-4,0,0,0,0,4,4,4,4,4,4,8,8,8,8,8,8,8,8,12,12,12,12,12,12,12,12,16,16,16,16,16,16,16,16,20,20,20,20,20,20,20,20,24,24,24,24,24,24,24,24,24,24,24,24]}},{name:"Atari Square",midiProgram:80,settings:{type:"custom chip",effects:"none",transition:"seamless",chord:"arpeggio",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",interval:"union",vibrato:"none",customChipWave:[-24,-24,-24,-23,-23,-23,-22,-22,-22,-21,-21,-21,-20,-20,-20,-19,-19,-19,-18,-18,-18,-17,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-14,-13,-13,-13,24,24,24,23,23,23,22,22,22,21,21,21,20,20,20,19,19,19,18,18,18,17,17,17,16,16,15,15]}},{name:"Atari Bass",midiProgram:36,settings:{type:"custom chip",effects:"none",transition:"seamless",chord:"arpeggio",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",interval:"union",vibrato:"none",customChipWave:[-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,24,-24,-24,-24,24,24,-24,-24,-24,-24,-24,-24,-24,-24,-24,24,24,24,24,24,24,-24,-24,24,24,24,24,24,-24,-24,-24,-24,24,24,-24,-24,24,24]}}])},{name:"Keyboard Presets",presets:o([{name:"grand piano 1",midiProgram:0,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"twang 3",interval:"piano",vibrato:"none",harmonics:[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57]}},{name:"bright piano",midiProgram:1,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 3",interval:"piano",vibrato:"none",harmonics:[100,100,86,86,71,71,0,71,86,86,71,71,71,14,57,57,57,57,57,57,29,57,57,57,57,57,57,57]}},{name:"electric grand",midiProgram:2,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 3",wave:"1/8 pulse",interval:"shimmer",vibrato:"none"}},{name:"honky-tonk piano",midiProgram:3,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:5657,filterResonance:29,filterEnvelope:"twang 2",interval:"honky tonk",vibrato:"none",harmonics:[100,100,86,71,86,71,43,71,43,43,57,57,57,29,57,43,43,43,43,43,29,43,43,43,29,29,29,29]}},{name:"electric piano 1",midiProgram:4,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[86,100,100,71,71,57,57,43,43,43,29,29,29,14,14,14,0,0,0,0,0,57,0,0,0,0,0,0]}},{name:"electric piano 2",midiProgram:5,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"steady"},{frequency:"16×",amplitude:6,envelope:"twang 3"}]}},{name:"harpsichord",midiProgram:6,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"4⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"steady"},{frequency:"3×",amplitude:6,envelope:"steady"},{frequency:"5×",amplitude:7,envelope:"steady"}]}},{name:"clavinet",midiProgram:7,generalMidi:!0,settings:{type:"FM",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 2",operators:[{frequency:"3×",amplitude:15,envelope:"custom"},{frequency:"~1×",amplitude:6,envelope:"steady"},{frequency:"8×",amplitude:4,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"dulcimer",midiProgram:15,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",interval:"piano",vibrato:"none",harmonics:[100,100,100,86,100,86,57,100,100,86,100,86,100,86,100,71,57,71,71,100,86,71,86,86,100,86,86,86]}},{name:"grand piano 2",midiProgram:0,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:1414,filterResonance:43,filterEnvelope:"twang 3",interval:"shimmer",vibrato:"none",harmonics:[100,86,86,86,86,71,71,57,0,57,29,43,57,57,57,43,43,0,29,43,43,43,43,43,43,29,0,29]}}])},{name:"Idiophone Presets",presets:o([{name:"celesta",midiProgram:8,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~1×",amplitude:11,envelope:"custom"},{frequency:"8×",amplitude:6,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"3×",amplitude:1,envelope:"twang 2"}]}},{name:"glockenspiel",midiProgram:9,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,feedbackEnvelope:"decay 1",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"5×",amplitude:11,envelope:"custom"},{frequency:"8×",amplitude:7,envelope:"custom"},{frequency:"20×",amplitude:2,envelope:"twang 1"}]}},{name:"music box 1",midiProgram:10,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[100,0,0,100,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,86,0,0,0,0,0,0,71,0]}},{name:"music box 2",midiProgram:10,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,57,57,0,0,0,0,0,0,57,0,0,0,14,14,14,14,14,14,43,14,14,14,14,14,14,14,14]}},{name:"vibraphone",midiProgram:11,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:3,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:9,envelope:"custom"},{frequency:"9×",amplitude:3,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"}]}},{name:"marimba",midiProgram:12,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"4×",amplitude:6,envelope:"custom"},{frequency:"13×",amplitude:6,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"kalimba",midiProgram:108,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:11,envelope:"custom"},{frequency:"5×",amplitude:3,envelope:"twang 2"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"xylophone",midiProgram:13,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"11×",amplitude:9,envelope:"custom"},{frequency:"20×",amplitude:6,envelope:"twang 1"}]}},{name:"tubular bell",midiProgram:14,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 3",interval:"hum",vibrato:"none",harmonics:[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14]}},{name:"bell synth",midiProgram:14,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:10,envelope:"custom"},{frequency:"7×",amplitude:6,envelope:"twang 3"},{frequency:"20×",amplitude:1,envelope:"twang 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"rain drop",midiProgram:96,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"20×",amplitude:3,envelope:"twang 1"},{frequency:"1×",amplitude:6,envelope:"tremolo1"}]}},{name:"crystal",midiProgram:98,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"delayed",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"custom"},{frequency:"6×",amplitude:4,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"}]}},{name:"tinkle bell",midiProgram:112,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"~2×",amplitude:7,envelope:"custom"},{frequency:"5×",amplitude:7,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"16×",amplitude:7,envelope:"custom"}]}},{name:"agogo",midiProgram:113,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"decay 1",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→4",feedbackAmplitude:15,feedbackEnvelope:"decay 1",operators:[{frequency:"2×",amplitude:9,envelope:"custom"},{frequency:"5×",amplitude:6,envelope:"custom"},{frequency:"8×",amplitude:9,envelope:"custom"},{frequency:"13×",amplitude:11,envelope:"custom"}]}}])},{name:"Guitar Presets",presets:o([{name:"nylon guitar",midiProgram:24,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"5×",amplitude:2,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"steady"}]}},{name:"steel guitar",midiProgram:25,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,71,71,86,86,71,57,43,43,43,57,57,57,57,57,43,43,43,43,43,43,43,43,43,43]}},{name:"jazz guitar",midiProgram:26,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,57,71,71,43,57,71,57,43,29,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"clean guitar",midiProgram:27,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",interval:"union",vibrato:"none",harmonics:[86,100,100,100,86,57,86,100,100,100,71,57,43,71,86,71,57,57,71,71,71,71,57,57,57,57,57,43]}},{name:"muted guitar",midiProgram:28,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:4,envelope:"twang 3"},{frequency:"4×",amplitude:4,envelope:"twang 2"},{frequency:"16×",amplitude:4,envelope:"twang 1"}]}}])},{name:"Picked Bass Presets",presets:o([{name:"acoustic bass",midiProgram:32,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,71,71,71,57,57,57,57,43,43,43,43,43,29,29,29,29,29,29,14,14,14,14,14,14,14]}},{name:"fingered bass",midiProgram:33,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,86,71,57,71,43,57,29,29,29,29,29,29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,0]}},{name:"picked bass",midiProgram:34,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:1,envelope:"twang 3"},{frequency:"1×",amplitude:9,envelope:"steady"}]}},{name:"fretless bass",midiProgram:35,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"flare 2",interval:"union",vibrato:"none",harmonics:[100,100,86,71,71,57,57,71,71,71,57,57,57,57,57,57,57,43,43,43,43,43,43,43,43,29,29,14]}},{name:"slap bass 1",midiProgram:36,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:0,filterEnvelope:"twang 1",interval:"union",vibrato:"none",harmonics:[100,100,100,100,86,71,57,29,29,43,43,57,71,57,29,29,43,57,57,57,43,43,43,57,71,71,71,71]}},{name:"slap bass 2",midiProgram:37,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"3⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"13×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"bass synth 1",midiProgram:38,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲ 4⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 1"},{frequency:"~1×",amplitude:13,envelope:"twang 2"}]}},{name:"bass synth 2",midiProgram:39,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1e3,filterResonance:57,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1→2",feedbackAmplitude:4,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"steady"},{frequency:"3×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"bass & lead",midiProgram:87,generalMidi:!0,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:86,filterEnvelope:"twang 2",wave:"sawtooth",interval:"shimmer",vibrato:"none"}}])},{name:"Picked String Presets",presets:o([{name:"pizzicato strings",midiProgram:45,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:1e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"3×",amplitude:11,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"~1×",amplitude:10,envelope:"steady"}]}},{name:"harp",midiProgram:46,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"3⟲",feedbackAmplitude:6,feedbackEnvelope:"twang 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"4×",amplitude:6,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"steady"},{frequency:"1×",amplitude:6,envelope:"steady"}]}},{name:"sitar",midiProgram:104,generalMidi:!0,settings:{type:"FM",transition:"hard fade",effects:"reverb",chord:"strum",filterCutoffHz:8e3,filterResonance:57,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"twang 3"},{frequency:"9×",amplitude:3,envelope:"twang 3"},{frequency:"16×",amplitude:9,envelope:"swell 3"}]}},{name:"banjo",midiProgram:105,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"11×",amplitude:3,envelope:"twang 3"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"ukulele",midiProgram:105,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"9×",amplitude:4,envelope:"twang 2"},{frequency:"1×",amplitude:11,envelope:"steady"}]}},{name:"shamisen",midiProgram:106,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"3⟲",feedbackAmplitude:9,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"steady"},{frequency:"16×",amplitude:4,envelope:"twang 3"},{frequency:"1×",amplitude:7,envelope:"steady"}]}},{name:"koto",midiProgram:107,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 2",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 2",operators:[{frequency:"~1×",amplitude:12,envelope:"custom"},{frequency:"6×",amplitude:10,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"twang 3"},{frequency:"~2×",amplitude:8,envelope:"twang 3"}]}}])},{name:"Distortion Presets",presets:o([{name:"overdrive guitar",midiProgram:29,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"~1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"steady"},{frequency:"1×",amplitude:7,envelope:"twang 3"},{frequency:"1×",amplitude:4,envelope:"swell 3"}]}},{name:"distortion guitar",midiProgram:30,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1→2",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"~1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:11,envelope:"steady"},{frequency:"1×",amplitude:9,envelope:"swell 1"},{frequency:"~2×",amplitude:5,envelope:"swell 3"}]}},{name:"charango synth",midiProgram:84,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1→2→3→4",feedbackAmplitude:8,feedbackEnvelope:"twang 3",operators:[{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"~1×",amplitude:5,envelope:"steady"},{frequency:"4×",amplitude:6,envelope:"steady"},{frequency:"3×",amplitude:7,envelope:"steady"}]}},{name:"guitar harmonics",midiProgram:31,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3)←4",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"16×",amplitude:5,envelope:"swell 1"},{frequency:"1×",amplitude:2,envelope:"punch"},{frequency:"~1×",amplitude:12,envelope:"twang 1"}]}},{name:"distorted synth 1",midiProgram:30,settings:{type:"PWM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"steady",pulseWidth:18,pulseEnvelope:"punch",vibrato:"none"}},{name:"distorted synth 2",midiProgram:30,settings:{type:"FM",effects:"reverb",transition:"seamless",chord:"strum",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:7,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:13,envelope:"steady"},{frequency:"1×",amplitude:11,envelope:"swell 1"},{frequency:"1×",amplitude:0,envelope:"flare 1"}]}},{name:"distorted synth 3",midiProgram:30,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1←(2 3 4)",feedbackType:"1→2",feedbackAmplitude:3,feedbackEnvelope:"steady",operators:[{frequency:"~1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:11,envelope:"steady"},{frequency:"1×",amplitude:12,envelope:"swell 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"distorted synth 4",midiProgram:30,settings:{type:"PWM",effects:"reverb",transition:"hard",chord:"strum",filterCutoffHz:2828,filterResonance:57,filterEnvelope:"steady",pulseWidth:50,pulseEnvelope:"swell 1",vibrato:"delayed"}}])},{name:"Bellows Presets",presets:o([{name:"drawbar organ 1",midiProgram:16,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,86,0,86,0,0,0,86,0,0,0,0,0,0,0,86,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"drawbar organ 2",midiProgram:16,midiSubharmonicOctaves:1,settings:{type:"harmonics",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[86,29,71,86,71,14,0,100,0,0,0,86,0,0,0,71,0,0,0,57,0,0,0,29,0,0,0,0]}},{name:"percussive organ",midiProgram:17,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",vibrato:"light",algorithm:"1 2 3 4",feedbackType:"1→3 2→4",feedbackAmplitude:7,feedbackEnvelope:"decay 1",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"3×",amplitude:8,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"}]}},{name:"rock organ",midiProgram:18,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"punch",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:2,feedbackEnvelope:"flare 1",operators:[{frequency:"1×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"6×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:5,envelope:"steady"}]}},{name:"pipe organ",midiProgram:19,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"2×",amplitude:9,envelope:"custom"},{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"}]}},{name:"reed organ",midiProgram:20,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[71,86,100,86,71,100,57,71,71,71,43,43,43,71,43,71,57,57,57,57,57,57,57,29,43,29,29,14]}},{name:"accordion",midiProgram:21,generalMidi:!0,settings:{type:"chip",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:0,filterEnvelope:"swell 1",wave:"double saw",interval:"honky tonk",vibrato:"none"}},{name:"bandoneon",midiProgram:23,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",interval:"hum",vibrato:"none",harmonics:[86,86,86,57,71,86,57,71,71,71,57,43,57,43,71,43,71,57,57,43,43,43,57,43,43,29,29,29]}},{name:"bagpipe",midiProgram:109,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"punch",interval:"hum",vibrato:"none",harmonics:[71,86,86,100,100,86,57,100,86,71,71,71,57,57,57,71,57,71,57,71,43,57,57,43,43,43,43,43]}}])},{name:"String Presets",presets:o([{name:"violin 1",midiProgram:40,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"3×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:5,envelope:"swell 1"}]}},{name:"viola",midiProgram:41,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"7×",amplitude:7,envelope:"custom"},{frequency:"13×",amplitude:4,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"}]}},{name:"cello",midiProgram:42,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:11,envelope:"custom"},{frequency:"3×",amplitude:9,envelope:"custom"},{frequency:"8×",amplitude:7,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"}]}},{name:"contrabass",midiProgram:43,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"16×",amplitude:5,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"6×",amplitude:3,envelope:"swell 1"}]}},{name:"fiddle",midiProgram:110,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"delayed",algorithm:"(1 2)←(3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 1",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"8×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"16×",amplitude:3,envelope:"steady"}]}},{name:"tremolo strings",midiProgram:44,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"tremolo4",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1→2→3→4",feedbackAmplitude:12,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"~2×",amplitude:8,envelope:"custom"},{frequency:"4×",amplitude:8,envelope:"custom"},{frequency:"7×",amplitude:8,envelope:"custom"}]}},{name:"strings",midiProgram:48,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:9,envelope:"custom"},{frequency:"3×",amplitude:9,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:3,envelope:"swell 1"}]}},{name:"slow strings",midiProgram:49,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:1414,filterResonance:0,filterEnvelope:"swell 2",vibrato:"none",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:6,feedbackEnvelope:"flare 3",operators:[{frequency:"4×",amplitude:10,envelope:"custom"},{frequency:"3×",amplitude:10,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:4,envelope:"swell 1"}]}},{name:"strings synth 1",midiProgram:50,generalMidi:!0,settings:{type:"chip",transition:"soft fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:1414,filterResonance:43,filterEnvelope:"steady",wave:"sawtooth",interval:"hum",vibrato:"delayed"}},{name:"strings synth 2",midiProgram:51,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:12,feedbackEnvelope:"swell 1",operators:[{frequency:"3×",amplitude:6,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"custom"},{frequency:"1×",amplitude:9,envelope:"custom"}]}},{name:"orchestra hit 1",midiProgram:55,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"custom",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"twang 3"},{frequency:"2×",amplitude:15,envelope:"flare 3"},{frequency:"4×",amplitude:15,envelope:"flare 2"},{frequency:"8×",amplitude:15,envelope:"flare 1"}]}},{name:"violin 2",midiProgram:40,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"light",algorithm:"(1 2)←(3 4)",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"twang 3",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:13,envelope:"custom"},{frequency:"2×",amplitude:7,envelope:"steady"},{frequency:"7×",amplitude:8,envelope:"swell 1"}]}},{name:"orchestra hit 2",midiProgram:55,midiSubharmonicOctaves:1,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"decay 1",vibrato:"delayed",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:14,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"3×",amplitude:12,envelope:"custom"},{frequency:"4×",amplitude:14,envelope:"custom"}]}}])},{name:"Vocal Presets",presets:o([{name:"choir soprano",midiProgram:94,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2828,filterResonance:57,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[86,100,86,43,14,14,57,71,57,14,14,14,14,14,43,57,43,14,14,14,14,14,14,14,0,0,0,0]}},{name:"choir tenor",midiProgram:52,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2828,filterResonance:86,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[86,100,100,86,71,57,29,14,14,14,29,43,43,43,29,14,14,14,0,0,0,0,0,0,0,0,0,0]}},{name:"choir bass",midiProgram:52,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2828,filterResonance:86,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[71,86,86,100,86,100,57,43,14,14,14,14,29,29,43,43,43,43,43,29,29,29,29,14,14,14,0,0]}},{name:"solo soprano",midiProgram:85,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:71,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[86,100,86,43,14,14,57,71,57,14,14,14,14,14,43,57,43,14,14,14,14,14,14,14,0,0,0,0]}},{name:"solo tenor",midiProgram:85,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:86,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[86,100,100,86,71,57,29,14,14,14,29,43,43,43,29,14,14,14,0,0,0,0,0,0,0,0,0,0]}},{name:"solo bass",midiProgram:85,settings:{type:"harmonics",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:86,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[71,86,86,100,86,100,57,43,14,14,14,14,29,29,43,43,43,43,43,29,29,29,29,14,14,14,0,0]}},{name:"voice ooh",midiProgram:53,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:57,filterEnvelope:"steady",interval:"union",vibrato:"shaky",harmonics:[100,57,43,43,14,14,0,0,0,14,29,29,14,0,14,29,29,14,0,0,0,0,0,0,0,0,0,0]}},{name:"voice synth",midiProgram:54,generalMidi:!0,settings:{type:"chip",transition:"medium fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:57,filterEnvelope:"steady",wave:"rounded",interval:"union",vibrato:"light"}},{name:"vox synth lead",midiProgram:85,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",vibrato:"light",algorithm:"(1 2 3)←4",feedbackType:"1→2→3→4",feedbackAmplitude:2,feedbackEnvelope:"punch",operators:[{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"9×",amplitude:5,envelope:"custom"},{frequency:"20×",amplitude:1,envelope:"custom"},{frequency:"~1×",amplitude:4,envelope:"steady"}]}},{name:"tiny robot",midiProgram:85,settings:{type:"FM",transition:"slide",effects:"reverb",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"twang 3",operators:[{frequency:"2×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:7,envelope:"punch"},{frequency:"~1×",amplitude:7,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"yowie",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"tremolo5",vibrato:"none",algorithm:"1←2←(3 4)",feedbackType:"1⟲",feedbackAmplitude:12,feedbackEnvelope:"tremolo3",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"16×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"mouse",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"slide",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:5,feedbackEnvelope:"flare 2",operators:[{frequency:"2×",amplitude:13,envelope:"custom"},{frequency:"5×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"gumdrop",midiProgram:85,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:15,envelope:"punch"},{frequency:"4×",amplitude:15,envelope:"punch"},{frequency:"7×",amplitude:15,envelope:"punch"},{frequency:"1×",amplitude:10,envelope:"twang 1"}]}},{name:"echo drop",midiProgram:102,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"~2×",amplitude:11,envelope:"custom"},{frequency:"~1×",amplitude:5,envelope:"steady"},{frequency:"11×",amplitude:2,envelope:"steady"},{frequency:"16×",amplitude:5,envelope:"swell 3"}]}},{name:"dark choir",midiProgram:85,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",spectrum:[43,14,14,14,14,14,14,100,14,14,14,57,14,14,100,14,43,14,43,14,14,43,14,29,14,29,14,14,29,0]}}])},{name:"Brass Presets",presets:o([{name:"trumpet",midiProgram:56,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:5,envelope:"flare 2"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"trombone",midiProgram:57,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:7,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"tuba",midiProgram:58,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"2⟲",feedbackAmplitude:8,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"muted trumpet",midiProgram:59,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:5,feedbackEnvelope:"flare 2",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:5,envelope:"steady"},{frequency:"9×",amplitude:5,envelope:"steady"},{frequency:"13×",amplitude:9,envelope:"swell 1"}]}},{name:"french horn",midiProgram:60,generalMidi:!0,settings:{type:"FM",transition:"soft",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"swell 1"},{frequency:"~1×",amplitude:8,envelope:"flare 2"}]}},{name:"brass section",midiProgram:61,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"punch",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"swell 1"},{frequency:"~1×",amplitude:10,envelope:"swell 1"}]}},{name:"brass synth 1",midiProgram:62,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:11,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:12,envelope:"flare 1"},{frequency:"~1×",amplitude:8,envelope:"flare 2"}]}},{name:"brass synth 2",midiProgram:63,generalMidi:!0,settings:{type:"FM",transition:"soft",effects:"reverb",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:9,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"flare 1"},{frequency:"~1×",amplitude:7,envelope:"flare 1"}]}},{name:"pulse brass",midiProgram:62,settings:{type:"PWM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 1",pulseWidth:50,pulseEnvelope:"flare 3",vibrato:"none"}}])},{name:"Reed Presets",presets:o([{name:"soprano sax",midiProgram:64,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"4⟲",feedbackAmplitude:5,feedbackEnvelope:"swell 1",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"4×",amplitude:4,envelope:"swell 1"},{frequency:"1×",amplitude:7,envelope:"steady"},{frequency:"5×",amplitude:4,envelope:"punch"}]}},{name:"alto sax",midiProgram:65,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:4,feedbackEnvelope:"punch",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"4×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:12,envelope:"steady"}]}},{name:"tenor sax",midiProgram:66,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:6,feedbackEnvelope:"swell 1",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"steady"},{frequency:"1×",amplitude:3,envelope:"steady"},{frequency:"8×",amplitude:3,envelope:"steady"}]}},{name:"baritone sax",midiProgram:67,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"swell 2",operators:[{frequency:"1×",amplitude:12,envelope:"custom"},{frequency:"8×",amplitude:4,envelope:"steady"},{frequency:"4×",amplitude:5,envelope:"steady"},{frequency:"1×",amplitude:4,envelope:"punch"}]}},{name:"sax synth",midiProgram:64,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:4,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"shehnai",midiProgram:111,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"light",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:3,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"oboe",midiProgram:68,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"tremolo5",operators:[{frequency:"1×",amplitude:7,envelope:"custom"},{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:2,envelope:"steady"}]}},{name:"english horn",midiProgram:69,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2←(3 4)",feedbackType:"2⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"4×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"1×",amplitude:8,envelope:"punch"},{frequency:"8×",amplitude:4,envelope:"steady"}]}},{name:"bassoon",midiProgram:70,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:707,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:11,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"steady"},{frequency:"6×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"clarinet",midiProgram:71,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}},{name:"harmonica",midiProgram:22,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:29,filterEnvelope:"swell 1",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:9,feedbackEnvelope:"tremolo5",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"steady"},{frequency:"~2×",amplitude:2,envelope:"twang 3"},{frequency:"1×",amplitude:0,envelope:"steady"}]}}])},{name:"Flute Presets",presets:o([{name:"flute 1",midiProgram:73,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"4⟲",feedbackAmplitude:7,feedbackEnvelope:"decay 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:4,envelope:"steady"},{frequency:"1×",amplitude:3,envelope:"steady"},{frequency:"~1×",amplitude:1,envelope:"punch"}]}},{name:"recorder",midiProgram:74,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"swell 2",interval:"union",vibrato:"none",harmonics:[100,43,57,43,57,43,43,43,43,43,43,43,43,29,29,29,29,29,29,29,14,14,14,14,14,14,14,0]}},{name:"whistle",midiProgram:78,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:2e3,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"ocarina",midiProgram:79,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"steady",interval:"union",vibrato:"none",harmonics:[100,14,57,14,29,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"piccolo",midiProgram:72,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:5657,filterResonance:43,filterEnvelope:"steady",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"4⟲",feedbackAmplitude:15,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"~2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:5,envelope:"punch"}]}},{name:"shakuhachi",midiProgram:77,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"steady",vibrato:"delayed",algorithm:"1←(2 3←4)",feedbackType:"3→4",feedbackAmplitude:15,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"2×",amplitude:3,envelope:"punch"},{frequency:"~1×",amplitude:4,envelope:"twang 1"},{frequency:"20×",amplitude:15,envelope:"steady"}]}},{name:"pan flute",midiProgram:75,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"soft",chord:"harmony",filterCutoffHz:8e3,filterResonance:43,filterEnvelope:"steady",spectrum:[100,0,0,0,0,0,0,14,0,0,0,71,0,0,14,0,57,0,29,14,29,14,14,29,14,29,14,14,29,14]}},{name:"blown bottle",midiProgram:76,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:5657,filterResonance:57,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"twang 1",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"3×",amplitude:4,envelope:"custom"},{frequency:"6×",amplitude:2,envelope:"custom"},{frequency:"11×",amplitude:2,envelope:"custom"}]}},{name:"calliope",midiProgram:82,generalMidi:!0,settings:{type:"spectrum",transition:"cross fade",effects:"reverb",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"steady",spectrum:[100,0,0,0,0,0,0,86,0,0,0,71,0,0,57,0,43,0,29,14,14,29,14,14,14,14,14,14,14,14]}},{name:"chiffer",midiProgram:83,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"punch",spectrum:[86,0,0,0,0,0,0,71,0,0,0,71,0,0,57,0,57,0,43,14,14,43,14,29,14,29,29,29,29,14]}},{name:"breath noise",midiProgram:121,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"cross fade",chord:"strum",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 1",spectrum:[71,0,0,0,0,0,0,29,0,0,0,71,0,0,29,0,100,29,14,29,100,29,100,14,14,71,0,29,0,0]}},{name:"flute 2",midiProgram:73,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"seamless",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"delayed",harmonics:[100,43,86,57,86,71,86,71,71,71,71,71,71,43,71,71,57,57,57,57,57,57,43,43,43,29,14,0]}}])},{name:"Pad Presets",presets:o([{name:"new age pad",midiProgram:88,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:8e3,filterResonance:43,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲ 2⟲",feedbackAmplitude:3,feedbackEnvelope:"swell 3",operators:[{frequency:"2×",amplitude:14,envelope:"custom"},{frequency:"~1×",amplitude:4,envelope:"swell 2"},{frequency:"6×",amplitude:3,envelope:"twang 3"},{frequency:"13×",amplitude:3,envelope:"steady"}]}},{name:"warm pad",midiProgram:89,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"swell 3",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:7,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:6,envelope:"swell 1"},{frequency:"1×",amplitude:0,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"polysynth pad",midiProgram:90,generalMidi:!0,settings:{type:"chip",transition:"hard fade",effects:"chorus & reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"twang 3",wave:"sawtooth",interval:"hum",vibrato:"delayed"}},{name:"space voice pad",midiProgram:91,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:71,filterEnvelope:"steady",vibrato:"none",algorithm:"(1 2 3)←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:5,feedbackEnvelope:"swell 2",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"2×",amplitude:8,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"custom"},{frequency:"11×",amplitude:1,envelope:"punch"}]}},{name:"bowed glass pad",midiProgram:92,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:10,envelope:"custom"},{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"3×",amplitude:7,envelope:"twang 3"},{frequency:"7×",amplitude:4,envelope:"flare 3"}]}},{name:"metallic pad",midiProgram:93,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 3",vibrato:"none",algorithm:"1←3 2←4",feedbackType:"1⟲ 2⟲",feedbackAmplitude:13,feedbackEnvelope:"twang 3",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"~1×",amplitude:9,envelope:"custom"},{frequency:"1×",amplitude:7,envelope:"swell 2"},{frequency:"11×",amplitude:7,envelope:"steady"}]}},{name:"sweep pad",midiProgram:95,generalMidi:!0,settings:{type:"chip",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:86,filterEnvelope:"flare 3",wave:"sawtooth",interval:"hum",vibrato:"none"}},{name:"atmosphere",midiProgram:99,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"strum",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"steady",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"3⟲ 4⟲",feedbackAmplitude:3,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:14,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"swell 3"},{frequency:"3×",amplitude:7,envelope:"twang 2"},{frequency:"1×",amplitude:7,envelope:"twang 3"}]}},{name:"brightness",midiProgram:100,generalMidi:!0,settings:{type:"harmonics",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 3",interval:"octave",vibrato:"none",harmonics:[100,86,86,86,43,57,43,71,43,43,43,57,43,43,57,71,57,43,29,43,57,57,43,29,29,29,29,14]}},{name:"goblins",midiProgram:101,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"swell 2",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:10,feedbackEnvelope:"flare 3",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"4×",amplitude:5,envelope:"swell 3"},{frequency:"1×",amplitude:10,envelope:"tremolo1"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"sci-fi",midiProgram:103,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:5657,filterResonance:14,filterEnvelope:"twang 3",vibrato:"none",algorithm:"(1 2)←3←4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:8,feedbackEnvelope:"twang 3",operators:[{frequency:"~1×",amplitude:13,envelope:"custom"},{frequency:"2×",amplitude:10,envelope:"custom"},{frequency:"5×",amplitude:5,envelope:"twang 3"},{frequency:"11×",amplitude:8,envelope:"tremolo5"}]}},{name:"flutter pad",midiProgram:90,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:86,filterEnvelope:"twang 3",vibrato:"delayed",algorithm:"(1 2)←(3 4)",feedbackType:"1⟲ 2⟲ 3⟲",feedbackAmplitude:9,feedbackEnvelope:"steady",operators:[{frequency:"1×",amplitude:13,envelope:"custom"},{frequency:"5×",amplitude:7,envelope:"custom"},{frequency:"7×",amplitude:5,envelope:"tremolo1"},{frequency:"~1×",amplitude:6,envelope:"punch"}]}},{name:"feedback pad",midiProgram:89,settings:{type:"FM",effects:"reverb",transition:"soft fade",chord:"custom interval",filterCutoffHz:8e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1 2 3 4",feedbackType:"1⟲ 2⟲ 3⟲ 4⟲",feedbackAmplitude:7,feedbackEnvelope:"swell 2",operators:[{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"1×",amplitude:15,envelope:"custom"},{frequency:"~1×",amplitude:15,envelope:"custom"}]}}])},{name:"Drum Presets",presets:o([{name:"standard drumset",midiProgram:116,isNoise:!0,settings:{type:"drumset",effects:"reverb",drums:[{filterEnvelope:"twang 1",spectrum:[57,71,71,86,86,86,71,71,71,71,57,57,57,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29,29]},{filterEnvelope:"twang 1",spectrum:[0,0,0,100,71,71,57,86,57,57,57,71,43,43,57,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,100,57,43,43,29,57,43,29,71,43,43,43,43,57,43,43,43,43,43,43,43,43,29,43,43,43]},{filterEnvelope:"twang 1",spectrum:[0,0,0,0,0,71,57,43,43,43,57,57,43,29,57,43,43,43,29,43,57,43,43,43,43,43,43,29,43,43]},{filterEnvelope:"decay 2",spectrum:[0,14,29,43,86,71,29,43,43,43,43,29,71,29,71,29,43,43,43,43,57,43,43,57,43,43,43,57,57,57]},{filterEnvelope:"decay 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,57,71,71,71,71,71,71,71,71,57,57,57,57,43,43,43]},{filterEnvelope:"twang 3",spectrum:[43,43,43,71,29,29,43,43,43,29,43,43,43,29,29,43,43,29,29,29,57,14,57,43,43,57,43,43,57,57]},{filterEnvelope:"decay 3",spectrum:[29,43,43,43,43,29,29,43,29,29,43,29,14,29,43,29,43,29,57,29,43,57,43,71,43,71,57,57,71,71]},{filterEnvelope:"twang 3",spectrum:[43,29,29,43,29,29,29,57,29,29,29,57,43,43,29,29,57,43,43,43,71,43,43,71,57,71,71,71,71,71]},{filterEnvelope:"decay 3",spectrum:[57,57,57,43,57,57,43,43,57,43,43,43,71,57,43,57,86,71,57,86,71,57,86,100,71,86,86,86,86,86]},{filterEnvelope:"flare 1",spectrum:[0,0,14,14,14,14,29,29,29,43,43,43,57,57,71,71,86,86,100,100,100,100,100,100,100,100,86,57,29,0]},{filterEnvelope:"decay 2",spectrum:[14,14,14,14,29,14,14,29,14,43,14,43,57,86,57,57,100,57,43,43,57,100,57,43,29,14,0,0,0,0]}]}},{name:"steel pan",midiProgram:114,generalMidi:!0,settings:{type:"FM",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"decay 2",vibrato:"none",algorithm:"1←(2 3←4)",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"~1×",amplitude:14,envelope:"custom"},{frequency:"7×",amplitude:3,envelope:"flare 1"},{frequency:"3×",amplitude:5,envelope:"flare 2"},{frequency:"4×",amplitude:4,envelope:"swell 2"}]}},{name:"steel pan synth",midiProgram:114,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"twang 1",vibrato:"none",algorithm:"1 2 3←4",feedbackType:"1⟲",feedbackAmplitude:5,feedbackEnvelope:"flare 1",operators:[{frequency:"~1×",amplitude:12,envelope:"custom"},{frequency:"2×",amplitude:15,envelope:"custom"},{frequency:"4×",amplitude:14,envelope:"flare 1"},{frequency:"~1×",amplitude:3,envelope:"flare 2"}]}},{name:"timpani",midiProgram:47,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"twang 2",spectrum:[100,0,0,0,86,0,0,71,0,14,43,14,43,43,0,29,43,29,29,29,43,29,43,29,43,43,43,43,43,43]}},{name:"dark strike",midiProgram:47,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:29,filterEnvelope:"twang 2",spectrum:[0,0,0,0,14,14,14,29,29,43,43,86,43,43,43,29,86,29,29,29,86,29,14,14,14,14,0,0,0,0]}},{name:"woodblock",midiProgram:115,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:14,filterEnvelope:"twang 1",spectrum:[0,14,29,43,43,57,86,86,71,57,57,43,43,57,86,86,43,43,71,57,57,57,57,57,86,86,71,71,71,71]}},{name:"taiko drum",midiProgram:116,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:29,filterEnvelope:"twang 1",spectrum:[71,100,100,43,43,71,71,43,43,43,43,43,43,57,29,57,43,57,43,43,57,43,43,43,43,43,43,43,43,43]}},{name:"melodic drum",midiProgram:117,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2828,filterResonance:43,filterEnvelope:"twang 1",spectrum:[100,71,71,57,57,43,43,71,43,43,43,57,43,43,57,43,43,43,43,29,29,29,29,29,29,29,29,29,29,29]}},{name:"drum synth",midiProgram:118,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:4e3,filterResonance:43,filterEnvelope:"decay 1",spectrum:[100,86,71,57,43,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29]}},{name:"tom-tom",midiProgram:116,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"twang 1",spectrum:[100,29,14,0,0,86,14,43,29,86,29,14,29,57,43,43,43,43,57,43,43,43,29,57,43,43,43,43,43,43]}},{name:"metal pipe",midiProgram:117,isNoise:!0,midiSubharmonicOctaves:-1.5,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:8e3,filterResonance:14,filterEnvelope:"twang 2",spectrum:[29,43,86,43,43,43,43,43,100,29,14,14,100,14,14,0,0,0,0,0,14,29,29,14,0,0,14,29,0,0]}}])},{name:"Novelty Presets",presets:o([{name:"guitar fret noise",midiProgram:120,generalMidi:!0,settings:{type:"spectrum",effects:"reverb",transition:"hard",chord:"harmony",filterCutoffHz:8e3,filterResonance:86,filterEnvelope:"flare 1",spectrum:[0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,29,14,0,0,43,0,43,0,71,43,0,57,0]}},{name:"fifth saw lead",midiProgram:86,generalMidi:!0,midiSubharmonicOctaves:1,settings:{type:"chip",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2828,filterResonance:57,filterEnvelope:"twang 3",wave:"sawtooth",interval:"fifth",vibrato:"none"}},{name:"fifth swell",midiProgram:86,midiSubharmonicOctaves:1,settings:{type:"chip",effects:"chorus & reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:57,filterEnvelope:"swell 3",wave:"sawtooth",interval:"fifth",vibrato:"none"}},{name:"soundtrack",midiProgram:97,generalMidi:!0,settings:{type:"chip",effects:"chorus & reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"flare 3",wave:"sawtooth",interval:"fifth",vibrato:"none"}},{name:"reverse cymbal",midiProgram:119,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"none",transition:"soft",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[29,57,57,29,57,57,29,29,43,29,29,43,29,29,57,57,14,57,14,57,71,71,57,86,57,100,86,86,86,86]}},{name:"seashore",midiProgram:122,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",transition:"soft fade",effects:"reverb",chord:"harmony",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"swell 3",spectrum:[14,14,29,29,43,43,43,57,57,57,57,57,57,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,57]}},{name:"bird tweet",midiProgram:123,generalMidi:!0,settings:{type:"harmonics",effects:"reverb",transition:"soft",chord:"strum",filterCutoffHz:2828,filterResonance:0,filterEnvelope:"decay 1",interval:"hum",vibrato:"heavy",harmonics:[0,0,14,100,14,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"telephone ring",midiProgram:124,generalMidi:!0,settings:{type:"FM",effects:"reverb",transition:"hard",chord:"arpeggio",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"tremolo4",vibrato:"none",algorithm:"1←(2 3 4)",feedbackType:"1⟲",feedbackAmplitude:2,feedbackEnvelope:"steady",operators:[{frequency:"2×",amplitude:12,envelope:"custom"},{frequency:"1×",amplitude:4,envelope:"tremolo1"},{frequency:"20×",amplitude:1,envelope:"steady"},{frequency:"1×",amplitude:0,envelope:"steady"}]}},{name:"helicopter",midiProgram:125,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-.5,settings:{type:"spectrum",effects:"reverb",transition:"seamless",chord:"arpeggio",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"tremolo4",spectrum:[14,43,43,57,57,57,71,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,71,71,71,57,57]}},{name:"applause",midiProgram:126,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-3,settings:{type:"spectrum",effects:"reverb",transition:"soft fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 3",spectrum:[14,14,29,29,29,43,43,57,71,71,86,86,86,71,71,57,57,57,71,86,86,86,86,86,71,71,57,57,57,57]}},{name:"gunshot",midiProgram:127,generalMidi:!0,isNoise:!0,midiSubharmonicOctaves:-2,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"strum",filterCutoffHz:1414,filterResonance:29,filterEnvelope:"twang 1",spectrum:[14,29,43,43,57,57,57,71,71,71,86,86,86,86,86,86,86,86,86,86,86,71,71,71,71,57,57,57,57,43]}},{name:"scoot",midiProgram:92,settings:{type:"chip",transition:"hard",effects:"reverb",chord:"harmony",filterCutoffHz:707,filterResonance:86,filterEnvelope:"flare 1",wave:"sawtooth",interval:"shimmer",vibrato:"none"}},{name:"buzz saw",midiProgram:30,settings:{type:"FM",effects:"reverb",transition:"soft",chord:"custom interval",filterCutoffHz:2e3,filterResonance:0,filterEnvelope:"steady",vibrato:"none",algorithm:"1←2←3←4",feedbackType:"1⟲",feedbackAmplitude:0,feedbackEnvelope:"steady",operators:[{frequency:"5×",amplitude:13,envelope:"custom"},{frequency:"1×",amplitude:10,envelope:"steady"},{frequency:"~1×",amplitude:6,envelope:"steady"},{frequency:"11×",amplitude:12,envelope:"steady"}]}},{name:"mosquito",midiProgram:93,settings:{type:"PWM",effects:"reverb",transition:"cross fade",chord:"harmony",filterCutoffHz:2828,filterResonance:57,filterEnvelope:"steady",pulseWidth:4,pulseEnvelope:"tremolo6",vibrato:"shaky"}},{name:"breathing",midiProgram:126,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"spectrum",effects:"reverb",transition:"hard fade",chord:"harmony",filterCutoffHz:2e3,filterResonance:14,filterEnvelope:"swell 2",spectrum:[14,14,14,29,29,29,29,29,43,29,29,43,43,43,29,29,71,43,86,86,57,100,86,86,86,86,71,86,71,57]}},{name:"klaxon synth",midiProgram:125,isNoise:!0,midiSubharmonicOctaves:-1,settings:{type:"noise",effects:"reverb",transition:"slide",chord:"harmony",filterCutoffHz:2e3,filterResonance:86,filterEnvelope:"steady",wave:"buzz"}},{name:"theremin",midiProgram:40,settings:{type:"harmonics",effects:"reverb",transition:"slide",chord:"harmony",filterCutoffHz:4e3,filterResonance:14,filterEnvelope:"steady",interval:"union",vibrato:"heavy",harmonics:[100,71,57,43,29,29,14,14,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},{name:"sonar ping",midiProgram:121,settings:{type:"spectrum",effects:"reverb",transition:"medium fade",chord:"harmony",filterCutoffHz:1414,filterResonance:14,filterEnvelope:"twang 2",spectrum:[100,43,29,29,14,14,14,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}])}]);class m{constructor(){this.t=1,this.i=[void 0],this.o=0,this.l=0,this.h=0}pushFront(e){this.h>=this.t&&this.m(),this.l=this.l-1&this.o,this.i[this.l]=e,this.h++}pushBack(e){this.h>=this.t&&this.m(),this.i[this.l+this.h&this.o]=e,this.h++}popFront(){if(this.h<=0)throw new Error("No elements left to pop.");const e=this.i[this.l];return this.i[this.l]=void 0,this.l=this.l+1&this.o,this.h--,e}popBack(){if(this.h<=0)throw new Error("No elements left to pop.");this.h--;const e=this.l+this.h&this.o,t=this.i[e];return this.i[e]=void 0,t}peakFront(){if(this.h<=0)throw new Error("No elements left to pop.");return this.i[this.l]}peakBack(){if(this.h<=0)throw new Error("No elements left to pop.");return this.i[this.l+this.h-1&this.o]}count(){return this.h}set(e,t){if(e<0||e>=this.h)throw new Error("Invalid index");this.i[this.l+e&this.o]=t}get(e){if(e<0||e>=this.h)throw new Error("Invalid index");return this.i[this.l+e&this.o]}remove(e){if(e<0||e>=this.h)throw new Error("Invalid index");if(e<=this.h>>1){for(;e>0;)this.set(e,this.get(e-1)),e--;this.popFront()}else{for(e++;e<this.h;)this.set(e-1,this.get(e)),e++;this.popBack()}}m(){if(this.t>=1073741824)throw new Error("Capacity too big.");this.t=this.t<<1;const e=this.i,t=new Array(this.t),i=0|this.h,s=0|this.l;for(let r=0;r<i;r++)t[r]=e[s+r&this.o];for(let e=i;e<this.t;e++)t[e]=void 0;this.l=0,this.i=t,this.o=this.t-1}}const u=[48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,45,95],d=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,62,0,0,1,2,3,4,5,6,7,8,9,0,0,0,0,0,0,0,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,0,0,0,0,63,0,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,0,0,0,0,0];class p{constructor(e,t,i){this.u=[],this.p=0;for(let s=t;s<i;s++){const t=d[e.charCodeAt(s)];this.u.push(t>>5&1),this.u.push(t>>4&1),this.u.push(t>>3&1),this.u.push(t>>2&1),this.u.push(t>>1&1),this.u.push(1&t)}}read(e){let t=0;for(;e>0;)t<<=1,t+=this.u[this.p++],e--;return t}readLongTail(e,t){let i=e,s=t;for(;this.u[this.p++];)i+=1<<s,s++;for(;s>0;)s--,this.u[this.p++]&&(i+=1<<s);return i}readPartDuration(){return this.readLongTail(1,3)}readLegacyPartDuration(){return this.readLongTail(1,2)}readPinCount(){return this.readLongTail(1,0)}readPitchInterval(){return this.read(1)?-this.readLongTail(1,3):this.readLongTail(1,3)}}class v{constructor(){this.v=0,this.u=[]}clear(){this.v=0}write(e,t){for(e--;e>=0;)this.u[this.v++]=t>>>e&1,e--}writeLongTail(e,t,i){if(i<e)throw new Error("value out of bounds");i-=e;let s=t;for(;i>=1<<s;)this.u[this.v++]=1,i-=1<<s,s++;for(this.u[this.v++]=0;s>0;)s--,this.u[this.v++]=i>>>s&1}writePartDuration(e){this.writeLongTail(1,3,e)}writePinCount(e){this.writeLongTail(1,0,e)}writePitchInterval(e){e<0?(this.write(1,1),this.writeLongTail(1,3,-e)):(this.write(1,0),this.writeLongTail(1,3,e))}concat(e){for(let t=0;t<e.v;t++)this.u[this.v++]=e.u[t]}encodeBase64(e){for(let t=0;t<this.v;t+=6){const i=this.u[t]<<5|this.u[t+1]<<4|this.u[t+2]<<3|this.u[t+3]<<2|this.u[t+4]<<1|this.u[t+5];e.push(u[i])}return e}lengthBase64(){return Math.ceil(this.v/6)}}function y(e,t,i){return{interval:e,time:t,volume:i}}function b(e,t,i){return i<=(t-=1)?i>=e?i:e:t}function g(e,t,i){if(e<=i&&i<=t)return i;throw new Error(`Value ${i} not in range [${e}, ${t}]`)}class M{constructor(e,t,i,s,r=!1){this.pitches=[e],this.pins=[y(0,0,s),y(0,i-t,r?0:s)],this.start=t,this.end=i}pickMainInterval(){let e=0,t=0;for(let i=1;i<this.pins.length;i++){const s=this.pins[i-1],r=this.pins[i];if(s.interval==r.interval){const i=r.time-s.time;e<i&&(e=i,t=s.interval)}}if(0==e){let e=0;for(let i=0;i<this.pins.length;i++){const s=this.pins[i];e<s.volume&&(e=s.volume,t=s.interval)}}return t}clone(){const e=new M(-1,this.start,this.end,6);e.pitches=this.pitches.concat(),e.pins=[];for(const t of this.pins)e.pins.push(y(t.interval,t.time,t.volume));return e}}class k{constructor(){this.notes=[],this.instrument=0}cloneNotes(){const e=[];for(const t of this.notes)e.push(t.clone());return e}reset(){this.notes.length=0,this.instrument=0}}class w{constructor(e){this.frequency=0,this.amplitude=0,this.envelope=0,this.reset(e)}reset(e){this.frequency=0,this.amplitude=e<=1?t.operatorAmplitudeMax:0,this.envelope=0==e?0:1}copy(e){this.frequency=e.frequency,this.amplitude=e.amplitude,this.envelope=e.envelope}}class q{constructor(e){this.spectrum=[],this.g=null,this.M=!1,this.reset(e)}reset(e){for(let i=0;i<t.spectrumControlPoints;i++)if(e)this.spectrum[i]=Math.round(t.spectrumMax*(1/Math.sqrt(1+i/3)));else{const e=0==i||7==i||11==i||14==i||16==i||18==i||21==i||23==i||i>=25;this.spectrum[i]=e?Math.max(0,Math.round(t.spectrumMax*(1-i/30))):0}this.M=!1}markCustomWaveDirty(){this.M=!1}getCustomWave(e){if(!this.M||null==this.g){let s=t.chipNoiseLength;null!=this.g&&this.g.length==s+1||(this.g=new Float32Array(s+1));const r=this.g;for(let e=0;e<s;e++)r[e]=0;const a=14,o=.25,l=[0,1/7,Math.log(5/4)/Math.LN2,3/7,Math.log(1.5)/Math.LN2,5/7,6/7];function i(i){return e+Math.floor(i/t.spectrumControlPointsPerOctave)+l[(i+t.spectrumControlPointsPerOctave)%t.spectrumControlPointsPerOctave]}let f=1;for(let e=0;e<t.spectrumControlPoints+1;e++){const s=e<=0?0:this.spectrum[e-1],l=e>=t.spectrumControlPoints?this.spectrum[t.spectrumControlPoints-1]:this.spectrum[e],h=i(e-1);let c=i(e);e>=t.spectrumControlPoints&&(c=a+(c-a)*o),0==s&&0==l||(f+=.02*n(r,h,c,s/t.spectrumMax,l/t.spectrumMax,-.5))}this.spectrum[t.spectrumControlPoints-1]>0&&(f+=.02*n(r,a+(i(t.spectrumControlPoints)-a)*o,a,this.spectrum[t.spectrumControlPoints-1]/t.spectrumMax,0,-.5)),c(r,s),h(r,5/(Math.sqrt(s)*Math.pow(f,.75))),r[s]=r[0],this.M=!0}return this.g}}class E{constructor(){this.harmonics=[],this.g=null,this.M=!1,this.reset()}reset(){for(let e=0;e<t.harmonicsControlPoints;e++)this.harmonics[e]=0;this.harmonics[0]=t.harmonicsMax,this.harmonics[3]=t.harmonicsMax,this.harmonics[6]=t.harmonicsMax,this.M=!1}markCustomWaveDirty(){this.M=!1}getCustomWave(){if(!this.M||null==this.g){let e=t.harmonicsWavelength;const i=r(0);null!=this.g&&this.g.length==e+1||(this.g=new Float32Array(e+1));const s=this.g;for(let t=0;t<e;t++)s[t]=0;const n=-.25;let a=1;for(let r=0;r<t.harmonicsRendered;r++){const o=r+1;let l=r<t.harmonicsControlPoints?this.harmonics[r]:this.harmonics[t.harmonicsControlPoints-1];r>=t.harmonicsControlPoints&&(l*=1-(r-t.harmonicsControlPoints)/(t.harmonicsRendered-t.harmonicsControlPoints));const h=l/t.harmonicsMax;let f=Math.pow(2,l-t.harmonicsMax+1)*Math.sqrt(h);r<t.harmonicsControlPoints&&(a+=f),f*=Math.pow(o,n),f*=i[r+589],s[e-o]=f}c(s,e);const o=1/Math.pow(a,.7);let l=0,h=0;for(let e=0;e<s.length;e++)l+=h,h=s[e]*o,s[e]=l;s[e]=s[0],this.M=!0}return this.g}}class P{constructor(i,s){if(this.type=0,this.preset=0,this.chipWave=2,this.chipNoise=1,this.filterCutoff=12,this.filterResonance=0,this.filterEnvelope=1,this.transition=1,this.vibrato=0,this.vibratoDepth=0,this.vibratoSpeed=10,this.vibratoDelay=0,this.vibratoType=0,this.interval=0,this.effects=0,this.chord=1,this.volume=0,this.pan=t.panCenter,this.panDelay=10,this.arpeggioSpeed=12,this.fastTwoNoteArp=!1,this.tieNoteTransition=!1,this.clicklessTransition=!1,this.detune=0,this.pulseWidth=t.pulseWidthRange,this.pulseEnvelope=1,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0,this.feedbackEnvelope=1,this.LFOtime=0,this.nextLFOtime=0,this.arpTime=0,this.customChipWave=new Float64Array(64),this.customChipWaveIntegral=new Float64Array(65),this.operators=[],this.harmonicsWave=new E,this.drumsetEnvelopes=[],this.drumsetSpectrumWaves=[],this.modChannels=[],this.modStatuses=[],this.modInstruments=[],this.modSettings=[],s)for(let i=0;i<t.modCount;i++)this.modChannels.push(0),this.modStatuses.push(e.ModStatus.msNone),this.modInstruments.push(0),this.modSettings.push(e.ModSetting.mstNone);this.spectrumWave=new q(i);for(let e=0;e<t.operatorCount;e++)this.operators[e]=new w(e);for(let e=0;e<t.drumCount;e++)this.drumsetEnvelopes[e]=t.envelopes.dictionary["twang 2"].index,this.drumsetSpectrumWaves[e]=new q(!0);for(let e=0;e<64;e++)this.customChipWave[e]=24-Math.floor(.75*e);let r=0;for(let e=0;e<this.customChipWave.length;e++)r+=this.customChipWave[e];const n=r/this.customChipWave.length;let a=0,o=0;for(let e=0;e<this.customChipWave.length;e++)a+=o,o=this.customChipWave[e]-n,this.customChipWaveIntegral[e]=a;this.customChipWaveIntegral[64]=0}setTypeAndReset(i,s,r){switch(r&&(i=8),this.type=i,this.preset=i,this.volume=0,this.pan=t.panCenter,this.panDelay=10,this.arpeggioSpeed=12,this.detune=0,this.tieNoteTransition=!1,this.clicklessTransition=!1,i){case 0:this.chipWave=2,this.filterCutoff=6,this.filterResonance=0,this.filterEnvelope=t.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=2;break;case 7:this.chipWave=2,this.filterCutoff=6,this.filterResonance=0,this.filterEnvelope=t.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=2;for(let e=0;e<64;e++)this.customChipWave[e]=24-Math.floor(.75*e);let r=0;for(let e=0;e<this.customChipWave.length;e++)r+=this.customChipWave[e];const n=r/this.customChipWave.length;let a=0,o=0;for(let e=0;e<this.customChipWave.length;e++)a+=o,o=this.customChipWave[e]-n,this.customChipWaveIntegral[e]=a;this.customChipWaveIntegral[64]=0;break;case 1:this.transition=1,this.vibrato=0,this.effects=1,this.chord=3,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=1,this.algorithm=0,this.feedbackType=0,this.feedbackAmplitude=0,this.feedbackEnvelope=t.envelopes.dictionary.steady.index;for(let e=0;e<this.operators.length;e++)this.operators[e].reset(e);break;case 2:this.chipNoise=1,this.transition=1,this.effects=0,this.chord=2,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.envelopes.dictionary.steady.index;break;case 3:this.transition=1,this.effects=1,this.chord=0,this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.envelopes.dictionary.steady.index,this.spectrumWave.reset(s);break;case 4:this.effects=0;for(let e=0;e<t.drumCount;e++)this.drumsetEnvelopes[e]=t.envelopes.dictionary["twang 2"].index,null==this.drumsetSpectrumWaves[e]&&(this.drumsetSpectrumWaves[e]=new q(!0)),this.drumsetSpectrumWaves[e].reset(s);break;case 5:this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=0,this.harmonicsWave.reset();break;case 6:this.filterCutoff=10,this.filterResonance=0,this.filterEnvelope=t.envelopes.dictionary.steady.index,this.transition=1,this.vibrato=0,this.interval=0,this.effects=1,this.chord=2,this.pulseWidth=t.pulseWidthRange,this.pulseEnvelope=t.envelopes.dictionary["twang 2"].index;break;case 8:this.transition=0,this.vibrato=0,this.interval=0,this.effects=0,this.chord=0,this.modChannels=[],this.modStatuses=[],this.modInstruments=[],this.modSettings=[];for(let i=0;i<t.modCount;i++)this.modChannels.push(0),this.modStatuses.push(e.ModStatus.msNone),this.modInstruments.push(0),this.modSettings.push(e.ModSetting.mstNone);break;default:throw new Error("Unrecognized instrument type: "+i)}}toJsonObject(){const e={type:t.instrumentTypeNames[this.type],volume:this.volume,pan:100*(this.pan-t.panCenter)/t.panCenter,panDelay:this.panDelay,arpeggioSpeed:this.arpeggioSpeed,fastTwoNoteArp:this.fastTwoNoteArp,tieNoteTransition:this.tieNoteTransition,clicklessTransition:this.clicklessTransition,vibrato:this.vibrato,vibratoDepth:this.vibratoDepth,vibratoDelay:this.vibratoDelay,vibratoSpeed:this.vibratoSpeed,vibratoType:this.vibratoType,detune:this.detune,effects:t.effectsNames[this.effects]};if(this.preset!=this.type&&(e.preset=this.preset),4!=this.type&&(e.transition=t.transitions[this.transition].name,e.chord=this.getChord().name,e.filterCutoffHz=Math.round(t.filterCutoffMaxHz*Math.pow(2,this.getFilterCutoffOctaves())),e.filterResonance=Math.round(100*this.filterResonance/(t.filterResonanceRange-1)),e.filterEnvelope=this.getFilterEnvelope().name),2==this.type)e.wave=t.chipNoises[this.chipNoise].name;else if(3==this.type){e.spectrum=[];for(let i=0;i<t.spectrumControlPoints;i++)e.spectrum[i]=Math.round(100*this.spectrumWave.spectrum[i]/t.spectrumMax)}else if(4==this.type){e.drums=[];for(let i=0;i<t.drumCount;i++){const s=[];for(let e=0;e<t.spectrumControlPoints;e++)s[e]=Math.round(100*this.drumsetSpectrumWaves[i].spectrum[e]/t.spectrumMax);e.drums[i]={filterEnvelope:this.getDrumsetEnvelope(i).name,spectrum:s}}}else if(0==this.type)e.wave=t.chipWaves[this.chipWave].name,e.interval=t.intervals[this.interval].name,5!=this.vibrato?e.vibrato=t.vibratos[this.vibrato].name:e.vibrato="custom";else if(7==this.type){e.wave=t.chipWaves[this.chipWave].name,e.interval=t.intervals[this.interval].name,5!=this.vibrato?e.vibrato=t.vibratos[this.vibrato].name:e.vibrato="custom",e.customChipWave=new Float64Array(64),e.customChipWaveIntegral=new Float64Array(65);for(let t=0;t<this.customChipWave.length;t++)e.customChipWave[t]=this.customChipWave[t];e.customChipWaveIntegral[64]=0}else if(6==this.type)e.pulseWidth=this.pulseWidth,e.pulseEnvelope=t.envelopes[this.pulseEnvelope].name,5!=this.vibrato?e.vibrato=t.vibratos[this.vibrato].name:e.vibrato="custom";else if(5==this.type){e.interval=t.intervals[this.interval].name,5!=this.vibrato?e.vibrato=t.vibratos[this.vibrato].name:e.vibrato="custom",e.harmonics=[];for(let i=0;i<t.harmonicsControlPoints;i++)e.harmonics[i]=Math.round(100*this.harmonicsWave.harmonics[i]/t.harmonicsMax)}else if(1==this.type){const i=[];for(const e of this.operators)i.push({frequency:t.operatorFrequencies[e.frequency].name,amplitude:e.amplitude,envelope:t.envelopes[e.envelope].name});5!=this.vibrato?e.vibrato=t.vibratos[this.vibrato].name:e.vibrato="custom",e.algorithm=t.algorithms[this.algorithm].name,e.feedbackType=t.feedbacks[this.feedbackType].name,e.feedbackAmplitude=this.feedbackAmplitude,e.feedbackEnvelope=t.envelopes[this.feedbackEnvelope].name,e.operators=i}else{if(8!=this.type)throw new Error("Unrecognized instrument type");e.modChannels=[],e.modInstruments=[],e.modSettings=[],e.modStatuses=[];for(let i=0;i<t.modCount;i++)e.modChannels[i]=this.modChannels[i],e.modInstruments[i]=this.modInstruments[i],e.modSettings[i]=this.modSettings[i],e.modStatuses[i]=this.modStatuses[i]}return e}fromJsonObject(e,i,s,r,n){null==e&&(e={});let a=t.instrumentTypeNames.indexOf(e.type);-1==a.valueOf()&&(a=s?8:i?2:0),this.setTypeAndReset(a,i,s),null!=e.preset&&(this.preset=e.preset>>>0),null!=e.volume?this.volume=b(-t.volumeRange/2,t.volumeRange/2,0|e.volume):this.volume=0,null!=e.pan?this.pan=b(0,t.panMax+1,Math.round(t.panCenter+(0|e.pan)*t.panCenter/100)):this.pan=t.panCenter,null!=e.panDelay?this.panDelay=0|e.panDelay:this.panDelay=10,null!=e.detune?this.detune=b(t.detuneMin,t.detuneMax+1,0|e.detune):this.detune=0;const o={binary:0,sudden:1,smooth:2},l=e.transition||e.envelope;if(this.transition=null!=o[l]?o[l]:t.transitions.findIndex((e=>e.name==l)),-1==this.transition&&(this.transition=1),this.effects=t.effectsNames.indexOf(e.effects),-1==this.effects&&(this.effects=2==this.type?0:1),null!=e.filterCutoffHz?this.filterCutoff=b(0,t.filterCutoffRange,Math.round(t.filterCutoffRange-1+2*Math.log((0|e.filterCutoffHz)/t.filterCutoffMaxHz)/Math.LN2)):this.filterCutoff=0==this.type?6:10,null!=e.filterResonance?this.filterResonance=b(0,t.filterResonanceRange,Math.round((t.filterResonanceRange-1)*(0|e.filterResonance)/100)):this.filterResonance=0,this.filterEnvelope=t.envelopes.findIndex((t=>t.name==e.filterEnvelope)),-1==this.filterEnvelope&&(this.filterEnvelope=t.envelopes.dictionary.steady.index),null!=e.filter){const t=[20,12,6,0,16,10,4],i=[1,1,1,1,18,19,20],s=["none","bright","medium","soft","decay bright","decay medium","decay soft"],r={"sustain sharp":1,"sustain medium":2,"sustain soft":3,"decay sharp":4};let n=null!=r[e.filter]?r[e.filter]:s.indexOf(e.filter);-1==n&&(n=0),this.filterCutoff=t[n],this.filterEnvelope=i[n],this.filterResonance=0}const h=["none","vibrato light","vibrato delayed","vibrato heavy"];if(2==this.type)this.chipNoise=t.chipNoises.findIndex((t=>t.name==e.wave)),-1==this.chipNoise&&(this.chipNoise=1),this.chord=t.chords.findIndex((t=>t.name==e.chord)),-1==this.chord&&(this.chord=2);else if(3==this.type){if(null!=e.spectrum)for(let i=0;i<t.spectrumControlPoints;i++)this.spectrumWave.spectrum[i]=Math.max(0,Math.min(t.spectrumMax,Math.round(t.spectrumMax*+e.spectrum[i]/100)));this.chord=t.chords.findIndex((t=>t.name==e.chord)),-1==this.chord&&(this.chord=0)}else if(4==this.type){if(null!=e.drums)for(let i=0;i<t.drumCount;i++){const s=e.drums[i];if(null!=s&&(null!=s.filterEnvelope&&(this.drumsetEnvelopes[i]=t.envelopes.findIndex((e=>e.name==s.filterEnvelope)),-1==this.drumsetEnvelopes[i]&&(this.drumsetEnvelopes[i]=t.envelopes.dictionary["twang 2"].index)),null!=s.spectrum))for(let e=0;e<t.spectrumControlPoints;e++)this.drumsetSpectrumWaves[i].spectrum[e]=Math.max(0,Math.min(t.spectrumMax,Math.round(t.spectrumMax*+s.spectrum[e]/100)))}}else if(5==this.type){if(null!=e.harmonics)for(let i=0;i<t.harmonicsControlPoints;i++)this.harmonicsWave.harmonics[i]=Math.max(0,Math.min(t.harmonicsMax,Math.round(t.harmonicsMax*+e.harmonics[i]/100)));null!=e.interval&&(this.interval=t.intervals.findIndex((t=>t.name==e.interval)),-1==this.interval&&(this.interval=0)),null!=e.vibrato&&(this.vibrato=t.vibratos.findIndex((t=>t.name==e.vibrato)),-1==this.vibrato&&(this.vibrato=t.vibratos.length),this.vibrato==t.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=t.vibratos[this.vibrato].amplitude,this.vibratoDelay=t.vibratos[this.vibrato].delayParts,this.vibratoSpeed=10,this.vibratoType=t.vibratos[this.vibrato].type)),this.chord=t.chords.findIndex((t=>t.name==e.chord)),-1==this.chord&&(this.chord=0)}else if(6==this.type)null!=e.pulseWidth?this.pulseWidth=b(0,t.pulseWidthRange+1,Math.round(e.pulseWidth)):this.pulseWidth=t.pulseWidthRange,null!=e.pulseEnvelope&&(this.pulseEnvelope=t.envelopes.findIndex((t=>t.name==e.pulseEnvelope)),-1==this.pulseEnvelope&&(this.pulseEnvelope=t.envelopes.dictionary.steady.index)),null!=e.vibrato&&(this.vibrato=t.vibratos.findIndex((t=>t.name==e.vibrato)),-1==this.vibrato&&(this.vibrato=t.vibratos.length),this.vibrato==t.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=t.vibratos[this.vibrato].amplitude,this.vibratoDelay=t.vibratos[this.vibrato].delayParts,this.vibratoSpeed=10,this.vibratoType=t.vibratos[this.vibrato].type)),this.chord=t.chords.findIndex((t=>t.name==e.chord)),-1==this.chord&&(this.chord=0);else if(0==this.type){const i={triangle:1,square:2,"pulse wide":3,"pulse narrow":4,sawtooth:5,"double saw":6,"double pulse":7,spiky:8,plateau:0};if(this.chipWave=null!=i[e.wave]?i[e.wave]:t.chipWaves.findIndex((t=>t.name==e.wave)),-1==this.chipWave&&(this.chipWave=1),null!=e.interval)this.interval=t.intervals.findIndex((t=>t.name==e.interval)),-1==this.interval&&(this.interval=0);else if(null!=e.chorus){const i={fifths:5,octaves:6};this.interval=null!=i[e.chorus]?i[e.chorus]:t.intervals.findIndex((t=>t.name==e.chorus)),-1==this.interval&&(this.interval=0)}null!=e.vibrato?(this.vibrato=t.vibratos.findIndex((t=>t.name==e.vibrato)),-1==this.vibrato&&(this.vibrato=t.vibratos.length),this.vibrato==t.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=t.vibratos[this.vibrato].amplitude,this.vibratoDelay=t.vibratos[this.vibrato].delayParts,this.vibratoSpeed=10,this.vibratoType=t.vibratos[this.vibrato].type)):null!=e.effect&&(this.vibrato=h.indexOf(e.effect),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.chords.findIndex((t=>t.name==e.chord)),-1==this.chord&&(this.chord=2),"custom harmony"==e.chorus&&(this.interval=2,this.chord=3)}else if(1==this.type){null!=e.vibrato?(this.vibrato=t.vibratos.findIndex((t=>t.name==e.vibrato)),-1==this.vibrato&&(this.vibrato=t.vibratos.length),this.vibrato==t.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=t.vibratos[this.vibrato].amplitude,this.vibratoDelay=t.vibratos[this.vibrato].delayParts,this.vibratoSpeed=10,this.vibratoType=t.vibratos[this.vibrato].type)):null!=e.effect&&(this.vibrato=h.indexOf(e.effect),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.chords.findIndex((t=>t.name==e.chord)),-1==this.chord&&(this.chord=3),this.algorithm=t.algorithms.findIndex((t=>t.name==e.algorithm)),-1==this.algorithm&&(this.algorithm=0),this.feedbackType=t.feedbacks.findIndex((t=>t.name==e.feedbackType)),-1==this.feedbackType&&(this.feedbackType=0),null!=e.feedbackAmplitude?this.feedbackAmplitude=b(0,t.operatorAmplitudeMax+1,0|e.feedbackAmplitude):this.feedbackAmplitude=0;const i={"pluck 1":6,"pluck 2":7,"pluck 3":8};this.feedbackEnvelope=null!=i[e.feedbackEnvelope]?i[e.feedbackEnvelope]:t.envelopes.findIndex((t=>t.name==e.feedbackEnvelope)),-1==this.feedbackEnvelope&&(this.feedbackEnvelope=0);for(let s=0;s<t.operatorCount;s++){const r=this.operators[s];let n=void 0;e.operators&&(n=e.operators[s]),null==n&&(n={}),r.frequency=t.operatorFrequencies.findIndex((e=>e.name==n.frequency)),-1==r.frequency&&(r.frequency=0),null!=n.amplitude?r.amplitude=b(0,t.operatorAmplitudeMax+1,0|n.amplitude):r.amplitude=0,r.envelope=null!=i[n.envelope]?i[n.envelope]:t.envelopes.findIndex((e=>e.name==n.envelope)),-1==r.envelope&&(r.envelope=0)}}else if(7==this.type){if(null!=e.interval)this.interval=t.intervals.findIndex((t=>t.name==e.interval)),-1==this.interval&&(this.interval=0);else if(null!=e.chorus){const i={fifths:5,octaves:6};this.interval=null!=i[e.chorus]?i[e.chorus]:t.intervals.findIndex((t=>t.name==e.chorus)),-1==this.interval&&(this.interval=0)}if(null!=e.vibrato?(this.vibrato=t.vibratos.findIndex((t=>t.name==e.vibrato)),-1==this.vibrato&&(this.vibrato=t.vibratos.length),this.vibrato==t.vibratos.length?(this.vibratoDepth=e.vibratoDepth,this.vibratoSpeed=e.vibratoSpeed,this.vibratoDelay=e.vibratoDelay,this.vibratoType=e.vibratoType):(this.vibratoDepth=t.vibratos[this.vibrato].amplitude,this.vibratoDelay=t.vibratos[this.vibrato].delayParts,this.vibratoSpeed=10,this.vibratoType=t.vibratos[this.vibrato].type)):null!=e.effect&&(this.vibrato=h.indexOf(e.effect),-1==this.vibrato&&(this.vibrato=0)),this.chord=t.chords.findIndex((t=>t.name==e.chord)),-1==this.chord&&(this.chord=2),"custom harmony"==e.chorus&&(this.interval=2,this.chord=3),e.customChipWave){for(let t=0;t<64;t++)this.customChipWave[t]=e.customChipWave[t];let t=0;for(let e=0;e<this.customChipWave.length;e++)t+=this.customChipWave[e];const i=t/this.customChipWave.length;let s=0,r=0;for(let e=0;e<this.customChipWave.length;e++)s+=r,r=this.customChipWave[e]-i,this.customChipWaveIntegral[e]=s;this.customChipWaveIntegral[64]=0}}else{if(8!=this.type)throw new Error("Unrecognized instrument type.");if(null!=e.modChannels)for(let i=0;i<t.modCount;i++)this.modChannels[i]=e.modChannels[i],this.modInstruments[i]=e.modInstruments[i],this.modSettings[i]=e.modSettings[i],this.modStatuses[i]=e.modStatuses[i]}8!=this.type&&(2==this.chord&&null!=e.arpeggioSpeed?this.arpeggioSpeed=e.arpeggioSpeed:this.arpeggioSpeed=r?9:12,null!=e.fastTwoNoteArp?this.fastTwoNoteArp=e.fastTwoNoteArp:this.fastTwoNoteArp=n,null!=e.tieNoteTransition?this.tieNoteTransition=e.tieNoteTransition:this.tieNoteTransition=!1,null!=e.clicklessTransition?this.clicklessTransition=e.clicklessTransition:this.clicklessTransition=!1)}static frequencyFromPitch(e,i,s){return i*Math.pow(2,e/s-Math.round(t.pitchOctaves/2))}static drumsetIndexReferenceDelta(e){return P.frequencyFromPitch(t.spectrumBasePitch+e*(96-t.spectrumBasePitch)/t.drumCount,440,12)/44100}static k(e){return 15+Math.log(P.drumsetIndexReferenceDelta(e))/Math.LN2}warmUp(){if(this.LFOtime=0,this.nextLFOtime=0,this.arpTime=0,2==this.type)r(this.chipNoise,c,h);else if(5==this.type)this.harmonicsWave.getCustomWave();else if(3==this.type)this.spectrumWave.getCustomWave(8);else if(4==this.type)for(let e=0;e<t.drumCount;e++)this.drumsetSpectrumWaves[e].getCustomWave(P.k(e))}getDrumWave(){if(2==this.type)return r(this.chipNoise,c,h);if(3==this.type)return this.spectrumWave.getCustomWave(8);throw new Error("Unhandled instrument type in getDrumWave")}getDrumsetWave(e,t){if(4==this.type)return this.drumsetSpectrumWaves[e].getCustomWave(P.k(e));throw new Error("Unhandled instrument type in getDrumWave")}getTransition(){return 4==this.type?t.transitions.dictionary["hard fade"]:8==this.type?t.transitions.dictionary.seamless:t.transitions[this.transition]}getChord(){return 4==this.type?t.chords.dictionary.harmony:t.chords[this.chord]}getFilterCutoffOctaves(){return 4==this.type?0:.5*(this.filterCutoff-(t.filterCutoffRange-1))}getFilterIsFirstOrder(){return 4!=this.type&&0==this.filterResonance}getFilterResonance(){return 4==this.type?1:this.filterResonance}getFilterEnvelope(){if(4==this.type)throw new Error("Can't getFilterEnvelope() for drumset.");return t.envelopes[this.filterEnvelope]}getDrumsetEnvelope(e){if(4!=this.type)throw new Error("Can't getDrumsetEnvelope() for non-drumset.");return t.envelopes[this.drumsetEnvelopes[e]]}}var C,R;(C=e.ModStatus||(e.ModStatus={}))[C.msForPitch=0]="msForPitch",C[C.msForNoise=1]="msForNoise",C[C.msForSong=2]="msForSong",C[C.msNone=3]="msNone",(R=e.ModSetting||(e.ModSetting={}))[R.mstNone=0]="mstNone",R[R.mstSongVolume=1]="mstSongVolume",R[R.mstTempo=2]="mstTempo",R[R.mstReverb=3]="mstReverb",R[R.mstNextBar=4]="mstNextBar",R[R.mstInsVolume=5]="mstInsVolume",R[R.mstPan=6]="mstPan",R[R.mstFilterCut=7]="mstFilterCut",R[R.mstFilterPeak=8]="mstFilterPeak",R[R.mstFMSlider1=9]="mstFMSlider1",R[R.mstFMSlider2=10]="mstFMSlider2",R[R.mstFMSlider3=11]="mstFMSlider3",R[R.mstFMSlider4=12]="mstFMSlider4",R[R.mstFMFeedback=13]="mstFMFeedback",R[R.mstPulseWidth=14]="mstPulseWidth",R[R.mstDetune=15]="mstDetune",R[R.mstVibratoDepth=16]="mstVibratoDepth",R[R.mstSongDetune=17]="mstSongDetune",R[R.mstVibratoSpeed=18]="mstVibratoSpeed",R[R.mstVibratoDelay=19]="mstVibratoDelay",R[R.mstArpeggioSpeed=20]="mstArpeggioSpeed",R[R.mstPanDelay=21]="mstPanDelay",R[R.mstResetArpeggio=22]="mstResetArpeggio",R[R.mstMaxValue=23]="mstMaxValue";class z{constructor(){this.octave=0,this.instruments=[],this.patterns=[],this.bars=[],this.muted=!1,this.name=""}}class H{constructor(i){this.channels=[],this.limitDecay=4,this.limitRise=4e3,this.compressionThreshold=1,this.limitThreshold=1,this.compressionRatio=1,this.limitRatio=1,this.masterGain=1,this.inVolumeCap=0,this.outVolumeCap=0,this.mstMaxVols=new Map([[e.ModSetting.mstNone,6],[e.ModSetting.mstSongVolume,100],[e.ModSetting.mstTempo,t.tempoMax-t.tempoMin],[e.ModSetting.mstReverb,t.reverbRange-1],[e.ModSetting.mstNextBar,1],[e.ModSetting.mstInsVolume,t.volumeRange],[e.ModSetting.mstPan,t.panMax],[e.ModSetting.mstFilterCut,t.filterCutoffRange-1],[e.ModSetting.mstFilterPeak,t.filterResonanceRange-1],[e.ModSetting.mstFMSlider1,15],[e.ModSetting.mstFMSlider2,15],[e.ModSetting.mstFMSlider3,15],[e.ModSetting.mstFMSlider4,15],[e.ModSetting.mstFMFeedback,15],[e.ModSetting.mstPulseWidth,t.pulseWidthRange],[e.ModSetting.mstDetune,t.detuneMax-t.detuneMin],[e.ModSetting.mstVibratoDepth,50],[e.ModSetting.mstSongDetune,t.songDetuneMax-t.songDetuneMin],[e.ModSetting.mstVibratoSpeed,30],[e.ModSetting.mstVibratoDelay,50],[e.ModSetting.mstArpeggioSpeed,50],[e.ModSetting.mstPanDelay,20],[e.ModSetting.mstResetArpeggio,1],[e.ModSetting.mstMaxValue,6]]),this.mstNewNoteVols=new Map([[e.ModSetting.mstNone,6],[e.ModSetting.mstSongVolume,100],[e.ModSetting.mstTempo,Math.ceil((t.tempoMax-t.tempoMin)/2)],[e.ModSetting.mstReverb,0],[e.ModSetting.mstNextBar,1],[e.ModSetting.mstInsVolume,Math.ceil(t.volumeRange/2)],[e.ModSetting.mstPan,Math.ceil(t.panMax/2)],[e.ModSetting.mstFilterCut,t.filterCutoffRange-1],[e.ModSetting.mstFilterPeak,0],[e.ModSetting.mstFMSlider1,15],[e.ModSetting.mstFMSlider2,15],[e.ModSetting.mstFMSlider3,15],[e.ModSetting.mstFMSlider4,15],[e.ModSetting.mstFMFeedback,15],[e.ModSetting.mstPulseWidth,Math.ceil(t.pulseWidthRange)],[e.ModSetting.mstDetune,Math.ceil((t.detuneMax-t.detuneMin)/2)],[e.ModSetting.mstVibratoDepth,0],[e.ModSetting.mstSongDetune,Math.ceil((t.songDetuneMax-t.songDetuneMin)/2)],[e.ModSetting.mstVibratoSpeed,0],[e.ModSetting.mstVibratoDelay,0],[e.ModSetting.mstArpeggioSpeed,10],[e.ModSetting.mstPanDelay,10],[e.ModSetting.mstResetArpeggio,1],[e.ModSetting.mstMaxValue,6]]),this.getNewNoteVolume=(i,s,r,n)=>{if(i&&null!=s&&null!=r&&null!=n){n=t.modCount-n-1;let i=this.mstNewNoteVols.get(this.channels[s].instruments[r].modSettings[n]);return this.channels[s].instruments[r].modSettings[n]==e.ModSetting.mstTempo&&(i=this.realToModValue(this.tempo,e.ModSetting.mstTempo)),null!=i?i:6}return 6},this.getVolumeCap=(e,i,s,r)=>{if(e&&null!=i&&null!=s&&null!=r){r=t.modCount-r-1;let e=this.mstMaxVols.get(this.channels[i].instruments[s].modSettings[r]);return null!=e?e:6}return 6},this.getVolumeCapForSetting=(e,t)=>{if(e){let e=this.mstMaxVols.get(t);return null!=e?e:6}return 6},null!=i?this.fromBase64String(i):this.initToDefault(!0)}modValueToReal(i,s){switch(s){case e.ModSetting.mstTempo:i+=t.tempoMin;break;case e.ModSetting.mstInsVolume:i-=t.volumeRange/2;break;case e.ModSetting.mstDetune:i+=t.detuneMin;break;case e.ModSetting.mstSongDetune:i+=t.songDetuneMin;break;case e.ModSetting.mstFilterCut:case e.ModSetting.mstFilterPeak:case e.ModSetting.mstSongVolume:case e.ModSetting.mstPan:case e.ModSetting.mstReverb:case e.ModSetting.mstNextBar:case e.ModSetting.mstFMSlider1:case e.ModSetting.mstFMSlider2:case e.ModSetting.mstFMSlider3:case e.ModSetting.mstFMSlider4:case e.ModSetting.mstFMFeedback:case e.ModSetting.mstPulseWidth:case e.ModSetting.mstVibratoDepth:case e.ModSetting.mstVibratoSpeed:case e.ModSetting.mstVibratoDelay:case e.ModSetting.mstArpeggioSpeed:case e.ModSetting.mstPanDelay:case e.ModSetting.mstResetArpeggio:case e.ModSetting.mstNone:}return i}isSettingForSong(t){switch(t){case e.ModSetting.mstTempo:case e.ModSetting.mstReverb:case e.ModSetting.mstSongVolume:case e.ModSetting.mstNextBar:return!0;default:return!1}}realToModValue(i,s){switch(s){case e.ModSetting.mstTempo:i-=t.tempoMin;break;case e.ModSetting.mstInsVolume:i+=t.volumeRange/2;break;case e.ModSetting.mstDetune:i-=t.detuneMin;break;case e.ModSetting.mstSongDetune:i-=t.songDetuneMin;break;case e.ModSetting.mstFilterCut:case e.ModSetting.mstFilterPeak:case e.ModSetting.mstSongVolume:case e.ModSetting.mstPan:case e.ModSetting.mstReverb:case e.ModSetting.mstNextBar:case e.ModSetting.mstFMSlider1:case e.ModSetting.mstFMSlider2:case e.ModSetting.mstFMSlider3:case e.ModSetting.mstFMSlider4:case e.ModSetting.mstFMFeedback:case e.ModSetting.mstPulseWidth:case e.ModSetting.mstVibratoDepth:case e.ModSetting.mstVibratoSpeed:case e.ModSetting.mstVibratoDelay:case e.ModSetting.mstArpeggioSpeed:case e.ModSetting.mstPanDelay:case e.ModSetting.mstResetArpeggio:case e.ModSetting.mstNone:}return i}getChannelCount(){return this.pitchChannelCount+this.noiseChannelCount+this.modChannelCount}getChannelIsNoise(e){return e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount}getChannelIsMod(e){return e>=this.pitchChannelCount+this.noiseChannelCount}initToDefault(e=!0){if(this.scale=0,this.key=0,this.loopStart=0,this.loopLength=4,this.tempo=100,this.reverb=0,this.centerFrequency=425.85465642512776,this.edo=12,this.maxPitch=this.edo*t.pitchOctaves,this.beatsPerBar=6,this.barCount=16,this.patternsPerChannel=16,this.rhythm=3,this.instrumentsPerChannel=2,this.title="Name Me!",document.title=l.versionDisplayName,e){this.pitchChannelCount=3,this.noiseChannelCount=1,this.modChannelCount=0;for(let e=0;e<this.getChannelCount();e++){this.channels.length<=e&&(this.channels[e]=new z);const t=this.channels[e];t.octave=Math.max(3-e,0);for(let e=0;e<this.patternsPerChannel;e++)t.patterns.length<=e?t.patterns[e]=new k:t.patterns[e].reset();t.patterns.length=this.patternsPerChannel;const i=e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount,s=e>=this.pitchChannelCount+this.noiseChannelCount;for(let e=0;e<this.instrumentsPerChannel;e++)t.instruments.length<=e&&(t.instruments[e]=new P(i,s)),t.instruments[e].setTypeAndReset(s?8:i?2:0,i,s);t.instruments.length=this.instrumentsPerChannel;for(let e=0;e<this.barCount;e++)t.bars[e]=e<4?1:0;t.bars.length=this.barCount}this.channels.length=this.getChannelCount()}}toBase64String(){let i,s=[];s.push(H.q),s.push(u[H.P]),s.push(78);var r=encodeURIComponent(this.title);s.push(u[r.length>>6],u[63&r.length]);for(let e=0;e<r.length;e++)s.push(r.charCodeAt(e));s.push(110,u[this.pitchChannelCount],u[this.noiseChannelCount],u[this.modChannelCount]),s.push(115,u[this.scale]),s.push(107,u[0]),s.push(108,u[this.loopStart>>6],u[63&this.loopStart]),s.push(101,u[this.loopLength-1>>6],u[this.loopLength-1&63]),s.push(116,u[this.tempo>>6],u[63&this.tempo]),s.push(109,u[this.reverb]),s.push(88,u[this.edo]),s.push(97,u[this.beatsPerBar-1]),s.push(103,u[this.barCount-1>>6],u[this.barCount-1&63]),s.push(106,u[this.patternsPerChannel-1>>6],u[this.patternsPerChannel-1&63]),s.push(105,u[this.instrumentsPerChannel-1]),s.push(114,u[this.rhythm]),s.push(79),1!=this.compressionRatio||1!=this.limitRatio||4e3!=this.limitRise||4!=this.limitDecay||1!=this.limitThreshold||1!=this.compressionThreshold||1!=this.masterGain?(s.push(u[Math.round(this.compressionRatio<1?10*this.compressionRatio:10+60*(this.compressionRatio-1))]),s.push(u[Math.round(this.limitRatio<1?10*this.limitRatio:9+this.limitRatio)]),s.push(u[this.limitDecay]),s.push(u[Math.round((this.limitRise-2e3)/250)]),s.push(u[Math.round(20*this.compressionThreshold)]),s.push(u[Math.round(20*this.limitThreshold)]),s.push(u[Math.round(50*this.masterGain)>>6],u[63&Math.round(50*this.masterGain)])):s.push(u[63]),s.push(85);for(let e=0;e<this.getChannelCount();e++){var n=encodeURIComponent(this.channels[e].name);s.push(u[n.length>>6],u[63&n.length]);for(let e=0;e<n.length;e++)s.push(n.charCodeAt(e))}s.push(111);for(let e=0;e<this.getChannelCount();e++)s.push(u[this.channels[e].octave]);for(let e=0;e<this.getChannelCount();e++)for(let i=0;i<this.instrumentsPerChannel;i++){const r=this.channels[e].instruments[i];if(s.push(84,u[r.type]),s.push(118,u[r.volume+t.volumeRange/2>>6],u[r.volume+t.volumeRange/2&63]),s.push(76,u[r.pan>>6],u[63&r.pan]),s.push(u[r.panDelay]),s.push(68,u[r.detune-t.detuneMin>>6],u[r.detune-t.detuneMin&63]),s.push(117,u[r.preset>>6],u[63&r.preset]),s.push(113,u[r.effects]),4!=r.type&&(s.push(100,u[r.transition]),s.push(u[+r.tieNoteTransition]),s.push(u[+r.clicklessTransition]),s.push(102,u[r.filterCutoff]),s.push(121,u[r.filterResonance]),s.push(122,u[r.filterEnvelope]),s.push(67,u[r.chord])),0==r.type)s.push(119,u[r.chipWave]),s.push(99,u[r.vibrato]),r.vibrato==t.vibratos.length&&(s.push(u[Math.round(25*r.vibratoDepth)]),s.push(u[r.vibratoSpeed]),s.push(u[r.vibratoDelay]),s.push(u[r.vibratoType])),2==r.chord&&(s.push(71,u[r.arpeggioSpeed]),s.push(u[+r.fastTwoNoteArp])),s.push(104,u[r.interval]);else if(1==r.type){s.push(99,u[r.vibrato]),r.vibrato==t.vibratos.length&&(s.push(u[Math.round(25*r.vibratoDepth)]),s.push(u[r.vibratoSpeed]),s.push(u[r.vibratoDelay]),s.push(u[r.vibratoType])),2==r.chord&&(s.push(71,u[r.arpeggioSpeed]),s.push(u[+r.fastTwoNoteArp])),s.push(104,u[r.interval]),s.push(65,u[r.algorithm]),s.push(70,u[r.feedbackType]),s.push(66,u[r.feedbackAmplitude]),s.push(86,u[r.feedbackEnvelope]),s.push(81);for(let e=0;e<t.operatorCount;e++)s.push(u[r.operators[e].frequency]);s.push(80);for(let e=0;e<t.operatorCount;e++)s.push(u[r.operators[e].amplitude]);s.push(69);for(let e=0;e<t.operatorCount;e++)s.push(u[r.operators[e].envelope])}else if(7==r.type){s.push(119,u[r.chipWave]),s.push(99,u[r.vibrato]),r.vibrato==t.vibratos.length&&(s.push(u[Math.round(25*r.vibratoDepth)]),s.push(u[r.vibratoSpeed]),s.push(u[r.vibratoDelay]),s.push(u[r.vibratoType])),2==r.chord&&(s.push(71,u[r.arpeggioSpeed]),s.push(u[+r.fastTwoNoteArp])),s.push(104,u[r.interval]),s.push(77);for(let e=0;e<64;e++)s.push(u[r.customChipWave[e]+24])}else if(2==r.type)s.push(119,u[r.chipNoise]),2==r.chord&&(s.push(71,u[r.arpeggioSpeed]),s.push(u[+r.fastTwoNoteArp])),s.push(104,u[r.interval]);else if(3==r.type){s.push(83);const e=new v;for(let i=0;i<t.spectrumControlPoints;i++)e.write(t.spectrumControlPointBits,r.spectrumWave.spectrum[i]);e.encodeBase64(s),s.push(99,u[r.vibrato]),r.vibrato==t.vibratos.length&&(s.push(u[Math.round(25*r.vibratoDepth)]),s.push(u[r.vibratoSpeed]),s.push(u[r.vibratoDelay]),s.push(u[r.vibratoType])),2==r.chord&&(s.push(71,u[r.arpeggioSpeed]),s.push(u[+r.fastTwoNoteArp])),s.push(104,u[r.interval])}else if(4==r.type){s.push(122);for(let e=0;e<t.drumCount;e++)s.push(u[r.drumsetEnvelopes[e]]);s.push(83);const e=new v;for(let i=0;i<t.drumCount;i++)for(let s=0;s<t.spectrumControlPoints;s++)e.write(t.spectrumControlPointBits,r.drumsetSpectrumWaves[i].spectrum[s]);e.encodeBase64(s)}else if(5==r.type){s.push(99,u[r.vibrato]),r.vibrato==t.vibratos.length&&(s.push(u[Math.round(25*r.vibratoDepth)]),s.push(u[r.vibratoSpeed]),s.push(u[r.vibratoDelay]),s.push(u[r.vibratoType])),2==r.chord&&(s.push(71,u[r.arpeggioSpeed]),s.push(u[+r.fastTwoNoteArp])),s.push(104,u[r.interval]),s.push(72);const e=new v;for(let i=0;i<t.harmonicsControlPoints;i++)e.write(t.harmonicsControlPointBits,r.harmonicsWave.harmonics[i]);e.encodeBase64(s)}else if(6==r.type)s.push(99,u[r.vibrato]),r.vibrato==t.vibratos.length&&(s.push(u[Math.round(25*r.vibratoDepth)]),s.push(u[r.vibratoSpeed]),s.push(u[r.vibratoDelay]),s.push(u[r.vibratoType])),2==r.chord&&(s.push(71,u[r.arpeggioSpeed]),s.push(u[+r.fastTwoNoteArp])),s.push(87,u[r.pulseWidth],u[r.pulseEnvelope]),s.push(104,u[r.interval]);else if(8!=r.type)throw new Error("Unknown instrument type.")}s.push(98),i=new v;let a=0;for(;1<<a<this.patternsPerChannel+1;)a++;for(let e=0;e<this.getChannelCount();e++)for(let t=0;t<this.barCount;t++)i.write(a,this.channels[e].bars[t]);i.encodeBase64(s),s.push(112),i=new v;const o=new v;let l=0;for(;1<<l<this.instrumentsPerChannel;)l++;for(let s=0;s<this.getChannelCount();s++){const r=this.getChannelIsNoise(s),n=this.getChannelIsMod(s);if(n)for(let r=0;r<this.instrumentsPerChannel;r++){let n=this.channels[s].instruments[r];for(let s=0;s<t.modCount;s++){const t=n.modStatuses[s],r=n.modChannels[s],a=n.modInstruments[s],o=n.modSettings[s];i.write(2,t),t!=e.ModStatus.msForPitch&&t!=e.ModStatus.msForNoise||(i.write(8,r),i.write(l,a)),t!=e.ModStatus.msNone&&i.write(6,o)}}const a=r||n?0:this.channels[s].octave*this.edo;let h=(r||n?4:this.edo)+a;const f=n?[0,1,2,3,4,5]:r?[4,6,7,2,3,8,0,10]:[12,19,24,31,36,7,0],c=[];for(let e=0;e<f.length;e++)f[e]+=a;for(const e of this.channels[s].patterns)if(i.write(l,e.instrument),e.notes.length>0){i.write(1,1);let s=0;for(const t of e.notes){t.start<s&&n&&(i.write(2,0),i.write(1,1),i.writePartDuration(s-t.start)),t.start>s&&(i.write(2,0),n&&i.write(1,0),i.writePartDuration(t.start-s)),o.clear(),1==t.pitches.length?o.write(1,0):(o.write(1,1),o.write(3,t.pitches.length-2)),o.writePinCount(t.pins.length-1),n?o.write(9,t.pins[0].volume):o.write(3,t.pins[0].volume);let e=0,r=t.pitches[0],a=r;const l=[];for(let i=1;i<t.pins.length;i++){const s=t.pins[i],h=r+s.interval;a!=h?(o.write(1,1),l.push(h),a=h):o.write(1,0),o.writePartDuration(s.time-e),e=s.time,n?o.write(9,s.volume):o.write(3,s.volume)}const m=String.fromCharCode.apply(null,o.encodeBase64([])),u=c.indexOf(m);-1==u?(i.write(2,1),i.concat(o)):(i.write(1,1),i.writeLongTail(0,0,u),c.splice(u,1)),c.unshift(m),c.length>10&&c.pop();const d=t.pitches.concat(l);for(let e=0;e<d.length;e++){const s=d[e],r=f.indexOf(s);if(-1==r){let e=0,t=h;if(t<s)for(;t!=s;)t++,-1==f.indexOf(t)&&e++;else for(;t!=s;)t--,-1==f.indexOf(t)&&e--;i.write(1,0),i.writePitchInterval(e)}else i.write(1,1),i.write(4,r),f.splice(r,1);f.unshift(s),f.length>16&&f.pop(),h=e==t.pitches.length-1?t.pitches[0]:s}s=t.end}s<this.beatsPerBar*t.partsPerBeat+ +n&&(i.write(2,0),n&&i.write(1,0),i.writePartDuration(this.beatsPerBar*t.partsPerBeat+ +n-s))}else i.write(1,0)}let h=i.lengthBase64(),f=[];for(;h>0;)f.unshift(u[63&h]),h>>=6;s.push(u[f.length]),Array.prototype.push.apply(s,f),i.encodeBase64(s);const c=64e3;if(s.length<c)return String.fromCharCode.apply(null,s);{let e="";for(let t=0;t<s.length;t+=c)e+=String.fromCharCode.apply(null,s.slice(t,t+c));return e}}fromBase64String(i){if(null==i||""==i)return void this.initToDefault(!0);let s=0;for(;i.charCodeAt(s)<=32;)s++;if(35==i.charCodeAt(s)&&s++,123==i.charCodeAt(s))return void this.fromJsonObject(JSON.parse(0==s?i:i.substring(s)));var r="beepbox";106==i.charCodeAt(s)&&(r="jummbox",s++);const n=d[i.charCodeAt(s++)];if("beepbox"==r&&(-1==n||n>H.C||n<H.R))return;if("jummbox"==r&&(-1==n||n>H.P||n<H.H))return;const a=n<2,o=n<3,h=n<4,f=n<5,c=n<6,m=n<7,u=n<8;if(this.initToDefault("beepbox"==r&&c),o&&"beepbox"==r){for(const e of this.channels)e.instruments[0].transition=0;this.channels[3].instruments[0].chipNoise=0}let v,w,q=0,E=-1,C=[],R=!1,T=!1;for(;s<i.length;)switch(v=i.charCodeAt(s++)){case 78:var S=(d[i.charCodeAt(s++)]<<6)+d[i.charCodeAt(s++)];this.title=decodeURIComponent(i.substring(s,s+S)),document.title=this.title+" - "+l.versionDisplayName,s+=S;break;case 110:this.pitchChannelCount=d[i.charCodeAt(s++)],this.noiseChannelCount=d[i.charCodeAt(s++)],this.modChannelCount="beepbox"==r||a?0:d[i.charCodeAt(s++)],this.pitchChannelCount=g(t.pitchChannelCountMin,t.pitchChannelCountMax,this.pitchChannelCount),this.noiseChannelCount=g(t.noiseChannelCountMin,t.noiseChannelCountMax,this.noiseChannelCount),this.modChannelCount=g(t.modChannelCountMin,t.modChannelCountMax,this.modChannelCount);for(let e=this.channels.length;e<this.getChannelCount();e++)this.channels[e]=new z;this.channels.length=this.getChannelCount();break;case 115:this.scale=d[i.charCodeAt(s++)],"beepbox"==r&&(this.scale=0);break;case 107:s++,this.key=0;break;case 108:this.loopStart=f&&"beepbox"==r?d[i.charCodeAt(s++)]:(d[i.charCodeAt(s++)]<<6)+d[i.charCodeAt(s++)];break;case 101:this.loopLength=f&&"beepbox"==r?d[i.charCodeAt(s++)]:(d[i.charCodeAt(s++)]<<6)+d[i.charCodeAt(s++)]+1;break;case 116:this.tempo=h&&"beepbox"==r?[95,120,151,190][d[i.charCodeAt(s++)]]:m&&"beepbox"==r?[88,95,103,111,120,130,140,151,163,176,190,206,222,240,259][d[i.charCodeAt(s++)]]:d[i.charCodeAt(s++)]<<6|d[i.charCodeAt(s++)],this.tempo=b(t.tempoMin,t.tempoMax+1,this.tempo);break;case 109:"beepbox"==r?(this.reverb=8*d[i.charCodeAt(s++)],this.reverb=b(0,t.reverbRange,this.reverb)):(this.reverb=d[i.charCodeAt(s++)],this.reverb=b(0,t.reverbRange,this.reverb));break;case 88:!u||"beepbox"!=r&&"jummbox"!=r?this.edo=d[i.charCodeAt(s++)]:(this.edo=12,s++);break;case 97:this.beatsPerBar=o&&"beepbox"==r?[6,7,8,9,10][d[i.charCodeAt(s++)]]:d[i.charCodeAt(s++)]+1,this.beatsPerBar=Math.max(t.beatsPerBarMin,Math.min(t.beatsPerBarMax,this.beatsPerBar));break;case 103:{const e=(d[i.charCodeAt(s++)]<<6)+d[i.charCodeAt(s++)]+1;this.barCount=g(t.barCountMin,t.barCountMax,e);for(let e=0;e<this.getChannelCount();e++){for(let t=this.channels[e].bars.length;t<this.barCount;t++)this.channels[e].bars[t]=t<4?1:0;this.channels[e].bars.length=this.barCount}}break;case 106:this.patternsPerChannel="beepbox"==r&&u?d[i.charCodeAt(s++)]+1:(d[i.charCodeAt(s++)]<<6)+d[i.charCodeAt(s++)]+1,this.patternsPerChannel=g(1,t.barCountMax,this.patternsPerChannel);for(let e=0;e<this.getChannelCount();e++){for(let t=this.channels[e].patterns.length;t<this.patternsPerChannel;t++)this.channels[e].patterns[t]=new k;this.channels[e].patterns.length=this.patternsPerChannel}break;case 105:{const e=d[i.charCodeAt(s++)]+1;this.instrumentsPerChannel=g(t.instrumentsPerChannelMin,t.instrumentsPerChannelMax,e);for(let e=0;e<this.getChannelCount();e++){const t=e>=this.pitchChannelCount&&e<this.pitchChannelCount+this.noiseChannelCount,i=e>=this.pitchChannelCount+this.noiseChannelCount;for(let s=this.channels[e].instruments.length;s<this.instrumentsPerChannel;s++)this.channels[e].instruments[s]=new P(t,i);if(this.channels[e].instruments.length=this.instrumentsPerChannel,c&&"beepbox"==r)for(let s=0;s<this.instrumentsPerChannel;s++)this.channels[e].instruments[s].setTypeAndReset(t?2:0,t,i)}}break;case 114:this.rhythm=d[i.charCodeAt(s++)],("jummbox"==r&&o||"beepbox"==r)&&(0!=this.rhythm&&2!=this.rhythm||(R=!0),this.rhythm>=2&&(T=!0));break;case 111:if(o&&"beepbox"==r)w=d[i.charCodeAt(s++)],this.channels[w].octave=b(0,t.maxScrollableOctaves+1,d[i.charCodeAt(s++)]),C[w]=b(0,t.maxScrollableOctaves-+(window.localStorage.getItem("extraOctaves")||"0")+1,this.channels[w].octave);else for(w=0;w<this.getChannelCount();w++)this.channels[w].octave=b(0,t.maxScrollableOctaves+1,d[i.charCodeAt(s++)]),C[w]=b(0,t.maxScrollableOctaves-+(window.localStorage.getItem("extraOctaves")||"0")+1,this.channels[w].octave);break;case 84:{E++,E>=this.instrumentsPerChannel&&(q++,E=0),g(0,this.channels.length-1,q);const e=this.channels[q].instruments[E],t=b(0,9,d[i.charCodeAt(s++)]);e.setTypeAndReset(t,q>=this.pitchChannelCount&&q<this.pitchChannelCount+this.noiseChannelCount,q>=this.pitchChannelCount+this.noiseChannelCount),R&&(e.arpeggioSpeed=9),T&&(e.fastTwoNoteArp=!0)}break;case 117:{const e=d[i.charCodeAt(s++)]<<6|d[i.charCodeAt(s++)];this.channels[q].instruments[E].preset=e}break;case 119:if(o&&"beepbox"==r){const e=[1,2,3,4,5,6,7,8,0],r=d[i.charCodeAt(s++)];this.channels[r].instruments[0].chipWave=b(0,t.chipWaves.length,0|e[d[i.charCodeAt(s++)]])}else if(c&&"beepbox"==r){const e=[1,2,3,4,5,6,7,8,0];for(let r=0;r<this.getChannelCount();r++)for(let n=0;n<this.instrumentsPerChannel;n++)r>=this.pitchChannelCount?this.channels[r].instruments[n].chipNoise=b(0,t.chipNoises.length,d[i.charCodeAt(s++)]):this.channels[r].instruments[n].chipWave=b(0,t.chipWaves.length,0|e[d[i.charCodeAt(s++)]])}else if(m&&"beepbox"==r){const e=[1,2,3,4,5,6,7,8,0];q>=this.pitchChannelCount?this.channels[q].instruments[E].chipNoise=b(0,t.chipNoises.length,d[i.charCodeAt(s++)]):this.channels[q].instruments[E].chipWave=b(0,t.chipWaves.length,0|e[d[i.charCodeAt(s++)]])}else q>=this.pitchChannelCount?this.channels[q].instruments[E].chipNoise=b(0,t.chipNoises.length,d[i.charCodeAt(s++)]):this.channels[q].instruments[E].chipWave=b(0,t.chipWaves.length,d[i.charCodeAt(s++)]);break;case 102:if(m&&"beepbox"==r){const e=[10,6,3,0,8,5,2],t=[1,1,1,1,18,19,20],n=["none","bright","medium","soft","decay bright","decay medium","decay soft"];if(o&&"beepbox"==r){w=d[i.charCodeAt(s++)];const r=this.channels[w].instruments[0],a=[1,3,4,5][b(0,n.length,d[i.charCodeAt(s++)])];r.filterCutoff=e[a],r.filterEnvelope=t[a],r.filterResonance=0}else if(c&&"beepbox"==r)for(w=0;w<this.getChannelCount();w++)for(let r=0;r<this.instrumentsPerChannel;r++){const a=this.channels[w].instruments[r],o=b(0,n.length,d[i.charCodeAt(s++)]+1);w<this.pitchChannelCount?(a.filterCutoff=e[o],a.filterEnvelope=t[o],a.filterResonance=0):(a.filterCutoff=10,a.filterEnvelope=1,a.filterResonance=0)}else{const r=b(0,n.length,d[i.charCodeAt(s++)]),a=this.channels[q].instruments[E];a.filterCutoff=e[r],a.filterEnvelope=t[r],a.filterResonance=0}}else{this.channels[q].instruments[E].filterCutoff=b(0,t.filterCutoffRange,d[i.charCodeAt(s++)])}break;case 121:this.channels[q].instruments[E].filterResonance=b(0,t.filterResonanceRange,d[i.charCodeAt(s++)]);break;case 122:{const e=this.channels[q].instruments[E];if(4==e.type)for(let r=0;r<t.drumCount;r++)e.drumsetEnvelopes[r]=b(0,t.envelopes.length,d[i.charCodeAt(s++)]);else e.filterEnvelope=b(0,t.envelopes.length,d[i.charCodeAt(s++)])}break;case 87:if("beepbox"==r){const e=this.channels[q].instruments[E];e.pulseWidth=Math.round(b(0,t.pulseWidthRange+1,50*Math.pow(.5,.5*(7-d[i.charCodeAt(s++)])))),e.pulseEnvelope=b(0,t.envelopes.length,d[i.charCodeAt(s++)])}else{const e=this.channels[q].instruments[E];e.pulseWidth=b(0,t.pulseWidthRange+1,d[i.charCodeAt(s++)]),e.pulseEnvelope=b(0,t.envelopes.length,d[i.charCodeAt(s++)])}break;case 100:if(o&&"beepbox"==r)w=d[i.charCodeAt(s++)],this.channels[w].instruments[0].transition=b(0,t.transitions.length,d[i.charCodeAt(s++)]);else if(c&&"beepbox"==r)for(w=0;w<this.getChannelCount();w++)for(let e=0;e<this.instrumentsPerChannel;e++)this.channels[w].instruments[e].transition=b(0,t.transitions.length,d[i.charCodeAt(s++)]);else h||"beepbox"==r?this.channels[q].instruments[E].transition=b(0,t.transitions.length,d[i.charCodeAt(s++)]):(this.channels[q].instruments[E].transition=b(0,t.transitions.length,d[i.charCodeAt(s++)]),this.channels[q].instruments[E].tieNoteTransition=!!d[i.charCodeAt(s++)],this.channels[q].instruments[E].clicklessTransition=!!d[i.charCodeAt(s++)]);break;case 99:if(o&&"beepbox"==r){const e=[0,3,2,0],t=[1,1,1,13],r=d[i.charCodeAt(s++)],n=b(0,e.length,d[i.charCodeAt(s++)]),a=this.channels[r].instruments[0];a.vibrato=e[n],a.filterEnvelope=1==a.filterEnvelope?t[n]:a.filterEnvelope}else if(c&&"beepbox"==r){const e=[0,1,2,3,0,0],t=[1,1,1,1,16,13];for(let r=0;r<this.getChannelCount();r++)for(let n=0;n<this.instrumentsPerChannel;n++){const a=b(0,e.length,d[i.charCodeAt(s++)]),o=this.channels[r].instruments[n];o.vibrato=e[a],o.filterEnvelope=1==o.filterEnvelope?t[a]:o.filterEnvelope}}else if(m&&"beepbox"==r){const e=[0,1,2,3,0,0],t=[1,1,1,1,16,13],r=b(0,e.length,d[i.charCodeAt(s++)]),n=this.channels[q].instruments[E];n.vibrato=e[r],n.filterEnvelope=1==n.filterEnvelope?t[r]:n.filterEnvelope}else{const r=b(0,t.vibratos.length+1,d[i.charCodeAt(s++)]),n=this.channels[q].instruments[E];n.vibrato=r,r==t.vibratos.length?(n.vibratoDepth=b(0,this.mstMaxVols.get(e.ModSetting.mstVibratoDepth)+1,d[i.charCodeAt(s++)])/25,n.vibratoSpeed=b(0,this.mstMaxVols.get(e.ModSetting.mstVibratoSpeed)+1,d[i.charCodeAt(s++)]),n.vibratoDelay=b(0,this.mstMaxVols.get(e.ModSetting.mstVibratoDelay)+1,d[i.charCodeAt(s++)]),n.vibratoType=b(0,t.vibratoTypes.length,d[i.charCodeAt(s++)])):(n.vibratoDepth=t.vibratos[n.vibrato].amplitude,n.vibratoSpeed=10,n.vibratoDelay=t.vibratos[n.vibrato].delayParts,n.vibratoType=t.vibratos[n.vibrato].type)}break;case 71:{const t=this.channels[q].instruments[E];t.arpeggioSpeed=b(0,this.mstMaxVols.get(e.ModSetting.mstArpeggioSpeed)+1,d[i.charCodeAt(s++)]),t.fastTwoNoteArp=!!d[i.charCodeAt(s++)]}break;case 104:if(o&&"beepbox"==r)w=d[i.charCodeAt(s++)],this.channels[w].instruments[0].interval=b(0,t.intervals.length,d[i.charCodeAt(s++)]);else if(c&&"beepbox"==r)for(w=0;w<this.getChannelCount();w++)for(let e=0;e<this.instrumentsPerChannel;e++){const r=d[i.charCodeAt(s++)];let n=b(0,t.intervals.length,r);8==r&&(n=2,this.channels[w].instruments[e].chord=3),this.channels[w].instruments[e].interval=n}else if(m&&"beepbox"==r){const e=d[i.charCodeAt(s++)];let r=b(0,t.intervals.length,e);8==e&&(r=2,this.channels[q].instruments[E].chord=3),this.channels[q].instruments[E].interval=r}else this.channels[q].instruments[E].interval=b(0,t.intervals.length,d[i.charCodeAt(s++)]);break;case 67:this.channels[q].instruments[E].chord=b(0,t.chords.length,d[i.charCodeAt(s++)]);break;case 113:this.channels[q].instruments[E].effects=b(0,t.effectsNames.length,d[i.charCodeAt(s++)]);break;case 118:if(o&&"beepbox"==r){w=d[i.charCodeAt(s++)];this.channels[w].instruments[0].volume=Math.round(b(-t.volumeRange,1,5*-d[i.charCodeAt(s++)]))}else if(c&&"beepbox"==r)for(w=0;w<this.getChannelCount();w++)for(let e=0;e<this.instrumentsPerChannel;e++){this.channels[w].instruments[e].volume=Math.round(b(-t.volumeRange,1,5*-d[i.charCodeAt(s++)]))}else if(m&&"beepbox"==r){this.channels[q].instruments[E].volume=Math.round(b(-t.volumeRange,1,5*-d[i.charCodeAt(s++)]))}else if("beepbox"==r){this.channels[q].instruments[E].volume=Math.round(b(-t.volumeRange/2,1,25*-d[i.charCodeAt(s++)]/7))}else{this.channels[q].instruments[E].volume=Math.round(b(-t.volumeRange/2,t.volumeRange/2+1,(d[i.charCodeAt(s++)]<<6|d[i.charCodeAt(s++)])-t.volumeRange/2))}break;case 76:{const e=this.channels[q].instruments[E];e.pan=b(0,t.panMax+1,"beepbox"==r?Math.round(d[i.charCodeAt(s++)]*(t.panMax/8)):(d[i.charCodeAt(s++)]<<6)+d[i.charCodeAt(s++)]),"jummbox"!=r||o||(e.panDelay=d[i.charCodeAt(s++)])}break;case 68:this.channels[q].instruments[E].detune=b(t.detuneMin,t.detuneMax+1,(d[i.charCodeAt(s++)]<<6)+d[i.charCodeAt(s++)]+t.detuneMin);break;case 77:{let e=this.channels[q].instruments[E];for(let t=0;t<64;t++)e.customChipWave[t]=b(-24,25,d[i.charCodeAt(s++)]-24);let t=0;for(let i=0;i<e.customChipWave.length;i++)t+=e.customChipWave[i];const r=t/e.customChipWave.length;let n=0,a=0;for(let t=0;t<e.customChipWave.length;t++)n+=a,a=e.customChipWave[t]-r,e.customChipWaveIntegral[t]=n;e.customChipWaveIntegral[64]=0}break;case 79:{let e=d[i.charCodeAt(s++)];63==e?(this.compressionRatio=1,this.limitRatio=1,this.limitRise=4e3,this.limitDecay=4,this.limitThreshold=1,this.compressionThreshold=1,this.masterGain=1):(this.compressionRatio=e<10?e/10:1+(e-10)/60,e=d[i.charCodeAt(s++)],this.limitRatio=e<10?e/10:e-9,this.limitDecay=d[i.charCodeAt(s++)],this.limitRise=250*d[i.charCodeAt(s++)]+2e3,this.compressionThreshold=d[i.charCodeAt(s++)]/20,this.limitThreshold=d[i.charCodeAt(s++)]/20,this.masterGain=((d[i.charCodeAt(s++)]<<6)+d[i.charCodeAt(s++)])/50)}break;case 85:for(let e=0;e<this.getChannelCount();e++){var F;F=h?d[i.charCodeAt(s++)]:(d[i.charCodeAt(s++)]<<6)+d[i.charCodeAt(s++)],this.channels[e].name=decodeURIComponent(i.substring(s,s+F)),s+=F}break;case 65:this.channels[q].instruments[E].algorithm=b(0,t.algorithms.length,d[i.charCodeAt(s++)]);break;case 70:this.channels[q].instruments[E].feedbackType=b(0,t.feedbacks.length,d[i.charCodeAt(s++)]);break;case 66:this.channels[q].instruments[E].feedbackAmplitude=b(0,t.operatorAmplitudeMax+1,d[i.charCodeAt(s++)]);break;case 86:this.channels[q].instruments[E].feedbackEnvelope=b(0,t.envelopes.length,d[i.charCodeAt(s++)]);break;case 81:for(let e=0;e<t.operatorCount;e++)this.channels[q].instruments[E].operators[e].frequency=b(0,t.operatorFrequencies.length,d[i.charCodeAt(s++)]);break;case 80:for(let e=0;e<t.operatorCount;e++)this.channels[q].instruments[E].operators[e].amplitude=b(0,t.operatorAmplitudeMax+1,d[i.charCodeAt(s++)]);break;case 69:for(let e=0;e<t.operatorCount;e++)this.channels[q].instruments[E].operators[e].envelope=b(0,t.envelopes.length,d[i.charCodeAt(s++)]);break;case 83:{const e=this.channels[q].instruments[E];if(3==e.type){const r=Math.ceil(t.spectrumControlPoints*t.spectrumControlPointBits/6),n=new p(i,s,s+r);for(let i=0;i<t.spectrumControlPoints;i++)e.spectrumWave.spectrum[i]=n.read(t.spectrumControlPointBits);e.spectrumWave.markCustomWaveDirty(),s+=r}else{if(4!=e.type)throw new Error("Unhandled instrument type for spectrum song tag code.");{const r=Math.ceil(t.drumCount*t.spectrumControlPoints*t.spectrumControlPointBits/6),n=new p(i,s,s+r);for(let i=0;i<t.drumCount;i++){for(let s=0;s<t.spectrumControlPoints;s++)e.drumsetSpectrumWaves[i].spectrum[s]=n.read(t.spectrumControlPointBits);e.drumsetSpectrumWaves[i].markCustomWaveDirty()}s+=r}}}break;case 72:{const e=this.channels[q].instruments[E],r=Math.ceil(t.harmonicsControlPoints*t.harmonicsControlPointBits/6),n=new p(i,s,s+r);for(let i=0;i<t.harmonicsControlPoints;i++)e.harmonicsWave.harmonics[i]=n.read(t.harmonicsControlPointBits);e.harmonicsWave.markCustomWaveDirty(),s+=r}break;case 98:{let e;if(o&&"beepbox"==r){w=d[i.charCodeAt(s++)];const t=d[i.charCodeAt(s++)];e=Math.ceil(.5*t);const r=new p(i,s,s+e);for(let e=0;e<t;e++)this.channels[w].bars[e]=r.read(3)+1}else if(f&&"beepbox"==r){let t=0;for(;1<<t<this.patternsPerChannel;)t++;e=Math.ceil(this.getChannelCount()*this.barCount*t/6);const r=new p(i,s,s+e);for(let e=0;e<this.getChannelCount();e++)for(let i=0;i<this.barCount;i++)this.channels[e].bars[i]=r.read(t)+1}else{let t=0;for(;1<<t<this.patternsPerChannel+1;)t++;e=Math.ceil(this.getChannelCount()*this.barCount*t/6);const r=new p(i,s,s+e);for(let e=0;e<this.getChannelCount();e++)for(let i=0;i<this.barCount;i++)this.channels[e].bars[i]=r.read(t)}s+=e}break;case 112:{let n,a=0,l=!(h&&"jummbox"==r||"beepbox"==r),f=l?4:3,c=l?16:8;if(o&&"beepbox"==r)n=d[i.charCodeAt(s++)],s++,a=d[i.charCodeAt(s++)],a<<=6,a+=d[i.charCodeAt(s++)];else{n=0;let e=g(1,4,d[i.charCodeAt(s++)]);for(;e>0;)a<<=6,a+=d[i.charCodeAt(s++)],e--}const u=new p(i,s,s+a);s+=a;let v=0;for(;1<<v<this.instrumentsPerChannel;)v++;for(;;){const i=this.getChannelIsNoise(n),s=this.getChannelIsMod(n);if(s)for(let i=0;i<this.instrumentsPerChannel;i++){let s=this.channels[n].instruments[i];for(let i=0;i<t.modCount;i++)s.modStatuses[i]=u.read(2),s.modStatuses[i]!=e.ModStatus.msForPitch&&s.modStatuses[i]!=e.ModStatus.msForNoise||(s.modStatuses[i]==e.ModStatus.msForPitch?s.modChannels[i]=b(0,this.pitchChannelCount+1,u.read(8)):s.modChannels[i]=b(0,this.noiseChannelCount+1,u.read(8)),s.modInstruments[i]=b(0,this.instrumentsPerChannel+1,u.read(v))),s.modStatuses[i]!=e.ModStatus.msNone&&(s.modSettings[i]=u.read(6))}const a=i||s?0:this.channels[n].octave*this.edo;let h=null,d=null,p=(i||s?4:this.edo)+a;const k=s?[0,1,2,3,4,5]:i?[4,6,7,2,3,8,0,10]:[12,19,24,31,36,7,0],w=[];for(let e=0;e<k.length;e++)k[e]+=a;for(let e=0;e<this.patternsPerChannel;e++){const i=this.channels[n].patterns[e];if(i.reset(),i.instrument=u.read(v),("beepbox"!=r||!o)&&0==u.read(1))continue;let a=0;const b=i.notes;for(;a<this.beatsPerBar*t.partsPerBeat+ +s;){const e=1==u.read(1);let i=!1,n=0;if(e?n=g(0,w.length-1,u.readLongTail(0,0)):i=1==u.read(1),e||i){let i,o,v;if(e)i=w[n],w.splice(n,1);else{if(i={},l)1==u.read(1)?i.pitchCount=u.read(3)+2:i.pitchCount=1;else for(i.pitchCount=1;i.pitchCount<4&&1==u.read(1);)i.pitchCount++;i.pinCount=u.readPinCount(),i.initialVolume="beepbox"==r?2*u.read(2):s?u.read(9):u.read(3),i.pins=[],i.length=0,i.bendCount=0;for(let e=0;e<i.pinCount;e++)o={},o.pitchBend=1==u.read(1),o.pitchBend&&i.bendCount++,i.length+=m&&"beepbox"==r?u.readLegacyPartDuration()*t.partsPerBeat/t.rhythms[this.rhythm].stepsPerBeat:u.readPartDuration(),o.time=i.length,o.volume="beepbox"==r?2*u.read(2):s?u.read(9):u.read(3),i.pins.push(o)}w.unshift(i),w.length>10&&w.pop(),h=new M(0,a,a+i.length,i.initialVolume),h.pitches=[],h.pins.length=1;const q=[];for(let e=0;e<i.pitchCount+i.bendCount;e++){if(1==u.read(1)){const e=g(0,k.length-1,u.read(f));v=k[e],k.splice(e,1)}else{const e=u.readPitchInterval();v=p;let t=e;for(;t>0;){for(v++;-1!=k.indexOf(v);)v++;t--}for(;t<0;){for(v--;-1!=k.indexOf(v);)v--;t++}}k.unshift(v),k.length>c&&k.pop(),e<i.pitchCount?h.pitches.push(v):q.push(v),p=e==i.pitchCount-1?h.pitches[0]:v}q.unshift(h.pitches[0]);for(const e of i.pins)e.pitchBend&&q.shift(),d=y(q[0]-h.pitches[0],e.time,e.volume),h.pins.push(d);a=g(0,this.beatsPerBar*t.partsPerBeat,h.end),b.push(h)}else if(s){const e=1==u.read(1),t=u.readPartDuration();e?a-=t:a+=t}else{a+=m&&"beepbox"==r?u.readLegacyPartDuration()*t.partsPerBeat/t.rhythms[this.rhythm].stepsPerBeat:u.readPartDuration()}}}if(o&&"beepbox"==r)break;if(n++,n>=this.getChannelCount())break}}break;default:throw new Error("Unrecognized song tag code "+String.fromCharCode(v)+" at index "+(s-1))}for(let e=0;e<this.getChannelCount();e++)null!=C[e]&&(this.channels[e].octave=C[e])}toJsonObject(e=!0,i=1,s=!0){const r=[];for(let n=0;n<this.getChannelCount();n++){const a=[],o=this.getChannelIsNoise(n),l=this.getChannelIsMod(n);for(let e=0;e<this.instrumentsPerChannel;e++)a.push(this.channels[n].instruments[e].toJsonObject());const h=[];for(const e of this.channels[n].patterns){const i=[];for(const s of e.notes){let r=this.getVolumeCapForSetting(l,this.channels[n].instruments[e.instrument].modSettings[t.modCount-s.pitches[0]-1]);const a=[];for(const e of s.pins){let i=l?Math.round(e.volume):Math.round(100*e.volume/r);a.push({tick:(e.time+s.start)*t.rhythms[this.rhythm].stepsPerBeat/t.partsPerBeat,pitchBend:e.interval,volume:i,forMod:l})}i.push({pitches:s.pitches,points:a})}h.push({instrument:e.instrument+1,notes:i})}const f=[];if(e)for(let e=0;e<this.loopStart;e++)f.push(this.channels[n].bars[e]);for(let e=0;e<i;e++)for(let e=this.loopStart;e<this.loopStart+this.loopLength;e++)f.push(this.channels[n].bars[e]);if(s)for(let e=this.loopStart+this.loopLength;e<this.barCount;e++)f.push(this.channels[n].bars[e]);r.push({type:l?"mod":o?"drum":"pitch",octaveScrollBar:this.channels[n].octave,instruments:a,patterns:h,sequence:f})}return{name:this.title,format:H.T,version:H.P,scale:t.scales[this.scale].name,introBars:this.loopStart,loopBars:this.loopLength,beatsPerBar:this.beatsPerBar,ticksPerBeat:t.rhythms[this.rhythm].stepsPerBeat,beatsPerMinute:this.tempo,reverb:this.reverb,channels:r}}fromJsonObject(e){if(this.initToDefault(!0),!e)return;if(null!=e.name&&(this.title=e.name),this.scale=0,null!=e.scale){const i={"romani :)":"dbl harmonic :)","romani :(":"dbl harmonic :(",enigma:"strange"},s=null!=i[e.scale]?i[e.scale]:e.scale,r=t.scales.findIndex((e=>e.name==s));-1!=r&&(this.scale=r)}this.key=0,null!=e.beatsPerMinute&&(this.tempo=b(t.tempoMin,t.tempoMax+1,0|e.beatsPerMinute)),null!=e.reverb&&(this.reverb=b(0,t.reverbRange,0|e.reverb)),null!=e.beatsPerBar&&(this.beatsPerBar=Math.max(t.beatsPerBarMin,Math.min(t.beatsPerBarMax,0|e.beatsPerBar)));let i=4;null!=e.ticksPerBeat&&(i=0|e.ticksPerBeat||4,this.rhythm=t.rhythms.findIndex((e=>e.stepsPerBeat==i)),-1==this.rhythm&&(this.rhythm=1));let s=1,r=1,n=1;if(e.channels)for(const t of e.channels)t.instruments&&(s=Math.max(s,0|t.instruments.length)),t.patterns&&(r=Math.max(r,0|t.patterns.length)),t.sequence&&(n=Math.max(n,0|t.sequence.length));this.instrumentsPerChannel=Math.min(s,t.instrumentsPerChannelMax),this.patternsPerChannel=Math.min(r,t.barCountMax),this.barCount=Math.min(n,t.barCountMax),null!=e.introBars&&(this.loopStart=b(0,this.barCount,0|e.introBars)),null!=e.loopBars&&(this.loopLength=b(1,this.barCount-this.loopStart+1,0|e.loopBars));const a=[],o=[],l=[];if(e.channels)for(let s=0;s<e.channels.length;s++){let r=e.channels[s];const n=new z;let h=!1,f=!1;null!=r.type?(h="drum"==r.type,f="mod"==r.type):h=s>=3,h?o.push(n):f?l.push(n):a.push(n),null!=r.octaveScrollBar&&(n.octave=b(0,t.maxScrollableOctaves-+(window.localStorage.getItem("extraOctaves")||"0")+1,0|r.octaveScrollBar));for(let e=n.instruments.length;e<this.instrumentsPerChannel;e++)n.instruments[e]=new P(h,f);n.instruments.length=this.instrumentsPerChannel;for(let e=n.patterns.length;e<this.patternsPerChannel;e++)n.patterns[e]=new k;n.patterns.length=this.patternsPerChannel;for(let e=0;e<this.barCount;e++)n.bars[e]=1;n.bars.length=this.barCount;for(let e=0;e<this.instrumentsPerChannel;e++){n.instruments[e].fromJsonObject(r.instruments[e],h,f,0==this.rhythm||2==this.rhythm,this.rhythm>=2)}for(let e=0;e<this.patternsPerChannel;e++){const s=n.patterns[e];let a=void 0;if(r.patterns&&(a=r.patterns[e]),null!=a&&(s.instrument=b(0,this.instrumentsPerChannel,(0|a.instrument)-1),a.notes&&a.notes.length>0)){const e=Math.min(this.beatsPerBar*t.partsPerBeat,a.notes.length>>>0);for(let r=0;r<a.notes.length&&!(r>=e);r++){const e=a.notes[r];if(!(e&&e.pitches&&e.pitches.length>=1&&e.points&&e.points.length>=2))continue;const o=new M(0,0,0,0);o.pitches=[],o.pins=[];for(let i=0;i<e.pitches.length;i++){const s=0|e.pitches[i];if(-1==o.pitches.indexOf(s)&&(o.pitches.push(s),o.pitches.length>=t.maxChordSize))break}if(o.pitches.length<1)continue;let l=0;for(let r=0;r<e.points.length;r++){const a=e.points[r];if(null==a||null==a.tick)continue;const h=null==a.pitchBend?0:0|a.pitchBend,c=Math.round(+a.tick*t.partsPerBeat/i);let m,u=this.getVolumeCapForSetting(f,n.instruments[s.instrument].modSettings[t.modCount-o.pitches[0]-1]);m=null==a.volume?u:null==a.forMod?Math.max(0,Math.min(u,Math.round((0|a.volume)*u/100))):(0|a.forMod)>0?Math.round(0|a.volume):Math.max(0,Math.min(u,Math.round((0|a.volume)*u/100))),c>this.beatsPerBar*t.partsPerBeat||(0==o.pins.length&&(o.start=c,l=h),o.pins.push(y(h-l,c-o.start,m)))}if(o.pins.length<2)continue;o.end=o.pins[o.pins.length-1].time+o.start;const c=h?t.drumCount-1:this.maxPitch;let m=c,u=0;for(let e=0;e<o.pitches.length;e++)o.pitches[e]+=l,(o.pitches[e]<0||o.pitches[e]>c)&&(o.pitches.splice(e,1),e--),o.pitches[e]<m&&(m=o.pitches[e]),o.pitches[e]>u&&(u=o.pitches[e]);if(!(o.pitches.length<1)){for(let e=0;e<o.pins.length;e++){const t=o.pins[e];t.interval+m<0&&(t.interval=-m),t.interval+u>c&&(t.interval=c-u),e>=2&&t.interval==o.pins[e-1].interval&&t.interval==o.pins[e-2].interval&&t.volume==o.pins[e-1].volume&&t.volume==o.pins[e-2].volume&&(o.pins.splice(e-1,1),e--)}s.notes.push(o)}}}}for(let e=0;e<this.barCount;e++)n.bars[e]=r.sequence?Math.min(this.patternsPerChannel,r.sequence[e]>>>0):0}a.length>t.pitchChannelCountMax&&(a.length=t.pitchChannelCountMax),o.length>t.noiseChannelCountMax&&(o.length=t.noiseChannelCountMax),l.length>t.modChannelCountMax&&(l.length=t.modChannelCountMax),this.pitchChannelCount=a.length,this.noiseChannelCount=o.length,this.modChannelCount=l.length,this.channels.length=0,Array.prototype.push.apply(this.channels,a),Array.prototype.push.apply(this.channels,o),Array.prototype.push.apply(this.channels,l)}getPattern(e,t){if(t<0||t>=this.barCount)return null;const i=this.channels[e].bars[t];return 0==i?null:this.channels[e].patterns[i-1]}getPatternInstrument(e,t){const i=this.getPattern(e,t);return null==i?0:i.instrument}getBeatsPerMinute(){return this.tempo}}H.T="BeepBox",H.R=2,H.C=8,H.H=1,H.P=4,H.q=106;class T{constructor(){this.pitches=[0,0,0,0],this.pitchCount=0,this.chordSize=0,this.drumsetPitch=0,this.note=null,this.prevNote=null,this.nextNote=null,this.prevNotePitchIndex=0,this.nextNotePitchIndex=0,this.active=!1,this.noteStart=0,this.noteEnd=0,this.noteLengthTicks=0,this.ticksSinceReleased=0,this.liveInputSamplesHeld=0,this.lastInterval=0,this.lastVolume=0,this.stereoVolume1=0,this.stereoVolume2=0,this.stereoOffset=0,this.stereoDelay=0,this.sample=0,this.phases=[],this.phaseDeltas=[],this.volumeStarts=[],this.volumeDeltas=[],this.volumeStart=0,this.volumeDelta=0,this.phaseDeltaScale=0,this.pulseWidth=0,this.pulseWidthDelta=0,this.filter=0,this.filterScale=0,this.filterSample0=0,this.filterSample1=0,this.vibratoScale=0,this.intervalMult=0,this.intervalVolumeMult=1,this.feedbackOutputs=[],this.feedbackMult=0,this.feedbackDelta=0,this.stereoVolumeLStart=0,this.stereoVolumeRStart=0,this.stereoVolumeLDelta=0,this.stereoVolumeRDelta=0,this.stereoDelayStart=0,this.stereoDelayEnd=0,this.stereoDelayDelta=0,this.customVolumeStart=0,this.customVolumeEnd=0,this.filterResonanceStart=0,this.filterResonanceDelta=0,this.isFirstOrder=!1,this.reset()}reset(){for(let e=0;e<t.operatorCount;e++)this.phases[e]=0,this.feedbackOutputs[e]=0;this.sample=0,this.filterSample0=0,this.filterSample1=0,this.liveInputSamplesHeld=0}}class S{constructor(e=null){this.samplesPerSecond=44100,this.song=null,this.liveInputDuration=0,this.liveInputStarted=!1,this.liveInputPitches=[],this.liveInputChannel=0,this.loopRepeatCount=-1,this.volume=1,this.wantToSkip=!1,this.playheadInternal=0,this.bar=0,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0,this.isPlayingSong=!1,this.liveInputEndTime=0,this.tonePool=new m,this.activeTones=[],this.tyingOver=[],this.activeModTones=[],this.releasedTones=[],this.liveInputTones=new m,this.limit=0,this.stereoBufferIndex=0,this.samplesForNone=null,this.samplesForReverb=null,this.samplesForChorus=null,this.samplesForChorusReverb=null,this.chorusDelayLine=new Float32Array(2048),this.chorusDelayPos=0,this.chorusPhase=0,this.reverbDelayLine=new Float32Array(16384),this.reverbDelayPos=0,this.reverbFeedback0=0,this.reverbFeedback1=0,this.reverbFeedback2=0,this.reverbFeedback3=0,this.audioCtx=null,this.scriptNode=null,this.audioProcessCallback=e=>{const t=e.outputBuffer,i=t.getChannelData(0),s=t.getChannelData(1);if(performance.now()<this.liveInputEndTime||this.isPlayingSong)this.synthesize(i,s,t.length,this.isPlayingSong);else{for(let e=0;e<t.length;e++)i[e]=0,s[e]=0;this.deactivateAudio()}},null!=e&&this.setSong(e)}warmUpSynthesizer(e){if(null!=e)for(let t=0;t<e.getChannelCount();t++)for(let i=0;i<e.instrumentsPerChannel;i++)S.getInstrumentSynthFunction(e.channels[t].instruments[i]),e.channels[t].instruments[i].warmUp()}computeLatestModValues(){if(null!=this.song&&this.song.modChannelCount>0){let i=[],s=[];this.modValues=[],this.nextModValues=[],this.modInsValues=[],this.nextModInsValues=[];for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++){s[e]=[],this.modInsValues[e]=[],this.nextModInsValues[e]=[];for(let t=0;t<this.song.instrumentsPerChannel;t++)this.modInsValues[e][t]=[],this.nextModInsValues[e][t]=[],s[e][t]=[]}let r=this.beat*t.partsPerBeat+this.part;for(let n=this.song.pitchChannelCount+this.song.noiseChannelCount;n<this.song.getChannelCount();n++)if(!this.song.channels[n].muted){let a;for(let o=this.bar;o>=0;o--)if(a=this.song.getPattern(n,o),null!=a){let l=this.song.getPatternInstrument(n,o),h=this.song.channels[n].instruments[l],f=[],c=[],m=o==this.bar?r:this.findPartsInBar(o);for(const e of a.notes)if(e.start<m&&(null==f[t.modCount-1-e.pitches[0]]||e.end>f[t.modCount-1-e.pitches[0]]))if(e.end<=m)f[t.modCount-1-e.pitches[0]]=e.end,c[t.modCount-1-e.pitches[0]]=e.pins[e.pins.length-1].volume;else{f[t.modCount-1-e.pitches[0]]=m;for(let i=0;i<e.pins.length;i++)if(e.pins[i].time+e.start>m){const s=e.pins[i].time-e.pins[i-1].time,r=m-e.start-e.pins[i-1].time,n=e.pins[i].volume-e.pins[i-1].volume;c[t.modCount-1-e.pitches[0]]=Math.round(e.pins[i-1].volume+n*r/s),i=e.pins.length}}for(let r=0;r<t.modCount;r++)null!=f[r]&&(h.modStatuses[r]==e.ModStatus.msForSong?(null==i[h.modSettings[r]]||o*t.partsPerBeat*this.song.beatsPerBar+f[r]>i[h.modSettings[r]])&&(this.setModValue(c[r],c[r],r,h,h.modSettings[r]),i[h.modSettings[r]]=o*t.partsPerBeat*this.song.beatsPerBar+f[r]):(null==s[h.modChannels[r]][h.modInstruments[r]][h.modSettings[r]]||o*t.partsPerBeat*this.song.beatsPerBar+f[r]>s[h.modChannels[r]][h.modInstruments[r]][h.modSettings[r]])&&(this.setModValue(c[r],c[r],r,h,h.modSettings[r]),s[h.modChannels[r]][h.modInstruments[r]][h.modSettings[r]]=o*t.partsPerBeat*this.song.beatsPerBar+f[r]))}}}}static operatorAmplitudeCurve(e){return(Math.pow(16,e/15)-1)/15}get playing(){return this.isPlayingSong}get playhead(){return this.playheadInternal}set playhead(e){if(null!=this.song){this.playheadInternal=Math.max(0,Math.min(this.song.barCount,e));let i=this.playheadInternal;this.bar=Math.floor(i),i=this.song.beatsPerBar*(i-this.bar),this.beat=Math.floor(i),i=t.partsPerBeat*(i-this.beat),this.part=Math.floor(i),i=t.ticksPerPart*(i-this.part),this.tick=Math.floor(i);const s=this.getSamplesPerTick();i=s*(i-this.tick),this.tickSampleCountdown=s-i}}getSamplesPerBar(){if(null==this.song)throw new Error;return this.getSamplesPerTick()*t.ticksPerPart*t.partsPerBeat*this.song.beatsPerBar}findPartsInBar(i){if(null==this.song)return 0;let s=t.partsPerBeat*this.song.beatsPerBar;for(let r=this.song.pitchChannelCount+this.song.noiseChannelCount;r<this.song.getChannelCount();r++){let n=this.song.getPattern(r,i);if(null!=n){let i=this.song.channels[r].instruments[n.instrument];for(let r=0;r<t.modCount;r++)if(i.modSettings[r]==e.ModSetting.mstNextBar&&i.modStatuses[r]==e.ModStatus.msForSong)for(const e of n.notes)e.pitches[0]==t.modCount-1-r&&s>e.start&&(s=e.start)}}return s}getTotalSamples(i,s,r){if(null==this.song)return-1;let n=i?0:this.song.loopStart,a=s?this.song.barCount:this.song.loopStart+this.song.loopLength,o=!1,l=!1,h=this.song.tempo;for(let i=this.song.pitchChannelCount+this.song.noiseChannelCount;i<this.song.getChannelCount();i++)for(let s=n;s<a;s++){let r=this.song.getPattern(i,s);if(null!=r){let s=this.song.channels[i].instruments[r.instrument];for(let i=0;i<t.modCount;i++)s.modSettings[i]==e.ModSetting.mstTempo&&s.modStatuses[i]==e.ModStatus.msForSong&&(o=!0),s.modSettings[i]==e.ModSetting.mstNextBar&&s.modStatuses[i]==e.ModStatus.msForSong&&(l=!0)}}if(n>0){let i=null,s=0;for(let r=n-1;r>=0;r--){for(let n=this.song.pitchChannelCount+this.song.noiseChannelCount;n<this.song.getChannelCount();n++){let a=this.song.getPattern(n,r);if(null!=a){let o=this.song.getPatternInstrument(n,r),l=this.song.channels[n].instruments[o],h=this.findPartsInBar(r);for(const r of a.notes)if(l.modSettings[t.modCount-1-r.pitches[0]]==e.ModSetting.mstTempo&&l.modStatuses[t.modCount-1-r.pitches[0]]==e.ModStatus.msForSong&&r.start<h&&(null==i||r.end>i))if(r.end<=h)i=r.end,s=r.pins[r.pins.length-1].volume;else{i=h;for(let e=0;e<r.pins.length;e++)if(r.pins[e].time+r.start>h){const t=r.pins[e].time-r.pins[e-1].time,i=h-r.start-r.pins[e-1].time,n=r.pins[e].volume-r.pins[e-1].volume;s=Math.round(r.pins[e-1].volume+n*i/t),e=r.pins.length}}}}null!=i&&(h=this.song.modValueToReal(s,e.ModSetting.mstTempo),r=-1)}}if(o||l){let i=n,s=!1,f=0;for(;!s;){let n=t.partsPerBeat*this.song.beatsPerBar,c=0;if(l&&(n=this.findPartsInBar(i)),o){let s=!1;for(let r=this.song.pitchChannelCount+this.song.noiseChannelCount;r<this.song.getChannelCount();r++)if(0==s){let a=this.song.getPattern(r,i);if(null!=a){let i=this.song.channels[r].instruments[a.instrument];for(let r=0;r<t.modCount;r++)if(0==s&&i.modSettings[r]==e.ModSetting.mstTempo&&i.modStatuses[r]==e.ModStatus.msForSong&&a.notes.find((e=>e.pitches[0]==t.modCount-1-r))){s=!0,a.notes.sort((function(e,t){return e.start==t.start?e.pitches[0]-t.pitches[0]:e.start-t.start}));for(const i of a.notes)if(i.pitches[0]==t.modCount-1-r&&(f+=Math.min(n-c,i.start-c)*t.ticksPerPart*this.getSamplesPerTickSpecificBPM(h),i.start<n))for(let s=1;s<i.pins.length;s++){if(i.pins[s-1].time+i.start<=n){const r=t.ticksPerPart*Math.min(n-(i.start+i.pins[s-1].time),i.pins[s].time-i.pins[s-1].time),a=this.song.modValueToReal(i.pins[s-1].volume,e.ModSetting.mstTempo);let o=this.song.modValueToReal(i.pins[s].volume,e.ModSetting.mstTempo);i.pins[s].time+i.start>n&&(o=this.song.modValueToReal(i.pins[s-1].volume+(i.pins[s].volume-i.pins[s-1].volume)*(n-(i.start+i.pins[s-1].time))/(i.pins[s].time-i.pins[s-1].time),e.ModSetting.mstTempo));let l=t.partsPerBeat*t.ticksPerPart/60;f+=o!=a?-this.samplesPerSecond*r*(Math.log(l*o*r)-Math.log(l*a*r))/(l*(a-o)):r*this.getSamplesPerTickSpecificBPM(o),h=o}c=Math.min(i.start+i.pins[s].time,n)}}}}}f+=(n-c)*t.ticksPerPart*this.getSamplesPerTickSpecificBPM(h),i++,0!=r&&i==this.song.loopStart+this.song.loopLength&&(i=this.song.loopStart,r>0&&r--),i>=a&&(s=!0)}return Math.ceil(f)}return this.getSamplesPerBar()*this.getTotalBars(i,s,r)}getTotalBars(e,t,i=this.loopRepeatCount){if(null==this.song)throw new Error;let s=this.song.loopLength*(i+1);return e&&(s+=this.song.loopStart),t&&(s+=this.song.barCount-(this.song.loopStart+this.song.loopLength)),s}setSong(e){"string"==typeof e?this.song=new H(e):e instanceof H&&(this.song=e)}setModValue(t,i,s,r,n){let a,o;switch(n){case e.ModSetting.mstSongVolume:case e.ModSetting.mstReverb:case e.ModSetting.mstTempo:case e.ModSetting.mstSongDetune:a=this.song.modValueToReal(t,n),o=this.song.modValueToReal(i,n),null!=this.modValues[n]&&this.modValues[n]==a&&this.nextModValues[n]==o||(this.modValues[n]=a,this.nextModValues[n]=o);break;case e.ModSetting.mstInsVolume:case e.ModSetting.mstPan:case e.ModSetting.mstPulseWidth:case e.ModSetting.mstFilterCut:case e.ModSetting.mstFilterPeak:case e.ModSetting.mstFMSlider1:case e.ModSetting.mstFMSlider2:case e.ModSetting.mstFMSlider3:case e.ModSetting.mstFMSlider4:case e.ModSetting.mstFMFeedback:case e.ModSetting.mstVibratoDepth:case e.ModSetting.mstVibratoSpeed:case e.ModSetting.mstVibratoDelay:case e.ModSetting.mstArpeggioSpeed:case e.ModSetting.mstPanDelay:case e.ModSetting.mstResetArpeggio:case e.ModSetting.mstDetune:a=this.song.modValueToReal(t,n),o=this.song.modValueToReal(i,n);let l=r.modChannels[s]+(r.modStatuses[s]==e.ModStatus.msForNoise?this.song.pitchChannelCount:0);null!=this.modInsValues[l][r.modInstruments[s]][n]&&this.modInsValues[l][r.modInstruments[s]][n]==a&&this.nextModInsValues[l][r.modInstruments[s]][n]==o||(this.modInsValues[l][r.modInstruments[s]][n]=a,this.nextModInsValues[l][r.modInstruments[s]][n]=o);break;case e.ModSetting.mstNextBar:a=this.song.modValueToReal(t,n);break;case e.ModSetting.mstNone:default:a=-1}return a}getModValue(e,t,i,s,r){if(t){if(null!=this.modValues[e]&&null!=this.nextModValues[e])return r?this.nextModValues[e]:this.modValues[e]}else if(null!=i&&null!=s&&null!=this.modInsValues[i][s][e]&&null!=this.nextModInsValues[i][s][e])return r?this.nextModInsValues[i][s][e]:this.modInsValues[i][s][e];return-1}isAnyModActive(t,i){for(let s=0;s<e.ModSetting.mstMaxValue;s++)if(null!=this.modValues&&null!=this.modValues[s]||null!=this.modInsValues&&null!=this.modInsValues[t]&&null!=this.modInsValues[t][i]&&null!=this.modInsValues[t][i][s])return!0;return!1}unsetMod(e,t,i){(this.isModActive(e,!0)||null!=t&&null!=i&&this.isModActive(e,!1,t,i))&&(this.modValues[e]=null,this.nextModValues[e]=null,null!=t&&null!=i&&(this.modInsValues[t][i][e]=null,this.nextModInsValues[t][i][e]=null))}isModActive(e,t,i,s){return t?null!=this.modValues&&null!=this.modValues[e]:null!=i&&null!=s&&null!=this.modInsValues&&null!=this.modInsValues[i]&&null!=this.modInsValues[i][s]&&null!=this.modInsValues[i][s][e]&&null!=this.modInsValues[i][s][e]}activateAudio(){null!=this.audioCtx&&null!=this.scriptNode||(this.audioCtx=this.audioCtx||new(window.AudioContext||window.webkitAudioContext),this.samplesPerSecond=this.audioCtx.sampleRate,this.scriptNode=this.audioCtx.createScriptProcessor?this.audioCtx.createScriptProcessor(2048,0,2):this.audioCtx.createJavaScriptNode(2048,0,2),this.scriptNode.onaudioprocess=this.audioProcessCallback,this.scriptNode.channelCountMode="explicit",this.scriptNode.channelInterpretation="speakers",this.scriptNode.connect(this.audioCtx.destination)),this.audioCtx.resume()}deactivateAudio(){null!=this.audioCtx&&null!=this.scriptNode&&(this.scriptNode.disconnect(this.audioCtx.destination),this.scriptNode=null,this.audioCtx.close&&this.audioCtx.close(),this.audioCtx=null)}maintainLiveInput(){this.activateAudio(),this.liveInputEndTime=performance.now()+1e4}play(){this.isPlayingSong||(this.isPlayingSong=!0,this.warmUpSynthesizer(this.song),this.computeLatestModValues(),this.activateAudio())}pause(){this.isPlayingSong&&(this.isPlayingSong=!1,null!=this.song&&(this.song.inVolumeCap=0,this.song.outVolumeCap=0),this.modValues=[],this.modInsValues=[],this.nextModValues=[],this.nextModInsValues=[],this.tyingOver=[])}snapToStart(){this.bar=0,this.snapToBar()}goToBar(e){this.bar=e,this.playheadInternal=this.bar}snapToBar(){this.playheadInternal=this.bar,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=0}resetEffects(){this.reverbDelayPos=0,this.reverbFeedback0=0,this.reverbFeedback1=0,this.reverbFeedback2=0,this.reverbFeedback3=0,this.freeAllTones();for(let e=0;e<this.reverbDelayLine.length;e++)this.reverbDelayLine[e]=0;for(let e=0;e<this.chorusDelayLine.length;e++)this.chorusDelayLine[e]=0;if(null!=this.samplesForNone)for(let e=0;e<this.samplesForNone.length;e++)this.samplesForNone[e]=0;if(null!=this.samplesForReverb)for(let e=0;e<this.samplesForReverb.length;e++)this.samplesForReverb[e]=0;if(null!=this.samplesForChorus)for(let e=0;e<this.samplesForChorus.length;e++)this.samplesForChorus[e]=0;if(null!=this.samplesForChorusReverb)for(let e=0;e<this.samplesForChorusReverb.length;e++)this.samplesForChorusReverb[e]=0}jumpIntoLoop(){if(this.song&&(this.bar<this.song.loopStart||this.bar>=this.song.loopStart+this.song.loopLength)){const e=this.bar;this.bar=this.song.loopStart,this.playheadInternal+=this.bar-e,this.playing&&this.computeLatestModValues()}}nextBar(){if(!this.song)return;const e=this.bar;this.bar++,this.bar>=this.song.barCount&&(this.bar=0),this.playheadInternal+=this.bar-e;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)this.tyingOver[e]=-1;this.playing&&this.computeLatestModValues()}skipBar(){if(!this.song)return;const e=this.getSamplesPerTick();this.bar++,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=e,0!=this.loopRepeatCount&&this.bar==this.song.loopStart+this.song.loopLength&&(this.bar=this.song.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--)}firstBar(){if(this.song){this.bar=0,this.playheadInternal=0,this.beat=0,this.part=0;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)this.tyingOver[e]=-1;this.playing&&this.computeLatestModValues()}}jumpToEditingBar(e){if(this.song){this.bar=e,this.playheadInternal=e,this.beat=0,this.part=0;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)this.tyingOver[e]=-1;this.playing&&this.computeLatestModValues()}}prevBar(){if(!this.song)return;const e=this.bar;this.bar--,(this.bar<0||this.bar>=this.song.barCount)&&(this.bar=this.song.barCount-1),this.playheadInternal+=this.bar-e;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)this.tyingOver[e]=-1;this.playing&&this.computeLatestModValues()}synthesize(i,s,r,n=!0){if(null==this.song){for(let e=0;e<r;e++)i[e]=0,s[e]=0;return void this.deactivateAudio()}this.song.inVolumeCap=0,this.song.outVolumeCap=0;const a=this.song.pitchChannelCount+this.song.noiseChannelCount;for(let e=this.activeTones.length;e<a;e++)this.activeTones[e]=new m,this.releasedTones[e]=new m;if(this.activeTones.length=a,this.releasedTones.length=a,a!=this.tyingOver.length){let e=this.tyingOver.length;for(this.tyingOver.length=a;e<this.tyingOver.length;)this.tyingOver[e++]=-1}for(let e=this.activeModTones.length;e<this.song.modChannelCount;e++){this.activeModTones[e]=[];for(let i=0;i<t.modCount;i++)this.activeModTones[e][i]=new m;this.activeModTones[e].length=t.modCount}this.activeModTones.length=this.song.modChannelCount;let o=this.getSamplesPerTick(),l=0,h=!1;for(;this.tickSampleCountdown<=0;)this.tickSampleCountdown+=o;this.tickSampleCountdown>o&&(this.tickSampleCountdown=o),n&&(this.beat>=this.song.beatsPerBar&&(this.bar++,this.beat=0,this.part=0,this.tick=0,this.tickSampleCountdown=o,0!=this.loopRepeatCount&&this.bar==this.song.loopStart+this.song.loopLength&&(this.bar=this.song.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--)),this.bar>=this.song.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(h=!0,this.pause())));const f=4*r;null!=this.samplesForNone&&this.samplesForNone.length==f&&null!=this.samplesForReverb&&this.samplesForReverb.length==f&&null!=this.samplesForChorus&&this.samplesForChorus.length==f&&null!=this.samplesForChorusReverb&&this.samplesForChorusReverb.length==f||(this.samplesForNone=new Float32Array(f),this.samplesForReverb=new Float32Array(f),this.samplesForChorus=new Float32Array(f),this.samplesForChorusReverb=new Float32Array(f),this.stereoBufferIndex=0);let c=this.stereoBufferIndex;const u=this.samplesForNone,d=this.samplesForReverb,p=this.samplesForChorus,v=this.samplesForChorusReverb,y=+this.volume,b=this.chorusDelayLine,g=this.reverbDelayLine,M=2*Math.PI/(2*this.samplesPerSecond),k=150*this.samplesPerSecond/44100,w=2048-1.51*k,q=2048-2.1*k,E=2048-3.35*k,P=2048-1.47*k,C=2048-2.15*k,R=2048-3.25*k;let z=this.chorusPhase%(2*Math.PI),H=2047&this.chorusDelayPos,T=16383&this.reverbDelayPos,S=+this.reverbFeedback0,F=+this.reverbFeedback1,A=+this.reverbFeedback2,x=+this.reverbFeedback3,O=this.song.reverb;this.isModActive(e.ModSetting.mstReverb,!0)&&(O=this.getModValue(e.ModSetting.mstReverb,!0));let D=.425*Math.pow(O/t.reverbRange,.667);const B=1-Math.pow(.5,this.song.limitDecay/this.samplesPerSecond),I=1-Math.pow(.5,this.song.limitRise/this.samplesPerSecond),N=this.song.compressionThreshold,W=this.song.limitThreshold,V=this.song.compressionRatio,U=this.song.limitRatio,L=this.song.masterGain;let j=+this.limit;for(;l<r&&!h;){const m=r-l,O=Math.min(Math.ceil(this.tickSampleCountdown),m);for(let e=0,i=this.song.pitchChannelCount+this.song.noiseChannelCount;e<this.song.modChannelCount;e++,i++){this.determineCurrentActiveTones(this.song,i,n);for(let s=0;s<t.modCount;s++)for(let t=0;t<this.activeModTones[e][s].count();t++){const r=this.activeModTones[e][s].get(t);0==this.song.channels[i].muted&&this.playTone(this.song,c,f,i,o,O,r,!1,!1)}}this.wantToSkip&&(this.wantToSkip=!1,this.skipBar()),this.isModActive(e.ModSetting.mstReverb,!0)&&(D=.425*Math.pow(this.getModValue(e.ModSetting.mstReverb,!0)/t.reverbRange,.667));const ie=this.tickSampleCountdown,se=1-ie/o,re=1-(ie-O)/o,ne=(this.beat*t.partsPerBeat+this.part)*t.ticksPerPart+this.tick,ae=ne/t.ticksPerPart,oe=(ne+1)/t.ticksPerPart,le=ae+(oe-ae)*se,he=ae+(oe-ae)*re;for(let t=0;t<this.song.pitchChannelCount+this.song.noiseChannelCount;t++)for(let i=0;i<this.song.instrumentsPerChannel;i++){let s=this.song.channels[t].instruments[i],r=s.vibratoSpeed;s.LFOtime=s.nextLFOtime,this.isModActive(e.ModSetting.mstVibratoSpeed,!1,t,i)&&(r=this.getModValue(e.ModSetting.mstVibratoSpeed,!1,t,i,!1)),0==r?(s.LFOtime=0,s.nextLFOtime=0):s.nextLFOtime+=.1*r*(he-le)}for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++){if(e==this.liveInputChannel){this.determineLiveInputTones(this.song);for(let t=0;t<this.liveInputTones.count();t++){const i=this.liveInputTones.get(t);this.playTone(this.song,c,f,e,o,O,i,!1,!1)}}this.determineCurrentActiveTones(this.song,e,n);for(let t=0;t<this.activeTones[e].count();t++){const i=this.activeTones[e].get(t);this.playTone(this.song,c,f,e,o,O,i,!1,!1)}for(let i=0;i<this.releasedTones[e].count();i++){const s=this.releasedTones[e].get(i);if(s.ticksSinceReleased>=s.instrument.getTransition().releaseTicks){this.freeReleasedTone(e,i),i--;continue}const r=i+this.activeTones[e].count()>=t.maximumTonesPerChannel;this.playTone(this.song,c,f,e,o,O,s,!0,r)}}let fe=H+w-k*Math.sin(z+0),ce=H+q-k*Math.sin(z+2.1),me=H+E-k*Math.sin(z+4.2),ue=H+1024+P-k*Math.sin(z+3.2),de=H+1024+C-k*Math.sin(z+5.3),pe=H+1024+R-k*Math.sin(z+1);z+=M*O;const ve=(H+O+w-k*Math.sin(z+0)-fe)/O,ye=(H+O+q-k*Math.sin(z+2.1)-ce)/O,be=(H+O+E-k*Math.sin(z+4.2)-me)/O,ge=(H+O+1024+P-k*Math.sin(z+3.2)-ue)/O,Me=(H+O+1024+C-k*Math.sin(z+5.3)-de)/O,ke=(H+O+1024+R-k*Math.sin(z+1)-pe)/O,we=l+O;for(let e=l;e<we;e++){const t=c,r=c+1,n=u[t];u[t]=0;const a=u[r];u[r]=0;const o=d[t];d[t]=0;const l=d[r];d[r]=0;const h=p[t];p[t]=0;const f=p[r];p[r]=0;const m=v[t];v[t]=0;const M=v[r];v[r]=0,c+=2;const k=h+m,w=f+M,q=fe%1,E=ce%1,P=me%1,C=ue%1,R=de%1,z=pe%1,O=b[2047&fe],K=b[fe+1&2047],_=b[2047&ce],J=b[ce+1&2047],$=b[2047&me],G=b[me+1&2047],Z=b[2047&ue],Q=b[ue+1&2047],X=b[2047&de],Y=b[de+1&2047],ee=b[2047&pe],te=.5*(k-(O+(K-O)*q)+(_+(J-_)*E)-($+(G-$)*P)),ie=.5*(w-(Z+(Q-Z)*C)+(X+(Y-X)*R)-(ee+(b[pe+1&2047]-ee)*z));b[H]=k,b[H+1024&2047]=w,H=H+1&2047,fe+=ve,ce+=ye,me+=be,ue+=ge,de+=Me,pe+=ke;const se=T+3041&16383,re=T+6426&16383,ne=T+10907&16383,ae=g[T],oe=g[se],le=g[re],he=g[ne],we=-(ae+m+o)+oe,qe=-(ae+M+l)-oe,Ee=-le+he,Pe=-le-he;S+=.5*((we+Ee)*D-S),F+=.5*((qe+Pe)*D-F),A+=.5*((we-Ee)*D-A),x+=.5*((qe-Pe)*D-x),g[se]=S,g[re]=F,g[ne]=A,g[T]=x,T=T+1&16383;const Ce=L*L*(n+te+o+oe+le+he),Re=L*L*(a+ie+l+ae+le-he),ze=Ce<0?-Ce:Ce,He=Re<0?-Re:Re,Te=ze>He?ze:He;this.song.inVolumeCap=this.song.inVolumeCap>Te?this.song.inVolumeCap:Te;const Se=+(Te>N)+ +(Te>W),Fe=+(0==Se)*((.8*(Te+1-N)+.25)*V+1.05*(1-V))+1.05*+(1==Se)+1.05*((Te+1-W)*U+(1-W))*+(2==Se);j+=(Fe-j)*(j<Fe?I:B);const Ae=y/(j>=1?1.05*j:.8*j+.25);i[e]=Ce*Ae,s[e]=Re*Ae,this.song.outVolumeCap=this.song.outVolumeCap>Te*Ae?this.song.outVolumeCap:Te*Ae}if(l+=O,this.tickSampleCountdown-=O,this.tickSampleCountdown<=0){for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++)for(let i=0;i<this.releasedTones[e].count();i++){this.releasedTones[e].get(i).ticksSinceReleased++;i+this.activeTones[e].count()>=t.maximumTonesPerChannel&&(this.freeReleasedTone(e,i),i--)}for(let i=0;i<this.song.pitchChannelCount+this.song.noiseChannelCount;i++)for(let s=0;s<this.song.channels[i].instruments.length;s++){let r=this.song.channels[i].instruments[s],n=r.arpeggioSpeed;this.isModActive(e.ModSetting.mstArpeggioSpeed,!1,i,s)?(n=this.getModValue(e.ModSetting.mstArpeggioSpeed,!1,i,s,!1),Number.isInteger(n)?r.arpTime+=t.arpSpeedScale[n]:r.arpTime+=(1-n%1)*t.arpSpeedScale[Math.floor(n)]+n%1*t.arpSpeedScale[Math.ceil(n)]):r.arpTime+=t.arpSpeedScale[n]}if(this.tick++,this.tickSampleCountdown+=o,this.tick==t.ticksPerPart){this.tick=0,this.part++,this.liveInputDuration--;var K=this.part+this.beat*t.partsPerBeat>=this.findPartsInBar(this.bar)-1;for(let e=0;e<this.song.pitchChannelCount+this.song.noiseChannelCount;e++){var _=!1,J=this.activeTones[e].count(),$=this.song.getPattern(e,this.bar);if(null!=$&&K){var G=$.instrument;if(this.song.channels[e].instruments[G].tieNoteTransition&&J>0){var Z=this.bar+1;(Z>=this.song.barCount||Z>=this.song.loopStart+this.song.loopLength&&0!=this.loopRepeatCount)&&(Z=this.song.loopStart);var Q=this.song.getPattern(e,Z),X=this.activeTones[e].get(0).note;if(null!=X){for(var Y=0;X.pins[Y].time+X.start<this.part+this.beat*t.partsPerBeat&&Y<X.pins.length-1;)Y++;var ee=X.pins[Y].volume,te=X.pins[Y].interval;if(null!=Q&&Q.instrument==G)for(let i=0;i<Q.notes.length;i++)if(0==Q.notes[i].start&&Q.notes[i].pins[0].volume==ee&&Q.notes[i].pitches.length==X.pitches.length){_=!0;for(let e=0;e<X.pitches.length;e++)-1==Q.notes[i].pitches.findIndex((t=>t==X.pitches[e]+te))&&(_=!1,e=X.pitches.length);i=Q.notes.length,_&&(this.part+this.beat*t.partsPerBeat<this.findPartsInBar(this.bar)?this.tyingOver[e]<0&&(this.tyingOver[e]=0):0==X.start&&this.tyingOver[e]>=0?this.tyingOver[e]+=this.part+this.beat*t.partsPerBeat:this.tyingOver[e]=this.part+this.beat*t.partsPerBeat-X.start)}}}}for(let i=0;i<this.activeTones[e].count();i++){const s=this.activeTones[e].get(i),r=s.instrument.getTransition();null!=s.note&&s.note.end==this.part+this.beat*t.partsPerBeat&&(r.isSeamless||s.instrument.clicklessTransition||this.tyingOver[e]>=0||(r.releases?this.releaseTone(e,s):this.freeTone(s),this.activeTones[e].remove(i),i--),_||(this.tyingOver[e]=-1))}}for(let e=0;e<this.song.modChannelCount;e++)for(let i=0;i<t.modCount;i++)for(let s=0;s<this.activeModTones[e][i].count();s++){const r=this.activeModTones[e][i].get(s);r.instrument.getTransition().isSeamless||null==r.note||r.note.end!=this.part+this.beat*t.partsPerBeat||(this.freeTone(r),this.activeModTones[e][i].remove(s),s--)}this.part==t.partsPerBeat&&(this.part=0,n&&(this.beat++,this.beat==this.song.beatsPerBar&&(this.beat=0,this.bar++,0!=this.loopRepeatCount&&this.bar==this.song.loopStart+this.song.loopLength&&(this.bar=this.song.loopStart,this.loopRepeatCount>0&&this.loopRepeatCount--),this.bar>=this.song.barCount&&(this.bar=0,-1!=this.loopRepeatCount&&(h=!0,this.resetEffects(),this.pause())))))}}for(let t=0;t<e.ModSetting.mstMaxValue;t++)null!=this.nextModValues&&null!=this.nextModValues[t]&&(this.modValues[t]=this.nextModValues[t]);this.isModActive(e.ModSetting.mstTempo,!0)&&(o=this.getSamplesPerTick(),this.tickSampleCountdown=Math.min(this.tickSampleCountdown,o));for(let e=0;e<this.song.pitchChannelCount;e++)for(let i of this.song.channels[e].instruments)i.nextLFOtime=i.nextLFOtime%(t.vibratoTypes[i.vibratoType].period/(t.ticksPerPart*o/this.samplesPerSecond)),i.arpTime=i.arpTime%(2520*t.ticksPerArpeggio);for(let t=0;t<e.ModSetting.mstMaxValue;t++)for(let e=0;e<a;e++)for(let i=0;i<this.song.instrumentsPerChannel;i++)null!=this.nextModInsValues&&null!=this.nextModInsValues[e]&&null!=this.nextModInsValues[e][i]&&null!=this.nextModInsValues[e][i][t]&&(this.modInsValues[e][i][t]=this.nextModInsValues[e][i][t])}const ie=1e-24;-1e-24<S&&S<ie&&(S=0),-1e-24<F&&F<ie&&(F=0),-1e-24<A&&A<ie&&(A=0),-1e-24<x&&x<ie&&(x=0),-1e-24<j&&j<ie&&(j=0),this.stereoBufferIndex=(this.stereoBufferIndex+2*r)%f,this.chorusPhase=z,this.chorusDelayPos=H,this.reverbDelayPos=T,this.reverbFeedback0=S,this.reverbFeedback1=F,this.reverbFeedback2=A,this.reverbFeedback3=x,this.limit=j,n&&(this.playheadInternal=(((this.tick+1-this.tickSampleCountdown/o)/2+this.part)/t.partsPerBeat+this.beat)/this.song.beatsPerBar+this.bar)}freeTone(e){this.tonePool.pushBack(e)}newTone(){if(this.tonePool.count()>0){const e=this.tonePool.popBack();return e.reset(),e.active=!1,e}return new T}releaseTone(e,t){null!=this.song&&this.song.getChannelIsMod(e)||this.releasedTones[e].pushFront(t)}freeReleasedTone(e,t){null!=this.song&&this.song.getChannelIsMod(e)||(this.freeTone(this.releasedTones[e].get(t)),this.releasedTones[e].remove(t))}freeAllTones(){for(;this.liveInputTones.count()>0;)this.freeTone(this.liveInputTones.popBack());for(let e=0;e<this.activeTones.length;e++)for(;this.activeTones[e].count()>0;)this.freeTone(this.activeTones[e].popBack());for(let e=0;e<this.releasedTones.length;e++)for(;this.releasedTones[e].count()>0;)this.freeTone(this.releasedTones[e].popBack());for(let e=0;e<this.activeModTones.length;e++)for(let t=0;t<this.activeModTones[e].length;t++)for(;this.activeModTones[e][t].count()>0;)this.freeTone(this.activeModTones[e][t].popBack())}determineLiveInputTones(e){const t=this.liveInputTones,i=this.liveInputPitches;let s=0;if(this.liveInputDuration>0){const r=e.channels[this.liveInputChannel].instruments[e.getPatternInstrument(this.liveInputChannel,this.bar)];if(r.getChord().arpeggiates){let e;0==t.count()?(e=this.newTone(),t.pushBack(e)):!r.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(this.liveInputChannel,t.popFront()),e=this.newTone(),t.pushBack(e)):e=t.get(0),s=1;for(let t=0;t<i.length;t++)e.pitches[t]=i[t];e.pitchCount=i.length,e.chordSize=1,e.instrument=r,e.note=e.prevNote=e.nextNote=null}else for(let e=0;e<i.length;e++){let n;t.count()<=e?(n=this.newTone(),t.pushBack(n)):!r.getTransition().isSeamless&&this.liveInputStarted?(this.releaseTone(this.liveInputChannel,t.get(e)),n=this.newTone(),t.set(e,n)):n=t.get(e),s++,n.pitches[0]=i[e],n.pitchCount=1,n.chordSize=i.length,n.instrument=r,n.note=n.prevNote=n.nextNote=null}}for(;t.count()>s;)this.releaseTone(this.liveInputChannel,t.popBack());this.liveInputStarted=!1}determineCurrentActiveTones(e,i,s){const r=e.channels[i].instruments[e.getPatternInstrument(i,this.bar)],n=e.getPattern(i,this.bar),a=this.part+this.beat*t.partsPerBeat;if(s&&e.getChannelIsMod(i)&&!e.channels[i].muted){let s=i-(e.pitchChannelCount+e.noiseChannelCount),o=[],l=[],h=[],f=t.modCount;for(;f--;)o.push(null),l.push(null),h.push(null);if(null!=n)for(let e=0;e<n.notes.length;e++)n.notes[e].end<=a?(null==l[n.notes[e].pitches[0]]||n.notes[e].end>l[n.notes[e].pitches[0]].start)&&(l[n.notes[e].pitches[0]]=n.notes[e]):n.notes[e].start<=a&&n.notes[e].end>a?o[n.notes[e].pitches[0]]=n.notes[e]:n.notes[e].start>a&&(null==h[n.notes[e].pitches[0]]||n.notes[e].start<h[n.notes[e].pitches[0]].start)&&(h[n.notes[e].pitches[0]]=n.notes[e]);for(let e=0;e<t.modCount;e++){const t=this.activeModTones[s][e];if(null!=o[e])null!=l[e]&&l[e].end!=o[e].start&&(l[e]=null),null!=h[e]&&h[e].start!=o[e].end&&(h[e]=null),this.syncTones(i,t,r,o[e].pitches,o[e],l[e],h[e],a);else for(;t.count()>0;)this.freeTone(t.popBack())}}else if(!e.getChannelIsMod(i)){let t=null,o=null,l=null;if(s&&null!=n&&!e.channels[i].muted)for(let e=0;e<n.notes.length;e++)if(n.notes[e].end<=a)o=n.notes[e];else if(n.notes[e].start<=a&&n.notes[e].end>a)t=n.notes[e];else if(n.notes[e].start>a){l=n.notes[e];break}const h=this.activeTones[i];if(null!=t)null!=o&&o.end!=t.start&&(o=null),null!=l&&l.start!=t.end&&(l=null),this.syncTones(i,h,r,t.pitches,t,o,l,a);else for(;h.count()>0;)h.peakBack().instrument.getTransition().releases&&this.tyingOver[i]<0?this.releaseTone(i,h.popBack()):this.freeTone(h.popBack())}}syncTones(e,i,s,r,n,a,o,l){let h=0,f=e<this.song.pitchChannelCount+this.song.noiseChannelCount?Math.max(0,this.tyingOver[e]):0;if(s.getChord().arpeggiates){let e;0==i.count()?(e=this.newTone(),i.pushBack(e)):e=i.get(0),h=1;for(let t=0;t<r.length;t++)e.pitches[t]=r[t];e.pitchCount=r.length,e.chordSize=1,e.instrument=s,e.note=n,e.noteStart=n.start-f,e.noteEnd=n.end,e.prevNote=a,e.nextNote=o,e.prevNotePitchIndex=0,e.nextNotePitchIndex=0}else{const c=s.getTransition();for(let m=0;m<r.length;m++){const r=m*s.getChord().strumParts;let u=a&&a.pitches.length>m?a:null,d=n,p=o&&o.pitches.length>m?o:null,v=d.start+r-f;if(v>l){if(!(i.count()>m&&(c.isSeamless||this.tyingOver[e]>=0)&&null!=u))break;p=d,d=u,u=null,v=d.start+r-f}let y,b=d.end;(c.isSeamless||this.tyingOver[e]>=0)&&null!=p&&(b=Math.min(t.partsPerBeat*this.song.beatsPerBar,b+r)),i.count()<=m?(y=this.newTone(),i.pushBack(y)):y=i.get(m),h++,y.pitches[0]=d.pitches[m],y.pitchCount=1,y.chordSize=d.pitches.length,y.instrument=s,y.note=d,y.noteStart=v,y.noteEnd=b,y.prevNote=u,y.nextNote=p,y.prevNotePitchIndex=m,y.nextNotePitchIndex=m}}for(;i.count()>h;)i.peakBack().instrument.getTransition().releases&&this.tyingOver[e]<0?this.releaseTone(e,i.popBack()):this.freeTone(i.popBack())}playTone(e,t,i,s,r,n,a,o,l){let h;switch(S.computeTone(this,e,s,r,n,a,o,l),a.instrument.effects){case 0:h=this.samplesForNone;break;case 1:h=this.samplesForReverb;break;case 2:h=this.samplesForChorus;break;case 3:h=this.samplesForChorusReverb;break;default:throw new Error}S.getInstrumentSynthFunction(a.instrument)(this,h,t,i,2*n,a,a.instrument)}static computeEnvelope(e,t,i,s){switch(e.type){case 0:return s;case 1:return 1;case 4:return 1/(1+t*e.speed);case 5:return 1-1/(1+t*e.speed);case 6:return.5-.5*Math.cos(2*i*Math.PI*e.speed);case 7:return.75-.25*Math.cos(2*i*Math.PI*e.speed);case 2:return Math.max(1,2-10*t);case 3:const r=e.speed,n=.25/Math.sqrt(r);return t<n?t/n:1/(1+(t-n)*r);case 8:return Math.pow(2,-e.speed*t);default:throw new Error("Unrecognized operator envelope type.")}}static computeChordVolume(e){return 1/(.25*(e-1)+1)}static computeTone(i,s,r,n,o,l,h,f){const c=l.instrument,m=c.getTransition(),u=c.getChord(),d=u.arpeggiates?1:S.computeChordVolume(l.chordSize),p=s.getChannelIsNoise(r),v=p?t.noiseInterval:1,y=t.ticksPerPart*n/i.samplesPerSecond,b=1/t.partsPerBeat,g=l.active,M=i.tickSampleCountdown,k=1-M/n,w=1-(M-o)/n,q=(i.beat*t.partsPerBeat+i.part)*t.ticksPerPart+i.tick,E=q/t.ticksPerPart,C=(q+1)/t.ticksPerPart,R=E+(C-E)*k,z=E+(C-E)*w,H=i.song.channels[r].instruments.findIndex((e=>e==c)),T=m.isSeamless||i.tyingOver[r]>=0;l.phaseDeltaScale=0,l.filter=1,l.filterScale=1,l.vibratoScale=0,l.intervalMult=1,l.intervalVolumeMult=1,l.active=!1;let F=c.pan,A=c.pan;i.isModActive(e.ModSetting.mstPan,!1,r,H)&&(F=i.getModValue(e.ModSetting.mstPan,!1,r,H,!1),A=i.getModValue(e.ModSetting.mstPan,!1,r,H,!0));let x=c.panDelay,O=c.panDelay;i.isModActive(e.ModSetting.mstPanDelay,!1,r,H)&&(x=i.getModValue(e.ModSetting.mstPanDelay,!1,r,H,!1),O=i.getModValue(e.ModSetting.mstPanDelay,!1,r,H,!0));const D=(F-t.panCenter)/t.panCenter,B=(A-t.panCenter)/t.panCenter,I=13e-5*x*i.samplesPerSecond,N=13e-5*O*i.samplesPerSecond;l.stereoDelayStart=-D*I;const W=-B*N;l.stereoDelayDelta=(W-l.stereoDelayStart)/o,l.stereoVolumeLStart=1.414*Math.cos((1+D)*Math.PI*.25),l.stereoVolumeRStart=1.414*Math.cos((1-D)*Math.PI*.25);const V=1.414*Math.cos((1+B)*Math.PI*.25),U=1.414*Math.cos((1-B)*Math.PI*.25);l.stereoVolumeLDelta=(V-l.stereoVolumeLStart)/o,l.stereoVolumeRDelta=(U-l.stereoVolumeRStart)/o;let L,j,K,_,J=!0,$=0,G=0,Z=0,Q=1,X=1,Y=d,ee=d,te=0,ie=0,se=0,re=0;if(3==c.type)p?(j=t.spectrumBasePitch,K=.6):(j=0,K=.3),L=t.spectrumBasePitch,_=28;else if(4==c.type)j=t.spectrumBasePitch,K=.45,L=j,_=48;else if(2==c.type)j=t.chipNoises[c.chipNoise].basePitch,K=.19,L=j,_=t.chipNoises[c.chipNoise].isSoft?24:60;else if(1==c.type)j=0,K=.03,L=16,_=48;else if(0==c.type||7==c.type)j=0,K=.03375,L=16,_=48;else if(5==c.type)j=0,K=.025,L=16,_=48;else if(6==c.type)j=0,K=.04725,L=16,_=48;else{if(8!=c.type)throw new Error("Unknown instrument type in computeTone.");K=1,L=0,_=1,j=0}for(let e=0;e<t.operatorCount;e++)l.phaseDeltas[e]=0,l.volumeStarts[e]=0,l.volumeDeltas[e]=0;if(h){const e=l.noteLengthTicks+l.ticksSinceReleased,i=l.ticksSinceReleased+k,s=l.ticksSinceReleased+w,r=l.noteLengthTicks+i,n=l.noteLengthTicks+s,a=l.instrument.getTransition();J=!1,$=Math.floor(e/t.ticksPerPart),G=Z=l.lastInterval,te=ie=S.expressionToVolumeMult(l.lastVolume),Q=S.expressionToVolumeMult(6*(1-i/a.releaseTicks)),X=S.expressionToVolumeMult(6*(1-s/a.releaseTicks)),se=r/t.ticksPerPart,re=n/t.ticksPerPart,f&&(Q*=1-k,X*=1-w)}else if(null==l.note){Q=X=1,te=ie=1,l.lastInterval=0,l.lastVolume=6,l.ticksSinceReleased=0,J=!1;const e=l.liveInputSamplesHeld/n;l.liveInputSamplesHeld+=o;const i=l.liveInputSamplesHeld/n;l.noteLengthTicks=i;const s=e/t.ticksPerPart,r=i/t.ticksPerPart;$=Math.floor(s),se=s,re=r}else{const e=l.note,n=l.prevNote,a=l.nextNote,o=i.part+i.beat*t.partsPerBeat,h=t.partsPerBeat*s.beatsPerBar,f=l.noteStart,p=l.noteEnd;let v;for($=o-f,v=1;v<e.pins.length-1&&!(e.pins[v].time+e.start>o);v++);const y=e.pins[v-1],b=e.pins[v],M=f*t.ticksPerPart,q=p*t.ticksPerPart-M,P=(e.start+y.time)*t.ticksPerPart,R=(e.start+b.time)*t.ticksPerPart;l.lastInterval=e.pins[e.pins.length-1].interval,l.lastVolume=e.pins[e.pins.length-1].volume,l.ticksSinceReleased=0,l.noteLengthTicks=q;const z=o*t.ticksPerPart+i.tick,H=o*t.ticksPerPart+i.tick+1,F=z-M,A=H-M,x=Math.min(1,(z-P)/(R-P)),O=Math.min(1,(H-P)/(R-P));let D=y.volume+(b.volume-y.volume)*x,B=y.volume+(b.volume-y.volume)*O,I=1,N=1,W=d,V=d,U=y.interval+(b.interval-y.interval)*x,L=y.interval+(b.interval-y.interval)*O,j=E-f,K=C-f;J=z+k-M==0||!g;const _=.5*q;if(T&&!m.slides&&0==e.start)J=!g;else if(T&&null!=n&&(J=!g,m.slides)){const t=Math.min(_,m.slideTicks),i=Math.max(0,1-F/t),s=Math.max(0,1-A/t),r=.5*(n.pitches[l.prevNotePitchIndex]+n.pins[n.pins.length-1].interval-l.pitches[0]),a=.5*(n.pins[n.pins.length-1].volume-e.pins[0].volume),o=.5*(n.end-n.start);if(U+=i*r,L+=s*r,D+=i*a,B+=s*a,j+=i*o,K+=s*o,!u.arpeggiates){const e=.5*(n.pitches.length-l.chordSize);W=S.computeChordVolume(l.chordSize+i*e),V=S.computeChordVolume(l.chordSize+s*e)}}if(T&&!m.slides&&e.end==h);else if(T&&null!=a){if(m.slides){const t=Math.min(_,m.slideTicks),i=Math.max(0,1-(q-F)/t),s=Math.max(0,1-(q-A)/t),r=.5*(a.pitches[l.nextNotePitchIndex]-(l.pitches[0]+e.pins[e.pins.length-1].interval)),n=.5*(a.pins[0].volume-e.pins[e.pins.length-1].volume),o=.5*-(p-f);if(U+=i*r,L+=s*r,D+=i*n,B+=s*n,j+=i*o,K+=s*o,!u.arpeggiates){const e=.5*(a.pitches.length-l.chordSize);W=S.computeChordVolume(l.chordSize+i*e),V=S.computeChordVolume(l.chordSize+s*e)}}}else if(!(m.releases&&i.tyingOver[r]<0)){const e=m.releaseTicks;e>0&&(I*=Math.min(1,(q-F)/e),N*=Math.min(1,(q-A)/e))}G=U+(L-U)*k,Z=U+(L-U)*w,8!=c.type?(te=S.expressionToVolumeMult(D+(B-D)*k),ie=S.expressionToVolumeMult(D+(B-D)*w)):(te=D+(B-D)*Math.max(0,k),ie=D+(B-D)*Math.min(1,w),l.customVolumeStart=te,l.customVolumeEnd=ie),Q=I+(N-I)*k,X=I+(N-I)*w,Y=W+(V-W)*k,ee=W+(V-W)*w,se=j+(K-j)*k,re=j+(K-j)*w}const ne=1/i.samplesPerSecond;if(l.active=!0,0==c.type||1==c.type||5==c.type||6==c.type||7==c.type||3==c.type){const s=S.getLFOAmplitude(c,y*c.LFOtime),n=S.getLFOAmplitude(c,y*c.nextLFOtime);let a,o,l=c.vibratoDepth,h=c.vibratoDepth;i.isModActive(e.ModSetting.mstVibratoDepth,!1,r,H)&&(l=i.getModValue(e.ModSetting.mstVibratoDepth,!1,r,H,!1)/25,h=i.getModValue(e.ModSetting.mstVibratoDepth,!1,r,H,!0)/25);const f=i.isModActive(e.ModSetting.mstVibratoDelay,!1,r,H);if(c.vibrato==t.vibratos.length||f){let t=c.vibratoDelay,s=c.vibratoDelay;f&&(t=i.getModValue(e.ModSetting.mstVibratoDelay,!1,r,H,!1),s=i.getModValue(e.ModSetting.mstVibratoDelay,!1,r,H,!0),t==i.song.mstMaxVols.get(e.ModSetting.mstVibratoDelay)&&(t=Number.MAX_VALUE),s==i.song.mstMaxVols.get(e.ModSetting.mstVibratoDelay)&&(s=Number.MAX_VALUE)),a=t,o=s}else a=t.vibratos[c.vibrato].delayParts,o=t.vibratos[c.vibrato].delayParts;G+=($<a?0:l)*s,Z+=($<o?0:h)*n}if(!T||(m.slides||null==l.note||0!=l.note.start)&&null==l.prevNote){const e=m.attackSeconds;e>0&&(Q*=Math.min(1,y*se/e),X*=Math.min(1,y*re/e))}const ae=S.instrumentVolumeToVolumeMult(c.volume);4==c.type&&(l.drumsetPitch=l.pitches[0],null!=l.note&&(l.drumsetPitch+=l.note.pickMainInterval()),l.drumsetPitch=Math.max(0,Math.min(t.drumCount-1,l.drumsetPitch)));let oe,le,he=c.filterCutoff,fe=c.filterCutoff;i.isModActive(e.ModSetting.mstFilterCut,!1,r,H)&&(he=s.modValueToReal(i.getModValue(e.ModSetting.mstFilterCut,!1,r,H,!1),e.ModSetting.mstFilterCut),fe=s.modValueToReal(i.getModValue(e.ModSetting.mstFilterCut,!1,r,H,!0),e.ModSetting.mstFilterCut)),4==c.type?(oe=0,le=0):(oe=.5*(he-(t.filterCutoffRange-1)),le=.5*(fe-(t.filterCutoffRange-1)));const ce=4==c.type?c.getDrumsetEnvelope(l.drumsetPitch):c.getFilterEnvelope(),me=t.filterCutoffMaxHz*Math.pow(2,oe),ue=t.filterCutoffMaxHz*Math.pow(2,le),de=2*Math.sin(Math.PI*me/i.samplesPerSecond),pe=2*Math.sin(Math.PI*ue/i.samplesPerSecond),ve=2*Math.sin(Math.PI*t.filterCutoffMinHz/i.samplesPerSecond);l.filter=de*S.computeEnvelope(ce,y*se,b*R,te);let ye=pe*S.computeEnvelope(ce,y*re,b*z,ie);l.filter=Math.min(t.filterMax,Math.max(ve,l.filter)),ye=Math.min(t.filterMax,Math.max(ve,ye)),l.filterScale=Math.pow(ye/l.filter,1/o);let be=Math.pow(.5,.35*oe),ge=Math.pow(.5,.35*le);l.filterResonanceStart=c.getFilterResonance(),l.filterResonanceDelta=0;let Me=c.filterResonance,ke=c.filterResonance;if(l.isFirstOrder=4!=c.type&&0==Me,i.isModActive(e.ModSetting.mstFilterPeak,!1,r,H)){l.isFirstOrder=!1,Me=s.modValueToReal(i.getModValue(e.ModSetting.mstFilterPeak,!1,r,H,!1),e.ModSetting.mstFilterPeak),ke=s.modValueToReal(i.getModValue(e.ModSetting.mstFilterPeak,!1,r,H,!0),e.ModSetting.mstFilterPeak),l.filterResonanceStart=t.filterMaxResonance*Math.pow(Math.max(0,Me-1)/(t.filterResonanceRange-2),.5);const n=t.filterMaxResonance*Math.pow(Math.max(0,ke-1)/(t.filterResonanceRange-2),.5);l.filterResonanceDelta=(n-l.filterResonanceStart)/o}else l.filterResonanceStart=t.filterMaxResonance*Math.pow(Math.max(0,Me-1)/(t.filterResonanceRange-2),.5);if(0==l.isFirstOrder&&(be=Math.pow(be,1.7)*Math.pow(.5,.125*(Me-1)),ge=Math.pow(ge,1.7)*Math.pow(.5,.125*(ke-1))),8==ce.type?(be*=1.25+.025*ce.speed,ge*=1.25+.025*ce.speed):4==ce.type&&(be*=1+.02*ce.speed,ge*=1+.02*ce.speed),J&&l.reset(),1==c.type){let n=1,h=1,f=0,m=0,d=0;if(l.pitchCount>1&&!u.harmonizes){const e=Math.floor(c.arpTime/t.ticksPerArpeggio);d=l.pitches[a(l.pitchCount,c.fastTwoNoteArp,e)]-l.pitches[0]}let p=c.detune/25,g=c.detune/25;i.isModActive(e.ModSetting.mstDetune,!1,r,H)&&(p=i.getModValue(e.ModSetting.mstDetune,!1,r,H,!1)/25,g=i.getModValue(e.ModSetting.mstDetune,!1,r,H,!0)/25),i.isModActive(e.ModSetting.mstSongDetune,!0)&&(p+=i.getModValue(e.ModSetting.mstSongDetune,!0,null,null,!1)/25,g+=i.getModValue(e.ModSetting.mstSongDetune,!0,null,null,!0)/25);const M=t.algorithms[c.algorithm].carrierCount;for(let a=0;a<t.operatorCount;a++){const k=t.algorithms[c.algorithm].associatedCarrier[a]-1,w=l.pitches[u.harmonizes?a<l.pitchCount?a:k<l.pitchCount?k:0:0],q=t.operatorFrequencies[c.operators[a].frequency].mult,E=t.operatorCarrierInterval[k]+d,C=j+(w+G+p)*v+E,T=q*P.frequencyFromPitch(C,s.centerFrequency,s.edo)+t.operatorFrequencies[c.operators[a].frequency].hzOffset;l.phaseDeltas[a]=T*ne*t.sineWaveLength;let F=c.operators[a].amplitude,A=c.operators[a].amplitude;i.isModActive(e.ModSetting.mstFMSlider1+a,!1,r,H)&&(F*=i.getModValue(e.ModSetting.mstFMSlider1+a,!1,r,H,!1)/15,A*=i.getModValue(e.ModSetting.mstFMSlider1+a,!1,r,H,!0)/15);const x=S.operatorAmplitudeCurve(F),O=S.operatorAmplitudeCurve(A);let D=x*t.operatorFrequencies[c.operators[a].frequency].amplitudeSign,B=O*t.operatorFrequencies[c.operators[a].frequency].amplitudeSign;if(i.isModActive(e.ModSetting.mstInsVolume,!1,r,H)){const s=i.getModValue(e.ModSetting.mstInsVolume,!1,r,H,!1),n=i.getModValue(e.ModSetting.mstInsVolume,!1,r,H,!0);D*=s<=0?(s+t.volumeRange/2)/(t.volumeRange/2):this.instrumentVolumeToVolumeMult(s),B*=n<=0?(n+t.volumeRange/2)/(t.volumeRange/2):this.instrumentVolumeToVolumeMult(n)}if(i.isModActive(e.ModSetting.mstSongVolume,!0)&&(D*=i.getModValue(e.ModSetting.mstSongVolume,!0,void 0,void 0,!1)/100,B*=i.getModValue(e.ModSetting.mstSongVolume,!0,void 0,void 0,!0)/100),a<M){const e=j+(w+Z+g)*v+E,t=Math.pow(2,-(C-L)/_),i=Math.pow(2,-(e-L)/_);D*=t,B*=i,f+=x,m+=O}else D*=1.5*t.sineWaveLength,B*=1.5*t.sineWaveLength,n*=1-Math.min(1,F/15),h*=1-Math.min(1,A/15);const I=t.envelopes[c.operators[a].envelope];D*=S.computeEnvelope(I,y*se,b*R,te),B*=S.computeEnvelope(I,y*re,b*z,ie),l.volumeStarts[a]=D,l.volumeDeltas[a]=(B-D)/o}let k=c.feedbackAmplitude,w=c.feedbackAmplitude;i.isModActive(e.ModSetting.mstFMFeedback,!1,r,H)&&(k*=i.getModValue(e.ModSetting.mstFMFeedback,!1,r,H,!1)/15,w*=i.getModValue(e.ModSetting.mstFMFeedback,!1,r,H,!0)/15);const q=.3*t.sineWaveLength*k/15,E=.3*t.sineWaveLength*w/15,C=t.envelopes[c.feedbackEnvelope];let T=q*S.computeEnvelope(C,y*se,b*R,te),F=E*S.computeEnvelope(C,y*re,b*z,ie);l.feedbackMult=T,l.feedbackDelta=(F-l.feedbackMult)/o;const A=K*ae;l.volumeStart=be*A*Q*Y;const x=ge*A*X*ee;l.volumeDelta=(x-l.volumeStart)/o,n*=(Math.pow(2,2-1.4*k/15)-1)/3,h*=(Math.pow(2,2-1.4*w/15)-1)/3,n*=1-Math.min(1,Math.max(0,f-1)/2),h*=1-Math.min(1,Math.max(0,m-1)/2),l.volumeStart*=1+3*n,l.volumeDelta*=1+1.5*(n+h)}else if(8==c.type){l.volumeStart=Q;let e=X;l.volumeStart*=te,e*=ie,l.volumeDelta=(e-l.volumeStart)/o}else{let n=c.detune/25,h=c.detune/25;i.isModActive(e.ModSetting.mstDetune,!1,r,H)&&(n=i.getModValue(e.ModSetting.mstDetune,!1,r,H,!1)/25,h=i.getModValue(e.ModSetting.mstDetune,!1,r,H,!0)/25),i.isModActive(e.ModSetting.mstSongDetune,!0)&&(n+=i.getModValue(e.ModSetting.mstSongDetune,!0,null,null,!1)/25,h+=i.getModValue(e.ModSetting.mstSongDetune,!0,null,null,!0)/25);let f=l.pitches[0];if(l.pitchCount>1){const e=Math.floor(c.arpTime/t.ticksPerArpeggio);if(u.harmonizes){const t=l.pitches[1+a(l.pitchCount-1,c.fastTwoNoteArp,e)]-l.pitches[0];l.intervalMult=Math.pow(2,t/s.edo),l.intervalVolumeMult=Math.pow(2,-t/_)}else f=l.pitches[a(l.pitchCount,c.fastTwoNoteArp,e)]}const m=j+(f+G+n)*v,d=j+(f+Z+h)*v,p=P.frequencyFromPitch(m,s.centerFrequency,s.edo),g=Math.pow(2,-(m-L)/_),M=Math.pow(2,-(d-L)/_);let k=K*be,w=K*ge;if(2==c.type&&(k*=t.chipNoises[c.chipNoise].volume,w*=t.chipNoises[c.chipNoise].volume),0!=c.type&&7!=c.type||(k*=t.chipWaves[c.chipWave].volume,w*=t.chipWaves[c.chipWave].volume),0!=c.type&&5!=c.type&&7!=c.type||(k*=t.intervals[c.interval].volume,w*=t.intervals[c.interval].volume),6==c.type){let s=c.pulseWidth/(2*t.pulseWidthRange),n=c.pulseWidth/(2*t.pulseWidthRange);i.isModActive(e.ModSetting.mstPulseWidth,!1,r,H)&&(s=i.getModValue(e.ModSetting.mstPulseWidth,!1,r,H,!1)/(2*t.pulseWidthRange),n=i.getModValue(e.ModSetting.mstPulseWidth,!1,r,H,!0)/(2*t.pulseWidthRange));const a=t.envelopes[c.pulseEnvelope],h=s*S.computeEnvelope(a,y*se,b*R,te),f=n*S.computeEnvelope(a,y*re,b*z,ie);l.pulseWidth=h,l.pulseWidthDelta=(f-h)/o}l.phaseDeltas[0]=p*ne,l.volumeStart=Q*Y*g*k*ae;let q=X*ee*M*w*ae;if(0==ce.type||6==c.type&&0==t.envelopes[c.pulseEnvelope].type||(l.volumeStart*=te,q*=ie),i.isModActive(e.ModSetting.mstInsVolume,!1,r,H)){const s=i.getModValue(e.ModSetting.mstInsVolume,!1,r,H,!1),n=i.getModValue(e.ModSetting.mstInsVolume,!1,r,H,!0);l.volumeStart*=s<=0?(s+t.volumeRange/2)/(t.volumeRange/2):this.instrumentVolumeToVolumeMult(s),q*=n<=0?(n+t.volumeRange/2)/(t.volumeRange/2):this.instrumentVolumeToVolumeMult(n)}i.isModActive(e.ModSetting.mstSongVolume,!0)&&(l.volumeStart*=i.getModValue(e.ModSetting.mstSongVolume,!0,void 0,void 0,!1)/100,q*=i.getModValue(e.ModSetting.mstSongVolume,!0,void 0,void 0,!0)/100),l.volumeDelta=(q-l.volumeStart)/o}l.phaseDeltaScale=Math.pow(2,(Z-G)*v/s.edo/o)}static getLFOAmplitude(e,i){let s=0;for(const r of t.vibratoTypes[e.vibratoType].periodsSeconds)s+=Math.sin(2*Math.PI*i/r);return s}static getInstrumentSynthFunction(e){if(1==e.type){const i=e.algorithm+"_"+e.feedbackType;if(null==S.fmSynthFunctionCache[i]){const s=[];for(const i of S.fmSourceTemplate)if(-1!=i.indexOf("// CARRIER OUTPUTS")){const r=[];for(let i=0;i<t.algorithms[e.algorithm].carrierCount;i++)r.push("operator"+i+"Scaled");s.push(i.replace("/*operator#Scaled*/",r.join(" + ")))}else if(-1!=i.indexOf("// INSERT OPERATOR COMPUTATION HERE"))for(let i=t.operatorCount-1;i>=0;i--)for(const r of S.operatorSourceTemplate)if(-1!=r.indexOf("/* + operator@Scaled*/")){let n="";for(const s of t.algorithms[e.algorithm].modulatedBy[i])n+=" + operator"+(s-1)+"Scaled";const a=t.feedbacks[e.feedbackType].indices[i];if(a.length>0){n+=" + feedbackMult * (";const e=[];for(const t of a)e.push("operator"+(t-1)+"Output");n+=e.join(" + ")+")"}s.push(r.replace(/\#/g,i+"").replace("/* + operator@Scaled*/",n))}else s.push(r.replace(/\#/g,i+""));else if(-1!=i.indexOf("#"))for(let e=0;e<t.operatorCount;e++)s.push(i.replace(/\#/g,e+""));else s.push(i);S.fmSynthFunctionCache[i]=new Function("synth","data","stereoBufferIndex","stereoBufferLength","runLength","tone","instrument",s.join("\n"))}return S.fmSynthFunctionCache[i]}if(0==e.type)return S.chipSynth;if(7==e.type)return S.chipSynth;if(5==e.type)return S.harmonicsSynth;if(6==e.type)return S.pulseWidthSynth;if(2==e.type)return S.noiseSynth;if(3==e.type)return S.spectrumSynth;if(4==e.type)return S.drumsetSynth;if(8==e.type)return S.modSynth;throw new Error("Unrecognized instrument type: "+e.type)}static chipSynth(e,i,s,r,n,a,o,l){var h,f;7==o.type?(h=o.customChipWaveIntegral,f=.1):(h=t.chipWaves[o.chipWave].samples,f=1);const c=+h.length-1,m=+Math.pow(2,(t.intervals[o.interval].offset+t.intervals[o.interval].spread)/l),u=Math.pow(2,(t.intervals[o.interval].offset-t.intervals[o.interval].spread)/l)*a.intervalMult,d=a.intervalVolumeMult*t.intervals[o.interval].sign;0!=o.interval||o.getChord().customInterval||(a.phases[1]=a.phases[0]);const p=u/m;let v=a.phaseDeltas[0]*m*c,y=v*p;const b=+a.phaseDeltaScale;let g=+a.volumeStart;const M=+a.volumeDelta;let k=a.phases[0]%1*c,w=a.phases[1]%1*c;const q=a.isFirstOrder;let E=+a.filter,P=q?1:E;const C=+a.filterScale,R=q?1:C;let z=a.filterResonanceStart,H=a.filterResonanceDelta,T=+a.filterSample0,S=+a.filterSample1;const F=0|k,A=0|w,x=F%c,O=A%c,D=k-F,B=w-A;let I=h[x],N=h[O];I+=(h[x+1]-I)*D,N+=(h[O+1]-N)*B;const W=s+n;s+=a.stereoOffset;let V,U=a.stereoVolumeLStart,L=a.stereoVolumeLDelta,j=a.stereoVolumeRStart,K=a.stereoVolumeRDelta,_=a.stereoDelayStart,J=a.stereoDelayDelta;for(;s<W;){k+=v,w+=y;const e=0|k,t=0|w,n=e%c,a=t%c;let o=h[n],l=h[a];const m=k-e,u=w-t;o+=(h[n+1]-o)*m,l+=(h[a+1]-l)*u;let p=(o-I)/v,q=(l-N)/y;I=o,N=l;T+=E*(p+q*d-T+(z+z/(1-E))*(T-S)),S+=P*(T-S),E*=C,P*=R,v*=b,y*=b,z+=H;const F=S*g*f;g+=M,V=_<0?[0,0,2*(0|-_),-_%1]:[2*(0|_),_%1,0,0],i[(s+V[0])%r]+=F*U*(1-V[1]),i[(s+V[0]+2)%r]+=F*U*V[1],i[(s+V[2]+1)%r]+=F*j*(1-V[3]),i[(s+V[2]+3)%r]+=F*j*V[3],U+=L,j+=K,_+=J,s+=2}a.phases[0]=k/c,a.phases[1]=w/c;const $=1e-24;-1e-24<T&&T<$&&(T=0),-1e-24<S&&S<$&&(S=0),a.filterSample0=T,a.filterSample1=S}static harmonicsSynth(e,i,s,r,n,a,o,l){const h=o.harmonicsWave.getCustomWave(),f=+h.length-1,c=+Math.pow(2,(t.intervals[o.interval].offset+t.intervals[o.interval].spread)/l),m=Math.pow(2,(t.intervals[o.interval].offset-t.intervals[o.interval].spread)/l)*a.intervalMult,u=a.intervalVolumeMult*t.intervals[o.interval].sign;0!=o.interval||o.getChord().customInterval||(a.phases[1]=a.phases[0]);const d=m/c;let p=a.phaseDeltas[0]*c*f,v=p*d;const y=+a.phaseDeltaScale;let b=+a.volumeStart;const g=+a.volumeDelta;let M=a.phases[0]%1*f,k=a.phases[1]%1*f;const w=a.isFirstOrder;let q=+a.filter,E=w?1:q;const P=+a.filterScale,C=w?1:P;let R=a.filterResonanceStart,z=a.filterResonanceDelta,H=+a.filterSample0,T=+a.filterSample1;const S=0|M,F=0|k,A=S%f,x=F%f,O=M-S,D=k-F;let B=h[A],I=h[x];B+=(h[A+1]-B)*O,I+=(h[x+1]-I)*D;const N=s+n;s+=a.stereoOffset;let W,V=a.stereoVolumeLStart,U=a.stereoVolumeLDelta,L=a.stereoVolumeRStart,j=a.stereoVolumeRDelta,K=a.stereoDelayStart,_=a.stereoDelayDelta;for(;s<N;){M+=p,k+=v;const e=0|M,t=0|k,n=e%f,a=t%f;let o=h[n],l=h[a];const c=M-e,m=k-t;o+=(h[n+1]-o)*c,l+=(h[a+1]-l)*m;let d=(o-B)/p,w=(l-I)/v;B=o,I=l;H+=q*(d+w*u-H+(R+R/(1-q))*(H-T)),T+=E*(H-T),q*=P,E*=C,p*=y,v*=y,R+=z;const S=T*b;b+=g,W=K<0?[0,0,2*(0|-K),-K%1]:[2*(0|K),K%1,0,0],i[(s+W[0])%r]+=S*V*(1-W[1]),i[(s+W[0]+2)%r]+=S*V*W[1],i[(s+W[2]+1)%r]+=S*L*(1-W[3]),i[(s+W[2]+3)%r]+=S*L*W[3],V+=U,L+=j,K+=_,s+=2}a.phases[0]=M/f,a.phases[1]=k/f;const J=1e-24;-1e-24<H&&H<J&&(H=0),-1e-24<T&&T<J&&(T=0),a.filterSample0=H,a.filterSample1=T}static pulseWidthSynth(e,t,i,s,r,n,a){let o=n.phaseDeltas[0];const l=+n.phaseDeltaScale;let h=+n.volumeStart;const f=+n.volumeDelta;let c=n.phases[0]%1,m=n.pulseWidth;const u=n.pulseWidthDelta,d=n.isFirstOrder;let p=+n.filter,v=d?1:p;const y=+n.filterScale,b=d?1:y;let g=n.filterResonanceStart,M=n.filterResonanceDelta,k=+n.filterSample0,w=+n.filterSample1;const q=i+r;i+=n.stereoOffset;let E,P=n.stereoVolumeLStart,C=n.stereoVolumeLDelta,R=n.stereoVolumeRStart,z=n.stereoVolumeRDelta,H=n.stereoDelayStart,T=n.stereoDelayDelta;for(;i<q;){const e=c%1,r=(c+m)%1;let n=r-e;if(e<o)n+=.5*((S=e/o)+S-S*S-1);else if(e>1-o){n+=.5*((S=(e-1)/o)+S+S*S+1)}if(r<o)n-=.5*((S=r/o)+S-S*S-1);else if(r>1-o){var S;n-=.5*((S=(r-1)/o)+S+S*S+1)}k+=p*(n-k+(g+g/(1-p))*(k-w)),w+=v*(k-w),p*=y,v*=b,c+=o,o*=l,m+=u,g+=M;const a=w*h;h+=f,E=H<0?[0,0,2*(0|-H),-H%1]:[2*(0|H),H%1,0,0],t[(i+E[0])%s]+=a*P*(1-E[1]),t[(i+E[0]+2)%s]+=a*P*E[1],t[(i+E[2]+1)%s]+=a*R*(1-E[3]),t[(i+E[2]+3)%s]+=a*R*E[3],P+=C,R+=z,H+=T,i+=2}n.phases[0]=c;const F=1e-24;-1e-24<k&&k<F&&(k=0),-1e-24<w&&w<F&&(w=0),n.filterSample0=k,n.filterSample1=w}static noiseSynth(e,i,s,r,n,a,o){let l=o.getDrumWave(),h=+a.phaseDeltas[0];const f=+a.phaseDeltaScale;let c=+a.volumeStart;const m=+a.volumeDelta;let u=a.phases[0]%1*t.chipNoiseLength;0==a.phases[0]&&(u=Math.random()*t.chipNoiseLength);let d=+a.sample;const p=a.isFirstOrder;let v=+a.filter,y=p?1:v;const b=+a.filterScale,g=p?1:b;let M=a.filterResonanceStart,k=a.filterResonanceDelta,w=+a.filterSample0,q=+a.filterSample1;const E=Math.min(1,a.phaseDeltas[0]*t.chipNoises[o.chipNoise].pitchFilterMult),P=s+n;s+=a.stereoOffset;let C,R=a.stereoVolumeLStart,z=a.stereoVolumeLDelta,H=a.stereoVolumeRStart,T=a.stereoVolumeRDelta,S=a.stereoDelayStart,F=a.stereoDelayDelta;for(;s<P;){d+=(l[32767&u]-d)*E;w+=v*(d-w+(M+M/(1-v))*(w-q)),q+=y*(w-q),u+=h,v*=b,y*=g,h*=f,M+=k;const e=q*c;c+=m,C=S<0?[0,0,2*(0|-S),-S%1]:[2*(0|S),S%1,0,0],i[(s+C[0])%r]+=e*R*(1-C[1]),i[(s+C[0]+2)%r]+=e*R*C[1],i[(s+C[2]+1)%r]+=e*H*(1-C[3]),i[(s+C[2]+3)%r]+=e*H*C[3],R+=z,H+=T,S+=F,s+=2}a.phases[0]=u/t.chipNoiseLength,a.sample=d;const A=1e-24;-1e-24<w&&w<A&&(w=0),-1e-24<q&&q<A&&(q=0),a.filterSample0=w,a.filterSample1=q}static spectrumSynth(e,i,s,r,n,a,o){let l=o.getDrumWave(),h=128*a.phaseDeltas[0];const f=+a.phaseDeltaScale;let c=+a.volumeStart;const m=+a.volumeDelta;let u=+a.sample;const d=a.isFirstOrder;let p=+a.filter,v=d?1:p;const y=+a.filterScale,b=d?1:y;let g=a.filterResonanceStart,M=a.filterResonanceDelta,k=+a.filterSample0,w=+a.filterSample1,q=a.phases[0]%1*t.chipNoiseLength;0==a.phases[0]&&(q=S.findRandomZeroCrossing(l)+h);const E=Math.min(1,h),P=s+n;s+=a.stereoOffset;let C,R=a.stereoVolumeLStart,z=a.stereoVolumeLDelta,H=a.stereoVolumeRStart,T=a.stereoVolumeRDelta,F=a.stereoDelayStart,A=a.stereoDelayDelta;for(;s<P;){const e=0|q,t=32767&e;let n=l[t];const a=q-e;n+=(l[t+1]-n)*a,u+=(n-u)*E;k+=p*(u-k+(g+g/(1-p))*(k-w)),w+=v*(k-w),q+=h,p*=y,v*=b,h*=f,g+=M;const o=w*c;c+=m,C=F<0?[0,0,2*(0|-F),-F%1]:[2*(0|F),F%1,0,0],i[(s+C[0])%r]+=o*R*(1-C[1]),i[(s+C[0]+2)%r]+=o*R*C[1],i[(s+C[2]+1)%r]+=o*H*(1-C[3]),i[(s+C[2]+3)%r]+=o*H*C[3],R+=z,H+=T,F+=A,s+=2}a.phases[0]=q/t.chipNoiseLength,a.sample=u;const x=1e-24;-1e-24<k&&k<x&&(k=0),-1e-24<w&&w<x&&(w=0),a.filterSample0=k,a.filterSample1=w}static drumsetSynth(e,i,s,r,n,a,o,l){let h=o.getDrumsetWave(a.drumsetPitch,l),f=a.phaseDeltas[0]/P.drumsetIndexReferenceDelta(a.drumsetPitch);const c=+a.phaseDeltaScale;let m=+a.volumeStart;const u=+a.volumeDelta;let d=+a.sample;const p=a.isFirstOrder;let v=+a.filter,y=p?1:v;const b=+a.filterScale,g=p?1:b;let M=a.filterResonanceStart,k=a.filterResonanceDelta,w=+a.filterSample0,q=+a.filterSample1,E=a.phases[0]%1*t.chipNoiseLength;0==a.phases[0]&&(E=S.findRandomZeroCrossing(h)+f);const C=s+n;s+=a.stereoOffset;let R,z=a.stereoVolumeLStart,H=a.stereoVolumeLDelta,T=a.stereoVolumeRStart,F=a.stereoVolumeRDelta,A=a.stereoDelayStart,x=a.stereoDelayDelta;for(;s<C;){const e=0|E,t=32767&e;d=h[t];const n=E-e;d+=(h[t+1]-d)*n;w+=v*(d-w+(M+M/(1-v))*(w-q)),q+=y*(w-q),E+=f,v*=b,y*=g,f*=c,M+=k;const a=q*m;m+=u,R=A<0?[0,0,2*(0|-A),-A%1]:[2*(0|A),A%1,0,0],i[(s+R[0])%r]+=a*z*(1-R[1]),i[(s+R[0]+2)%r]+=a*z*R[1],i[(s+R[2]+1)%r]+=a*T*(1-R[3]),i[(s+R[2]+3)%r]+=a*T*R[3],z+=H,T+=F,A+=x,s+=2}a.phases[0]=E/t.chipNoiseLength,a.sample=d;const O=1e-24;-1e-24<w&&w<O&&(w=0),-1e-24<q&&q<O&&(q=0),a.filterSample0=w,a.filterSample1=q}static modSynth(i,s,r,n,a,o,l){if(!i.song)return;let h=t.modCount-1-o.pitches[0],f=l.modSettings[h];i.setModValue(o.customVolumeStart,o.customVolumeEnd,h,l,f),f==e.ModSetting.mstResetArpeggio&&0==i.tick&&o.noteStart==i.beat*t.partsPerBeat+i.part?i.song.channels[l.modChannels[h]].instruments[l.modInstruments[h]].arpTime=0:f==e.ModSetting.mstNextBar&&(i.wantToSkip=!0)}static findRandomZeroCrossing(e){let i=Math.random()*t.chipNoiseLength,s=32767&i,r=e[s];for(let n=128;n>0;n--){const n=s+16&32767,a=e[n];if(r*a<=0){for(let n=0;n<16;n++){const n=s+1&32767,a=e[n];if(r*a<=0){const e=a-r;i=s,Math.abs(e)>1e-8&&(i+=-r/e),i=Math.max(0,i)%t.chipNoiseLength;break}s=n,r=a}break}s=n,r=a}return i}static instrumentVolumeToVolumeMult(e){return e==-t.volumeRange/2?0:Math.pow(2,t.volumeLogScale*e)}static volumeMultToInstrumentVolume(e){return e<=0?-t.volumeRange/2:Math.min(t.volumeRange,Math.log(e)/Math.LN2/t.volumeLogScale)}static expressionToVolumeMult(e){return Math.pow(Math.max(0,e)/6,1.5)}static volumeMultToExpression(e){return 6*Math.pow(Math.max(0,e),1/1.5)}getSamplesPerTick(){if(null==this.song)return 0;let t=this.song.getBeatsPerMinute();return this.isModActive(e.ModSetting.mstTempo,!0)&&(t=this.getModValue(e.ModSetting.mstTempo,!0)),this.getSamplesPerTickSpecificBPM(t)}getSamplesPerTickSpecificBPM(e){const i=e/60,s=t.partsPerBeat*i,r=t.ticksPerPart*s;return this.samplesPerSecond/r}}return S.fmSynthFunctionCache={},S.fmSourceTemplate=("\nconst sineWave = beepbox.Config.sineWave;\n\nlet phaseDeltaScale = +tone.phaseDeltaScale;\n// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\nlet operator#Phase\t   = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\nlet operator#PhaseDelta  = +tone.phaseDeltas[#];\nlet operator#OutputMult  = +tone.volumeStarts[#];\nconst operator#OutputDelta = +tone.volumeDeltas[#];\nlet operator#Output\t  = +tone.feedbackOutputs[#];\nlet feedbackMult\t\t = +tone.feedbackMult;\nconst feedbackDelta\t\t= +tone.feedbackDelta;\nlet volume = +tone.volumeStart;\nconst volumeDelta = +tone.volumeDelta;\n\nconst isFirstOrder = tone.isFirstOrder;\nlet filter1 = +tone.filter;\nlet filter2 = isFirstOrder ? 1.0 : filter1;\nconst filterScale1 = +tone.filterScale;\nconst filterScale2 = isFirstOrder ? 1.0 : filterScale1;\nlet filterResonance = tone.filterResonanceStart;\nlet filterResonanceDelta = tone.filterResonanceDelta;\nlet filterSample0 = +tone.filterSample0;\nlet filterSample1 = +tone.filterSample1;\n\nconst stopIndex = stereoBufferIndex + runLength;\nstereoBufferIndex += tone.stereoOffset;\nlet stereoVolumeL = tone.stereoVolumeLStart;\nlet stereoVolumeLDelta = tone.stereoVolumeLDelta;\nlet stereoVolumeR = tone.stereoVolumeRStart;\nlet stereoVolumeRDelta = tone.stereoVolumeRDelta;\nlet stereoDelay = tone.stereoDelayStart;\nlet stereoDelayDelta = tone.stereoDelayDelta;\nlet delays = [];\nwhile (stereoBufferIndex < stopIndex) {\n// INSERT OPERATOR COMPUTATION HERE\nconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\n\nconst feedback = filterResonance + filterResonance / (1.0 - filter1);\nfilterSample0 += filter1 * (fmOutput - filterSample0 + feedback * (filterSample0 - filterSample1));\nfilterSample1 += filter2 * (filterSample0 - filterSample1);\n\nfeedbackMult += feedbackDelta;\noperator#OutputMult += operator#OutputDelta;\noperator#Phase += operator#PhaseDelta;\noperator#PhaseDelta *= phaseDeltaScale;\nfilter1 *= filterScale1;\nfilter2 *= filterScale2;\nfilterResonance += filterResonanceDelta;\n\nconst output = filterSample1 * volume;\nvolume += volumeDelta;\n\n//const absStereoDelay: number = Math.abs(stereoDelay);\n//const fracStereoDelay: number = absStereoDelay % 1;\n//const floorStereoDelay: number = absStereoDelay | 0;\n\n//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\n\n// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\ndelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\n\ndata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\ndata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\ndata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\ndata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\n\nstereoVolumeL += stereoVolumeLDelta;\nstereoVolumeR += stereoVolumeRDelta;\nstereoDelay += stereoDelayDelta;\n\nstereoBufferIndex += 2;\n}\n\ntone.phases[#] = operator#Phase / "+t.sineWaveLength+";\ntone.feedbackOutputs[#] = operator#Output;\n\nconst epsilon = (1.0e-24);\nif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\nif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\ntone.filterSample0 = filterSample0;\ntone.filterSample1 = filterSample1;\n").split("\n"),S.operatorSourceTemplate=("\nconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\nconst operator#PhaseInt = operator#PhaseMix|0;\nconst operator#Index\t= operator#PhaseInt & "+t.sineWaveMask+";\nconst operator#Sample   = sineWave[operator#Index];\noperator#Output\t   = operator#Sample + (sineWave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\nconst operator#Scaled   = operator#OutputMult * operator#Output;\n").split("\n"),e.Channel=z,e.Config=t,e.HarmonicsWave=E,e.Instrument=P,e.Note=M,e.Operator=w,e.Pattern=k,e.Song=H,e.SpectrumWave=q,e.Synth=S,e.makeNotePin=y,Object.defineProperty(e,"S",{value:!0}),e}({});
//# sourceMappingURL=beepbox_synth.min.js.map