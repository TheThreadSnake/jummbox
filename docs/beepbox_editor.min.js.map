{"version":3,"sources":["../src/synth/SynthConfig.ts","../src/editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../src/editor/ColorConfig.ts","../src/editor/style.ts","../src/synth/FFT.ts","../src/synth/Deque.ts","../src/synth/synth.ts","../src/editor/BarScrollBar.ts","../src/editor/Change.ts","../src/editor/changes.ts","../src/editor/SongSettingsPrompt.ts","../src/editor/ChannelSettingsPrompt.ts","../src/editor/CustomChipPrompt.ts","../src/editor/ArrayBufferWriter.ts","../src/editor/Midi.ts","../src/editor/ExportPrompt.ts","../src/editor/HarmonicsEditor.ts","../src/editor/HTMLWrapper.ts","../src/editor/ArrayBufferReader.ts","../src/editor/ImportPrompt.ts","../src/editor/Layout.ts","../src/editor/LayoutPrompt.ts","../src/editor/LimiterPrompt.ts","../src/editor/LoopEditor.ts","../src/editor/MoveNotesSidewaysPrompt.ts","../src/editor/MuteEditor.ts","../src/editor/OctaveScrollBar.ts","../src/editor/PatternEditor.ts","../src/editor/Piano.ts","../src/editor/SongRecovery.ts","../src/editor/SongRecoveryPrompt.ts","../src/editor/SpectrumEditor.ts","../src/editor/ThemePrompt.ts","../src/editor/TipPrompt.ts","../src/editor/TrackEditor.ts","../src/editor/SongEditor.ts","../src/editor/Selection.ts","../src/editor/ChangeNotifier.ts","../src/editor/SongDocument.ts","../src/editor/main.ts"],"names":["Config","centerWave","wave","sum","i","length","average","cumulative","wavePrev","push","Float64Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","getDrumWave","index","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","samples","Float32Array","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","Error","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","pow","highIndex","min","retroWave","combinedAmplitude","lerped","log","LN2","amplitude","spectrumMax","radians","PI","cos","sin","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","dictionary","value","name","result","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","reverbRange","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","edoMin","edoMax","instrumentsPerChannelMin","instrumentsPerChannelMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipWaves","volume","pitchFilterMult","isSoft","filterCutoffMaxHz","filterCutoffMinHz","filterMax","filterMaxResonance","filterCutoffRange","filterResonanceRange","transitions","isSeamless","attackSeconds","releases","releaseTicks","slides","slideTicks","vibratos","type","delayParts","vibratoTypes","periodsSeconds","period","arpSpeedScale","intervals","spread","offset","sign","effectsNames","volumeRange","volumeLogScale","panCenter","panMax","detuneMin","detuneMax","songDetuneMin","songDetuneMax","chords","harmonizes","customInterval","arpeggiates","isCustomInterval","strumParts","maxChordSize","operatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","harmonicsControlPoints","harmonicsRendered","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthRange","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","drumCount","modCount","pitchOctaves","maxScrollableOctaves","maximumTonesPerChannel","sineWaveLength","sineWaveMask","sineWave","generateSineWave","barEditorHeight","isMobile","test","navigator","userAgent","prettyNumber","toFixed","replace","EditorConfig","[object Object]","presetValue","categoryIndex","presetIndex","presetCategories","presets","program","category","preset","generalMidi","midiProgram","presetName","version","versionDisplayName","customType","settings","transition","effects","chord","filterCutoffHz","filterResonance","filterEnvelope","interval","vibrato","isNoise","algorithm","feedbackType","feedbackAmplitude","feedbackEnvelope","operators","frequency","envelope","customChipWave","harmonics","midiSubharmonicOctaves","pulseWidth","pulseEnvelope","spectrum","drums","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","appendChild","document","createTextNode","Array","isArray","Symbol","iterator","__spread","constructor","Object","Element","_d","e_2","_e","key","setAttribute","join","console","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","createElement","_c","split","name_2","createElementNS","snakeCaseName","ColorConfig","this","colorLookup","clear","song","channel","getComputedStyle","_styleElement","getPropertyValue","trim","base","getChannelColor","regex","secondaryChannel","getComputed","exec","primaryChannel","secondaryNote","primaryNote","pitchChannelCount","pitchChannels","noiseChannelCount","noiseChannels","modChannels","has","get","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","newChannelColors","floor","set","noiseSecondaryChannelHue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","textContent","themes","themeColor","querySelector","resetColors","Map","dark classic","dark competition","light classic","jummbox classic","forest","canyon","midnight","microbox classic","jummbox light","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","head","scrollBarTest","body","div","factor","countBits","n","isPowerOf2","round","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndex","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","clientWidth","classList","add","removeChild","Deque","_capacity","_buffer","undefined","_mask","_offset","_count","_expandCapacity","popFront","popBack","oldBuffer","size","base64IntToCharCode","base64CharCodeToInt","BitFieldReader","source","_bits","_readIndex","charCodeAt","minValue","minBits","numBits","readLongTail","read","BitFieldWriter","_index","writeLongTail","write","other","buffer","ceil","makeNotePin","time","clamp","max","val","validateRange","Note","pitch","start","end","fadeout","pitches","pins","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestVolume","pin","newNote","concat","Pattern","notes","instrument","note","clone","Operator","reset","SpectrumWave","isNoiseChannel","_wave","_waveIsReady","isHarmonic","lowestOctave","waveLength","highestOctave","falloffRatio","pitchTweak","controlPointToOctave","point","value1","value2","octave1","octave2","HarmonicsWave","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","Instrument","isModChannel","chipWave","chipNoise","filterCutoff","vibratoDepth","vibratoSpeed","vibratoDelay","vibratoType","pan","panDelay","arpeggioSpeed","fastTwoNoteArp","tieNoteTransition","clicklessTransition","detune","LFOtime","nextLFOtime","arpTime","customChipWaveIntegral","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modStatuses","modInstruments","modSettings","mod","ModStatus","msNone","ModSetting","mstNone","spectrumWave","instrumentObject","getChord","getFilterCutoffOctaves","getFilterEnvelope","getDrumsetEnvelope","operatorArray","operator","useSlowerRhythm","indexOf","valueOf","setTypeAndReset","oldTransitionNames","binary","sudden","smooth","transitionObject","findIndex","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","sustain sharp","sustain medium","sustain soft","decay sharp","legacyFilter","legacyEffectNames","drum","legacyWaveNames","triangle","square","pulse wide","pulse narrow","sawtooth","double saw","double pulse","spiky","plateau","legacyChorusNames","fifths","octaves","feedback","legacyEnvelopeNames","pluck 1","pluck 2","pluck 3","operatorObject","freq","_centerFeq","_edo","frequencyFromPitch","drumsetIndexReferenceDelta","getCustomWave","_drumsetIndexToSpectrumOctave","edo","Channel","octave","instruments","patterns","bars","muted","Song","string","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","mstMaxVols","mstSongVolume","mstTempo","mstReverb","mstNextBar","mstInsVolume","mstPan","mstFilterCut","mstFilterPeak","mstFMSlider1","mstFMSlider2","mstFMSlider3","mstFMSlider4","mstFMFeedback","mstPulseWidth","mstDetune","mstVibratoDepth","mstSongDetune","mstVibratoSpeed","mstVibratoDelay","mstArpeggioSpeed","mstPanDelay","mstResetArpeggio","mstMaxValue","mstNewNoteVols","getNewNoteVolume","isMod","modChannel","modInstrument","cap","realToModValue","tempo","getVolumeCap","getVolumeCapForSetting","modSetting","fromBase64String","initToDefault","setting","modChannelCount","andResetChannels","scale","loopStart","loopLength","reverb","centerFrequency","maxPitch","beatsPerBar","barCount","patternsPerChannel","rhythm","instrumentsPerChannel","title","channelIndex","getChannelCount","pattern","bar","bits","_variant","_latestJummBoxVersion","encodedSongTitle","encodeURIComponent","encodedChannelName","o","spectrumBits","encodeBase64","harmonicsBits","neededBits","shapeBits","neededInstrumentBits","getChannelIsNoise","getChannelIsMod","instrumentIndex","modStatus","msForPitch","msForNoise","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","writePartDuration","writePinCount","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","splice","unshift","pop","allPitches","pitchIndex","pitchIter","writePitchInterval","stringLength","lengthBase64","digits","prototype","maxApplyArgs","slice","compressed","charIndex","fromJsonObject","JSON","parse","substring","variant","_latestBeepboxVersion","_oldestBeepboxVersion","_oldestJummBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","command","instrumentChannelIterator","instrumentIndexIterator","toSetOctaves","useSlowerArpSpeed","songNameLength","decodeURIComponent","window","localStorage","getItem","instrumentType","legacyWaves","legacyEffects","legacyEnvelopes","effect","originalValue","nextValue","channelNameLength","byteCount","markCustomWaveDirty","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","newPattern","newNotes","useOldShape","shape","pinObj","pinCount","readPinCount","initialVolume","bendCount","pitchBend","readLegacyPartDuration","readPartDuration","readPitchInterval","intervalIter","shift","isBackwards","restLength","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","toJsonObject","patternArray","noteArray","volumeCap","pointArray","useVol","tick","forMod","points","sequenceArray","l","octaveScrollBar","sequence","format","_format","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","oldScaleNames","romani :)","romani :(","enigma","scaleName","importedPartsPerBeat","maxInstruments","maxPatterns","maxBars","channelObject","newPitchChannels","newNoiseChannels","newModChannels","patternObject","maxNoteCount","noteObject","k","startInterval","pointObject","lowestPitch","highestPitch","patternIndex","getPattern","Tone","chordSize","drumsetPitch","prevNote","nextNote","prevNotePitchIndex","nextNotePitchIndex","active","noteStart","noteEnd","noteLengthTicks","ticksSinceReleased","liveInputSamplesHeld","lastInterval","lastVolume","stereoVolume1","stereoVolume2","stereoOffset","stereoDelay","sample","phases","phaseDeltas","volumeStarts","volumeDeltas","volumeStart","volumeDelta","phaseDeltaScale","pulseWidthDelta","filter","filterScale","filterSample0","filterSample1","vibratoScale","intervalMult","intervalVolumeMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","Synth","samplesPerSecond","liveInputDuration","liveInputStarted","liveInputPitches","liveInputChannel","loopRepeatCount","wantToSkip","playheadInternal","beat","part","tickSampleCountdown","isPlayingSong","liveInputEndTime","tonePool","activeTones","tyingOver","activeModTones","releasedTones","liveInputTones","limit","stereoBufferIndex","samplesForNone","samplesForReverb","samplesForChorus","samplesForChorusReverb","chorusDelayLine","chorusDelayPos","chorusPhase","reverbDelayLine","reverbDelayPos","reverbFeedback0","reverbFeedback1","reverbFeedback2","reverbFeedback3","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","getChannelData","outputDataR","performance","now","synthesize","deactivateAudio","setSong","getInstrumentSynthFunction","warmUp","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","currentPart","currentBar","instrumentIdx","getPatternInstrument","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","msForSong","setModValue","playing","remainder","samplesPerTick","getSamplesPerTick","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","modValueToReal","ended","totalSamples","foundMod","find","sort","a","b","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getSamplesPerBar","getTotalBars","useLoopCount","volumeEnd","nextVal","channelAdjust","forSong","isModActive","AudioContext","webkitAudioContext","sampleRate","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","close","activateAudio","warmUpSynthesizer","computeLatestModValues","snapToBar","freeAllTones","oldBar","outputBufferLength","playSong","channelCount","idx","bufferIndex","pause","stereoBufferLength","chorusAngle","chorusRange","chorusOffset0","chorusOffset1","chorusOffset2","chorusOffset3","chorusOffset4","chorusOffset5","useReverb","getModValue","samplesLeftInBuffer","runLength","determineCurrentActiveTones","count","tone","playTone","skipBar","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","determineLiveInputTones","getTransition","freeReleasedTone","shouldFadeOutFast","chorusTap0Index","chorusTap1Index","chorusTap2Index","chorusTap3Index","chorusTap4Index","chorusTap5Index","chorusTap0Delta","chorusTap1Delta","chorusTap2Delta","chorusTap3Delta","chorusTap4Delta","chorusTap5Delta","runEnd","bufferIndexL","bufferIndexR","sampleForNoneL","sampleForNoneR","sampleForReverbL","sampleForReverbR","sampleForChorusL","sampleForChorusR","sampleForChorusReverbL","sampleForChorusReverbR","combinedChorusL","combinedChorusR","chorusTap0Ratio","chorusTap1Ratio","chorusTap2Ratio","chorusTap3Ratio","chorusTap4Ratio","chorusTap5Ratio","chorusTap0A","chorusTap0B","chorusTap1A","chorusTap1B","chorusTap2A","chorusTap2B","chorusTap3A","chorusTap3B","chorusTap4A","chorusTap4B","chorusTap5A","chorusSampleL","chorusSampleR","reverbDelayPos1","reverbDelayPos2","reverbDelayPos3","reverbSample0","reverbSample1","reverbSample2","reverbSample3","reverbTemp0","reverbTemp1","reverbTemp2","reverbTemp3","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","Number","isInteger","atEnd","carryOver","toneCount","targetBar","nextPattern","currNote","currVolume","p","releaseTone","freeTone","remove","resetEffects","epsilon","pushBack","pushFront","toneIndex","toneList","newTone","modChannelIdx","prevNotes","nextNotes","fillCount","syncTones","peakBack","noteStartAdjust","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","synthBuffer","computeTone","synthesizer","beats","customVolume","attack","synth","chordVolume","computeChordVolume","intervalScale","secondsPerPart","beatsPerPart","toneWasActive","treatAsSeamless","startPan","endPan","startPanDelay","endPanDelay","useStartPan","useEndPan","maxDelayStart","maxDelayEnd","delayEnd","stereoVolumeLEnd","stereoVolumeREnd","volumeReferencePitch","baseVolume","pitchDamping","resetPhases","partsSinceStart","intervalStart","intervalEnd","transitionVolumeStart","transitionVolumeEnd","chordVolumeStart","chordVolumeEnd","decayTimeStart","decayTimeEnd","ticksSoFar","startTicksSinceReleased","endTicksSinceReleased","startTick","endTick","toneTransition","expressionToVolumeMult","heldTicksStart","heldTicksEnd","heldPartsStart","heldPartsEnd","partsPerBar","endPinIndex","startPin","endPin","noteStartTick","pinStart","pinEnd","tickTimeStart","tickTimeEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","customVolumeTickStart","customVolumeTickEnd","transitionVolumeTickStart","transitionVolumeTickEnd","chordVolumeTickStart","chordVolumeTickEnd","intervalTickStart","intervalTickEnd","decayTimeTickStart","decayTimeTickEnd","maximumSlideTicks","slideRatioStartTick","slideRatioEndTick","intervalDiff","volumeDiff","decayTimeDiff","chordSizeDiff","sampleTime","lfoEffectStart","getLFOAmplitude","lfoEffectEnd","partsStart","partsEnd","useVibratoStart","useVibratoEnd","activeVibratoDelayMods","vibratoDelayStart","vibratoDelayEnd","MAX_VALUE","instrumentVolumeMult","instrumentVolumeToVolumeMult","pickMainInterval","cutoffOctavesModStart","cutoffOctavesModEnd","filterCutModStart","filterCutModEnd","filterCutoffHzStart","filterCutoffHzEnd","filterBaseStart","filterBaseEnd","filterMin","computeEnvelope","endFilter","filterVolumeStart","filterVolumeEnd","getFilterResonance","useFilterResonanceStart","useFilterResonanceEnd","filterResonanceEnd","sineVolumeBoostStart","sineVolumeBoostEnd","totalCarrierVolumeStart","totalCarrierVolumeEnd","arpeggioInterval","detuneStart","detuneEnd","associatedCarrierIndex","freqMult","startFreq","amplitudeStart","amplitudeEnd","amplitudeCurveStart","operatorAmplitudeCurve","amplitudeCurveEnd","startVal","endVal","endPitch","pitchVolumeStart","pitchVolumeEnd","operatorEnvelope","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","volumeMult","intervalOffset","settingsVolumeMultStart","settingsVolumeMultEnd","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulators","modulatorNumber","feedbackIndices","Function","chipSynth","harmonicsSynth","pulseWidthSynth","noiseSynth","spectrumSynth","drumsetSynth","modSynth","data","volumeScale","intervalA","intervalB","intervalSign","deltaRatio","phaseDeltaA","phaseDeltaB","phaseA","phaseB","filter1","filter2","filterScale1","filterScale2","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","prevWaveIntegralA","prevWaveIntegralB","delays","stereoVolumeL","stereoVolumeR","nextWaveIntegralA","nextWaveIntegralB","waveA","waveB","output","phaseDelta","phase","sawPhaseA","sawPhaseB","pulseWave","t","pitchRelativefilter","findRandomZeroCrossing","phaseInt","waveSample","phaseRatio","getDrumsetWave","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","slope","instrumentVolume","expression","getBeatsPerMinute","beatsPerSecond","partsPerSecond","tickPerSecond","BarScrollBar","_doc","_trackContainer","_editorWidth","_editorHeight","_playhead","rect","fill","x","y","width","height","_notches","svg","pointer-events","_handle","_handleHighlight","stroke","stroke-width","_leftHighlight","path","_rightHighlight","_renderedPlayhead","_svg","container","class","_mouseX","_mouseDown","_mouseOver","_dragging","_renderedNotchCount","_renderedBarPos","animatePlayhead","_notchSpace","_onScroll","event","barScrollPos","scrollLeft","getBarWidth","_whenMouseOver","_updatePreview","_whenMouseOut","_whenMousePressed","preventDefault","boundingRect","getBoundingClientRect","clientX","pageX","left","trackVisibleBars","_dragStart","_whenTouchPressed","touches","_whenMouseMoved","_whenCursorMoved","_whenTouchMoved","_whenCursorReleased","notifier","changed","center","addEventListener","capture","passive","showleftHighlight","showRightHighlight","showHandleHighlight","visibility","resized","lineHeight","Change","_noop","UndoableChange","reversed","super","_reversed","_doneForwards","_doForwards","_doBackwards","ChangeGroup","change","isNoop","_didSomething","ChangeSequence","changes","_changes","redo","undo","unionOfUsedNotes","projectNoteIntoBar","oldNote","timeOffset","noteStartPart","noteEndPart","newNoteLength","newPinTime","nextPin","nextPinTime","ratio","prevPin","prevPinTime","offsetInterval","pitchIdx","ChangeMoveAndOverflowNotes","doc","newBeatsPerBar","partsToMove","oldChannel","newChannel","oldPartsPerBar","newPartsPerBar","oldPattern","oldBarStart","absoluteNoteStart","absoluteNoteEnd","barStartPart","removeDuplicatePatterns","append","ChangeReplacePatterns","ChangePins","_note","_oldStart","_oldEnd","_newStart","_newEnd","_oldPins","_newPins","_oldPitches","_newPitches","firstInterval","firstTime","ChangeCustomWave","newArray","oldArray","getCurrentInstrument","comparisonResult","ChangePreset","newValue","valueToPreset","tempVolume","tempPan","tempPanDelay","ChangeRandomGeneratedInstrument","selectWeightedRandom","entries","total","entry","weight","item","selectCurvedDistribution","peak","normalize","spectrumGenerators","current","generator","harmonicGenerators","ChangeTransition","ChangeEffects","ChangePatternNumbers","startChannel","ChangeEdo","ChangeBarCount","atBeginning","diff","ChangeInsertBars","newLength","ChangeDeleteBars","ChangeLimiterSettings","ChangeChannelOrder","firstChannelIdx","secondChannelIdx","toSwap","channelOffset","ChangeChannelCount","newPitchChannelCount","newNoiseChannelCount","newModChannelCount","newChannels","changeGroup","newCount","oldCount","newStart","oldStart","pickRandomPresetValue","ChangeChannelBar","newBar","silently","ChangeInterval","ChangeChord","ChangeVibrato","ChangeVibratoDepth","oldValue","prevVibrato","unsetMod","ChangeVibratoSpeed","ChangeVibratoDelay","ChangeVibratoType","ChangeArpeggioSpeed","ChangeFastTwoNoteArp","ChangeTieNoteTransition","ChangeClicklessTransition","ChangeSpectrum","ChangeHarmonics","ChangeDrumsetEnvelope","drumIndex","ChangeInstrumentSlider","_instrument","ChangePulseWidth","ChangePulseEnvelope","ChangeFilterCutoff","ChangeFilterResonance","ChangeFilterEnvelope","ChangeAlgorithm","ChangeFeedbackType","ChangeFeedbackEnvelope","ChangeOperatorEnvelope","operatorIndex","ChangeOperatorFrequency","ChangeOperatorAmplitude","ChangeFeedbackAmplitude","ChangeInstrumentsPerChannel","newInstrumentsPerChannel","sampleInstrument","sampleInstrumentJson","newInstrument","ChangeKey","ChangeLoop","oldLength","ChangePitchAdded","deletion","_pitch","ChangeOctave","ChangeRhythm","ChangePaste","selectionStart","selectionEnd","oldPartDuration","ChangeNoteTruncate","noteInsertionIndex","ChangeNoteLength","ChangePasteInstrument","instrumentCopy","ChangePatternInstrument","ChangeModChannel","stat","ChangeModInstrument","tgtInstrument","ChangeModSetting","text","ChangePatternsPerChannel","channelBars","channelPatterns","ChangeEnsurePatternExists","_patternOldNotes","_bar","_channel","_oldPatternCount","_newPatternCount","firstEmptyUnusedIndex","firstUnusedIndex","used","barIndex","_patternIndex","ChangePinTime","shiftedTime","originalTime","skipStart","skipEnd","setPin","oldPin","_finishSetup","ChangePitchBend","bendStart","bendEnd","bendTo","direction","stop","setStart","setEnd","prevInterval","prevVolume","persist","ChangePatternRhythm","minDivision","changeRhythm","oldTime","thresholds","beatStart","newTime","threshold","ChangeNoteAdded","ChangeRhythmNote","ChangeMoveNotesSideways","beatsToMove","strategy","originalBarCount","originalLoopStart","originalLoopLength","firstBarIsEmpty","ChangeBeatsPerBar","noteIndex","ChangeTempo","ChangeScale","ChangeDetectKey","keyWeights","bestKey","bestKeyWeight","keyWeight","absoluteDiff","ChangeTranspose","eligiblePresetValues","setDefaultInstruments","nameToPresetValue","ChangeSong","newHash","ChangePatternSelection","selection","resetBoxSelection","ChangeValidateTrackSelection","removeExtraSparseChannels","maxLength","sparsestIndex","mostZeroes","zeroes","combinedChannels","comparePatternNotes","newPatterns","foundMatchingPattern","newPatternIndex","ChangeReverb","_pattern","truncStart","truncEnd","pushLastPin","skipNote","force","copy","ChangeSplitNotesAtSelection","patternSelectionStart","patternSelectionEnd","ChangeTransposeNote","upward","ignoreScale","foundMatch","patternSelectionActive","ChangeTrackSelection","newX0","newX1","newY0","newY1","boxSelectionX0","boxSelectionX1","boxSelectionY0","boxSelectionY1","newEnd","_oldActive","_newActive","ChangeDragSelectedNotes","parts","transpose","oldEnd","draggedNotes","ChangeDuplicateSelectedReusedPatterns","barStart","barWidth","channelStart","channelHeight","reusablePatterns","currentPatternIndex","isUsedElsewhere","bar2","copiedPattern","ChangePatternScale","scaleMap","newPitches","newPins","transformedPitch","transformedInterval","ChangeVolume","ChangeSongTitle","ChangeChannelName","muteEditorChannel","recalcChannelNames","ChangePan","ChangePanDelay","ChangeDetune","ChangeVolumeBend","bendPart","bendVolume","bendInterval","uniformVolume","inserted","ChangeChipWave","ChangeNoiseWave","button","span","h2","input","br","select","option","SongSettingsPrompt","_edoStepper","step","_beatsStepper","_conversionStrategySelect","_barsStepper","_positionSelect","_cancelButton","_okayButton","_close","cleanUp","removeEventListener","_saveChanges","_validateKey","_validateNumber","_whenKeyPressed","target","keyCode","setItem","group","_validate","prompt","record","lastPosition","lastStrategy","setTimeout","focus","charCode","which","ChannelSettingsPrompt","_patternsStepper","_instrumentsStepper","_pitchChannelStepper","_drumChannelStepper","_modChannelStepper","CustomChipPromptCanvas","_mouseY","_lastIndex","_lastAmp","chipData","startingChipData","_undoHistoryState","_changeQueue","_fill","_ticks","_subticks","_blocks","viewBox","preserveAspectRatio","_storeChange","sameCheck","render","stopPropagation","right","clientY","pageY","top","bottom","isNaN","offsetParent","col","amp","lowest","highest","startingAmp","endingAmp","medAmp","children","CustomChipPrompt","_songEditor","customChipCanvas","_playButton","_togglePlay","_pause","updatePlayButton","_play","whenKeyPressed","innerText","transfer","dest","ArrayBuffer","nextOffset","leftBytes","byteLength","wordSizes","wordSize","transferWith","ViewClass","Uint8Array","Uint16Array","view_source","view_dest","byteOffset","ArrayBufferWriter","initialCapacity","_writeIndex","_fileSize","_arrayBuffer","_data","DataView","numBytes","setUint32","_addBytes","setUint8","setUint16","setInt8","startWriting","writeUint8","writeMidiVariableLength","defaultMidiPitchBend","analogousDrumMap","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","69","70","73","74","midiVolumeToVolumeMult","lerp","low","high","save","blob","msSaveOrOpenBlob","anchor","download","url","URL","createObjectURL","revokeObjectURL","href","dispatchEvent","MouseEvent","open","location","ExportPrompt","outputStarted","_fileName","maxlength","autofocus","_computedSamplesLabel","Text","_enableIntro","_loopDropDown","_enableOutro","_formatSelect","_exportButton","_outputProgressBar","_outputProgressLabel","_outputProgressContainer","_validateFileName","_export","_exportTo","_exportToMidi","_exportToJson","checked","disabled","lastExportFormat","samplesToTime","getTotalSamples","rawSeconds","seconds","use","deleteChars","cursorPos","setSelectionRange","samplesPerChunk","currentFrame","currentChunk","samplesInChunk","sampleFrames","tempSamplesL","tempSamplesR","recordedSamplesL","recordedSamplesR","totalChunks","thenExportTo","_exportToWavFinish","_exportToMp3Finish","_synthesize","introIter","nextBar","sampleCount","arrayBuffer","bytesPerSample","range","valL","valR","setInt16","Blob","whenEncoderIsAvailable","sampleBlockSize","mp3encoder","Mp3Encoder","mp3Data","Int16Array","leftChunk","subarray","rightChunk","mp3buf","encodeBuffer","flush","script","src","onload","midiTicksPerBeat","midiTicksPerPart","microsecondsPerBeat","secondsPerMinute","midiTicksPerBar","pitchBendRange","unrolledBars","loopIndex","tracks","isMeta","midiChannel","isDrumset","midiChannelCounter","foundADrumset","writer","writeUint32","writeUint16","track","trackStartIndex","getWriteIndex","prevTime","barStartTime","writeEventTime","writeControlEvent","message","writeMidi7Bits","writeMidiAscii","writeUint24","isMinor","numSharps","writeInt8","parseInt","channelName","prevInstrumentIndex","writeInstrumentSettings","instrumentProgram","envelopeType","instrumentDecays","filterInstruments","midiDecayInstruments","midiSustainInstruments","instrumentPan","prevPitchBend","prevExpression","shouldResetExpressionAndPitchBend","channelRoot","chordHarmonizes","usesArpeggio","polyphony","error","noteStartTime","pinTime","pinVolume","pinInterval","prevPitches","nextPitches","velocity","pitchOffset","maxPitchOffset","minPitchOffset","nextPinVolume","nextPinInterval","midiTick","midiTickTime","linearVolume","noteStarting","drumsetMap","midiTicksSinceBeat","midiTicksPerArpeggio","noteEndTime","rewriteUint32","toCompactArrayBuffer","jsonString","stringify","HarmonicsEditor","_octaves","_fifths","_curve","_lastControlPoints","_lastControlPointContainer","_freqPrev","_ampPrev","_change","_renderedPath","_renderedFifths","_xToFreq","_yToAmp","lowerFreq","upperFreq","setProspectiveChange","controlPointToHeight","xPos","lastHeight","showFifth","display","InputBox","_getChange","_value","_oldValue","_whenInput","lastChangeWas","_whenChange","Slider","midTick","ArrayBufferReader","getUint32","readUint8","getUint16","getUint8","getInt8","nextByte","skipBytes","ImportPrompt","_fileInput","accept","_whenFileSelected","file","files","extension","lastIndexOf","reader","FileReader","goBackToStart","readAsText","_parseMidiFile","readAsArrayBuffer","headerReader","hasMore","chunkType","readUint32","chunkLength","getReaderForNextBytes","trackReader","nextEventMidiTick","readMidiVariableLength","runningStatus","fileFormat","readUint16","currentIndependentTrackIndex","currentTrackIndices","independentTracks","trackIndex","channelRPNMSB","channelRPNLSB","pitchBendRangeMSB","pitchBendRangeLSB","currentInstrumentProgram","currentInstrumentVolumes","currentInstrumentPans","noteEvents","pitchBendEvents","expressionEvents","currentMidiTick","anyTrackHasMore","eventStatus","peakUint8","eventType","eventChannel","foundTrackEndEvent","readMidi7Bits","on","volumeMultToInstrumentVolume","volumeMultToExpression","lsb","readUint24","numerator","denominatorExponent","readInt8","songTotalBars","quantizeMidiTickToPart","channelPresetValue","midiProgramToPresetValue","channelPreset","isDrumsetChannel","channelBasePitch","midiIntervalScale","channelMaxPitch","currentVelocity","currentProgram","currentInstrumentVolume","currentInstrumentPan","heldPitches","prevEventPart","setInstrumentVolume","noteEventIndex","noteEvent","nextEventPart","MAX_SAFE_INTEGER","drumFreqs","minDuration","maxDuration","heldPitch","currentMidiInterval","currentMidiExpression","pitchBendEventIndex","expressionEventIndex","updateCurrentMidiInterval","updateCurrentMidiExpression","instrumentByProgram","prevEventMidiTick","pitchSum","barStartMidiTick","barEndMidiTick","noteStartMidiTick","noteEndMidiTick","shiftedHeldPitch","initialBeepBoxPitch","heldPitchOffset","firstPin","potentialPins","keyPitch","keyVolume","prevPinIndex","prevPartPitch","prevPartExpression","noteRelativePart","lastPart","partPitch","partExpression","nearestPitch","pitchIsNearInteger","pitchCrossedInteger","nearestExpression","expressionIsNearInteger","expressionCrossedInteger","keyExpression","currentPin","addPin","addPinAtIndex","furthestIntervalDistance","addIntervalPin","addIntervalPinAtIndex","potentialIndex","potentialPin","interpolatedInterval","distance","furthestVolumeDistance","addVolumePin","addVolumePinAtIndex","interpolatedVolume","toBePinned","lastToBePinned","minPitch","notePin","shiftedPitch","averagePitch","scrollableOctaves","compactChannels","bestChannelIndexA","bestChannelIndexB","fewestConflicts","fewestGaps","channelIndexA","channelIndexB","channelA","channelB","conflicts","gaps","channelAInstrumentCount","channelAPatternCount","Layout","layout","_normalLayout","_fullScreenLayout","_wideFullScreenLayout","LayoutPrompt","_octaveStepper","_layoutSelect","fullScreen","setFullScreen","windowOctaves","windowPitchCount","lastOctaves","lastLayout","LimiterCanvas","lim","_boostCurve","_boostDot","circle","r","_midCurve","_limitCurve","_limitDot","_label0","font-size","_label1","_label2","_inLabel","_outLabel","_xAxisLabel","_yAxisLabel","transform","_inVolumeBg","_outVolumeBg","_inVolumeBar","_inVolumeCap","_outVolumeBar","_outVolumeCap","_stop1","stop-color","_stop2","_stop3","_gradient","linearGradient","id","gradientUnits","_defs","defs","_limiterPrompt","historicInCap","historicOutCap","lastValue","currentSubpathIdx","lastSubpathIdx","subPaths","limiterRatio","limitRatioSlider","compressorRatio","compressionRatioSlider","limiterThreshold","limitThresholdSlider","compressorThreshold","compressionThresholdSlider","LimiterPrompt","limiterCanvas","limitDecaySlider","limitRiseSlider","masterGainSlider","inVolumeHistoricTimer","inVolumeHistoricCap","outVolumeHistoricTimer","outVolumeHistoricCap","_resetButton","_volumeUpdate","animateVolume","requestAnimationFrame","_whenInputFavorLimitThreshold","_updateLimiter","startingLimitRatio","startingCompressionRatio","startingLimitThreshold","startingCompressionThreshold","startingLimitDecay","startingLimitRise","startingMasterGain","_resetDefaults","LoopEditor","_startMode","_endMode","_bothMode","_loop","_highlight","_barWidth","_cursor","mode","_clientStartX","_clientStartY","_startedScrolling","_draggingHorizontally","_renderedLoopStart","_renderedLoopStop","_renderedBarCount","_renderedBarWidth","_updateCursorStatus","_whenTouchReleased","_render","_documentChanged","watch","middle","endPoints","_findEndPoints","jumpIntoLoop","autoFollow","showHighlight","radius","highlightStart","highlightStop","loopStop","editorWidth","MoveNotesSidewaysPrompt","MuteEditor","_editor","_buttons","_channelCounts","_channelNameDisplay","color","_channelNameInput","_channelDropDown","_renderedChannelCount","_renderedPitchChannels","_renderedNoiseChannels","_renderedModChannels","_renderedChannelHeight","_channelDropDownChannel","_channelDropDownOpen","_channelDropDownLastState","_channelNameInputWhenInput","_channelNameInputClicked","_channelNameInputHide","_channelDropDownClick","_channelDropDownGetOpenedPosition","_channelDropDownBlur","options","_channelDropDownHandler","shouldSolo","swapIndex","refocusStage","selectedIndex","_onClick","_onMouseMove","getChannelHeight","_onMouseLeave","enableChannelMuting","channelCountText","muteButton","muteContainer","marginTop","marginBottom","fontSize","OctaveScrollBar","_piano","_notchHeight","_octaveCount","_octaveHeight","_barHeight","_upHighlight","_downHighlight","_renderedBarBottom","_renderedBarHeight","_barBottom","canReplaceLastChange","currentOctave","showUpHighlight","showDownHighlight","forceRender","PatternCursor","valid","curNote","curIndex","exactPart","nearPinIndex","PatternEditor","_interactive","_barOffset","controlMode","shiftMode","_svgNoteBackground","patternUnits","_svgDrumBackground","_svgModBackground","_svgBackground","_svgNoteContainer","_svgPlayhead","_selectionRect","stroke-dasharray","fill-opacity","_svgPreview","modDragValueLabel","text-anchor","contenteditable","dominant-baseline","_defaultModBorder","_backgroundPitchRows","_backgroundDrumRow","_backgroundModRow","_modDragValueLabelLeft","_modDragValueLabelTop","_modDragValueLabelWidth","editingModLabel","_modDragStartValue","_modDragLowerBound","_modDragUpperBound","_pitchHeight","_mouseDragging","_mouseHorizontal","_usingTouch","_copiedPinChannels","_mouseXStart","_mouseYStart","_touchTime","_shiftHeld","_dragConfirmed","_draggingStartOfSelection","_draggingEndOfSelection","_draggingSelectionContents","_dragTime","_dragPitch","_dragVolume","_dragVisible","_dragChange","_changePatternSelection","_lastChangeWasPatternSelection","_stashCursorPinVols","_playheadX","_octaveOffset","_renderedWidth","_renderedHeight","_renderedBeatWidth","_renderedPitchHeight","_renderedDrums","_renderedMod","_renderedRhythm","_renderedPitchChannelCount","_renderedNoiseChannelCount","_renderedModChannelCount","_followPlayheadBar","_validateModDragLabelInput","label","converted","presValue","xOffset","_partWidth","_modDragNote","_modDragPin","_modDragSetting","resetCopiedPins","maxDivision","_getMaxDivision","_animatePlayhead","timestamp","_whenCursorPressed","notifyWatchers","playheadBar","modPlayhead","shiftKey","continuousState","_setPatternSelection","_copyPins","enableNotePreview","rectangle","rhythmStepsPerBeat","_getMinDivision","foundNote","_findMousePitch","_pitchToPixelHeight","_pitchBorder","mousePitch","leftSide","rightSide","intervalRatio","arc","bendHeight","minInterval","maxInterval","bestDistance","pinDistance","_snapToPitch","nearest","defaultLength","_copiedPins","fullBeats","modMouse","division","forceStart","forceEnd","maxHeight","maxFoundHeight","pixelY","_pitchCount","guess","discardChanges","getSelection","sel","removeAllRanges","selectAllChildren","stopEditingModLabel","maintainLiveInput","_cursorAtStartOfSelection","_cursorAtEndOfSelection","_cursorIsInSelection","getCurrentPattern","_updateSelection","dx","dy","_snapToMinDivision","notesInScale","pitchRatio","draggedParts","draggedTranspose","backwards","directLength","blessedLength","theNote","prevPattern","shiftedPin","dragFactorSlow","dragFactorFast","dragSign","dragCounts","volumeRatio","alwaysFineNoteVol","pathString","_drawNote","clientHeight","beatWidth","node","cloneNode","parentNode","replaceChild","makeEmptyReplacementElement","log2","showChannels","pattern2","notePath","oscillatorLabel","svgElement","showVolume","totalWidth","endOffset","prevSide","nextSide","prevHeight","nextHeight","nextVolume","Piano","_pianoContainer","_drumContainer","_modContainer","_preview","_pianoKeys","_pianoLabels","_modFirstLabels","_modSecondLabels","_modCountLabels","_modCountRects","_playedPitch","_renderedScale","_renderedKey","_renderedPitchCount","_playLiveInput","_updateCursorPitch","_whenMouseReleased","_releaseLiveInput","isDrum","pianoLabel","pianoKey","lastChild","showLetters","channelVal","firstRow","secondRow","useFirstColor","useSecondColor","usingSecondRow","usingMod","instrumentVal","firstLabel","secondLabel","modCountLabel","modCountRect","scaleFactor","parentElement","getComputedTextLength","squeeze","substr","pitchNameIndex","background","shiftDir","brightness","firstRowText","secondRowText","countText","countRect","firstRowSVG","countSVG","secondRowSVG","flexRow1","flexRow2","flexContainer","modKey","_cursorPitch","topPitch","bottomPitch","topRange","bottomRange","pitchHeight","versionPrefix","keyToVersion","versionToKey","generateUid","toString","compareSongs","versions","compareVersions","SongRecovery","_song","songs","songsByUid","itemKey","uid","songData","newName","Date","clearTimeout","_saveVersionTimeoutHandle","alert","stack","getAllRecoveredSongs","currentSong","newWork","mostRecentTime","work","newVersion","newKey","minSpan","spanMult","indexToDiscard","currentTime","newerTime","removeItem","leastImportantSong","leastImportance","POSITIVE_INFINITY","maximumSongCount","timeScale","iframe","SongRecoveryPrompt","_songContainer","versionMenu","toLocaleString","player","contentWindow","Event","SpectrumEditor","_spectrumIndex","_arrow","ThemePrompt","_themeSelect","lastTheme","setTheme","colorTheme","_previewTheme","h3","TipPrompt","_closeButton","Box","_x","_y","_text","_label","font-family","font-weight","_rect","_renderedIndex","_renderedDim","_renderedSelected","_renderedColor","dim","selected","TrackEditor","_barDropDown","_boxContainer","g","_barNumberContainer","_boxHighlight","_barEditorPath","_select","_grid","_barNumbers","_mouseStartBar","_mouseStartChannel","_mouseBar","_mouseChannel","_mousePressed","_channelHeight","_renderedPatternCount","_touchMode","_barDropDownBar","_lastScrollTime","_barDropDownGetOpenedPosition","_barDropDownHandler","moveBarOffset","insertBars","_barScrollBar","deleteBars","_whenSelectChanged","setPattern","_whenSelectPressed","_updateSelectPos","_whenSelectMoved","_dragBoxSelection","_whenSelectReleased","_updateMousePos","setTrackSelection","selectionUpdated","setChannelBar","up","patternCount","determinedCursorType","overTrackEditor","changeBarScrollPos","tip","selectedPattern","box","setSize","pathLeft","pos","editorHeight","colors","setIndex","boxSelectionWidth","boxSelectionHeight","boxSelectionBar","boxSelectionChannel","optgroup","canvas","buildOptions","menu","items","buildPresetOptions","idSet","randomGroup","foundAny","moveViolin2","insertBefore","moveFlute2","moveGrandPiano2","setSelectedValue","stringValue","$","trigger","CustomChipCanvas","mouseDown","ctx","getContext","continuousEdit","lastX","lowerBound","upperBound","progress","lastY","fillStyle","fillRect","getComputedChannelColor","_onMouseDown","_onMouseUp","redrawCanvas","SongEditor","_patternEditorPrev","_patternEditor","_patternEditorNext","_trackEditor","_muteEditor","_loopEditor","_octaveScrollBar","_prevBarButton","_nextBarButton","_volumeSlider","_outVolumeBarBg","_volumeBarContainer","_volumeBarBox","_fileMenu","hidden","_editMenu","_optionsMenu","_scaleSelect","map","_keySelect","reverse","_tempoSlider","_tempoStepper","_reverbSlider","_rhythmSelect","_pitchedPresetSelect","_drumPresetSelect","_algorithmSelect","_algorithmSelectRow","onclick","_openPrompt","_instrumentSelect","_instrumentSelectRow","_instrumentVolumeSlider","_instrumentVolumeSliderInputBox","_instrumentVolumeSliderTip","_instrumentVolumeSliderRow","_panSlider","position","_panDropdown","_toggleDropdownMenu","_panSliderInputBox","_panSliderRow","tabindex","_panDelaySlider","_panDelayRow","_panDropdownGroup","_detuneSlider","_detuneSliderInputBox","_detuneSliderRow","_chipWaveSelect","_chipNoiseSelect","_chipWaveSelectRow","_chipNoiseSelectRow","_transitionSelect","_transitionDropdown","_transitionRow","_tieNoteTransitionBox","_tieNoteTransitionRow","_clicklessTransitionBox","_clicklessTransitionRow","_transitionDropdownGroup","_effectsSelect","_filterCutoffSlider","_filterCutoffRow","_filterResonanceSlider","_filterResonanceRow","_filterEnvelopeSelect","_filterEnvelopeRow","_pulseEnvelopeSelect","_pulseEnvelopeRow","_pulseWidthSlider","_pulseWidthRow","_intervalSelect","_intervalSelectRow","_chordSelect","_chordDropdown","_chordSelectRow","_arpeggioSpeedSlider","_arpeggioSpeedRow","_twoNoteArpBox","_twoNoteArpRow","_chordDropdownGroup","_vibratoSelect","_vibratoDropdown","_vibratoSelectRow","_vibratoDepthSlider","_vibratoDepthRow","_vibratoSpeedSlider","_vibratoSpeedRow","_vibratoDelaySlider","_vibratoDelayRow","_vibratoTypeSelect","_vibratoTypeSelectRow","_vibratoDropdownGroup","_phaseModGroup","_feedbackTypeSelect","_feedbackRow1","_spectrumEditor","_spectrumRow","_harmonicsEditor","_harmonicsRow","_drumsetGroup","_modulatorGroup","_instrumentCopyButton","d","_instrumentPasteButton","_customWaveDrawCanvas","_customWavePresetDrop","header","buildHeaderedOptions","_customWaveZoom","_customWaveDraw","_songTitleInputBox","_feedbackAmplitudeSlider","_feedbackEnvelopeSelect","_feedbackRow2","_customInstrumentSettingsGroup","_instrumentCopyGroup","_instrumentSettingsTextRow","_instrumentSettingsGroup","_usedPatternIndicator","fill-rule","_usedInstrumentIndicator","_promptContainer","_patternEditorRow","_patternArea","_trackAndMuteContainer","_trackArea","_settingsArea","margin-right","mainLayer","tabIndex","_wasPlaying","_currentPromptName","_operatorRows","_operatorAmplitudeSliders","_operatorEnvelopeSelects","_operatorFrequencySelects","_drumsetSpectrumEditors","_drumsetEnvelopeSelects","_showModSliders","_newShowModSliders","_modSliderValues","_hasActiveModSliders","_modSliderHandle","_volumeHandle","_barScrollbarHandle","_openPanDropdown","_openVibratoDropdown","_openChordDropdown","_openTransitionDropdown","lastOutVolumeCap","preventScroll","_refocusStageNotEditing","whenUpdated","trackBounds","activeElement","showScrollBar","displayVolumeBar","getFullScreen","targetBeatWidth","minBeatWidth","maxBeatWidth","patternEditorWidth","flexShrink","optionCommands","autoPlay","displayBrowserUrl","wasActive","contains","updateValue","patternUsed","instrumentUsed","lowestSelX","highestSelX","lowestSelY","highestSelY","parent","hide","_modChannelBoxes","channelList","_modInstrumentBoxes","instrumentList","_modSetBoxes","settingList","needReset","_whenSetModSetting","chordIndex","hasAttribute","css","show","alwaysShowSettings","isCarrier","operatorName","_setPrompt","goToBar","_whenKeyUp","onKeyUp","_tempoStepperCaptureNumberKeys","ctrlKey","movePlayheadToMouse","selectChannel","selectAll","duplicatePatterns","firstBar","jumpToEditingBar","muteChannels","nextEmpty","nextUnused","soloChannels","pasteNumbers","pasteNotes","_copyTextToClipboard","_randomGenerated","_randomPreset","prevBar","scrollToSelection","nextDigit","instrumentDigits","_whenPrevBarPressed","_whenNextBarPressed","_animate","_modSliderUpdate","_animateVolume","_setVolumeSlider","setVolume","_whenSetTempo","_whenSetScale","forceScale","_whenSetKey","_whenSetRhythm","forceRhythm","_refocus","selfRef","_whenSetPitchedPreset","_setPreset","_whenSetDrumPreset","_whenSetFeedbackType","_whenSetFeedbackEnvelope","_whenSetAlgorithm","_whenSetInstrument","setInstrument","_whenSetModChannel","setModChannel","_whenSetModInstrument","setModInstrument","setModSetting","_whenSetChipWave","_whenSetNoiseWave","_whenSetFilterEnvelope","_whenSetPulseEnvelope","_whenSetTransition","_whenSetEffects","_whenSetVibrato","_whenSetVibratoType","_whenSetInterval","_whenSetChord","_fileMenuHandler","toBase64String","share","_editMenuHandler","_optionsMenuHandler","toggleDisplayBrowserUrl","savePreferences","_customWavePresetHandler","customWaveArray","maxValue","MIN_VALUE","arrayPoint","arrayStep","operatorNumber","frequencySelect","amplitudeSlider","envelopeSelect","row","spectrumEditor","_modNameRows","_modSetRows","modChannelBox","modInstrumentBox","modNameRow","modSetBox","modSetRow","thisRef","_copyInstrument","bind","_pasteInstrument","autoPlayOption","screen","availWidth","fullScreenOption","dropdown","anyModActive","isAnyModActive","updateModSlider","editor","slider","isSettingForSong","currentVal","_getSliderForModSetting","anySliderActive","promptName","openPrompt","changePos","nav","clipboard","writeText","catch","textField","succeeded","execCommand","play","clearInterval","Selection","_changeTranspose","_changeTrack","x0","x1","y0","y1","json","digit","forInstrument","parsed","_eachSelectedChannel","_eachSelectedPattern","handledPatterns","_eachSelectedBar","patternNumber","cloneNotes","channelCopy","selectionCopy","partDuration","channelCopies","copiedPartDuration","fillSelection","pasteHeight","pasteChannel","patternCopies","copiedBars","pasteWidth","usedPatterns","pasteBar","copiedPatternIndex","reusedIndex","patternCopy","removedPattern","_patternIndexIsUnused","existingPattern","allChannels","anyMuted","anyUnmuted","alreadySoloed","shouldBeMuted","scaleFlags","oldScaleFlags","newScaleValue","newScaleFlags","oldScale","newScale","largerToSmaller","smallerScale","largerScale","roles","bestScore","bestIndexMap","indexMap","score","sparsePitchMap","smallerScalePitch","largerScalePitch","sparseIndex","fullPitchMap","oldLow","newLow","oldHigh","newHigh","nearestPitchDistance","newPitch","generateScaleMap","ChangeNotifier","_watchers","_dirty","watcher","SongDocument","_recovery","_recentChange","_sequenceNumber","_stateShouldBePushed","_recordedNewSong","_waitingToUpdateState","_whenHistoryStateChanged","history","state","hash","_resetSongRecoveryUid","canUndo","sequenceNumber","recoveryUid","_recoveryUid","toJSON","_replaceState","_pushState","forgetLastChange","_getHistoryState","_getHash","fromJSON","_cleanDocument","_normalizeSelection","_updateHistoryState","saveVersion","sessionStorage","songString","_calcVolume","eventName","replaceState","pathname","pushState","currentIndex","oldestIndex","_maximumUndoHistory","forward","back","newSong","_back","commit","_forward","snapToStart","barOffset","innerWidth","getMobileLayout","squashed","getElementById","className","getElementsByClassName","select2","dropdownAutoWidth","siblings","toggle","groups","each","v","autoplay","scrollRestoration","serviceWorker","register","updateViaCache","scope"],"mappings":";;;;;;;;;;;;;;;;;;;;;YAmJaA,GAkSb,SAASC,EAAWC,GACnB,IAAIC,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIF,EAAKG,OAAQD,IACxCD,GAAOD,EAAKE,GAEb,MAAME,EAAkBH,EAAMD,EAAKG,OAGnC,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAIF,EAAKG,OAAQD,IACxCG,GAAcC,EACdA,EAAWN,EAAKE,GAAKE,EACrBJ,EAAKE,GAAKG,EAIX,OADAL,EAAKO,KAAK,GACH,IAAIC,aAAaR,GAGzB,SAASS,EAAuBT,GAC/B,IAAIC,EAAc,EACdS,EAAe,EACnB,IAAK,IAAIR,EAAY,EAAGA,EAAIF,EAAKG,OAAQD,IACxCD,GAAOD,EAAKE,GACZQ,GAAQC,KAAKC,IAAIZ,EAAKE,IAEvB,MAAME,EAAkBH,EAAMD,EAAKG,OAC7BU,EAAkBH,EAAOV,EAAKG,OAGpC,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAIF,EAAKG,OAAQD,IACxCG,GAAcC,EACdA,GAAYN,EAAKE,GAAKE,GAAO,EAC7BJ,EAAKE,GAAKG,EAIX,OADAL,EAAKO,KAAK,GACH,IAAIC,aAAaR,YASTc,EAAYC,EAAeC,EAA+C,KAAMC,EAAyC,MACxI,IAAIjB,EAA4BF,EAAOoB,WAAWH,GAAOI,QACzD,GAAY,MAARnB,EAAc,CAIjB,GAHAA,EAAO,IAAIoB,aAAatB,EAAOuB,gBAAkB,GACjDvB,EAAOoB,WAAWH,GAAOI,QAAUnB,EAEtB,GAATe,EAAY,CAEf,IAAIO,EAAqB,EACzB,IAAK,IAAIpB,EAAY,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IAAK,CACxDF,EAAKE,GAAwB,GAAL,EAAboB,GAAwB,EACnC,IAAIC,EAAoBD,GAAc,EACA,IAAhCA,EAAaC,EAAa,KAC/BA,GAAa,OAEdD,EAAaC,QAER,GAAa,GAATR,EAEV,IAAK,IAAIb,EAAY,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IACnDF,EAAKE,GAAqB,EAAhBS,KAAKa,SAAiB,OAE3B,GAAa,GAATT,EAAY,CAEtB,IAAIO,EAAqB,EACzB,IAAK,IAAIpB,EAAY,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IAAK,CACxDF,EAAKE,GAAwB,GAAL,EAAboB,GAAwB,EACnC,IAAIC,EAAoBD,GAAc,EACA,IAAhCA,EAAaC,EAAa,KAC/BA,GAAa,OAEdD,EAAaC,QAER,GAAa,GAATR,EAAY,CAEtB,IAAIO,EAAqB,EACzB,IAAK,IAAIpB,EAAY,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IAAK,CACxDF,EAAKE,GAAwB,GAAL,EAAboB,GAAwB,EACnC,IAAIC,EAAoBD,GAAc,EACA,IAAhCA,EAAaC,EAAa,KAC/BA,GAAa,IAEdD,EAAaC,QAER,GAAa,GAATR,EAEVU,EAAkBzB,EAAM,GAAI,GAAI,EAAG,EAAG,GACtCyB,EAAkBzB,EAAM,GAAI,GAAI,MAAO,MAAO,GAC9CgB,EAA6BhB,EAAMF,EAAOuB,iBAC1CJ,EAAuBjB,EAAM,EAAMW,KAAKe,KAAK5B,EAAOuB,uBAC9C,GAAa,GAATN,EAGV,IADA,IAAIO,EAAa,EACRpB,EAAI,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IAAK,CAChDF,EAAKE,GAAwB,GAAL,EAAboB,GAAwB,EAEG,IAAhCA,GADFC,EAAYD,GAAc,GACE,KAC/BC,GAAa,IAEdD,EAAaC,OAER,GAAa,GAATR,EAEVU,EAAkBzB,EAAM,EAAG,GAAI,EAAG,EAAG,GACrCyB,EAAkBzB,EAAM,GAAI,IAAK,GAAI,EAAG,GACxCgB,EAA6BhB,EAAMF,EAAOuB,iBAC1CJ,EAAuBjB,EAAM,EAAMW,KAAKe,KAAK5B,EAAOuB,uBAC9C,GAAa,GAATN,EAGV,IADIO,EAAa,EACRpB,EAAI,EAAGA,EAAIJ,EAAOuB,gBAAiBnB,IAAK,CAChDF,EAAKE,GAAwB,GAAL,EAAboB,IAAyC,GAAhBX,KAAKa,SAAgB,GAEnB,IAAhCF,GADFC,EAAYD,GAAc,GACE,KAC/BC,GAAa,IAEdD,EAAaC,MAER,CAAA,GAAa,GAATR,EAYV,MAAM,IAAIY,MAAM,4BAA8BZ,GAT9C,IADIO,EAAa,EACRpB,EAAI,EAAGA,EAAI,MAAOA,IAAK,CAE/B,IAAIqB,EADJvB,EAAKE,IAAmB,EAAboB,GAAkB,EAAM,GAEG,IAAhCA,GADFC,EAAYD,GAAc,GACE,KAC/BC,GAAa,IAEdD,EAAaC,GAMfvB,EAAKF,EAAOuB,iBAAmBrB,EAAK,GAGrC,OAAOA,WAGQyB,EAAkBzB,EAAoB4B,EAAmBC,EAAoBC,EAAkBC,EAAmBC,GACjI,MAEMC,EAA4C,EAAzBtB,KAAKuB,IAAI,EAAGN,GAC/BO,EAAoBxB,KAAKyB,IAAItC,EAAOuB,iBAAmB,EAA6B,EAA1BV,KAAKuB,IAAI,EAAGL,IACtEQ,EAA0BvB,EAAY,GAC5C,IAAIwB,EAA4B,EAChC,IAAK,IAAIpC,EAAY+B,EAAU/B,EAAIiC,EAAWjC,IAAK,CAElD,IAAIqC,EAAiBT,GAAYC,EAAYD,IAAanB,KAAK6B,IAAItC,GAAKS,KAAK8B,IAAMb,IAAcC,EAAaD,GAG1Gc,EAAoB/B,KAAKuB,IAAI,GAAIK,EAAS,GAAKzC,EAAO6C,YAAc,GAAKJ,EAE7EG,GAAa/B,KAAKuB,IAAIhC,EAZQ,KAYY8B,GAE1CM,GAAqBI,EAQrBA,GAAaL,EAAUnC,GACvB,MAAM0C,EAAkB,aAAgB1C,EAAIA,EAAIS,KAAKkC,GAAK,EAE1D7C,EAAKE,GAAKS,KAAKmC,IAAIF,GAAWF,EAC9B1C,EAAKF,EAAOuB,gBAAkBnB,GAAKS,KAAKoC,IAAIH,GAAWF,EAGxD,OAAOJ,WAWQU,EAAsBC,EAAoBC,EAA4BC,GACrF,IAAIC,EAAyCtD,EAAOuD,iBAAiBJ,EAAa,GAClF,OAAuB,MAAnBG,GACe,GAAdH,GAAwC,GAArBC,IACtBE,EAAkB,CAAC,EAAG,EAAG,EAAG,IAEtBA,EAAgBD,EAAWC,EAAgBjD,SAE3CgD,EAAWF,WAKJK,EAAmCC,GAClD,MAAMC,EAA4B,GAClC,IAAK,IAAItD,EAAY,EAAGA,EAAIqD,EAAMpD,OAAQD,IAAK,CAC9C,MAAMuD,EAAaF,EAAMrD,GACzBuD,EAAM1C,MAAQb,EACdsD,EAAWC,EAAMC,MAAWD,EAE7B,MAAME,EAAsDJ,EAE5D,OADAI,EAAOH,WAAaA,EACbG,EApfO7D,EAAA8D,cAAwB,GACxB9D,EAAA+D,QAAkB,GAClB/D,EAAAgE,SAAmB,GACnBhE,EAAAiE,UAAoB,EACpBjE,EAAAkE,WAAqB,IAEZlE,EAAAmE,OAAiCX,EAAU,CAGjE,CAAEI,KAAM,OAAQQ,SAAU,YAAaC,MAAO,EAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,IACjH,CAAET,KAAM,QAASQ,SAAU,SAAUC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,IACpH,CAAET,KAAM,QAASQ,SAAU,UAAWC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IACpH,CAAET,KAAM,aAAcQ,SAAU,aAAcC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,IAC5H,CAAET,KAAM,SAAUQ,SAAU,SAAUC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,IACrH,CAAET,KAAM,SAAUQ,SAAU,SAAUC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,IACpH,CAAET,KAAM,WAAYQ,SAAU,WAAYC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IACxH,CAAET,KAAM,UAAWQ,SAAU,UAAWC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,IACtH,CAAET,KAAM,kBAAmBQ,SAAU,kBAAmBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,IACtI,CAAET,KAAM,oBAAqBQ,SAAU,oBAAqBC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,IAC1I,CAAET,KAAM,iBAAkBQ,SAAU,iBAAkBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,IACrI,CAAET,KAAM,iBAAkBQ,SAAU,iBAAkBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAM,GAAO,GAAO,IACrI,CAAET,KAAM,gBAAiBQ,SAAU,gBAAiBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,IACnI,CAAET,KAAM,QAASQ,SAAU,QAASC,MAAO,EAAC,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAM,GAAM,GAAO,GAAO,GAAM,IACnH,CAAET,KAAM,UAAWQ,SAAU,UAAWC,MAAO,EAAC,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,IACtH,CAAET,KAAM,mBAAoBQ,SAAU,mBAAoBC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,IAC1I,CAAET,KAAM,mBAAoBQ,SAAU,mBAAoBC,MAAO,EAAC,GAAM,GAAO,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAO,GAAM,IAC1I,CAAET,KAAM,aAAcQ,SAAU,aAAcC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,IAC7H,CAAET,KAAM,YAAaQ,SAAU,YAAaC,MAAO,EAAC,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,GAAM,GAAM,GAAO,IAC1H,CAAET,KAAM,YAAaQ,SAAU,YAAaC,MAAO,EAAC,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,GAAM,GAAM,GAAO,GAAO,MAItGrE,EAAAsE,KAA6Bd,EAAU,CAC7D,CAAEI,KAAM,IAAKW,YAAY,EAAMC,UAAW,GAC1C,CAAEZ,KAAM,IAAKW,YAAY,EAAOC,UAAW,GAC3C,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,GAC1C,CAAEZ,KAAM,IAAKW,YAAY,EAAOC,UAAW,GAC3C,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,GAC1C,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,GAC1C,CAAEZ,KAAM,IAAKW,YAAY,EAAOC,UAAW,GAC3C,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,GAC1C,CAAEZ,KAAM,IAAKW,YAAY,EAAOC,UAAW,GAC3C,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,GAC1C,CAAEZ,KAAM,IAAKW,YAAY,EAAOC,UAAW,IAC3C,CAAEZ,KAAM,IAAKW,YAAY,EAAMC,UAAW,MAGpBxE,EAAAyE,oBAA6C,EAAE,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAC3FzE,EAAA0E,SAAmB,GACnB1E,EAAA2E,SAAmB,IACnB3E,EAAA4E,YAAsB,GACtB5E,EAAA6E,eAAyB,EACzB7E,EAAA8E,eAAyB,GACzB9E,EAAA+E,YAAsB,EACtB/E,EAAAgF,YAAsB,IACtBhF,EAAAiF,OAAiB,EACjBjF,EAAAkF,OAAiB,GACjBlF,EAAAmF,yBAAmC,EACnCnF,EAAAoF,yBAAmC,GACnCpF,EAAAqF,aAAuB,GACvBrF,EAAAsF,aAAuB,EACvBtF,EAAAuF,iBAA2B,EAC3BvF,EAAAuD,iBAAyD,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IACrLvD,EAAAwF,QAAmChC,EAAU,CACnE,CAAEI,KAAM,oBAAqB6B,aAAc,EAA8FC,kBAAmB,CAAO,EAAS,GAAW,KACvL,CAAE9B,KAAM,eAAgB6B,aAAc,EAA8FC,kBAAmB,CAAO,EAAS,GAAW,KAClL,CAAE9B,KAAM,gBAAiB6B,aAAc,EAA8FC,kBAAmB,CAAO,EAAS,GAAW,KACnL,CAAE9B,KAAM,gBAAiB6B,aAAc,EAA8FC,kBAAmB,CAAO,EAAS,EAAU,GAAW,KAE7L,CAAE9B,KAAM,KAAM6B,aAAc,EAAwFC,kBAAmB,MACvI,CAAE9B,KAAM,KAAM6B,aAAc,EAAwFC,kBAAmB,MAEvI,CAAE9B,KAAM,MAAO6B,aAAc,GAAyFC,kBAAmB,MACzI,CAAE9B,KAAM,MAAO6B,aAAc,GAAyFC,kBAAmB,MACzI,CAAE9B,KAAM,iBAAkB6B,aAAc,GAAyFC,kBAAmB,QAG9H1F,EAAA2F,oBAA6C,CAAC,OAAQ,KAAM,QAAS,WAAY,UAAW,YAAa,MAAO,cAAe,OAC/H3F,EAAA4F,iCAA2D,EAAC,GAAM,GAAM,GAAO,GAAO,GAAO,GAAM,GAAO,GAC1G5F,EAAA6F,UAAuCrC,EAAU,CACvE,CAAEI,KAAM,UAAWkC,OAAQ,IAAMzE,QAASpB,EAAW,CAAC,EAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAAM,GAAK,IAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,IAAM,GAAK,IAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KAAO,IAAM,KAAO,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KAAO,IAAM,KAAO,IAAM,IAAM,IAAM,IAAM,IAAM,MACtZ,CAAE2D,KAAM,WAAYkC,OAAQ,EAAKzE,QAASpB,EAAW,CAAC,EAAM,GAAM,GAAY,EAAM,GAAM,EAAM,GAAM,GAAY,GAAO,GAAM,GAAO,GAAM,EAAa,EAAa,GAAO,GAAM,GAAO,GAAM,GAAY,EAAM,GAAM,EAAM,GAAM,GAAY,EAAM,IAAO,EAAM,IAAM,IAAc,EAAM,IAAO,EAAM,IAAM,IAAc,GAAO,IAAO,GAAO,IAAM,GAAc,GAAe,GAAO,IAAO,GAAO,IAAM,IAAc,EAAM,IAAO,EAAM,IAAM,IAAc,EAAM,MAC5c,CAAE2D,KAAM,SAAUkC,OAAQ,GAAKzE,QAASpB,EAAW,CAAC,GAAM,KAC1D,CAAE2D,KAAM,YAAakC,OAAQ,GAAKzE,QAASpB,EAAW,CAAC,GAAM,GAAM,GAAM,KACzE,CAAE2D,KAAM,YAAakC,OAAQ,GAAKzE,QAASpB,EAAW,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,KACjG,CAAE2D,KAAM,WAAYkC,OAAQ,IAAMzE,QAASpB,EAAW,CAAC,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,EAAM,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAO,GAAM,GAAa,GAAe,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,GAAO,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,IAAO,EAAM,MACvd,CAAE2D,KAAM,aAAckC,OAAQ,GAAKzE,QAASpB,EAAW,CAAC,GAAM,IAAM,IAAM,IAAM,IAAM,EAAK,GAAM,IAAM,IAAM,IAAM,GAAK,EAAK,GAAK,GAAK,GAAK,MAC5I,CAAE2D,KAAM,eAAgBkC,OAAQ,GAAKzE,QAASpB,EAAW,CAAC,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,KAC5I,CAAE2D,KAAM,QAASkC,OAAQ,GAAKzE,QAASpB,EAAW,CAAC,GAAM,EAAK,GAAM,EAAK,EAAK,KAC9E,CAAE2D,KAAM,OAAQkC,OAAQ,IAAMzE,QAASV,EAAuB,CAAC,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACvO,CAAEiD,KAAM,QAASkC,OAAQ,GAAKzE,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,KACnJ,CAAEiD,KAAM,OAAQkC,OAAQ,GAAKzE,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACnO,CAAEiD,KAAM,iBAAkBkC,OAAQ,IAAMzE,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACrO,CAAEiD,KAAM,gBAAiBkC,OAAQ,IAAMzE,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACzO,CAAEiD,KAAM,WAAYkC,OAAQ,GAAKzE,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACrO,CAAEiD,KAAM,UAAWkC,OAAQ,IAAMzE,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,MACpO,CAAEiD,KAAM,UAAWkC,OAAQ,IAAMzE,QAASV,EAAuB,CAAC,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,MAChO,CAAEiD,KAAM,kBAAmBkC,OAAQ,GAAKzE,QAASV,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,GAAM,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,EAAK,EAAK,GAAM,EAAK,EAAK,GAAM,GAAM,GAAM,MACjP,CAAEiD,KAAM,QAASkC,OAAQ,GAAKzE,QAASV,EAAuB,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,EAAK,GAAM,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KACxO,CAAEiD,KAAM,YAAakC,OAAQ,IAAMzE,QAASV,EAAuB,CAAC,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,GAAM,EAAK,EAAK,EAAK,EAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,KAC1O,CAAEiD,KAAM,SAAUkC,OAAQ,GAAKzE,QAASpxrCD,EAAAoB,WAAyCoC,EAAU,CACzE,CAAEI,KAAM,QAASkC,OAAQ,IAAMtB,UAAW,GAAIuB,gBAAiB,KAAQC,QAAQ,EAAO3E,QAAS,MAC/F,CAAEuC,KAAM,QAASkC,OAAQ,EAAKtB,UAAW,GAAIuB,gBAAiB,EAAKC,QAAQ,EAAM3E,QAAS,MAE1F,CAAEuC,KAAM,QAASkC,OAAQ,GAAKtB,UAAW,GAAIuB,gBAAiB,KAAQC,QAAQ,EAAO3E,QAAS,MAC9F,CAAEuC,KAAM,OAAQkC,OAAQ,GAAKtB,UAAW,GAAIuB,gBAAiB,KAAQC,QAAQ,EAAO3E,QAAS,MAC7F,CAAEuC,KAAM,SAAUkC,OAAQ,IAAKtB,UAAW,GAAIuB,gBAAiB,EAAKC,QAAQ,EAAM3E,QAAS,MAC3F,CAAEuC,KAAM,QAASkC,OAAQ,EAAKtB,UAAW,GAAIuB,gBAAiB,KAAQC,QAAQ,EAAO3E,QAAS,MAC9F,CAAEuC,KAAM,OAAQkC,OAAQ,IAAKtB,UAAW,IAAKuB,gBAAiB,KAAQC,QAAQ,EAAM3E,QAAS,MAC7F,CAAEuC,KAAM,SAAUkC,OAAQ,KAAOtB,UAAW,GAAIuB,gBAAiB,KAAQC,QAAQ,EAAO3E,QAAS,MACjG,CAAEuC,KAAM,WAAYkC,OAAQ,EAAKtB,UAAW,GAAIuB,gBAAiB,KAAQC,QAAQ,EAAO3E,QAAS,QAE3ErB,EAAAiG,kBAA4B,IAC5BjG,EAAAkG,kBAA4B,EAC5BlG,EAAAmG,UAAoB,IACpBnG,EAAAoG,mBAA6B,IAC7BpG,EAAAqG,kBAA4B,GAC5BrG,EAAAsG,qBAA+B,EAC/BtG,EAAAuG,YAA2C/C,EAAU,CAC3E,CAAEI,KAAM,WAAY4C,YAAY,EAAMC,cAAe,EAAKC,UAAU,EAAOC,aAAc,EAAGC,QAAQ,EAAOC,WAAY,GACvH,CAAEjD,KAAM,OAAQ4C,YAAY,EAAOC,cAAe,EAAKC,UAAU,EAAOC,aAAc,EAAGC,QAAQ,EAAOC,WAAY,GACpH,CAAEjD,KAAM,OAAQ4C,YAAY,EAAOC,cAAe,KAAOC,UAAU,EAAOC,aAAc,EAAGC,QAAQ,EAAOC,WAAY,GACtH,CAAEjD,KAAM,QAAS4C,YAAY,EAAMC,cAAe,KAAOC,UAAU,EAAOC,aAAc,EAAGC,QAAQ,EAAMC,WAAY,GACrH,CAAEjD,KAAM,aAAc4C,YAAY,EAAOC,cAAe,IAAMC,UAAU,EAAMC,aAAc,EAAGC,QAAQ,EAAOC,WAAY,GAC1H,CAAEjD,KAAM,YAAa4C,YAAY,EAAOC,cAAe,EAAKC,UAAU,EAAMC,aAAc,GAAIC,QAAQ,EAAOC,WAAY,GACzH,CAAEjD,KAAM,cAAe4C,YAAY,EAAOC,cAAe,MAAQC,UAAU,EAAMC,aAAc,GAAIC,QAAQ,EAAOC,WAAY,GAC9H,CAAEjD,KAAM,YAAa4C,YAAY,EAAOC,cAAe,IAAMC,UAAU,EAAMC,aAAc,GAAIC,QAAQ,EAAOC,WAAY,KAEpG7G,EAAA8G,SAAqCtD,EAAU,CACrE,CAAEI,KAAM,OAAQhB,UAAW,EAAKmE,KAAM,EAAGC,WAAY,GACrD,CAAEpD,KAAM,QAAShB,UAAW,IAAMmE,KAAM,EAAGC,WAAY,GACvD,CAAEpD,KAAM,UAAWhB,UAAW,GAAKmE,KAAM,EAAGC,WAAY,IACxD,CAAEpD,KAAM,QAAShB,UAAW,IAAMmE,KAAM,EAAGC,WAAY,GACvD,CAAEpD,KAAM,QAAShB,UAAW,GAAKmE,KAAM,EAAGC,WAAY,KAEhChH,EAAAiH,aAA6CzD,EAAU,CAC7E,CAAEI,KAAM,SAAUsD,eAAgB,CAAC,KAAOC,OAAQ,KAClD,CAAEvD,KAAM,QAASsD,eAAgB,CAAC,IAAM,OAAc,KAAWC,OAAQ,UAInDnH,EAAAoH,cAAuC,CAAC,EAAG,MAAQ,KAAO,GAAK,IAAM,EAAI,EAAG,GAAK,GAAK,EAAI,EAAG,IAAM,GAAK,GAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EAAG,KAAM,IAAK,IAAK,IAAK,EAAG,IAAK,EAAG,GAChSpH,EAAAqH,UAAuC7D,EAAU,CACvE,CAAEI,KAAM,QAAS0D,OAAQ,EAAKC,OAAQ,EAAKzB,OAAQ,GAAK0B,KAAM,GAC9D,CAAE5D,KAAM,UAAW0D,OAAQ,KAAOC,OAAQ,EAAKzB,OAAQ,GAAK0B,KAAM,GAClE,CAAE5D,KAAM,MAAO0D,OAAQ,KAAOC,OAAQ,EAAKzB,OAAQ,EAAK0B,KAAM,GAC9D,CAAE5D,KAAM,aAAc0D,OAAQ,IAAMC,OAAQ,EAAKzB,OAAQ,EAAK0B,KAAM,GACpE,CAAE5D,KAAM,YAAa0D,OAAQ,IAAMC,OAAQ,EAAKzB,OAAQ,GAAK0B,KAAM,GACnE,CAAE5D,KAAM,QAAS0D,OAAQ,IAAKC,OAAQ,IAAKzB,OAAQ,GAAK0B,KAAM,GAC9D,CAAE5D,KAAM,SAAU0D,OAAQ,EAAKC,OAAQ,EAAKzB,OAAQ,GAAK0B,KAAM,GAC/D,CAAE5D,KAAM,QAAS0D,OAAQ,IAAMC,OAAQ,EAAKzB,OAAQ,EAAK0B,MAAO,GAChE,CAAE5D,KAAM,QAAS0D,OAAQ,IAAMC,OAAQ,EAAKzB,OAAQ,EAAK0B,KAAM,MAEzCxH,EAAAyH,aAAsC,CAAC,OAAQ,SAAU,SAAU,mBACnEzH,EAAA0H,YAAsB,GAGtB1H,EAAA2H,eAAyB,MACzB3H,EAAA4H,UAAoB,GACpB5H,EAAA6H,OAAoC,EAAnB7H,EAAO4H,UACxB5H,EAAA8H,WAAqB,GACrB9H,EAAA+H,UAAoB,GACpB/H,EAAAgI,eAAyB,IACzBhI,EAAAiI,cAAwB,IACxBjI,EAAAkI,OAAiC1E,EAAU,CACjE,CAAEI,KAAM,UAAWuE,YAAY,EAAMC,gBAAgB,EAAOC,aAAa,EAAOC,kBAAkB,EAAOC,WAAY,GACrH,CAAE3E,KAAM,QAASuE,YAAY,EAAMC,gBAAgB,EAAOC,aAAa,EAAOC,kBAAkB,EAAOC,WAAY,GACnH,CAAE3E,KAAM,WAAYuE,YAAY,EAAOC,gBAAgB,EAAOC,aAAa,EAAMC,kBAAkB,EAAOC,WAAY,GACtH,CAAE3E,KAAM,kBAAmBuE,YAAY,EAAMC,gBAAgB,EAAMC,aAAa,EAAMC,kBAAkB,EAAMC,WAAY,KAEpGvI,EAAAwI,aAAuB,EACvBxI,EAAAyI,cAAwB,EACxBzI,EAAA0I,WAAyClF,EAAU,CACzE,CAAEI,KAAM,YAAa+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,KACxG,CAAEjF,KAAM,YAAa+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,GAAI,CAAC,GAAI,KACtG,CAAEjF,KAAM,YAAa+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,KACtG,CAAEjF,KAAM,YAAa+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,GAAI,CAAC,GAAI,KACvG,CAAEjF,KAAM,UAAW+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KAClG,CAAEjF,KAAM,UAAW+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,KACjG,CAAEjF,KAAM,YAAa+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,EAAG,GAAI,GAAI,KACrG,CAAEjF,KAAM,UAAW+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACjG,CAAEjF,KAAM,YAAa+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACpG,CAAEjF,KAAM,cAAe+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,GAAI,KAC3G,CAAEjF,KAAM,UAAW+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,CAAC,GAAI,KAChG,CAAEjF,KAAM,YAAa+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KACpG,CAAEjF,KAAM,UAAW+E,aAAc,EAAGC,kBAAmB,CAAC,EAAG,EAAG,EAAG,GAAIC,YAAa,CAAC,GAAI,GAAI,GAAI,OAEzE7I,EAAA8I,wBAAiD,CAAC,EAAK,KAAO,KAAO,MACrE9I,EAAA+I,qBAA+B,GAC/B/I,EAAAgJ,oBAA0DxF,EAAU,CAC1F,CAAEI,KAAM,KAAMqF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEvF,KAAM,MAAOqF,KAAM,EAAKC,SAAU,IAAKC,eAAgB,GACzD,CAAEvF,KAAM,KAAMqF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEvF,KAAM,MAAOqF,KAAM,EAAKC,UAAW,IAAKC,eAAgB,GAC1D,CAAEvF,KAAM,KAAMqF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEvF,KAAM,KAAMqF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEvF,KAAM,KAAMqF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEvF,KAAM,KAAMqF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEvF,KAAM,KAAMqF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEvF,KAAM,KAAMqF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEvF,KAAM,KAAMqF,KAAM,EAAKC,SAAU,EAAKC,cAAe,GACvD,CAAEvF,KAAM,MAAOqF,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEvF,KAAM,MAAOqF,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEvF,KAAM,MAAOqF,KAAM,GAAMC,SAAU,EAAKC,cAAe,GACzD,CAAEvF,KAAM,MAAOqF,KAAM,GAAMC,SAAU,EAAKC,cAAe,KAEnCnJ,EAAAoJ,UAAuC5F,EAAU,CACvE,CAAEI,KAAM,SAAUmD,KAAI,EAAuBsC,MAAO,GACpD,CAAEzF,KAAM,SAAUmD,KAAI,EAAuBsC,MAAO,GACpD,CAAEzF,KAAM,QAASmD,KAAI,EAAsBsC,MAAO,GAClD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,IACpD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,GACpD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,GACpD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,IACpD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,GACpD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,GACpD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,IACpD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,GACpD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,GACpD,CAAEzF,KAAM,WAAYmD,KAAI,EAAwBsC,MAAO,GACvD,CAAEzF,KAAM,WAAYmD,KAAI,EAAwBsC,MAAO,GACvD,CAAEzF,KAAM,WAAYmD,KAAI,EAAwBsC,MAAO,GACvD,CAAEzF,KAAM,WAAYmD,KAAI,EAAyBsC,MAAO,GACxD,CAAEzF,KAAM,WAAYmD,KAAI,EAAyBsC,MAAO,GACxD,CAAEzF,KAAM,WAAYmD,KAAI,EAAyBsC,MAAO,GACxD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,IACpD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,GACpD,CAAEzF,KAAM,UAAWmD,KAAI,EAAsBsC,MAAO,KAE9BrJ,EAAAsJ,UAAuC9F,EAAU,CACvE,CAAEI,KAAM,KAAM2F,QAAS,CAAC,CAAC,GAAI,GAAI,GAAI,KACrC,CAAE3F,KAAM,KAAM2F,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,KACrC,CAAE3F,KAAM,KAAM2F,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACrC,CAAE3F,KAAM,KAAM2F,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACrC,CAAE3F,KAAM,QAAS2F,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,GAAI,KACzC,CAAE3F,KAAM,QAAS2F,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KACzC,CAAE3F,KAAM,WAAY2F,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,KAC7C,CAAE3F,KAAM,WAAY2F,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KAC7C,CAAE3F,KAAM,cAAe2F,QAAS,CAAC,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,KACjD,CAAE3F,KAAM,MAAO2F,QAAS,CAAC,GAAI,CAAC,GAAI,GAAI,KACtC,CAAE3F,KAAM,MAAO2F,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACtC,CAAE3F,KAAM,MAAO2F,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAE3F,KAAM,MAAO2F,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,KACtC,CAAE3F,KAAM,MAAO2F,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAE3F,KAAM,MAAO2F,QAAS,CAAC,GAAI,GAAI,GAAI,CAAC,KACtC,CAAE3F,KAAM,UAAW2F,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KAC3C,CAAE3F,KAAM,UAAW2F,QAAS,CAAC,GAAI,GAAI,CAAC,GAAI,CAAC,KAC3C,CAAE3F,KAAM,UAAW2F,QAAS,CAAC,GAAI,CAAC,GAAI,CAAC,GAAI,CAAC,OAEtBvJ,EAAAuB,gBAA0B,MAC1BvB,EAAAwJ,kBAA4B,GAC5BxJ,EAAAyJ,sBAAgC,GAChCzJ,EAAA0J,+BAAyC,EACzC1J,EAAA2J,yBAAmC,EACnC3J,EAAA6C,aAAuB,GAAK7C,EAAO2J,0BAA4B,EAC/D3J,EAAA4J,uBAAiC,GACjC5J,EAAA6J,kBAA4B,GAC5B7J,EAAA8J,0BAAoC,EACpC9J,EAAA+J,cAAwB,GAAK/J,EAAO8J,2BAA6B,EACjE9J,EAAAgK,oBAA8B,KAC9BhK,EAAAiK,gBAA0B,GAC1BjK,EAAAkK,qBAA+B,EAC/BlK,EAAAmK,qBAA+B,GAC/BnK,EAAAoK,qBAA+B,EAC/BpK,EAAAqK,qBAA+B,EAC/BrK,EAAAsK,mBAA6B,EAC7BtK,EAAAuK,mBAA6B,EAC7BvK,EAAAwK,cAAwB,EAGxBxK,EAAAyK,UAAoB,GACpBzK,EAAA0K,SAAmB,EACnB1K,EAAA2K,aAAuB,EACvB3K,EAAA4K,qBAA+B,EAE/B5K,EAAA6K,uBAAuD,EAAtB7K,EAAOwI,aACxCxI,EAAA8K,eAAyB,IACzB9K,EAAA+K,aAAuB/K,EAAO8K,eAAiB,EAC/C9K,EAAAgL,SA6LxB,WACC,MAAM9K,EAAqB,IAAIQ,aAAaV,EAAO8K,eAAiB,GACpE,IAAK,IAAI1K,EAAY,EAAGA,EAAIJ,EAAO8K,eAAiB,EAAG1K,IACtDF,EAAKE,GAAKS,KAAKoC,IAAI7C,EAAIS,KAAKkC,GAAK,EAAM/C,EAAO8K,gBAE/C,OAAO5K,EAlMyC+K,GAGzBjL,EAAAkL,gBAA0B,GC9Z3C,MAAMC,EAAoB,4FAA4FC,KAAKC,UAAUC,oBAE5HC,EAAa5H,GAC5B,OAAOA,EAAM6H,QAAQ,GAAGC,QAAQ,SAAU,UAG9BC,EAsQLC,qBAAqBC,GAC3B,MAAMC,EAAwBD,GAAe,EACvCE,EAAoC,GAAdF,EAC5B,OAAOF,EAAaK,iBAAiBF,GAAeG,QAAQF,GAEtDH,gCAAgCM,GACtC,IAAK,IAAIJ,EAAwB,EAAGA,EAAgBH,EAAaK,iBAAiB1L,OAAQwL,IAAiB,CAC1G,MAAMK,EAA2BR,EAAaK,iBAAiBF,GAC/D,IAAK,IAAIC,EAAsB,EAAGA,EAAcI,EAASF,QAAQ3L,OAAQyL,IAAe,CACvF,MAAMK,EAAiBD,EAASF,QAAQF,GACxC,GAAIK,EAAOC,aAAeD,EAAOE,aAAeJ,EAAS,OAAQJ,GAAiB,GAAKC,GAGzF,OAAO,KAGDH,yBAAyBW,GAC/B,IAAK,IAAIT,EAAwB,EAAGA,EAAgBH,EAAaK,iBAAiB1L,OAAQwL,IAAiB,CAC1G,MAAMK,EAA2BR,EAAaK,iBAAiBF,GAC/D,IAAK,IAAIC,EAAsB,EAAGA,EAAcI,EAASF,QAAQ3L,OAAQyL,IAAe,CAEvF,GADuBI,EAASF,QAAQF,GAC7BlI,MAAQ0I,EAAY,OAAQT,GAAiB,GAAKC,GAG/D,OAAO,MA7ReJ,EAAAa,QAAkB,MAClBb,EAAAc,mBAA6B,kBAAoBd,EAAaa,QAE9Db,EAAAK,iBAAoDvI,EAAU,CACpF,CACCI,KAAM,qBAAsBoI,QAAkCxI,EAAU,CACvE,CAAEI,KAAM,YAAa6I,WAAU,GAC/B,CAAE7I,KAAM,cAAe6I,WAAU,GACjC,CAAE7I,KAAM,cAAe6I,WAAU,GACjC,CAAE7I,KAAM,WAAY6I,WAAU,GAC9B,CAAE7I,KAAM,UAAW6I,WAAU,GAC7B,CAAE7I,KAAM,YAAa6I,WAAU,GAC/B,CAAE7I,KAAM,cAAe6I,WAAU,GACjC,CAAE7I,KAAM,cAAe6I,WAAU,MAGnC,CACC7I,KAAM,gBAAiBoI,QAAkCxI,EAAU,CAClE,CAAEI,KAAM,cAAeyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,OAAQ4F,WAAc,WAAYC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAU9M,KAAQ,SAAU+M,SAAY,QAASC,QAAW,SAClQ,CAAEtJ,KAAM,gBAAiByI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,OAAQ4F,WAAc,WAAYC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAU9M,KAAQ,WAAY+M,SAAY,QAASC,QAAW,SACtQ,CAAEtJ,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,OAAQ4F,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAU9M,KAAQ,SAAU+M,SAAY,MAAOC,QAAW,SACjR,CAAEtJ,KAAM,kBAAmByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,OAAQ4F,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAU9M,KAAQ,WAAY+M,SAAY,UAAWC,QAAW,SAC3R,CAAEtJ,KAAM,kBAAmByI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,OAAQ6F,QAAW,SAAUD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAU9M,KAAQ,WAAY+M,SAAY,MAAOC,QAAW,UAC3Q,CAAEtJ,KAAM,aAAcyI,YAAa,IAAKc,SAAS,EAAMT,SAAU,CAAE3F,KAAQ,QAAS4F,WAAc,OAAQC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAU9M,KAAQ,UACpO,CAAE0D,KAAM,WAAYyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM4F,WAAc,OAAQC,QAAW,OAAQC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACxjB,CAAE9J,KAAM,UAAWyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,kBAAmBC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cAClkB,CAAE9J,KAAM,WAAYyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACzjB,CAAE9J,KAAM,WAAYyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,kBAAmBC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,aACrkB,CAAE9J,KAAM,YAAayI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,cAAe4F,WAAc,OAAQC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQS,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACxiB,CAAE/J,KAAM,gBAAiByI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,cAAe4F,WAAc,OAAQC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQS,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC/f,CAAE/J,KAAM,gBAAiByI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,cAAe4F,WAAc,OAAQC,QAAW,OAAQC,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQS,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/f,CAAE/J,KAAM,eAAgByI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,cAAe6F,QAAW,OAAQD,WAAc,WAAYE,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQS,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACnjB,CAAE/J,KAAM,aAAcyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,cAAe6F,QAAW,OAAQD,WAAc,WAAYE,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQS,eAAkB,EAAE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,SAGljB,CACC/J,KAAM,mBAAoBoI,QAAkCxI,EAAU,CACrE,CAAEI,KAAM,gBAAiByI,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAChZ,CAAEhK,KAAM,eAAgByI,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/Y,CAAEhK,KAAM,iBAAkByI,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,OAAQ6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAW9M,KAAQ,YAAa+M,SAAY,UAAWC,QAAW,SAChS,CAAEtJ,KAAM,mBAAoByI,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,aAAcC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzZ,CAAEhK,KAAM,mBAAoByI,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,KACrY,CAAEhK,KAAM,mBAAoByI,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cAC1lB,CAAE9J,KAAM,cAAeyI,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACplB,CAAE9J,KAAM,WAAYyI,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM4F,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC7kB,CAAE9J,KAAM,WAAYyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,IAAK,GAAI,IAAK,GAAI,GAAI,IAAK,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,MACpZ,CAAEhK,KAAM,gBAAiByI,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,UAAWC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,SAGjZ,CACChK,KAAM,oBAAqBoI,QAAkCxI,EAAU,CACtE,CAAEI,KAAM,UAAWyI,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,cAAeC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,cACtlB,CAAE9J,KAAM,eAAgByI,YAAa,EAAGD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cAC3lB,CAAE9J,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,KACzX,CAAEhK,KAAM,cAAeyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACjX,CAAEhK,KAAM,aAAcyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACxlB,CAAE9J,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACjlB,CAAE9J,KAAM,UAAWyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACnlB,CAAE9J,KAAM,YAAayI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cACnlB,CAAE9J,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,MAAOC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,EAAG,IAAK,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACla,CAAEhK,KAAM,aAAcyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACnkB,CAAE9J,KAAM,YAAayI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,cAAeC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,eACxlB,CAAE9J,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,UAAWE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,aAC7lB,CAAE9J,KAAM,cAAeyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,aACplB,CAAE9J,KAAM,QAASyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,MAAOC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,gBAGllB,CACC9J,KAAM,iBAAkBoI,QAAkCxI,EAAU,CACnE,CAAEI,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACnlB,CAAE9J,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/Y,CAAEhK,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACzY,CAAEhK,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC9Y,CAAEhK,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,iBAGrlB,CACC9J,KAAM,sBAAuBoI,QAAkCxI,EAAU,CACxE,CAAEI,KAAM,gBAAiByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC/Y,CAAEhK,KAAM,gBAAiByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAC/Y,CAAEhK,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACrlB,CAAE9J,KAAM,gBAAiByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC3Y,CAAEhK,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC1Y,CAAEhK,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,aAC7kB,CAAE9J,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,cACtlB,CAAE9J,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACnlB,CAAE9J,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,OAAQ4F,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAW9M,KAAQ,WAAY+M,SAAY,UAAWC,QAAW,YAG1R,CACCtJ,KAAM,wBAAyBoI,QAAkCxI,EAAU,CAC1E,CAAEI,KAAM,oBAAqByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,aAC1mB,CAAE9J,KAAM,OAAQyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM4F,WAAc,YAAaC,QAAW,SAAUC,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC3kB,CAAE9J,KAAM,QAASyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM4F,WAAc,YAAaC,QAAW,SAAUC,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cACllB,CAAE9J,KAAM,QAASyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,aACllB,CAAE9J,KAAM,UAAWyI,YAAa,IAAKK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,aAC/jB,CAAE9J,KAAM,WAAYyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACvlB,CAAE9J,KAAM,OAAQyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,iBAGvlB,CACC9J,KAAM,qBAAsBoI,QAAkCxI,EAAU,CACvE,CAAEI,KAAM,mBAAoByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,cACtlB,CAAE9J,KAAM,oBAAqByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cACxlB,CAAE9J,KAAM,iBAAkByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,UAAWC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACvlB,CAAE9J,KAAM,mBAAoByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,SAAW,CAAED,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,cACrlB,CAAE9J,KAAM,oBAAqByI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,MAAO6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUc,WAAc,GAAIC,cAAiB,QAASb,QAAW,SACxQ,CAAEtJ,KAAM,oBAAqByI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,WAAYE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,cACtkB,CAAE9J,KAAM,oBAAqByI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACvkB,CAAE9J,KAAM,oBAAqByI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,MAAO6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUc,WAAc,GAAIC,cAAiB,UAAWb,QAAW,eAG5Q,CACCtJ,KAAM,kBAAmBoI,QAAkCxI,EAAU,CACpE,CAAEI,KAAM,kBAAmByI,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACjZ,CAAEhK,KAAM,kBAAmByI,YAAa,GAAIwB,uBAAwB,EAAGnB,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,KACrY,CAAEhK,KAAM,mBAAoByI,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE3F,KAAQ,KAAM4F,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASE,QAAW,QAASE,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAClnB,CAAE9J,KAAM,aAAcyI,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC1nB,CAAE9J,KAAM,aAAcyI,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE3F,KAAQ,KAAM4F,WAAc,aAAcC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACrnB,CAAE9J,KAAM,aAAcyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzY,CAAEhK,KAAM,YAAayI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,OAAQ6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAW9M,KAAQ,aAAc+M,SAAY,aAAcC,QAAW,SAChS,CAAEtJ,KAAM,YAAayI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,MAAOC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACrY,CAAEhK,KAAM,UAAWyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,QAASC,SAAY,MAAOC,QAAW,OAAQU,UAAa,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,SAG7Y,CACChK,KAAM,iBAAkBoI,QAAkCxI,EAAU,CACnE,CAAEI,KAAM,WAAYyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,cACvlB,CAAE9J,KAAM,QAASyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC1lB,CAAE9J,KAAM,QAASyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACzlB,CAAE9J,KAAM,aAAcyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,cAC5lB,CAAE9J,KAAM,SAAUyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,cAAeC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,aACrlB,CAAE9J,KAAM,kBAAmByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,WAAYE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,UAAWC,kBAAqB,GAAIC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACxmB,CAAE9J,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,cAC5lB,CAAE9J,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,cAClmB,CAAE9J,KAAM,kBAAmByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,OAAQ4F,WAAc,YAAaC,QAAW,kBAAmBC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAU9M,KAAQ,WAAY+M,SAAY,MAAOC,QAAW,YACrS,CAAEtJ,KAAM,kBAAmByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACzmB,CAAE9J,KAAM,kBAAmByI,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,cAC3oB,CAAE9J,KAAM,WAAYyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,QAASE,UAAa,cAAeC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,cACvlB,CAAE9J,KAAM,kBAAmByI,YAAa,GAAIwB,uBAAwB,EAAGnB,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,UAAWE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,GAAIC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,gBAG3nB,CACC9J,KAAM,gBAAiBoI,QAAkCxI,EAAU,CAClE,CAAEI,KAAM,gBAAiByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,KACvZ,CAAEhK,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAChZ,CAAEhK,KAAM,aAAcyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,KACpY,CAAEhK,KAAM,eAAgByI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,KAC3X,CAAEhK,KAAM,aAAcyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACpX,CAAEhK,KAAM,YAAayI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,KAC3X,CAAEhK,KAAM,YAAayI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC3X,CAAEhK,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,OAAQ4F,WAAc,cAAeC,QAAW,kBAAmBC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAU9M,KAAQ,UAAW+M,SAAY,QAASC,QAAW,UACpS,CAAEtJ,KAAM,iBAAkByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,QAASE,UAAa,YAAaC,aAAgB,UAAWC,kBAAqB,EAAGC,iBAAoB,QAASC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,aACxmB,CAAE9J,KAAM,aAAcyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM4F,WAAc,QAASC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,SAAW,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC/jB,CAAE9J,KAAM,QAASyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,WAAYE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,GAAIC,iBAAoB,WAAYC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAClkB,CAAE9J,KAAM,QAASyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,QAASE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,QAASE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC1jB,CAAE9J,KAAM,UAAWyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,SAAW,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,SAAW,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,SAAW,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,cAC7jB,CAAE9J,KAAM,YAAayI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,QAASE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cAC1lB,CAAE9J,KAAM,aAAcyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QAGvV,CACCpK,KAAM,gBAAiBoI,QAAkCxI,EAAU,CAClE,CAAEI,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC7kB,CAAE9J,KAAM,WAAYyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC7kB,CAAE9J,KAAM,OAAQyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACzkB,CAAE9J,KAAM,gBAAiByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cACplB,CAAE9J,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM4F,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cACrlB,CAAE9J,KAAM,gBAAiByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,QAASE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,cACvlB,CAAE9J,KAAM,gBAAiByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cACxlB,CAAE9J,KAAM,gBAAiByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM4F,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cACxlB,CAAE9J,KAAM,cAAeyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,MAAO6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWc,WAAc,GAAIC,cAAiB,UAAWb,QAAW,YAGzQ,CACCtJ,KAAM,eAAgBoI,QAAkCxI,EAAU,CACjE,CAAEI,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,YAC/kB,CAAE9J,KAAM,WAAYyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,QAASC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,aAC7kB,CAAE9J,KAAM,YAAayI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC5kB,CAAE9J,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,YAChlB,CAAE9J,KAAM,YAAayI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,QAASE,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC9jB,CAAE9J,KAAM,UAAWyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,QAASE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC5kB,CAAE9J,KAAM,OAAQyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,WAAYC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACjlB,CAAE9J,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,SAAW,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACtlB,CAAE9J,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAKC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC3kB,CAAE9J,KAAM,WAAYyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACtY,CAAEhK,KAAM,YAAayI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,WAAYC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,gBAGrlB,CACC9J,KAAM,gBAAiBoI,QAAkCxI,EAAU,CAClE,CAAEI,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,YAC7kB,CAAE9J,KAAM,WAAYyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KACvY,CAAEhK,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,kBAAmBD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,UAAWU,UAAa,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACvX,CAAEhK,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAClX,CAAEhK,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,SAAW,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,YAC7kB,CAAE9J,KAAM,aAAcyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,UAAWE,UAAa,YAAaC,aAAgB,MAAOC,kBAAqB,GAAIC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,SAAW,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,aAC/lB,CAAE9J,KAAM,YAAayI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUgB,SAAY,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACxV,CAAEpK,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,aACxmB,CAAE9J,KAAM,WAAYyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,WAAY4F,WAAc,aAAcC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUgB,SAAY,CAAC,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC7V,CAAEpK,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,QAASgB,SAAY,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACpV,CAAEpK,KAAM,eAAgByI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,IAAK,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,KAClW,CAAEpK,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,WAAYE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,UAAWU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QAG9Y,CACChK,KAAM,cAAeoI,QAAkCxI,EAAU,CAChE,CAAEI,KAAM,cAAeyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,aACtmB,CAAE9J,KAAM,WAAYyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC5lB,CAAE9J,KAAM,gBAAiByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,OAAQ4F,WAAc,YAAaC,QAAW,kBAAmBC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAW9M,KAAQ,WAAY+M,SAAY,MAAOC,QAAW,YACpS,CAAEtJ,KAAM,kBAAmByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,YAC9mB,CAAE9J,KAAM,kBAAmByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,cAC5lB,CAAE9J,KAAM,eAAgByI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,QAASC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,aAC9lB,CAAE9J,KAAM,YAAayI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,OAAQ6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAW9M,KAAQ,WAAY+M,SAAY,MAAOC,QAAW,SAChS,CAAEtJ,KAAM,aAAcyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,QAASC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,cAChmB,CAAE9J,KAAM,aAAcyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,kBAAmBD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWC,SAAY,SAAUC,QAAW,OAAQU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC3Z,CAAEhK,KAAM,UAAWyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,GAAIC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,YAAc,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aAC/lB,CAAE9J,KAAM,SAAUyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,eAC1mB,CAAE9J,KAAM,cAAeyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWE,QAAW,UAAWE,UAAa,cAAeC,aAAgB,WAAYC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,YAAc,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,YACzlB,CAAE9J,KAAM,eAAgByI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,kBAAmBC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,cAAeC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,gBAGvlB,CACC9J,KAAM,eAAgBoI,QAAkCxI,EAAU,CACjE,CAAEI,KAAM,mBAAoByI,YAAa,IAAKc,SAAS,EAAMT,SAAU,CAAE3F,KAAQ,UAAW6F,QAAW,SAAUqB,MAAS,CAAC,CAAEjB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAM,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,OAChkE,CAAEpK,KAAM,YAAayI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,WAAa,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,cAC/lB,CAAE9J,KAAM,kBAAmByI,YAAa,IAAKK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,WAAa,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,cACrkB,CAAE9J,KAAM,UAAWyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAClW,CAAEpK,KAAM,cAAeyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,KAClV,CAAEpK,KAAM,YAAayI,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,IAAKnB,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACrZ,CAAEpK,KAAM,aAAcyI,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,GAAKnB,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzZ,CAAEpK,KAAM,eAAgByI,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,IAAKnB,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC1Z,CAAEpK,KAAM,aAAcyI,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACxZ,CAAEpK,KAAM,UAAWyI,YAAa,IAAKc,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC9X,CAAEpK,KAAM,aAAcyI,YAAa,IAAKc,SAAS,EAAMU,wBAAyB,IAAKnB,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,QAGhY,CACCpK,KAAM,kBAAmBoI,QAAkCxI,EAAU,CACpE,CAAEI,KAAM,oBAAqByI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,KACzV,CAAEpK,KAAM,iBAAkByI,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE3F,KAAQ,OAAQ6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAW9M,KAAQ,WAAY+M,SAAY,QAASC,QAAW,SAClU,CAAEtJ,KAAM,cAAeyI,YAAa,GAAIwB,uBAAwB,EAAGnB,SAAU,CAAE3F,KAAQ,OAAQ6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAW9M,KAAQ,WAAY+M,SAAY,QAASC,QAAW,SAC5S,CAAEtJ,KAAM,aAAcyI,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,OAAQ6F,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAW9M,KAAQ,WAAY+M,SAAY,QAASC,QAAW,SACnS,CAAEtJ,KAAM,iBAAkByI,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,OAAQD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,MACrZ,CAAEpK,KAAM,WAAYyI,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE3F,KAAQ,WAAY4F,WAAc,YAAaC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACpZ,CAAEpK,KAAM,aAAcyI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWC,SAAY,MAAOC,QAAW,QAASU,UAAa,CAAC,EAAG,EAAG,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC/W,CAAEhK,KAAM,iBAAkByI,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,WAAYE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,YAAc,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,EAAG8K,SAAY,aACzlB,CAAE9J,KAAM,aAAcyI,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,GAAKnB,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,WAAYE,MAAS,WAAYC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,WAAYgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC1Z,CAAEpK,KAAM,WAAYyI,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACrZ,CAAEpK,KAAM,UAAWyI,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAClZ,CAAEpK,KAAM,QAASyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,OAAQ4F,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,IAAKC,gBAAmB,GAAIC,eAAkB,UAAW9M,KAAQ,WAAY+M,SAAY,UAAWC,QAAW,SAC9P,CAAEtJ,KAAM,WAAYyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,KAAM6F,QAAW,SAAUD,WAAc,OAAQE,MAAS,kBAAmBC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,KAAM7K,UAAa,GAAI8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,EAAG8K,SAAY,UAAY,CAAED,UAAa,MAAO7K,UAAa,GAAI8K,SAAY,aAClkB,CAAE9J,KAAM,WAAYyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,MAAO6F,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUc,WAAc,EAAGC,cAAiB,WAAYb,QAAW,UACzQ,CAAEtJ,KAAM,YAAayI,YAAa,IAAKc,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACpY,CAAEpK,KAAM,eAAgByI,YAAa,IAAKc,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE3F,KAAQ,QAAS6F,QAAW,SAAUD,WAAc,QAASE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAU9M,KAAQ,SACrQ,CAAE0D,KAAM,WAAYyI,YAAa,GAAIK,SAAU,CAAE3F,KAAQ,YAAa6F,QAAW,SAAUD,WAAc,QAASE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACvW,CAAEhK,KAAM,aAAcyI,YAAa,IAAKK,SAAU,CAAE3F,KAAQ,WAAY6F,QAAW,SAAUD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,gtBCxR5TE,EAAwEC,EAAYC,uBACnG,IAAkB,IAAAC,EAAAC,EAAAF,GAAIG,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAAnB,IAAME,EAAGH,EAAA5K,MACb,GAAI+K,aAAeC,KAClBR,EAAQS,YAAYF,QACd,GAAmB,iBAARA,EACjBP,EAAQS,YAAYC,SAASC,eAAeJ,SACtC,GAAmB,mBAARA,EACjBR,EAAiBC,EAAS,CAACO,WACrB,GAAIK,MAAMC,QAAQN,GACxBR,EAAiBC,EAASO,QACpB,GAAIA,GAAyB,oBAAXO,QAA0D,mBAAzBP,EAAIO,OAAOC,UACpEhB,EAAiBC,EAAOgB,EAAMT,SACxB,GAAIA,GAAOA,EAAIU,cAAgBC,QAAUlB,aAAmBmB,YAElE,IAAkB,IAAAC,GAAAC,OAAA,EAAAlB,EAAAe,OAAO/K,KAAKoK,KAAIe,EAAAF,EAAAf,QAAAiB,EAAAhB,KAAAgB,EAAAF,EAAAf,OAAE,CAA/B,IAAMkB,EAAGD,EAAA9L,MACPA,EAAQ+K,EAAIgB,GAST,GAAY,UAARA,EACS,iBAAV/L,EACVwK,EAAQwB,aAAa,QAAShM,GACpBoL,MAAMC,QAAQN,IAAS/K,GAA2B,oBAAXsL,QAA4D,mBAA3BtL,EAAMsL,OAAOC,UAC/Ff,EAAQwB,aAAa,QAASR,EAAIxL,GAAOiM,KAAK,MAE9CC,QAAQC,KAAK,WAAaJ,EAAM,WAAc/L,EAAQ,QAAWwK,EAAQ4B,QAAU,kBAE9E,GAAY,UAARL,EACV,GAAI/L,GAASA,EAAMyL,cAAgBC,WAClC,IAAuB,IAAAW,GAAAC,OAAA,EAAA3B,EAAAe,OAAO/K,KAAKX,KAAMuM,EAAAF,EAAAxB,QAAA0B,EAAAzB,KAAAyB,EAAAF,EAAAxB,OAAE,CAAtC,IAAM2B,EAAQD,EAAAvM,MACdwM,KAAuChC,EAASiC,MAE5CjC,EAASiC,MAAMD,GAAYxM,EAAMwM,GAGbhC,EAASiC,MAAMC,YAAYF,EAAUxM,EAAMwM,2GAIxEhC,EAAQwB,aAAaD,EAAK/L,OAEC,mBAAlB,EAEJwK,EAASuB,GAAO/L,EACM,kBAAlB,EAENA,EAAOwK,EAAQwB,aAAaD,EAAK,IAChCvB,EAAQmC,gBAAgBZ,GAG7BvB,EAAQwB,aAAaD,EAAK/L,0GAK5BwK,EAAQS,YAAYC,SAASC,eAAeJ,sGAG9C,OAAOP,EAGD,IAAMoC,EAAgB,6VC8IhBC,iBD5Ia,IAAApC,EAAA,GAAAqC,EAAA,EAAAA,EAAAC,UAAArQ,OAAAoQ,IAAArC,EAAAqC,GAAAC,UAAAD,GACzB,OAAO5B,SAAS8B,cAAcC,yBAAyBxC,EAAKwB,SC4IhDiB,iBDxIY,IAAAzC,EAAA,GAAAqC,EAAA,EAAAA,EAAAC,UAAArQ,OAAAoQ,IAAArC,EAAAqC,GAAAC,UAAAD,GAUxB,IATA,IAAMK,EAA6BjC,SAASkC,yBAQtCC,GAAqB,IAAIC,WAAYC,gBAAgB,2CAA+C9C,EAAKwB,OAAS,SAAU,iBAAiBuB,gBACnH,OAAzBH,EAAUI,YAChBvC,SAASwC,WAAWL,EAAUI,YAAY,GAC1CN,EAASlC,YAAYoC,EAAUI,YAGhC,OAAON,cC2HGQ,GACJd,EAAMc,GAAQ,eAAC,IAAAlD,EAAA,GAAAqC,EAAA,EAAAA,EAAAC,UAAArQ,OAAAoQ,IAAArC,EAAAqC,GAAAC,UAAAD,GAAwB,OAAAvC,EAAiBW,SAAS0C,cAAcD,GAAOlD,SAD7F,IAAmB,IAAAoD,EAAAlD,EAAA,+jBAA+jBmD,MAAM,MAAIlC,EAAAiC,EAAAhD,QAAAe,EAAAd,KAAAc,EAAAiC,EAAAhD,OAAA,GAA7kBe,EAAA5L,wHAGJ+N,GAEV,GADMb,EAAKa,GAAQ,eAAC,IAAAtD,EAAA,GAAAqC,EAAA,EAAAA,EAAAC,UAAArQ,OAAAoQ,IAAArC,EAAAqC,GAAAC,UAAAD,GAAwB,OAAAvC,EAA8BW,SAAS8C,gBAAgBpB,EAAOmB,GAAOtD,IAC7G,IAAIhD,KAAKsG,GAAO,CACnB,IAAME,EAAgBF,EAAKjG,QAAQ,KAAM,KACnCoF,EAAKe,GAAiB,eAAC,IAAAxD,EAAA,GAAAqC,EAAA,EAAAA,EAAAC,UAAArQ,OAAAoQ,IAAArC,EAAAqC,GAAAC,UAAAD,GAAwB,OAAAvC,EAA8BW,SAAS8C,gBAAgBpB,EAAOmB,GAAOtD,UAJ5H,IAAmB,IAAAqB,EAAAnB,EAAA,8vBAA8vBmD,MAAM,MAAIzB,EAAAP,EAAAjB,QAAAwB,EAAAvB,KAAAuB,EAAAP,EAAAjB,OAAA,GAA5wBwB,EAAArM,+GC1MFkO,EA6uCLlG,qBACNmG,KAAKC,YAAYC,QAIXrG,+BAA+BsG,EAAYC,GACjD,GAA2F,SAAvFC,iBAAiBL,KAAKM,GAAeC,iBAAiB,uBAAuBC,OAAmB,CACnG,IAAIC,EAAsBV,EAAYW,gBAAgBP,EAAMC,GAE5D,IAAIO,EAAQ,cAKZ,MAAsB,CAAEC,iBAJUb,EAAYc,YAAaF,EAAMG,KAAKL,EAAKG,kBAAsC,IAIlDG,eAH/BhB,EAAYc,YAAaF,EAAMG,KAAKL,EAAKM,gBAAoC,IAGXC,cAFnEjB,EAAYc,YAAaF,EAAMG,KAAKL,EAAKO,eAAmC,IAEwBC,YADtGlB,EAAYc,YAAaF,EAAMG,KAAKL,EAAKQ,aAAiC,KAIvG,OAAOlB,EAAYW,gBAAgBP,EAAMC,GAIpCvG,uBAAuBsG,EAAYC,GACzC,GAA2F,SAAvFC,iBAAiBL,KAAKM,GAAeC,iBAAiB,uBAAuBC,OAEhF,OAAIJ,EAAUD,EAAKe,kBACXnB,EAAYoB,cAAcf,EAAUL,EAAYoB,cAAc5S,QAC3D6R,EAAUD,EAAKe,kBAAoBf,EAAKiB,kBAC3CrB,EAAYsB,eAAejB,EAAUD,EAAKe,mBAAqBnB,EAAYsB,cAAc9S,QAEzFwR,EAAYuB,aAAalB,EAAUD,EAAKe,kBAAoBf,EAAKiB,mBAAqBrB,EAAYuB,YAAY/S,QAKtH,GAAIwR,EAAYE,YAAYsB,IAAInB,GAC/B,OAAOL,EAAYE,YAAYuB,IAAIpB,GAInC,GAAIA,EAAUD,EAAKe,kBAAmB,CAErC,MAAMO,GAAoCpB,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1FmB,GAAyCrB,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/FoB,GAAoCtB,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1FqB,GAAyCvB,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/FsB,GAAoCxB,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1FuB,GAAyCzB,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/FwB,GAAkC1B,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFyB,GAAuC3B,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7F0B,GAAkC5B,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxF2B,GAAuC7B,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7F4B,GAAkC9B,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxF6B,GAAuC/B,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7F8B,GAAiChC,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvF+B,GAAsCjC,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5FgC,GAAiClC,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvFiC,GAAsCnC,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5FkC,GAAiCpC,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvFmC,GAAsCrC,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5FoC,GAA+BtC,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFqC,GAAoCvC,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FsC,GAA+BxC,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFuC,GAAoCzC,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FwC,GAA+B1C,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFyC,GAAoC3C,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAEhG,IAaI0C,EAAkC,CAAErC,iBAbN,SAAYa,EAA4BrB,GAAWsB,EAAgCxT,EAAOmK,qBAAwB,KAAO,IAAO,MAC7JsJ,GAA4B,GAAMC,EAAgC7S,KAAKmU,MAAM9C,EAAU,IAAQ,OAC/FyB,GAA4B,GAAMC,EAAgC/S,KAAKmU,MAAM9C,EAAU,IAAQ,KAWrBW,eAV/C,SAAYgB,EAA0B3B,GAAW4B,EAA8B9T,EAAOmK,qBAAwB,KAAO,IAAO,MACvJ4J,GAA0B,GAAMC,EAA8BnT,KAAKmU,MAAM9C,EAAU,IAAQ,OAC3F+B,GAA0B,GAAMC,EAA8BrT,KAAKmU,MAAM9C,EAAU,IAAQ,KAQkBY,cAPnF,SAAYqB,EAAyBjC,GAAWkC,EAA6BpU,EAAOmK,qBAAwB,KAAO,IAAO,MACpJkK,GAAyB,GAAMC,EAA6BzT,KAAKmU,MAAM9C,EAAU,IAAQ,OACzFqC,GAAyB,GAAMC,EAA6B3T,KAAKmU,MAAM9C,EAAU,IAAQ,KAKqDa,YAJtH,SAAY0B,EAAuBvC,GAAWwC,EAA2B1U,EAAOmK,qBAAwB,KAAO,IAAO,MAC9IwK,GAAuB,GAAMC,EAA2B/T,KAAKmU,MAAM9C,EAAU,IAAQ,OACrF2C,GAAuB,GAAMC,EAA2BjU,KAAKmU,MAAM9C,EAAU,IAAQ,MAI1F,OADAL,EAAYE,YAAYkD,IAAI/C,EAAS6C,GAC9BA,EAGH,GAAI7C,EAAUD,EAAKe,kBAAoBf,EAAKiB,kBAAmB,CAEnE,MAAMgC,GAAoC/C,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1F8C,GAAyChD,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/F+C,GAAoCjD,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1FgD,GAAyClD,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/FiD,GAAoCnD,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1FkD,GAAyCpD,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/FmD,GAAkCrD,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFoD,GAAuCtD,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7FqD,GAAkCvD,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFsD,GAAuCxD,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7FuD,GAAkCzD,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFwD,GAAuC1D,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7FyD,GAAiC3D,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvF0D,GAAsC5D,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5F2D,GAAiC7D,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvF4D,GAAsC9D,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5F6D,GAAiC/D,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvF8D,GAAsChE,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5F+D,GAA+BjE,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFgE,GAAoClE,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FiE,GAA+BnE,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFkE,GAAoCpE,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FmE,GAA+BrE,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFoE,GAAoCtE,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAEhG,IAaI0C,EAAkC,CAAErC,iBAbN,SAAYwC,GAA8BhD,EAAUD,EAAKe,oBAAsBmC,EAAiCnV,EAAOqK,qBAAwB,KAAO,IAAO,MAC1L+K,EAA2BlD,GAAWmD,GAAiC,OACvEC,EAA2BpD,GAAWqD,GAAiC,KAWG1C,eAV/C,SAAY2C,GAA4BtD,EAAUD,EAAKe,oBAAsByC,EAA+BzV,EAAOqK,qBAAwB,KAAO,IAAO,MACpLqL,EAAyBxD,GAAWyD,GAA+B,OACnEC,EAAyB1D,GAAW2D,GAA+B,KAQ0C/C,cAPnF,SAAYgD,GAA2B5D,EAAUD,EAAKe,oBAAsB+C,EAA8B/V,EAAOqK,qBAAwB,KAAO,IAAO,MACjL2L,EAAwB9D,GAAW+D,GAA8B,OACjEC,EAAwBhE,GAAWiE,GAA8B,KAK6EpD,YAJtH,SAAYqD,GAAyBlE,EAAUD,EAAKe,oBAAsBqD,EAA4BrW,EAAOqK,qBAAwB,KAAO,IAAO,MAC3KiM,EAAsBpE,GAAWqE,GAA4B,OAC7DC,EAAsBtE,GAAWuE,GAA4B,MAIlE,OADA5E,EAAYE,YAAYkD,IAAI/C,EAAS6C,GAC9BA,EAEH,CAEJ,MAAM2B,GAAkCvE,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFsE,GAAuCxE,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7FuE,GAAkCzE,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFwE,GAAuC1E,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7FyE,GAAkC3E,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxF0E,GAAuC5E,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7F2E,GAAgC7E,iBAAiBL,KAAKM,GAAeC,iBAAiB,6BACtF4E,GAAqC9E,iBAAiBL,KAAKM,GAAeC,iBAAiB,mCAC3F6E,GAAgC/E,iBAAiBL,KAAKM,GAAeC,iBAAiB,6BACtF8E,GAAqChF,iBAAiBL,KAAKM,GAAeC,iBAAiB,mCAC3F+E,GAAgCjF,iBAAiBL,KAAKM,GAAeC,iBAAiB,6BACtFgF,GAAqClF,iBAAiBL,KAAKM,GAAeC,iBAAiB,mCAC3FiF,GAA+BnF,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFkF,GAAoCpF,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FmF,GAA+BrF,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFoF,GAAoCtF,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FqF,GAA+BvF,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFsF,GAAoCxF,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FuF,GAA6BzF,iBAAiBL,KAAKM,GAAeC,iBAAiB,0BACnFwF,GAAkC1F,iBAAiBL,KAAKM,GAAeC,iBAAiB,gCACxFyF,GAA6B3F,iBAAiBL,KAAKM,GAAeC,iBAAiB,0BACnF0F,GAAkC5F,iBAAiBL,KAAKM,GAAeC,iBAAiB,gCACxF2F,GAA6B7F,iBAAiBL,KAAKM,GAAeC,iBAAiB,0BACnF4F,GAAkC9F,iBAAiBL,KAAKM,GAAeC,iBAAiB,gCAE9F,IAaI0C,EAAkC,CAAErC,iBAbN,SAAYgE,GAA4BxE,EAAUD,EAAKe,kBAAoBf,EAAKiB,oBAAsByD,EAA+B3W,EAAOuK,mBAAsB,KAAO,IAAO,MAC7MqM,EAAyB1E,GAAW2E,GAA+B,OACnEC,EAAyB5E,GAAW6E,GAA+B,KAWOlE,eAV/C,SAAYmE,GAA0B9E,EAAUD,EAAKe,kBAAoBf,EAAKiB,oBAAsB+D,EAA6BjX,EAAOuK,mBAAsB,KAAO,IAAO,MACvM2M,EAAuBhF,GAAWiF,GAA6B,OAC/DC,EAAuBlF,GAAWmF,GAA6B,KAQ8CvE,cAPnF,SAAYwE,GAAyBpF,EAAUD,EAAKe,kBAAoBf,EAAKiB,oBAAsBqE,EAA4BvX,EAAOuK,mBAAsB,KAAO,IAAO,MACpMiN,EAAsBtF,GAAWuF,GAA4B,OAC7DC,EAAsBxF,GAAWyF,GAA4B,KAKiF5E,YAJtH,SAAY6E,GAAuB1F,EAAUD,EAAKe,kBAAoBf,EAAKiB,oBAAsB2E,EAA0B7X,EAAOuK,mBAAsB,KAAO,IAAO,MAC9LuN,EAAoB5F,GAAW6F,GAA0B,OACzDC,EAAoB9F,GAAW+F,GAA0B,MAI9D,OADApG,EAAYE,YAAYkD,IAAI/C,EAAS6C,GAC9BA,GAQJpJ,gBAAgB/H,GACtBkO,KAAKM,EAAc8F,YAAcpG,KAAKqG,OAAOvU,GAC7C,MAAMwU,EAA8BvJ,SAASwJ,cAAc,4BACzC,MAAdD,GACHA,EAAWzI,aAAa,UAAWwC,iBAAiBtD,SAASsC,iBAAiBkB,iBAAiB,2BAGhGP,KAAKwG,cAGC3M,mBAAmB/H,GACzB,OAAOuO,iBAAiBL,KAAKM,GAAeC,iBAAiBzO,IAz6ChDiO,EAAAE,YAA0C,IAAIwG,IAErC1G,EAAAsG,OAAqC,CAC3DK,eAAgB,mzJAiHhBC,mBAAoB,o0JAiHpBC,gBAAiB,ooKAyHjBC,kBAAmB,iuJAgHnBC,OAAU,2uJAgHVC,OAAU,mwJAgHVC,SAAY,2yIAgHZC,mBAAoB,ouJAgHpBC,gBAAiB,sjKA2HKnH,EAAAoH,WAAqB,qBACrBpH,EAAAqH,iBAA2B,2BAC3BrH,EAAAsH,aAAuB,uBACvBtH,EAAAuH,SAAmB,kBACnBvH,EAAAwH,YAAsB,sBACtBxH,EAAAyH,cAAwB,wBACxBzH,EAAA0H,aAAuB,uBACvB1H,EAAA2H,cAAwB,wBACxB3H,EAAA4H,iBAA2B,4BAC3B5H,EAAA6H,WAAqB,qBACrB7H,EAAA8H,WAAqB,qBACrB9H,EAAA+H,mBAA6B,8BAC7B/H,EAAAgI,cAAwB,yBACxBhI,EAAAiI,gBAA0B,0BAC1BjI,EAAAkI,MAAgB,eAChBlI,EAAAmI,UAAoB,oBACpBnI,EAAAoI,cAAwB,yBACxBpI,EAAAqI,cAAwB,yBACxBrI,EAAAsI,gBAA0B,2BAC1BtI,EAAA0B,yBAAmC,qCACnC1B,EAAA2B,8BAAwC,2CACxC3B,EAAA4B,yBAAmC,qCACnC5B,EAAA6B,8BAAwC,2CACxC7B,EAAA8B,yBAAmC,qCACnC9B,EAAA+B,8BAAwC,2CACxC/B,EAAAgC,uBAAiC,mCACjChC,EAAAiC,4BAAsC,yCACtCjC,EAAAkC,uBAAiC,mCACjClC,EAAAmC,4BAAsC,yCACtCnC,EAAAoC,uBAAiC,mCACjCpC,EAAAqC,4BAAsC,yCACtCrC,EAAAsC,sBAAgC,kCAChCtC,EAAAuC,2BAAqC,wCACrCvC,EAAAwC,sBAAgC,kCAChCxC,EAAAyC,2BAAqC,wCACrCzC,EAAA0C,sBAAgC,kCAChC1C,EAAA2C,2BAAqC,wCACrC3C,EAAA4C,oBAA8B,gCAC9B5C,EAAA6C,yBAAmC,sCACnC7C,EAAA8C,oBAA8B,gCAC9B9C,EAAA+C,yBAAmC,sCACnC/C,EAAAgD,oBAA8B,gCAC9BhD,EAAAiD,yBAAmC,sCACnCjD,EAAA6E,uBAAiC,mCACjC7E,EAAA8E,4BAAsC,yCACtC9E,EAAA+E,uBAAiC,mCACjC/E,EAAAgF,4BAAsC,yCACtChF,EAAAiF,uBAAiC,mCACjCjF,EAAAkF,4BAAsC,yCACtClF,EAAAmF,qBAA+B,iCAC/BnF,EAAAoF,0BAAoC,uCACpCpF,EAAAqF,qBAA+B,iCAC/BrF,EAAAsF,0BAAoC,uCACpCtF,EAAAuF,qBAA+B,iCAC/BvF,EAAAwF,0BAAoC,uCACpCxF,EAAAyF,oBAA8B,gCAC9BzF,EAAA0F,yBAAmC,sCACnC1F,EAAA2F,oBAA8B,gCAC9B3F,EAAA4F,yBAAmC,sCACnC5F,EAAA6F,oBAA8B,gCAC9B7F,EAAA8F,yBAAmC,sCACnC9F,EAAA+F,kBAA4B,8BAC5B/F,EAAAgG,uBAAiC,oCACjChG,EAAAiG,kBAA4B,8BAC5BjG,EAAAkG,uBAAiC,oCACjClG,EAAAmG,kBAA4B,8BAC5BnG,EAAAoG,uBAAiC,oCACjCpG,EAAAqD,yBAAmC,qCACnCrD,EAAAsD,8BAAwC,2CACxCtD,EAAAuD,yBAAmC,qCACnCvD,EAAAwD,8BAAwC,2CACxCxD,EAAAyD,yBAAmC,qCACnCzD,EAAA0D,8BAAwC,2CACxC1D,EAAA2D,uBAAiC,mCACjC3D,EAAA4D,4BAAsC,yCACtC5D,EAAA6D,uBAAiC,mCACjC7D,EAAA8D,4BAAsC,yCACtC9D,EAAA+D,uBAAiC,mCACjC/D,EAAAgE,4BAAsC,yCACtChE,EAAAiE,sBAAgC,kCAChCjE,EAAAkE,2BAAqC,wCACrClE,EAAAmE,sBAAgC,kCAChCnE,EAAAoE,2BAAqC,wCACrCpE,EAAAqE,sBAAgC,kCAChCrE,EAAAsE,2BAAqC,wCACrCtE,EAAAuE,oBAA8B,gCAC9BvE,EAAAwE,yBAAmC,sCACnCxE,EAAAyE,oBAA8B,gCAC9BzE,EAAA0E,yBAAmC,sCACnC1E,EAAA2E,oBAA8B,gCAC9B3E,EAAA4E,yBAAmC,sCACnC5E,EAAAuI,mBAA6B,+BAC7BvI,EAAAwI,sBAAgC,mCAChCxI,EAAAyI,mBAA6B,+BAC7BzI,EAAA0I,sBAAgC,mCAChC1I,EAAA2I,iBAA2B,6BAC3B3I,EAAA4I,oBAA8B,iCAC9B5I,EAAA6I,wBAAkC,mCAClC7I,EAAA8I,qBAA+B,gCAC/B9I,EAAA+I,iBAA2B,2BAC3B/I,EAAAgJ,mBAA6B,6BAC7BhJ,EAAAiJ,gBAA0B,2BAC1BjJ,EAAAkJ,gBAA0B,2BAC1BlJ,EAAAmJ,iBAA2B,4BAC3BnJ,EAAAoJ,cAAwB,yBACxBpJ,EAAAqJ,gBAA0B,2BAC1BrJ,EAAAsJ,sBAAgC,kCAChCtJ,EAAAuJ,oBAA8B,gCAE9BvJ,EAAAoB,cAAgDzP,EAAU,CAChF,CACCI,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,UACN8O,iBAAkB,mCAClBG,eAAgB,iCAChBC,cAAe,gCACfC,YAAa,iCAGQlB,EAAAsB,cAAgD3P,EAAU,CAChF,CACCI,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFnP,KAAM,SACN8O,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,gCAGQlB,EAAAuB,YAA8C5P,EAAU,CAC9E,CACCI,KAAM,OACN8O,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACX,CACFnP,KAAM,OACN8O,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACX,CACFnP,KAAM,OACN8O,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACX,CACFnP,KAAM,OACN8O,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,8BAoLSlB,EAAAO,EAAkCvD,SAASwM,KAAKzM,YAAY4B,EAAKJ,MAAM,CAAErJ,KAAM,cCn6CxG,MAAMuU,EAAgCzM,SAAS0M,KAAK3M,YAAY4B,EAAKgL,IAAI,CAAEpL,MAAO,4CACjFI,EAAKgL,IAAI,CAAEpL,MAAO,sCCIHjP,EAAsBsC,EAAoBgY,GACzD,IAAK,IAAIrb,EAAY,EAAGA,EAAIqD,EAAMpD,OAAQD,IACzCqD,EAAMrD,IAAMqb,EAQd,SAASC,EAAUC,GAClB,IALD,SAAoBA,GACnB,SAASA,GAAOA,EAAKA,EAAI,GAIpBC,CAAWD,GAAI,MAAM,IAAI9Z,MAAM,0CACpC,OAAOhB,KAAKgb,MAAMhb,KAAK6B,IAAIiZ,GAAK9a,KAAK6B,IAAI,aAwO1BxB,EAA4BuC,EAAoBqY,GAC/D,MAAMC,EAAsBL,EAAUI,GACtC,GAAIA,EAAkB,EAAG,MAAM,IAAIja,MAAM,wCAGzC,IAAK,IAAIma,EAAeD,EAAc,EAAGC,GAAQ,EAAGA,IAAQ,CAC3D,MAAMC,EAAoB,GAAKD,EACzBE,EAAuBD,GAAa,EACpCE,EAAiBF,GAAa,EAC9BG,EAAqC,EAAVvb,KAAKkC,GAAWoZ,EAC3CE,EAAuBxb,KAAKmC,IAAIoZ,GAChCE,EAAuBzb,KAAKoC,IAAImZ,GAChCG,EAA+B,EAAMF,EAE3C,IAAK,IAAIG,EAAqB,EAAGA,EAAaV,EAAiBU,GAAcL,EAAQ,CACpF,MAAMM,EAAsBD,EACtBE,EAAoBD,EAAcP,EAClCS,EAAsBF,EAAcR,EACpCW,EAAoBD,EAAcT,EAClCW,EAAoBF,EAAcV,EAClCa,EAAqBrZ,EAAMgZ,GAC3BM,EAAqBtZ,EAAMkZ,GACjClZ,EAAMgZ,GAAeK,EAAaC,EAClCtZ,EAAMiZ,IAAc,EACpBjZ,EAAMkZ,GAAeG,EAAaC,EAClCtZ,EAAMmZ,IAAc,EACpB,IAAII,EAAYX,EACZY,GAAaX,EACbY,EAAgB,EAChBC,EAAgB,EACpB,IAAK,IAAIlc,EAAgB,EAAGA,EAAQib,EAAcjb,IAAS,CAC1D,MAAMmc,EAAkBX,EAAcxb,EAChCoc,EAAkBV,EAAc1b,EAChCqc,EAAkBX,EAAc1b,EAChCsc,EAAkBV,EAAY5b,EAC9Buc,EAAgB/Z,EAAM2Z,GACtBK,EAAgBha,EAAM4Z,GACtBK,EAAgBja,EAAM6Z,GACtBK,EAAgBla,EAAM8Z,GACtBK,EAAgBJ,EAAQC,EACxBI,EAAgBH,EAAQC,EAC9Bla,EAAM2Z,GAAWI,EAAQC,EACzBha,EAAM4Z,GAAWM,EAAQD,EACzBja,EAAM6Z,GAAWM,EAAQZ,EAAIa,EAAQZ,EACrCxZ,EAAM8Z,GAAWM,EAAQb,EAAIY,EAAQX,EACrC,MAAMa,EAAgBvB,EAAuBS,EAAIE,EAC3Ca,EAAgBxB,EAAuBU,EAAIE,EACjDD,EAAQF,EACRG,EAAQF,EACRD,EAAIc,EACJb,EAAIc,IAsCP,IAAK,IAAI9c,EAAgB,EAAGA,EAAQ6a,EAAiB7a,GAAS,EAAG,CAChE,MAAM+c,EAAiB/c,EAAQ,EACzBgd,EAAiBhd,EAAQ,EACzBid,EAAiBjd,EAAQ,EACzBuc,EAAgB/Z,EAAMxC,GACtBwc,EAAgC,EAAhBha,EAAMua,GACtBG,EAAgB1a,EAAMwa,GACtBG,EAAgC,EAAhB3a,EAAMya,GACtBN,EAAgBJ,EAAQW,EACxBN,EAAgBL,EAAQW,EAC9B1a,EAAMxC,GAAS2c,EAAQH,EACvBha,EAAMua,GAAUJ,EAAQH,EACxBha,EAAMwa,GAAUJ,EAAQO,EACxB3a,EAAMya,GAAUL,EAAQO,GAvU1B,SAA0B3a,EAAoBqY,GAC7C,MAAMuC,EAAmB3C,EAAUI,GACnC,GAAIuC,EAAW,GAAI,MAAM,IAAIxc,MAAM,mDACnC,MAAMyc,EAAqB,GAAKD,EAChC,IAAK,IAAIje,EAAY,EAAGA,EAAI0b,EAAiB1b,IAAK,CAEjD,IAAIme,EAKJ,GAJAA,GAAU,MAAJne,IAAe,GAAW,MAAJA,IAAe,EAC3Cme,GAAU,MAAJA,IAAe,GAAW,MAAJA,IAAe,EAC3CA,GAAU,MAAJA,IAAe,GAAW,KAAJA,IAAe,EAC3CA,GAAMA,GAAK,GAAW,IAAJA,IAAa,IAAOD,EAClCC,EAAIne,EAAG,CACV,IAAIoe,EAAe/a,EAAMrD,GACzBqD,EAAMrD,GAAKqD,EAAM8a,GACjB9a,EAAM8a,GAAKC,IA4TbC,CAAiBhb,EAAOqY,GD9VfR,EAAelK,WAAWsN,YAAc,IACjD7P,SAASsC,gBAAgBwN,UAAUC,IAAI,wBAExC/P,SAAS0M,KAAKsD,YAAYvD,GAG1BzM,SAASwM,KAAKzM,YAAY4B,EAAKJ,MAAM,CAAErJ,KAAM,YAAc,6lSA6GvC8K,EAAY+H,sBAAsB/H,EAAYqH,sPAMnDrH,EAAYqH,iJAGNrH,EAAY+H,4CACZ/H,EAAYqH,gpBAqBvBrH,EAAYwH,+BACPxH,EAAYqH,2pGAwHjBrH,EAAY8H,yFAIZ9H,EAAYwH,wHAOPxH,EAAYyH,m6CAgEZzH,EAAYqH,8jHAyJZrH,EAAYqH,8IAQZrH,EAAYqH,kEAENrH,EAAY+H,iCACvB/H,EAAYwH,4gDAqEPxH,EAAY+H,8uCAuDZ/H,EAAY+H,8TAcZ/H,EAAYgI,kFAIThI,EAAY+H,yWAcN/H,EAAYgI,2RAWlBhI,EAAYiJ,gdAkBfjJ,EAAYgI,seAsBZhI,EAAY+H,wLAQZ/H,EAAYgI,2kIA6LjBhI,EAAYyH,+mCA0DDzH,EAAYkJ,8BACvBlJ,EAAYwH,sIAIDxH,EAAY2H,4BACvB3H,EAAYwH,6RAeDxH,EAAYqH,8QAWlBrH,EAAY+H,iWAiBX/H,EAAY8I,ouBA4Bb9I,EAAYgI,gJAMZhI,EAAY+H,qGAGZ/H,EAAYgI,+TAcZhI,EAAY+H,4HAIZ/H,EAAYgI,gtBAkCJhI,EAAY+H,88EAiGlB/H,EAAYqH,wTAWCrH,EAAYqH,qJEtsC7B4F,EAAbnT,cACSmG,KAAAiN,EAAoB,EACpBjN,KAAAkN,EAAgC,MAACC,GACjCnN,KAAAoN,EAAgB,EAChBpN,KAAAqN,EAAkB,EAClBrN,KAAAsN,EAAiB,EAElBzT,UAAUwC,GACZ2D,KAAKsN,GAAUtN,KAAKiN,GAAWjN,KAAKuN,IACxCvN,KAAKqN,EAAWrN,KAAKqN,EAAU,EAAKrN,KAAKoN,EACzCpN,KAAKkN,EAAQlN,KAAKqN,GAAWhR,EAC7B2D,KAAKsN,IAECzT,SAASwC,GACX2D,KAAKsN,GAAUtN,KAAKiN,GAAWjN,KAAKuN,IACxCvN,KAAKkN,EAASlN,KAAKqN,EAAUrN,KAAKsN,EAAUtN,KAAKoN,GAAS/Q,EAC1D2D,KAAKsN,IAECzT,WACN,GAAImG,KAAKsN,GAAU,EAAG,MAAM,IAAIvd,MAAM,4BACtC,MAAMsM,EAAgB2D,KAAKkN,EAAQlN,KAAKqN,GAIxC,OAHArN,KAAKkN,EAAQlN,KAAKqN,QAAWF,EAC7BnN,KAAKqN,EAAWrN,KAAKqN,EAAU,EAAKrN,KAAKoN,EACzCpN,KAAKsN,IACEjR,EAEDxC,UACN,GAAImG,KAAKsN,GAAU,EAAG,MAAM,IAAIvd,MAAM,4BACtCiQ,KAAKsN,IACL,MAAMne,EAAiB6Q,KAAKqN,EAAUrN,KAAKsN,EAAUtN,KAAKoN,EACpD/Q,EAAgB2D,KAAKkN,EAAQ/d,GAEnC,OADA6Q,KAAKkN,EAAQ/d,QAASge,EACf9Q,EAEDxC,YACN,GAAImG,KAAKsN,GAAU,EAAG,MAAM,IAAIvd,MAAM,4BACtC,OAAUiQ,KAAKkN,EAAQlN,KAAKqN,GAEtBxT,WACN,GAAImG,KAAKsN,GAAU,EAAG,MAAM,IAAIvd,MAAM,4BACtC,OAAUiQ,KAAKkN,EAASlN,KAAKqN,EAAUrN,KAAKsN,EAAS,EAAKtN,KAAKoN,GAEzDvT,QACN,OAAOmG,KAAKsN,EAENzT,IAAI1K,EAAekN,GACzB,GAAIlN,EAAQ,GAAKA,GAAS6Q,KAAKsN,EAAQ,MAAM,IAAIvd,MAAM,iBACvDiQ,KAAKkN,EAASlN,KAAKqN,EAAUle,EAAS6Q,KAAKoN,GAAS/Q,EAE9CxC,IAAI1K,GACV,GAAIA,EAAQ,GAAKA,GAAS6Q,KAAKsN,EAAQ,MAAM,IAAIvd,MAAM,iBACvD,OAAUiQ,KAAKkN,EAASlN,KAAKqN,EAAUle,EAAS6Q,KAAKoN,GAE/CvT,OAAO1K,GACb,GAAIA,EAAQ,GAAKA,GAAS6Q,KAAKsN,EAAQ,MAAM,IAAIvd,MAAM,iBACvD,GAAIZ,GAAU6Q,KAAKsN,GAAU,EAAI,CAChC,KAAOne,EAAQ,GACd6Q,KAAKmD,IAAIhU,EAAO6Q,KAAKwB,IAAIrS,EAAQ,IACjCA,IAED6Q,KAAKwN,eACC,CAEN,IADAre,IACOA,EAAQ6Q,KAAKsN,GACnBtN,KAAKmD,IAAIhU,EAAQ,EAAG6Q,KAAKwB,IAAIrS,IAC7BA,IAED6Q,KAAKyN,WAGC5T,IACP,GAAImG,KAAKiN,GAAa,WAAY,MAAM,IAAIld,MAAM,qBAClDiQ,KAAKiN,EAAYjN,KAAKiN,GAAa,EACnC,MAAMS,EAAkC1N,KAAKkN,EACvCvd,EAAkC,IAAIsN,MAAM+C,KAAKiN,GACjDU,EAA6B,EAAd3N,KAAKsN,EACpB7X,EAAgC,EAAfuK,KAAKqN,EAC5B,IAAK,IAAI/e,EAAI,EAAGA,EAAIqf,EAAMrf,IACzBqB,EAAUrB,GAAKof,EAAWjY,EAASnH,EAAK0R,KAAKoN,GAE9C,IAAK,IAAI9e,EAAIqf,EAAMrf,EAAI0R,KAAKiN,EAAW3e,IACtCqB,EAAUrB,QAAK6e,EAEhBnN,KAAKqN,EAAU,EACfrN,KAAKkN,EAAUvd,EACfqQ,KAAKoN,EAAQpN,KAAKiN,EAAY,GC2DhC,MAAMW,EAA6C,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjUC,EAA6C,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAExe,MAAMC,EAILjU,YAAYkU,EAAgBrD,EAAoBK,GAHxC/K,KAAAgO,EAAkB,GAClBhO,KAAAiO,EAAqB,EAG5B,IAAK,IAAI3f,EAAYoc,EAAYpc,EAAIyc,EAAWzc,IAAK,CACpD,MAAMuD,EAAgBgc,EAAoBE,EAAOG,WAAW5f,IAC5D0R,KAAKgO,EAAMrf,KAAMkD,GAAS,EAAK,GAC/BmO,KAAKgO,EAAMrf,KAAMkD,GAAS,EAAK,GAC/BmO,KAAKgO,EAAMrf,KAAMkD,GAAS,EAAK,GAC/BmO,KAAKgO,EAAMrf,KAAMkD,GAAS,EAAK,GAC/BmO,KAAKgO,EAAMrf,KAAMkD,GAAS,EAAK,GAC/BmO,KAAKgO,EAAMrf,KAAa,EAARkD,IAIXgI,KAAK0S,GACX,IAAIxa,EAAiB,EACrB,KAAOwa,EAAW,GACjBxa,IAAmB,EACnBA,GAAUiO,KAAKgO,EAAMhO,KAAKiO,KAC1B1B,IAED,OAAOxa,EAGD8H,aAAasU,EAAkBC,GACrC,IAAIrc,EAAiBoc,EACjBE,EAAkBD,EACtB,KAAOpO,KAAKgO,EAAMhO,KAAKiO,MACtBlc,GAAU,GAAKsc,EACfA,IAED,KAAOA,EAAU,GAChBA,IACIrO,KAAKgO,EAAMhO,KAAKiO,OACnBlc,GAAU,GAAKsc,GAGjB,OAAOtc,EAGD8H,mBACN,OAAOmG,KAAKsO,aAAa,EAAG,GAGtBzU,yBACN,OAAOmG,KAAKsO,aAAa,EAAG,GAGtBzU,eACN,OAAOmG,KAAKsO,aAAa,EAAG,GAGtBzU,oBACN,OAAImG,KAAKuO,KAAK,IACLvO,KAAKsO,aAAa,EAAG,GAEtBtO,KAAKsO,aAAa,EAAG,IAK/B,MAAME,EAAN3U,cACSmG,KAAAyO,EAAiB,EACjBzO,KAAAgO,EAAkB,GAEnBnU,QACNmG,KAAKyO,EAAS,EAGR5U,MAAM0S,EAAkB1a,GAE9B,IADA0a,IACOA,GAAY,GAClBvM,KAAKgO,EAAMhO,KAAKyO,KAAa5c,IAAU0a,EAAY,EACnDA,IAIK1S,cAAcsU,EAAkBC,EAAiBvc,GACvD,GAAIA,EAAQsc,EAAU,MAAM,IAAIpe,MAAM,uBACtC8B,GAASsc,EACT,IAAIE,EAAkBD,EACtB,KAAOvc,GAAU,GAAKwc,GACrBrO,KAAKgO,EAAMhO,KAAKyO,KAAY,EAC5B5c,GAAS,GAAKwc,EACdA,IAGD,IADArO,KAAKgO,EAAMhO,KAAKyO,KAAY,EACrBJ,EAAU,GAChBA,IACArO,KAAKgO,EAAMhO,KAAKyO,KAAa5c,IAAUwc,EAAW,EAI7CxU,kBAAkBhI,GACxBmO,KAAK0O,cAAc,EAAG,EAAG7c,GAGnBgI,cAAchI,GACpBmO,KAAK0O,cAAc,EAAG,EAAG7c,GAGnBgI,mBAAmBhI,GACrBA,EAAQ,GACXmO,KAAK2O,MAAM,EAAG,GACd3O,KAAK0O,cAAc,EAAG,GAAI7c,KAE1BmO,KAAK2O,MAAM,EAAG,GACd3O,KAAK0O,cAAc,EAAG,EAAG7c,IAIpBgI,OAAO+U,GACb,IAAK,IAAItgB,EAAY,EAAGA,EAAIsgB,EAAMH,EAAQngB,IACzC0R,KAAKgO,EAAMhO,KAAKyO,KAAYG,EAAMZ,EAAM1f,GAInCuL,aAAagV,GAEnB,IAAK,IAAIvgB,EAAY,EAAGA,EAAI0R,KAAKyO,EAAQngB,GAAK,EAAG,CAChD,MAAMuD,EAAiBmO,KAAKgO,EAAM1f,IAAM,EAAM0R,KAAKgO,EAAM1f,EAAI,IAAM,EAAM0R,KAAKgO,EAAM1f,EAAI,IAAM,EAAM0R,KAAKgO,EAAM1f,EAAI,IAAM,EAAM0R,KAAKgO,EAAM1f,EAAI,IAAM,EAAK0R,KAAKgO,EAAM1f,EAAI,GACxKugB,EAAOlgB,KAAKif,EAAoB/b,IAEjC,OAAOgd,EAGDhV,eACN,OAAO9K,KAAK+f,KAAK9O,KAAKyO,EAAS,aAUjBM,EAAY5T,EAAkB6T,EAAchb,GAC3D,MAAO,CAAEmH,SAAUA,EAAU6T,KAAMA,EAAMhb,OAAQA,GAGlD,SAASib,EAAMze,EAAa0e,EAAaC,GAExC,OAAIA,IADJD,GAAY,GAEPC,GAAO3e,EAAY2e,EACX3e,EAEL0e,EAIT,SAASE,EAAc5e,EAAa0e,EAAaC,GAChD,GAAI3e,GAAO2e,GAAOA,GAAOD,EAAK,OAAOC,EACrC,MAAM,IAAIpf,MAAM,SAASof,mBAAqB3e,MAAQ0e,YAG1CG,EAMZxV,YAAmByV,EAAeC,EAAeC,EAAaxb,EAAgByb,GAAmB,GAChGzP,KAAK0P,QAAU,CAACJ,GAChBtP,KAAK2P,KAAO,CAACZ,EAAY,EAAG,EAAG/a,GAAS+a,EAAY,EAAGS,EAAMD,EAAOE,EAAU,EAAIzb,IAClFgM,KAAKuP,MAAQA,EACbvP,KAAKwP,IAAMA,EAGL3V,mBACN,IAAI+V,EAAsC,EACtCC,EAAuB,EAC3B,IAAK,IAAIC,EAAmB,EAAGA,EAAW9P,KAAK2P,KAAKphB,OAAQuhB,IAAY,CACvE,MAAMC,EAAgB/P,KAAK2P,KAAKG,EAAW,GACrCE,EAAgBhQ,KAAK2P,KAAKG,GAChC,GAAIC,EAAK5U,UAAY6U,EAAK7U,SAAU,CACnC,MAAM8U,EAAmBD,EAAKhB,KAAOe,EAAKf,KACtCY,EAA8BK,IACjCL,EAA8BK,EAC9BJ,EAAeE,EAAK5U,WAIvB,GAAmC,GAA/ByU,EAAkC,CACrC,IAAIM,EAAwB,EAC5B,IAAK,IAAIJ,EAAmB,EAAGA,EAAW9P,KAAK2P,KAAKphB,OAAQuhB,IAAY,CACvE,MAAMK,EAAenQ,KAAK2P,KAAKG,GAC3BI,EAAgBC,EAAInc,SACvBkc,EAAgBC,EAAInc,OACpB6b,EAAeM,EAAIhV,WAItB,OAAO0U,EAGDhW,QACN,MAAMuW,EAAgB,IAAIf,GAAM,EAAGrP,KAAKuP,MAAOvP,KAAKwP,IAAK,GACzDY,EAAQV,QAAU1P,KAAK0P,QAAQW,SAC/BD,EAAQT,KAAO,GACf,IAAK,MAAMQ,KAAOnQ,KAAK2P,KACtBS,EAAQT,KAAKhhB,KAAKogB,EAAYoB,EAAIhV,SAAUgV,EAAInB,KAAMmB,EAAInc,SAE3D,OAAOoc,SAIIE,EAAbzW,cACQmG,KAAAuQ,MAAgB,GAChBvQ,KAAAwQ,WAAqB,EAErB3W,aACN,MAAM9H,EAAiB,GACvB,IAAK,MAAM0e,KAAQzQ,KAAKuQ,MACvBxe,EAAOpD,KAAK8hB,EAAKC,SAElB,OAAO3e,EAGD8H,QACNmG,KAAKuQ,MAAMhiB,OAAS,EACpByR,KAAKwQ,WAAa,SAIPG,EAKZ9W,YAAY1K,GAJL6Q,KAAArE,UAAoB,EACpBqE,KAAAlP,UAAoB,EACpBkP,KAAApE,SAAmB,EAGzBoE,KAAK4Q,MAAMzhB,GAGL0K,MAAM1K,GACZ6Q,KAAKrE,UAAY,EACjBqE,KAAKlP,UAAa3B,GAAS,EAAKjB,EAAO+I,qBAAuB,EAC9D+I,KAAKpE,SAAqB,GAATzM,EAAc,EAAI,EAG7B0K,KAAK+U,GACX5O,KAAKrE,UAAYiT,EAAMjT,UACvBqE,KAAKlP,UAAY8d,EAAM9d,UACvBkP,KAAKpE,SAAWgT,EAAMhT,gBAIXiV,EAKZhX,YAAYiX,GAJL9Q,KAAA9D,SAAqB,GACpB8D,KAAA+Q,EAA6B,KAC7B/Q,KAAAgR,GAAwB,EAG/BhR,KAAK4Q,MAAME,GAGLjX,MAAMiX,GACZ,IAAK,IAAIxiB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzD,GAAIwiB,EACH9Q,KAAK9D,SAAS5N,GAAKS,KAAKgb,MAAM7b,EAAO6C,aAAe,EAAIhC,KAAKe,KAAK,EAAIxB,EAAI,SACpE,CACN,MAAM2iB,EAA2B,GAAL3iB,GAAe,GAALA,GAAe,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAWA,GAAK,GACvH0R,KAAK9D,SAAS5N,GAAK2iB,EAAaliB,KAAKmgB,IAAI,EAAGngB,KAAKgb,MAAM7b,EAAO6C,aAAe,EAAIzC,EAAI,MAAQ,EAG/F0R,KAAKgR,GAAe,EAGdnX,sBACNmG,KAAKgR,GAAe,EAGdnX,cAAcqX,GACpB,IAAKlR,KAAKgR,GAA8B,MAAdhR,KAAK+Q,EAAe,CAC7C,IAAII,EAAqBjjB,EAAOuB,gBAEd,MAAduQ,KAAK+Q,GAAiB/Q,KAAK+Q,EAAMxiB,QAAU4iB,EAAa,IAC3DnR,KAAK+Q,EAAQ,IAAIvhB,aAAa2hB,EAAa,IAE5C,MAAM/iB,EAAqB4R,KAAK+Q,EAEhC,IAAK,IAAIziB,EAAY,EAAGA,EAAI6iB,EAAY7iB,IACvCF,EAAKE,GAAK,EAGX,MAAM8iB,EAAwB,GACxBC,EAAuB,IAEvBC,EAAuB,CAAC,EAAG,EAAI,EAAGviB,KAAK6B,IAAI,EAAI,GAAK7B,KAAK8B,IAAK,EAAI,EAAG9B,KAAK6B,IAAI,KAAS7B,KAAK8B,IAAK,EAAI,EAAG,EAAI,GAClH,SAAS0gB,EAAqBC,GAC7B,OAAON,EAAeniB,KAAKmU,MAAMsO,EAAQtjB,EAAO0J,gCAAkC0Z,GAAYE,EAAQtjB,EAAO0J,gCAAkC1J,EAAO0J,gCAGvJ,IAAIlH,EAA4B,EAChC,IAAK,IAAIpC,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAwB,EAAGrJ,IAAK,CAClE,MAAMmjB,EAAkBnjB,GAAK,EAAK,EAAI0R,KAAK9D,SAAS5N,EAAI,GAClDojB,EAAkBpjB,GAAKJ,EAAOyJ,sBAAyBqI,KAAK9D,SAAShO,EAAOyJ,sBAAwB,GAAKqI,KAAK9D,SAAS5N,GACvHqjB,EAAkBJ,EAAqBjjB,EAAI,GACjD,IAAIsjB,EAAkBL,EAAqBjjB,GACvCA,GAAKJ,EAAOyJ,wBAAuBia,EAAUR,GAAiBQ,EAAUR,GAAiBC,GAC/E,GAAVI,GAAyB,GAAVC,IAEnBhhB,GAAqB,IAAOb,EAAkBzB,EAAMujB,EAASC,EAASH,EAASvjB,EAAO6C,YAAa2gB,EAASxjB,EAAO6C,aAAc,KAE9HiP,KAAK9D,SAAShO,EAAOyJ,sBAAwB,GAAK,IACrDjH,GAAqB,IAAOb,EAAkBzB,EAAMgjB,GAAiBG,EAAqBrjB,EAAOyJ,uBAAyByZ,GAAiBC,EAAcD,EAAepR,KAAK9D,SAAShO,EAAOyJ,sBAAwB,GAAKzJ,EAAO6C,YAAa,GAAI,KAGnP3B,EAA4BhB,EAAM+iB,GAClC9hB,EAAsBjB,EAAM,GAAOW,KAAKe,KAAKqhB,GAAcpiB,KAAKuB,IAAII,EAAmB,OAGvFtC,EAAK+iB,GAAc/iB,EAAK,GAExB4R,KAAKgR,GAAe,EAErB,OAAOhR,KAAK+Q,SAIDc,EAKZhY,cAJOmG,KAAAlE,UAAsB,GACrBkE,KAAA+Q,EAA6B,KAC7B/Q,KAAAgR,GAAwB,EAG/BhR,KAAK4Q,QAGC/W,QACN,IAAK,IAAIvL,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1D0R,KAAKlE,UAAUxN,GAAK,EAErB0R,KAAKlE,UAAU,GAAK5N,EAAO+J,aAC3B+H,KAAKlE,UAAU,GAAK5N,EAAO+J,aAC3B+H,KAAKlE,UAAU,GAAK5N,EAAO+J,aAC3B+H,KAAKgR,GAAe,EAGdnX,sBACNmG,KAAKgR,GAAe,EAGdnX,gBACN,IAAKmG,KAAKgR,GAA8B,MAAdhR,KAAK+Q,EAAe,CAC7C,IAAII,EAAqBjjB,EAAOgK,oBAChC,MAAMzH,EAA0BvB,EAAY,GAE1B,MAAd8Q,KAAK+Q,GAAiB/Q,KAAK+Q,EAAMxiB,QAAU4iB,EAAa,IAC3DnR,KAAK+Q,EAAQ,IAAIvhB,aAAa2hB,EAAa,IAE5C,MAAM/iB,EAAqB4R,KAAK+Q,EAEhC,IAAK,IAAIziB,EAAY,EAAGA,EAAI6iB,EAAY7iB,IACvCF,EAAKE,GAAK,EAGX,MAAM8B,GAAwB,IAC9B,IAAI0hB,EAAwC,EAE5C,IAAK,IAAIC,EAAwB,EAAGA,EAAgB7jB,EAAO6J,kBAAmBga,IAAiB,CAC9F,MAAMC,EAAuBD,EAAgB,EAC7C,IAAIE,EAAuBF,EAAgB7jB,EAAO4J,uBAAyBkI,KAAKlE,UAAUiW,GAAiB/R,KAAKlE,UAAU5N,EAAO4J,uBAAyB,GACtJia,GAAiB7jB,EAAO4J,yBAC3Bma,GAAgB,GAAKF,EAAgB7jB,EAAO4J,yBAA2B5J,EAAO6J,kBAAoB7J,EAAO4J,yBAE1G,MAAMoa,EAA0BD,EAAe/jB,EAAO+J,aACtD,IAAInH,EAAoB/B,KAAKuB,IAAI,EAAG2hB,EAAe/jB,EAAO+J,aAAe,GAAKlJ,KAAKe,KAAKoiB,GACpFH,EAAgB7jB,EAAO4J,yBAC1Bga,GAAiChhB,GAElCA,GAAa/B,KAAKuB,IAAI0hB,EAAc5hB,GAIpCU,GAAaL,EAAUshB,EAAgB,KAEvC3jB,EAAK+iB,EAAaa,GAAgBlhB,EAGnC1B,EAA4BhB,EAAM+iB,GAGlC,MAAMha,EAAe,EAAIpI,KAAKuB,IAAIwhB,EAA+B,IAGjE,IAAIrjB,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAIF,EAAKG,OAAQD,IACxCG,GAAcC,EACdA,EAAWN,EAAKE,GAAK6I,EACrB/I,EAAKE,GAAKG,EAGXL,EAAK+iB,GAAc/iB,EAAK,GAExB4R,KAAKgR,GAAe,EAErB,OAAOhR,KAAK+Q,SAIDoB,EA8CZtY,YAAYiX,EAAyBsB,GAEpC,GA/CMpS,KAAA/K,KAAI,EACJ+K,KAAA3F,OAAiB,EACjB2F,KAAAqS,SAAmB,EACnBrS,KAAAsS,UAAoB,EACpBtS,KAAAuS,aAAuB,GACvBvS,KAAA/E,gBAA0B,EAC1B+E,KAAA9E,eAAyB,EACzB8E,KAAAnF,WAAqB,EACrBmF,KAAA5E,QAAkB,EAClB4E,KAAAwS,aAAuB,EACvBxS,KAAAyS,aAAuB,GACvBzS,KAAA0S,aAAuB,EACvB1S,KAAA2S,YAAsB,EACtB3S,KAAA7E,SAAmB,EACnB6E,KAAAlF,QAAkB,EAClBkF,KAAAjF,MAAgB,EAChBiF,KAAAhM,OAAiB,EACjBgM,KAAA4S,IAAc1kB,EAAO4H,UACrBkK,KAAA6S,SAAmB,GACnB7S,KAAA8S,cAAwB,GACxB9S,KAAA+S,gBAA0B,EAC1B/S,KAAAgT,mBAA6B,EAC7BhT,KAAAiT,qBAA+B,EAC/BjT,KAAAkT,OAAiB,EACjBlT,KAAAhE,WAAqB9N,EAAOiK,gBAC5B6H,KAAA/D,cAAwB,EACxB+D,KAAA1E,UAAoB,EACpB0E,KAAAzE,aAAuB,EACvByE,KAAAxE,kBAA4B,EAC5BwE,KAAAvE,iBAA2B,EAC3BuE,KAAAmT,QAAkB,EAClBnT,KAAAoT,YAAsB,EACtBpT,KAAAqT,QAAkB,EAClBrT,KAAAnE,eAA+B,IAAIjN,aAAa,IAChDoR,KAAAsT,uBAAuC,IAAI1kB,aAAa,IAC/CoR,KAAAtE,UAAwB,GAExBsE,KAAAuT,cAA+B,IAAI1B,EACnC7R,KAAAwT,iBAA6B,GAC7BxT,KAAAyT,qBAAuC,GAChDzT,KAAAsB,YAAwB,GACxBtB,KAAA0T,YAA2B,GAC3B1T,KAAA2T,eAA2B,GAC3B3T,KAAA4T,YAA4B,GAI9BxB,EACH,IAAK,IAAIyB,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAChD7T,KAAKsB,YAAY3S,KAAK,GACtBqR,KAAK0T,YAAY/kB,KAAKmlB,EAAUC,QAChC/T,KAAK2T,eAAehlB,KAAK,GACzBqR,KAAK4T,YAAYjlB,KAAKqlB,EAAWC,SAInCjU,KAAKkU,aAAe,IAAIrD,EAAaC,GACrC,IAAK,IAAIxiB,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IACjD0R,KAAKtE,UAAUpN,GAAK,IAAIqiB,EAASriB,GAElC,IAAK,IAAIA,EAAY,EAAGA,EAAIJ,EAAOyK,UAAWrK,IAC7C0R,KAAKwT,iBAAiBllB,GAAKJ,EAAOoJ,UAAU1F,WAAW,WAAWzC,MAClE6Q,KAAKyT,qBAAqBnlB,GAAK,IAAIuiB,GAAa,GAGjD,IAAK,IAAIviB,EAAI,EAAGA,EAAI,GAAIA,IACvB0R,KAAKnE,eAAevN,GAAK,GAAKS,KAAKmU,MAAO,IAAD5U,GAG1C,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI0R,KAAKnE,eAAetN,OAAQD,IACvDD,GAAO2R,KAAKnE,eAAevN,GAE5B,MAAME,EAAkBH,EAAM2R,KAAKnE,eAAetN,OAGlD,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAI0R,KAAKnE,eAAetN,OAAQD,IACvDG,GAAcC,EACdA,EAAWsR,KAAKnE,eAAevN,GAAKE,EACpCwR,KAAKsT,uBAAuBhlB,GAAKG,EAIlCuR,KAAKsT,uBAAuB,IAAM,EAI5BzZ,gBAAgB5E,EAAsB6b,EAAyBsB,GAYrE,OAVIA,IAAcnd,EAAI,GACtB+K,KAAK/K,KAAOA,EACZ+K,KAAK3F,OAASpF,EACd+K,KAAKhM,OAAS,EACdgM,KAAK4S,IAAM1kB,EAAO4H,UAClBkK,KAAK6S,SAAW,GAChB7S,KAAK8S,cAAgB,GACrB9S,KAAKkT,OAAS,EACdlT,KAAKgT,mBAAoB,EACzBhT,KAAKiT,qBAAsB,EACnBhe,GACP,KAAA,EACC+K,KAAKqS,SAAW,EAChBrS,KAAKuS,aAAe,EACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBhN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5D6Q,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAK7E,SAAW,EAChB6E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACb,MACD,KAAA,EACCiF,KAAKqS,SAAW,EAChBrS,KAAKuS,aAAe,EACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBhN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5D6Q,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAK7E,SAAW,EAChB6E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACb,IAAK,IAAIzM,EAAY,EAAGA,EAAI,GAAIA,IAC/B0R,KAAKnE,eAAevN,GAAK,GAAMS,KAAKmU,MAAO,IAAD5U,GAG3C,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI0R,KAAKnE,eAAetN,OAAQD,IACvDD,GAAO2R,KAAKnE,eAAevN,GAE5B,MAAME,EAAkBH,EAAM2R,KAAKnE,eAAetN,OAGlD,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAI0R,KAAKnE,eAAetN,OAAQD,IACvDG,GAAcC,EACdA,EAAWsR,KAAKnE,eAAevN,GAAKE,EACpCwR,KAAKsT,uBAAuBhlB,GAAKG,EAGlCuR,KAAKsT,uBAAuB,IAAM,EAClC,MACD,KAAA,EACCtT,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKuS,aAAe,GACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiB,EACtB8E,KAAK1E,UAAY,EACjB0E,KAAKzE,aAAe,EACpByE,KAAKxE,kBAAoB,EACzBwE,KAAKvE,iBAAmBvN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC9D,IAAK,IAAIb,EAAY,EAAGA,EAAI0R,KAAKtE,UAAUnN,OAAQD,IAClD0R,KAAKtE,UAAUpN,GAAGsiB,MAAMtiB,GAEzB,MACD,KAAA,EACC0R,KAAKsS,UAAY,EACjBtS,KAAKnF,WAAa,EAClBmF,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKuS,aAAe,GACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBhN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5D,MACD,KAAA,EACC6Q,KAAKnF,WAAa,EAClBmF,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKuS,aAAe,GACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBhN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5D6Q,KAAKkU,aAAatD,MAAME,GACxB,MACD,KAAA,EACC9Q,KAAKlF,QAAU,EACf,IAAK,IAAIxM,EAAY,EAAGA,EAAIJ,EAAOyK,UAAWrK,IAC7C0R,KAAKwT,iBAAiBllB,GAAKJ,EAAOoJ,UAAU1F,WAAW,WAAWzC,MAC9Bge,MAAhCnN,KAAKyT,qBAAqBnlB,KAC7B0R,KAAKyT,qBAAqBnlB,GAAK,IAAIuiB,GAAa,IAEjD7Q,KAAKyT,qBAAqBnlB,GAAGsiB,MAAME,GAEpC,MACD,KAAA,EACC9Q,KAAKuS,aAAe,GACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBhN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5D6Q,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAK7E,SAAW,EAChB6E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKuT,cAAc3C,QACnB,MACD,KAAA,EACC5Q,KAAKuS,aAAe,GACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBhN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5D6Q,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAK7E,SAAW,EAChB6E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKhE,WAAa9N,EAAOiK,gBACzB6H,KAAK/D,cAAgB/N,EAAOoJ,UAAU1F,WAAW,WAAWzC,MAC5D,MACD,KAAA,EACC6Q,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAK7E,SAAW,EAChB6E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKsB,YAAc,GACnBtB,KAAK0T,YAAc,GACnB1T,KAAK2T,eAAiB,GACtB3T,KAAK4T,YAAc,GACnB,IAAK,IAAIC,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAChD7T,KAAKsB,YAAY3S,KAAK,GACtBqR,KAAK0T,YAAY/kB,KAAKmlB,EAAUC,QAChC/T,KAAK2T,eAAehlB,KAAK,GACzBqR,KAAK4T,YAAYjlB,KAAKqlB,EAAWC,SAElC,MACD,QACC,MAAM,IAAIlkB,MAAM,iCAAmCkF,IAI/C4E,eACN,MAAMsa,EAAwB,CAC7Blf,KAAQ/G,EAAO2F,oBAAoBmM,KAAK/K,MACxCjB,OAAUgM,KAAKhM,OACf4e,IAAuC,KAA/B5S,KAAK4S,IAAM1kB,EAAO4H,WAAmB5H,EAAO4H,UACpD+c,SAAY7S,KAAK6S,SACjBC,cAAiB9S,KAAK8S,cACtBC,eAAkB/S,KAAK+S,eACvBC,kBAAqBhT,KAAKgT,kBAC1BC,oBAAuBjT,KAAKiT,oBAC5B7X,QAAW4E,KAAK5E,QAChBoX,aAAgBxS,KAAKwS,aACrBE,aAAgB1S,KAAK0S,aACrBD,aAAgBzS,KAAKyS,aACrBE,YAAe3S,KAAK2S,YACpBO,OAAUlT,KAAKkT,OACfpY,QAAW5M,EAAOyH,aAAaqK,KAAKlF,UAerC,GAZIkF,KAAK3F,QAAU2F,KAAK/K,OACvBkf,EAAyB,OAAInU,KAAK3F,QAGtB,GAAT2F,KAAK/K,OACRkf,EAA6B,WAAIjmB,EAAOuG,YAAYuL,KAAKnF,YAAY/I,KACrEqiB,EAAwB,MAAInU,KAAKoU,WAAWtiB,KAC5CqiB,EAAiC,eAAIplB,KAAKgb,MAAM7b,EAAOiG,kBAAoBpF,KAAKuB,IAAI,EAAK0P,KAAKqU,2BAC9FF,EAAkC,gBAAIplB,KAAKgb,MAAM,IAAM/J,KAAK/E,iBAAmB/M,EAAOsG,qBAAuB,IAC7G2f,EAAiC,eAAInU,KAAKsU,oBAAoBxiB,MAGlD,GAATkO,KAAK/K,KACRkf,EAAuB,KAAIjmB,EAAOoB,WAAW0Q,KAAKsS,WAAWxgB,UACvD,GAAa,GAATkO,KAAK/K,KAAiC,CAChDkf,EAA2B,SAAI,GAC/B,IAAK,IAAI7lB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzD6lB,EAA2B,SAAE7lB,GAAKS,KAAKgb,MAAM,IAAM/J,KAAKkU,aAAahY,SAAS5N,GAAKJ,EAAO6C,kBAErF,GAAa,GAATiP,KAAK/K,KAAgC,CAC/Ckf,EAAwB,MAAI,GAC5B,IAAK,IAAI1H,EAAY,EAAGA,EAAIve,EAAOyK,UAAW8T,IAAK,CAClD,MAAMvQ,EAAqB,GAC3B,IAAK,IAAI5N,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzD4N,EAAS5N,GAAKS,KAAKgb,MAAM,IAAM/J,KAAKyT,qBAAqBhH,GAAGvQ,SAAS5N,GAAKJ,EAAO6C,aAElFojB,EAAwB,MAAE1H,GAAK,CAC9BvR,eAAkB8E,KAAKuU,mBAAmB9H,GAAG3a,KAC7CoK,SAAYA,SAGR,GAAa,GAAT8D,KAAK/K,KACfkf,EAAuB,KAAIjmB,EAAO6F,UAAUiM,KAAKqS,UAAUvgB,KAC3DqiB,EAA2B,SAAIjmB,EAAOqH,UAAUyK,KAAK7E,UAAUrJ,KAC3C,GAAhBkO,KAAK5E,QACR+Y,EAA0B,QAAIjmB,EAAO8G,SAASgL,KAAK5E,SAAStJ,KAE5DqiB,EAA0B,QAAI,cAEzB,GAAa,GAATnU,KAAK/K,KAAuC,CACtDkf,EAAuB,KAAIjmB,EAAO6F,UAAUiM,KAAKqS,UAAUvgB,KAC3DqiB,EAA2B,SAAIjmB,EAAOqH,UAAUyK,KAAK7E,UAAUrJ,KAC3C,GAAhBkO,KAAK5E,QACR+Y,EAA0B,QAAIjmB,EAAO8G,SAASgL,KAAK5E,SAAStJ,KAE5DqiB,EAA0B,QAAI,SAE/BA,EAAiC,eAAI,IAAIvlB,aAAa,IACtDulB,EAAyC,uBAAI,IAAIvlB,aAAa,IAC9D,IAAK,IAAIN,EAAY,EAAGA,EAAI0R,KAAKnE,eAAetN,OAAQD,IACvD6lB,EAAiC,eAAE7lB,GAAK0R,KAAKnE,eAAevN,GAK7D6lB,EAAyC,uBAAE,IAAM,OAC3C,GAAa,GAATnU,KAAK/K,KACfkf,EAA6B,WAAInU,KAAKhE,WACtCmY,EAAgC,cAAIjmB,EAAOoJ,UAAU0I,KAAK/D,eAAenK,KACrD,GAAhBkO,KAAK5E,QACR+Y,EAA0B,QAAIjmB,EAAO8G,SAASgL,KAAK5E,SAAStJ,KAE5DqiB,EAA0B,QAAI,cAEzB,GAAa,GAATnU,KAAK/K,KAAkC,CACjDkf,EAA2B,SAAIjmB,EAAOqH,UAAUyK,KAAK7E,UAAUrJ,KAC3C,GAAhBkO,KAAK5E,QACR+Y,EAA0B,QAAIjmB,EAAO8G,SAASgL,KAAK5E,SAAStJ,KAE5DqiB,EAA0B,QAAI,SAE/BA,EAA4B,UAAI,GAChC,IAAK,IAAI7lB,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1D6lB,EAA4B,UAAE7lB,GAAKS,KAAKgb,MAAM,IAAM/J,KAAKuT,cAAczX,UAAUxN,GAAKJ,EAAO+J,mBAExF,GAAa,GAAT+H,KAAK/K,KAA2B,CAC1C,MAAMuf,EAA0B,GAChC,IAAK,MAAMC,KAAYzU,KAAKtE,UAC3B8Y,EAAc7lB,KAAK,CAClBgN,UAAazN,EAAOgJ,oBAAoBud,EAAS9Y,WAAW7J,KAC5DhB,UAAa2jB,EAAS3jB,UACtB8K,SAAY1N,EAAOoJ,UAAUmd,EAAS7Y,UAAU9J,OAG9B,GAAhBkO,KAAK5E,QACR+Y,EAA0B,QAAIjmB,EAAO8G,SAASgL,KAAK5E,SAAStJ,KAE5DqiB,EAA0B,QAAI,SAE/BA,EAA4B,UAAIjmB,EAAO0I,WAAWoJ,KAAK1E,WAAWxJ,KAClEqiB,EAA+B,aAAIjmB,EAAOsJ,UAAUwI,KAAKzE,cAAczJ,KACvEqiB,EAAoC,kBAAInU,KAAKxE,kBAC7C2Y,EAAmC,iBAAIjmB,EAAOoJ,UAAU0I,KAAKvE,kBAAkB3J,KAC/EqiB,EAA4B,UAAIK,MAC1B,CAAA,GAAa,GAATxU,KAAK/K,KAYf,MAAM,IAAIlF,MAAM,gCAXhBokB,EAA8B,YAAI,GAClCA,EAAiC,eAAI,GACrCA,EAA8B,YAAI,GAClCA,EAA8B,YAAI,GAClC,IAAK,IAAIN,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAChDM,EAA8B,YAAEN,GAAO7T,KAAKsB,YAAYuS,GACxDM,EAAiC,eAAEN,GAAO7T,KAAK2T,eAAeE,GAC9DM,EAA8B,YAAEN,GAAO7T,KAAK4T,YAAYC,GACxDM,EAA8B,YAAEN,GAAO7T,KAAK0T,YAAYG,GAK1D,OAAOM,EAGDta,eAAesa,EAAuBrD,EAAyBsB,EAAuBsC,EAA0BpjB,GAC9F6b,MAApBgH,IAA+BA,EAAmB,IAEtD,IAAIlf,EAAuB/G,EAAO2F,oBAAoB8gB,QAAQR,EAAuB,OAC9D,GAAnBlf,EAAK2f,YAAiB3f,EAAOmd,EAAY,EAAyBtB,EAAc,EAAA,GACpF9Q,KAAK6U,gBAAgB5f,EAAM6b,EAAgBsB,GAETjF,MAA9BgH,EAAyB,SAC5BnU,KAAK3F,OAAS8Z,EAAyB,SAAM,GAGZhH,MAA9BgH,EAAyB,OAC5BnU,KAAKhM,OAASib,GAAO/gB,EAAO0H,YAAc,EAAG1H,EAAO0H,YAAc,EAAgC,EAA7Bue,EAAyB,QAE9FnU,KAAKhM,OAAS,EAGgBmZ,MAA3BgH,EAAsB,IACzBnU,KAAK4S,IAAM3D,EAAM,EAAG/gB,EAAO6H,OAAS,EAAGhH,KAAKgb,MAAM7b,EAAO4H,WAAuC,EAA1Bqe,EAAsB,KAASjmB,EAAO4H,UAAY,MAExHkK,KAAK4S,IAAM1kB,EAAO4H,UAGiBqX,MAAhCgH,EAA2B,SAC9BnU,KAAK6S,SAA2C,EAA/BsB,EAA2B,SAE5CnU,KAAK6S,SAAW,GAGiB1F,MAA9BgH,EAAyB,OAC5BnU,KAAKkT,OAASjE,EAAM/gB,EAAO8H,UAAW9H,EAAO+H,UAAY,EAAiC,EAA7Bke,EAAyB,QAGtFnU,KAAKkT,OAAS,EAGf,MAAM4B,EAAyC,CAAEC,OAAU,EAAGC,OAAU,EAAGC,OAAU,GAC/EC,EAAmBf,EAA6B,YAAKA,EAA2B,SAoBtF,GAnBAnU,KAAKnF,WAAqDsS,MAAxC2H,EAAmBI,GAAiCJ,EAAmBI,GAAoBhnB,EAAOuG,YAAY0gB,WAAUta,GAAcA,EAAW/I,MAAQojB,KACnJ,GAApBlV,KAAKnF,aAAkBmF,KAAKnF,WAAa,GAE7CmF,KAAKlF,QAAU5M,EAAOyH,aAAagf,QAAQR,EAA0B,UAChD,GAAjBnU,KAAKlF,UAAekF,KAAKlF,QAAoB,GAATkF,KAAK/K,KAAgC,EAAI,GAEvCkY,MAAtCgH,EAAiC,eACpCnU,KAAKuS,aAAetD,EAAM,EAAG/gB,EAAOqG,kBAAmBxF,KAAKgb,MAAO7b,EAAOqG,kBAAoB,EAAK,EAAMxF,KAAK6B,KAA0C,EAArCujB,EAAiC,gBAASjmB,EAAOiG,mBAAqBpF,KAAK8B,MAE9LmP,KAAKuS,aAAyB,GAATvS,KAAK/K,KAA+B,EAAI,GAEnBkY,MAAvCgH,EAAkC,gBACrCnU,KAAK/E,gBAAkBgU,EAAM,EAAG/gB,EAAOsG,qBAAsBzF,KAAKgb,OAAO7b,EAAOsG,qBAAuB,IAA4C,EAAtC2f,EAAkC,iBAAS,MAExJnU,KAAK/E,gBAAkB,EAExB+E,KAAK9E,eAAiBhN,EAAOoJ,UAAU6d,WAAUvZ,GAAYA,EAAS9J,MAAQqiB,EAAiC,kBACnF,GAAxBnU,KAAK9E,iBAAsB8E,KAAK9E,eAAiBhN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,OAEzDge,MAA9BgH,EAAyB,OAAgB,CAC5C,MAAMiB,EAA2B,CAAC,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAClDC,EAA6B,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAClDC,EAAwB,CAAC,OAAQ,SAAU,SAAU,OAAQ,eAAgB,eAAgB,cAC7FC,EAAqC,CAAEC,gBAAiB,EAAGC,iBAAkB,EAAGC,eAAgB,EAAGC,cAAe,GACxH,IAAIC,EAAqEzI,MAA9CoI,EAAepB,EAAyB,QAAkBoB,EAAepB,EAAyB,QAAKmB,EAAYX,QAAQR,EAAyB,SAC1J,GAAjByB,IAAoBA,EAAe,GACvC5V,KAAKuS,aAAe6C,EAAeQ,GACnC5V,KAAK9E,eAAiBma,EAAiBO,GACvC5V,KAAK/E,gBAAkB,EAGxB,MAAM4a,EAA2C,CAAC,OAAQ,gBAAiB,kBAAmB,iBAC9F,GAAa,GAAT7V,KAAK/K,KACR+K,KAAKsS,UAAYpkB,EAAOoB,WAAW6lB,WAAU/mB,GAAQA,EAAK0D,MAAQqiB,EAAuB,QAClE,GAAnBnU,KAAKsS,YAAiBtS,KAAKsS,UAAY,GAE3CtS,KAAKjF,MAAQ7M,EAAOkI,OAAO+e,WAAUpa,GAASA,EAAMjJ,MAAQqiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,QAE7B,GAAa,GAATiF,KAAK/K,KAAiC,CAChD,GAAoCkY,MAAhCgH,EAA2B,SAC9B,IAAK,IAAI7lB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzD0R,KAAKkU,aAAahY,SAAS5N,GAAKS,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAO6C,YAAahC,KAAKgb,MAAM7b,EAAO6C,aAAgBojB,EAA2B,SAAE7lB,GAAM,OAIhJ0R,KAAKjF,MAAQ7M,EAAOkI,OAAO+e,WAAUpa,GAASA,EAAMjJ,MAAQqiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,QAE7B,GAAa,GAATiF,KAAK/K,MACf,GAAiCkY,MAA7BgH,EAAwB,MAC3B,IAAK,IAAI1H,EAAY,EAAGA,EAAIve,EAAOyK,UAAW8T,IAAK,CAClD,MAAMqJ,EAAY3B,EAAwB,MAAE1H,GAC5C,GAAYU,MAAR2I,IAE0B3I,MAA1B2I,EAAqB,iBACxB9V,KAAKwT,iBAAiB/G,GAAKve,EAAOoJ,UAAU6d,WAAUvZ,GAAYA,EAAS9J,MAAQgkB,EAAqB,kBACvE,GAA7B9V,KAAKwT,iBAAiB/G,KAAUzM,KAAKwT,iBAAiB/G,GAAKve,EAAOoJ,UAAU1F,WAAW,WAAWzC,QAE/Ege,MAApB2I,EAAe,UAClB,IAAK,IAAIxnB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzD0R,KAAKyT,qBAAqBhH,GAAGvQ,SAAS5N,GAAKS,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAO6C,YAAahC,KAAKgb,MAAM7b,EAAO6C,aAAgB+kB,EAAe,SAAExnB,GAAM,aAK3I,GAAa,GAAT0R,KAAK/K,KAAkC,CACjD,GAAqCkY,MAAjCgH,EAA4B,UAC/B,IAAK,IAAI7lB,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1D0R,KAAKuT,cAAczX,UAAUxN,GAAKS,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAO+J,aAAclJ,KAAKgb,MAAM7b,EAAO+J,cAAiBkc,EAA4B,UAAE7lB,GAAM,OAIjH6e,MAAhCgH,EAA2B,WAC9BnU,KAAK7E,SAAWjN,EAAOqH,UAAU4f,WAAUha,GAAYA,EAASrJ,MAAQqiB,EAA2B,YAC7E,GAAlBnU,KAAK7E,WAAgB6E,KAAK7E,SAAW,IAGPgS,MAA/BgH,EAA0B,UAC7BnU,KAAK5E,QAAUlN,EAAO8G,SAASmgB,WAAU/Z,GAAWA,EAAQtJ,MAAQqiB,EAA0B,WACzE,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAUlN,EAAO8G,SAASzG,QACnDyR,KAAK5E,SAAWlN,EAAO8G,SAASzG,QACnCyR,KAAKwS,aAAe2B,EAA+B,aACnDnU,KAAKyS,aAAe0B,EAA+B,aACnDnU,KAAK0S,aAAeyB,EAA+B,aACnDnU,KAAK2S,YAAcwB,EAA8B,cAGjDnU,KAAKwS,aAAetkB,EAAO8G,SAASgL,KAAK5E,SAAStK,UAClDkP,KAAK0S,aAAexkB,EAAO8G,SAASgL,KAAK5E,SAASlG,WAClD8K,KAAKyS,aAAe,GACpBzS,KAAK2S,YAAczkB,EAAO8G,SAASgL,KAAK5E,SAASnG,OAInD+K,KAAKjF,MAAQ7M,EAAOkI,OAAO+e,WAAUpa,GAASA,EAAMjJ,MAAQqiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,QAC7B,GAAa,GAATiF,KAAK/K,KACuBkY,MAAlCgH,EAA6B,WAChCnU,KAAKhE,WAAaiT,EAAM,EAAG/gB,EAAOiK,gBAAkB,EAAGpJ,KAAKgb,MAAMoK,EAA6B,aAE/FnU,KAAKhE,WAAa9N,EAAOiK,gBAGegV,MAArCgH,EAAgC,gBACnCnU,KAAK/D,cAAgB/N,EAAOoJ,UAAU6d,WAAUvZ,GAAYA,EAAS9J,MAAQqiB,EAAgC,iBAClF,GAAvBnU,KAAK/D,gBAAqB+D,KAAK/D,cAAgB/N,EAAOoJ,UAAU1F,WAAmB,OAAEzC,QAGvDge,MAA/BgH,EAA0B,UAC7BnU,KAAK5E,QAAUlN,EAAO8G,SAASmgB,WAAU/Z,GAAWA,EAAQtJ,MAAQqiB,EAA0B,WACzE,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAUlN,EAAO8G,SAASzG,QACnDyR,KAAK5E,SAAWlN,EAAO8G,SAASzG,QACnCyR,KAAKwS,aAAe2B,EAA+B,aACnDnU,KAAKyS,aAAe0B,EAA+B,aACnDnU,KAAK0S,aAAeyB,EAA+B,aACnDnU,KAAK2S,YAAcwB,EAA8B,cAGjDnU,KAAKwS,aAAetkB,EAAO8G,SAASgL,KAAK5E,SAAStK,UAClDkP,KAAK0S,aAAexkB,EAAO8G,SAASgL,KAAK5E,SAASlG,WAClD8K,KAAKyS,aAAe,GACpBzS,KAAK2S,YAAczkB,EAAO8G,SAASgL,KAAK5E,SAASnG,OAInD+K,KAAKjF,MAAQ7M,EAAOkI,OAAO+e,WAAUpa,GAASA,EAAMjJ,MAAQqiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,QAC7B,GAAa,GAATiF,KAAK/K,KAA6B,CAC5C,MAAM8gB,EAAsC,CAAEC,SAAY,EAAGC,OAAU,EAAGC,aAAc,EAAGC,eAAgB,EAAGC,SAAY,EAAGC,aAAc,EAAGC,eAAgB,EAAGC,MAAS,EAAGC,QAAW,GAIxL,GAHAxW,KAAKqS,SAAwDlF,MAA7C4I,EAAgB5B,EAAuB,MAAkB4B,EAAgB5B,EAAuB,MAAKjmB,EAAO6F,UAAUohB,WAAU/mB,GAAQA,EAAK0D,MAAQqiB,EAAuB,QACtK,GAAlBnU,KAAKqS,WAAgBrS,KAAKqS,SAAW,GAELlF,MAAhCgH,EAA2B,SAC9BnU,KAAK7E,SAAWjN,EAAOqH,UAAU4f,WAAUha,GAAYA,EAASrJ,MAAQqiB,EAA2B,YAC7E,GAAlBnU,KAAK7E,WAAgB6E,KAAK7E,SAAW,QACnC,GAAkCgS,MAA9BgH,EAAyB,OAAgB,CACnD,MAAMsC,EAAwC,CAAEC,OAAU,EAAGC,QAAW,GACxE3W,KAAK7E,SAA4DgS,MAAjDsJ,EAAkBtC,EAAyB,QAAkBsC,EAAkBtC,EAAyB,QAAKjmB,EAAOqH,UAAU4f,WAAUha,GAAYA,EAASrJ,MAAQqiB,EAAyB,UACxL,GAAlBnU,KAAK7E,WAAgB6E,KAAK7E,SAAW,GAGPgS,MAA/BgH,EAA0B,SAC7BnU,KAAK5E,QAAUlN,EAAO8G,SAASmgB,WAAU/Z,GAAWA,EAAQtJ,MAAQqiB,EAA0B,WACzE,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAUlN,EAAO8G,SAASzG,QACnDyR,KAAK5E,SAAWlN,EAAO8G,SAASzG,QACnCyR,KAAKwS,aAAe2B,EAA+B,aACnDnU,KAAKyS,aAAe0B,EAA+B,aACnDnU,KAAK0S,aAAeyB,EAA+B,aACnDnU,KAAK2S,YAAcwB,EAA8B,cAGjDnU,KAAKwS,aAAetkB,EAAO8G,SAASgL,KAAK5E,SAAStK,UAClDkP,KAAK0S,aAAexkB,EAAO8G,SAASgL,KAAK5E,SAASlG,WAClD8K,KAAKyS,aAAe,GACpBzS,KAAK2S,YAAczkB,EAAO8G,SAASgL,KAAK5E,SAASnG,OAEVkY,MAA9BgH,EAAyB,SACnCnU,KAAK5E,QAAUya,EAAkBlB,QAAQR,EAAyB,SAC7C,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAU,IAGxC4E,KAAKjF,MAAQ7M,EAAOkI,OAAO+e,WAAUpa,GAASA,EAAMjJ,MAAQqiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,GAGD,kBAA9BoZ,EAAyB,SAC5BnU,KAAK7E,SAAW,EAChB6E,KAAKjF,MAAQ,QAER,GAAa,GAATiF,KAAK/K,KAA2B,CACPkY,MAA/BgH,EAA0B,SAC7BnU,KAAK5E,QAAUlN,EAAO8G,SAASmgB,WAAU/Z,GAAWA,EAAQtJ,MAAQqiB,EAA0B,WACzE,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAUlN,EAAO8G,SAASzG,QACnDyR,KAAK5E,SAAWlN,EAAO8G,SAASzG,QACnCyR,KAAKwS,aAAe2B,EAA+B,aACnDnU,KAAKyS,aAAe0B,EAA+B,aACnDnU,KAAK0S,aAAeyB,EAA+B,aACnDnU,KAAK2S,YAAcwB,EAA8B,cAGjDnU,KAAKwS,aAAetkB,EAAO8G,SAASgL,KAAK5E,SAAStK,UAClDkP,KAAK0S,aAAexkB,EAAO8G,SAASgL,KAAK5E,SAASlG,WAClD8K,KAAKyS,aAAe,GACpBzS,KAAK2S,YAAczkB,EAAO8G,SAASgL,KAAK5E,SAASnG,OAEVkY,MAA9BgH,EAAyB,SACnCnU,KAAK5E,QAAUya,EAAkBlB,QAAQR,EAAyB,SAC7C,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAU,IAGxC4E,KAAKjF,MAAQ7M,EAAOkI,OAAO+e,WAAUpa,GAASA,EAAMjJ,MAAQqiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,GAEnCiF,KAAK1E,UAAYpN,EAAO0I,WAAWue,WAAU7Z,GAAaA,EAAUxJ,MAAQqiB,EAA4B,aACjF,GAAnBnU,KAAK1E,YAAiB0E,KAAK1E,UAAY,GAC3C0E,KAAKzE,aAAerN,EAAOsJ,UAAU2d,WAAUyB,GAAYA,EAAS9kB,MAAQqiB,EAA+B,gBACjF,GAAtBnU,KAAKzE,eAAoByE,KAAKzE,aAAe,GACJ4R,MAAzCgH,EAAoC,kBACvCnU,KAAKxE,kBAAoByT,EAAM,EAAG/gB,EAAO+I,qBAAuB,EAA2C,EAAxCkd,EAAoC,mBAEvGnU,KAAKxE,kBAAoB,EAG1B,MAAMqb,EAA0C,CAAEC,UAAW,EAAGC,UAAW,EAAGC,UAAW,GACzFhX,KAAKvE,iBAAgF0R,MAA7D0J,EAAoB1C,EAAmC,kBAAkB0C,EAAoB1C,EAAmC,kBAAKjmB,EAAOoJ,UAAU6d,WAAUvZ,GAAYA,EAAS9J,MAAQqiB,EAAmC,oBAC1N,GAA1BnU,KAAKvE,mBAAwBuE,KAAKvE,iBAAmB,GAEzD,IAAK,IAAIgR,EAAY,EAAGA,EAAIve,EAAOyI,cAAe8V,IAAK,CACtD,MAAMgI,EAAqBzU,KAAKtE,UAAU+Q,GAC1C,IAAIwK,OAAsB9J,EACtBgH,EAA4B,YAAG8C,EAAiB9C,EAA4B,UAAE1H,IAC5DU,MAAlB8J,IAA6BA,EAAiB,IAElDxC,EAAS9Y,UAAYzN,EAAOgJ,oBAAoBie,WAAU+B,GAAQA,EAAKplB,MAAQmlB,EAA0B,aAC9E,GAAvBxC,EAAS9Y,YAAiB8Y,EAAS9Y,UAAY,GAChBwR,MAA/B8J,EAA0B,UAC7BxC,EAAS3jB,UAAYme,EAAM,EAAG/gB,EAAO+I,qBAAuB,EAAiC,EAA9BggB,EAA0B,WAEzFxC,EAAS3jB,UAAY,EAEtB2jB,EAAS7Y,SAA8DuR,MAAnD0J,EAAoBI,EAAyB,UAAkBJ,EAAoBI,EAAyB,UAAK/oB,EAAOoJ,UAAU6d,WAAUvZ,GAAYA,EAAS9J,MAAQmlB,EAAyB,YAC5L,GAAtBxC,EAAS7Y,WAAgB6Y,EAAS7Y,SAAW,SAE5C,GAAa,GAAToE,KAAK/K,KAAuC,CACtD,GAAoCkY,MAAhCgH,EAA2B,SAC9BnU,KAAK7E,SAAWjN,EAAOqH,UAAU4f,WAAUha,GAAYA,EAASrJ,MAAQqiB,EAA2B,YAC7E,GAAlBnU,KAAK7E,WAAgB6E,KAAK7E,SAAW,QACnC,GAAkCgS,MAA9BgH,EAAyB,OAAgB,CACnD,MAAMsC,EAAwC,CAAEC,OAAU,EAAGC,QAAW,GACxE3W,KAAK7E,SAA4DgS,MAAjDsJ,EAAkBtC,EAAyB,QAAkBsC,EAAkBtC,EAAyB,QAAKjmB,EAAOqH,UAAU4f,WAAUha,GAAYA,EAASrJ,MAAQqiB,EAAyB,UACxL,GAAlBnU,KAAK7E,WAAgB6E,KAAK7E,SAAW,GAgC1C,GA7BmCgS,MAA/BgH,EAA0B,SAC7BnU,KAAK5E,QAAUlN,EAAO8G,SAASmgB,WAAU/Z,GAAWA,EAAQtJ,MAAQqiB,EAA0B,WACzE,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAUlN,EAAO8G,SAASzG,QACnDyR,KAAK5E,SAAWlN,EAAO8G,SAASzG,QACnCyR,KAAKwS,aAAe2B,EAA+B,aACnDnU,KAAKyS,aAAe0B,EAA+B,aACnDnU,KAAK0S,aAAeyB,EAA+B,aACnDnU,KAAK2S,YAAcwB,EAA8B,cAGjDnU,KAAKwS,aAAetkB,EAAO8G,SAASgL,KAAK5E,SAAStK,UAClDkP,KAAK0S,aAAexkB,EAAO8G,SAASgL,KAAK5E,SAASlG,WAClD8K,KAAKyS,aAAe,GACpBzS,KAAK2S,YAAczkB,EAAO8G,SAASgL,KAAK5E,SAASnG,OAEVkY,MAA9BgH,EAAyB,SACnCnU,KAAK5E,QAAUya,EAAkBlB,QAAQR,EAAyB,SAC7C,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAU,IAGxC4E,KAAKjF,MAAQ7M,EAAOkI,OAAO+e,WAAUpa,GAASA,EAAMjJ,MAAQqiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,GAGD,kBAA9BoZ,EAAyB,SAC5BnU,KAAK7E,SAAW,EAChB6E,KAAKjF,MAAQ,GAGVoZ,EAAiC,eAAG,CAEvC,IAAK,IAAI7lB,EAAY,EAAGA,EAAI,GAAIA,IAC/B0R,KAAKnE,eAAevN,GAAK6lB,EAAiC,eAAE7lB,GAI7D,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI0R,KAAKnE,eAAetN,OAAQD,IACvDD,GAAO2R,KAAKnE,eAAevN,GAE5B,MAAME,EAAkBH,EAAM2R,KAAKnE,eAAetN,OAGlD,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAI0R,KAAKnE,eAAetN,OAAQD,IACvDG,GAAcC,EACdA,EAAWsR,KAAKnE,eAAevN,GAAKE,EACpCwR,KAAKsT,uBAAuBhlB,GAAKG,EAIlCuR,KAAKsT,uBAAuB,IAAM,OAG7B,CAAA,GAAa,GAATtT,KAAK/K,KAUf,MAAM,IAAIlF,MAAM,iCAThB,GAAuCod,MAAnCgH,EAA8B,YACjC,IAAK,IAAIN,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAChD7T,KAAKsB,YAAYuS,GAAOM,EAA8B,YAAEN,GACxD7T,KAAK2T,eAAeE,GAAOM,EAAiC,eAAEN,GAC9D7T,KAAK4T,YAAYC,GAAOM,EAA8B,YAAEN,GACxD7T,KAAK0T,YAAYG,GAAOM,EAA8B,YAAEN,GAO9C,GAAT7T,KAAK/K,OAEU,GAAd+K,KAAKjF,OAAmDoS,MAArCgH,EAAgC,cACtDnU,KAAK8S,cAAgBqB,EAAgC,cAGrDnU,KAAK8S,cAAgB,EAAoB,EAAI,GAGJ3F,MAAtCgH,EAAiC,eACpCnU,KAAK+S,eAAiBoB,EAAiC,eAGvDnU,KAAK+S,eAAiBzhB,EAGsB6b,MAAzCgH,EAAoC,kBACvCnU,KAAKgT,kBAAoBmB,EAAoC,kBAG7DnU,KAAKgT,mBAAoB,EAGqB7F,MAA3CgH,EAAsC,oBACzCnU,KAAKiT,oBAAsBkB,EAAsC,oBAGjEnU,KAAKiT,qBAAsB,GAKvBpZ,0BAA0ByV,EAAe6H,EAAoBC,GAEnE,OAAOD,EAAapoB,KAAKuB,IAAI,EAAKgf,EAAQ8H,EAAOroB,KAAKgb,MAAM7b,EAAO2K,aAAa,IAG1EgB,kCAAkC1K,GAGxC,OAAOgjB,EAAWkF,mBAAmBnpB,EAAOwJ,kBAAoBvI,GAAS,GAASjB,EAAOwJ,mBAAqBxJ,EAAOyK,UAAW,IAAK,IAAM,MAGpIkB,SAAqC1K,GAE5C,OAAO,GAAKJ,KAAK6B,IAAIuhB,EAAWmF,2BAA2BnoB,IAAUJ,KAAK8B,IAGpEgJ,SAIN,GAHAmG,KAAKmT,QAAU,EACfnT,KAAKoT,YAAc,EACnBpT,KAAKqT,QAAU,EACF,GAATrT,KAAK/K,KACR/F,EAAY8Q,KAAKsS,UAAWljB,EAA6BC,QACnD,GAAa,GAAT2Q,KAAK/K,KACf+K,KAAKuT,cAAcgE,qBACb,GAAa,GAATvX,KAAK/K,KACf+K,KAAKkU,aAAaqD,cAAc,QAC1B,GAAa,GAATvX,KAAK/K,KACf,IAAK,IAAI3G,EAAY,EAAGA,EAAIJ,EAAOyK,UAAWrK,IAC7C0R,KAAKyT,qBAAqBnlB,GAAGipB,cAAcpF,EAAWqF,EAA8BlpB,IAKhFuL,cACN,GAAa,GAATmG,KAAK/K,KACR,OAAO/F,EAAY8Q,KAAKsS,UAAWljB,EAA6BC,GAC1D,GAAa,GAAT2Q,KAAK/K,KACf,OAAO+K,KAAKkU,aAAaqD,cAAc,GAEvC,MAAM,IAAIxnB,MAAM,4CAIX8J,eAAeyV,EAAemI,GACpC,GAAa,GAATzX,KAAK/K,KACR,OAAO+K,KAAKyT,qBAAqBnE,GAAOiI,cAAcpF,EAAWqF,EAA8BlI,IAE/F,MAAM,IAAIvf,MAAM,4CAIX8J,gBACN,OAAgB,GAATmG,KAAK/K,KAAiC/G,EAAOuG,YAAY7C,WAAW,aACjE,GAAToO,KAAK/K,KAA6B/G,EAAOuG,YAAY7C,WAAqB,SAAI1D,EAAOuG,YAAYuL,KAAKnF,YAEjGhB,WACN,OAAgB,GAATmG,KAAK/K,KAAiC/G,EAAOkI,OAAOxE,WAAoB,QAAI1D,EAAOkI,OAAO4J,KAAKjF,OAEhGlB,yBACN,OAAgB,GAATmG,KAAK/K,KAAiC,EAA2D,IAAtD+K,KAAKuS,cAAgBrkB,EAAOqG,kBAAoB,IAE5FsF,wBACN,OAAgB,GAATmG,KAAK/K,MAAiE,GAAxB+K,KAAK/E,gBAEpDpB,qBACN,OAAgB,GAATmG,KAAK/K,KAAiC,EAAI+K,KAAK/E,gBAEhDpB,oBACN,GAAa,GAATmG,KAAK/K,KAAgC,MAAM,IAAIlF,MAAM,0CACzD,OAAO7B,EAAOoJ,UAAU0I,KAAK9E,gBAEvBrB,mBAAmByV,GACzB,GAAa,GAATtP,KAAK/K,KAAgC,MAAM,IAAIlF,MAAM,+CACzD,OAAO7B,EAAOoJ,UAAU0I,KAAKwT,iBAAiBlE,KAIhD,IAAYwE,EAOAE,GAPZ,SAAYF,GACXA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,OAAA,GAAA,SAJD,CAAYA,IAAAA,EAAS,KAOrB,SAAYE,GACXA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,iBAAA,IAAA,mBACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,iBAAA,IAAA,mBACAA,EAAAA,EAAA,YAAA,IAAA,cAxBD,CAAYA,IAAAA,EAAU,WA2BT0D,EAAb7d,cACQmG,KAAA2X,OAAiB,EACR3X,KAAA4X,YAA4B,GAC5B5X,KAAA6X,SAAsB,GACtB7X,KAAA8X,KAAiB,GAC1B9X,KAAA+X,OAAiB,EACjB/X,KAAAlO,KAAe,UAGVkmB,EAkGZne,YAAYoe,GApEIjY,KAAAkY,SAAsB,GAC/BlY,KAAAmY,WAAqB,EACrBnY,KAAAoY,UAAoB,IACpBpY,KAAAqY,qBAA+B,EAC/BrY,KAAAsY,eAAyB,EACzBtY,KAAAuY,iBAA2B,EAC3BvY,KAAAwY,WAAqB,EACrBxY,KAAAyY,WAAqB,EACrBzY,KAAA0Y,YAAsB,EACtB1Y,KAAA2Y,aAAuB,EAGvB3Y,KAAA4Y,WAAsC,IAAInS,IAAwB,CACxE,CAACuN,EAAWC,QAAS,GACrB,CAACD,EAAW6E,cAAe,KAC3B,CAAC7E,EAAW8E,SAAU5qB,EAAO2E,SAAW3E,EAAO0E,UAC/C,CAACohB,EAAW+E,UAAW7qB,EAAO4E,YAAc,GAC5C,CAACkhB,EAAWgF,WAAY,GACxB,CAAChF,EAAWiF,aAAc/qB,EAAO0H,aACjC,CAACoe,EAAWkF,OAAQhrB,EAAO6H,QAC3B,CAACie,EAAWmF,aAAcjrB,EAAOqG,kBAAoB,GACrD,CAACyf,EAAWoF,cAAelrB,EAAOsG,qBAAuB,GACzD,CAACwf,EAAWqF,aAAc,IAC1B,CAACrF,EAAWsF,aAAc,IAC1B,CAACtF,EAAWuF,aAAc,IAC1B,CAACvF,EAAWwF,aAAc,IAC1B,CAACxF,EAAWyF,cAAe,IAC3B,CAACzF,EAAW0F,cAAexrB,EAAOiK,iBAClC,CAAC6b,EAAW2F,UAAWzrB,EAAO+H,UAAY/H,EAAO8H,WACjD,CAACge,EAAW4F,gBAAiB,IAC7B,CAAC5F,EAAW6F,cAAe3rB,EAAOiI,cAAgBjI,EAAOgI,eACzD,CAAC8d,EAAW8F,gBAAiB,IAC7B,CAAC9F,EAAW+F,gBAAiB,IAC7B,CAAC/F,EAAWgG,iBAAkB,IAC9B,CAAChG,EAAWiG,YAAa,IACzB,CAACjG,EAAWkG,iBAAkB,GAC9B,CAAClG,EAAWmG,YAAa,KAKnBna,KAAAoa,eAA0C,IAAI3T,IAAwB,CAC5E,CAACuN,EAAWC,QAAS,GACrB,CAACD,EAAW6E,cAAe,KAC3B,CAAC7E,EAAW8E,SAAU/pB,KAAK+f,MAAM5gB,EAAO2E,SAAW3E,EAAO0E,UAAY,IACtE,CAACohB,EAAW+E,UAAW,GACvB,CAAC/E,EAAWgF,WAAY,GACxB,CAAChF,EAAWiF,aAAclqB,KAAK+f,KAAK5gB,EAAO0H,YAAc,IACzD,CAACoe,EAAWkF,OAAQnqB,KAAK+f,KAAK5gB,EAAO6H,OAAS,IAC9C,CAACie,EAAWmF,aAAcjrB,EAAOqG,kBAAoB,GACrD,CAACyf,EAAWoF,cAAe,GAC3B,CAACpF,EAAWqF,aAAc,IAC1B,CAACrF,EAAWsF,aAAc,IAC1B,CAACtF,EAAWuF,aAAc,IAC1B,CAACvF,EAAWwF,aAAc,IAC1B,CAACxF,EAAWyF,cAAe,IAC3B,CAACzF,EAAW0F,cAAe3qB,KAAK+f,KAAK5gB,EAAOiK,kBAC5C,CAAC6b,EAAW2F,UAAW5qB,KAAK+f,MAAM5gB,EAAO+H,UAAY/H,EAAO8H,WAAa,IACzE,CAACge,EAAW4F,gBAAiB,GAC7B,CAAC5F,EAAW6F,cAAe9qB,KAAK+f,MAAM5gB,EAAOiI,cAAgBjI,EAAOgI,eAAiB,IACrF,CAAC8d,EAAW8F,gBAAiB,GAC7B,CAAC9F,EAAW+F,gBAAiB,GAC7B,CAAC/F,EAAWgG,iBAAkB,IAC9B,CAAChG,EAAWiG,YAAa,IACzB,CAACjG,EAAWkG,iBAAkB,GAC9B,CAAClG,EAAWmG,YAAa,KAsGnBna,KAAAqa,iBAAmB,CAACC,EAAgBC,EAAqBC,EAAwB5hB,KACvF,GAAK0hB,GAAuBnN,MAAdoN,GAA4CpN,MAAjBqN,GAA0CrN,MAAZvU,EAElE,CAEJA,EAAW1K,EAAO0K,SAAWA,EAAW,EAExC,IAAI6hB,EAA0Bza,KAAKoa,eAAe5Y,IAAIxB,KAAKkY,SAASqC,GAAY3C,YAAY4C,GAAe5G,YAAYhb,IAOvH,OAJIoH,KAAKkY,SAASqC,GAAY3C,YAAY4C,GAAe5G,YAAYhb,IAAaob,EAAW8E,WAC5F2B,EAAMza,KAAK0a,eAAe1a,KAAK2a,MAAO3G,EAAW8E,WAGvC3L,MAAPsN,EACIA,EAEA,EAfR,OAAO,GAoBFza,KAAA4a,aAAe,CAACN,EAAgBC,EAAqBC,EAAwB5hB,KACnF,GAAK0hB,GAAuBnN,MAAdoN,GAA4CpN,MAAjBqN,GAA0CrN,MAAZvU,EAElE,CAEJA,EAAW1K,EAAO0K,SAAWA,EAAW,EAExC,IAAI6hB,EAA0Bza,KAAK4Y,WAAWpX,IAAIxB,KAAKkY,SAASqC,GAAY3C,YAAY4C,GAAe5G,YAAYhb,IACnH,OAAWuU,MAAPsN,EACIA,EAEA,EATR,OAAO,GAaFza,KAAA6a,uBAAyB,CAACP,EAAgBQ,KAChD,GAAKR,EAEA,CACJ,IAAIG,EAA0Bza,KAAK4Y,WAAWpX,IAAIsZ,GAClD,OAAW3N,MAAPsN,EACIA,EAEA,EANR,OAAO,GAzIMtN,MAAV8K,EACHjY,KAAK+a,iBAAiB9C,GAEtBjY,KAAKgb,eAAc,GAIdnhB,eAAehI,EAAeopB,GACpC,OAAQA,GACP,KAAKjH,EAAW8E,SACfjnB,GAAS3D,EAAO0E,SAChB,MACD,KAAKohB,EAAWiF,aACfpnB,GAAS3D,EAAO0H,YAAc,EAC9B,MACD,KAAKoe,EAAW2F,UACf9nB,GAAS3D,EAAO8H,UAChB,MACD,KAAKge,EAAW6F,cACfhoB,GAAS3D,EAAOgI,cAChB,MACD,KAAK8d,EAAWmF,aAChB,KAAKnF,EAAWoF,cAChB,KAAKpF,EAAW6E,cAChB,KAAK7E,EAAWkF,OAChB,KAAKlF,EAAW+E,UAChB,KAAK/E,EAAWgF,WAChB,KAAKhF,EAAWqF,aAChB,KAAKrF,EAAWsF,aAChB,KAAKtF,EAAWuF,aAChB,KAAKvF,EAAWwF,aAChB,KAAKxF,EAAWyF,cAChB,KAAKzF,EAAW0F,cAChB,KAAK1F,EAAW4F,gBAChB,KAAK5F,EAAW8F,gBAChB,KAAK9F,EAAW+F,gBAChB,KAAK/F,EAAWgG,iBAChB,KAAKhG,EAAWiG,YAChB,KAAKjG,EAAWkG,iBAChB,KAAKlG,EAAWC,SAIjB,OAAOpiB,EAGDgI,iBAAiBohB,GACvB,OAAQA,GACP,KAAKjH,EAAW8E,SAChB,KAAK9E,EAAW+E,UAChB,KAAK/E,EAAW6E,cAChB,KAAK7E,EAAWgF,WACf,OAAO,EACR,QACC,OAAO,GAIHnf,eAAehI,EAAeopB,GACpC,OAAQA,GACP,KAAKjH,EAAW8E,SACfjnB,GAAS3D,EAAO0E,SAChB,MACD,KAAKohB,EAAWiF,aACfpnB,GAAS3D,EAAO0H,YAAc,EAC9B,MACD,KAAKoe,EAAW2F,UACf9nB,GAAS3D,EAAO8H,UAChB,MACD,KAAKge,EAAW6F,cACfhoB,GAAS3D,EAAOgI,cAChB,MACD,KAAK8d,EAAWmF,aAChB,KAAKnF,EAAWoF,cAChB,KAAKpF,EAAW6E,cAChB,KAAK7E,EAAWkF,OAChB,KAAKlF,EAAW+E,UAChB,KAAK/E,EAAWgF,WAChB,KAAKhF,EAAWqF,aAChB,KAAKrF,EAAWsF,aAChB,KAAKtF,EAAWuF,aAChB,KAAKvF,EAAWwF,aAChB,KAAKxF,EAAWyF,cAChB,KAAKzF,EAAW0F,cAChB,KAAK1F,EAAW4F,gBAChB,KAAK5F,EAAW8F,gBAChB,KAAK9F,EAAW+F,gBAChB,KAAK/F,EAAWgG,iBAChB,KAAKhG,EAAWiG,YAChB,KAAKjG,EAAWkG,iBAChB,KAAKlG,EAAWC,SAIjB,OAAOpiB,EAqDDgI,kBACN,OAAOmG,KAAKkB,kBAAoBlB,KAAKoB,kBAAoBpB,KAAKkb,gBAGxDrhB,kBAAkBuG,GACxB,OAAQA,GAAWJ,KAAKkB,mBAAqBd,EAAUJ,KAAKkB,kBAAoBlB,KAAKoB,kBAG/EvH,gBAAgBuG,GACtB,OAAQA,GAAWJ,KAAKkB,kBAAoBlB,KAAKoB,kBAG3CvH,cAAcshB,GAA4B,GAmBhD,GAlBAnb,KAAKob,MAAQ,EACbpb,KAAKpC,IAAM,EACXoC,KAAKqb,UAAY,EACjBrb,KAAKsb,WAAa,EAClBtb,KAAK2a,MAAQ,IACb3a,KAAKub,OAAS,EACdvb,KAAKwb,gBAAkB,mBACvBxb,KAAKyX,IAAM,GACXzX,KAAKyb,SAAWzb,KAAKyX,IAAMvpB,EAAO2K,aAClCmH,KAAK0b,YAAc,EACnB1b,KAAK2b,SAAW,GAChB3b,KAAK4b,mBAAqB,GAC1B5b,KAAK6b,OAAS,EACd7b,KAAK8b,sBAAwB,EAE7B9b,KAAK+b,MAAQ,WACbhf,SAASgf,MAAQniB,EAAac,mBAE1BygB,EAAkB,CACrBnb,KAAKkB,kBAAoB,EACzBlB,KAAKoB,kBAAoB,EACzBpB,KAAKkb,gBAAkB,EACvB,IAAK,IAAIc,EAAe,EAAGA,EAAehc,KAAKic,kBAAmBD,IAAgB,CAC7Ehc,KAAKkY,SAAS3pB,QAAUytB,IAC3Bhc,KAAKkY,SAAS8D,GAAgB,IAAItE,GAEnC,MAAMtX,EAAmBJ,KAAKkY,SAAS8D,GACvC5b,EAAQuX,OAAS5oB,KAAKmgB,IAAI,EAAI8M,EAAc,GAE5C,IAAK,IAAIE,EAAU,EAAGA,EAAUlc,KAAK4b,mBAAoBM,IACpD9b,EAAQyX,SAAStpB,QAAU2tB,EAC9B9b,EAAQyX,SAASqE,GAAW,IAAI5L,EAEhClQ,EAAQyX,SAASqE,GAAStL,QAG5BxQ,EAAQyX,SAAStpB,OAASyR,KAAK4b,mBAE/B,MAAM9K,EAA0BkL,GAAgBhc,KAAKkB,mBAAqB8a,EAAehc,KAAKkB,kBAAoBlB,KAAKoB,kBACjHgR,EAAwB4J,GAAgBhc,KAAKkB,kBAAoBlB,KAAKoB,kBAC5E,IAAK,IAAIoP,EAAa,EAAGA,EAAaxQ,KAAK8b,sBAAuBtL,IAC7DpQ,EAAQwX,YAAYrpB,QAAUiiB,IACjCpQ,EAAQwX,YAAYpH,GAAc,IAAI2B,EAAWrB,EAAgBsB,IAElEhS,EAAQwX,YAAYpH,GAAYqE,gBAAgBzC,EAAY,EAAyBtB,EAAc,EAAA,EAAgDA,EAAgBsB,GAEpKhS,EAAQwX,YAAYrpB,OAASyR,KAAK8b,sBAElC,IAAK,IAAIK,EAAM,EAAGA,EAAMnc,KAAK2b,SAAUQ,IACtC/b,EAAQ0X,KAAKqE,GAAOA,EAAM,EAAI,EAAI,EAEnC/b,EAAQ0X,KAAKvpB,OAASyR,KAAK2b,SAE5B3b,KAAKkY,SAAS3pB,OAASyR,KAAKic,mBAIvBpiB,iBACN,IAAIuiB,EACAvN,EAAmB,GAEvBA,EAAOlgB,KAAKqpB,EAAKqE,GACjBxN,EAAOlgB,KAAKif,EAAoBoK,EAAKsE,IAGrCzN,EAAOlgB,KAAI,IAGX,IAAI4tB,EAA2BC,mBAAmBxc,KAAK+b,OACvDlN,EAAOlgB,KAAKif,EAAoB2O,EAAiBhuB,QAAU,GAAIqf,EAA8C,GAA1B2O,EAAiBhuB,SAGpG,IAAK,IAAID,EAAY,EAAGA,EAAIiuB,EAAiBhuB,OAAQD,IACpDugB,EAAOlgB,KAAK4tB,EAAiBrO,WAAW5f,IAGzCugB,EAAOlgB,KAAI,IAA2Bif,EAAoB5N,KAAKkB,mBAAoB0M,EAAoB5N,KAAKoB,mBAAoBwM,EAAoB5N,KAAKkb,kBACzJrM,EAAOlgB,KAAI,IAAoBif,EAAoB5N,KAAKob,QAExDvM,EAAOlgB,KAAI,IAAkBif,EAAoB,IACjDiB,EAAOlgB,KAAI,IAAwBif,EAAoB5N,KAAKqb,WAAa,GAAIzN,EAAqC,GAAjB5N,KAAKqb,YACtGxM,EAAOlgB,KAAI,IAAsBif,EAAqB5N,KAAKsb,WAAa,GAAM,GAAI1N,EAAqB5N,KAAKsb,WAAa,EAAK,KAC9HzM,EAAOlgB,KAAI,IAAoBif,EAAoB5N,KAAK2a,OAAS,GAAI/M,EAAiC,GAAb5N,KAAK2a,QAC9F9L,EAAOlgB,KAAI,IAAqBif,EAAoB5N,KAAKub,SACzD1M,EAAOlgB,KAAI,GAAkBif,EAAoB5N,KAAKyX,MACtD5I,EAAOlgB,KAAI,GAAwBif,EAAoB5N,KAAK0b,YAAc,IAC1E7M,EAAOlgB,KAAI,IAAuBif,EAAqB5N,KAAK2b,SAAW,GAAM,GAAI/N,EAAqB5N,KAAK2b,SAAW,EAAK,KAC3H9M,EAAOlgB,KAAI,IAA2Bif,EAAqB5N,KAAK4b,mBAAqB,GAAM,GAAIhO,EAAqB5N,KAAK4b,mBAAqB,EAAK,KACnJ/M,EAAOlgB,KAAI,IAA8Bif,EAAoB5N,KAAK8b,sBAAwB,IAC1FjN,EAAOlgB,KAAI,IAAqBif,EAAoB5N,KAAK6b,SAGzDhN,EAAOlgB,KAAI,IACkB,GAAzBqR,KAAKuY,kBAA8C,GAAnBvY,KAAKwY,YAAuC,KAAlBxY,KAAKoY,WAA0C,GAAnBpY,KAAKmY,YAA4C,GAAvBnY,KAAKsY,gBAAsD,GAA7BtY,KAAKqY,sBAAkD,GAAnBrY,KAAKyY,YAC1L5J,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,MAAM/J,KAAKuY,iBAAmB,EAA4B,GAAxBvY,KAAKuY,iBAAwB,GAAmC,IAA7BvY,KAAKuY,iBAAmB,MAClI1J,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,MAAM/J,KAAKwY,WAAa,EAAsB,GAAlBxY,KAAKwY,WAAkB,EAAIxY,KAAKwY,cACjG3J,EAAOlgB,KAAKif,EAAoB5N,KAAKmY,aACrCtJ,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,OAAO/J,KAAKoY,UAAY,KAAU,OACvEvJ,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,MAAkC,GAA5B/J,KAAKqY,wBAChDxJ,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,MAA4B,GAAtB/J,KAAKsY,kBAChDzJ,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,MAAwB,GAAlB/J,KAAKyY,aAAoB,GAAI7K,EAAuD,GAAnC7e,KAAKgb,MAAwB,GAAlB/J,KAAKyY,eAG5G5J,EAAOlgB,KAAKif,EAAoB,KAGjCiB,EAAOlgB,KAAI,IACX,IAAK,IAAIyR,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAAW,CAE1E,IAAIqc,EAA6BD,mBAAmBxc,KAAKkY,SAAS9X,GAAStO,MAC3E+c,EAAOlgB,KAAKif,EAAoB6O,EAAmBluB,QAAU,GAAIqf,EAAgD,GAA5B6O,EAAmBluB,SAGxG,IAAK,IAAID,EAAY,EAAGA,EAAImuB,EAAmBluB,OAAQD,IACtDugB,EAAOlgB,KAAK8tB,EAAmBvO,WAAW5f,IAI5CugB,EAAOlgB,KAAI,KACX,IAAK,IAAIyR,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAC/DyO,EAAOlgB,KAAKif,EAAoB5N,KAAKkY,SAAS9X,GAASuX,SAGxD,IAAK,IAAIvX,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAC/D,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAK8b,sBAAuBxtB,IAAK,CAC5D,MAAMkiB,EAAyBxQ,KAAKkY,SAAS9X,GAASwX,YAAYtpB,GAqBlE,GApBAugB,EAAOlgB,KAAI,GAA8Bif,EAAoB4C,EAAWvb,OACxE4Z,EAAOlgB,KAAI,IAAqBif,EAAqB4C,EAAWxc,OAAS9F,EAAO0H,YAAc,GAAM,GAAIgY,EAAqB4C,EAAWxc,OAAS9F,EAAO0H,YAAc,EAAK,KAC3KiZ,EAAOlgB,KAAI,GAAsBif,EAAoB4C,EAAWoC,KAAO,GAAIhF,EAAqC,GAAjB4C,EAAWoC,MAC1G/D,EAAOlgB,KAAKif,EAAoB4C,EAAWqC,WAC3ChE,EAAOlgB,KAAI,GAAqBif,EAAqB4C,EAAW0C,OAAShlB,EAAO8H,WAAc,GAAI4X,EAAqB4C,EAAW0C,OAAShlB,EAAO8H,UAAa,KAC/J6Y,EAAOlgB,KAAI,IAAqBif,EAAoB4C,EAAWnW,QAAU,GAAIuT,EAAwC,GAApB4C,EAAWnW,SAC5GwU,EAAOlgB,KAAI,IAAsBif,EAAoB4C,EAAW1V,UAG7C,GAAf0V,EAAWvb,OACd4Z,EAAOlgB,KAAI,IAAyBif,EAAoB4C,EAAW3V,aAEnEgU,EAAOlgB,KAAKif,GAAqB4C,EAAWwC,oBAC5CnE,EAAOlgB,KAAKif,GAAqB4C,EAAWyC,sBAC5CpE,EAAOlgB,KAAI,IAA2Bif,EAAoB4C,EAAW+B,eACrE1D,EAAOlgB,KAAI,IAA8Bif,EAAoB4C,EAAWvV,kBACxE4T,EAAOlgB,KAAI,IAA6Bif,EAAoB4C,EAAWtV,iBACvE2T,EAAOlgB,KAAI,GAAoBif,EAAoB4C,EAAWzV,SAG5C,GAAfyV,EAAWvb,KACd4Z,EAAOlgB,KAAI,IAAmBif,EAAoB4C,EAAW6B,WAC7DxD,EAAOlgB,KAAI,GAAsBif,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWlN,EAAO8G,SAASzG,SACzCsgB,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOlgB,KAAKif,EAAoB4C,EAAWiC,eAC3C5D,EAAOlgB,KAAKif,EAAoB4C,EAAWkC,eAC3C7D,EAAOlgB,KAAKif,EAAoB4C,EAAWmC,eAGpB,GAApBnC,EAAWzV,QACd8T,EAAOlgB,KAAI,GAA4Bif,EAAoB4C,EAAWsC,gBACtEjE,EAAOlgB,KAAKif,GAAqB4C,EAAWuC,kBAE7ClE,EAAOlgB,KAAI,IAAuBif,EAAoB4C,EAAWrV,gBAC3D,GAAmB,GAAfqV,EAAWvb,KAA2B,CAChD4Z,EAAOlgB,KAAI,GAAsBif,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWlN,EAAO8G,SAASzG,SACzCsgB,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOlgB,KAAKif,EAAoB4C,EAAWiC,eAC3C5D,EAAOlgB,KAAKif,EAAoB4C,EAAWkC,eAC3C7D,EAAOlgB,KAAKif,EAAoB4C,EAAWmC,eAGpB,GAApBnC,EAAWzV,QACd8T,EAAOlgB,KAAI,GAA4Bif,EAAoB4C,EAAWsC,gBACtEjE,EAAOlgB,KAAKif,GAAqB4C,EAAWuC,kBAE7ClE,EAAOlgB,KAAI,IAAuBif,EAAoB4C,EAAWrV,WACjE0T,EAAOlgB,KAAI,GAAwBif,EAAoB4C,EAAWlV,YAClEuT,EAAOlgB,KAAI,GAA2Bif,EAAoB4C,EAAWjV,eACrEsT,EAAOlgB,KAAI,GAAgCif,EAAoB4C,EAAWhV,oBAC1EqT,EAAOlgB,KAAI,GAA+Bif,EAAoB4C,EAAW/U,mBAEzEoT,EAAOlgB,KAAI,IACX,IAAK,IAAI+tB,EAAY,EAAGA,EAAIxuB,EAAOyI,cAAe+lB,IACjD7N,EAAOlgB,KAAKif,EAAoB4C,EAAW9U,UAAUghB,GAAG/gB,YAEzDkT,EAAOlgB,KAAI,IACX,IAAK,IAAI+tB,EAAY,EAAGA,EAAIxuB,EAAOyI,cAAe+lB,IACjD7N,EAAOlgB,KAAKif,EAAoB4C,EAAW9U,UAAUghB,GAAG5rB,YAEzD+d,EAAOlgB,KAAI,IACX,IAAK,IAAI+tB,EAAY,EAAGA,EAAIxuB,EAAOyI,cAAe+lB,IACjD7N,EAAOlgB,KAAKif,EAAoB4C,EAAW9U,UAAUghB,GAAG9gB,gBAEnD,GAAmB,GAAf4U,EAAWvb,KAAuC,CAC5D4Z,EAAOlgB,KAAI,IAAmBif,EAAoB4C,EAAW6B,WAC7DxD,EAAOlgB,KAAI,GAAsBif,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWlN,EAAO8G,SAASzG,SACzCsgB,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOlgB,KAAKif,EAAoB4C,EAAWiC,eAC3C5D,EAAOlgB,KAAKif,EAAoB4C,EAAWkC,eAC3C7D,EAAOlgB,KAAKif,EAAoB4C,EAAWmC,eAGpB,GAApBnC,EAAWzV,QACd8T,EAAOlgB,KAAI,GAA4Bif,EAAoB4C,EAAWsC,gBACtEjE,EAAOlgB,KAAKif,GAAqB4C,EAAWuC,kBAE7ClE,EAAOlgB,KAAI,IAAuBif,EAAoB4C,EAAWrV,WAEjE0T,EAAOlgB,KAAI,IAEX,IAAK,IAAI8d,EAAY,EAAGA,EAAI,GAAIA,IAC/BoC,EAAOlgB,KAAKif,EAAqB4C,EAAW3U,eAAe4Q,GAAK,UAE3D,GAAmB,GAAf+D,EAAWvb,KACrB4Z,EAAOlgB,KAAI,IAAmBif,EAAoB4C,EAAW8B,YAErC,GAApB9B,EAAWzV,QACd8T,EAAOlgB,KAAI,GAA4Bif,EAAoB4C,EAAWsC,gBACtEjE,EAAOlgB,KAAKif,GAAqB4C,EAAWuC,kBAE7ClE,EAAOlgB,KAAI,IAAuBif,EAAoB4C,EAAWrV,gBAC3D,GAAmB,GAAfqV,EAAWvb,KAAiC,CACtD4Z,EAAOlgB,KAAI,IACX,MAAMguB,EAA+B,IAAInO,EACzC,IAAK,IAAIlgB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDquB,EAAahO,MAAMzgB,EAAO2J,yBAA0B2Y,EAAW0D,aAAahY,SAAS5N,IAEtFquB,EAAaC,aAAa/N,GAC1BA,EAAOlgB,KAAI,GAAsBif,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWlN,EAAO8G,SAASzG,SACzCsgB,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOlgB,KAAKif,EAAoB4C,EAAWiC,eAC3C5D,EAAOlgB,KAAKif,EAAoB4C,EAAWkC,eAC3C7D,EAAOlgB,KAAKif,EAAoB4C,EAAWmC,eAEpB,GAApBnC,EAAWzV,QACd8T,EAAOlgB,KAAI,GAA4Bif,EAAoB4C,EAAWsC,gBACtEjE,EAAOlgB,KAAKif,GAAqB4C,EAAWuC,kBAE7ClE,EAAOlgB,KAAI,IAAuBif,EAAoB4C,EAAWrV,gBAC3D,GAAmB,GAAfqV,EAAWvb,KAAgC,CACrD4Z,EAAOlgB,KAAI,KACX,IAAK,IAAI8d,EAAY,EAAGA,EAAIve,EAAOyK,UAAW8T,IAC7CoC,EAAOlgB,KAAKif,EAAoB4C,EAAWgD,iBAAiB/G,KAG7DoC,EAAOlgB,KAAI,IACX,MAAMguB,EAA+B,IAAInO,EACzC,IAAK,IAAI/B,EAAY,EAAGA,EAAIve,EAAOyK,UAAW8T,IAC7C,IAAK,IAAIne,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDquB,EAAahO,MAAMzgB,EAAO2J,yBAA0B2Y,EAAWiD,qBAAqBhH,GAAGvQ,SAAS5N,IAGlGquB,EAAaC,aAAa/N,QACpB,GAAmB,GAAf2B,EAAWvb,KAAkC,CACvD4Z,EAAOlgB,KAAI,GAAsBif,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWlN,EAAO8G,SAASzG,SACzCsgB,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOlgB,KAAKif,EAAoB4C,EAAWiC,eAC3C5D,EAAOlgB,KAAKif,EAAoB4C,EAAWkC,eAC3C7D,EAAOlgB,KAAKif,EAAoB4C,EAAWmC,eAGpB,GAApBnC,EAAWzV,QACd8T,EAAOlgB,KAAI,GAA4Bif,EAAoB4C,EAAWsC,gBACtEjE,EAAOlgB,KAAKif,GAAqB4C,EAAWuC,kBAE7ClE,EAAOlgB,KAAI,IAAuBif,EAAoB4C,EAAWrV,WAEjE0T,EAAOlgB,KAAI,IACX,MAAMkuB,EAAgC,IAAIrO,EAC1C,IAAK,IAAIlgB,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1DuuB,EAAclO,MAAMzgB,EAAO8J,0BAA2BwY,EAAW+C,cAAczX,UAAUxN,IAE1FuuB,EAAcD,aAAa/N,QACrB,GAAmB,GAAf2B,EAAWvb,KACrB4Z,EAAOlgB,KAAI,GAAsBif,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWlN,EAAO8G,SAASzG,SACzCsgB,EAAOlgB,KAAKif,EAAoB7e,KAAKgb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOlgB,KAAKif,EAAoB4C,EAAWiC,eAC3C5D,EAAOlgB,KAAKif,EAAoB4C,EAAWkC,eAC3C7D,EAAOlgB,KAAKif,EAAoB4C,EAAWmC,eAGpB,GAApBnC,EAAWzV,QACd8T,EAAOlgB,KAAI,GAA4Bif,EAAoB4C,EAAWsC,gBACtEjE,EAAOlgB,KAAKif,GAAqB4C,EAAWuC,kBAE7ClE,EAAOlgB,KAAI,GAAyBif,EAAoB4C,EAAWxU,YAAa4R,EAAoB4C,EAAWvU,gBAC/G4S,EAAOlgB,KAAI,IAAuBif,EAAoB4C,EAAWrV,gBAC3D,GAAmB,GAAfqV,EAAWvb,KAIrB,MAAM,IAAIlF,MAAM,4BAKnB8e,EAAOlgB,KAAI,IACXytB,EAAO,IAAI5N,EACX,IAAIsO,EAAqB,EACzB,KAAQ,GAAKA,EAAc9c,KAAK4b,mBAAqB,GAAGkB,IACxD,IAAK,IAAI1c,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAAW,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAK2b,SAAUrtB,IACrH8tB,EAAKzN,MAAMmO,EAAY9c,KAAKkY,SAAS9X,GAAS0X,KAAKxpB,IAEpD8tB,EAAKQ,aAAa/N,GAElBA,EAAOlgB,KAAI,KACXytB,EAAO,IAAI5N,EACX,MAAMuO,EAA4B,IAAIvO,EACtC,IAAIwO,EAA+B,EACnC,KAAQ,GAAKA,EAAwBhd,KAAK8b,uBAAuBkB,IACjE,IAAK,IAAI5c,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAAW,CAE1E,MAAM0Q,EAA0B9Q,KAAKid,kBAAkB7c,GACjDgS,EAAwBpS,KAAKkd,gBAAgB9c,GAGnD,GAAIgS,EACH,IAAK,IAAI+K,EAA0B,EAAGA,EAAkBnd,KAAK8b,sBAAuBqB,IAAmB,CAEtG,IAAI3M,EAAyBxQ,KAAKkY,SAAS9X,GAASwX,YAAYuF,GAEhE,IAAK,IAAItJ,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAAO,CACvD,MAAMuJ,EAAuB5M,EAAWkD,YAAYG,GAC9C0G,EAAqB/J,EAAWlP,YAAYuS,GAC5C2G,EAAwBhK,EAAWmD,eAAeE,GAClDiH,EAAqBtK,EAAWoD,YAAYC,GAElDuI,EAAKzN,MAAM,EAAGyO,GAGVA,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,aAC/DlB,EAAKzN,MAAM,EAAG4L,GACd6B,EAAKzN,MAAMqO,EAAsBxC,IAI9B4C,GAAatJ,EAAUC,QAC1BqI,EAAKzN,MAAM,EAAGmM,IAMlB,MAAMyC,EAAwBzM,GAAkBsB,EAAgB,EAAIpS,KAAKkY,SAAS9X,GAASuX,OAAS3X,KAAKyX,IACzG,IAAI+F,GAAsB1M,GAAkBsB,EAAgB,EAAIpS,KAAKyX,KAAO8F,EAC5E,MAAME,EAA0BrL,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAMtB,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GACpI4M,EAAsB,GAE5B,IAAK,IAAIpvB,EAAY,EAAGA,EAAImvB,EAAclvB,OAAQD,IACjDmvB,EAAcnvB,IAAMivB,EAErB,IAAK,MAAMrB,KAAWlc,KAAKkY,SAAS9X,GAASyX,SAG5C,GAFAuE,EAAKzN,MAAMqO,EAAsBd,EAAQ1L,YAErC0L,EAAQ3L,MAAMhiB,OAAS,EAAG,CAC7B6tB,EAAKzN,MAAM,EAAG,GAEd,IAAIgP,EAAkB,EACtB,IAAK,MAAMlN,KAAQyL,EAAQ3L,MAAO,CAG7BE,EAAKlB,MAAQoO,GAAWvL,IAC3BgK,EAAKzN,MAAM,EAAG,GACdyN,EAAKzN,MAAM,EAAG,GACdyN,EAAKwB,kBAAkBD,EAAUlN,EAAKlB,QAGnCkB,EAAKlB,MAAQoO,IAChBvB,EAAKzN,MAAM,EAAG,GACVyD,GAAcgK,EAAKzN,MAAM,EAAG,GAChCyN,EAAKwB,kBAAkBnN,EAAKlB,MAAQoO,IAGrCZ,EAAU7c,QAOiB,GAAvBuQ,EAAKf,QAAQnhB,OAChBwuB,EAAUpO,MAAM,EAAG,IAEnBoO,EAAUpO,MAAM,EAAG,GACnBoO,EAAUpO,MAAM,EAAG8B,EAAKf,QAAQnhB,OAAS,IAG1CwuB,EAAUc,cAAcpN,EAAKd,KAAKphB,OAAS,GAEtC6jB,EAIJ2K,EAAUpO,MAAM,EAAG8B,EAAKd,KAAK,GAAG3b,QAHhC+oB,EAAUpO,MAAM,EAAG8B,EAAKd,KAAK,GAAG3b,QAMjC,IAAI8pB,EAAoB,EACpBC,EAAqBtN,EAAKf,QAAQ,GAClCsO,EAAuBD,EAC3B,MAAME,EAAuB,GAC7B,IAAK,IAAI3vB,EAAY,EAAGA,EAAImiB,EAAKd,KAAKphB,OAAQD,IAAK,CAClD,MAAM6hB,EAAeM,EAAKd,KAAKrhB,GACzB4vB,EAAoBH,EAAa5N,EAAIhV,SACvC6iB,GAAgBE,GACnBnB,EAAUpO,MAAM,EAAG,GACnBsP,EAAWtvB,KAAKuvB,GAChBF,EAAeE,GAEfnB,EAAUpO,MAAM,EAAG,GAEpBoO,EAAUa,kBAAkBzN,EAAInB,KAAO8O,GACvCA,EAAY3N,EAAInB,KAEXoD,EAIJ2K,EAAUpO,MAAM,EAAGwB,EAAInc,QAHvB+oB,EAAUpO,MAAM,EAAGwB,EAAInc,QAOzB,MAAMmqB,EAAsBC,OAAOC,aAAaC,MAAM,KAAMvB,EAAUH,aAAa,KAC7E2B,EAAqBb,EAAa/I,QAAQwJ,IAC7B,GAAfI,GACHnC,EAAKzN,MAAM,EAAG,GACdyN,EAAK/L,OAAO0M,KAEZX,EAAKzN,MAAM,EAAG,GACdyN,EAAK1N,cAAc,EAAG,EAAG6P,GACzBb,EAAac,OAAOD,EAAY,IAEjCb,EAAae,QAAQN,GACjBT,EAAanvB,OAAS,IAAImvB,EAAagB,MAE3C,MAAMC,EAAuBlO,EAAKf,QAAQW,OAAO4N,GACjD,IAAK,IAAI3vB,EAAY,EAAGA,EAAIqwB,EAAWpwB,OAAQD,IAAK,CACnD,MAAMghB,EAAgBqP,EAAWrwB,GAC3BswB,EAAqBnB,EAAc9I,QAAQrF,GACjD,IAAmB,GAAfsP,EAAkB,CACrB,IAAIzjB,EAAmB,EACnB0jB,EAAoBrB,EACxB,GAAIqB,EAAYvP,EACf,KAAOuP,GAAavP,GACnBuP,KACyC,GAArCpB,EAAc9I,QAAQkK,IAAkB1jB,SAG7C,KAAO0jB,GAAavP,GACnBuP,KACyC,GAArCpB,EAAc9I,QAAQkK,IAAkB1jB,IAG9CihB,EAAKzN,MAAM,EAAG,GACdyN,EAAK0C,mBAAmB3jB,QAExBihB,EAAKzN,MAAM,EAAG,GACdyN,EAAKzN,MAAM,EAAGiQ,GACdnB,EAAce,OAAOI,EAAY,GAElCnB,EAAcgB,QAAQnP,GAClBmO,EAAclvB,OAAS,IAAIkvB,EAAciB,MAG5ClB,EADGlvB,GAAKmiB,EAAKf,QAAQnhB,OAAS,EAClBkiB,EAAKf,QAAQ,GAEbJ,EAGdqO,EAAUlN,EAAKjB,IAGZmO,EAAU3d,KAAK0b,YAAcxtB,EAAOqF,eAAiB6e,IACxDgK,EAAKzN,MAAM,EAAG,GACVyD,GAAcgK,EAAKzN,MAAM,EAAG,GAChCyN,EAAKwB,kBAAkB5d,KAAK0b,YAAcxtB,EAAOqF,eAAiB6e,EAAgBuL,SAGnFvB,EAAKzN,MAAM,EAAG,GAKjB,IAAIoQ,EAAuB3C,EAAK4C,eAC5BC,EAAmB,GACvB,KAAOF,EAAe,GACrBE,EAAOR,QAAQ7Q,EAAmC,GAAfmR,IACnCA,IAA+B,EAEhClQ,EAAOlgB,KAAKif,EAAoBqR,EAAO1wB,SACvC0O,MAAMiiB,UAAUvwB,KAAK2vB,MAAMzP,EAAQoQ,GACnC7C,EAAKQ,aAAa/N,GAElB,MAAMsQ,EAAuB,KAC7B,GAAItQ,EAAOtgB,OAAS4wB,EAEnB,OAAOf,OAAOC,aAAaC,MAAM,KAAMzP,GACjC,CACN,IAAI9c,EAAiB,GACrB,IAAK,IAAIzD,EAAY,EAAGA,EAAIugB,EAAOtgB,OAAQD,GAAK6wB,EAC/CptB,GAAUqsB,OAAOC,aAAaC,MAAM,KAAMzP,EAAOuQ,MAAM9wB,EAAGA,EAAI6wB,IAE/D,OAAOptB,GAIF8H,iBAAiBwlB,GACvB,GAAkB,MAAdA,GAAoC,IAAdA,EAEzB,YADArf,KAAKgb,eAAc,GAGpB,IAAIsE,EAAoB,EAExB,KAAOD,EAAWnR,WAAWoR,IAAU,IAAoBA,IAI3D,GAFoC,IAAhCD,EAAWnR,WAAWoR,IAA6BA,IAEnB,KAAhCD,EAAWnR,WAAWoR,GAEzB,YADAtf,KAAKuf,eAAeC,KAAKC,MAAmB,GAAbH,EAAiBD,EAAaA,EAAWK,UAAUJ,KAKnF,IAAIK,EAAkB,UAGH,KAJSN,EAAWnR,WAAWoR,KAKjDK,EAAU,UACVL,KAOD,MAAM7kB,EAAkBoT,EAAoBwR,EAAWnR,WAAWoR,MAElE,GAAe,WAAXK,KAAqC,GAAZllB,GAAiBA,EAAUud,EAAK4H,GAAyBnlB,EAAUud,EAAK6H,GAAwB,OAC7H,GAAe,WAAXF,KAAqC,GAAZllB,GAAiBA,EAAUud,EAAKsE,GAAyB7hB,EAAUud,EAAK8H,GAAwB,OAI7H,MAAMC,EAAqBtlB,EAAU,EAC/BulB,EAAuBvlB,EAAU,EACjCwlB,EAAsBxlB,EAAU,EAChCylB,EAAsBzlB,EAAU,EAChC0lB,EAAqB1lB,EAAU,EAC/B2lB,EAAuB3lB,EAAU,EACjC4lB,EAAuB5lB,EAAU,EAGvC,GAFAuF,KAAKgb,cAAyB,WAAX2E,GAAwBQ,GAEvCH,GAA0B,WAAXL,EAAsB,CAExC,IAAK,MAAMvf,KAAWJ,KAAKkY,SAAU9X,EAAQwX,YAAY,GAAG/c,WAAa,EACzEmF,KAAKkY,SAAS,GAAGN,YAAY,GAAGtF,UAAY,EAG7C,IAGIgO,EACAlgB,EAJAmgB,EAAoC,EACpCC,GAAmC,EACnCC,EAAyB,GAGzBC,GAA6B,EAC7BpvB,GAA6B,EACjC,KAAOguB,EAAYD,EAAW9wB,eAAgB+xB,EAAUjB,EAAWnR,WAAWoR,MAC7E,KAAA,GAEC,IAAIqB,GAAkB9S,EAAoBwR,EAAWnR,WAAWoR,OAAiB,GAAKzR,EAAoBwR,EAAWnR,WAAWoR,MAChItf,KAAK+b,MAAQ6E,mBAAmBvB,EAAWK,UAAUJ,EAAWA,EAAYqB,IAC5E5jB,SAASgf,MAAQ/b,KAAK+b,MAAQ,MAAQniB,EAAac,mBAEnD4kB,GAAaqB,EACZ,MACF,KAAA,IACC3gB,KAAKkB,kBAAoB2M,EAAoBwR,EAAWnR,WAAWoR,MACnEtf,KAAKoB,kBAAoByM,EAAoBwR,EAAWnR,WAAWoR,MAGlEtf,KAAKkb,gBAFS,WAAXyE,GAAwBI,EAEJ,EAGAlS,EAAoBwR,EAAWnR,WAAWoR,MAElEtf,KAAKkB,kBAAoBkO,EAAclhB,EAAOkK,qBAAsBlK,EAAOmK,qBAAsB2H,KAAKkB,mBACtGlB,KAAKoB,kBAAoBgO,EAAclhB,EAAOoK,qBAAsBpK,EAAOqK,qBAAsByH,KAAKoB,mBACtGpB,KAAKkb,gBAAkB9L,EAAclhB,EAAOsK,mBAAoBtK,EAAOuK,mBAAoBuH,KAAKkb,iBAEhG,IAAK,IAAIc,EAAehc,KAAKkY,SAAS3pB,OAAQytB,EAAehc,KAAKic,kBAAmBD,IACpFhc,KAAKkY,SAAS8D,GAAgB,IAAItE,EAEnC1X,KAAKkY,SAAS3pB,OAASyR,KAAKic,kBAC3B,MACF,KAAA,IACCjc,KAAKob,MAAQvN,EAAoBwR,EAAWnR,WAAWoR,MAExC,WAAXK,IAAsB3f,KAAKob,MAAQ,GACtC,MACF,KAAA,IAMCkE,IACAtf,KAAKpC,IAAM,EACV,MACF,KAAA,IAEEoC,KAAKqb,UADF6E,GAAyB,WAAXP,EACA9R,EAAoBwR,EAAWnR,WAAWoR,OAEzCzR,EAAoBwR,EAAWnR,WAAWoR,OAAiB,GAAKzR,EAAoBwR,EAAWnR,WAAWoR,MAE5H,MACF,KAAA,IAEEtf,KAAKsb,WADF4E,GAAyB,WAAXP,EACC9R,EAAoBwR,EAAWnR,WAAWoR,OAEzCzR,EAAoBwR,EAAWnR,WAAWoR,OAAiB,GAAKzR,EAAoBwR,EAAWnR,WAAWoR,MAAgB,EAE7I,MACF,KAAA,IAEEtf,KAAK2a,MADFsF,GAAyB,WAAXN,EACJ,CAAC,GAAI,IAAK,IAAK,KAAK9R,EAAoBwR,EAAWnR,WAAWoR,OACjEc,GAA0B,WAAXT,EACZ,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK9R,EAAoBwR,EAAWnR,WAAWoR,OAEnHzR,EAAoBwR,EAAWnR,WAAWoR,OAAiB,EAAMzR,EAAoBwR,EAAWnR,WAAWoR,MAE1Htf,KAAK2a,MAAQ1L,EAAM/gB,EAAO0E,SAAU1E,EAAO2E,SAAW,EAAGmN,KAAK2a,OAC7D,MACF,KAAA,IACgB,WAAXgF,GACH3f,KAAKub,OAAmE,EAA1D1N,EAAoBwR,EAAWnR,WAAWoR,MACxDtf,KAAKub,OAAStM,EAAM,EAAG/gB,EAAO4E,YAAakN,KAAKub,UAGhDvb,KAAKub,OAAS1N,EAAoBwR,EAAWnR,WAAWoR,MACxDtf,KAAKub,OAAStM,EAAM,EAAG/gB,EAAO4E,YAAakN,KAAKub,SAEhD,MACF,KAAA,IACK8E,GAA4B,WAAXV,GAAmC,WAAXA,EAI5C3f,KAAKyX,IAAM5J,EAAoBwR,EAAWnR,WAAWoR,OAHrDtf,KAAKyX,IAAM,GACX6H,KAIA,MACF,KAAA,GAEEtf,KAAK0b,YADFsE,GAA0B,WAAXL,EACC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAI9R,EAAoBwR,EAAWnR,WAAWoR,OAE3DzR,EAAoBwR,EAAWnR,WAAWoR,MAAgB,EAE9Etf,KAAK0b,YAAc3sB,KAAKmgB,IAAIhhB,EAAO6E,eAAgBhE,KAAKyB,IAAItC,EAAO8E,eAAgBgN,KAAK0b,cACvF,MACF,KAAA,IAA2B,CAC1B,MAAMC,GAAoB9N,EAAoBwR,EAAWnR,WAAWoR,OAAiB,GAAKzR,EAAoBwR,EAAWnR,WAAWoR,MAAgB,EACpJtf,KAAK2b,SAAWvM,EAAclhB,EAAO+E,YAAa/E,EAAOgF,YAAayoB,GACtE,IAAK,IAAIvb,EAAU,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAAW,CAClE,IAAK,IAAI+b,EAAMnc,KAAKkY,SAAS9X,GAAS0X,KAAKvpB,OAAQ4tB,EAAMnc,KAAK2b,SAAUQ,IACvEnc,KAAKkY,SAAS9X,GAAS0X,KAAKqE,GAAQA,EAAM,EAAK,EAAI,EAEpDnc,KAAKkY,SAAS9X,GAAS0X,KAAKvpB,OAASyR,KAAK2b,UAE1C,MACF,KAAA,IAEE3b,KAAK4b,mBADS,WAAX+D,GAAwBU,EACDxS,EAAoBwR,EAAWnR,WAAWoR,MAAgB,GAEzDzR,EAAoBwR,EAAWnR,WAAWoR,OAAiB,GAAKzR,EAAoBwR,EAAWnR,WAAWoR,MAAgB,EAEtJtf,KAAK4b,mBAAqBxM,EAAc,EAAGlhB,EAAOgF,YAAa8M,KAAK4b,oBACpE,IAAK,IAAIxb,EAAU,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAAW,CAClE,IAAK,IAAI8b,EAAUlc,KAAKkY,SAAS9X,GAASyX,SAAStpB,OAAQ2tB,EAAUlc,KAAK4b,mBAAoBM,IAC7Flc,KAAKkY,SAAS9X,GAASyX,SAASqE,GAAW,IAAI5L,EAEhDtQ,KAAKkY,SAAS9X,GAASyX,SAAStpB,OAASyR,KAAK4b,mBAE9C,MACF,KAAA,IAAkC,CACjC,MAAME,EAAgCjO,EAAoBwR,EAAWnR,WAAWoR,MAAgB,EAChGtf,KAAK8b,sBAAwB1M,EAAclhB,EAAOmF,yBAA0BnF,EAAOoF,yBAA0BwoB,GAC7G,IAAK,IAAI1b,EAAU,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAAW,CAClE,MAAM0Q,EAA0B1Q,GAAWJ,KAAKkB,mBAAqBd,EAAUJ,KAAKkB,kBAAoBlB,KAAKoB,kBACvGgR,EAAwBhS,GAAWJ,KAAKkB,kBAAoBlB,KAAKoB,kBACvE,IAAK,IAAI+b,EAAkBnd,KAAKkY,SAAS9X,GAASwX,YAAYrpB,OAAQ4uB,EAAkBnd,KAAK8b,sBAAuBqB,IACnHnd,KAAKkY,SAAS9X,GAASwX,YAAYuF,GAAmB,IAAIhL,EAAWrB,EAAgBsB,GAGtF,GADApS,KAAKkY,SAAS9X,GAASwX,YAAYrpB,OAASyR,KAAK8b,sBAC7CqE,GAAwB,WAAXR,EAChB,IAAK,IAAIxC,EAAkB,EAAGA,EAAkBnd,KAAK8b,sBAAuBqB,IAC3End,KAAKkY,SAAS9X,GAASwX,YAAYuF,GAAiBtI,gBAAgB/D,EAAc,EAAA,EAA+CA,EAAgBsB,IAInJ,MACF,KAAA,IACCpS,KAAK6b,OAAShO,EAAoBwR,EAAWnR,WAAWoR,OAEzC,WAAXK,GAAwBK,GAA0B,WAAXL,KAEvB,GAAf3f,KAAK6b,QAA8B,GAAf7b,KAAK6b,SAC5B6E,GAAoB,GAGjB1gB,KAAK6b,QAAU,IAClBvqB,GAAoB,IAGrB,MACF,KAAA,IACC,GAAI0uB,GAA0B,WAAXL,EAClBvf,EAAUyN,EAAoBwR,EAAWnR,WAAWoR,MAEpDtf,KAAKkY,SAAS9X,GAASuX,OAAS1I,EAAM,EAAG/gB,EAAO4K,qBAAuB,EAAG+U,EAAoBwR,EAAWnR,WAAWoR,OACpHmB,EAAargB,GAAW6O,EAAM,EAAG/gB,EAAO4K,uBAA0B+nB,OAAOC,aAAaC,QAAQ,iBAAmB,KAAQ,EAAG/gB,KAAKkY,SAAS9X,GAASuX,aAEnJ,IAAKvX,EAAU,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAEnDJ,KAAKkY,SAAS9X,GAASuX,OAAS1I,EAAM,EAAG/gB,EAAO4K,qBAAuB,EAAG+U,EAAoBwR,EAAWnR,WAAWoR,OACpHmB,EAAargB,GAAW6O,EAAM,EAAG/gB,EAAO4K,uBAA0B+nB,OAAOC,aAAaC,QAAQ,iBAAmB,KAAQ,EAAG/gB,KAAKkY,SAAS9X,GAASuX,QAGpJ,MACF,KAAA,GAAkC,CACjC6I,IACIA,GAA2BxgB,KAAK8b,wBACnCyE,IACAC,EAA0B,GAE3BpR,EAAc,EAAGpP,KAAKkY,SAAS3pB,OAAS,EAAGgyB,GAC3C,MAAM/P,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAC9EQ,EAAyB/R,EAAM,EAAC,EAAyBpB,EAAoBwR,EAAWnR,WAAWoR,OACzG9O,EAAWqE,gBAAgBmM,EAAgBT,GAA6BvgB,KAAKkB,mBAAqBqf,EAA4BvgB,KAAKkB,kBAAoBlB,KAAKoB,kBAAmBmf,GAA6BvgB,KAAKkB,kBAAoBlB,KAAKoB,mBACtOsf,IACHlQ,EAAWsC,cAAgB,GAExBxhB,IACHkf,EAAWuC,gBAAiB,GAE5B,MACF,KAAA,IAAyB,CACxB,MAAMjZ,EAAuB+T,EAAoBwR,EAAWnR,WAAWoR,OAAiB,EAAMzR,EAAoBwR,EAAWnR,WAAWoR,MACxItf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBnmB,OAASP,EACtF,MACF,KAAA,IACC,GAAIkmB,GAA0B,WAAXL,EAAsB,CACxC,MAAMsB,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjD7gB,EAAkByN,EAAoBwR,EAAWnR,WAAWoR,MAClEtf,KAAKkY,SAAS9X,GAASwX,YAAY,GAAGvF,SAAWpD,EAAM,EAAG/gB,EAAO6F,UAAUxF,OAA+E,EAAvE0yB,EAAYpT,EAAoBwR,EAAWnR,WAAWoR,aACnI,GAAIa,GAAwB,WAAXR,EAAsB,CAC7C,MAAMsB,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD,IAAK,IAAI7gB,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAC/D,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAK8b,sBAAuBxtB,IACnD8R,GAAWJ,KAAKkB,kBACnBlB,KAAKkY,SAAS9X,GAASwX,YAAYtpB,GAAGgkB,UAAYrD,EAAM,EAAG/gB,EAAOoB,WAAWf,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAE/Htf,KAAKkY,SAAS9X,GAASwX,YAAYtpB,GAAG+jB,SAAWpD,EAAM,EAAG/gB,EAAO6F,UAAUxF,OAA+E,EAAvE0yB,EAAYpT,EAAoBwR,EAAWnR,WAAWoR,aAItI,GAAIc,GAA0B,WAAXT,EAAsB,CAC/C,MAAMsB,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnDV,GAA6BvgB,KAAKkB,kBACrClB,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBlO,UAAYrD,EAAM,EAAG/gB,EAAOoB,WAAWf,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAEvKtf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBnO,SAAWpD,EAAM,EAAG/gB,EAAO6F,UAAUxF,OAA+E,EAAvE0yB,EAAYpT,EAAoBwR,EAAWnR,WAAWoR,aAG9KiB,GAA6BvgB,KAAKkB,kBACrClB,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBlO,UAAYrD,EAAM,EAAG/gB,EAAOoB,WAAWf,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAEvKtf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBnO,SAAWpD,EAAM,EAAG/gB,EAAO6F,UAAUxF,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAGtK,MACF,KAAA,IACC,GAAIc,GAA0B,WAAXT,EAAsB,CACxC,MAAMvK,EAA2B,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/CC,EAA6B,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAClDC,EAAwB,CAAC,OAAQ,SAAU,SAAU,OAAQ,eAAgB,eAAgB,cAEnG,GAAI0K,GAA0B,WAAXL,EAAsB,CACxCvf,EAAUyN,EAAoBwR,EAAWnR,WAAWoR,MACpD,MAAM9O,EAAyBxQ,KAAKkY,SAAS9X,GAASwX,YAAY,GAC5DhC,EAAuB,CAAC,EAAG,EAAG,EAAG,GAAG3G,EAAM,EAAGqG,EAAY/mB,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,QACjH9O,EAAW+B,aAAe6C,EAAeQ,GACzCpF,EAAWtV,eAAiBma,EAAiBO,GAC7CpF,EAAWvV,gBAAkB,OACvB,GAAIklB,GAAwB,WAAXR,EACvB,IAAKvf,EAAU,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IACnD,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAK8b,sBAAuBxtB,IAAK,CAC5D,MAAMkiB,EAAyBxQ,KAAKkY,SAAS9X,GAASwX,YAAYtpB,GAC5DsnB,EAAuB3G,EAAM,EAAGqG,EAAY/mB,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,MAAgB,GAChHlf,EAAUJ,KAAKkB,mBAClBsP,EAAW+B,aAAe6C,EAAeQ,GACzCpF,EAAWtV,eAAiBma,EAAiBO,GAC7CpF,EAAWvV,gBAAkB,IAE7BuV,EAAW+B,aAAe,GAC1B/B,EAAWtV,eAAiB,EAC5BsV,EAAWvV,gBAAkB,OAI1B,CACN,MAAM2a,EAAuB3G,EAAM,EAAGqG,EAAY/mB,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAC9F9O,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GACpFhQ,EAAW+B,aAAe6C,EAAeQ,GACzCpF,EAAWtV,eAAiBma,EAAiBO,GAC7CpF,EAAWvV,gBAAkB,OAExB,CACyB+E,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GACzEjO,aAAetD,EAAM,EAAG/gB,EAAOqG,kBAAmBsZ,EAAoBwR,EAAWnR,WAAWoR,OAEvG,MACF,KAAA,IACCtf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBvlB,gBAAkBgU,EAAM,EAAG/gB,EAAOsG,qBAAsBqZ,EAAoBwR,EAAWnR,WAAWoR,OAC/K,MACF,KAAA,IAAiC,CAChC,MAAM9O,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GACpF,GAAmB,GAAfhQ,EAAWvb,KACd,IAAK,IAAI3G,EAAY,EAAGA,EAAIJ,EAAOyK,UAAWrK,IAC7CkiB,EAAWgD,iBAAiBllB,GAAK2gB,EAAM,EAAG/gB,EAAOoJ,UAAU/I,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,YAG9G9O,EAAWtV,eAAiB+T,EAAM,EAAG/gB,EAAOoJ,UAAU/I,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAExG,MACF,KAAA,GACC,GAAe,WAAXK,EAAsB,CAGzB,MAAMnP,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GACpFhQ,EAAWxU,WAAajN,KAAKgb,MAAMkF,EAAM,EAAG/gB,EAAOiK,gBAAkB,EAAwF,GAArFpJ,KAAKuB,IAAI,GAAqE,IAA/D,EAAIud,EAAoBwR,EAAWnR,WAAWoR,UACrI9O,EAAWvU,cAAgBgT,EAAM,EAAG/gB,EAAOoJ,UAAU/I,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,WAEnG,CACJ,MAAM9O,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GACpFhQ,EAAWxU,WAAaiT,EAAM,EAAG/gB,EAAOiK,gBAAkB,EAAG0V,EAAoBwR,EAAWnR,WAAWoR,OACvG9O,EAAWvU,cAAgBgT,EAAM,EAAG/gB,EAAOoJ,UAAU/I,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAEvG,MACF,KAAA,IACC,GAAIU,GAA0B,WAAXL,EAClBvf,EAAUyN,EAAoBwR,EAAWnR,WAAWoR,MACpDtf,KAAKkY,SAAS9X,GAASwX,YAAY,GAAG/c,WAAaoU,EAAM,EAAG/gB,EAAOuG,YAAYlG,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,YAC3H,GAAIa,GAAwB,WAAXR,EACvB,IAAKvf,EAAU,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IACnD,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAK8b,sBAAuBxtB,IACvD0R,KAAKkY,SAAS9X,GAASwX,YAAYtpB,GAAGuM,WAAaoU,EAAM,EAAG/gB,EAAOuG,YAAYlG,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,YAGzHW,GAAyB,WAAXN,EACxB3f,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyB3lB,WAAaoU,EAAM,EAAG/gB,EAAOuG,YAAYlG,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,QAGzKtf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyB3lB,WAAaoU,EAAM,EAAG/gB,EAAOuG,YAAYlG,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OACzKtf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBxN,oBAAoBnF,EAAoBwR,EAAWnR,WAAWoR,MAC5Itf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBvN,sBAAsBpF,EAAoBwR,EAAWnR,WAAWoR,OAE9I,MACF,KAAA,GACC,GAAIU,GAA0B,WAAXL,EAAsB,CACxC,MAAMuB,EAA0B,CAAC,EAAG,EAAG,EAAG,GACpCC,EAA4B,CAAC,EAAG,EAAG,EAAG,IACtC/gB,EAAkByN,EAAoBwR,EAAWnR,WAAWoR,MAC5D8B,EAAiBnS,EAAM,EAAGiS,EAAc3yB,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAC1F9O,EAAyBxQ,KAAKkY,SAAS9X,GAASwX,YAAY,GAClEpH,EAAWpV,QAAU8lB,EAAcE,GACnC5Q,EAAWtV,eAA+C,GAA7BsV,EAAWtV,eACrCimB,EAAgBC,GAChB5Q,EAAWtV,oBACR,GAAIilB,GAAwB,WAAXR,EAAsB,CAC7C,MAAMuB,EAA0B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1CC,EAA4B,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IACnD,IAAK,IAAI/gB,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAC/D,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAK8b,sBAAuBxtB,IAAK,CAC5D,MAAM8yB,EAAiBnS,EAAM,EAAGiS,EAAc3yB,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAC1F9O,EAAyBxQ,KAAKkY,SAAS9X,GAASwX,YAAYtpB,GAClEkiB,EAAWpV,QAAU8lB,EAAcE,GACnC5Q,EAAWtV,eAA+C,GAA7BsV,EAAWtV,eACrCimB,EAAgBC,GAChB5Q,EAAWtV,qBAGV,GAAIklB,GAA0B,WAAXT,EAAsB,CAC/C,MAAMuB,EAA0B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1CC,EAA4B,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAC7CC,EAAiBnS,EAAM,EAAGiS,EAAc3yB,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAC1F9O,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GACpFhQ,EAAWpV,QAAU8lB,EAAcE,GACnC5Q,EAAWtV,eAA+C,GAA7BsV,EAAWtV,eACrCimB,EAAgBC,GAChB5Q,EAAWtV,mBACR,CACN,MAAME,EAAkB6T,EAAM,EAAG/gB,EAAO8G,SAASzG,OAAS,EAAGsf,EAAoBwR,EAAWnR,WAAWoR,OACjG9O,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GACpFhQ,EAAWpV,QAAUA,EAEjBA,GAAWlN,EAAO8G,SAASzG,QAC9BiiB,EAAWgC,aAAevD,EAAM,EAAGjP,KAAK4Y,WAAWpX,IAAIwS,EAAW4F,iBAAoB,EAAG/L,EAAoBwR,EAAWnR,WAAWoR,OAAiB,GACpJ9O,EAAWiC,aAAexD,EAAM,EAAGjP,KAAK4Y,WAAWpX,IAAIwS,EAAW8F,iBAAoB,EAAGjM,EAAoBwR,EAAWnR,WAAWoR,OACnI9O,EAAWkC,aAAezD,EAAM,EAAGjP,KAAK4Y,WAAWpX,IAAIwS,EAAW+F,iBAAoB,EAAGlM,EAAoBwR,EAAWnR,WAAWoR,OACnI9O,EAAWmC,YAAc1D,EAAM,EAAG/gB,EAAOiH,aAAa5G,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,SAIxG9O,EAAWgC,aAAetkB,EAAO8G,SAASwb,EAAWpV,SAAStK,UAC9D0f,EAAWiC,aAAe,GAC1BjC,EAAWkC,aAAexkB,EAAO8G,SAASwb,EAAWpV,SAASlG,WAC9Dsb,EAAWmC,YAAczkB,EAAO8G,SAASwb,EAAWpV,SAASnG,MAI9D,MACF,KAAA,GAAgC,CAC/B,MAAMub,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GACpFhQ,EAAWsC,cAAgB7D,EAAM,EAAGjP,KAAK4Y,WAAWpX,IAAIwS,EAAWgG,kBAAqB,EAAGnM,EAAoBwR,EAAWnR,WAAWoR,OACrI9O,EAAWuC,iBAAiBlF,EAAoBwR,EAAWnR,WAAWoR,MACrE,MACF,KAAA,IACC,GAAIU,GAA0B,WAAXL,EAClBvf,EAAUyN,EAAoBwR,EAAWnR,WAAWoR,MACpDtf,KAAKkY,SAAS9X,GAASwX,YAAY,GAAGzc,SAAW8T,EAAM,EAAG/gB,EAAOqH,UAAUhH,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,YACvH,GAAIa,GAAwB,WAAXR,EACvB,IAAKvf,EAAU,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IACnD,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAK8b,sBAAuBxtB,IAAK,CAC5D,MAAM+yB,EAAwBxT,EAAoBwR,EAAWnR,WAAWoR,MACxE,IAAInkB,EAAmB8T,EAAM,EAAG/gB,EAAOqH,UAAUhH,OAAQ8yB,GACpC,GAAjBA,IAEHlmB,EAAW,EACX6E,KAAKkY,SAAS9X,GAASwX,YAAYtpB,GAAGyM,MAAQ,GAE/CiF,KAAKkY,SAAS9X,GAASwX,YAAYtpB,GAAG6M,SAAWA,OAG7C,GAAIilB,GAA0B,WAAXT,EAAsB,CAC/C,MAAM0B,EAAwBxT,EAAoBwR,EAAWnR,WAAWoR,MACxE,IAAInkB,EAAmB8T,EAAM,EAAG/gB,EAAOqH,UAAUhH,OAAQ8yB,GACpC,GAAjBA,IAEHlmB,EAAW,EACX6E,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBzlB,MAAQ,GAEvFiF,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBrlB,SAAWA,OAEzF6E,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBrlB,SAAW8T,EAAM,EAAG/gB,EAAOqH,UAAUhH,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAErK,MACF,KAAA,GACCtf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBzlB,MAAQkU,EAAM,EAAG/gB,EAAOkI,OAAO7H,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAC9J,MACF,KAAA,IACCtf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyB1lB,QAAUmU,EAAM,EAAG/gB,EAAOyH,aAAapH,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OACtK,MACF,KAAA,IACC,GAAIU,GAA0B,WAAXL,EAAsB,CACxCvf,EAAUyN,EAAoBwR,EAAWnR,WAAWoR,MACrBtf,KAAKkY,SAAS9X,GAASwX,YAAY,GACvD5jB,OAASjF,KAAKgb,MAAMkF,GAAO/gB,EAAO0H,YAAa,EAA8D,GAA1DiY,EAAoBwR,EAAWnR,WAAWoR,aAClG,GAAIa,GAAwB,WAAXR,EACvB,IAAKvf,EAAU,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IACnD,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAK8b,sBAAuBxtB,IAAK,CAC7B0R,KAAKkY,SAAS9X,GAASwX,YAAYtpB,GACvD0F,OAASjF,KAAKgb,MAAMkF,GAAO/gB,EAAO0H,YAAa,EAA8D,GAA1DiY,EAAoBwR,EAAWnR,WAAWoR,aAGpG,GAAIc,GAA0B,WAAXT,EAAsB,CAChB3f,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GACzExsB,OAASjF,KAAKgb,MAAMkF,GAAO/gB,EAAO0H,YAAa,EAA8D,GAA1DiY,EAAoBwR,EAAWnR,WAAWoR,aAClG,GAAe,WAAXK,EAAsB,CACD3f,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAEzExsB,OAASjF,KAAKgb,MAAMkF,GAAO/gB,EAAO0H,YAAc,EAAG,EAA8D,IAA1DiY,EAAoBwR,EAAWnR,WAAWoR,MAAuB,QAE/H,CAC2Btf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAEzExsB,OAASjF,KAAKgb,MAAMkF,GAAO/gB,EAAO0H,YAAc,EAAG1H,EAAO0H,YAAc,EAAI,GAAKiY,EAAoBwR,EAAWnR,WAAWoR,OAAiB,EAAMzR,EAAoBwR,EAAWnR,WAAWoR,OAAkBpxB,EAAO0H,YAAc,IAE9O,MACF,KAAA,GAA0B,CACzB,MAAM4a,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAInFhQ,EAAWoC,IAAM3D,EAAM,EAAG/gB,EAAO6H,OAAS,EAF5B,WAAX4pB,EAE0C5wB,KAAKgb,MAAM8D,EAAoBwR,EAAWnR,WAAWoR,OAAkBpxB,EAAa,OAAI,KAGvF2f,EAAoBwR,EAAWnR,WAAWoR,OAAiB,GAAKzR,EAAoBwR,EAAWnR,WAAWoR,OAI1I,WAAXK,GAAyBK,IAC5BxP,EAAWqC,SAAWhF,EAAoBwR,EAAWnR,WAAWoR,OAChE,MACF,KAAA,GACgCtf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAEzEtN,OAASjE,EAAM/gB,EAAO8H,UAAW9H,EAAO+H,UAAY,GAAK4X,EAAoBwR,EAAWnR,WAAWoR,OAAiB,GAAKzR,EAAoBwR,EAAWnR,WAAWoR,MAAiBpxB,EAAO8H,WACrM,MACF,KAAA,GAAiC,CAChC,IAAIwa,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAElF,IAAK,IAAI/T,EAAY,EAAGA,EAAI,GAAIA,IAC/B+D,EAAW3U,eAAe4Q,GACvBwC,GAAO,GAAI,GAAIpB,EAAoBwR,EAAWnR,WAAWoR,MAAgB,IAG7E,IAAIjxB,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIkiB,EAAW3U,eAAetN,OAAQD,IAC7DD,GAAOmiB,EAAW3U,eAAevN,GAElC,MAAME,EAAkBH,EAAMmiB,EAAW3U,eAAetN,OAGxD,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAIkiB,EAAW3U,eAAetN,OAAQD,IAC7DG,GAAcC,EACdA,EAAW8hB,EAAW3U,eAAevN,GAAKE,EAC1CgiB,EAAW8C,uBAAuBhlB,GAAKG,EAIxC+hB,EAAW8C,uBAAuB,IAAM,EAEvC,MACF,KAAA,GAAkC,CACjC,IAAIgO,EAAoBzT,EAAoBwR,EAAWnR,WAAWoR,MAGjD,IAAbgC,GAEHthB,KAAKuY,iBAAmB,EACxBvY,KAAKwY,WAAa,EAClBxY,KAAKoY,UAAY,IACjBpY,KAAKmY,WAAa,EAClBnY,KAAKsY,eAAiB,EACtBtY,KAAKqY,qBAAuB,EAC5BrY,KAAKyY,WAAa,IAIlBzY,KAAKuY,iBAAoB+I,EAAY,GAAKA,EAAY,GAAM,GAAKA,EAAY,IAAM,GACnFA,EAAYzT,EAAoBwR,EAAWnR,WAAWoR,MACtDtf,KAAKwY,WAAc8I,EAAY,GAAKA,EAAY,GAAMA,EAAY,EAClEthB,KAAKmY,WAAatK,EAAoBwR,EAAWnR,WAAWoR,MAC5Dtf,KAAKoY,UAAuE,IAA1DvK,EAAoBwR,EAAWnR,WAAWoR,MAAyB,IACrFtf,KAAKqY,qBAAuBxK,EAAoBwR,EAAWnR,WAAWoR,MAAgB,GACtFtf,KAAKsY,eAAiBzK,EAAoBwR,EAAWnR,WAAWoR,MAAgB,GAChFtf,KAAKyY,aAAe5K,EAAoBwR,EAAWnR,WAAWoR,OAAiB,GAAKzR,EAAoBwR,EAAWnR,WAAWoR,OAAiB,IAE/I,MACF,KAAA,GACC,IAAK,IAAIlf,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAAW,CAE1E,IAAImhB,EAEHA,EADGtB,EACiBpS,EAAoBwR,EAAWnR,WAAWoR,OAExCzR,EAAoBwR,EAAWnR,WAAWoR,OAAiB,GAAKzR,EAAoBwR,EAAWnR,WAAWoR,MACjItf,KAAKkY,SAAS9X,GAAStO,KAAO8uB,mBAAmBvB,EAAWK,UAAUJ,EAAWA,EAAYiC,IAE7FjC,GAAaiC,EAEb,MACF,KAAA,GACCvhB,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBllB,UAAY2T,EAAM,EAAG/gB,EAAO0I,WAAWrI,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OACtK,MACF,KAAA,GACCtf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBjlB,aAAe0T,EAAM,EAAG/gB,EAAOsJ,UAAUjJ,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OACxK,MACF,KAAA,GACCtf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyBhlB,kBAAoByT,EAAM,EAAG/gB,EAAO+I,qBAAuB,EAAG4W,EAAoBwR,EAAWnR,WAAWoR,OACrL,MACF,KAAA,GACCtf,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyB/kB,iBAAmBwT,EAAM,EAAG/gB,EAAOoJ,UAAU/I,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAC5K,MACF,KAAA,GACC,IAAK,IAAI5C,EAAY,EAAGA,EAAIxuB,EAAOyI,cAAe+lB,IACjD1c,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyB9kB,UAAUghB,GAAG/gB,UAAYsT,EAAM,EAAG/gB,EAAOgJ,oBAAoB3I,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAE7L,MACF,KAAA,GACC,IAAK,IAAI5C,EAAY,EAAGA,EAAIxuB,EAAOyI,cAAe+lB,IACjD1c,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyB9kB,UAAUghB,GAAG5rB,UAAYme,EAAM,EAAG/gB,EAAO+I,qBAAuB,EAAG4W,EAAoBwR,EAAWnR,WAAWoR,OAE3L,MACF,KAAA,GACC,IAAK,IAAI5C,EAAY,EAAGA,EAAIxuB,EAAOyI,cAAe+lB,IACjD1c,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAAyB9kB,UAAUghB,GAAG9gB,SAAWqT,EAAM,EAAG/gB,EAAOoJ,UAAU/I,OAAQsf,EAAoBwR,EAAWnR,WAAWoR,OAElL,MACF,KAAA,GAA2B,CAC1B,MAAM9O,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GACpF,GAAmB,GAAfhQ,EAAWvb,KAAiC,CAC/C,MAAMusB,EAAoBzyB,KAAK+f,KAAK5gB,EAAOyJ,sBAAwBzJ,EAAO2J,yBAA2B,GAC/FukB,EAAuB,IAAItO,EAAeuR,EAAYC,EAAWA,EAAYkC,GACnF,IAAK,IAAIlzB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDkiB,EAAW0D,aAAahY,SAAS5N,GAAK8tB,EAAK7N,KAAKrgB,EAAO2J,0BAExD2Y,EAAW0D,aAAauN,sBACxBnC,GAAakC,MACP,CAAA,GAAmB,GAAfhR,EAAWvb,KAWrB,MAAM,IAAIlF,MAAM,yDAXqC,CACrD,MAAMyxB,EAAoBzyB,KAAK+f,KAAK5gB,EAAOyK,UAAYzK,EAAOyJ,sBAAwBzJ,EAAO2J,yBAA2B,GAClHukB,EAAuB,IAAItO,EAAeuR,EAAYC,EAAWA,EAAYkC,GACnF,IAAK,IAAI/U,EAAY,EAAGA,EAAIve,EAAOyK,UAAW8T,IAAK,CAClD,IAAK,IAAIne,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDkiB,EAAWiD,qBAAqBhH,GAAGvQ,SAAS5N,GAAK8tB,EAAK7N,KAAKrgB,EAAO2J,0BAEnE2Y,EAAWiD,qBAAqBhH,GAAGgV,sBAEpCnC,GAAakC,IAIb,MACF,KAAA,GAA4B,CAC3B,MAAMhR,EAAyBxQ,KAAKkY,SAASqI,GAA2B3I,YAAY4I,GAC9EgB,EAAoBzyB,KAAK+f,KAAK5gB,EAAO4J,uBAAyB5J,EAAO8J,0BAA4B,GACjGokB,EAAuB,IAAItO,EAAeuR,EAAYC,EAAWA,EAAYkC,GACnF,IAAK,IAAIlzB,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1DkiB,EAAW+C,cAAczX,UAAUxN,GAAK8tB,EAAK7N,KAAKrgB,EAAO8J,2BAE1DwY,EAAW+C,cAAckO,sBACzBnC,GAAakC,EACZ,MACF,KAAA,GAAuB,CACtB,IAAIE,EACJ,GAAI1B,GAA0B,WAAXL,EAAsB,CACxCvf,EAAUyN,EAAoBwR,EAAWnR,WAAWoR,MACpD,MAAM3D,EAAmB9N,EAAoBwR,EAAWnR,WAAWoR,MACnEoC,EAAkB3yB,KAAK+f,KAAgB,GAAX6M,GAC5B,MAAMS,EAAuB,IAAItO,EAAeuR,EAAYC,EAAWA,EAAYoC,GACnF,IAAK,IAAIpzB,EAAY,EAAGA,EAAIqtB,EAAUrtB,IACrC0R,KAAKkY,SAAS9X,GAAS0X,KAAKxpB,GAAK8tB,EAAK7N,KAAK,GAAK,OAE3C,GAAI2R,GAAyB,WAAXP,EAAsB,CAC9C,IAAI7C,EAAqB,EACzB,KAAQ,GAAKA,EAAc9c,KAAK4b,oBAAoBkB,IACpD4E,EAAkB3yB,KAAK+f,KAAK9O,KAAKic,kBAAoBjc,KAAK2b,SAAWmB,EAAa,GAClF,MAAMV,EAAuB,IAAItO,EAAeuR,EAAYC,EAAWA,EAAYoC,GACnF,IAAK,IAAIthB,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAC/D,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAK2b,SAAUrtB,IAC1C0R,KAAKkY,SAAS9X,GAAS0X,KAAKxpB,GAAK8tB,EAAK7N,KAAKuO,GAAc,MAGrD,CACN,IAAIA,EAAqB,EACzB,KAAQ,GAAKA,EAAc9c,KAAK4b,mBAAqB,GAAGkB,IACxD4E,EAAkB3yB,KAAK+f,KAAK9O,KAAKic,kBAAoBjc,KAAK2b,SAAWmB,EAAa,GAClF,MAAMV,EAAuB,IAAItO,EAAeuR,EAAYC,EAAWA,EAAYoC,GACnF,IAAK,IAAIthB,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAC/D,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAK2b,SAAUrtB,IAC1C0R,KAAKkY,SAAS9X,GAAS0X,KAAKxpB,GAAK8tB,EAAK7N,KAAKuO,GAI9CwC,GAAaoC,EACZ,MACF,KAAA,IAA2B,CAC1B,IACIthB,EADAuhB,EAA0B,EAE1BC,IAA2B3B,GAAyB,WAAXN,GAAoC,WAAXA,GAClEkC,EAAgCD,EAAe,EAAI,EACnDE,EAA6BF,EAAe,GAAK,EACrD,GAAI5B,GAA0B,WAAXL,EAClBvf,EAAUyN,EAAoBwR,EAAWnR,WAAWoR,MAGpDA,IAEAqC,EAAkB9T,EAAoBwR,EAAWnR,WAAWoR,MAC5DqC,IAAqC,EACrCA,GAAmB9T,EAAoBwR,EAAWnR,WAAWoR,UACvD,CACNlf,EAAU,EACV,IAAI2hB,EAAgC3S,EAAc,EAAG,EAAGvB,EAAoBwR,EAAWnR,WAAWoR,OAClG,KAAOyC,EAAwB,GAC9BJ,IAAqC,EACrCA,GAAmB9T,EAAoBwR,EAAWnR,WAAWoR,MAC7DyC,IAIF,MAAM3F,EAAuB,IAAItO,EAAeuR,EAAYC,EAAWA,EAAYqC,GACnFrC,GAAaqC,EAEb,IAAI3E,EAA+B,EACnC,KAAQ,GAAKA,EAAwBhd,KAAK8b,uBAAuBkB,IACjE,OAAa,CACZ,MAAMlM,EAA0B9Q,KAAKid,kBAAkB7c,GACjDgS,EAAwBpS,KAAKkd,gBAAgB9c,GAGnD,GAAIgS,EACH,IAAK,IAAI+K,EAA0B,EAAGA,EAAkBnd,KAAK8b,sBAAuBqB,IAAmB,CAEtG,IAAI3M,EAAyBxQ,KAAKkY,SAAS9X,GAASwX,YAAYuF,GAEhE,IAAK,IAAItJ,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAChDrD,EAAWkD,YAAYG,GAAOuI,EAAK7N,KAAK,GAGpCiC,EAAWkD,YAAYG,IAAQC,EAAUuJ,YAAc7M,EAAWkD,YAAYG,IAAQC,EAAUwJ,aAG/F9M,EAAWkD,YAAYG,IAAQC,EAAUuJ,WAC5C7M,EAAWlP,YAAYuS,GAAO5E,EAAM,EAAGjP,KAAKkB,kBAAoB,EAAGkb,EAAK7N,KAAK,IAG7EiC,EAAWlP,YAAYuS,GAAO5E,EAAM,EAAGjP,KAAKoB,kBAAoB,EAAGgb,EAAK7N,KAAK,IAG9EiC,EAAWmD,eAAeE,GAAO5E,EAAM,EAAGjP,KAAK8b,sBAAwB,EAAGM,EAAK7N,KAAKyO,KAIjFxM,EAAWkD,YAAYG,IAAQC,EAAUC,SAC5CvD,EAAWoD,YAAYC,GAAOuI,EAAK7N,KAAK,IAM5C,MAAMgP,EAAwBzM,GAAkBsB,EAAgB,EAAIpS,KAAKkY,SAAS9X,GAASuX,OAAS3X,KAAKyX,IACzG,IAAIhH,EAAoB,KACpBN,EAAsB,KACtBqN,GAAsB1M,GAAkBsB,EAAgB,EAAIpS,KAAKyX,KAAO8F,EAC5E,MAAME,EAA0BrL,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAMtB,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GACpI4M,EAAsB,GAC5B,IAAK,IAAIpvB,EAAY,EAAGA,EAAImvB,EAAclvB,OAAQD,IACjDmvB,EAAcnvB,IAAMivB,EAErB,IAAK,IAAIjvB,EAAY,EAAGA,EAAI0R,KAAK4b,mBAAoBttB,IAAK,CACzD,MAAM0zB,EAAsBhiB,KAAKkY,SAAS9X,GAASyX,SAASvpB,GAI5D,GAHA0zB,EAAWpR,QACXoR,EAAWxR,WAAa4L,EAAK7N,KAAKyO,IAEjB,WAAX2C,IAAwBK,IAAgC,GAAhB5D,EAAK7N,KAAK,GAAS,SAEjE,IAAIoP,EAAkB,EACtB,MAAMsE,EAAmBD,EAAWzR,MAEpC,KAAOoN,EAAU3d,KAAK0b,YAAcxtB,EAAOqF,eAAiB6e,GAAe,CAE1E,MAAM8P,EAAuC,GAAhB9F,EAAK7N,KAAK,GACvC,IAAI6B,GAAmB,EACnBmO,EAAqB,EAOzB,GANI2D,EACH3D,EAAanP,EAAc,EAAGsO,EAAanvB,OAAS,EAAG6tB,EAAK9N,aAAa,EAAG,IAE5E8B,EAA0B,GAAhBgM,EAAK7N,KAAK,GAGhB2T,GAAgB9R,EAkBd,CACN,IAAI+R,EACAC,EACA9S,EACJ,GAAI4S,EACHC,EAAQzE,EAAaa,GACrBb,EAAac,OAAOD,EAAY,OAC1B,CAGN,GAFA4D,EAAQ,GAEHP,EASgB,GAAhBxF,EAAK7N,KAAK,GACb4T,EAAM9wB,WAAa+qB,EAAK7N,KAAK,GAAK,EAGlC4T,EAAM9wB,WAAa,OAVpB,IADA8wB,EAAM9wB,WAAa,EACZ8wB,EAAM9wB,WAAa,GAAqB,GAAhB+qB,EAAK7N,KAAK,IAAS4T,EAAM9wB,aAazD8wB,EAAME,SAAWjG,EAAKkG,eAGrBH,EAAMI,cADQ,WAAX5C,EACkC,EAAfvD,EAAK7N,KAAK,GACrB6D,EAGWgK,EAAK7N,KAAK,GAFV6N,EAAK7N,KAAK,GAKjC4T,EAAMxS,KAAO,GACbwS,EAAM5zB,OAAS,EACf4zB,EAAMK,UAAY,EAClB,IAAK,IAAI/V,EAAY,EAAGA,EAAI0V,EAAME,SAAU5V,IAC3C2V,EAAS,GACTA,EAAOK,UAA4B,GAAhBrG,EAAK7N,KAAK,GACzB6T,EAAOK,WAAWN,EAAMK,YAC5BL,EAAM5zB,QAAW6xB,GAA0B,WAAXT,EAC7BvD,EAAKsG,yBAA2Bx0B,EAAOqF,aAAerF,EAAOwF,QAAQsM,KAAK6b,QAAQloB,aAClFyoB,EAAKuG,mBACRP,EAAOpT,KAAOmT,EAAM5zB,OAGnB6zB,EAAOpuB,OADO,WAAX2rB,EAC4B,EAAfvD,EAAK7N,KAAK,GACf6D,EAIKgK,EAAK7N,KAAK,GAHV6N,EAAK7N,KAAK,GAK3B4T,EAAMxS,KAAKhhB,KAAKyzB,GAGlB1E,EAAae,QAAQ0D,GACjBzE,EAAanvB,OAAS,IAAImvB,EAAagB,MAE3CjO,EAAO,IAAIpB,EAAK,EAAGsO,EAASA,EAAUwE,EAAM5zB,OAAQ4zB,EAAMI,eAC1D9R,EAAKf,QAAU,GACfe,EAAKd,KAAKphB,OAAS,EACnB,MAAM0vB,EAAuB,GAC7B,IAAK,IAAIxR,EAAY,EAAGA,EAAI0V,EAAM9wB,WAAa8wB,EAAMK,UAAW/V,IAAK,CAEpE,GAD6C,GAAhB2P,EAAK7N,KAAK,GAehC,CACN,MAAMqQ,EAAqBxP,EAAc,EAAGqO,EAAclvB,OAAS,EAAG6tB,EAAK7N,KAAKsT,IAChFvS,EAAQmO,EAAcmB,GACtBnB,EAAce,OAAOI,EAAY,OAjBhB,CACjB,MAAMzjB,EAAmBihB,EAAKwG,oBAC9BtT,EAAQkO,EACR,IAAIqF,EAAuB1nB,EAC3B,KAAO0nB,EAAe,GAAG,CAExB,IADAvT,KACwC,GAAjCmO,EAAc9I,QAAQrF,IAAcA,IAC3CuT,IAED,KAAOA,EAAe,GAAG,CAExB,IADAvT,KACwC,GAAjCmO,EAAc9I,QAAQrF,IAAcA,IAC3CuT,KAQFpF,EAAcgB,QAAQnP,GAClBmO,EAAclvB,OAASuzB,GAAmBrE,EAAciB,MAExDjS,EAAI0V,EAAM9wB,WACbof,EAAKf,QAAQ/gB,KAAK2gB,GAElB2O,EAAWtvB,KAAK2gB,GAIhBkO,EADG/Q,GAAK0V,EAAM9wB,WAAa,EACfof,EAAKf,QAAQ,GAEbJ,EAId2O,EAAWQ,QAAQhO,EAAKf,QAAQ,IAEhC,IAAK,MAAM0S,KAAUD,EAAMxS,KACtByS,EAAOK,WAAWxE,EAAW6E,QACjC3S,EAAMpB,EAAYkP,EAAW,GAAKxN,EAAKf,QAAQ,GAAI0S,EAAOpT,KAAMoT,EAAOpuB,QACvEyc,EAAKd,KAAKhhB,KAAKwhB,GAEhBwN,EAAUvO,EAAc,EAAGpP,KAAK0b,YAAcxtB,EAAOqF,aAAckd,EAAKjB,KACxEyS,EAAStzB,KAAK8hB,QAhId,GAAI2B,EAAc,CACjB,MAAM2Q,EAAuC,GAAhB3G,EAAK7N,KAAK,GACjCyU,EAAqB5G,EAAKuG,mBAC5BI,EACHpF,GAAWqF,EAGXrF,GAAWqF,MAEN,CAINrF,GAH4ByC,GAA0B,WAAXT,EACxCvD,EAAKsG,yBAA2Bx0B,EAAOqF,aAAerF,EAAOwF,QAAQsM,KAAK6b,QAAQloB,aAClFyoB,EAAKuG,qBAyHZ,GAAI3C,GAA0B,WAAXL,EAClB,MAGA,GADAvf,IACIA,GAAWJ,KAAKic,kBAAmB,OAGxC,MACF,QACC,MAAM,IAAIlsB,MAAM,8BAAgCquB,OAAOC,aAAaiC,GAAW,cAAgBhB,EAAY,IAI7G,IAAK,IAAIlf,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAClC,MAAzBqgB,EAAargB,KAChBJ,KAAKkY,SAAS9X,GAASuX,OAAS8I,EAAargB,IAKzCvG,aAAaopB,GAAuB,EAAMC,EAAoB,EAAGC,GAAuB,GAC9F,MAAMC,EAAyB,GAC/B,IAAK,IAAIhjB,EAAkB,EAAGA,EAAUJ,KAAKic,kBAAmB7b,IAAW,CAC1E,MAAMijB,EAA4B,GAC5BvS,EAA0B9Q,KAAKid,kBAAkB7c,GACjDgS,EAAwBpS,KAAKkd,gBAAgB9c,GACnD,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAK8b,sBAAuBxtB,IACvD+0B,EAAgB10B,KAAKqR,KAAKkY,SAAS9X,GAASwX,YAAYtpB,GAAGg1B,gBAG5D,MAAMC,EAAyB,GAC/B,IAAK,MAAMrH,KAAWlc,KAAKkY,SAAS9X,GAASyX,SAAU,CACtD,MAAM2L,EAAsB,GAC5B,IAAK,MAAM/S,KAAQyL,EAAQ3L,MAAO,CACjC,IAAIkT,EAAoBzjB,KAAK6a,uBAAuBzI,EAAcpS,KAAKkY,SAAS9X,GAASwX,YAAYsE,EAAQ1L,YAAYoD,YAAY1lB,EAAO0K,SAAW6X,EAAKf,QAAQ,GAAK,IACzK,MAAMgU,EAAuB,GAC7B,IAAK,MAAMvT,KAAOM,EAAKd,KAAM,CAC5B,IAAIgU,EAAiBvR,EAAerjB,KAAKgb,MAAMoG,EAAInc,QAAUjF,KAAKgb,MAAmB,IAAboG,EAAInc,OAAeyvB,GAC3FC,EAAW/0B,KAAK,CACfi1B,MAASzT,EAAInB,KAAOyB,EAAKlB,OAASrhB,EAAOwF,QAAQsM,KAAK6b,QAAQloB,aAAezF,EAAOqF,aACpFkvB,UAAatS,EAAIhV,SACjBnH,OAAU2vB,EACVE,OAAUzR,IAIZoR,EAAU70B,KAAK,CACd+gB,QAAWe,EAAKf,QAChBoU,OAAUJ,IAIZH,EAAa50B,KAAK,CACjB6hB,WAAc0L,EAAQ1L,WAAa,EACnCD,MAASiT,IAIX,MAAMO,EAA0B,GAChC,GAAId,EAAa,IAAK,IAAI30B,EAAY,EAAGA,EAAI0R,KAAKqb,UAAW/sB,IAC5Dy1B,EAAcp1B,KAAKqR,KAAKkY,SAAS9X,GAAS0X,KAAKxpB,IAEhD,IAAK,IAAI01B,EAAY,EAAGA,EAAId,EAAWc,IAAK,IAAK,IAAI11B,EAAY0R,KAAKqb,UAAW/sB,EAAI0R,KAAKqb,UAAYrb,KAAKsb,WAAYhtB,IACtHy1B,EAAcp1B,KAAKqR,KAAKkY,SAAS9X,GAAS0X,KAAKxpB,IAEhD,GAAI60B,EAAa,IAAK,IAAI70B,EAAY0R,KAAKqb,UAAYrb,KAAKsb,WAAYhtB,EAAI0R,KAAK2b,SAAUrtB,IAC1Fy1B,EAAcp1B,KAAKqR,KAAKkY,SAAS9X,GAAS0X,KAAKxpB,IAGhD80B,EAAaz0B,KAAK,CACjBsG,KAAQmd,EAAe,MAAStB,EAAiB,OAAS,QAC1DmT,gBAAmBjkB,KAAKkY,SAAS9X,GAASuX,OAC1CC,YAAeyL,EACfxL,SAAY0L,EACZW,SAAYH,IAId,MAAO,CACNjyB,KAAQkO,KAAK+b,MACboI,OAAUnM,EAAKoM,EACf3pB,QAAWud,EAAKsE,EAChBlB,MAASltB,EAAOmE,OAAO2N,KAAKob,OAAOtpB,KAEnCuyB,UAAarkB,KAAKqb,UAClBiJ,SAAYtkB,KAAKsb,WACjBI,YAAe1b,KAAK0b,YACpB6I,aAAgBr2B,EAAOwF,QAAQsM,KAAK6b,QAAQloB,aAC5C6wB,eAAkBxkB,KAAK2a,MACvBY,OAAUvb,KAAKub,OAIfrD,SAAYkL,GAIPvpB,eAAe4qB,GAErB,GADAzkB,KAAKgb,eAAc,IACdyJ,EAAY,OAUjB,GAL0BtX,MAAtBsX,EAAiB,OACpBzkB,KAAK+b,MAAQ0I,EAAiB,MAG/BzkB,KAAKob,MAAQ,EACcjO,MAAvBsX,EAAkB,MAAgB,CACrC,MAAMC,EAAoC,CACzCC,YAAa,kBACbC,YAAa,kBACbC,OAAU,WAELC,EAA2D3X,MAAtCuX,EAAcD,EAAkB,OAAmBC,EAAcD,EAAkB,OAAKA,EAAkB,MAC/HrJ,EAAgBltB,EAAOmE,OAAO8iB,WAAUiG,GAASA,EAAMtpB,MAAQgzB,KACvD,GAAV1J,IAAapb,KAAKob,MAAQA,GAsB/Bpb,KAAKpC,IAAM,EAEyBuP,MAAhCsX,EAA2B,iBAC9BzkB,KAAK2a,MAAQ1L,EAAM/gB,EAAO0E,SAAU1E,EAAO2E,SAAW,EAAkC,EAA/B4xB,EAA2B,iBAGzDtX,MAAxBsX,EAAmB,SACtBzkB,KAAKub,OAAStM,EAAM,EAAG/gB,EAAO4E,YAAoC,EAAvB2xB,EAAmB,SAG9BtX,MAA7BsX,EAAwB,cAC3BzkB,KAAK0b,YAAc3sB,KAAKmgB,IAAIhhB,EAAO6E,eAAgBhE,KAAKyB,IAAItC,EAAO8E,eAA4C,EAA5ByxB,EAAwB,eAG5G,IAAIM,EAA+B,EACD5X,MAA9BsX,EAAyB,eAC5BM,EAAqD,EAA7BN,EAAyB,cAAU,EAC3DzkB,KAAK6b,OAAS3tB,EAAOwF,QAAQyhB,WAAU0G,GAAUA,EAAOloB,cAAgBoxB,KACpD,GAAhB/kB,KAAK6b,SACR7b,KAAK6b,OAAS,IAIhB,IAAImJ,EAAyB,EACzBC,EAAsB,EACtBC,EAAkB,EACtB,GAAIT,EAAqB,SACxB,IAAK,MAAMU,KAAiBV,EAAqB,SAC5CU,EAA2B,cAAGH,EAAiBj2B,KAAKmgB,IAAI8V,EAAsD,EAAtCG,EAA2B,YAAE52B,SACrG42B,EAAwB,WAAGF,EAAcl2B,KAAKmgB,IAAI+V,EAAgD,EAAnCE,EAAwB,SAAE52B,SACzF42B,EAAwB,WAAGD,EAAUn2B,KAAKmgB,IAAIgW,EAA4C,EAAnCC,EAAwB,SAAE52B,SAIvFyR,KAAK8b,sBAAwB/sB,KAAKyB,IAAIw0B,EAAgB92B,EAAOoF,0BAC7D0M,KAAK4b,mBAAqB7sB,KAAKyB,IAAIy0B,EAAa/2B,EAAOgF,aACvD8M,KAAK2b,SAAW5sB,KAAKyB,IAAI00B,EAASh3B,EAAOgF,aAEVia,MAA3BsX,EAAsB,YACzBzkB,KAAKqb,UAAYpM,EAAM,EAAGjP,KAAK2b,SAAoC,EAA1B8I,EAAsB,YAElCtX,MAA1BsX,EAAqB,WACxBzkB,KAAKsb,WAAarM,EAAM,EAAGjP,KAAK2b,SAAW3b,KAAKqb,UAAY,EAA4B,EAAzBoJ,EAAqB,WAGrF,MAAMW,EAA8B,GAC9BC,EAA8B,GAC9BC,EAA4B,GAClC,GAAIb,EAAqB,SACxB,IAAK,IAAIzI,EAAuB,EAAGA,EAAeyI,EAAqB,SAAEl2B,OAAQytB,IAAgB,CAChG,IAAImJ,EAAqBV,EAAqB,SAAEzI,GAEhD,MAAM5b,EAAmB,IAAIsX,EAE7B,IAAI5G,GAA0B,EAC1BsB,GAAwB,EACCjF,MAAzBgY,EAAoB,MACvBrU,EAA2C,QAAzBqU,EAAoB,KACtC/S,EAAyC,OAAzB+S,EAAoB,MAGpCrU,EAAkBkL,GAAgB,EAE/BlL,EACHuU,EAAiB12B,KAAKyR,GACZgS,EACVkT,EAAe32B,KAAKyR,GAGpBglB,EAAiBz2B,KAAKyR,GAGiB+M,MAApCgY,EAA+B,kBAClC/kB,EAAQuX,OAAS1I,EAAM,EAAG/gB,EAAO4K,uBAA0B+nB,OAAOC,aAAaC,QAAQ,iBAAmB,KAAQ,EAAsC,EAAnCoE,EAA+B,kBAGrJ,IAAK,IAAI72B,EAAY8R,EAAQwX,YAAYrpB,OAAQD,EAAI0R,KAAK8b,sBAAuBxtB,IAChF8R,EAAQwX,YAAYtpB,GAAK,IAAI6jB,EAAWrB,EAAgBsB,GAEzDhS,EAAQwX,YAAYrpB,OAASyR,KAAK8b,sBAElC,IAAK,IAAIxtB,EAAY8R,EAAQyX,SAAStpB,OAAQD,EAAI0R,KAAK4b,mBAAoBttB,IAC1E8R,EAAQyX,SAASvpB,GAAK,IAAIgiB,EAE3BlQ,EAAQyX,SAAStpB,OAASyR,KAAK4b,mBAE/B,IAAK,IAAIttB,EAAY,EAAGA,EAAI0R,KAAK2b,SAAUrtB,IAC1C8R,EAAQ0X,KAAKxpB,GAAK,EAEnB8R,EAAQ0X,KAAKvpB,OAASyR,KAAK2b,SAE3B,IAAK,IAAIrtB,EAAY,EAAGA,EAAI0R,KAAK8b,sBAAuBxtB,IAAK,CAC7B8R,EAAQwX,YAAYtpB,GACxCixB,eAAe4F,EAA2B,YAAE72B,GAAIwiB,EAAgBsB,EAA6B,GAAfpS,KAAK6b,QAA8B,GAAf7b,KAAK6b,OAAa7b,KAAK6b,QAAU,GAG/I,IAAK,IAAIvtB,EAAY,EAAGA,EAAI0R,KAAK4b,mBAAoBttB,IAAK,CACzD,MAAM4tB,EAAmB9b,EAAQyX,SAASvpB,GAE1C,IAAIi3B,OAAqBpY,EAEzB,GADIgY,EAAwB,WAAGI,EAAgBJ,EAAwB,SAAE72B,IACpD6e,MAAjBoY,IAEJrJ,EAAQ1L,WAAavB,EAAM,EAAGjP,KAAK8b,uBAAsD,EAA9ByJ,EAA0B,YAAS,GAE1FA,EAAqB,OAAKA,EAAqB,MAAEh3B,OAAS,GAAG,CAChE,MAAMi3B,EAAuBz2B,KAAKyB,IAAIwP,KAAK0b,YAAcxtB,EAAOqF,aAAcgyB,EAAqB,MAAEh3B,SAAW,GAGhH,IAAK,IAAIke,EAAY,EAAGA,EAAI8Y,EAAqB,MAAEh3B,UAC9Cke,GAAK+Y,GADiD/Y,IAAK,CAG/D,MAAMgZ,EAAaF,EAAqB,MAAE9Y,GAC1C,KAAKgZ,GAAeA,EAAoB,SAAOA,EAAoB,QAAEl3B,QAAU,GAAOk3B,EAAmB,QAAOA,EAAmB,OAAEl3B,QAAU,GAC9I,SAGD,MAAMkiB,EAAa,IAAIpB,EAAK,EAAG,EAAG,EAAG,GACrCoB,EAAKf,QAAU,GACfe,EAAKd,KAAO,GAEZ,IAAK,IAAI+V,EAAY,EAAGA,EAAID,EAAoB,QAAEl3B,OAAQm3B,IAAK,CAC9D,MAAMpW,EAA2C,EAA3BmW,EAAoB,QAAEC,GAC5C,IAAoC,GAAhCjV,EAAKf,QAAQiF,QAAQrF,KACzBmB,EAAKf,QAAQ/gB,KAAK2gB,GACdmB,EAAKf,QAAQnhB,QAAUL,EAAOwI,cAAc,MAEjD,GAAI+Z,EAAKf,QAAQnhB,OAAS,EAAG,SAG7B,IAAIo3B,EAAwB,EAC5B,IAAK,IAAID,EAAY,EAAGA,EAAID,EAAmB,OAAEl3B,OAAQm3B,IAAK,CAC7D,MAAME,EAAmBH,EAAmB,OAAEC,GAC9C,GAAmBvY,MAAfyY,GAAmDzY,MAAvByY,EAAkB,KAAgB,SAClE,MAAMzqB,EAAgDgS,MAA5ByY,EAAuB,UAAkB,EAAgC,EAA3BA,EAAuB,UAEzF5W,EAAejgB,KAAKgb,OAAQ6b,EAAkB,KAAK13B,EAAOqF,aAAewxB,GAE/E,IAII/wB,EAJAyvB,EAAoBzjB,KAAK6a,uBAAuBzI,EAAchS,EAAQwX,YAAYsE,EAAQ1L,YAAYoD,YAAY1lB,EAAO0K,SAAW6X,EAAKf,QAAQ,GAAK,IAMzJ1b,EAD4BmZ,MAAzByY,EAAoB,OACdnC,EAC0BtW,MAAzByY,EAAoB,OACrB72B,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAIizB,EAAW10B,KAAKgb,OAA+B,EAAxB6b,EAAoB,QAASnC,EAAY,QAG3D,EAAxBmC,EAAoB,QAAS,EAAK72B,KAAKgb,MAA8B,EAAxB6b,EAAoB,QAAS72B,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAIizB,EAAW10B,KAAKgb,OAA+B,EAAxB6b,EAAoB,QAASnC,EAAY,OAGvKzU,EAAOhP,KAAK0b,YAAcxtB,EAAOqF,eACb,GAApBkd,EAAKd,KAAKphB,SAEbkiB,EAAKlB,MAAQP,EACb2W,EAAgBxqB,GAMjBsV,EAAKd,KAAKhhB,KAAKogB,EAAY5T,EAAWwqB,EAAe3W,EAAOyB,EAAKlB,MAAOvb,KAEzE,GAAIyc,EAAKd,KAAKphB,OAAS,EAAG,SAE1BkiB,EAAKjB,IAAMiB,EAAKd,KAAKc,EAAKd,KAAKphB,OAAS,GAAGygB,KAAOyB,EAAKlB,MAEvD,MAAMkM,EAAmB3K,EAAiB5iB,EAAOyK,UAAY,EAAIqH,KAAKyb,SACtE,IAAIoK,EAAsBpK,EACtBqK,EAAuB,EAC3B,IAAK,IAAIJ,EAAY,EAAGA,EAAIjV,EAAKf,QAAQnhB,OAAQm3B,IAChDjV,EAAKf,QAAQgW,IAAMC,GACflV,EAAKf,QAAQgW,GAAK,GAAKjV,EAAKf,QAAQgW,GAAKjK,KAC5ChL,EAAKf,QAAQ8O,OAAOkH,EAAG,GACvBA,KAEGjV,EAAKf,QAAQgW,GAAKG,IAAaA,EAAcpV,EAAKf,QAAQgW,IAC1DjV,EAAKf,QAAQgW,GAAKI,IAAcA,EAAerV,EAAKf,QAAQgW,IAEjE,KAAIjV,EAAKf,QAAQnhB,OAAS,GAA1B,CAEA,IAAK,IAAIm3B,EAAY,EAAGA,EAAIjV,EAAKd,KAAKphB,OAAQm3B,IAAK,CAClD,MAAMvV,EAAeM,EAAKd,KAAK+V,GAC3BvV,EAAIhV,SAAW0qB,EAAc,IAAG1V,EAAIhV,UAAY0qB,GAChD1V,EAAIhV,SAAW2qB,EAAerK,IAAUtL,EAAIhV,SAAWsgB,EAAWqK,GAClEJ,GAAK,GACJvV,EAAIhV,UAAYsV,EAAKd,KAAK+V,EAAI,GAAGvqB,UACpCgV,EAAIhV,UAAYsV,EAAKd,KAAK+V,EAAI,GAAGvqB,UACjCgV,EAAInc,QAAUyc,EAAKd,KAAK+V,EAAI,GAAG1xB,QAC/Bmc,EAAInc,QAAUyc,EAAKd,KAAK+V,EAAI,GAAG1xB,SAC/Byc,EAAKd,KAAK6O,OAAOkH,EAAI,EAAG,GACxBA,KAKHxJ,EAAQ3L,MAAM5hB,KAAK8hB,MAMtB,IAAK,IAAIniB,EAAY,EAAGA,EAAI0R,KAAK2b,SAAUrtB,IAC1C8R,EAAQ0X,KAAKxpB,GAAK62B,EAAwB,SAAIp2B,KAAKyB,IAAIwP,KAAK4b,mBAAoBuJ,EAAwB,SAAE72B,KAAO,GAAK,EAKrH82B,EAAiB72B,OAASL,EAAOmK,uBAAsB+sB,EAAiB72B,OAASL,EAAOmK,sBACxFgtB,EAAiB92B,OAASL,EAAOqK,uBAAsB8sB,EAAiB92B,OAASL,EAAOqK,sBACxF+sB,EAAe/2B,OAASL,EAAOuK,qBAAoB6sB,EAAe/2B,OAASL,EAAOuK,oBACtFuH,KAAKkB,kBAAoBkkB,EAAiB72B,OAC1CyR,KAAKoB,kBAAoBikB,EAAiB92B,OAC1CyR,KAAKkb,gBAAkBoK,EAAe/2B,OACtCyR,KAAKkY,SAAS3pB,OAAS,EACvB0O,MAAMiiB,UAAUvwB,KAAK2vB,MAAMte,KAAKkY,SAAUkN,GAC1CnoB,MAAMiiB,UAAUvwB,KAAK2vB,MAAMte,KAAKkY,SAAUmN,GAC1CpoB,MAAMiiB,UAAUvwB,KAAK2vB,MAAMte,KAAKkY,SAAUoN,GAGpCzrB,WAAWuG,EAAiB+b,GAClC,GAAIA,EAAM,GAAKA,GAAOnc,KAAK2b,SAAU,OAAO,KAC5C,MAAMoK,EAAuB/lB,KAAKkY,SAAS9X,GAAS0X,KAAKqE,GACzD,OAAoB,GAAhB4J,EAA0B,KACvB/lB,KAAKkY,SAAS9X,GAASyX,SAASkO,EAAe,GAGhDlsB,qBAAqBuG,EAAiB+b,GAC5C,MAAMD,EAA0Blc,KAAKgmB,WAAW5lB,EAAS+b,GACzD,OAAkB,MAAXD,EAAkB,EAAIA,EAAQ1L,WAG/B3W,oBACN,OAAOmG,KAAK2a,OAl/DW3C,EAAAoM,EAAkB,UAClBpM,EAAA6H,EAAgC,EAChC7H,EAAA4H,EAAgC,EAChC5H,EAAA8H,EAAgC,EAChC9H,EAAAsE,EAAgC,EAIhCtE,EAAAqE,EAAW,IA++DpC,MAAM4J,EAwDLpsB,cAtDgBmG,KAAA0P,QAAoB,CAAC,EAAG,EAAG,EAAG,GACvC1P,KAAA3O,WAAqB,EACrB2O,KAAAkmB,UAAoB,EACpBlmB,KAAAmmB,aAAuB,EACvBnmB,KAAAyQ,KAAoB,KACpBzQ,KAAAomB,SAAwB,KACxBpmB,KAAAqmB,SAAwB,KACxBrmB,KAAAsmB,mBAA6B,EAC7BtmB,KAAAumB,mBAA6B,EAC7BvmB,KAAAwmB,QAAkB,EAClBxmB,KAAAymB,UAAoB,EACpBzmB,KAAA0mB,QAAkB,EAClB1mB,KAAA2mB,gBAA0B,EAC1B3mB,KAAA4mB,mBAA6B,EAC7B5mB,KAAA6mB,qBAA+B,EAC/B7mB,KAAA8mB,aAAuB,EACvB9mB,KAAA+mB,WAAqB,EACrB/mB,KAAAgnB,cAAwB,EACxBhnB,KAAAinB,cAAwB,EACxBjnB,KAAAknB,aAAuB,EACvBlnB,KAAAmnB,YAAsB,EACtBnnB,KAAAonB,OAAiB,EACRpnB,KAAAqnB,OAAmB,GACnBrnB,KAAAsnB,YAAwB,GACxBtnB,KAAAunB,aAAyB,GACzBvnB,KAAAwnB,aAAyB,GAClCxnB,KAAAynB,YAAsB,EACtBznB,KAAA0nB,YAAsB,EACtB1nB,KAAA2nB,gBAA0B,EAC1B3nB,KAAAhE,WAAqB,EACrBgE,KAAA4nB,gBAA0B,EAC1B5nB,KAAA6nB,OAAiB,EACjB7nB,KAAA8nB,YAAsB,EACtB9nB,KAAA+nB,cAAwB,EACxB/nB,KAAAgoB,cAAwB,EACxBhoB,KAAAioB,aAAuB,EACvBjoB,KAAAkoB,aAAuB,EACvBloB,KAAAmoB,mBAA6B,EAC7BnoB,KAAAooB,gBAA4B,GAC5BpoB,KAAAqoB,aAAuB,EACvBroB,KAAAsoB,cAAwB,EACxBtoB,KAAAuoB,mBAA6B,EAC7BvoB,KAAAwoB,mBAA6B,EAC7BxoB,KAAAyoB,mBAA6B,EAC7BzoB,KAAA0oB,mBAA6B,EAC7B1oB,KAAA2oB,iBAA2B,EAC3B3oB,KAAA4oB,eAAyB,EACzB5oB,KAAA6oB,iBAA2B,EAC3B7oB,KAAA8oB,kBAA4B,EAC5B9oB,KAAA+oB,gBAA0B,EAC1B/oB,KAAAgpB,qBAA+B,EAC/BhpB,KAAAipB,qBAA+B,EAC/BjpB,KAAAkpB,cAAwB,EAG9BlpB,KAAK4Q,QAGC/W,QACN,IAAK,IAAIvL,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IACjD0R,KAAKqnB,OAAO/4B,GAAK,EACjB0R,KAAKooB,gBAAgB95B,GAAK,EAE3B0R,KAAKonB,OAAS,EACdpnB,KAAK+nB,cAAgB,EACrB/nB,KAAKgoB,cAAgB,EACrBhoB,KAAK6mB,qBAAuB,SAKjBsC,GA+ZZtvB,YAAYsG,EAA6B,MAlTlCH,KAAAopB,iBAA2B,MAE3BppB,KAAAG,KAAoB,KACpBH,KAAAqpB,kBAA4B,EAC5BrpB,KAAAspB,kBAA4B,EAC5BtpB,KAAAupB,iBAA6B,GAC7BvpB,KAAAwpB,iBAA2B,EAC3BxpB,KAAAypB,iBAA2B,EAC3BzpB,KAAAhM,OAAiB,EAEhBgM,KAAA0pB,YAAsB,EACtB1pB,KAAA2pB,iBAA2B,EAC3B3pB,KAAAmc,IAAc,EACdnc,KAAA4pB,KAAe,EACf5pB,KAAA6pB,KAAe,EACf7pB,KAAA4jB,KAAe,EACf5jB,KAAA8pB,oBAA8B,EAK9B9pB,KAAA+pB,eAAyB,EACzB/pB,KAAAgqB,iBAA2B,EAClBhqB,KAAAiqB,SAAwB,IAAIjd,EAC5BhN,KAAAkqB,YAAkC,GAC3ClqB,KAAAmqB,UAAsB,GACbnqB,KAAAoqB,eAA4C,GAE5CpqB,KAAAqqB,cAAoC,GACpCrqB,KAAAsqB,eAA8B,IAAItd,EAI3ChN,KAAAuqB,MAAgB,EAEhBvqB,KAAAwqB,kBAA4B,EAC5BxqB,KAAAyqB,eAAsC,KACtCzqB,KAAA0qB,iBAAwC,KACxC1qB,KAAA2qB,iBAAwC,KACxC3qB,KAAA4qB,uBAA8C,KAE9C5qB,KAAA6qB,gBAAgC,IAAIr7B,aAAa,MACjDwQ,KAAA8qB,eAAyB,EACzB9qB,KAAA+qB,YAAsB,EAEtB/qB,KAAAgrB,gBAAgC,IAAIx7B,aAAa,OACjDwQ,KAAAirB,eAAyB,EACzBjrB,KAAAkrB,gBAA0B,EAC1BlrB,KAAAmrB,gBAA0B,EAC1BnrB,KAAAorB,gBAA0B,EAC1BprB,KAAAqrB,gBAA0B,EAE1BrrB,KAAAsrB,SAAuB,KACvBtrB,KAAAurB,WAAyB,KAkiBzBvrB,KAAAwrB,qBAAwBC,IAC/B,MAAMC,EAAeD,EAAqBC,aACpCC,EAA4BD,EAAaE,eAAe,GACxDC,EAA4BH,EAAaE,eAAe,GAG9D,GAD2BE,YAAYC,MAAQ/rB,KAAKgqB,kBACxBhqB,KAAK+pB,cAOhC/pB,KAAKgsB,WAAWL,EAAaE,EAAaH,EAAan9B,OAAQyR,KAAK+pB,mBAPrB,CAC/C,IAAK,IAAIz7B,EAAY,EAAGA,EAAIo9B,EAAan9B,OAAQD,IAChDq9B,EAAYr9B,GAAK,EACjBu9B,EAAYv9B,GAAK,EAElB0R,KAAKisB,oBA/SM,MAAR9rB,GAAcH,KAAKksB,QAAQ/rB,GA9ZzBtG,kBAAkBsG,GAGxB,GAAY,MAARA,EACH,IAAK,IAAIC,EAAkB,EAAGA,EAAUD,EAAK8b,kBAAmB7b,IAC/D,IAAK,IAAIoQ,EAAqB,EAAGA,EAAarQ,EAAK2b,sBAAuBtL,IACzE2Y,GAAMgD,2BAA2BhsB,EAAK+X,SAAS9X,GAASwX,YAAYpH,IACpErQ,EAAK+X,SAAS9X,GAASwX,YAAYpH,GAAY4b,SAO5CvyB,yBAEN,GAAiB,MAAbmG,KAAKG,MAAgBH,KAAKG,KAAK+a,gBAAkB,EAAG,CAGvD,IAAImR,EAAoC,GACpCC,EAA2C,GAC/CtsB,KAAKusB,UAAY,GACjBvsB,KAAKwsB,cAAgB,GACrBxsB,KAAKysB,aAAe,GACpBzsB,KAAK0sB,iBAAmB,GACxB,IAAK,IAAItsB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAAW,CAC7GksB,EAAkBlsB,GAAW,GAC7BJ,KAAKysB,aAAarsB,GAAW,GAC7BJ,KAAK0sB,iBAAiBtsB,GAAW,GACjC,IAAK,IAAIoQ,EAAqB,EAAGA,EAAaxQ,KAAKG,KAAK2b,sBAAuBtL,IAC9ExQ,KAAKysB,aAAarsB,GAASoQ,GAAc,GACzCxQ,KAAK0sB,iBAAiBtsB,GAASoQ,GAAc,GAC7C8b,EAAkBlsB,GAASoQ,GAAc,GAK3C,IAAImc,EAAsB3sB,KAAK4pB,KAAO17B,EAAOqF,aAAeyM,KAAK6pB,KAGjE,IAAK,IAAIzpB,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,EAAUJ,KAAKG,KAAK8b,kBAAmB7b,IAC5H,IAAMJ,KAAKG,KAAK+X,SAAS9X,GAAc,MAAG,CAEzC,IAAI8b,EAEJ,IAAK,IAAI0Q,EAAqB5sB,KAAKmc,IAAKyQ,GAAc,EAAGA,IAGxD,GAFA1Q,EAAUlc,KAAKG,KAAK6lB,WAAW5lB,EAASwsB,GAEzB,MAAX1Q,EAAiB,CACpB,IAAI2Q,EAAwB7sB,KAAKG,KAAK2sB,qBAAqB1sB,EAASwsB,GAChEpc,EAAyBxQ,KAAKG,KAAK+X,SAAS9X,GAASwX,YAAYiV,GACjEE,EAA2B,GAC3BC,EAA4B,GAE5BC,EAAsBL,GAAc5sB,KAAKmc,IAC1CwQ,EACA3sB,KAAKktB,eAAeN,GAEvB,IAAK,MAAMnc,KAAQyL,EAAQ3L,MAC1B,GAAIE,EAAKlB,MAAQ0d,IAAwE,MAAzDF,EAAe7+B,EAAO0K,SAAW,EAAI6X,EAAKf,QAAQ,KAAee,EAAKjB,IAAMud,EAAe7+B,EAAO0K,SAAW,EAAI6X,EAAKf,QAAQ,KAC7J,GAAIe,EAAKjB,KAAOyd,EACfF,EAAe7+B,EAAO0K,SAAW,EAAI6X,EAAKf,QAAQ,IAAMe,EAAKjB,IAC7Dwd,EAAgB9+B,EAAO0K,SAAW,EAAI6X,EAAKf,QAAQ,IAAMe,EAAKd,KAAKc,EAAKd,KAAKphB,OAAS,GAAGyF,WAErF,CACJ+4B,EAAe7+B,EAAO0K,SAAW,EAAI6X,EAAKf,QAAQ,IAAMud,EAExD,IAAK,IAAIE,EAAS,EAAGA,EAAS1c,EAAKd,KAAKphB,OAAQ4+B,IAC/C,GAAI1c,EAAKd,KAAKwd,GAAQne,KAAOyB,EAAKlB,MAAQ0d,EAAY,CACrD,MAAMG,EAA2B3c,EAAKd,KAAKwd,GAAQne,KAAOyB,EAAKd,KAAKwd,EAAS,GAAGne,KAC1Eqe,EAA0BJ,EAAaxc,EAAKlB,MAAQkB,EAAKd,KAAKwd,EAAS,GAAGne,KAC1Ese,EAAsB7c,EAAKd,KAAKwd,GAAQn5B,OAASyc,EAAKd,KAAKwd,EAAS,GAAGn5B,OAE7Eg5B,EAAgB9+B,EAAO0K,SAAW,EAAI6X,EAAKf,QAAQ,IAAM3gB,KAAKgb,MAAM0G,EAAKd,KAAKwd,EAAS,GAAGn5B,OAASs5B,EAAcD,EAAkBD,GACnID,EAAS1c,EAAKd,KAAKphB,QAQxB,IAAK,IAAIslB,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IACrB,MAAvBkZ,EAAelZ,KACdrD,EAAWkD,YAAYG,IAAQC,EAAUyZ,WACO,MAA/ClB,EAAe7b,EAAWoD,YAAYC,KAAiB+Y,EAAa1+B,EAAOqF,aAAeyM,KAAKG,KAAKub,YAAcqR,EAAelZ,GAAQwY,EAAe7b,EAAWoD,YAAYC,OAClL7T,KAAKwtB,YAAYR,EAAgBnZ,GAAMmZ,EAAgBnZ,GAAMA,EAAKrD,EAAYA,EAAWoD,YAAYC,IACrGwY,EAAe7b,EAAWoD,YAAYC,IAAQ+Y,EAAa1+B,EAAOqF,aAAeyM,KAAKG,KAAKub,YAAcqR,EAAelZ,KAGF,MAA/GyY,EAAkB9b,EAAWlP,YAAYuS,IAAMrD,EAAWmD,eAAeE,IAAMrD,EAAWoD,YAAYC,KAAiB+Y,EAAa1+B,EAAOqF,aAAeyM,KAAKG,KAAKub,YAAcqR,EAAelZ,GAAQyY,EAAkB9b,EAAWlP,YAAYuS,IAAMrD,EAAWmD,eAAeE,IAAMrD,EAAWoD,YAAYC,OACvT7T,KAAKwtB,YAAYR,EAAgBnZ,GAAMmZ,EAAgBnZ,GAAMA,EAAKrD,EAAYA,EAAWoD,YAAYC,IACrGyY,EAAkB9b,EAAWlP,YAAYuS,IAAMrD,EAAWmD,eAAeE,IAAMrD,EAAWoD,YAAYC,IAAQ+Y,EAAa1+B,EAAOqF,aAAeyM,KAAKG,KAAKub,YAAcqR,EAAelZ,QAWzLha,8BAA8B/I,GACrC,OAAQ/B,KAAKuB,IAAI,GAAMQ,EAAY,IAAQ,GAAO,GA0DnD28B,cACC,OAAOztB,KAAK+pB,cAGbziB,eACC,OAAOtH,KAAK2pB,iBAGbriB,aAAoBzV,GACnB,GAAiB,MAAbmO,KAAKG,KAAc,CACtBH,KAAK2pB,iBAAmB56B,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAIwP,KAAKG,KAAKwb,SAAU9pB,IACjE,IAAI67B,EAAoB1tB,KAAK2pB,iBAC7B3pB,KAAKmc,IAAMptB,KAAKmU,MAAMwqB,GACtBA,EAAY1tB,KAAKG,KAAKub,aAAegS,EAAY1tB,KAAKmc,KACtDnc,KAAK4pB,KAAO76B,KAAKmU,MAAMwqB,GACvBA,EAAYx/B,EAAOqF,cAAgBm6B,EAAY1tB,KAAK4pB,MACpD5pB,KAAK6pB,KAAO96B,KAAKmU,MAAMwqB,GACvBA,EAAYx/B,EAAOsF,cAAgBk6B,EAAY1tB,KAAK6pB,MACpD7pB,KAAK4jB,KAAO70B,KAAKmU,MAAMwqB,GACvB,MAAMC,EAAyB3tB,KAAK4tB,oBACpCF,EAAYC,GAAkBD,EAAY1tB,KAAK4jB,MAC/C5jB,KAAK8pB,oBAAsB6D,EAAiBD,GAIvC7zB,mBACN,GAAiB,MAAbmG,KAAKG,KAAc,MAAM,IAAIpQ,MACjC,OAAOiQ,KAAK4tB,oBAAsB1/B,EAAOsF,aAAetF,EAAOqF,aAAeyM,KAAKG,KAAKub,YAIjF7hB,eAAesiB,GACtB,GAAiB,MAAbnc,KAAKG,KAAc,OAAO,EAC9B,IAAI8sB,EAAqB/+B,EAAOqF,aAAeyM,KAAKG,KAAKub,YACzD,IAAK,IAAItb,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,EAAUJ,KAAKG,KAAK8b,kBAAmB7b,IAAW,CACvI,IAAI8b,EAA0Blc,KAAKG,KAAK6lB,WAAW5lB,EAAS+b,GAC5D,GAAe,MAAXD,EAAiB,CACpB,IAAI1L,EAAyBxQ,KAAKG,KAAK+X,SAAS9X,GAASwX,YAAYsE,EAAQ1L,YAC7E,IAAK,IAAIqD,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAChD,GAAIrD,EAAWoD,YAAYC,IAAQG,EAAWgF,YAAcxI,EAAWkD,YAAYG,IAAQC,EAAUyZ,UACpG,IAAK,MAAM9c,KAAQyL,EAAQ3L,MACtBE,EAAKf,QAAQ,IAAOxhB,EAAO0K,SAAW,EAAIib,GAEzCoZ,EAAaxc,EAAKlB,QACrB0d,EAAaxc,EAAKlB,QAOzB,OAAO0d,EAIDpzB,gBAAgBopB,EAAsBE,EAAsB0K,GAClE,GAAiB,MAAb7tB,KAAKG,KACR,OAAQ,EAGT,IAAI2tB,EAAmB7K,EAAc,EAAIjjB,KAAKG,KAAKkb,UAC/C0S,EAAiB5K,EAAcnjB,KAAKG,KAAKwb,SAAY3b,KAAKG,KAAKkb,UAAYrb,KAAKG,KAAKmb,WACrF0S,GAAwB,EACxBC,GAA0B,EAC1BC,EAAoBluB,KAAKG,KAAKwa,MAGlC,IAAK,IAAIva,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,EAAUJ,KAAKG,KAAK8b,kBAAmB7b,IAC5H,IAAK,IAAI+b,EAAc2R,EAAU3R,EAAM4R,EAAQ5R,IAAO,CACrD,IAAID,EAA0Blc,KAAKG,KAAK6lB,WAAW5lB,EAAS+b,GAC5D,GAAe,MAAXD,EAAiB,CACpB,IAAI1L,EAAyBxQ,KAAKG,KAAK+X,SAAS9X,GAASwX,YAAYsE,EAAQ1L,YAC7E,IAAK,IAAIqD,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAC5CrD,EAAWoD,YAAYC,IAAQG,EAAW8E,UAAYtI,EAAWkD,YAAYG,IAAQC,EAAUyZ,YAClGS,GAAe,GAEZxd,EAAWoD,YAAYC,IAAQG,EAAWgF,YAAcxI,EAAWkD,YAAYG,IAAQC,EAAUyZ,YACpGU,GAAiB,IAQtB,GAAIH,EAAW,EAAG,CACjB,IAAIK,EAAgC,KAChCC,EAA2B,EAE/B,IAAK,IAAIjS,EAAc2R,EAAW,EAAG3R,GAAO,EAAGA,IAAO,CACrD,IAAK,IAAI/b,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,EAAUJ,KAAKG,KAAK8b,kBAAmB7b,IAAW,CACvI,IAAI8b,EAAUlc,KAAKG,KAAK6lB,WAAW5lB,EAAS+b,GAE5C,GAAe,MAAXD,EAAiB,CACpB,IAAI2Q,EAAwB7sB,KAAKG,KAAK2sB,qBAAqB1sB,EAAS+b,GAChE3L,EAAyBxQ,KAAKG,KAAK+X,SAAS9X,GAASwX,YAAYiV,GAEjEI,EAAqBjtB,KAAKktB,eAAe/Q,GAE7C,IAAK,MAAM1L,KAAQyL,EAAQ3L,MAC1B,GAAIC,EAAWoD,YAAY1lB,EAAO0K,SAAW,EAAI6X,EAAKf,QAAQ,KAAOsE,EAAW8E,UAAYtI,EAAWkD,YAAYxlB,EAAO0K,SAAW,EAAI6X,EAAKf,QAAQ,KAAOoE,EAAUyZ,WAClK9c,EAAKlB,MAAQ0d,IAAiC,MAAlBkB,GAA0B1d,EAAKjB,IAAM2e,GACpE,GAAI1d,EAAKjB,KAAOyd,EACfkB,EAAiB1d,EAAKjB,IACtB4e,EAAmB3d,EAAKd,KAAKc,EAAKd,KAAKphB,OAAS,GAAGyF,WAE/C,CACJm6B,EAAiBlB,EAEjB,IAAK,IAAIE,EAAS,EAAGA,EAAS1c,EAAKd,KAAKphB,OAAQ4+B,IAC/C,GAAI1c,EAAKd,KAAKwd,GAAQne,KAAOyB,EAAKlB,MAAQ0d,EAAY,CACrD,MAAMG,EAA2B3c,EAAKd,KAAKwd,GAAQne,KAAOyB,EAAKd,KAAKwd,EAAS,GAAGne,KAC1Eqe,EAA0BJ,EAAaxc,EAAKlB,MAAQkB,EAAKd,KAAKwd,EAAS,GAAGne,KAC1Ese,EAAsB7c,EAAKd,KAAKwd,GAAQn5B,OAASyc,EAAKd,KAAKwd,EAAS,GAAGn5B,OAE7Eo6B,EAAmBr/B,KAAKgb,MAAM0G,EAAKd,KAAKwd,EAAS,GAAGn5B,OAASs5B,EAAcD,EAAkBD,GAC7FD,EAAS1c,EAAKd,KAAKphB,UAaL,MAAlB4/B,IACHD,EAAYluB,KAAKG,KAAKkuB,eAAeD,EAAkBpa,EAAW8E,UAClEqD,GAAO,IAKV,GAAI6R,GAAgBC,EAAgB,CAEnC,IAAI9R,EAAc2R,EACdQ,GAAiB,EACjBC,EAAuB,EAE3B,MAAQD,GAAO,CAEd,IAAIrB,EAAqB/+B,EAAOqF,aAAeyM,KAAKG,KAAKub,YACrDiR,EAAsB,EAO1B,GALIsB,IACHhB,EAAajtB,KAAKktB,eAAe/Q,IAI9B6R,EAAc,CACjB,IAAIQ,GAAoB,EACxB,IAAK,IAAIpuB,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,EAAUJ,KAAKG,KAAK8b,kBAAmB7b,IAC5H,GAAgB,GAAZouB,EAAmB,CACtB,IAAItS,EAA0Blc,KAAKG,KAAK6lB,WAAW5lB,EAAS+b,GAC5D,GAAe,MAAXD,EAAiB,CACpB,IAAI1L,EAAyBxQ,KAAKG,KAAK+X,SAAS9X,GAASwX,YAAYsE,EAAQ1L,YAC7E,IAAK,IAAIqD,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAChD,GAAgB,GAAZ2a,GAAqBhe,EAAWoD,YAAYC,IAAQG,EAAW8E,UAAYtI,EAAWkD,YAAYG,IAAQC,EAAUyZ,WACpHrR,EAAQ3L,MAAMke,MAAK5kB,GAAKA,EAAE6F,QAAQ,IAAOxhB,EAAO0K,SAAW,EAAIib,IAAO,CAEzE2a,GAAW,EAEXtS,EAAQ3L,MAAMme,MAAK,SAAUC,EAAGC,GAAK,OAAQD,EAAEpf,OAASqf,EAAErf,MAASof,EAAEjf,QAAQ,GAAKkf,EAAElf,QAAQ,GAAKif,EAAEpf,MAAQqf,EAAErf,SAC7G,IAAK,MAAMkB,KAAQyL,EAAQ3L,MAC1B,GAAIE,EAAKf,QAAQ,IAAOxhB,EAAO0K,SAAW,EAAIib,IAE7C0a,GAAiBx/B,KAAKyB,IAAIy8B,EAAaN,EAAalc,EAAKlB,MAAQod,GAAgBz+B,EAAOsF,aAAewM,KAAK6uB,6BAA6BX,GAErIzd,EAAKlB,MAAQ0d,GAChB,IAAK,IAAIE,EAAiB,EAAGA,EAAS1c,EAAKd,KAAKphB,OAAQ4+B,IAAU,CAEjE,GAAI1c,EAAKd,KAAKwd,EAAS,GAAGne,KAAOyB,EAAKlB,OAAS0d,EAAY,CAC1D,MAAM6B,EAAqB5gC,EAAOsF,aAAezE,KAAKyB,IAAIy8B,GAAcxc,EAAKlB,MAAQkB,EAAKd,KAAKwd,EAAS,GAAGne,MAAOyB,EAAKd,KAAKwd,GAAQne,KAAOyB,EAAKd,KAAKwd,EAAS,GAAGne,MAC3J+f,EAAuB/uB,KAAKG,KAAKkuB,eAAe5d,EAAKd,KAAKwd,EAAS,GAAGn5B,OAAQggB,EAAW8E,UAC/F,IAAIkW,EAAuBhvB,KAAKG,KAAKkuB,eAAe5d,EAAKd,KAAKwd,GAAQn5B,OAAQggB,EAAW8E,UACrFrI,EAAKd,KAAKwd,GAAQne,KAAOyB,EAAKlB,MAAQ0d,IAEzC+B,EAAehvB,KAAKG,KAAKkuB,eAAe5d,EAAKd,KAAKwd,EAAS,GAAGn5B,QAAUyc,EAAKd,KAAKwd,GAAQn5B,OAASyc,EAAKd,KAAKwd,EAAS,GAAGn5B,SAAWi5B,GAAcxc,EAAKlB,MAAQkB,EAAKd,KAAKwd,EAAS,GAAGne,QAAUyB,EAAKd,KAAKwd,GAAQne,KAAOyB,EAAKd,KAAKwd,EAAS,GAAGne,MAAOgF,EAAW8E,WAEjQ,IAAImW,EAAoB/gC,EAAOqF,aAAerF,EAAOsF,aAAe,GAiBnE+6B,GAfGS,GAAgBD,GAeD/uB,KAAKopB,iBAAmB0F,GAAc//B,KAAK6B,IAAIq+B,EAAYD,EAAeF,GAAc//B,KAAK6B,IAAIq+B,EAAYF,EAAeD,KAAgBG,GAAaF,EAAeC,IAM1KF,EAAa9uB,KAAK6uB,6BAA6BG,GAGhEd,EAAYc,EAEbrC,EAAc59B,KAAKyB,IAAIigB,EAAKlB,MAAQkB,EAAKd,KAAKwd,GAAQne,KAAMie,OAatEsB,IAAiBtB,EAAaN,GAAez+B,EAAOsF,aAAewM,KAAK6uB,6BAA6BX,GAErG/R,IACY,GAAR0R,GAAa1R,GAAOnc,KAAKG,KAAKkb,UAAYrb,KAAKG,KAAKmb,aACvDa,EAAMnc,KAAKG,KAAKkb,UACZwS,EAAO,GAAGA,KAEX1R,GAAO4R,IACVO,GAAQ,GAIV,OAAOv/B,KAAK+f,KAAKyf,GAIjB,OAAOvuB,KAAKkvB,mBAAqBlvB,KAAKmvB,aAAalM,EAAaE,EAAa0K,GAIxEh0B,aAAaopB,EAAsBE,EAAsBiM,EAAuBpvB,KAAKypB,iBAC3F,GAAiB,MAAbzpB,KAAKG,KAAc,MAAM,IAAIpQ,MACjC,IAAI+nB,EAAe9X,KAAKG,KAAKmb,YAAc8T,EAAe,GAG1D,OAFInM,IAAanL,GAAQ9X,KAAKG,KAAKkb,WAC/B8H,IAAarL,GAAQ9X,KAAKG,KAAKwb,UAAY3b,KAAKG,KAAKkb,UAAYrb,KAAKG,KAAKmb,aACxExD,EAODje,QAAQsG,GACO,iBAAjB,EACHH,KAAKG,KAAO,IAAI6X,EAAK7X,GACXA,aAAgB6X,IAC1BhY,KAAKG,KAAOA,GAIPtG,YAAY4tB,EAAqB4H,EAAmBxb,EAAarD,EAAwByK,GAC/F,IAAI9L,EACAmgB,EACJ,OAAQrU,GACP,KAAKjH,EAAW6E,cAChB,KAAK7E,EAAW+E,UAChB,KAAK/E,EAAW8E,SAChB,KAAK9E,EAAW6F,cACf1K,EAAOnP,KAAKG,KAAckuB,eAAe5G,EAAaxM,GACtDqU,EAAWtvB,KAAKG,KAAckuB,eAAegB,EAAWpU,GACzB,MAA3Bjb,KAAKusB,UAAUtR,IAAoBjb,KAAKusB,UAAUtR,IAAY9L,GAAOnP,KAAKwsB,cAAcvR,IAAYqU,IACvGtvB,KAAKusB,UAAUtR,GAAW9L,EAC1BnP,KAAKwsB,cAAcvR,GAAWqU,GAE/B,MACD,KAAKtb,EAAWiF,aAChB,KAAKjF,EAAWkF,OAChB,KAAKlF,EAAW0F,cAChB,KAAK1F,EAAWmF,aAChB,KAAKnF,EAAWoF,cAChB,KAAKpF,EAAWqF,aAChB,KAAKrF,EAAWsF,aAChB,KAAKtF,EAAWuF,aAChB,KAAKvF,EAAWwF,aAChB,KAAKxF,EAAWyF,cAChB,KAAKzF,EAAW4F,gBAChB,KAAK5F,EAAW8F,gBAChB,KAAK9F,EAAW+F,gBAChB,KAAK/F,EAAWgG,iBAChB,KAAKhG,EAAWiG,YAChB,KAAKjG,EAAWkG,iBAChB,KAAKlG,EAAW2F,UACfxK,EAAMnP,KAAKG,KAAMkuB,eAAe5G,EAAaxM,GAC7CqU,EAAUtvB,KAAKG,KAAMkuB,eAAegB,EAAWpU,GAC/C,IAAIsU,EAAwB/e,EAAWlP,YAAYuS,IAASrD,EAAWkD,YAAYG,IAAQC,EAAUwJ,WAActd,KAAKG,KAAMe,kBAAoB,GAEjE,MAA7ElB,KAAKysB,aAAa8C,GAAe/e,EAAWmD,eAAeE,IAAMoH,IACjEjb,KAAKysB,aAAa8C,GAAe/e,EAAWmD,eAAeE,IAAMoH,IAAY9L,GAC7EnP,KAAK0sB,iBAAiB6C,GAAe/e,EAAWmD,eAAeE,IAAMoH,IAAYqU,IACpFtvB,KAAKysB,aAAa8C,GAAe/e,EAAWmD,eAAeE,IAAMoH,GAAW9L,EAC5EnP,KAAK0sB,iBAAiB6C,GAAe/e,EAAWmD,eAAeE,IAAMoH,GAAWqU,GAEjF,MACD,KAAKtb,EAAWgF,WACf7J,EAAOnP,KAAKG,KAAckuB,eAAe5G,EAAaxM,GACtD,MACD,KAAKjH,EAAWC,QAChB,QACC9E,GAAO,EAIT,OAAOA,EAGDtV,YAAYohB,EAAqBuU,EAAkBpvB,EAAyBoQ,EAA4B8e,GAC9G,GAAIE,GACH,GAA+B,MAA3BxvB,KAAKusB,UAAUtR,IAAmD,MAA/Bjb,KAAKwsB,cAAcvR,GACzD,OAAOqU,EAAUtvB,KAAKwsB,cAAcvR,GAAYjb,KAAKusB,UAAUtR,QAE1D,GAAe9N,MAAX/M,GAAsC+M,MAAdqD,GACqB,MAAnDxQ,KAAKysB,aAAarsB,GAASoQ,GAAYyK,IAA2E,MAAvDjb,KAAK0sB,iBAAiBtsB,GAASoQ,GAAYyK,GACzG,OAAOqU,EAAUtvB,KAAK0sB,iBAAiBtsB,GAASoQ,GAAYyK,GAAYjb,KAAKysB,aAAarsB,GAASoQ,GAAYyK,GAGjH,OAAQ,EAIFphB,eAAeuG,EAAiBoQ,GACtC,IAAK,IAAIyK,EAAkB,EAAGA,EAAUjH,EAAWmG,YAAac,IAC/D,GAAuB9N,MAAlBnN,KAAKusB,WAAqD,MAA3BvsB,KAAKusB,UAAUtR,IACzB9N,MAArBnN,KAAKysB,cAA2Dtf,MAA9BnN,KAAKysB,aAAarsB,IAAmE+M,MAA1CnN,KAAKysB,aAAarsB,GAASoQ,IAA+E,MAAnDxQ,KAAKysB,aAAarsB,GAASoQ,GAAYyK,GAC/K,OAAO,EAGT,OAAO,EAGDphB,SAASohB,EAAqB7a,EAAkBoQ,IAClDxQ,KAAKyvB,YAAYxU,GAAS,IAAqB9N,MAAX/M,GAAsC+M,MAAdqD,GAA2BxQ,KAAKyvB,YAAYxU,GAAS,EAAO7a,EAASoQ,MACpIxQ,KAAKusB,UAAUtR,GAAW,KAC1Bjb,KAAKwsB,cAAcvR,GAAW,KACf9N,MAAX/M,GAAsC+M,MAAdqD,IAC3BxQ,KAAKysB,aAAarsB,GAASoQ,GAAYyK,GAAW,KAClDjb,KAAK0sB,iBAAiBtsB,GAASoQ,GAAYyK,GAAW,OAKlDphB,YAAYohB,EAAqBuU,EAAkBpvB,EAAkBoQ,GAC3E,OAAIgf,EACuBriB,MAAlBnN,KAAKusB,WAAqD,MAA3BvsB,KAAKusB,UAAUtR,GACjC9N,MAAX/M,GAAsC+M,MAAdqD,GAAgDrD,MAArBnN,KAAKysB,cAA2D,MAA9BzsB,KAAKysB,aAAarsB,IAA8D,MAA1CJ,KAAKysB,aAAarsB,GAASoQ,IAA0E,MAAnDxQ,KAAKysB,aAAarsB,GAASoQ,GAAYyK,IACnK,MAAnDjb,KAAKysB,aAAarsB,GAASoQ,GAAYyK,GAKzCphB,gBACc,MAAjBmG,KAAKsrB,UAAuC,MAAnBtrB,KAAKurB,aACjCvrB,KAAKsrB,SAAWtrB,KAAKsrB,UAAY,IAAKzK,OAAO6O,cAAgB7O,OAAO8O,oBACpE3vB,KAAKopB,iBAAmBppB,KAAKsrB,SAASsE,WACtC5vB,KAAKurB,WAAavrB,KAAKsrB,SAASuE,sBAAwB7vB,KAAKsrB,SAASuE,sBAAsB,KAAM,EAAG,GAAK7vB,KAAKsrB,SAASwE,qBAAqB,KAAM,EAAG,GACtJ9vB,KAAKurB,WAAWwE,eAAiB/vB,KAAKwrB,qBACtCxrB,KAAKurB,WAAWyE,iBAAmB,WACnChwB,KAAKurB,WAAW0E,sBAAwB,WACxCjwB,KAAKurB,WAAW2E,QAAQlwB,KAAKsrB,SAAS6E,cAEvCnwB,KAAKsrB,SAAS8E,SAGPv2B,kBACc,MAAjBmG,KAAKsrB,UAAuC,MAAnBtrB,KAAKurB,aACjCvrB,KAAKurB,WAAW8E,WAAWrwB,KAAKsrB,SAAS6E,aACzCnwB,KAAKurB,WAAa,KACdvrB,KAAKsrB,SAASgF,OAAOtwB,KAAKsrB,SAASgF,QACvCtwB,KAAKsrB,SAAW,MAIXzxB,oBACNmG,KAAKuwB,gBACLvwB,KAAKgqB,iBAAmB8B,YAAYC,MAAQ,IAGtClyB,OACFmG,KAAK+pB,gBACT/pB,KAAK+pB,eAAgB,EACrB/pB,KAAKwwB,kBAAkBxwB,KAAKG,MAC5BH,KAAKywB,yBACLzwB,KAAKuwB,iBAGC12B,QACDmG,KAAK+pB,gBACV/pB,KAAK+pB,eAAgB,EACJ,MAAb/pB,KAAKG,OACRH,KAAKG,KAAKuY,YAAc,EACxB1Y,KAAKG,KAAKwY,aAAe,GAE1B3Y,KAAKusB,UAAY,GACjBvsB,KAAKysB,aAAe,GACpBzsB,KAAKwsB,cAAgB,GACrBxsB,KAAK0sB,iBAAmB,GACxB1sB,KAAKmqB,UAAY,IAGXtwB,cACNmG,KAAKmc,IAAM,EACXnc,KAAK0wB,YAGC72B,QAAQsiB,GACdnc,KAAKmc,IAAMA,EACXnc,KAAK2pB,iBAAmB3pB,KAAKmc,IAGvBtiB,YACNmG,KAAK2pB,iBAAmB3pB,KAAKmc,IAC7Bnc,KAAK4pB,KAAO,EACZ5pB,KAAK6pB,KAAO,EACZ7pB,KAAK4jB,KAAO,EACZ5jB,KAAK8pB,oBAAsB,EAGrBjwB,eACNmG,KAAKirB,eAAiB,EACtBjrB,KAAKkrB,gBAAkB,EACvBlrB,KAAKmrB,gBAAkB,EACvBnrB,KAAKorB,gBAAkB,EACvBprB,KAAKqrB,gBAAkB,EAGvBrrB,KAAK2wB,eACL,IAAK,IAAIriC,EAAY,EAAGA,EAAI0R,KAAKgrB,gBAAgBz8B,OAAQD,IAAK0R,KAAKgrB,gBAAgB18B,GAAK,EACxF,IAAK,IAAIA,EAAY,EAAGA,EAAI0R,KAAK6qB,gBAAgBt8B,OAAQD,IAAK0R,KAAK6qB,gBAAgBv8B,GAAK,EACxF,GAA2B,MAAvB0R,KAAKyqB,eAAwB,IAAK,IAAIn8B,EAAY,EAAGA,EAAI0R,KAAKyqB,eAAel8B,OAAQD,IAAK0R,KAAKyqB,eAAen8B,GAAK,EACvH,GAA6B,MAAzB0R,KAAK0qB,iBAA0B,IAAK,IAAIp8B,EAAY,EAAGA,EAAI0R,KAAK0qB,iBAAiBn8B,OAAQD,IAAK0R,KAAK0qB,iBAAiBp8B,GAAK,EAC7H,GAA6B,MAAzB0R,KAAK2qB,iBAA0B,IAAK,IAAIr8B,EAAY,EAAGA,EAAI0R,KAAK2qB,iBAAiBp8B,OAAQD,IAAK0R,KAAK2qB,iBAAiBr8B,GAAK,EAC7H,GAAmC,MAA/B0R,KAAK4qB,uBAAgC,IAAK,IAAIt8B,EAAY,EAAGA,EAAI0R,KAAK4qB,uBAAuBr8B,OAAQD,IAAK0R,KAAK4qB,uBAAuBt8B,GAAK,EAGzIuL,eACN,GAAKmG,KAAKG,OACNH,KAAKmc,IAAMnc,KAAKG,KAAKkb,WAAarb,KAAKmc,KAAOnc,KAAKG,KAAKkb,UAAYrb,KAAKG,KAAKmb,YAAY,CAC7F,MAAMsV,EAAiB5wB,KAAKmc,IAC5Bnc,KAAKmc,IAAMnc,KAAKG,KAAKkb,UACrBrb,KAAK2pB,kBAAoB3pB,KAAKmc,IAAMyU,EAEhC5wB,KAAKytB,SACRztB,KAAKywB,0BAID52B,UACN,IAAKmG,KAAKG,KAAM,OAChB,MAAMywB,EAAiB5wB,KAAKmc,IAC5Bnc,KAAKmc,MACDnc,KAAKmc,KAAOnc,KAAKG,KAAKwb,WACzB3b,KAAKmc,IAAM,GAEZnc,KAAK2pB,kBAAoB3pB,KAAKmc,IAAMyU,EAGpC,IAAK,IAAIxwB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClGJ,KAAKmqB,UAAU/pB,IAAY,EAGxBJ,KAAKytB,SACRztB,KAAKywB,yBAGA52B,UACN,IAAKmG,KAAKG,KAAM,OAChB,MAAMwtB,EAAyB3tB,KAAK4tB,oBACpC5tB,KAAKmc,MACLnc,KAAK4pB,KAAO,EACZ5pB,KAAK6pB,KAAO,EACZ7pB,KAAK4jB,KAAO,EACZ5jB,KAAK8pB,oBAAsB6D,EAEC,GAAxB3tB,KAAKypB,iBAAwBzpB,KAAKmc,KAAOnc,KAAKG,KAAKkb,UAAYrb,KAAKG,KAAKmb,aAC5Etb,KAAKmc,IAAMnc,KAAKG,KAAKkb,UACjBrb,KAAKypB,gBAAkB,GAAGzpB,KAAKypB,mBAK9B5vB,WACN,GAAKmG,KAAKG,KAAV,CACAH,KAAKmc,IAAM,EACXnc,KAAK2pB,iBAAmB,EACxB3pB,KAAK4pB,KAAO,EACZ5pB,KAAK6pB,KAAO,EAGZ,IAAK,IAAIzpB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClGJ,KAAKmqB,UAAU/pB,IAAY,EAGxBJ,KAAKytB,SACRztB,KAAKywB,0BAGA52B,iBAAiBsiB,GACvB,GAAKnc,KAAKG,KAAV,CAEAH,KAAKmc,IAAMA,EAEXnc,KAAK2pB,iBAAmBxN,EACxBnc,KAAK4pB,KAAO,EACZ5pB,KAAK6pB,KAAO,EAGZ,IAAK,IAAIzpB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClGJ,KAAKmqB,UAAU/pB,IAAY,EAGxBJ,KAAKytB,SACRztB,KAAKywB,0BAGA52B,UACN,IAAKmG,KAAKG,KAAM,OAChB,MAAMywB,EAAiB5wB,KAAKmc,IAC5Bnc,KAAKmc,OACDnc,KAAKmc,IAAM,GAAKnc,KAAKmc,KAAOnc,KAAKG,KAAKwb,YACzC3b,KAAKmc,IAAMnc,KAAKG,KAAKwb,SAAW,GAEjC3b,KAAK2pB,kBAAoB3pB,KAAKmc,IAAMyU,EAGpC,IAAK,IAAIxwB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClGJ,KAAKmqB,UAAU/pB,IAAY,EAGxBJ,KAAKytB,SACRztB,KAAKywB,yBAoBA52B,WAAW8xB,EAA2BE,EAA2BgF,EAA4BC,GAAoB,GACvH,GAAiB,MAAb9wB,KAAKG,KAAc,CACtB,IAAK,IAAI7R,EAAY,EAAGA,EAAIuiC,EAAoBviC,IAC/Cq9B,EAAYr9B,GAAK,EACjBu9B,EAAYv9B,GAAK,EAGlB,YADA0R,KAAKisB,kBAINjsB,KAAKG,KAAKuY,YAAc,EACxB1Y,KAAKG,KAAKwY,aAAe,EAEzB,MAAMoY,EAAuB/wB,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAErE,IAAK,IAAI9S,EAAY0R,KAAKkqB,YAAY37B,OAAQD,EAAIyiC,EAAcziC,IAC/D0R,KAAKkqB,YAAY57B,GAAK,IAAI0e,EAC1BhN,KAAKqqB,cAAc/7B,GAAK,IAAI0e,EAI7B,GAFAhN,KAAKkqB,YAAY37B,OAASwiC,EAC1B/wB,KAAKqqB,cAAc97B,OAASwiC,EACxBA,GAAgB/wB,KAAKmqB,UAAU57B,OAAQ,CAC1C,IAAIyiC,EAAchxB,KAAKmqB,UAAU57B,OAEjC,IADAyR,KAAKmqB,UAAU57B,OAASwiC,EACjBC,EAAMhxB,KAAKmqB,UAAU57B,QAC3ByR,KAAKmqB,UAAU6G,MAAU,EAI3B,IAAK,IAAI1iC,EAAY0R,KAAKoqB,eAAe77B,OAAQD,EAAI0R,KAAKG,KAAK+a,gBAAiB5sB,IAAK,CACpF0R,KAAKoqB,eAAe97B,GAAK,GACzB,IAAK,IAAIulB,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAChD7T,KAAKoqB,eAAe97B,GAAGulB,GAAO,IAAI7G,EAEnChN,KAAKoqB,eAAe97B,GAAGC,OAASL,EAAO0K,SAExCoH,KAAKoqB,eAAe77B,OAASyR,KAAKG,KAAK+a,gBAEvC,IAAIyS,EAAyB3tB,KAAK4tB,oBAC9BqD,EAAsB,EACtB3C,GAAiB,EAGrB,KAAOtuB,KAAK8pB,qBAAuB,GAAG9pB,KAAK8pB,qBAAuB6D,EAC9D3tB,KAAK8pB,oBAAsB6D,IAAgB3tB,KAAK8pB,oBAAsB6D,GACtEmD,IACC9wB,KAAK4pB,MAAQ5pB,KAAKG,KAAKub,cAC1B1b,KAAKmc,MACLnc,KAAK4pB,KAAO,EACZ5pB,KAAK6pB,KAAO,EACZ7pB,KAAK4jB,KAAO,EACZ5jB,KAAK8pB,oBAAsB6D,EAEC,GAAxB3tB,KAAKypB,iBAAwBzpB,KAAKmc,KAAOnc,KAAKG,KAAKkb,UAAYrb,KAAKG,KAAKmb,aAC5Etb,KAAKmc,IAAMnc,KAAKG,KAAKkb,UACjBrb,KAAKypB,gBAAkB,GAAGzpB,KAAKypB,oBAGjCzpB,KAAKmc,KAAOnc,KAAKG,KAAKwb,WACzB3b,KAAKmc,IAAM,GACkB,GAAzBnc,KAAKypB,kBACR6E,GAAQ,EACRtuB,KAAKkxB,WAOR,MAAMC,EAAkD,EAArBN,EACR,MAAvB7wB,KAAKyqB,gBAA0BzqB,KAAKyqB,eAAel8B,QAAU4iC,GACvC,MAAzBnxB,KAAK0qB,kBAA4B1qB,KAAK0qB,iBAAiBn8B,QAAU4iC,GACxC,MAAzBnxB,KAAK2qB,kBAA4B3qB,KAAK2qB,iBAAiBp8B,QAAU4iC,GAClC,MAA/BnxB,KAAK4qB,wBAAkC5qB,KAAK4qB,uBAAuBr8B,QAAU4iC,IAC7EnxB,KAAKyqB,eAAiB,IAAIj7B,aAAa2hC,GACvCnxB,KAAK0qB,iBAAmB,IAAIl7B,aAAa2hC,GACzCnxB,KAAK2qB,iBAAmB,IAAIn7B,aAAa2hC,GACzCnxB,KAAK4qB,uBAAyB,IAAIp7B,aAAa2hC,GAC/CnxB,KAAKwqB,kBAAoB,GAE1B,IAAIA,EAA4BxqB,KAAKwqB,kBACrC,MAAMC,EAA+BzqB,KAAKyqB,eACpCC,EAAiC1qB,KAAK0qB,iBACtCC,EAAiC3qB,KAAK2qB,iBACtCC,EAAuC5qB,KAAK4qB,uBAG5C52B,GAAkBgM,KAAKhM,OACvB62B,EAAgC7qB,KAAK6qB,gBACrCG,EAAgChrB,KAAKgrB,gBAErCoG,EAAgC,EAAVriC,KAAKkC,IADF,EAC+B+O,KAAKopB,kBAC7DiI,EAAsB,IAAMrxB,KAAKopB,iBAAmB,MACpDkI,EAAwB,KAAQ,KAAOD,EACvCE,EAAwB,KAAQ,IAAOF,EACvCG,EAAwB,KAAQ,KAAOH,EACvCI,EAAwB,KAAQ,KAAOJ,EACvCK,EAAwB,KAAQ,KAAOL,EACvCM,EAAwB,KAAQ,KAAON,EAC7C,IAAItG,EAAsB/qB,KAAK+qB,aAAyB,EAAVh8B,KAAKkC,IAC/C65B,EAA+C,KAAtB9qB,KAAK8qB,eAC9BG,EAA+C,MAAtBjrB,KAAKirB,eAC9BC,GAA2BlrB,KAAKkrB,gBAChCC,GAA2BnrB,KAAKmrB,gBAChCC,GAA2BprB,KAAKorB,gBAChCC,GAA2BrrB,KAAKqrB,gBAChCuG,EAAoB5xB,KAAKG,KAAKob,OAC9Bvb,KAAKyvB,YAAYzb,EAAW+E,WAAW,KAC1C6Y,EAAY5xB,KAAK6xB,YAAY7d,EAAW+E,WAAW,IAEpD,IAAIwC,EAAmE,KAAlDxsB,KAAKuB,IAAIshC,EAAY1jC,EAAO4E,YAAa,MAE9D,MAAMqlB,EAAqB,EAAMppB,KAAKuB,IAAI,GAAK0P,KAAKG,KAAKgY,WAAanY,KAAKopB,kBACrEhR,EAAoB,EAAMrpB,KAAKuB,IAAI,GAAK0P,KAAKG,KAAKiY,UAAYpY,KAAKopB,kBACnE/Q,EAA+BrY,KAAKG,KAAKkY,qBACzCC,EAAyBtY,KAAKG,KAAKmY,eACnCC,EAA2BvY,KAAKG,KAAKoY,iBACrCC,EAAqBxY,KAAKG,KAAKqY,WAC/BC,EAAqBzY,KAAKG,KAAKsY,WAGrC,IAAI8R,GAAiBvqB,KAAKuqB,MAE1B,KAAO0G,EAAcJ,IAAuBvC,GAAO,CAElD,MAAMwD,EAA8BjB,EAAqBI,EACnDc,EAAoBhjC,KAAKyB,IAAIzB,KAAK+f,KAAK9O,KAAK8pB,qBAAsBgI,GAExE,IAAK,IAAIvX,EAAqB,EAAGna,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBmZ,EAAava,KAAKG,KAAK+a,gBAAiBX,IAAcna,IAAW,CAE9KJ,KAAKgyB,4BAA4BhyB,KAAKG,KAAMC,EAAS0wB,GAErD,IAAK,IAAIjd,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAChD,IAAK,IAAIvlB,EAAY,EAAGA,EAAI0R,KAAKoqB,eAAe7P,GAAY1G,GAAKoe,QAAS3jC,IAAK,CAC9E,MAAM4jC,EAAalyB,KAAKoqB,eAAe7P,GAAY1G,GAAKrS,IAAIlT,GAEnB,GAArC0R,KAAKG,KAAK+X,SAAS9X,GAAS2X,OAC/B/X,KAAKmyB,SAASnyB,KAAKG,KAAMqqB,EAAmB2G,EAAoB/wB,EAASutB,EAAgBoE,EAAWG,GAAM,GAAO,IAMjHlyB,KAAK0pB,aACR1pB,KAAK0pB,YAAa,EAClB1pB,KAAKoyB,WAGFpyB,KAAKyvB,YAAYzb,EAAW+E,WAAW,KAC1CwC,EAA8F,KAArFxsB,KAAKuB,IAAI0P,KAAK6xB,YAAY7d,EAAW+E,WAAW,GAAQ7qB,EAAO4E,YAAa,OAKtF,MAAMg3B,GAA8B9pB,KAAK8pB,oBACnCuI,GAAqB,EAAM,GAAwB1E,EACnD2E,GAAmB,GAAOxI,GAAsBiI,GAAapE,EAC7D4E,IAAwBvyB,KAAK4pB,KAAO17B,EAAOqF,aAAeyM,KAAK6pB,MAAQ37B,EAAOsF,aAAewM,KAAK4jB,KAClG4O,GAA4B,GAAiBtkC,EAAOsF,aACpDi/B,IAA2BF,GAAe,GAAKrkC,EAAOsF,aACtDk/B,GAAwBF,IAAqBC,GAAkBD,IAAqBH,GACpFM,GAAsBH,IAAqBC,GAAkBD,IAAqBF,GAExF,IAAK,IAAIlyB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClG,IAAK,IAAIysB,EAAwB,EAAGA,EAAgB7sB,KAAKG,KAAK2b,sBAAuB+Q,IAAiB,CACrG,IAAIrc,EAAyBxQ,KAAKG,KAAK+X,SAAS9X,GAASwX,YAAYiV,GACjE+F,EAA0BpiB,EAAWiC,aAEzCjC,EAAW2C,QAAU3C,EAAW4C,YAE5BpT,KAAKyvB,YAAYzb,EAAW8F,iBAAiB,EAAO1Z,EAASysB,KAChE+F,EAAkB5yB,KAAK6xB,YAAY7d,EAAW8F,iBAAiB,EAAO1Z,EAASysB,GAAe,IAGxE,GAAnB+F,GACHpiB,EAAW2C,QAAU,EACrB3C,EAAW4C,YAAc,GAGzB5C,EAAW4C,aAAiC,GAAlBwf,GAAyBD,GAAcD,IAKpE,IAAK,IAAItyB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAAW,CAE7G,GAAIA,GAAWJ,KAAKwpB,iBAAkB,CACrCxpB,KAAK6yB,wBAAwB7yB,KAAKG,MAElC,IAAK,IAAI7R,EAAY,EAAGA,EAAI0R,KAAKsqB,eAAe2H,QAAS3jC,IAAK,CAC7D,MAAM4jC,EAAalyB,KAAKsqB,eAAe9oB,IAAIlT,GAG3C0R,KAAKmyB,SAASnyB,KAAKG,KAAMqqB,EAAmB2G,EAAoB/wB,EAASutB,EAAgBoE,EAAWG,GAAM,GAAO,IAInHlyB,KAAKgyB,4BAA4BhyB,KAAKG,KAAMC,EAAS0wB,GACrD,IAAK,IAAIxiC,EAAY,EAAGA,EAAI0R,KAAKkqB,YAAY9pB,GAAS6xB,QAAS3jC,IAAK,CACnE,MAAM4jC,EAAalyB,KAAKkqB,YAAY9pB,GAASoB,IAAIlT,GACjD0R,KAAKmyB,SAASnyB,KAAKG,KAAMqqB,EAAmB2G,EAAoB/wB,EAASutB,EAAgBoE,EAAWG,GAAM,GAAO,GAGlH,IAAK,IAAI5jC,EAAY,EAAGA,EAAI0R,KAAKqqB,cAAcjqB,GAAS6xB,QAAS3jC,IAAK,CACrE,MAAM4jC,EAAalyB,KAAKqqB,cAAcjqB,GAASoB,IAAIlT,GACnD,GAAI4jC,EAAKtL,oBAAsBsL,EAAK1hB,WAAWsiB,gBAAgBj+B,aAAc,CAC5EmL,KAAK+yB,iBAAiB3yB,EAAS9R,GAC/BA,IACA,SAGD,MAAM0kC,EAA8B1kC,EAAI0R,KAAKkqB,YAAY9pB,GAAS6xB,SAAW/jC,EAAO6K,uBAEpFiH,KAAKmyB,SAASnyB,KAAKG,KAAMqqB,EAAmB2G,EAAoB/wB,EAASutB,EAAgBoE,EAAWG,GAAM,EAAMc,IAMlH,IAAIC,GAA0BnI,EAAiBwG,EAAgBD,EAActiC,KAAKoC,IAAI45B,EAAc,GAChGmI,GAA0BpI,EAAiByG,EAAgBF,EAActiC,KAAKoC,IAAI45B,EAAc,KAChGoI,GAA0BrI,EAAiB0G,EAAgBH,EAActiC,KAAKoC,IAAI45B,EAAc,KAChGqI,GAA0BtI,EAAiB,KAAQ2G,EAAgBJ,EAActiC,KAAKoC,IAAI45B,EAAc,KACxGsI,GAA0BvI,EAAiB,KAAQ4G,EAAgBL,EAActiC,KAAKoC,IAAI45B,EAAc,KACxGuI,GAA0BxI,EAAiB,KAAQ6G,EAAgBN,EAActiC,KAAKoC,IAAI45B,EAAc,GAC5GA,GAAeqG,EAAcW,EAC7B,MAMMwB,IANwBzI,EAAiBiH,EAAYT,EAAgBD,EAActiC,KAAKoC,IAAI45B,EAAc,GAM/DkI,IAAmBlB,EAC9DyB,IANwB1I,EAAiBiH,EAAYR,EAAgBF,EAActiC,KAAKoC,IAAI45B,EAAc,KAM/DmI,IAAmBnB,EAC9D0B,IANwB3I,EAAiBiH,EAAYP,EAAgBH,EAActiC,KAAKoC,IAAI45B,EAAc,KAM/DoI,IAAmBpB,EAC9D2B,IANwB5I,EAAiBiH,EAAY,KAAQN,EAAgBJ,EAActiC,KAAKoC,IAAI45B,EAAc,KAMvEqI,IAAmBrB,EAC9D4B,IANwB7I,EAAiBiH,EAAY,KAAQL,EAAgBL,EAActiC,KAAKoC,IAAI45B,EAAc,KAMvEsI,IAAmBtB,EAC9D6B,IANwB9I,EAAiBiH,EAAY,KAAQJ,EAAgBN,EAActiC,KAAKoC,IAAI45B,EAAc,GAMvEuI,IAAmBvB,EAC9D8B,GAAiB5C,EAAcc,EACrC,IAAK,IAAIzjC,EAAY2iC,EAAa3iC,EAAIulC,GAAQvlC,IAAK,CAClD,MAAMwlC,EAAuBtJ,EACvBuJ,EAAuBvJ,EAAoB,EAC3CwJ,EAAyBvJ,EAAeqJ,GAAerJ,EAAeqJ,GAAgB,EAC5F,MAAMG,EAAyBxJ,EAAesJ,GAAetJ,EAAesJ,GAAgB,EAC5F,MAAMG,EAA2BxJ,EAAiBoJ,GAAepJ,EAAiBoJ,GAAgB,EAClG,MAAMK,EAA2BzJ,EAAiBqJ,GAAerJ,EAAiBqJ,GAAgB,EAClG,MAAMK,EAA2BzJ,EAAiBmJ,GAAenJ,EAAiBmJ,GAAgB,EAClG,MAAMO,EAA2B1J,EAAiBoJ,GAAepJ,EAAiBoJ,GAAgB,EAClG,MAAMO,EAAiC1J,EAAuBkJ,GAAelJ,EAAuBkJ,GAAgB,EACpH,MAAMS,EAAiC3J,EAAuBmJ,GAAenJ,EAAuBmJ,GAAgB,EACpHvJ,GAAqB,EAErB,MAAMgK,EAA0BJ,EAAmBE,EAC7CG,EAA0BJ,EAAmBE,EAE7CG,EAA0BzB,GAAkB,EAC5C0B,EAA0BzB,GAAkB,EAC5C0B,EAA0BzB,GAAkB,EAC5C0B,EAA0BzB,GAAkB,EAC5C0B,EAA0BzB,GAAkB,EAC5C0B,EAA0BzB,GAAkB,EAC5C0B,EAAsBnK,EAAoC,KAApB,IACtCoK,EAAsBpK,EAAiBoI,GAAkB,EAAK,MAC9DiC,EAAsBrK,EAAoC,KAApB,IACtCsK,EAAsBtK,EAAiBqI,GAAkB,EAAK,MAC9DkC,EAAsBvK,EAAoC,KAApB,IACtCwK,EAAsBxK,EAAiBsI,GAAkB,EAAK,MAC9DmC,EAAsBzK,EAAoC,KAApB,IACtC0K,EAAsB1K,EAAiBuI,GAAkB,EAAK,MAC9DoC,EAAsB3K,EAAoC,KAApB,IACtC4K,EAAsB5K,EAAiBwI,GAAkB,EAAK,MAC9DqC,GAAsB7K,EAAoC,KAApB,IAQtC8K,GAAgB,IAAOnB,GANFQ,GAAeC,EAAcD,GAAeN,IAC5CQ,GAAeC,EAAcD,GAAeP,IAC5CS,GAAeC,EAAcD,GAAeR,IAKjEgB,GAAgB,IAAOnB,GAJFa,GAAeC,EAAcD,GAAeT,IAC5CW,GAAeC,EAAcD,GAAeV,IAC5CY,IANC7K,EAAiByI,GAAkB,EAAK,MAMZoC,IAAeX,IAGvElK,EAAgBC,GAAkB0J,EAClC3J,EAAiBC,EAAiB,KAAS,MAAS2J,EACpD3J,EAAkBA,EAAiB,EAAK,KACxCmI,IAAmBM,GACnBL,IAAmBM,GACnBL,IAAmBM,GACnBL,IAAmBM,GACnBL,IAAmBM,GACnBL,IAAmBM,GAMnB,MAAMiC,GAA2B5K,EAAiB,KAAQ,MACpD6K,GAA2B7K,EAAiB,KAAQ,MACpD8K,GAA2B9K,EAAiB,MAAS,MACrD+K,GAAyBhL,EAAgBC,GACzCgL,GAAwBjL,EAAgB6K,IACxCK,GAAwBlL,EAAgB8K,IACxCK,GAAwBnL,EAAgB+K,IACxCK,KAAwBJ,GAAgB1B,EAAyBJ,GAAoB+B,GACrFI,KAAwBL,GAAgBzB,EAAyBJ,GAAoB8B,GACrFK,IAAuBJ,GAAgBC,GACvCI,IAAuBL,GAAgBC,GAC7CjL,GAA8E,KAAzDkL,GAAcE,IAAe/a,EAAS2P,GAC3DC,GAA8E,KAAzDkL,GAAcE,IAAehb,EAAS4P,GAC3DC,GAA8E,KAAzDgL,GAAcE,IAAe/a,EAAS6P,GAC3DC,GAA8E,KAAzDgL,GAAcE,IAAehb,EAAS8P,GAC3DL,EAAgB6K,IAAmB3K,EACnCF,EAAgB8K,IAAmB3K,EACnCH,EAAgB+K,IAAmB3K,EACnCJ,EAAgBC,GAAkBI,EAClCJ,EAAkBA,EAAiB,EAAK,MAGxC,MAAMuL,GAAU/d,EAAaA,GAAcub,EAAiB2B,GAAgBzB,EAAmB+B,GAAgBC,GAAgBC,IACzHM,GAAUhe,EAAaA,GAAcwb,EAAiB2B,GAAgBzB,EAAmB6B,GAAgBE,GAAgBC,IASzHO,GAAeF,GAAU,GAAOA,GAAUA,GAC1CG,GAAeF,GAAU,GAAOA,GAAUA,GAC1CznC,GAAc0nC,GAAOC,GAAOD,GAAOC,GACzC32B,KAAKG,KAAKuY,YAAe1Y,KAAKG,KAAKuY,YAAc1pB,GAAMgR,KAAKG,KAAKuY,YAAc1pB,GAE/E,MAAM4nC,KAAwB5nC,GAAMqpB,MAA4BrpB,GAAMspB,GAEhEue,KACY,GAAdD,MAAyD,IAAlC5nC,GAAM,EAAIqpB,GAA8B,KAAQE,EAAmB,MAAQ,EAAIA,IACpF,OAAF,GAAdqe,IACqB,OAAS5nC,GAAM,EAAIspB,GAAkBE,GAAc,EAAIF,MAA9D,GAAdse,IAENrM,IAAWsM,GAActM,IAAUA,EAAQsM,GAAcze,EAAYD,GACrE,MAAM2e,GAAgB9iC,GAAUu2B,GAAS,EAAY,KAARA,EAAuB,GAARA,EAAc,KAC1EoB,EAAYr9B,GAAKkoC,GAAUM,GAC3BjL,EAAYv9B,GAAKmoC,GAAUK,GAE3B92B,KAAKG,KAAKwY,aAAgB3Y,KAAKG,KAAKwY,aAAe3pB,GAAM8nC,GAAgB92B,KAAKG,KAAKwY,aAAe3pB,GAAM8nC,GAMzG,GAHA7F,GAAec,EAEf/xB,KAAK8pB,qBAAuBiI,EACxB/xB,KAAK8pB,qBAAuB,EAAG,CAGlC,IAAK,IAAI1pB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClG,IAAK,IAAI9R,EAAY,EAAGA,EAAI0R,KAAKqqB,cAAcjqB,GAAS6xB,QAAS3jC,IAAK,CAClD0R,KAAKqqB,cAAcjqB,GAASoB,IAAIlT,GAC9Cs4B,qBAE+Bt4B,EAAI0R,KAAKkqB,YAAY9pB,GAAS6xB,SAAW/jC,EAAO6K,yBAEnFiH,KAAK+yB,iBAAiB3yB,EAAS9R,GAC/BA,KAMH,IAAK,IAAI8R,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClG,IAAK,IAAIysB,EAAwB,EAAGA,EAAgB7sB,KAAKG,KAAK+X,SAAS9X,GAASwX,YAAYrpB,OAAQs+B,IAAiB,CACpH,IAAIrc,EAAyBxQ,KAAKG,KAAK+X,SAAS9X,GAASwX,YAAYiV,GACjEkK,EAA2BvmB,EAAWsC,cACtC9S,KAAKyvB,YAAYzb,EAAWgG,kBAAkB,EAAO5Z,EAASysB,IACjEkK,EAAmB/2B,KAAK6xB,YAAY7d,EAAWgG,kBAAkB,EAAO5Z,EAASysB,GAAe,GAC5FmK,OAAOC,UAAUF,GACpBvmB,EAAW6C,SAAWnlB,EAAOoH,cAAcyhC,GAG3CvmB,EAAW6C,UAAY,EAAK0jB,EAAmB,GAAM7oC,EAAOoH,cAAcvG,KAAKmU,MAAM6zB,IAAsBA,EAAmB,EAAK7oC,EAAOoH,cAAcvG,KAAK+f,KAAKioB,KAInKvmB,EAAW6C,SAAWnlB,EAAOoH,cAAcyhC,GAO9C,GAFA/2B,KAAK4jB,OACL5jB,KAAK8pB,qBAAuB6D,EACxB3tB,KAAK4jB,MAAQ11B,EAAOsF,aAAc,CACrCwM,KAAK4jB,KAAO,EACZ5jB,KAAK6pB,OACL7pB,KAAKqpB,oBACL,IAAI6N,EAAQl3B,KAAK6pB,KAAO7pB,KAAK4pB,KAAO17B,EAAOqF,cAAgByM,KAAKktB,eAAeltB,KAAKmc,KAAO,EAE3F,IAAK,IAAI/b,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAAW,CAE7G,IAAI+2B,GAAY,EACZC,EAAYp3B,KAAKkqB,YAAY9pB,GAAS6xB,QACtC/V,EAAUlc,KAAKG,KAAK6lB,WAAW5lB,EAASJ,KAAKmc,KACjD,GAAe,MAAXD,GAAmBgb,EAAO,CAC7B,IAAI1mB,EAAa0L,EAAQ1L,WACzB,GAAIxQ,KAAKG,KAAK+X,SAAS9X,GAASwX,YAAYpH,GAAYwC,mBAAqBokB,EAAY,EAAG,CAM3F,IAAIC,EAAYr3B,KAAKmc,IAAM,GACvBkb,GAAar3B,KAAKG,KAAKwb,UAAa0b,GAAar3B,KAAKG,KAAKkb,UAAYrb,KAAKG,KAAKmb,YAAsC,GAAxBtb,KAAKypB,mBACvG4N,EAAYr3B,KAAKG,KAAKkb,WAEvB,IAAIic,EAAct3B,KAAKG,KAAK6lB,WAAW5lB,EAASi3B,GAC5CE,EAAWv3B,KAAKkqB,YAAY9pB,GAASoB,IAAI,GAAGiP,KAChD,GAAgB,MAAZ8mB,EAAkB,CAErB,IADA,IAAIpnB,EAAM,EACHonB,EAAS5nB,KAAKQ,GAAKnB,KAAOuoB,EAAShoB,MAAQvP,KAAK6pB,KAAO7pB,KAAK4pB,KAAO17B,EAAOqF,cAAgB4c,EAAMonB,EAAS5nB,KAAKphB,OAAS,GAC7H4hB,IACD,IAAIqnB,GAAaD,EAAS5nB,KAAKQ,GAAKnc,OAChC8yB,GAAeyQ,EAAS5nB,KAAKQ,GAAKhV,SAEtC,GAAmB,MAAfm8B,GAAuBA,EAAY9mB,YAAcA,EACpD,IAAK,IAAIliB,EAAY,EAAGA,EAAIgpC,EAAY/mB,MAAMhiB,OAAQD,IACrD,GAAkC,GAA9BgpC,EAAY/mB,MAAMjiB,GAAGihB,OACrB+nB,EAAY/mB,MAAMjiB,GAAGqhB,KAAK,GAAG3b,QAAUwjC,IACvCF,EAAY/mB,MAAMjiB,GAAGohB,QAAQnhB,QAAUgpC,EAAS7nB,QAAQnhB,OAAQ,CAEnE4oC,GAAY,EACZ,IAAK,IAAI1qB,EAAY,EAAGA,EAAI8qB,EAAS7nB,QAAQnhB,OAAQke,KAE4C,GAA5F6qB,EAAY/mB,MAAMjiB,GAAGohB,QAAQyF,WAAWsiB,GAAMA,GAAKF,EAAU7nB,QAAQjD,GAAKqa,OAC7EqQ,GAAY,EACZ1qB,EAAI8qB,EAAS7nB,QAAQnhB,QAGvBD,EAAIgpC,EAAY/mB,MAAMhiB,OAElB4oC,IAKCn3B,KAAK6pB,KAAO7pB,KAAK4pB,KAAO17B,EAAOqF,aAAeyM,KAAKktB,eAAeltB,KAAKmc,KAEtEnc,KAAKmqB,UAAU/pB,GAAW,IAC7BJ,KAAKmqB,UAAU/pB,GAAW,GAID,GAAlBm3B,EAAShoB,OAAcvP,KAAKmqB,UAAU/pB,IAAY,EAC1DJ,KAAKmqB,UAAU/pB,IAAYJ,KAAK6pB,KAAO7pB,KAAK4pB,KAAO17B,EAAOqF,aAI1DyM,KAAKmqB,UAAU/pB,GAAWJ,KAAK6pB,KAAO7pB,KAAK4pB,KAAO17B,EAAOqF,aAAegkC,EAAShoB,UAUzF,IAAK,IAAIjhB,EAAY,EAAGA,EAAI0R,KAAKkqB,YAAY9pB,GAAS6xB,QAAS3jC,IAAK,CACnE,MAAM4jC,EAAalyB,KAAKkqB,YAAY9pB,GAASoB,IAAIlT,GAC3CuM,EAAyBq3B,EAAK1hB,WAAWsiB,gBAE9B,MAAbZ,EAAKzhB,MAAgByhB,EAAKzhB,KAAKjB,KAAOxP,KAAK6pB,KAAO7pB,KAAK4pB,KAAO17B,EAAOqF,eAElEsH,EAAWnG,YAAcw9B,EAAK1hB,WAAWyC,qBAAuBjT,KAAKmqB,UAAU/pB,IAAY,IAC5FvF,EAAWjG,SACdoL,KAAK03B,YAAYt3B,EAAS8xB,GAE1BlyB,KAAK23B,SAASzF,GAEflyB,KAAKkqB,YAAY9pB,GAASw3B,OAAOtpC,GACjCA,KAII6oC,IACJn3B,KAAKmqB,UAAU/pB,IAAY,KAM/B,IAAK,IAAIA,EAAkB,EAAGA,EAAUJ,KAAKG,KAAK+a,gBAAiB9a,IAClE,IAAK,IAAIyT,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAChD,IAAK,IAAIvlB,EAAY,EAAGA,EAAI0R,KAAKoqB,eAAehqB,GAASyT,GAAKoe,QAAS3jC,IAAK,CAC3E,MAAM4jC,EAAalyB,KAAKoqB,eAAehqB,GAASyT,GAAKrS,IAAIlT,GAC1B4jC,EAAK1hB,WAAWsiB,gBAC/Bp+B,YAA2B,MAAbw9B,EAAKzhB,MAAgByhB,EAAKzhB,KAAKjB,KAAOxP,KAAK6pB,KAAO7pB,KAAK4pB,KAAO17B,EAAOqF,eAClGyM,KAAK23B,SAASzF,GACdlyB,KAAKoqB,eAAehqB,GAASyT,GAAK+jB,OAAOtpC,GACzCA,KAMA0R,KAAK6pB,MAAQ37B,EAAOqF,eACvByM,KAAK6pB,KAAO,EAERiH,IACH9wB,KAAK4pB,OACD5pB,KAAK4pB,MAAQ5pB,KAAKG,KAAKub,cAE1B1b,KAAK4pB,KAAO,EACZ5pB,KAAKmc,MACuB,GAAxBnc,KAAKypB,iBAAwBzpB,KAAKmc,KAAOnc,KAAKG,KAAKkb,UAAYrb,KAAKG,KAAKmb,aAC5Etb,KAAKmc,IAAMnc,KAAKG,KAAKkb,UACjBrb,KAAKypB,gBAAkB,GAAGzpB,KAAKypB,mBAEhCzpB,KAAKmc,KAAOnc,KAAKG,KAAKwb,WACzB3b,KAAKmc,IAAM,GACkB,GAAzBnc,KAAKypB,kBACR6E,GAAQ,EACRtuB,KAAK63B,eACL73B,KAAKkxB,cAUZ,IAAK,IAAIjW,EAAkB,EAAGA,EAAUjH,EAAWmG,YAAac,IACrC,MAAtBjb,KAAKwsB,eAAwD,MAA/BxsB,KAAKwsB,cAAcvR,KACpDjb,KAAKusB,UAAUtR,GAAWjb,KAAKwsB,cAAcvR,IAI3Cjb,KAAKyvB,YAAYzb,EAAW8E,UAAU,KACzC6U,EAAiB3tB,KAAK4tB,oBACtB5tB,KAAK8pB,oBAAsB/6B,KAAKyB,IAAIwP,KAAK8pB,oBAAqB6D,IAK/D,IAAK,IAAIvtB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAmBd,IACpE,IAAK,IAAIoQ,KAAcxQ,KAAKG,KAAK+X,SAAS9X,GAASwX,YAClDpH,EAAW4C,YAAe5C,EAAW4C,aAAellB,EAAOiH,aAAaqb,EAAWmC,aAAatd,QAAUnH,EAAOsF,aAAem6B,EAAiB3tB,KAAKopB,mBACtJ5Y,EAAW6C,QAAW7C,EAAW6C,SAAW,KAAOnlB,EAAOuF,kBAI5D,IAAK,IAAIwnB,EAAkB,EAAGA,EAAUjH,EAAWmG,YAAac,IAC/D,IAAK,IAAI7a,EAAkB,EAAGA,EAAU2wB,EAAc3wB,IACrD,IAAK,IAAIoQ,EAAqB,EAAGA,EAAaxQ,KAAKG,KAAK2b,sBAAuBtL,IACjD,MAAzBxQ,KAAK0sB,kBAA8D,MAAlC1sB,KAAK0sB,iBAAiBtsB,IAAkE,MAA9CJ,KAAK0sB,iBAAiBtsB,GAASoQ,IAA8E,MAAvDxQ,KAAK0sB,iBAAiBtsB,GAASoQ,GAAYyK,KAC/Kjb,KAAKysB,aAAarsB,GAASoQ,GAAYyK,GAAWjb,KAAK0sB,iBAAiBtsB,GAASoQ,GAAYyK,IASlG,MAAM6c,GAAO,OACT,MAAW5M,GAAmBA,EAAkB4M,KAAS5M,EAAkB,IAC3E,MAAWC,GAAmBA,EAAkB2M,KAAS3M,EAAkB,IAC3E,MAAWC,GAAmBA,EAAkB0M,KAAS1M,EAAkB,IAC3E,MAAWC,GAAmBA,EAAkByM,KAASzM,EAAkB,IAG3E,MAAWd,GAASA,EAAQuN,KAASvN,EAAQ,GAEjDvqB,KAAKwqB,mBAAqBxqB,KAAKwqB,kBAAyC,EAArBqG,GAA0BM,EAC7EnxB,KAAK+qB,YAAcA,EACnB/qB,KAAK8qB,eAAiBA,EACtB9qB,KAAKirB,eAAiBA,EACtBjrB,KAAKkrB,gBAAkBA,EACvBlrB,KAAKmrB,gBAAkBA,EACvBnrB,KAAKorB,gBAAkBA,EACvBprB,KAAKqrB,gBAAkBA,EAGvBrrB,KAAKuqB,MAAQA,EAETuG,IACH9wB,KAAK2pB,oBAAsB3pB,KAAK4jB,KAAO,EAAM5jB,KAAK8pB,oBAAsB6D,GAAkB,EAAM3tB,KAAK6pB,MAAQ37B,EAAOqF,aAAeyM,KAAK4pB,MAAQ5pB,KAAKG,KAAKub,YAAc1b,KAAKmc,KAoBvKtiB,SAASq4B,GAChBlyB,KAAKiqB,SAAS8N,SAAS7F,GAGhBr4B,UACP,GAAImG,KAAKiqB,SAASgI,QAAU,EAAG,CAC9B,MAAMC,EAAalyB,KAAKiqB,SAASxc,UAGjC,OAFAykB,EAAKthB,QACLshB,EAAK1L,QAAS,EACP0L,EAER,OAAO,IAAIjM,EAGJpsB,YAAYuG,EAAiB8xB,GACnB,MAAblyB,KAAKG,MAAiBH,KAAKG,KAAK+c,gBAAgB9c,IACnDJ,KAAKqqB,cAAcjqB,GAAS43B,UAAU9F,GAWhCr4B,iBAAiBuG,EAAiB63B,GACxB,MAAbj4B,KAAKG,MAAiBH,KAAKG,KAAK+c,gBAAgB9c,KACnDJ,KAAK23B,SAAS33B,KAAKqqB,cAAcjqB,GAASoB,IAAIy2B,IAC9Cj4B,KAAKqqB,cAAcjqB,GAASw3B,OAAOK,IAW9Bp+B,eACN,KAAOmG,KAAKsqB,eAAe2H,QAAU,GACpCjyB,KAAK23B,SAAS33B,KAAKsqB,eAAe7c,WAEnC,IAAK,IAAInf,EAAY,EAAGA,EAAI0R,KAAKkqB,YAAY37B,OAAQD,IACpD,KAAO0R,KAAKkqB,YAAY57B,GAAG2jC,QAAU,GACpCjyB,KAAK23B,SAAS33B,KAAKkqB,YAAY57B,GAAGmf,WAGpC,IAAK,IAAInf,EAAY,EAAGA,EAAI0R,KAAKqqB,cAAc97B,OAAQD,IACtD,KAAO0R,KAAKqqB,cAAc/7B,GAAG2jC,QAAU,GACtCjyB,KAAK23B,SAAS33B,KAAKqqB,cAAc/7B,GAAGmf,WAGtC,IAAK,IAAInf,EAAI,EAAGA,EAAI0R,KAAKoqB,eAAe77B,OAAQD,IAC/C,IAAK,IAAIulB,EAAM,EAAGA,EAAM7T,KAAKoqB,eAAe97B,GAAGC,OAAQslB,IACtD,KAAO7T,KAAKoqB,eAAe97B,GAAGulB,GAAKoe,QAAU,GAC5CjyB,KAAK23B,SAAS33B,KAAKoqB,eAAe97B,GAAGulB,GAAKpG,WAetC5T,wBAAwBsG,GAC/B,MAAM+3B,EAAwBl4B,KAAKsqB,eAC7B5a,EAAoB1P,KAAKupB,iBAC/B,IAAI6N,EAAoB,EACxB,GAAIp3B,KAAKqpB,kBAAoB,EAAG,CAC/B,MAAM7Y,EAAyBrQ,EAAK+X,SAASlY,KAAKwpB,kBAAkB5R,YAAYzX,EAAK2sB,qBAAqB9sB,KAAKwpB,iBAAkBxpB,KAAKmc,MAEtI,GAAI3L,EAAW4D,WAAW7d,YAAa,CACtC,IAAI27B,EACoB,GAApBgG,EAASjG,SACZC,EAAOlyB,KAAKm4B,UACZD,EAASH,SAAS7F,KACP1hB,EAAWsiB,gBAAgBp+B,YAAcsL,KAAKspB,kBACzDtpB,KAAK03B,YAAY13B,KAAKwpB,iBAAkB0O,EAAS1qB,YACjD0kB,EAAOlyB,KAAKm4B,UACZD,EAASH,SAAS7F,IAElBA,EAAOgG,EAAS12B,IAAI,GAErB41B,EAAY,EAEZ,IAAK,IAAI9oC,EAAY,EAAGA,EAAIohB,EAAQnhB,OAAQD,IAC3C4jC,EAAKxiB,QAAQphB,GAAKohB,EAAQphB,GAE3B4jC,EAAK7gC,WAAaqe,EAAQnhB,OAC1B2jC,EAAKhM,UAAY,EACjBgM,EAAK1hB,WAAaA,EAClB0hB,EAAKzhB,KAAOyhB,EAAK9L,SAAW8L,EAAK7L,SAAW,UAG5C,IAAK,IAAI/3B,EAAY,EAAGA,EAAIohB,EAAQnhB,OAAQD,IAAK,CAGhD,IAAI4jC,EACAgG,EAASjG,SAAW3jC,GACvB4jC,EAAOlyB,KAAKm4B,UACZD,EAASH,SAAS7F,KACP1hB,EAAWsiB,gBAAgBp+B,YAAcsL,KAAKspB,kBACzDtpB,KAAK03B,YAAY13B,KAAKwpB,iBAAkB0O,EAAS12B,IAAIlT,IACrD4jC,EAAOlyB,KAAKm4B,UACZD,EAAS/0B,IAAI7U,EAAG4jC,IAEhBA,EAAOgG,EAAS12B,IAAIlT,GAErB8oC,IAEAlF,EAAKxiB,QAAQ,GAAKA,EAAQphB,GAC1B4jC,EAAK7gC,WAAa,EAClB6gC,EAAKhM,UAAYxW,EAAQnhB,OACzB2jC,EAAK1hB,WAAaA,EAClB0hB,EAAKzhB,KAAOyhB,EAAK9L,SAAW8L,EAAK7L,SAAW,MAK/C,KAAO6R,EAASjG,QAAUmF,GACzBp3B,KAAK03B,YAAY13B,KAAKwpB,iBAAkB0O,EAASzqB,WAGlDzN,KAAKspB,kBAAmB,EAGjBzvB,4BAA4BsG,EAAYC,EAAiB0wB,GAChE,MAAMtgB,EAAyBrQ,EAAK+X,SAAS9X,GAASwX,YAAYzX,EAAK2sB,qBAAqB1sB,EAASJ,KAAKmc,MACpGD,EAA0B/b,EAAK6lB,WAAW5lB,EAASJ,KAAKmc,KACxDnN,EAAehP,KAAK6pB,KAAO7pB,KAAK4pB,KAAO17B,EAAOqF,aAEpD,GAAIu9B,GAAY3wB,EAAK+c,gBAAgB9c,KAAaD,EAAK+X,SAAS9X,GAAS2X,MAAO,CAE/E,IAAIqgB,EAAgBh4B,GAAWD,EAAKe,kBAAoBf,EAAKiB,mBAIzDmP,EAAyB,GACzB8nB,EAA6B,GAC7BC,EAA6B,GAC7BC,EAAoBrqC,EAAO0K,SAC/B,KAAO2/B,KACNhoB,EAAM5hB,KAAK,MACX0pC,EAAU1pC,KAAK,MACf2pC,EAAU3pC,KAAK,MAGhB,GAAe,MAAXutB,EACH,IAAK,IAAI5tB,EAAY,EAAGA,EAAI4tB,EAAQ3L,MAAMhiB,OAAQD,IAC7C4tB,EAAQ3L,MAAMjiB,GAAGkhB,KAAOR,GAEmB,MAA1CqpB,EAAUnc,EAAQ3L,MAAMjiB,GAAGohB,QAAQ,KAAewM,EAAQ3L,MAAMjiB,GAAGkhB,IAAO6oB,EAAUnc,EAAQ3L,MAAMjiB,GAAGohB,QAAQ,IAAaH,SAC7H8oB,EAAUnc,EAAQ3L,MAAMjiB,GAAGohB,QAAQ,IAAMwM,EAAQ3L,MAAMjiB,IAGhD4tB,EAAQ3L,MAAMjiB,GAAGihB,OAASP,GAAQkN,EAAQ3L,MAAMjiB,GAAGkhB,IAAMR,EACjEuB,EAAM2L,EAAQ3L,MAAMjiB,GAAGohB,QAAQ,IAAMwM,EAAQ3L,MAAMjiB,GAE3C4tB,EAAQ3L,MAAMjiB,GAAGihB,MAAQP,IAEa,MAA1CspB,EAAUpc,EAAQ3L,MAAMjiB,GAAGohB,QAAQ,KAAewM,EAAQ3L,MAAMjiB,GAAGihB,MAAS+oB,EAAUpc,EAAQ3L,MAAMjiB,GAAGohB,QAAQ,IAAaH,SAC/H+oB,EAAUpc,EAAQ3L,MAAMjiB,GAAGohB,QAAQ,IAAMwM,EAAQ3L,MAAMjiB,IAM3D,IAAK,IAAIulB,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAAO,CACvD,MAAMqkB,EAAwBl4B,KAAKoqB,eAAegO,GAAevkB,GACjE,GAAkB,MAAdtD,EAAMsD,GACa,MAAlBwkB,EAAUxkB,IAAiBwkB,EAAUxkB,GAAcrE,KAAQe,EAAMsD,GAActE,QAAO8oB,EAAUxkB,GAAO,MACrF,MAAlBykB,EAAUzkB,IAAiBykB,EAAUzkB,GAActE,OAAUgB,EAAMsD,GAAcrE,MAAK8oB,EAAUzkB,GAAO,MAC3G7T,KAAKw4B,UAAUp4B,EAAS83B,EAAU1nB,EAAaD,EAAMsD,GAAcnE,QAAUa,EAAMsD,GAAgBwkB,EAAUxkB,GAAgBykB,EAAUzkB,GAAe7E,QAEtJ,KAAOkpB,EAASjG,QAAU,GACzBjyB,KAAK23B,SAASO,EAASzqB,iBAKtB,IAAKtN,EAAK+c,gBAAgB9c,GAAU,CAExC,IAAIqQ,EAAoB,KACpB2V,EAAwB,KACxBC,EAAwB,KAE5B,GAAIyK,GAAuB,MAAX5U,IAAoB/b,EAAK+X,SAAS9X,GAAS2X,MAC1D,IAAK,IAAIzpB,EAAY,EAAGA,EAAI4tB,EAAQ3L,MAAMhiB,OAAQD,IACjD,GAAI4tB,EAAQ3L,MAAMjiB,GAAGkhB,KAAOR,EAC3BoX,EAAWlK,EAAQ3L,MAAMjiB,QACnB,GAAI4tB,EAAQ3L,MAAMjiB,GAAGihB,OAASP,GAAQkN,EAAQ3L,MAAMjiB,GAAGkhB,IAAMR,EACnEyB,EAAOyL,EAAQ3L,MAAMjiB,QACf,GAAI4tB,EAAQ3L,MAAMjiB,GAAGihB,MAAQP,EAAM,CACzCqX,EAAWnK,EAAQ3L,MAAMjiB,GACzB,MAKH,MAAM4pC,EAAwBl4B,KAAKkqB,YAAY9pB,GAC/C,GAAY,MAARqQ,EACa,MAAZ2V,GAAoBA,EAAS5W,KAAOiB,EAAKlB,QAAO6W,EAAW,MAC/C,MAAZC,GAAoBA,EAAS9W,OAASkB,EAAKjB,MAAK6W,EAAW,MAC/DrmB,KAAKw4B,UAAUp4B,EAAS83B,EAAU1nB,EAAYC,EAAKf,QAASe,EAAM2V,EAAUC,EAAUrX,QAEtF,KAAOkpB,EAASjG,QAAU,GAErBiG,EAASO,WAAWjoB,WAAWsiB,gBAAgBl+B,UAAYoL,KAAKmqB,UAAU/pB,GAAW,EACxFJ,KAAK03B,YAAYt3B,EAAS83B,EAASzqB,WAEnCzN,KAAK23B,SAASO,EAASzqB,YAOpB5T,UAAUuG,EAAiB83B,EAAuB1nB,EAAwBd,EAAmBe,EAAY2V,EAAuBC,EAAuBsG,GAC9J,IAAIyK,EAAoB,EAEpBsB,EAAmBt4B,EAAUJ,KAAKG,KAAMe,kBAAoBlB,KAAKG,KAAMiB,kBACxErS,KAAKmgB,IAAI,EAAGlP,KAAKmqB,UAAU/pB,IAC3B,EACH,GAAIoQ,EAAW4D,WAAW7d,YAAa,CACtC,IAAI27B,EACoB,GAApBgG,EAASjG,SACZC,EAAOlyB,KAAKm4B,UACZD,EAASH,SAAS7F,IAElBA,EAAOgG,EAAS12B,IAAI,GAErB41B,EAAY,EAEZ,IAAK,IAAI9oC,EAAY,EAAGA,EAAIohB,EAAQnhB,OAAQD,IAC3C4jC,EAAKxiB,QAAQphB,GAAKohB,EAAQphB,GAE3B4jC,EAAK7gC,WAAaqe,EAAQnhB,OAC1B2jC,EAAKhM,UAAY,EACjBgM,EAAK1hB,WAAaA,EAClB0hB,EAAKzhB,KAAOA,EACZyhB,EAAKzL,UAAYhW,EAAKlB,MAAQmpB,EAC9BxG,EAAKxL,QAAUjW,EAAKjB,IACpB0iB,EAAK9L,SAAWA,EAChB8L,EAAK7L,SAAWA,EAChB6L,EAAK5L,mBAAqB,EAC1B4L,EAAK3L,mBAAqB,MACpB,CACN,MAAM1rB,EAAyB2V,EAAWsiB,gBAC1C,IAAK,IAAIxkC,EAAY,EAAGA,EAAIohB,EAAQnhB,OAAQD,IAAK,CAEhD,MAAMqqC,EAA2BrqC,EAAIkiB,EAAW4D,WAAW3d,WAC3D,IAAImiC,EAAoCxS,GAAYA,EAAS1W,QAAQnhB,OAASD,EAAK83B,EAAW,KAC1FyS,EAAwBpoB,EACxBqoB,EAAoCzS,GAAYA,EAAS3W,QAAQnhB,OAASD,EAAK+3B,EAAW,KAC1FI,EAAoBoS,EAAgBtpB,MAAQopB,EAAmBD,EAEnE,GAAIjS,EAAYkG,EAAa,CAC5B,KAAIuL,EAASjG,QAAU3jC,IAAMuM,EAAWnG,YAAcsL,KAAKmqB,UAAU/pB,IAAY,IAA6B,MAAvBw4B,GAMtF,MALAE,EAAsBD,EACtBA,EAAkBD,EAClBA,EAAsB,KACtBnS,EAAYoS,EAAgBtpB,MAAQopB,EAAmBD,EAMzD,IAMIxG,EANAxL,EAAkBmS,EAAgBrpB,KACjC3U,EAAWnG,YAAcsL,KAAKmqB,UAAU/pB,IAAY,IAA6B,MAAvB04B,IAC9DpS,EAAU33B,KAAKyB,IAAItC,EAAOqF,aAAeyM,KAAKG,KAAMub,YAAagL,EAAUiS,IAKxET,EAASjG,SAAW3jC,GACvB4jC,EAAOlyB,KAAKm4B,UACZD,EAASH,SAAS7F,IAElBA,EAAOgG,EAAS12B,IAAIlT,GAErB8oC,IAEAlF,EAAKxiB,QAAQ,GAAKmpB,EAAgBnpB,QAAQphB,GAC1C4jC,EAAK7gC,WAAa,EAClB6gC,EAAKhM,UAAY2S,EAAgBnpB,QAAQnhB,OACzC2jC,EAAK1hB,WAAaA,EAClB0hB,EAAKzhB,KAAOooB,EACZ3G,EAAKzL,UAAYA,EACjByL,EAAKxL,QAAUA,EACfwL,EAAK9L,SAAWwS,EAChB1G,EAAK7L,SAAWyS,EAChB5G,EAAK5L,mBAAqBh4B,EAC1B4jC,EAAK3L,mBAAqBj4B,GAK5B,KAAO4pC,EAASjG,QAAUmF,GAErBc,EAASO,WAAWjoB,WAAWsiB,gBAAgBl+B,UAAYoL,KAAKmqB,UAAU/pB,GAAW,EACxFJ,KAAK03B,YAAYt3B,EAAS83B,EAASzqB,WAEnCzN,KAAK23B,SAASO,EAASzqB,WAKlB5T,SAASsG,EAAYqqB,EAA2B2G,EAA4B/wB,EAAiButB,EAAwBoE,EAAmBG,EAAY6G,EAAmB/F,GAE9K,IAAIgG,EACJ,OAFA7P,GAAM8P,YAAYj5B,KAAMG,EAAMC,EAASutB,EAAgBoE,EAAWG,EAAM6G,EAAU/F,GAE1Ed,EAAK1hB,WAAW1V,SACvB,KAAK,EAAGk+B,EAAch5B,KAAKyqB,eAAiB,MAC5C,KAAK,EAAGuO,EAAch5B,KAAK0qB,iBAAmB,MAC9C,KAAK,EAAGsO,EAAch5B,KAAK2qB,iBAAmB,MAC9C,KAAK,EAAGqO,EAAch5B,KAAK4qB,uBAAyB,MACpD,QAAS,MAAM,IAAI76B,MAEUo5B,GAAMgD,2BAA2B+F,EAAK1hB,WACpE0oB,CAAYl5B,KAAMg5B,EAAaxO,EAAmB2G,EAAgC,EAAZY,EAAeG,EAAMA,EAAK1hB,YAGzF3W,uBAAuB+B,EAAoBoT,EAAcmqB,EAAeC,GAC/E,OAAQx9B,EAAS3G,MAChB,KAAA,EAA0B,OAAOmkC,EACjC,KAAA,EAA0B,OAAO,EACjC,KAAA,EACC,OAAO,GAAO,EAAMpqB,EAAOpT,EAASrE,OACrC,KAAA,EACC,OAAO,EAAM,GAAO,EAAMyX,EAAOpT,EAASrE,OAC3C,KAAA,EACC,MAAO,GAAyD,GAAnDxI,KAAKmC,IAAY,EAARioC,EAAcpqC,KAAKkC,GAAK2K,EAASrE,OACxD,KAAA,EACC,MAAO,IAA0D,IAAnDxI,KAAKmC,IAAY,EAARioC,EAAcpqC,KAAKkC,GAAK2K,EAASrE,OACzD,KAAA,EACC,OAAOxI,KAAKmgB,IAAI,EAAK,EAAa,GAAPF,GAC5B,KAAA,EACC,MAAMzX,EAAgBqE,EAASrE,MACzB8hC,EAAiB,IAAOtqC,KAAKe,KAAKyH,GACxC,OAAOyX,EAAOqqB,EAASrqB,EAAOqqB,EAAS,GAAO,GAAOrqB,EAAOqqB,GAAU9hC,GACvE,KAAA,EACC,OAAOxI,KAAKuB,IAAI,GAAIsL,EAASrE,MAAQyX,GACtC,QAAS,MAAM,IAAIjf,MAAM,yCAInB8J,0BAA0BqsB,GACjC,OAAO,GAAyB,KAAjBA,EAAY,GAAY,GAGhCrsB,mBAAmBy/B,EAAcn5B,EAAYC,EAAiButB,EAAwBoE,EAAmBG,EAAY6G,EAAmB/F,GAC/I,MAAMxiB,EAAyB0hB,EAAK1hB,WAC9B3V,EAAyB2V,EAAWsiB,gBACpC/3B,EAAeyV,EAAW4D,WAC1BmlB,EAAsBx+B,EAAMxE,YAAc,EAAI4yB,GAAMqQ,mBAAmBtH,EAAKhM,WAC5EpV,EAA0B3Q,EAAK8c,kBAAkB7c,GACjDq5B,EAAwB3oB,EAAiB5iB,EAAOwK,cAAgB,EAChEghC,EAAyBxrC,EAAOsF,aAAem6B,EAAiB2L,EAAMlQ,iBACtEuQ,EAAuB,EAAMzrC,EAAOqF,aACpCqmC,EAAyB1H,EAAK1L,OAC9BsD,EAA8BwP,EAAMxP,oBACpCuI,EAAqB,EAAM,EAAwB1E,EACnD2E,EAAmB,GAAOxI,EAAsBiI,GAAapE,EAC7D4E,GAAwB+G,EAAM1P,KAAO17B,EAAOqF,aAAe+lC,EAAMzP,MAAQ37B,EAAOsF,aAAe8lC,EAAM1V,KACrG4O,EAA4B,EAAiBtkC,EAAOsF,aACpDi/B,GAA2BF,EAAe,GAAKrkC,EAAOsF,aACtDk/B,EAAwBF,GAAqBC,EAAkBD,GAAqBH,EACpFM,EAAsBH,GAAqBC,EAAkBD,GAAqBF,EAClFzF,EAAyByM,EAAMn5B,KAAc+X,SAAS9X,GAASwX,YAAYzC,WAAU7mB,GAAKA,GAAKkiB,IAC/FqpB,EAA2Bh/B,EAAWnG,YAAc4kC,EAAMnP,UAAU/pB,IAAY,EAEtF8xB,EAAKvK,gBAAkB,EACvBuK,EAAKrK,OAAS,EACdqK,EAAKpK,YAAc,EACnBoK,EAAKjK,aAAe,EACpBiK,EAAKhK,aAAe,EACpBgK,EAAK/J,mBAAqB,EAC1B+J,EAAK1L,QAAS,EAEd,IAAIsT,EAAmBtpB,EAAWoC,IAC9BmnB,EAAiBvpB,EAAWoC,IAC5B0mB,EAAM7J,YAAYzb,EAAWkF,QAAQ,EAAO9Y,EAASysB,KACxDiN,EAAWR,EAAMzH,YAAY7d,EAAWkF,QAAQ,EAAO9Y,EAASysB,GAAe,GAC/EkN,EAAST,EAAMzH,YAAY7d,EAAWkF,QAAQ,EAAO9Y,EAASysB,GAAe,IAG9E,IAAImN,EAAwBxpB,EAAWqC,SACnConB,EAAsBzpB,EAAWqC,SACjCymB,EAAM7J,YAAYzb,EAAWiG,aAAa,EAAO7Z,EAASysB,KAC7DmN,EAAgBV,EAAMzH,YAAY7d,EAAWiG,aAAa,EAAO7Z,EAASysB,GAAe,GACzFoN,EAAcX,EAAMzH,YAAY7d,EAAWiG,aAAa,EAAO7Z,EAASysB,GAAe,IAGxF,MAAMqN,GAAuBJ,EAAW5rC,EAAO4H,WAAa5H,EAAO4H,UAC7DqkC,GAAqBJ,EAAS7rC,EAAO4H,WAAa5H,EAAO4H,UAEzDskC,EAAwC,MAAhBJ,EAA0BV,EAAMlQ,iBACxDiR,EAAoC,MAAdJ,EAAwBX,EAAMlQ,iBAC1D8I,EAAKvJ,kBAAoBuR,EAAcE,EACvC,MAAME,GAAoBH,EAAYE,EACtCnI,EAAKrJ,kBAAoByR,EAAWpI,EAAKvJ,kBAAoBoJ,EAC7DG,EAAK3J,mBAAoE,MAA/Cx5B,KAAKmC,KAAK,EAAIgpC,GAAenrC,KAAKkC,GAAK,KACjEihC,EAAK1J,mBAAoE,MAA/Cz5B,KAAKmC,KAAK,EAAIgpC,GAAenrC,KAAKkC,GAAK,KACjE,MAAMspC,EAAwE,MAA7CxrC,KAAKmC,KAAK,EAAIipC,GAAaprC,KAAKkC,GAAK,KAChEupC,EAAwE,MAA7CzrC,KAAKmC,KAAK,EAAIipC,GAAaprC,KAAKkC,GAAK,KACtEihC,EAAKzJ,oBAAsB8R,EAAmBrI,EAAK3J,oBAAsBwJ,EACzEG,EAAKxJ,oBAAsB8R,EAAmBtI,EAAK1J,oBAAsBuJ,EAEzE,IAaI0I,EACA/nC,EACAgoC,EACAC,EAhBAC,GAAuB,EACvBC,EAA0B,EAC1BC,EAAwB,EACxBC,EAAsB,EACtBC,EAAgC,EAChCC,EAA8B,EAC9BC,EAA2B3B,EAC3B4B,EAAyB5B,EACzBzQ,GAA4B,EAC5BC,GAA0B,EAC1BqS,GAAyB,EACzBC,GAAuB,EAM3B,GAAmB,GAAf7qB,EAAWvb,KACV6b,GACHpe,EAAYxE,EAAOwJ,kBACnBgjC,EAAa,KAGbhoC,EAAY,EACZgoC,EAAa,IAEdD,EAAuBvsC,EAAOwJ,kBAC9BijC,EAAe,QACT,GAAmB,GAAfnqB,EAAWvb,KACrBvC,EAAYxE,EAAOwJ,kBACnBgjC,EAAa,IACbD,EAAuB/nC,EACvBioC,EAAe,QACT,GAAmB,GAAfnqB,EAAWvb,KACrBvC,EAAYxE,EAAOoB,WAAWkhB,EAAW8B,WAAW5f,UACpDgoC,EAAa,IACbD,EAAuB/nC,EACvBioC,EAAezsC,EAAOoB,WAAWkhB,EAAW8B,WAAWpe,OAAS,GAAO,QACjE,GAAmB,GAAfsc,EAAWvb,KAErBvC,EAAY,EACZgoC,EAAa,IACbD,EAAuB,GACvBE,EAAe,QACT,GAAmB,GAAfnqB,EAAWvb,MAA8C,GAAfub,EAAWvb,KAE/DvC,EAAY,EACZgoC,EAAa,OACbD,EAAuB,GACvBE,EAAe,QACT,GAAmB,GAAfnqB,EAAWvb,KAErBvC,EAAY,EACZgoC,EAAa,KACbD,EAAuB,GACvBE,EAAe,QACT,GAAmB,GAAfnqB,EAAWvb,KAErBvC,EAAY,EACZgoC,EAAa,OACbD,EAAuB,GACvBE,EAAe,OACT,CAAA,GAAmB,GAAfnqB,EAAWvb,KAMrB,MAAM,IAAIlF,MAAM,2CALhB2qC,EAAa,EACbD,EAAuB,EACvBE,EAAe,EACfjoC,EAAY,EAKb,IAAK,IAAIpE,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IACjD4jC,EAAK5K,YAAYh5B,GAAK,EACtB4jC,EAAK3K,aAAaj5B,GAAK,EACvB4jC,EAAK1K,aAAal5B,GAAK,EAGxB,GAAIyqC,EAAU,CACb,MAAMuC,EAAqBpJ,EAAKvL,gBAAkBuL,EAAKtL,mBACjD2U,EAAkCrJ,EAAKtL,mBAAqByL,EAC5DmJ,EAAgCtJ,EAAKtL,mBAAqB0L,EAC1DmJ,EAAoBvJ,EAAKvL,gBAAkB4U,EAC3CG,EAAkBxJ,EAAKvL,gBAAkB6U,EACzCG,EAA6BzJ,EAAK1hB,WAAWsiB,gBACnD8H,GAAc,EACdC,EAAkB9rC,KAAKmU,MAAMo4B,EAAaptC,EAAOsF,cACjDsnC,EAAgBC,EAAc7I,EAAKpL,aACnCgC,GAAoBC,GAAkBI,GAAMyS,uBAAuB1J,EAAKnL,YACxEiU,EAAwB7R,GAAMyS,uBAAuF,GAA/D,EAAML,EAA0BI,EAAe9mC,eACrGomC,EAAsB9R,GAAMyS,uBAAqF,GAA7D,EAAMJ,EAAwBG,EAAe9mC,eACjGumC,GAAiBK,EAAYvtC,EAAOsF,aACpC6nC,GAAeK,EAAUxtC,EAAOsF,aAE5Bw/B,IACHgI,GAAyB,EAAM3I,EAC/B4I,GAAuB,EAAM3I,QAExB,GAAiB,MAAbJ,EAAKzhB,KAAc,CAC7BuqB,EAAwBC,EAAsB,EAC9CnS,GAAoBC,GAAkB,EACtCmJ,EAAKpL,aAAe,EACpBoL,EAAKnL,WAAa,EAClBmL,EAAKtL,mBAAqB,EAC1BgU,GAAc,EAEd,MAAMiB,EAAyB3J,EAAKrL,qBAAuB8G,EAC3DuE,EAAKrL,sBAAwBkL,EAC7B,MAAM+J,EAAuB5J,EAAKrL,qBAAuB8G,EACzDuE,EAAKvL,gBAAkBmV,EACvB,MAAMC,EAAyBF,EAAiB3tC,EAAOsF,aACjDwoC,EAAuBF,EAAe5tC,EAAOsF,aACnDqnC,EAAkB9rC,KAAKmU,MAAM64B,GAC7BX,GAAiBW,EACjBV,GAAeW,MACT,CACN,MAAMvrB,EAAayhB,EAAKzhB,KAClB2V,EAAwB8L,EAAK9L,SAC7BC,EAAwB6L,EAAK7L,SAE7BrX,EAAesqB,EAAMzP,KAAOyP,EAAM1P,KAAO17B,EAAOqF,aAChD0oC,EAAsB/tC,EAAOqF,aAAe4M,EAAKub,YACjD+K,EAAoByL,EAAKzL,UACzBC,EAAkBwL,EAAKxL,QAI7B,IAAIwV,EACJ,IAHArB,EAAkB7rB,EAAOyX,EAGpByV,EAAc,EAAGA,EAAczrB,EAAKd,KAAKphB,OAAS,KAClDkiB,EAAKd,KAAKusB,GAAaltB,KAAOyB,EAAKlB,MAAQP,GADUktB,KAG1D,MAAMC,EAAoB1rB,EAAKd,KAAKusB,EAAc,GAC5CE,EAAkB3rB,EAAKd,KAAKusB,GAC5BG,EAAwB5V,EAAYv4B,EAAOsF,aAE3CmzB,EADsBD,EAAUx4B,EAAOsF,aACC6oC,EACxCC,GAAoB7rB,EAAKlB,MAAQ4sB,EAASntB,MAAQ9gB,EAAOsF,aACzD+oC,GAAkB9rB,EAAKlB,MAAQ6sB,EAAOptB,MAAQ9gB,EAAOsF,aAE3D0+B,EAAKpL,aAAerW,EAAKd,KAAKc,EAAKd,KAAKphB,OAAS,GAAG4M,SACpD+2B,EAAKnL,WAAatW,EAAKd,KAAKc,EAAKd,KAAKphB,OAAS,GAAGyF,OAClDk+B,EAAKtL,mBAAqB,EAC1BsL,EAAKvL,gBAAkBA,EAEvB,MAAM6V,EAAwBxtB,EAAO9gB,EAAOsF,aAAe8lC,EAAM1V,KAC3D6Y,EAAsBztB,EAAO9gB,EAAOsF,aAAe8lC,EAAM1V,KAAO,EAChE8Y,EAAmCF,EAAgBH,EACnDM,EAAiCF,EAAcJ,EAC/CO,EAAwB7tC,KAAKyB,IAAI,GAAMgsC,EAAgBF,IAAaC,EAASD,IAC7EO,EAAsB9tC,KAAKyB,IAAI,GAAMisC,EAAcH,IAAaC,EAASD,IAC/E,IAAIQ,EAAgCX,EAASnoC,QAAUooC,EAAOpoC,OAASmoC,EAASnoC,QAAU4oC,EACtFG,EAA8BZ,EAASnoC,QAAUooC,EAAOpoC,OAASmoC,EAASnoC,QAAU6oC,EACpFG,EAAoC,EACpCC,EAAkC,EAClCC,EAA+B3D,EAC/B4D,EAA6B5D,EAC7B6D,EAA4BjB,EAAShhC,UAAYihC,EAAOjhC,SAAWghC,EAAShhC,UAAYyhC,EACxFS,EAA0BlB,EAAShhC,UAAYihC,EAAOjhC,SAAWghC,EAAShhC,UAAY0hC,EACtFS,EAA6B9K,EAAoB/L,EACjD8W,EAA2B9K,EAAkBhM,EACjDmU,EAAe4B,EAAgBnK,EAAagK,GAAiB,IAASzC,EAKtE,MAAM4D,EAA8C,GAAlB7W,EAClC,GAAIkT,IAAoBh/B,EAAW/F,QAAwB,GAAd2b,EAAKlB,MAEjDqrB,GAAehB,OACT,GAAIC,GAA+B,MAAZzT,IAC7BwU,GAAehB,EACX/+B,EAAW/F,QAAQ,CACtB,MAAMC,EAAqBhG,KAAKyB,IAAIgtC,EAAmB3iC,EAAW9F,YAC5D0oC,EAA8B1uC,KAAKmgB,IAAI,EAAK,EAAMwtB,EAA2B3nC,GAC7E2oC,EAA4B3uC,KAAKmgB,IAAI,EAAK,EAAMytB,EAAyB5nC,GACzE4oC,EAA4I,IAAnHvX,EAAS1W,QAAQwiB,EAAK5L,oBAAsBF,EAASzW,KAAKyW,EAASzW,KAAKphB,OAAS,GAAG4M,SAAY+2B,EAAKxiB,QAAQ,IACtIkuB,EAA8F,IAAxExX,EAASzW,KAAKyW,EAASzW,KAAKphB,OAAS,GAAGyF,OAASyc,EAAKd,KAAK,GAAG3b,QACpF6pC,EAA0D,IAAjCzX,EAAS5W,IAAM4W,EAAS7W,OAQvD,GAPA6tB,GAAqBK,EAAsBE,EAC3CN,GAAmBK,EAAoBC,EACvCb,GAAyBW,EAAsBG,EAC/Cb,GAAuBW,EAAoBE,EAC3CN,GAAsBG,EAAsBI,EAC5CN,GAAoBG,EAAoBG,GAEnC9iC,EAAMxE,YAAa,CACvB,MAAMunC,EAAqE,IAA5C1X,EAAS1W,QAAQnhB,OAAS2jC,EAAKhM,WAC9DgX,EAAuB/T,GAAMqQ,mBAAmBtH,EAAKhM,UAAYuX,EAAsBK,GACvFX,EAAqBhU,GAAMqQ,mBAAmBtH,EAAKhM,UAAYwX,EAAoBI,IAItF,GAAIjE,IAAoBh/B,EAAW/F,QAAU2b,EAAKjB,KAAOysB,QAElD,GAAIpC,GAA+B,MAAZxT,GAC7B,GAAIxrB,EAAW/F,OAAQ,CACtB,MAAMC,EAAqBhG,KAAKyB,IAAIgtC,EAAmB3iC,EAAW9F,YAC5D0oC,EAA8B1uC,KAAKmgB,IAAI,EAAK,GAAOyX,EAAkB+V,GAA4B3nC,GACjG2oC,EAA4B3uC,KAAKmgB,IAAI,EAAK,GAAOyX,EAAkBgW,GAA0B5nC,GAC7F4oC,EAAoI,IAA5GtX,EAAS3W,QAAQwiB,EAAK3L,qBAAuB2L,EAAKxiB,QAAQ,GAAKe,EAAKd,KAAKc,EAAKd,KAAKphB,OAAS,GAAG4M,WACvHyiC,EAA0F,IAApEvX,EAAS1W,KAAK,GAAG3b,OAASyc,EAAKd,KAAKc,EAAKd,KAAKphB,OAAS,GAAGyF,QAChF6pC,EAAiD,KAAvBnX,EAAUD,GAQ1C,GAPA2W,GAAqBK,EAAsBE,EAC3CN,GAAmBK,EAAoBC,EACvCb,GAAyBW,EAAsBG,EAC/Cb,GAAuBW,EAAoBE,EAC3CN,GAAsBG,EAAsBI,EAC5CN,GAAoBG,EAAoBG,GAEnC9iC,EAAMxE,YAAa,CACvB,MAAMunC,EAAqE,IAA5CzX,EAAS3W,QAAQnhB,OAAS2jC,EAAKhM,WAC9DgX,EAAuB/T,GAAMqQ,mBAAmBtH,EAAKhM,UAAYuX,EAAsBK,GACvFX,EAAqBhU,GAAMqQ,mBAAmBtH,EAAKhM,UAAYwX,EAAoBI,UAG/E,KAAMjjC,EAAWjG,UAAY0kC,EAAMnP,UAAU/pB,GAAW,GAAI,CAClE,MAAMvL,EAAuBgG,EAAWhG,aACpCA,EAAe,IAClBmoC,GAA6BjuC,KAAKyB,IAAI,GAAMm2B,EAAkB+V,GAA4B7nC,GAC1FooC,GAA2BluC,KAAKyB,IAAI,GAAMm2B,EAAkBgW,GAA0B9nC,IAIxFimC,EAAgBsC,GAAqBC,EAAkBD,GAAqB/K,EAC5E0I,EAAcqC,GAAqBC,EAAkBD,GAAqB9K,EACvD,GAAf9hB,EAAWvb,MACd6zB,GAAoBK,GAAMyS,uBAAuBkB,GAAyBC,EAAsBD,GAAyBzK,GACzHtJ,GAAkBI,GAAMyS,uBAAuBkB,GAAyBC,EAAsBD,GAAyBxK,KAEvHxJ,GAAoBgU,GAAyBC,EAAsBD,GAAyB/tC,KAAKmgB,IAAI,EAAKmjB,GAC1GtJ,GAAkB+T,GAAyBC,EAAsBD,GAAyB/tC,KAAKyB,IAAI,EAAK8hC,GACxGJ,EAAKpJ,kBAAoBA,GACzBoJ,EAAKnJ,gBAAkBA,IAExBiS,EAAwBgC,GAA6BC,EAA0BD,GAA6B3K,EAC5G4I,EAAsB+B,GAA6BC,EAA0BD,GAA6B1K,EAC1G4I,EAAmBgC,GAAwBC,EAAqBD,GAAwB7K,EACxF8I,EAAiB+B,GAAwBC,EAAqBD,GAAwB5K,EACtF8I,GAAiBkC,GAAsBC,EAAmBD,GAAsBjL,EAChFgJ,GAAeiC,GAAsBC,EAAmBD,GAAsBhL,EAG/E,MAAMyL,GAAqB,EAAMzE,EAAMlQ,iBAGvC,GAFA8I,EAAK1L,QAAS,EAEK,GAAfhW,EAAWvb,MAA8C,GAAfub,EAAWvb,MAA4C,GAAfub,EAAWvb,MAAmD,GAAfub,EAAWvb,MAA6C,GAAfub,EAAWvb,MAAwD,GAAfub,EAAWvb,KAAiC,CAE7Q,MAAM+oC,EAAyB7U,GAAM8U,gBAAgBztB,EAAYkpB,EAAiBlpB,EAAW2C,SACvF+qB,EAAuB/U,GAAM8U,gBAAgBztB,EAAYkpB,EAAiBlpB,EAAW4C,aAE3F,IASI+qB,EACAC,EAVAC,EAA0B7tB,EAAWgC,aACrC8rB,EAAwB9tB,EAAWgC,aAEnC8mB,EAAM7J,YAAYzb,EAAW4F,iBAAiB,EAAOxZ,EAASysB,KACjEwR,EAAkB/E,EAAMzH,YAAY7d,EAAW4F,iBAAiB,EAAOxZ,EAASysB,GAAe,GAAS,GACxGyR,EAAgBhF,EAAMzH,YAAY7d,EAAW4F,iBAAiB,EAAOxZ,EAASysB,GAAe,GAAQ,IAMtG,MAAM0R,EAAkCjF,EAAM7J,YAAYzb,EAAW+F,iBAAiB,EAAO3Z,EAASysB,GACtG,GAAIrc,EAAWpV,SAAWlN,EAAO8G,SAASzG,QAAWgwC,EAIhD,CACJ,IAAIC,EAA4BhuB,EAAWkC,aACvC+rB,EAA0BjuB,EAAWkC,aAErC6rB,IACHC,EAAoBlF,EAAMzH,YAAY7d,EAAW+F,iBAAiB,EAAO3Z,EAASysB,GAAe,GACjG4R,EAAkBnF,EAAMzH,YAAY7d,EAAW+F,iBAAiB,EAAO3Z,EAASysB,GAAe,GAG3F2R,GAAqBlF,EAAMn5B,KAAMyY,WAAWpX,IAAIwS,EAAW+F,mBAC9DykB,EAAoBxH,OAAO0H,WAExBD,GAAmBnF,EAAMn5B,KAAMyY,WAAWpX,IAAIwS,EAAW+F,mBAC5D0kB,EAAkBzH,OAAO0H,YAI3BP,EAAaK,EACbJ,EAAWK,OArBXN,EAAajwC,EAAO8G,SAASwb,EAAWpV,SAASlG,WACjDkpC,EAAWlwC,EAAO8G,SAASwb,EAAWpV,SAASlG,WA6BhD4lC,IALmCD,EAAkBsD,EAAc,EAAME,GAGxBL,EAGjDjD,IALiCF,EAAkBuD,EAAY,EAAME,GAGxBJ,EAK9C,IAAKrE,IAAuBh/B,EAAW/F,QAAuB,MAAbo9B,EAAKzhB,MAAmC,GAAnByhB,EAAKzhB,KAAKlB,QAAkC,MAAjB2iB,EAAK9L,SAAoB,CACzH,MAAMzxB,EAAwBkG,EAAWlG,cACrCA,EAAgB,IACnBqmC,GAAyBjsC,KAAKyB,IAAI,EAAKkpC,EAAiB0B,GAAiBzmC,GACzEsmC,GAAuBlsC,KAAKyB,IAAI,EAAKkpC,EAAiB2B,GAAe1mC,IAIvE,MAAMgqC,GAA+BxV,GAAMyV,6BAA6BpuB,EAAWxc,QAEhE,GAAfwc,EAAWvb,OAIdi9B,EAAK/L,aAAe+L,EAAKxiB,QAAQ,GAChB,MAAbwiB,EAAKzhB,OAAcyhB,EAAK/L,cAAgB+L,EAAKzhB,KAAKouB,oBACtD3M,EAAK/L,aAAep3B,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAOyK,UAAY,EAAGu5B,EAAK/L,gBAGrE,IAOI2Y,GACAC,GARAC,GAA4BxuB,EAAW+B,aACvC0sB,GAA0BzuB,EAAW+B,aACrC+mB,EAAM7J,YAAYzb,EAAWmF,cAAc,EAAO/Y,EAASysB,KAC9DmS,GAAoB7+B,EAAKkuB,eAAeiL,EAAMzH,YAAY7d,EAAWmF,cAAc,EAAO/Y,EAASysB,GAAe,GAAQ7Y,EAAWmF,cACrI8lB,GAAkB9+B,EAAKkuB,eAAeiL,EAAMzH,YAAY7d,EAAWmF,cAAc,EAAO/Y,EAASysB,GAAe,GAAO7Y,EAAWmF,eAKhH,GAAf3I,EAAWvb,MACd6pC,GAAwB,EACxBC,GAAsB,IAGtBD,GAA+E,IAAtDE,IAAqB9wC,EAAOqG,kBAAoB,IACzEwqC,GAA2E,IAApDE,IAAmB/wC,EAAOqG,kBAAoB,KAGtE,MAAM2G,GAA2C,GAAfsV,EAAWvb,KAAkCub,EAAW+D,mBAAmB2d,EAAK/L,cAAgB3V,EAAW8D,oBACvI4qB,GAA8BhxC,EAAOiG,kBAAoBpF,KAAKuB,IAAI,EAAKwuC,IACvEK,GAA4BjxC,EAAOiG,kBAAoBpF,KAAKuB,IAAI,EAAKyuC,IACrEK,GAA0B,EAAMrwC,KAAKoC,IAAIpC,KAAKkC,GAAKiuC,GAAsB5F,EAAMlQ,kBAC/EiW,GAAwB,EAAMtwC,KAAKoC,IAAIpC,KAAKkC,GAAKkuC,GAAoB7F,EAAMlQ,kBAC3EkW,GAAoB,EAAMvwC,KAAKoC,IAAIpC,KAAKkC,GAAK/C,EAAOkG,kBAAoBklC,EAAMlQ,kBACpF8I,EAAKrK,OAASuX,GAAkBjW,GAAMoW,gBAAgBrkC,GAAgBw+B,EAAiB0B,GAAgBzB,EAAejH,EAAe5J,IACrI,IAAI0W,GAAoBH,GAAgBlW,GAAMoW,gBAAgBrkC,GAAgBw+B,EAAiB2B,GAAc1B,EAAehH,EAAa5J,IACzImJ,EAAKrK,OAAS94B,KAAKyB,IAAItC,EAAOmG,UAAWtF,KAAKmgB,IAAIowB,GAAWpN,EAAKrK,SAClE2X,GAAYzwC,KAAKyB,IAAItC,EAAOmG,UAAWtF,KAAKmgB,IAAIowB,GAAWE,KAC3DtN,EAAKpK,YAAc/4B,KAAKuB,IAAIkvC,GAAYtN,EAAKrK,OAAQ,EAAMkK,GAE3D,IAAI0N,GAA4B1wC,KAAKuB,IAAI,GAA6B,IAAxBwuC,IAC1CY,GAA0B3wC,KAAKuB,IAAI,GAA2B,IAAtByuC,IAE5C7M,EAAKlJ,qBAAuBxY,EAAWmvB,qBACvCzN,EAAKjJ,qBAAuB,EAE5B,IAAI2W,GAAkCpvB,EAAWvV,gBAC7C4kC,GAAgCrvB,EAAWvV,gBAI/C,GAFAi3B,EAAKhJ,aAA+B,GAAf1Y,EAAWvb,MAAsE,GAA3B2qC,GAEvEtG,EAAM7J,YAAYzb,EAAWoF,eAAe,EAAOhZ,EAASysB,GAAgB,CAG/EqF,EAAKhJ,cAAe,EAEpB0W,GAA0Bz/B,EAAKkuB,eAAeiL,EAAMzH,YAAY7d,EAAWoF,eAAe,EAAOhZ,EAASysB,GAAe,GAAQ7Y,EAAWoF,eAC5IymB,GAAwB1/B,EAAKkuB,eAAeiL,EAAMzH,YAAY7d,EAAWoF,eAAe,EAAOhZ,EAASysB,GAAe,GAAO7Y,EAAWoF,eAGzI8Y,EAAKlJ,qBAAuB96B,EAAOoG,mBAAqBvF,KAAKuB,IAAIvB,KAAKmgB,IAAI,EAAG0wB,GAA0B,IAAM1xC,EAAOsG,qBAAuB,GAAI,IAC/I,MAAMsrC,EAA6B5xC,EAAOoG,mBAAqBvF,KAAKuB,IAAIvB,KAAKmgB,IAAI,EAAG2wB,GAAwB,IAAM3xC,EAAOsG,qBAAuB,GAAI,IAGpJ09B,EAAKjJ,sBAAwB6W,EAAqB5N,EAAKlJ,sBAAwB+I,OAK/EG,EAAKlJ,qBAAuB96B,EAAOoG,mBAAqBvF,KAAKuB,IAAIvB,KAAKmgB,IAAI,EAAG0wB,GAA0B,IAAM1xC,EAAOsG,qBAAuB,GAAI,IAmBhJ,GAhByB,GAArB09B,EAAKhJ,eACRuW,GAAoB1wC,KAAKuB,IAAImvC,GAAmB,KAAO1wC,KAAKuB,IAAI,GAAK,MAASsvC,GAA0B,IACxGF,GAAkB3wC,KAAKuB,IAAIovC,GAAiB,KAAO3wC,KAAKuB,IAAI,GAAK,MAASuvC,GAAwB,KAE5E,GAAnB3kC,GAAejG,MAClBwqC,IAAsB,KAAO,KAAOvkC,GAAe3D,MACnDmoC,IAAoB,KAAO,KAAOxkC,GAAe3D,OACpB,GAAnB2D,GAAejG,OACzBwqC,IAAsB,EAAI,IAAMvkC,GAAe3D,MAC/CmoC,IAAoB,EAAI,IAAMxkC,GAAe3D,OAG1CqjC,GACH1I,EAAKthB,QAGa,GAAfJ,EAAWvb,KAA2B,CAGzC,IAAI8qC,EAA+B,EAC/BC,EAA6B,EAC7BC,EAAkC,EAClCC,EAAgC,EAEhCC,EAA2B,EAC/B,GAAIjO,EAAK7gC,WAAa,IAAM0J,EAAM1E,WAAY,CAC7C,MAAM9E,EAAmBxC,KAAKmU,MAAOsN,EAAkB,QAAItiB,EAAOuF,kBAClE0sC,EAAmBjO,EAAKxiB,QAAQte,EAAsB8gC,EAAK7gC,WAAYmf,EAAWuC,eAAgBxhB,IAAa2gC,EAAKxiB,QAAQ,GAG7H,IAAI0wB,EAAsB5vB,EAAW0C,OAAS,GAC1CmtB,EAAoB7vB,EAAW0C,OAAS,GACxComB,EAAM7J,YAAYzb,EAAW2F,WAAW,EAAOvZ,EAASysB,KAC3DuT,EAAc9G,EAAMzH,YAAY7d,EAAW2F,WAAW,EAAOvZ,EAASysB,GAAe,GAAS,GAC9FwT,EAAY/G,EAAMzH,YAAY7d,EAAW2F,WAAW,EAAOvZ,EAASysB,GAAe,GAAQ,IAGxFyM,EAAM7J,YAAYzb,EAAW6F,eAAe,KAC/CumB,GAAe9G,EAAMzH,YAAY7d,EAAW6F,eAAe,EAAM,KAAM,MAAM,GAAS,GACtFwmB,GAAa/G,EAAMzH,YAAY7d,EAAW6F,eAAe,EAAM,KAAM,MAAM,GAAQ,IAGpF,MAAMhjB,EAAuB3I,EAAO0I,WAAW4Z,EAAWlV,WAAWzE,aACrE,IAAK,IAAIvI,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IAAK,CAEtD,MAAMgyC,EAAiCpyC,EAAO0I,WAAW4Z,EAAWlV,WAAWxE,kBAAkBxI,GAAK,EAChGghB,EAAgB4iB,EAAKxiB,QAAS3U,EAAM1E,WAAmB/H,EAAI4jC,EAAK7gC,WAAc/C,EAAMgyC,EAAyBpO,EAAK7gC,WAAcivC,EAAyB,EAAxG,GACjDC,EAAWryC,EAAOgJ,oBAAoBsZ,EAAW9U,UAAUpN,GAAGqN,WAAWxE,KACzEgE,EAAWjN,EAAO8I,wBAAwBspC,GAA0BH,EACpEpiB,EAAqBrrB,GAAa4c,EAAQwrB,EAAgBsF,GAAe3G,EAAgBt+B,EACzFqlC,EAAoBD,EAAYpuB,EAAWkF,mBAAmB0G,EAAY5d,EAAKqb,gBAAiBrb,EAAKsX,KAAQvpB,EAAOgJ,oBAAoBsZ,EAAW9U,UAAUpN,GAAGqN,WAAWvE,SAEjL86B,EAAK5K,YAAYh5B,GAAKkyC,EAAYzC,GAAa7vC,EAAO8K,eAEtD,IAAIynC,EAAyBjwB,EAAW9U,UAAUpN,GAAGwC,UACjD4vC,EAAuBlwB,EAAW9U,UAAUpN,GAAGwC,UAC/CwoC,EAAM7J,YAAYzb,EAAWqF,aAAe/qB,GAAG,EAAO8R,EAASysB,KAClE4T,GAAkBnH,EAAMzH,YAAY7d,EAAWqF,aAAe/qB,GAAG,EAAO8R,EAASysB,GAAe,GAAS,GACzG6T,GAAgBpH,EAAMzH,YAAY7d,EAAWqF,aAAe/qB,GAAG,EAAO8R,EAASysB,GAAe,GAAQ,IAGvG,MAAM8T,EAA8BxX,GAAMyX,uBAAuBH,GAC3DI,EAA4B1X,GAAMyX,uBAAuBF,GAG/D,IAAIjZ,EAF+BkZ,EAAsBzyC,EAAOgJ,oBAAoBsZ,EAAW9U,UAAUpN,GAAGqN,WAAWtE,cAGnHg4B,EAF6BwR,EAAoB3yC,EAAOgJ,oBAAoBsZ,EAAW9U,UAAUpN,GAAGqN,WAAWtE,cAKnH,GAAIiiC,EAAM7J,YAAYzb,EAAWiF,cAAc,EAAO7Y,EAASysB,GAAgB,CAE9E,MAAMiU,EAAmBxH,EAAMzH,YAAY7d,EAAWiF,cAAc,EAAO7Y,EAASysB,GAAe,GAC7FkU,EAAiBzH,EAAMzH,YAAY7d,EAAWiF,cAAc,EAAO7Y,EAASysB,GAAe,GACjGpF,GAAiBqZ,GAAY,GAAOA,EAAW5yC,EAAO0H,YAAc,IAAM1H,EAAO0H,YAAc,GAAMoK,KAAK4+B,6BAA6BkC,GACvIzR,GAAe0R,GAAU,GAAOA,EAAS7yC,EAAO0H,YAAc,IAAM1H,EAAO0H,YAAc,GAAMoK,KAAK4+B,6BAA6BmC,GASlI,GALIzH,EAAM7J,YAAYzb,EAAW6E,eAAe,KAC/C4O,GAAgB6R,EAAMzH,YAAY7d,EAAW6E,eAAe,OAAM1L,OAAWA,GAAW,GAAU,IAClGkiB,GAAciK,EAAMzH,YAAY7d,EAAW6E,eAAe,OAAM1L,OAAWA,GAAW,GAAS,KAG5F7e,EAAIuI,EAAc,CAErB,MAAMmqC,EAAmBtuC,GAAa4c,EAAQyrB,EAAcsF,GAAa5G,EAAgBt+B,EACnF8lC,EAA2BlyC,KAAKuB,IAAI,IAAOytB,EAAa0c,GAAwBE,GAChFuG,EAAyBnyC,KAAKuB,IAAI,IAAO0wC,EAAWvG,GAAwBE,GAClFlT,GAAewZ,EACf5R,GAAa6R,EAEbjB,GAA2BU,EAC3BT,GAAyBW,OAGzBpZ,GAAuC,IAAxBv5B,EAAO8K,eACtBq2B,GAAqC,IAAxBnhC,EAAO8K,eAEpB+mC,GAAwB,EAAMhxC,KAAKyB,IAAI,EAAKiwC,EAAiB,IAC7DT,GAAsB,EAAMjxC,KAAKyB,IAAI,EAAKkwC,EAAe,IAE1D,MAAMS,EAA6BjzC,EAAOoJ,UAAUkZ,EAAW9U,UAAUpN,GAAGsN,UAE5E6rB,GAAe0B,GAAMoW,gBAAgB4B,EAAkBzH,EAAiB0B,GAAgBzB,EAAejH,EAAe5J,IACtHuG,GAAalG,GAAMoW,gBAAgB4B,EAAkBzH,EAAiB2B,GAAc1B,EAAehH,EAAa5J,IAEhHmJ,EAAK3K,aAAaj5B,GAAKm5B,EACvByK,EAAK1K,aAAal5B,IAAM+gC,EAAY5H,GAAesK,EAGpD,IAAIqP,EAAoC5wB,EAAWhV,kBAC/C6lC,EAAkC7wB,EAAWhV,kBAC7C89B,EAAM7J,YAAYzb,EAAWyF,eAAe,EAAOrZ,EAASysB,KAC/DuU,GAA6B9H,EAAMzH,YAAY7d,EAAWyF,eAAe,EAAOrZ,EAASysB,GAAe,GAAS,GACjHwU,GAA2B/H,EAAMzH,YAAY7d,EAAWyF,eAAe,EAAOrZ,EAASysB,GAAe,GAAQ,IAG/G,MAAMyU,EAAyD,GAAxBpzC,EAAO8K,eAAuBooC,EAA4B,GAC3FG,EAAuD,GAAxBrzC,EAAO8K,eAAuBqoC,EAA0B,GACvF5lC,EAA6BvN,EAAOoJ,UAAUkZ,EAAW/U,kBAC/D,IAAI+lC,EAAwBF,EAAyBnY,GAAMoW,gBAAgB9jC,EAAkBi+B,EAAiB0B,GAAgBzB,EAAejH,EAAe5J,IACxJ2Y,EAAsBF,EAAuBpY,GAAMoW,gBAAgB9jC,EAAkBi+B,EAAiB2B,GAAc1B,EAAehH,EAAa5J,IACpJmJ,EAAK7J,aAAemZ,EACpBtP,EAAK5J,eAAiBmZ,EAAcvP,EAAK7J,cAAgB0J,EAEzD,MAAM2P,EAAqBhH,EAAaiE,GACxCzM,EAAKzK,YAAcgY,GAAoBiC,EAAa1G,EAAwBE,EAC5E,MAAM7L,EAAoBqQ,GAAkBgC,EAAazG,EAAsBE,EAC/EjJ,EAAKxK,aAAe2H,EAAY6C,EAAKzK,aAAesK,EAEpDgO,IAAyBhxC,KAAKuB,IAAI,EAAM,EAAM,IAAM8wC,EAA4B,IAAS,GAAO,EAChGpB,IAAuBjxC,KAAKuB,IAAI,EAAM,EAAM,IAAM+wC,EAA0B,IAAS,GAAO,EAC5FtB,GAAwB,EAAMhxC,KAAKyB,IAAI,EAAKzB,KAAKmgB,IAAI,EAAK+wB,EAA0B,GAAK,GACzFD,GAAsB,EAAMjxC,KAAKyB,IAAI,EAAKzB,KAAKmgB,IAAI,EAAKgxB,EAAwB,GAAK,GACrFhO,EAAKzK,aAAe,EAA6B,EAAvBsY,EAC1B7N,EAAKxK,aAAe,EAAoD,KAA7CqY,EAAuBC,QAC5C,GAAmB,GAAfxvB,EAAWvb,KAA4B,CAEjDi9B,EAAKzK,YAAcuT,EACnB,IAAI3L,EAAoB4L,EAExB/I,EAAKzK,aAAeqB,GACpBuG,GAAatG,GAEbmJ,EAAKxK,aAAe2H,EAAY6C,EAAKzK,aAAesK,MAE9C,CACN,IAAIqO,EAAsB5vB,EAAW0C,OAAS,GAC1CmtB,EAAoB7vB,EAAW0C,OAAS,GACxComB,EAAM7J,YAAYzb,EAAW2F,WAAW,EAAOvZ,EAASysB,KAC3DuT,EAAc9G,EAAMzH,YAAY7d,EAAW2F,WAAW,EAAOvZ,EAASysB,GAAe,GAAS,GAC9FwT,EAAY/G,EAAMzH,YAAY7d,EAAW2F,WAAW,EAAOvZ,EAASysB,GAAe,GAAQ,IAGxFyM,EAAM7J,YAAYzb,EAAW6F,eAAe,KAC/CumB,GAAe9G,EAAMzH,YAAY7d,EAAW6F,eAAe,EAAM,KAAM,MAAM,GAAS,GACtFwmB,GAAa/G,EAAMzH,YAAY7d,EAAW6F,eAAe,EAAM,KAAM,MAAM,GAAQ,IAGpF,IAAIvK,EAAgB4iB,EAAKxiB,QAAQ,GAEjC,GAAIwiB,EAAK7gC,WAAa,EAAG,CACxB,MAAME,EAAmBxC,KAAKmU,MAAMsN,EAAW6C,QAAUnlB,EAAOuF,kBAChE,GAAIsH,EAAM1E,WAAY,CACrB,MAAMsrC,EAAyBzP,EAAKxiB,QAAQ,EAAIte,EAAsB8gC,EAAK7gC,WAAa,EAAGmf,EAAWuC,eAAgBxhB,IAAa2gC,EAAKxiB,QAAQ,GAChJwiB,EAAKhK,aAAen5B,KAAKuB,IAAI,EAAKqxC,EAAiBxhC,EAAKsX,KACxDya,EAAK/J,mBAAqBp5B,KAAKuB,IAAI,GAAMqxC,EAAiBhH,QAE1DrrB,EAAQ4iB,EAAKxiB,QAAQte,EAAsB8gC,EAAK7gC,WAAYmf,EAAWuC,eAAgBxhB,IAIzF,MAAMwsB,EAAqBrrB,GAAa4c,EAAQwrB,EAAgBsF,GAAe3G,EACzEuH,EAAmBtuC,GAAa4c,EAAQyrB,EAAcsF,GAAa5G,EACnE+G,EAAoBruB,EAAWkF,mBAAmB0G,EAAY5d,EAAKqb,gBAAiBrb,EAAKsX,KACzFwpB,EAA2BlyC,KAAKuB,IAAI,IAAOytB,EAAa0c,GAAwBE,GAChFuG,EAAyBnyC,KAAKuB,IAAI,IAAO0wC,EAAWvG,GAAwBE,GAClF,IAAIiH,EAAkClH,EAAa+E,GAC/CoC,EAAgCnH,EAAagF,GAajD,GAZmB,GAAflvB,EAAWvb,OACd2sC,GAA2B1zC,EAAOoB,WAAWkhB,EAAW8B,WAAWte,OACnE6tC,GAAyB3zC,EAAOoB,WAAWkhB,EAAW8B,WAAWte,QAE/C,GAAfwc,EAAWvb,MAA8C,GAAfub,EAAWvb,OACxD2sC,GAA2B1zC,EAAO6F,UAAUyc,EAAW6B,UAAUre,OACjE6tC,GAAyB3zC,EAAO6F,UAAUyc,EAAW6B,UAAUre,QAE7C,GAAfwc,EAAWvb,MAA8C,GAAfub,EAAWvb,MAAmD,GAAfub,EAAWvb,OACvG2sC,GAA2B1zC,EAAOqH,UAAUib,EAAWrV,UAAUnH,OACjE6tC,GAAyB3zC,EAAOqH,UAAUib,EAAWrV,UAAUnH,QAE7C,GAAfwc,EAAWvb,KAA4B,CAG1C,IAAI6sC,EAA6BtxB,EAAWxU,YAAuC,EAAzB9N,EAAOiK,iBAC7D4pC,EAA2BvxB,EAAWxU,YAAuC,EAAzB9N,EAAOiK,iBAC3DmhC,EAAM7J,YAAYzb,EAAW0F,eAAe,EAAOtZ,EAASysB,KAC/DiV,EAAsBxI,EAAMzH,YAAY7d,EAAW0F,eAAe,EAAOtZ,EAASysB,GAAe,IAAoC,EAAzB3+B,EAAOiK,iBACnH4pC,EAAoBzI,EAAMzH,YAAY7d,EAAW0F,eAAe,EAAOtZ,EAASysB,GAAe,IAAmC,EAAzB3+B,EAAOiK,kBAGjH,MAAM8D,EAA0B/N,EAAOoJ,UAAUkZ,EAAWvU,eACtD+lC,EAA0BF,EAAqB3Y,GAAMoW,gBAAgBtjC,EAAey9B,EAAiB0B,GAAgBzB,EAAejH,EAAe5J,IACnJmZ,EAAwBF,EAAmB5Y,GAAMoW,gBAAgBtjC,EAAey9B,EAAiB2B,GAAc1B,EAAehH,EAAa5J,IAEjJmJ,EAAKl2B,WAAagmC,EAClB9P,EAAKtK,iBAAmBqa,EAAgBD,GAAmBjQ,EAG5DG,EAAK5K,YAAY,GAAKkZ,EAAYzC,GAElC7L,EAAKzK,YAAcuT,EAAwBE,EAAmB+F,EAAmBW,EAA0BjD,GAC3G,IAAItP,EAAoB4L,EAAsBE,EAAiB+F,EAAiBW,EAAwBlD,GAQxG,GANuB,GAAnBzjC,GAAejG,MAA+C,GAAfub,EAAWvb,MAA6E,GAA/C/G,EAAOoJ,UAAUkZ,EAAWvU,eAAehH,OACtIi9B,EAAKzK,aAAeqB,GACpBuG,GAAatG,IAIVuQ,EAAM7J,YAAYzb,EAAWiF,cAAc,EAAO7Y,EAASysB,GAAgB,CAE9E,MAAMiU,EAAmBxH,EAAMzH,YAAY7d,EAAWiF,cAAc,EAAO7Y,EAASysB,GAAe,GAC7FkU,EAAiBzH,EAAMzH,YAAY7d,EAAWiF,cAAc,EAAO7Y,EAASysB,GAAe,GACjGqF,EAAKzK,aAAiBqZ,GAAY,GAAOA,EAAW5yC,EAAO0H,YAAc,IAAM1H,EAAO0H,YAAc,GAAMoK,KAAK4+B,6BAA6BkC,GAC5IzR,GAAe0R,GAAU,GAAOA,EAAS7yC,EAAO0H,YAAc,IAAM1H,EAAO0H,YAAc,GAAMoK,KAAK4+B,6BAA6BmC,GAG9HzH,EAAM7J,YAAYzb,EAAW6E,eAAe,KAC/CqZ,EAAKzK,aAAgB6R,EAAMzH,YAAY7d,EAAW6E,eAAe,OAAM1L,OAAWA,GAAW,GAAU,IACvGkiB,GAAciK,EAAMzH,YAAY7d,EAAW6E,eAAe,OAAM1L,OAAWA,GAAW,GAAS,KAGhG+kB,EAAKxK,aAAe2H,EAAY6C,EAAKzK,aAAesK,EAGrDG,EAAKvK,gBAAkB54B,KAAKuB,IAAI,GAAOyqC,EAAcD,GAAiBrB,EAAgBt5B,EAAKsX,IAAOsa,GAG5Fl4B,uBAAuB2W,EAAwB0xB,GACrD,IAAI9gB,EAAiB,EACrB,IAAK,MAAM+gB,KAAwBj0C,EAAOiH,aAAaqb,EAAWmC,aAAavd,eAC9EgsB,GAAUryB,KAAKoC,IAAc,EAAVpC,KAAKkC,GAASixC,EAAiBC,GAEnD,OAAO/gB,EAKAvnB,kCAAkC2W,GACzC,GAAmB,GAAfA,EAAWvb,KAA2B,CACzC,MAAMmtC,EAAsB5xB,EAAWlV,UAAY,IAAMkV,EAAWjV,aACpE,GAA+C4R,MAA3Cgc,GAAMkZ,qBAAqBD,GAA2B,CACzD,MAAME,EAAwB,GAE9B,IAAK,MAAMC,KAAQpZ,GAAMqZ,iBACxB,IAA2C,GAAvCD,EAAK5tB,QAAQ,sBAA6B,CAC7C,MAAM8tB,EAAoB,GAC1B,IAAK,IAAIh2B,EAAY,EAAGA,EAAIve,EAAO0I,WAAW4Z,EAAWlV,WAAWzE,aAAc4V,IACjFg2B,EAAQ9zC,KAAK,WAAa8d,EAAI,UAE/B61B,EAAY3zC,KAAK4zC,EAAK5oC,QAAQ,sBAAuB8oC,EAAQ3kC,KAAK,cAC5D,IAA4D,GAAxDykC,EAAK5tB,QAAQ,uCACvB,IAAK,IAAIlI,EAAYve,EAAOyI,cAAgB,EAAG8V,GAAK,EAAGA,IACtD,IAAK,MAAMi2B,KAAgBvZ,GAAMwZ,uBAChC,IAAuD,GAAnDD,EAAa/tB,QAAQ,0BAAiC,CACzD,IAAIiuB,EAAa,GACjB,IAAK,MAAMC,KAAmB30C,EAAO0I,WAAW4Z,EAAWlV,WAAWvE,YAAY0V,GACjFm2B,GAAc,eAAiBC,EAAkB,GAAK,SAGvD,MAAMC,EAAyC50C,EAAOsJ,UAAUgZ,EAAWjV,cAAc9D,QAAQgV,GACjG,GAAIq2B,EAAgBv0C,OAAS,EAAG,CAC/Bq0C,GAAc,sBACd,MAAMprC,EAAsB,GAC5B,IAAK,MAAMqrC,KAAmBC,EAC7BtrC,EAAU7I,KAAK,YAAck0C,EAAkB,GAAK,UAErDD,GAAcprC,EAAUsG,KAAK,OAAS,IAEvCwkC,EAAY3zC,KAAK+zC,EAAa/oC,QAAQ,MAAO8S,EAAI,IAAI9S,QAAQ,yBAA0BipC,SAEvFN,EAAY3zC,KAAK+zC,EAAa/oC,QAAQ,MAAO8S,EAAI,UAI9C,IAA0B,GAAtB81B,EAAK5tB,QAAQ,KACvB,IAAK,IAAIlI,EAAI,EAAGA,EAAIve,EAAOyI,cAAe8V,IACzC61B,EAAY3zC,KAAK4zC,EAAK5oC,QAAQ,MAAO8S,EAAI,UAG1C61B,EAAY3zC,KAAK4zC,GAMnBpZ,GAAMkZ,qBAAqBD,GAAe,IAAIW,SAAS,QAAS,OAAQ,oBAAqB,qBAAsB,YAAa,OAAQ,aAAcT,EAAYxkC,KAAK,OAExK,OAAOqrB,GAAMkZ,qBAAqBD,GAC5B,GAAmB,GAAf5xB,EAAWvb,KACrB,OAAOk0B,GAAM6Z,UACP,GAAmB,GAAfxyB,EAAWvb,KACrB,OAAOk0B,GAAM6Z,UACP,GAAmB,GAAfxyB,EAAWvb,KACrB,OAAOk0B,GAAM8Z,eACP,GAAmB,GAAfzyB,EAAWvb,KACrB,OAAOk0B,GAAM+Z,gBACP,GAAmB,GAAf1yB,EAAWvb,KACrB,OAAOk0B,GAAMga,WACP,GAAmB,GAAf3yB,EAAWvb,KACrB,OAAOk0B,GAAMia,cACP,GAAmB,GAAf5yB,EAAWvb,KACrB,OAAOk0B,GAAMka,aACP,GAAmB,GAAf7yB,EAAWvb,KACrB,OAAOk0B,GAAMma,SAEb,MAAM,IAAIvzC,MAAM,iCAAmCygB,EAAWvb,MAIxD4E,iBAAiBy/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAY1hB,EAAwBiH,GACxK,IAAIrpB,EACAo1C,EAE0C,GAAfhzB,EAAWvb,MAOzC7G,EAAOoiB,EAAW8C,uBAElBkwB,EAAc,KANdp1C,EAAOF,EAAO6F,UAAUyc,EAAW6B,UAAU9iB,QAC7Ci0C,EAAc,GAQf,MAAMryB,GAAsB/iB,EAAKG,OAAS,EAEpCk1C,GAAqB10C,KAAKuB,IAAI,GAAMpC,EAAOqH,UAAUib,EAAWrV,UAAU1F,OAASvH,EAAOqH,UAAUib,EAAWrV,UAAU3F,QAAUiiB,GACnIisB,EAAoB30C,KAAKuB,IAAI,GAAMpC,EAAOqH,UAAUib,EAAWrV,UAAU1F,OAASvH,EAAOqH,UAAUib,EAAWrV,UAAU3F,QAAUiiB,GAAOya,EAAKhK,aAC9Iyb,EAAuBzR,EAAK/J,mBAAqBj6B,EAAOqH,UAAUib,EAAWrV,UAAUzF,KAClE,GAAvB8a,EAAWrV,UAAkBqV,EAAW4D,WAAW9d,iBAAgB47B,EAAK7K,OAAO,GAAK6K,EAAK7K,OAAO,IACpG,MAAMuc,EAAqBF,EAAYD,EACvC,IAAII,EAAsB3R,EAAK5K,YAAY,GAAKmc,EAAYtyB,EACxD2yB,EAAsBD,EAAcD,EACxC,MAAMjc,GAA2BuK,EAAKvK,gBACtC,IAAI3zB,GAAkBk+B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAIqc,EAAkB7R,EAAK7K,OAAO,GAAK,EAAKlW,EACxC6yB,EAAkB9R,EAAK7K,OAAO,GAAK,EAAKlW,EAE5C,MAAM+X,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIlpC,EAA0Bi3B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAElC,MAAMqc,EAA6B,EAATN,EACpBO,EAA6B,EAATN,EACpBO,EAAiBF,EAAYlzB,EAC7BqzB,EAAiBF,EAAYnzB,EAC7BszB,EAAsBV,EAASM,EAC/BK,EAAsBV,EAASM,EACrC,IAAIK,EAA4Bv2C,EAAKm2C,GACjCK,EAA4Bx2C,EAAKo2C,GACrCG,IAAsBv2C,EAAKm2C,EAAS,GAAKI,GAAqBF,EAC9DG,IAAsBx2C,EAAKo2C,EAAS,GAAKI,GAAqBF,EAE9D,MAAM35B,EAAoByf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAE1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAKpC,KAAO2B,EAAoBzf,GAAW,CAErCg5B,GAAUF,EACVG,GAAUF,EAEV,MAAMO,EAA6B,EAATN,EACpBO,EAA6B,EAATN,EACpBO,EAAiBF,EAAYlzB,EAC7BqzB,EAAiBF,EAAYnzB,EACnC,IAAI6zB,EAA4B52C,EAAKm2C,GACjCU,EAA4B72C,EAAKo2C,GACrC,MAAMC,EAAsBV,EAASM,EAC/BK,EAAsBV,EAASM,EACrCU,IAAsB52C,EAAKm2C,EAAS,GAAKS,GAAqBP,EAC9DQ,IAAsB72C,EAAKo2C,EAAS,GAAKS,GAAqBP,EAC9D,IAAIQ,GAAiBF,EAAoBL,GAAqBd,EAC1DsB,GAAiBF,EAAoBL,GAAqBd,EAC9Da,EAAoBK,EACpBJ,EAAoBK,EAKpBld,GAAiBkc,GAHaiB,EAAQC,EAAQxB,EAGH5b,GADlB9sB,EAAkBA,GAAmB,EAAMgpC,KACGlc,EAAgBC,IACvFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Cic,GAAWE,EACXD,GAAWE,EACXP,GAAelc,EACfmc,GAAenc,EACf1sB,GAAmBguB,EAEnB,MAAMmc,EAAiBpd,EAAgBh0B,EAASwvC,EAChDxvC,GAAU0zB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAMtB0H,EAAK7K,OAAO,GAAK0c,EAAS5yB,EAC1B+gB,EAAK7K,OAAO,GAAK2c,EAAS7yB,EAE1B,MAAM2mB,EAAO,OACT,MAAW/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACrE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAKdnuB,sBAAsBy/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAY1hB,EAAwBiH,GAC7K,MAAMrpB,EAAqBoiB,EAAW+C,cAAcgE,gBAC9CpG,GAAsB/iB,EAAKG,OAAS,EAEpCk1C,GAAqB10C,KAAKuB,IAAI,GAAMpC,EAAOqH,UAAUib,EAAWrV,UAAU1F,OAASvH,EAAOqH,UAAUib,EAAWrV,UAAU3F,QAAUiiB,GACnIisB,EAAoB30C,KAAKuB,IAAI,GAAMpC,EAAOqH,UAAUib,EAAWrV,UAAU1F,OAASvH,EAAOqH,UAAUib,EAAWrV,UAAU3F,QAAUiiB,GAAOya,EAAKhK,aAC9Iyb,EAAuBzR,EAAK/J,mBAAqBj6B,EAAOqH,UAAUib,EAAWrV,UAAUzF,KAClE,GAAvB8a,EAAWrV,UAAkBqV,EAAW4D,WAAW9d,iBAAgB47B,EAAK7K,OAAO,GAAK6K,EAAK7K,OAAO,IACpG,MAAMuc,EAAqBF,EAAYD,EACvC,IAAII,EAAsB3R,EAAK5K,YAAY,GAAKmc,EAAYtyB,EACxD2yB,EAAsBD,EAAcD,EACxC,MAAMjc,GAA2BuK,EAAKvK,gBACtC,IAAI3zB,GAAkBk+B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAIqc,EAAkB7R,EAAK7K,OAAO,GAAK,EAAKlW,EACxC6yB,EAAkB9R,EAAK7K,OAAO,GAAK,EAAKlW,EAE5C,MAAM+X,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIlpC,EAA0Bi3B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAElC,MAAMqc,EAA6B,EAATN,EACpBO,EAA6B,EAATN,EACpBO,EAAiBF,EAAYlzB,EAC7BqzB,EAAiBF,EAAYnzB,EAC7BszB,EAAsBV,EAASM,EAC/BK,EAAsBV,EAASM,EACrC,IAAIK,EAA4Bv2C,EAAKm2C,GACjCK,EAA4Bx2C,EAAKo2C,GACrCG,IAAsBv2C,EAAKm2C,EAAS,GAAKI,GAAqBF,EAC9DG,IAAsBx2C,EAAKo2C,EAAS,GAAKI,GAAqBF,EAE9D,MAAM35B,EAAoByf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAE1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAEpC,KAAO2B,EAAoBzf,GAAW,CAErCg5B,GAAUF,EACVG,GAAUF,EAEV,MAAMO,EAA6B,EAATN,EACpBO,EAA6B,EAATN,EACpBO,EAAiBF,EAAYlzB,EAC7BqzB,EAAiBF,EAAYnzB,EACnC,IAAI6zB,EAA4B52C,EAAKm2C,GACjCU,EAA4B72C,EAAKo2C,GACrC,MAAMC,EAAsBV,EAASM,EAC/BK,EAAsBV,EAASM,EACrCU,IAAsB52C,EAAKm2C,EAAS,GAAKS,GAAqBP,EAC9DQ,IAAsB72C,EAAKo2C,EAAS,GAAKS,GAAqBP,EAC9D,IAAIQ,GAAiBF,EAAoBL,GAAqBd,EAC1DsB,GAAiBF,EAAoBL,GAAqBd,EAE9Da,EAAoBK,EACpBJ,EAAoBK,EAKpBld,GAAiBkc,GAHaiB,EAAQC,EAAQxB,EAGH5b,GADlB9sB,EAAkBA,GAAmB,EAAMgpC,KACGlc,EAAgBC,IACvFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Cic,GAAWE,EACXD,GAAWE,EACXP,GAAelc,EACfmc,GAAenc,EACf1sB,GAAmBguB,EAEnB,MAAMmc,EAAiBpd,EAAgBh0B,EACvCA,GAAU0zB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAGtB0H,EAAK7K,OAAO,GAAK0c,EAAS5yB,EAC1B+gB,EAAK7K,OAAO,GAAK2c,EAAS7yB,EAE1B,MAAM2mB,EAAO,OACT,MAAW/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACrE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAGdnuB,uBAAuBy/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAY1hB,GACtJ,IAAI60B,EAAqBnT,EAAK5K,YAAY,GAC1C,MAAMK,GAA2BuK,EAAKvK,gBACtC,IAAI3zB,GAAkBk+B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAI4d,EAAiBpT,EAAK7K,OAAO,GAAK,EAElCrrB,EAAqBk2B,EAAKl2B,WAC9B,MAAM4rB,EAA0BsK,EAAKtK,gBAE/BsB,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIlpC,EAA0Bi3B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAElC,MAAMjd,EAAoByf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAE1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAGpC,KAAO2B,EAAoBzf,GAAW,CAErC,MAAMw6B,EAAoBD,EAAQ,EAC5BE,GAAqBF,EAAQtpC,GAAc,EAEjD,IAAIypC,EAAoBD,EAAYD,EAGpC,GAAIA,EAAYF,EAEfI,GAAmC,KAD/BC,EAAIH,EAAYF,GACFK,EAAIA,EAAIA,EAAI,QACxB,GAAIH,EAAY,EAAMF,EAAY,CAExCI,GAAmC,KAD/BC,GAAKH,EAAY,GAAOF,GACVK,EAAIA,EAAIA,EAAI,GAE/B,GAAIF,EAAYH,EAEfI,GAAmC,KAD/BC,EAAIF,EAAYH,GACFK,EAAIA,EAAIA,EAAI,QACxB,GAAIF,EAAY,EAAMH,EAAY,CACxC,IAAIK,EACJD,GAAmC,KAD/BC,GAAKF,EAAY,GAAOH,GACVK,EAAIA,EAAIA,EAAI,GAI/B3d,GAAiBkc,GAAWwB,EAAY1d,GADf9sB,EAAkBA,GAAmB,EAAMgpC,KACAlc,EAAgBC,IACpFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Cic,GAAWE,EACXD,GAAWE,EAEXkB,GAASD,EACTA,GAAc1d,EACd3rB,GAAc4rB,EACd3sB,GAAmBguB,EAEnB,MAAMmc,EAAiBpd,EAAgBh0B,EACvCA,GAAU0zB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAGtB0H,EAAK7K,OAAO,GAAKie,EAEjB,MAAMxN,EAAO,OACT,MAAY/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACtE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAgGdnuB,kBAAkBy/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAY1hB,GACjJ,IAAIpiB,EAAqBoiB,EAAWthB,cAChCm2C,GAAsBnT,EAAK5K,YAAY,GAC3C,MAAMK,GAA2BuK,EAAKvK,gBACtC,IAAI3zB,GAAkBk+B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAI4d,EAAiBpT,EAAK7K,OAAO,GAAK,EAAKn5B,EAAOuB,gBAC5B,GAAlByiC,EAAK7K,OAAO,KAEfie,EAAQv2C,KAAKa,SAAW1B,EAAOuB,iBAEhC,IAAI23B,GAAkB8K,EAAK9K,OAE3B,MAAM8B,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIlpC,EAA0Bi3B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAElC,MAAM2d,EAA8B52C,KAAKyB,IAAI,EAAK0hC,EAAK5K,YAAY,GAAKp5B,EAAOoB,WAAWkhB,EAAW8B,WAAWre,iBAE1G8W,EAAoByf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAC1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAEpC,KAAO2B,EAAoBzf,GAAW,CAGrCqc,IAF2Bh5B,EAAa,MAARk3C,GAERle,GAAUue,EAGlC5d,GAAiBkc,GAAW7c,EAASW,GADZ9sB,EAAkBA,GAAmB,EAAMgpC,KACHlc,EAAgBC,IACjFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Csd,GAASD,EACTpB,GAAWE,EACXD,GAAWE,EACXiB,GAAc1d,EACd1sB,GAAmBguB,EAEnB,MAAMmc,EAAiBpd,EAAgBh0B,EACvCA,GAAU0zB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAGtB0H,EAAK7K,OAAO,GAAKie,EAAQp3C,EAAOuB,gBAChCyiC,EAAK9K,OAASA,EAEd,MAAM0Q,EAAO,OACT,MAAW/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACrE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAGdnuB,qBAAqBy/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAY1hB,GACpJ,IAAIpiB,EAAqBoiB,EAAWthB,cAChCm2C,EAAwC,IAAnBnT,EAAK5K,YAAY,GAC1C,MAAMK,GAA2BuK,EAAKvK,gBACtC,IAAI3zB,GAAkBk+B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAIN,GAAkB8K,EAAK9K,OAE3B,MAAM8B,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIlpC,EAA0Bi3B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAE9Bsd,EAAiBpT,EAAK7K,OAAO,GAAK,EAAKn5B,EAAOuB,gBAE5B,GAAlByiC,EAAK7K,OAAO,KAASie,EAAQnc,GAAMyc,uBAAuBx3C,GAAQi3C,GAEtE,MAAMM,EAA8B52C,KAAKyB,IAAI,EAAK60C,GAE5Ct6B,EAAoByf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAE1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAGpC,KAAO2B,EAAoBzf,GAAW,CACrC,MAAM86B,EAA2B,EAARP,EACnBn2C,EAA2B,MAAX02C,EACtB,IAAIC,EAAqB13C,EAAKe,GAC9B,MAAM42C,EAAqBT,EAAQO,EACnCC,IAAe13C,EAAKe,EAAQ,GAAK22C,GAAcC,EAE/C3e,IAAW0e,EAAa1e,GAAUue,EAGlC5d,GAAiBkc,GAAW7c,EAASW,GADZ9sB,EAAkBA,GAAmB,EAAMgpC,KACHlc,EAAgBC,IACjFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Csd,GAASD,EACTpB,GAAWE,EACXD,GAAWE,EACXiB,GAAc1d,EACd1sB,GAAmBguB,EAEnB,MAAMmc,EAAiBpd,EAAgBh0B,EACvCA,GAAU0zB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAGtB0H,EAAK7K,OAAO,GAAKie,EAAQp3C,EAAOuB,gBAChCyiC,EAAK9K,OAASA,EAEd,MAAM0Q,EAAO,OACT,MAAY/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACtE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAGdnuB,oBAAoBy/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAY1hB,EAAwBiH,GAC3K,IAAIrpB,EAAqBoiB,EAAWw1B,eAAe9T,EAAK/L,aAAc1O,GAClE4tB,EAAqBnT,EAAK5K,YAAY,GAAKnV,EAAWmF,2BAA2B4a,EAAK/L,cAC1F,MAAMwB,GAA2BuK,EAAKvK,gBACtC,IAAI3zB,GAAkBk+B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAIN,GAAkB8K,EAAK9K,OAE3B,MAAM8B,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIlpC,EAA0Bi3B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAE9Bsd,EAAiBpT,EAAK7K,OAAO,GAAK,EAAKn5B,EAAOuB,gBAE5B,GAAlByiC,EAAK7K,OAAO,KAASie,EAAQnc,GAAMyc,uBAAuBx3C,GAAQi3C,GAEtE,MAAMt6B,EAAoByf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAC1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAEpC,KAAO2B,EAAoBzf,GAAW,CACrC,MAAM86B,EAA2B,EAARP,EACnBn2C,EAA2B,MAAX02C,EACtBze,EAASh5B,EAAKe,GACd,MAAM42C,EAAqBT,EAAQO,EACnCze,IAAWh5B,EAAKe,EAAQ,GAAKi4B,GAAU2e,EAGvChe,GAAiBkc,GAAW7c,EAASW,GADZ9sB,EAAkBA,GAAmB,EAAMgpC,KACHlc,EAAgBC,IACjFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Csd,GAASD,EACTpB,GAAWE,EACXD,GAAWE,EACXiB,GAAc1d,EACd1sB,GAAmBguB,EAEnB,MAAMmc,EAAiBpd,EAAgBh0B,EACvCA,GAAU0zB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAEtB0H,EAAK7K,OAAO,GAAKie,EAAQp3C,EAAOuB,gBAChCyiC,EAAK9K,OAASA,EAEd,MAAM0Q,EAAO,OACT,MAAY/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACtE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAGdnuB,gBAAgBy/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAY1hB,GAG/I,IAAK8oB,EAAMn5B,KAAM,OAEjB,IAAI0T,EAAc3lB,EAAO0K,SAAW,EAAIs5B,EAAKxiB,QAAQ,GACjDuL,EAAsBzK,EAAWoD,YAAYC,GAEjDylB,EAAM9L,YAAY0E,EAAKpJ,kBAAmBoJ,EAAKnJ,gBAAiBlV,EAAKrD,EAAYyK,GAG7EA,GAAWjH,EAAWkG,kBAAkC,GAAdof,EAAM1V,MAAasO,EAAKzL,WAAa6S,EAAM1P,KAAO17B,EAAOqF,aAAe+lC,EAAMzP,KAC3HyP,EAAMn5B,KAAK+X,SAAS1H,EAAWlP,YAAYuS,IAAM+D,YAAYpH,EAAWmD,eAAeE,IAAMR,QAAU,EAE/F4H,GAAWjH,EAAWgF,aAC9BsgB,EAAM5P,YAAa,GAIb7vB,8BAA8BzL,GACrC,IAAIk3C,EAAgBv2C,KAAKa,SAAW1B,EAAOuB,gBAIvCw2C,EAA4B,MAARX,EACpB52C,EAAmBN,EAAK63C,GAE5B,IAAK,IAAIC,EAA4B,IAAKA,EAAoB,EAAGA,IAAqB,CACrF,MAAMC,EAAqBF,EAFL,GAE2B,MAC3CG,EAAmBh4C,EAAK+3C,GAC9B,GAAIz3C,EAAW03C,GAAY,EAAK,CAE/B,IAAK,IAAI93C,EAAY,EAAGA,EAAI,GAAIA,IAAK,CACpC,MAAM+3C,EAA0BJ,EAAY,EAAK,MAC3CK,EAAwBl4C,EAAKi4C,GACnC,GAAI33C,EAAW43C,GAAiB,EAAK,CAEpC,MAAMC,EAAgBD,EAAgB53C,EACtC42C,EAAQW,EACJl3C,KAAKC,IAAIu3C,GAAS,OACrBjB,IAAU52C,EAAW63C,GAEtBjB,EAAQv2C,KAAKmgB,IAAI,EAAGo2B,GAASp3C,EAAOuB,gBACpC,MAEAw2C,EAAYI,EACZ33C,EAAW43C,EAGb,MAEAL,EAAYE,EACZz3C,EAAW03C,EAIb,OAAOd,EAGDzrC,oCAAoC2sC,GAC1C,OAAQA,IAAqBt4C,EAAO0H,YAAc,EAAO,EAAM7G,KAAKuB,IAAI,EAAGpC,EAAO2H,eAAiB2wC,GAE7F3sC,oCAAoC6nC,GAC1C,OAAQA,GAAc,GAAQxzC,EAAO0H,YAAc,EAAI7G,KAAKyB,IAAItC,EAAO0H,YAAc7G,KAAK6B,IAAI8wC,GAAc3yC,KAAK8B,IAAO3C,EAAO2H,gBAEzHgE,8BAA8B4sC,GACpC,OAAO13C,KAAKuB,IAAIvB,KAAKmgB,IAAI,EAAKu3B,GAAc,EAAK,KAE3C5sC,8BAA8B6nC,GACpC,OAAsD,EAA/C3yC,KAAKuB,IAAIvB,KAAKmgB,IAAI,EAAKwyB,GAAa,EAAI,KAGxC7nC,oBACP,GAAiB,MAAbmG,KAAKG,KAAc,OAAO,EAC9B,IAAIqkB,EAAyBxkB,KAAKG,KAAKumC,oBAIvC,OAHI1mC,KAAKyvB,YAAYzb,EAAW8E,UAAU,KACzC0L,EAAiBxkB,KAAK6xB,YAAY7d,EAAW8E,UAAU,IAEjD9Y,KAAK6uB,6BAA6BrK,GAGlC3qB,6BAA6B2qB,GACpC,MAAMmiB,EAAyBniB,EAAiB,GAC1CoiB,EAAyB14C,EAAOqF,aAAeozC,EAC/CE,EAAwB34C,EAAOsF,aAAeozC,EACpD,OAAO5mC,KAAKopB,iBAAmByd,GAt1BR1d,GAAAkZ,qBAA6C,GAwatDlZ,GAAAqZ,kBAA8B,+yGA0ERt0C,EAAO8K,eAAiB,yTAQ3D2G,MAAM,MAEOwpB,GAAAwZ,wBAAoC,kKAGLz0C,EAAO+K,aAAe,mQAIlE0G,MAAM,YC/vMImnC,GA+BZjtC,YAAoBktC,EAA4BC,GAA5BhnC,KAAA+mC,EAAAA,EAA4B/mC,KAAAgnC,EAAAA,EA9B/BhnC,KAAAinC,EAAuB,IACvBjnC,KAAAknC,EAAwB,GACxBlnC,KAAAmnC,EAA4BpoC,EAAIqoC,KAAK,OAAQ,CAAEC,KAAMtnC,EAAYuH,SAAUggC,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAGC,OAAQznC,KAAKknC,IAC9GlnC,KAAA0nC,EAA0B3oC,EAAI4oC,IAAI,CAAEC,iBAAkB,SACtD5nC,KAAA6nC,EAA0B9oC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAY+H,mBAAoBw/B,EAAG,EAAGC,EAAG,EAAGC,MAAO,GAAIC,OAAQznC,KAAKknC,EAAgB,IAC/HlnC,KAAA8nC,EAAmC/oC,EAAIqoC,KAAK,CAAEC,KAAM,OAAQU,OAAQhoC,EAAYsH,aAAc2gC,eAAgB,EAAGJ,iBAAkB,OAAQN,EAAG,EAAGC,EAAG,EAAGC,MAAO,GAAIC,OAAQznC,KAAKknC,EAAgB,IAC/LlnC,KAAAioC,EAAiClpC,EAAImpC,KAAK,CAAEb,KAAMtnC,EAAYsH,aAAcugC,iBAAkB,SAC9F5nC,KAAAmoC,EAAkCppC,EAAImpC,KAAK,CAAEb,KAAMtnC,EAAYsH,aAAcugC,iBAAkB,SACxG5nC,KAAAooC,GAA6B,EAEpBpoC,KAAAqoC,EAAsBtpC,EAAI4oC,IAAI,CAAErpC,MAAO,qBAAqByB,EAAYqH,6DAA8DogC,MAAOxnC,KAAKinC,EAAcQ,OAAQznC,KAAKknC,GAC7LlnC,KAAK0nC,EACL1nC,KAAK6nC,EACL7nC,KAAK8nC,EACL9nC,KAAKioC,EACLjoC,KAAKmoC,EACLnoC,KAAKmnC,GAGUnnC,KAAAsoC,UAAyB5pC,EAAKgL,IAAI,CAAE6+B,MAAO,eAAgBjqC,MAAO,qEAAuE0B,KAAKqoC,GAEtJroC,KAAAwoC,EAAkB,EAClBxoC,KAAAyoC,GAAsB,EACtBzoC,KAAA0oC,GAAsB,EACtB1oC,KAAA2oC,IAAqB,EAGrB3oC,KAAA4oC,IAA+B,EAC/B5oC,KAAA6oC,IAA2B,EA0B5B7oC,KAAA8oC,gBAAkB,KACxB,MAAMxhC,EAAWvY,KAAKyB,IAAI,IAAKzB,KAAKmgB,IAAI,EAAIlP,KAAK+oC,GAAc/oC,KAAK+mC,EAAKzN,MAAMhyB,SAAW,IACtFtH,KAAKooC,GAAqB9gC,IAC7BtH,KAAKooC,EAAoB9gC,EACzBtH,KAAKmnC,EAAUtpC,aAAa,IAAK,GAAKyJ,KAIhCtH,KAAAgpC,GAAaC,IACpBjpC,KAAK+mC,EAAKmC,aAAgBlpC,KAAKgnC,EAAgBmC,WAAanpC,KAAK+mC,EAAKqC,eAG/DppC,KAAAqpC,GAAkBJ,IACrBjpC,KAAK0oC,IACT1oC,KAAK0oC,GAAa,EAClB1oC,KAAKspC,OAGEtpC,KAAAupC,GAAiBN,IACnBjpC,KAAK0oC,IACV1oC,KAAK0oC,GAAa,EAClB1oC,KAAKspC,OAGEtpC,KAAAwpC,GAAqBP,IAC5BA,EAAMQ,iBACNzpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,KAE7D9pC,KAAKspC,KACDtpC,KAAKwoC,GAAWxoC,KAAK+mC,EAAKmC,aAAelpC,KAAK+oC,IAAe/oC,KAAKwoC,IAAYxoC,KAAK+mC,EAAKmC,aAAelpC,KAAK+mC,EAAKgD,kBAAoB/pC,KAAK+oC,KAC7I/oC,KAAK2oC,IAAY,EACjB3oC,KAAKgqC,GAAahqC,KAAKwoC,IAIjBxoC,KAAAiqC,GAAqBhB,IAC5BA,EAAMQ,iBACNzpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,EAAUS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,KAEvD9pC,KAAKspC,KACDtpC,KAAKwoC,GAAWxoC,KAAK+mC,EAAKmC,aAAelpC,KAAK+oC,IAAe/oC,KAAKwoC,IAAYxoC,KAAK+mC,EAAKmC,aAAelpC,KAAK+mC,EAAKgD,kBAAoB/pC,KAAK+oC,KAC7I/oC,KAAK2oC,IAAY,EACjB3oC,KAAKgqC,GAAahqC,KAAKwoC,IAIjBxoC,KAAAmqC,GAAmBlB,IAC1B,MAAMS,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,KAE7D9pC,KAAKoqC,MAGEpqC,KAAAqqC,GAAmBpB,IAC1B,IAAKjpC,KAAKyoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,EAAUS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,KAEvD9pC,KAAKoqC,MAkDEpqC,KAAAsqC,GAAuBrB,KACzBjpC,KAAK2oC,IAAa3oC,KAAKyoC,IACvBzoC,KAAKwoC,GAAWxoC,KAAK+mC,EAAKmC,aAAe,GAAKlpC,KAAK+oC,IAClD/oC,KAAK+mC,EAAKmC,aAAe,GAAGlpC,KAAK+mC,EAAKmC,eAC1ClpC,KAAK+mC,EAAKwD,SAASC,YAEfxqC,KAAK+mC,EAAKmC,aAAelpC,KAAK+mC,EAAK5mC,KAAKwb,SAAW3b,KAAK+mC,EAAKgD,kBAAkB/pC,KAAK+mC,EAAKmC,eAC7FlpC,KAAK+mC,EAAKwD,SAASC,YAGrBxqC,KAAKyoC,GAAa,EAClBzoC,KAAK2oC,IAAY,EACjB3oC,KAAKspC,MApJL,MAAMmB,EAAsC,GAArBzqC,KAAKknC,EAI5BlnC,KAAKioC,EAAepqC,aAAa,IAAK,OAAY4sC,UAAoBA,EAD1C,UAC4EA,EAD5E,OAE5BzqC,KAAKmoC,EAAgBtqC,aAAa,IAAK,KAAKmC,KAAKinC,EAH7B,KAGmDwD,OAAYzqC,KAAKinC,EAJnE,MAI0FwD,EAFnF,OAE6GzqC,KAAKinC,EAJzH,MAIgJwD,EAFzI,OAI5BzqC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKwpC,IAClDzsC,SAAS2tC,iBAAiB,YAAa1qC,KAAKmqC,IAC5CptC,SAAS2tC,iBAAiB,UAAW1qC,KAAKsqC,IAC1CtqC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKqpC,IAClDrpC,KAAKsoC,UAAUoC,iBAAiB,WAAY1qC,KAAKupC,IAEjDvpC,KAAKsoC,UAAUoC,iBAAiB,aAAc1qC,KAAKiqC,IACnDjqC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKqqC,IAClDrqC,KAAKsoC,UAAUoC,iBAAiB,WAAY1qC,KAAKsqC,IACjDtqC,KAAKsoC,UAAUoC,iBAAiB,cAAe1qC,KAAKsqC,IAIzCtqC,KAAKgnC,EAAgB0D,iBAAkB,SAAU1qC,KAAKgpC,GAAW,CAAE2B,SAAS,EAAOC,SAAS,IAqEhG/wC,KACP,GAAImG,KAAK2oC,GAAW,CACnB,KAAO3oC,KAAKwoC,EAAUxoC,KAAKgqC,GAAiC,IAAnBhqC,KAAK+oC,IACzC/oC,KAAK+mC,EAAKmC,aAAe,GAC5BlpC,KAAK+mC,EAAKmC,eACVlpC,KAAKgqC,IAAchqC,KAAK+oC,GACxB/oC,KAAK+mC,EAAKwD,SAASC,UAKrB,KAAOxqC,KAAKwoC,EAAUxoC,KAAKgqC,GAAgC,GAAnBhqC,KAAK+oC,IACxC/oC,KAAK+mC,EAAKmC,aAAelpC,KAAK+mC,EAAK5mC,KAAKwb,SAAW3b,KAAK+mC,EAAKgD,kBAChE/pC,KAAK+mC,EAAKmC,eACVlpC,KAAKgqC,IAAchqC,KAAK+oC,GACxB/oC,KAAK+mC,EAAKwD,SAASC,UAMlBxqC,KAAK0oC,GAAY1oC,KAAKspC,KAGpBzvC,UAAUpE,GAChB,KAAO1G,KAAKC,IAAIyG,IAAW,GAEtBA,EAAS,EACRuK,KAAK+mC,EAAKmC,aAAe,IAC5BlpC,KAAK+mC,EAAKmC,eACVlpC,KAAKgqC,IAAchqC,KAAK+oC,GACxB/oC,KAAK+mC,EAAKwD,SAASC,WAIhBxqC,KAAK+mC,EAAKmC,aAAelpC,KAAK+mC,EAAK5mC,KAAKwb,SAAW3b,KAAK+mC,EAAKgD,mBAChE/pC,KAAK+mC,EAAKmC,eACVlpC,KAAKgqC,IAAchqC,KAAK+oC,GACxB/oC,KAAK+mC,EAAKwD,SAASC,WAIrB/0C,GAAWA,EAAS,GAAM,EAAI,EAoBxBoE,KAEP,IAAIgxC,GAA6B,EAC7BC,GAA8B,EAC9BC,GAA+B,EAHJ/qC,KAAK0oC,IAAe1oC,KAAKyoC,IAMnDzoC,KAAKwoC,EAAUxoC,KAAK+mC,EAAKmC,aAAelpC,KAAK+oC,GAChD8B,GAAoB,EACV7qC,KAAKwoC,GAAWxoC,KAAK+mC,EAAKmC,aAAelpC,KAAK+mC,EAAKgD,kBAAoB/pC,KAAK+oC,GACtF+B,GAAqB,EAErBC,GAAsB,GAIxB/qC,KAAKioC,EAAe3pC,MAAM0sC,WAAaH,EAAoB,UAAY,SACvE7qC,KAAKmoC,EAAgB7pC,MAAM0sC,WAAaF,EAAqB,UAAY,SACzE9qC,KAAK8nC,EAAiBxpC,MAAM0sC,WAAaD,EAAsB,UAAY,SAGrElxC,SACNmG,KAAK+oC,IAAe/oC,KAAKinC,EAAe,GAAKl4C,KAAKmgB,IAAIlP,KAAK+mC,EAAKgD,iBAAkB/pC,KAAK+mC,EAAK5mC,KAAKwb,UAEjG,MAAMsvB,EAAmBjrC,KAAK4oC,IAAuB5oC,KAAK+mC,EAAK5mC,KAAKwb,SACpE,GAAIsvB,EAAS,CAGZ,IAFAjrC,KAAK4oC,GAAsB5oC,KAAK+mC,EAAK5mC,KAAKwb,SAEnC3b,KAAK0nC,EAASpoC,YAAYU,KAAK0nC,EAAS36B,YAAY/M,KAAK0nC,EAASpoC,YAEzE,IAAK,IAAIhR,EAAY,EAAGA,GAAK0R,KAAK+mC,EAAK5mC,KAAKwb,SAAUrtB,IAAK,CAC1D,MAAM48C,EAAsB58C,EAAI,IAAM,EAAK,EAAMA,EAAI,GAAK,EAAK0R,KAAKknC,EAAgB,EAAIlnC,KAAKknC,EAAgB,EAC7GlnC,KAAK0nC,EAAS5qC,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAY+H,mBAAoBw/B,EAAGh5C,EAAI0R,KAAK+oC,GAAc,EAAGxB,EAAG2D,EAAY1D,MAAO,EAAGC,OAAQznC,KAAKknC,EAA6B,EAAbgE,OAI5JD,GAAWjrC,KAAK6oC,IAAmB7oC,KAAK+mC,EAAKmC,gBAChDlpC,KAAK6oC,GAAkB7oC,KAAK+mC,EAAKmC,aACjClpC,KAAK6nC,EAAQhqC,aAAa,IAAK,GAAMmC,KAAK+oC,GAAc/oC,KAAK+mC,EAAKmC,cAClElpC,KAAK6nC,EAAQhqC,aAAa,QAAS,GAAMmC,KAAK+oC,GAAc/oC,KAAK+mC,EAAKgD,kBACtE/pC,KAAK8nC,EAAiBjqC,aAAa,IAAK,GAAMmC,KAAK+oC,GAAc/oC,KAAK+mC,EAAKmC,cAC3ElpC,KAAK8nC,EAAiBjqC,aAAa,QAAS,GAAMmC,KAAK+oC,GAAc/oC,KAAK+mC,EAAKgD,mBAGhF/pC,KAAKspC,KACLtpC,KAAKgnC,EAAgBmC,WAAanpC,KAAK+mC,EAAKmC,aAAelpC,KAAK+mC,EAAKqC,qBCzO1D+B,GAAbtxC,cACSmG,KAAAorC,IAAiB,EAEfvxC,KACTmG,KAAKorC,IAAQ,EAGPvxC,SACN,OAAOmG,KAAKorC,GAGNvxC,iBAGKwxC,WAAuBF,GAGnCtxC,YAAYyxC,GACXC,QACAvrC,KAAKwrC,GAAYF,EACjBtrC,KAAKyrC,IAAiBH,EAGhBzxC,OACFmG,KAAKwrC,IACRxrC,KAAK0rC,KACL1rC,KAAKyrC,IAAgB,IAErBzrC,KAAK2rC,KACL3rC,KAAKyrC,IAAgB,GAIhB5xC,OACFmG,KAAKwrC,IACRxrC,KAAK2rC,KACL3rC,KAAKyrC,IAAgB,IAErBzrC,KAAK0rC,KACL1rC,KAAKyrC,IAAgB,GAQb5xC,KACT,OAAOmG,KAAKyrC,GAGH5xC,KACT,MAAM,IAAI9J,MAAM,qCAGP8J,KACT,MAAM,IAAI9J,MAAM,6CAIL67C,WAAoBT,GAChCtxC,cACC0xC,QAGM1xC,OAAOgyC,GACTA,EAAOC,UACX9rC,KAAK+rC,YAIMC,WAAuBX,GAEnCxxC,YAAYoyC,GACXV,OAAM,GAELvrC,KAAKksC,GADS/+B,MAAX8+B,EACa,GAEAA,EAAQ57B,SAInBxW,OAAOgyC,GACTA,EAAOC,WACX9rC,KAAKksC,GAASlsC,KAAKksC,GAAS39C,QAAUs9C,EACtC7rC,KAAK+rC,MAGIlyC,KACT,IAAK,IAAIvL,EAAY,EAAGA,EAAI0R,KAAKksC,GAAS39C,OAAQD,IACjD0R,KAAKksC,GAAS59C,GAAG69C,OAITtyC,KACT,IAAK,IAAIvL,EAAY0R,KAAKksC,GAAS39C,OAAS,EAAGD,GAAK,EAAGA,IACtD0R,KAAKksC,GAAS59C,GAAG89C,iBCzFJC,GAAiBnwB,EAAkB3pB,GAClD,IAAK,MAAMke,KAAQyL,EAAQ3L,MAC1B,IAAK,MAAMjB,KAASmB,EAAKf,QACxB,IAAK,MAAMS,KAAOM,EAAKd,KAAM,CAC5B,MAAM/R,GAAe0R,EAAQa,EAAIhV,UAAY,GACxC5I,EAAMqL,KACVrL,EAAMqL,IAAO,IA+FlB,SAAS0uC,GAAmBC,EAAeC,EAAoBC,EAAuBC,EAAqBzqB,GAG1G,MAAM7R,EAAgB,IAAIf,GAAM,EAAGo9B,EAAeC,EAAa,GAAG,GAClEzqB,EAAStzB,KAAKyhB,GACdA,EAAQT,KAAKphB,OAAS,EACtB6hB,EAAQV,QAAQnhB,OAAS,EACzB,MAAMo+C,EAAwBD,EAAcD,EAE5C,IAAK,MAAMn9B,KAASi9B,EAAQ78B,QAC3BU,EAAQV,QAAQ/gB,KAAK2gB,GAGtB,IAAK,IAAIQ,EAAmB,EAAGA,EAAWy8B,EAAQ58B,KAAKphB,OAAQuhB,IAAY,CAC1E,MAAMK,EAAeo8B,EAAQ58B,KAAKG,GAC5B88B,EAAqBz8B,EAAInB,KAAOw9B,EACtC,GAAII,EAAa,EAAG,CACnB,GAAI98B,EAAW,GAAKy8B,EAAQ58B,KAAKphB,OAAQ,MAAM,IAAIwB,MAAM,2CACzD,MAAM88C,EAAmBN,EAAQ58B,KAAKG,EAAW,GAC3Cg9B,EAAsBD,EAAQ79B,KAAOw9B,EAC3C,GAAIM,EAAc,EAAG,CAEpB,MAAMC,GAAkBH,GAAeE,EAAcF,GACrDx8B,EAAQT,KAAKhhB,KAAKogB,EAAYhgB,KAAKgb,MAAMoG,EAAIhV,SAAW4xC,GAASF,EAAQ1xC,SAAWgV,EAAIhV,WAAY,EAAGpM,KAAKgb,MAAMoG,EAAInc,OAAS+4C,GAASF,EAAQ74C,OAASmc,EAAInc,iBAGxJ,GAAI44C,GAAcD,EACxBv8B,EAAQT,KAAKhhB,KAAKogB,EAAYoB,EAAIhV,SAAUyxC,EAAYz8B,EAAInc,aACtD,CACN,GAAI8b,EAAW,EAAG,MAAM,IAAI/f,MAAM,2CAClC,MAAMi9C,EAAmBT,EAAQ58B,KAAKG,EAAW,GAC3Cm9B,EAAsBD,EAAQh+B,KAAOw9B,EAC3C,GAAIS,EAAcN,EAAe,CAEhC,MAAMI,GAAiBJ,EAAgBM,IAAgBL,EAAaK,GACpE78B,EAAQT,KAAKhhB,KAAKogB,EAAYhgB,KAAKgb,MAAMijC,EAAQ7xC,SAAW4xC,GAAS58B,EAAIhV,SAAW6xC,EAAQ7xC,WAAYwxC,EAAe59C,KAAKgb,MAAMijC,EAAQh5C,OAAS+4C,GAAS58B,EAAInc,OAASg5C,EAAQh5C,aAMpL,MAAMk5C,EAAyB98B,EAAQT,KAAK,GAAGxU,SAC/C,IAAK,IAAIgyC,EAAmB,EAAGA,EAAW/8B,EAAQV,QAAQnhB,OAAQ4+C,IACjE/8B,EAAQV,QAAQy9B,IAAaD,EAE9B,IAAK,IAAI/f,EAAiB,EAAGA,EAAS/c,EAAQT,KAAKphB,OAAQ4+B,IAC1D/c,EAAQT,KAAKwd,GAAQhyB,UAAY+xC,QAItBE,WAAmCxB,GAC/C/xC,YAAYwzC,EAAmBC,EAAwBC,GACtDhC,QAEA,MAAMpqC,EAA2B,GAC3BE,EAA2B,GAC3BC,EAAyB,GAE/B,IAAK,IAAI0a,EAAuB,EAAGA,EAAeqxB,EAAIltC,KAAK8b,kBAAmBD,IAAgB,CAC7F,MAAMwxB,EAAsBH,EAAIltC,KAAK+X,SAAS8D,GACxCyxB,EAAsB,IAAI/1B,EAE5BsE,EAAeqxB,EAAIltC,KAAKe,kBAC3BC,EAAcxS,KAAK8+C,GACTzxB,EAAeqxB,EAAIltC,KAAKe,kBAAoBmsC,EAAIltC,KAAKiB,kBAC/DC,EAAc1S,KAAK8+C,GAGnBnsC,EAAY3S,KAAK8+C,GAGlBA,EAAW11B,MAAQy1B,EAAWz1B,MAC9B01B,EAAW91B,OAAS61B,EAAW71B,OAC/B81B,EAAW37C,KAAO07C,EAAW17C,KAE7B,IAAK,MAAM0e,KAAcg9B,EAAW51B,YACnC61B,EAAW71B,YAAYjpB,KAAK6hB,GAG7B,MAAMk9B,EAAyBx/C,EAAOqF,aAAe85C,EAAIltC,KAAKub,YACxDiyB,EAAyBz/C,EAAOqF,aAAe+5C,EACrD,IAAI1gB,GAAsB,EACtB1Q,EAA0B,KAE9B,IAAK,IAAI0U,EAAiB,EAAGA,EAASyc,EAAIltC,KAAKwb,SAAUiV,IAAU,CAClE,MAAMgd,EAA6BP,EAAIltC,KAAK6lB,WAAWhK,EAAc4U,GACrE,GAAkB,MAAdgd,EAAoB,CACvB,MAAMC,EAAsBjd,EAAS8c,EACrC,IAAK,MAAMnB,KAAWqB,EAAWr9B,MAAO,CAEvC,MAAMu9B,EAA4BvB,EAAQh9B,MAAQs+B,EAAcN,EAC1DQ,EAA0BxB,EAAQ/8B,IAAMq+B,EAAcN,EAEtDzf,EAAmB/+B,KAAKmU,MAAM4qC,EAAoBH,GAClD5f,EAAiBh/B,KAAK+f,KAAKi/B,EAAkBJ,GACnD,IAAK,IAAIxxB,EAAc2R,EAAU3R,EAAM4R,EAAQ5R,IAAO,CACrD,MAAM6xB,EAAuB7xB,EAAMwxB,EAC7BlB,EAAwB19C,KAAKmgB,IAAI,EAAG4+B,EAAoBE,GACxDtB,EAAsB39C,KAAKyB,IAAIm9C,EAAgBI,EAAkBC,GAEvE,GAAIvB,EAAgBC,EAAa,CAGhC,GAAI9f,EAAazQ,GAAkB,MAAXD,EAAiB,CAExC,IADA0Q,IACOA,EAAazQ,GACnBsxB,EAAW31B,KAAK8U,GAAc,EAC9BA,IAED1Q,EAAU,IAAI5L,EACdm9B,EAAW51B,SAASlpB,KAAKutB,GACzBuxB,EAAW31B,KAAK8U,GAAc6gB,EAAW51B,SAAStpB,OAClD2tB,EAAQ1L,WAAao9B,EAAWp9B,WAIjC0L,EAAUuxB,EAAW51B,SAAS41B,EAAW31B,KAAKqE,GAAO,GAErDmwB,GAAmBC,EAASuB,EAAoBE,EAAevB,EAAeA,EAAeC,EAAaxwB,EAAQ3L,YAQxH09B,GAAwB9sC,GACxB8sC,GAAwB5sC,GACxB4sC,GAAwB3sC,GACxBtB,KAAKkuC,OAAO,IAAIC,GAAsBd,EAAKlsC,EAAeE,EAAeC,WAI9D8sC,WAAmB/C,GAS/BxxC,YAAsBktC,EAAqCsH,GAC1D9C,OAAM,GADevrC,KAAA+mC,EAAAA,EAAqC/mC,KAAAquC,GAAAA,EAE1DruC,KAAKsuC,GAAYtuC,KAAKquC,GAAM9+B,MAC5BvP,KAAKuuC,GAAUvuC,KAAKquC,GAAM7+B,IAC1BxP,KAAKwuC,GAAYxuC,KAAKquC,GAAM9+B,MAC5BvP,KAAKyuC,GAAUzuC,KAAKquC,GAAM7+B,IAC1BxP,KAAK0uC,GAAW1uC,KAAKquC,GAAM1+B,KAC3B3P,KAAK2uC,GAAW,GAChB3uC,KAAK4uC,GAAc5uC,KAAKquC,GAAM3+B,QAC9B1P,KAAK6uC,GAAc,GAGVh1C,KACT,IAAK,IAAIvL,EAAY,EAAGA,EAAI0R,KAAK2uC,GAASpgD,OAAS,GAC9CyR,KAAK2uC,GAASrgD,GAAG0gB,MAAQhP,KAAK2uC,GAASrgD,EAAI,GAAG0gB,KACjDhP,KAAK2uC,GAASnwB,OAAOlwB,EAAG,GAExBA,IAIF,IAAK,IAAIA,EAAY,EAAGA,EAAI0R,KAAK2uC,GAASpgD,OAAS,GAC9CyR,KAAK2uC,GAASrgD,EAAI,GAAG6M,UAAY6E,KAAK2uC,GAASrgD,GAAG6M,UACrD6E,KAAK2uC,GAASrgD,GAAG6M,UAAY6E,KAAK2uC,GAASrgD,EAAI,GAAG6M,UAClD6E,KAAK2uC,GAASrgD,EAAI,GAAG0F,QAAUgM,KAAK2uC,GAASrgD,GAAG0F,QAChDgM,KAAK2uC,GAASrgD,GAAG0F,QAAUgM,KAAK2uC,GAASrgD,EAAI,GAAG0F,OAChDgM,KAAK2uC,GAASnwB,OAAOlwB,EAAG,GAExBA,IAIF,MAAMwgD,EAAwB9uC,KAAK2uC,GAAS,GAAGxzC,SACzC4zC,EAAoB/uC,KAAK2uC,GAAS,GAAG3/B,KAC3C,IAAK,IAAI1gB,EAAY,EAAGA,EAAI0R,KAAK4uC,GAAYrgD,OAAQD,IACpD0R,KAAK6uC,GAAYvgD,GAAK0R,KAAK4uC,GAAYtgD,GAAKwgD,EAE7C,IAAK,IAAIxgD,EAAY,EAAGA,EAAI0R,KAAK2uC,GAASpgD,OAAQD,IACjD0R,KAAK2uC,GAASrgD,GAAG6M,UAAY2zC,EAC7B9uC,KAAK2uC,GAASrgD,GAAG0gB,MAAQ+/B,EAE1B/uC,KAAKwuC,GAAYxuC,KAAKsuC,GAAYS,EAClC/uC,KAAKyuC,GAAUzuC,KAAKwuC,GAAYxuC,KAAK2uC,GAAS3uC,KAAK2uC,GAASpgD,OAAS,GAAGygB,KAExEhP,KAAK0rC,KACL1rC,KAAK+rC,KAGIlyC,KACTmG,KAAKquC,GAAM1+B,KAAO3P,KAAK2uC,GACvB3uC,KAAKquC,GAAM3+B,QAAU1P,KAAK6uC,GAC1B7uC,KAAKquC,GAAM9+B,MAAQvP,KAAKwuC,GACxBxuC,KAAKquC,GAAM7+B,IAAMxP,KAAKyuC,GACL,MAAbzuC,KAAK+mC,GAAc/mC,KAAK+mC,EAAKwD,SAASC,UAGjC3wC,KACTmG,KAAKquC,GAAM1+B,KAAO3P,KAAK0uC,GACvB1uC,KAAKquC,GAAM3+B,QAAU1P,KAAK4uC,GAC1B5uC,KAAKquC,GAAM9+B,MAAQvP,KAAKsuC,GACxBtuC,KAAKquC,GAAM7+B,IAAMxP,KAAKuuC,GACL,MAAbvuC,KAAK+mC,GAAc/mC,KAAK+mC,EAAKwD,SAASC,iBAgB/BwE,WAAyB7D,GACrCtxC,YAAYwzC,EAAmB4B,GAC9B1D,QACA,MAAM2D,EAAyB7B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAAwBtzC,eACtG,IAAIuzC,GAA4B,EAChC,IAAK,IAAI9gD,EAAY,EAAGA,EAAI4gD,EAAS3gD,OAAQD,IACxC4gD,EAAS5gD,IAAM2gD,EAAS3gD,KAC3B8gD,GAAmB,EACnB9gD,EAAI4gD,EAAS3gD,QAGf,GAAwB,GAApB6gD,EAA2B,CAC9B,IAAI5+B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAC5E,IAAK,IAAI7gD,EAAY,EAAGA,EAAI2gD,EAAS1gD,OAAQD,IAC5CkiB,EAAW3U,eAAevN,GAAK2gD,EAAS3gD,GAGzC,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIkiB,EAAW3U,eAAetN,OAAQD,IAC7DD,GAAOmiB,EAAW3U,eAAevN,GAElC,MAAME,EAAkBH,EAAMmiB,EAAW3U,eAAetN,OAGxD,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAIkiB,EAAW3U,eAAetN,OAAQD,IAC7DG,GAAcC,EACdA,EAAW8hB,EAAW3U,eAAevN,GAAKE,EAC1CgiB,EAAW8C,uBAAuBhlB,GAAKG,EAGxC+hB,EAAW8C,uBAAuB,IAAM,EACxC9C,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKsD,WAAqBlE,GACjCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAE9E,GADyB3+B,EAAWnW,QACpBi1C,EAAU,CACzB,MAAMj1C,EAAwBT,EAAa21C,cAAcD,GACzD,GAAc,MAAVj1C,EACH,GAAyB8S,MAArB9S,EAAOM,WACV6V,EAAWvb,KAAOoF,EAAOM,YACpBzM,EAAO4F,iCAAiC0c,EAAWvb,OAAS/G,EAAOkI,OAAOoa,EAAWzV,OAAOvE,mBAChGga,EAAWzV,MAAQ,QAEd,GAAuBoS,MAAnB9S,EAAOO,SAAuB,CACxC,MAAM40C,EAAqBh/B,EAAWxc,OAChCy7C,EAAkBj/B,EAAWoC,IAC7B88B,EAAuBl/B,EAAWqC,SACxCrC,EAAW+O,eAAellB,EAAOO,SAAUyyC,EAAIltC,KAAK8c,kBAAkBowB,EAAIjtC,SAAUitC,EAAIltC,KAAK+c,gBAAgBmwB,EAAIjtC,SAA6B,GAAnBitC,EAAIltC,KAAK0b,QAAkC,GAAnBwxB,EAAIltC,KAAK0b,OAAawxB,EAAIltC,KAAK0b,QAAU,GAC5LrL,EAAWxc,OAASw7C,EACpBh/B,EAAWoC,IAAM68B,EACjBj/B,EAAWqC,SAAW68B,EAGxBl/B,EAAWnW,OAASi1C,EACpBjC,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKK4D,WAAwCxE,GACpDtxC,YAAYwzC,GAOX,SAASuC,EAAwBC,GAChC,IAAIC,EAAgB,EACpB,IAAK,MAAMC,KAASF,EACnBC,GAASC,EAAMC,OAEhB,IAAIpgD,EAAiBb,KAAKa,SAAWkgD,EACrC,IAAK,MAAMC,KAASF,EAEnB,GADAjgD,GAAUmgD,EAAMC,OACZpgD,GAAU,EAAK,OAAOmgD,EAAME,KAEjC,OAAOJ,EAAS9gD,KAAKa,SAAWigD,EAAQthD,OAAU,GAAG0hD,KAEtD,SAASC,EAAyB1/C,EAAa0e,EAAaihC,EAAc3I,GACzE,MAAMqI,EAAqC,GAC3C,IAAK,IAAIvhD,EAAYkC,EAAKlC,GAAK4gB,EAAK5gB,IACnCuhD,EAAQlhD,KAAK,CAAEshD,KAAM3hD,EAAG0hD,OAAQ,GAAOjhD,KAAKuB,KAAKhC,EAAI6hD,GAAQ3I,EAAO,GAAO,KAE5E,OAAOoI,EAAqBC,GAvB7BtE,QA0BA,MAAMlwC,EAAmBgyC,EAAIltC,KAAK8c,kBAAkBowB,EAAIjtC,SAClDoQ,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAE9E,GAAI9zC,EAAS,CACZ,MAAMpG,EAAuB26C,EAAqB,CACjD,CAAEK,KAAI,EAAwBD,OAAQ,GACtC,CAAEC,KAAI,EAA2BD,OAAQ,KA8C1C,SAASI,EAAUt0C,GAClB,IAAIoT,EAAc,EAClB,IAAK,MAAMrd,KAASiK,EACfjK,EAAQqd,IAAKA,EAAMrd,GAExB,IAAK,IAAIvD,EAAY,EAAGA,EAAIwN,EAAUvN,OAAQD,IAC7CwN,EAAUxN,GAAKJ,EAAO+J,aAAe6D,EAAUxN,GAAK4gB,EAGtD,OArDAsB,EAAWnW,OAASmW,EAAWvb,KAAOA,EACtCub,EAAW+B,aAAe29B,EAAyB,EAAGhiD,EAAOqG,kBAAoB,EAAGrG,EAAOqG,kBAAoB,EAAG,GAClHic,EAAWvV,gBAAkBi1C,EAAyB,EAAGhiD,EAAOsG,qBAAuB,EAAG,EAAG,GAC7Fgc,EAAWtV,eAAiBhN,EAAOoJ,UAAU1F,WAAWg+C,EAAqB,CAC5E,CAAEK,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,MACxB7gD,MACJqhB,EAAW3V,WAAa3M,EAAOuG,YAAY7C,WAAWg+C,EAAqB,CAC1E,CAAEK,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,aAAcD,OAAQ,GAC9B,CAAEC,KAAM,YAAaD,OAAQ,GAC7B,CAAEC,KAAM,cAAeD,OAAQ,GAC/B,CAAEC,KAAM,YAAaD,OAAQ,MAC1B7gD,MACJqhB,EAAW1V,QAAU5M,EAAOyH,aAAagf,QAAQi7B,EAAqB,CACrE,CAAEK,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,SAAUD,OAAQ,MAE3Bx/B,EAAWzV,MAAQ7M,EAAOkI,OAAOxE,WAAWg+C,EAAqB,CAChE,CAAEK,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,WAAYD,OAAQ,MACzB7gD,MAUI8F,GACP,KAAA,EACCub,EAAW8B,UAAavjB,KAAKa,SAAW1B,EAAOoB,WAAWf,OAAU,EACnE,MACF,KAAA,EAA8B,CAC7B,MAAM8hD,EAAiC,CACtC,KACC,MAAMn0C,EAAqB,GAC3B,IAAK,IAAI5N,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzD4N,EAAS5N,GAAMS,KAAKa,SAAW,GAAOb,KAAKa,SAAW,EAEvD,OAAOsM,GAER,KACC,IAAIo0C,EAAkB,EACtB,MAAMp0C,EAAqB,CAACo0C,GAC5B,IAAK,IAAIhiD,EAAI,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACjDgiD,GAAWvhD,KAAKuB,IAAI,EAAGvB,KAAKa,SAAW,KACvCsM,EAAS5N,GAAKgiD,EAEf,OAAOp0C,GAER,KACC,IAAIo0C,EAAkB,EACtB,MAAMp0C,EAAqB,CAACo0C,GAC5B,IAAK,IAAIhiD,EAAI,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACjDgiD,GAAWvhD,KAAKuB,IAAI,EAAGvB,KAAKa,SAAW,KACvCsM,EAAS5N,GAAKgiD,EAAUvhD,KAAKa,SAE9B,OAAOsM,IAIHA,GAAqBq0C,EADTF,EAAoBthD,KAAKa,SAAWygD,EAAmB9hD,OAAU,MAEnF6hD,EAAUl0C,GACV,IAAK,IAAI5N,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDkiB,EAAW0D,aAAahY,SAAS5N,GAAKS,KAAKgb,MAAM7N,EAAS5N,IAE3DkiB,EAAW0D,aAAauN,sBACvB,MACF,QAAS,MAAM,IAAI1xB,MAAM,6DAEpB,CACN,MAAMkF,EAAuB26C,EAAqB,CACjD,CAAEK,KAAI,EAAuBD,OAAQ,GACrC,CAAEC,KAAI,EAAsBD,OAAQ,GACpC,CAAEC,KAAI,EAA4BD,OAAQ,GAC1C,CAAEC,KAAI,EAA2BD,OAAQ,GACzC,CAAEC,KAAI,EAAqBD,OAAQ,KAsEpC,SAASI,EAAUt0C,GAClB,IAAIoT,EAAc,EAClB,IAAK,MAAMrd,KAASiK,EACfjK,EAAQqd,IAAKA,EAAMrd,GAExB,IAAK,IAAIvD,EAAY,EAAGA,EAAIwN,EAAUvN,OAAQD,IAC7CwN,EAAUxN,GAAKJ,EAAO+J,aAAe6D,EAAUxN,GAAK4gB,EAGtD,OA7EAsB,EAAWnW,OAASmW,EAAWvb,KAAOA,EACtCub,EAAW+B,aAAe29B,EAAyB,EAAGhiD,EAAOqG,kBAAoB,EAAG,EAAG,KACvFic,EAAWvV,gBAAkBi1C,EAAyB,EAAGhiD,EAAOsG,qBAAuB,EAAG,EAAG,GAC7Fgc,EAAWtV,eAAiBhN,EAAOoJ,UAAU1F,WAAWg+C,EAAqB,CAC5E,CAAEK,KAAM,SAAUD,OAAQ,IAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,MACxB7gD,MACJqhB,EAAW3V,WAAa3M,EAAOuG,YAAY7C,WAAWg+C,EAAqB,CAC1E,CAAEK,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,aAAcD,OAAQ,GAC9B,CAAEC,KAAM,YAAaD,OAAQ,GAC7B,CAAEC,KAAM,cAAeD,OAAQ,GAC/B,CAAEC,KAAM,YAAaD,OAAQ,MAC1B7gD,MACJqhB,EAAW1V,QAAU5M,EAAOyH,aAAagf,QAAQi7B,EAAqB,CACrE,CAAEK,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,SAAUD,OAAQ,IAC1B,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,kBAAmBD,OAAQ,MAEpCx/B,EAAWzV,MAAQ7M,EAAOkI,OAAOxE,WAAWg+C,EAAqB,CAChE,CAAEK,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,WAAYD,OAAQ,MACzB7gD,MACI,GAAJ8F,IACHub,EAAWpV,QAAUlN,EAAO8G,SAASpD,WAAWg+C,EAAqB,CACpE,CAAEK,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,QAASD,OAAQ,MACtB7gD,OAEG,GAAJ8F,GAAmC,GAAJA,IAClCub,EAAWrV,SAAWjN,EAAOqH,UAAU3D,WAAWg+C,EAAqB,CACtE,CAAEK,KAAM,QAASD,OAAQ,IACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,MAAOD,OAAQ,GACvB,CAAEC,KAAM,aAAcD,OAAQ,GAC9B,CAAEC,KAAM,YAAaD,OAAQ,GAC7B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,QAASD,OAAQ,MACtB7gD,OAWG8F,GACP,KAAA,EACCub,EAAW6B,SAAYtjB,KAAKa,SAAW1B,EAAO6F,UAAUxF,OAAU,EACjE,MACF,KAAA,EACCiiB,EAAWvU,cAAgB/N,EAAOoJ,UAAU1F,WAAWg+C,EAAqB,CAC3E,CAAEK,KAAM,SAAUD,OAAQ,IAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,MACxB7gD,MACJqhB,EAAWxU,WAAak0C,EAAyB,EAAGhiD,EAAOiK,gBAAkB,EAAGjK,EAAOiK,gBAAkB,EAAG,GAC3G,MACF,KAAA,EAA+B,CAC9B,MAAMq4C,EAAiC,CACtC,KACC,MAAM10C,EAAsB,GAC5B,IAAK,IAAIxN,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1DwN,EAAUxN,GAAMS,KAAKa,SAAW,GAAOb,KAAKa,SAAW,EAGxD,OADAkM,EAA2B,EAAhB/M,KAAKa,SAAgB,GAAKb,KAAKuB,IAAIvB,KAAKa,SAAU,KACtDkM,GAER,KACC,IAAIw0C,EAAkB,EACtB,MAAMx0C,EAAsB,CAACw0C,GAC7B,IAAK,IAAIhiD,EAAI,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAClDgiD,GAAWvhD,KAAKuB,IAAI,EAAGvB,KAAKa,SAAW,KACvCkM,EAAUxN,GAAKgiD,EAEhB,OAAOx0C,GAER,KACC,IAAIw0C,EAAkB,EACtB,MAAMx0C,EAAsB,CAACw0C,GAC7B,IAAK,IAAIhiD,EAAI,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAClDgiD,GAAWvhD,KAAKuB,IAAI,EAAGvB,KAAKa,SAAW,KACvCkM,EAAUxN,GAAKgiD,EAAUvhD,KAAKa,SAE/B,OAAOkM,IAIHA,GAAsBy0C,EADVC,EAAoBzhD,KAAKa,SAAW4gD,EAAmBjiD,OAAU,MAEnF6hD,EAAUt0C,GACV,IAAK,IAAIxN,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1DkiB,EAAW+C,cAAczX,UAAUxN,GAAKS,KAAKgb,MAAMjO,EAAUxN,IAE9DkiB,EAAW+C,cAAckO,sBACxB,MACF,KAAA,EAA8B,CAC7B,MAAMvlB,EAAqB,GAC3B,IAAK,IAAI5N,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IAAK,CAC9D,MAAM2iB,EAA2B,GAAL3iB,GAAe,GAALA,GAAe,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,EAE3F4N,EAAS5N,GADN2iB,EACWliB,KAAKuB,IAAIvB,KAAKa,SAAU,KAEK,GAA7Bb,KAAKuB,IAAIvB,KAAKa,SAAU,GAGxCwgD,EAAUl0C,GACV,IAAK,IAAI5N,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDkiB,EAAW0D,aAAahY,SAAS5N,GAAKS,KAAKgb,MAAM7N,EAAS5N,IAE3DkiB,EAAW0D,aAAauN,sBACvB,MACF,KAAA,EAAwB,CACvBjR,EAAWlV,UAAavM,KAAKa,SAAW1B,EAAO0I,WAAWrI,OAAU,EACpEiiB,EAAWjV,aAAgBxM,KAAKa,SAAW1B,EAAOsJ,UAAUjJ,OAAU,EACtE,MAAM+M,EAAuBpN,EAAO0I,WAAW4Z,EAAWlV,WAC1D,IAAK,IAAIhN,EAAY,EAAGA,EAAIgN,EAAUzE,aAAcvI,IACnDkiB,EAAW9U,UAAUpN,GAAGqN,UAAYu0C,EAAyB,EAAGhiD,EAAOgJ,oBAAoB3I,OAAS,EAAG,EAAG,GAC1GiiB,EAAW9U,UAAUpN,GAAGwC,UAAYo/C,EAAyB,EAAGhiD,EAAO+I,qBAAsB/I,EAAO+I,qBAAuB,EAAG,GAC9HuZ,EAAW9U,UAAUpN,GAAGsN,SAAW1N,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAE1E,IAAK,IAAIb,EAAYgN,EAAUzE,aAAcvI,EAAIJ,EAAOyI,cAAerI,IACtEkiB,EAAW9U,UAAUpN,GAAGqN,UAAYu0C,EAAyB,EAAGhiD,EAAOgJ,oBAAoB3I,OAAS,EAAG,EAAG,GAC1GiiB,EAAW9U,UAAUpN,GAAGwC,UAAa/B,KAAKuB,IAAIvB,KAAKa,SAAU,GAAK1B,EAAO+I,qBAAwB,EACjGuZ,EAAW9U,UAAUpN,GAAGsN,SAAW1N,EAAOoJ,UAAU1F,WAAWg+C,EAAqB,CACnF,CAAEK,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,MACxB7gD,MAELqhB,EAAWhV,kBAAqBzM,KAAKuB,IAAIvB,KAAKa,SAAU,GAAK1B,EAAO+I,qBAAwB,EAC5FuZ,EAAW/U,iBAAmBvN,EAAOoJ,UAAU1F,WAAWg+C,EAAqB,CAC9E,CAAEK,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,MACxB7gD,MACH,MACF,QAAS,MAAM,IAAIY,MAAM,2DAI3Bs9C,EAAI9C,SAASC,UACbxqC,KAAK+rC,YAIM0E,WAAyBtF,GACrCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAW3V,YACpBy0C,IACftvC,KAAK+rC,KACLv7B,EAAW3V,WAAay0C,EACxB9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,kBAKHkG,WAAsBvF,GAClCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAW1V,SACpBw0C,IACftvC,KAAK+rC,KACLv7B,EAAW1V,QAAUw0C,EACrB9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,kBAKHmG,WAA6BxF,GACzCtxC,YAAYwzC,EAAmBx7C,EAAei8B,EAAkB8iB,EAAsBpJ,EAAeC,GAEpG,GADA8D,QACI15C,EAAQw7C,EAAIltC,KAAKyb,mBAAoB,MAAM,IAAI7rB,MAAM,mBAEzD,IAAK,IAAIosB,EAAc2R,EAAU3R,EAAM2R,EAAW0Z,EAAOrrB,IACxD,IAAK,IAAI/b,EAAkBwwC,EAAcxwC,EAAUwwC,EAAenJ,EAAQrnC,IACrEitC,EAAIltC,KAAK+X,SAAS9X,GAAS0X,KAAKqE,IAAQtqB,IAC3Cw7C,EAAIltC,KAAK+X,SAAS9X,GAAS0X,KAAKqE,GAAOtqB,EACvCmO,KAAK+rC,MAKRsB,EAAI9C,SAASC,iBAIFqG,WAAkB1F,GAC9BtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACI8B,EAAIltC,KAAKsX,KAAO63B,IACnBjC,EAAIltC,KAAKsX,IAAM63B,EACfjC,EAAIltC,KAAKsb,SAAW6zB,EAAWphD,EAAO2K,aAEtCw0C,EAAI9C,SAASC,UAEbxqC,KAAK+rC,aAKK+E,WAAuB3F,GACnCtxC,YAAYwzC,EAAmBiC,EAAkByB,GAEhD,GADAxF,QACI8B,EAAIltC,KAAKwb,UAAY2zB,EAAU,CAClC,IAAK,MAAMlvC,KAAWitC,EAAIltC,KAAK+X,SAC9B,GAAI64B,EAAa,CAChB,KAAO3wC,EAAQ0X,KAAKvpB,OAAS+gD,GAC5BlvC,EAAQ0X,KAAK2G,QAAQ,GAElB4uB,EAAIltC,KAAKwb,SAAW2zB,GACvBlvC,EAAQ0X,KAAK0G,OAAO,EAAG6uB,EAAIltC,KAAKwb,SAAW2zB,OAEtC,CACN,KAAOlvC,EAAQ0X,KAAKvpB,OAAS+gD,GAC5BlvC,EAAQ0X,KAAKnpB,KAAK,GAEnByR,EAAQ0X,KAAKvpB,OAAS+gD,EAIxB,GAAIyB,EAAa,CAChB,MAAMC,EAAe1B,EAAWjC,EAAIltC,KAAKwb,SACzC0xB,EAAIlxB,IAAMptB,KAAKmgB,IAAI,EAAGm+B,EAAIlxB,IAAM60B,IAC5BA,EAAO,GAAK3D,EAAInE,aAAe,KAClCmE,EAAInE,aAAen6C,KAAKmgB,IAAI,EAAGm+B,EAAInE,aAAe8H,IAEnD3D,EAAIltC,KAAKkb,UAAYtsB,KAAKmgB,IAAI,EAAGm+B,EAAIltC,KAAKkb,UAAY21B,GAEvD3D,EAAIlxB,IAAMptB,KAAKyB,IAAI68C,EAAIlxB,IAAKmzB,EAAW,GACvCjC,EAAInE,aAAen6C,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAI8+C,EAAWjC,EAAItD,iBAAkBsD,EAAInE,eAC7EmE,EAAIltC,KAAKmb,WAAavsB,KAAKyB,IAAI8+C,EAAUjC,EAAIltC,KAAKmb,YAClD+xB,EAAIltC,KAAKkb,UAAYtsB,KAAKyB,IAAI8+C,EAAWjC,EAAIltC,KAAKmb,WAAY+xB,EAAIltC,KAAKkb,WACvEgyB,EAAIltC,KAAKwb,SAAW2zB,EACpBjC,EAAI9C,SAASC,UAEbxqC,KAAK+rC,aAKKkF,WAAyB9F,GACrCtxC,YAAYwzC,EAAmB99B,EAAe0iB,GAC7CsZ,QAEA,MAAM2F,EAAoBniD,KAAKyB,IAAItC,EAAOgF,YAAam6C,EAAIltC,KAAKwb,SAAWsW,GAE3E,GAAa,IADbA,EAAQif,EAAY7D,EAAIltC,KAAKwb,UAC7B,CAEA,IAAK,MAAMvb,KAAWitC,EAAIltC,KAAK+X,SAC9B,KAAO9X,EAAQ0X,KAAKvpB,OAAS2iD,GAC5B9wC,EAAQ0X,KAAK0G,OAAOjP,EAAO,EAAG,GAGhC89B,EAAIltC,KAAKwb,SAAWu1B,EAEpB7D,EAAIlxB,KAAO8V,EACXob,EAAInE,aAAen6C,KAAKyB,IAAI0gD,EAAY7D,EAAItD,iBAAkBsD,EAAInE,aAAejX,GAC7Eob,EAAIltC,KAAKkb,WAAa9L,EACzB89B,EAAIltC,KAAKkb,WAAa4W,EACZob,EAAIltC,KAAKkb,UAAYgyB,EAAIltC,KAAKmb,YAAc/L,IACtD89B,EAAIltC,KAAKmb,YAAc2W,GAGxBob,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAIMoF,WAAyBhG,GACrCtxC,YAAYwzC,EAAmB99B,EAAe0iB,GAC7CsZ,QAEA,IAAK,MAAMnrC,KAAWitC,EAAIltC,KAAK+X,SAC9B9X,EAAQ0X,KAAK0G,OAAOjP,EAAO0iB,GACA,GAAvB7xB,EAAQ0X,KAAKvpB,QAAa6R,EAAQ0X,KAAKnpB,KAAK,GAEjD0+C,EAAIltC,KAAKwb,SAAW5sB,KAAKmgB,IAAI,EAAGm+B,EAAIltC,KAAKwb,SAAWsW,GAEpDob,EAAIlxB,IAAMptB,KAAKmgB,IAAI,EAAGm+B,EAAIlxB,IAAM8V,GAEhCob,EAAInE,aAAen6C,KAAKmgB,IAAI,EAAGm+B,EAAInE,aAAejX,GAC9Cob,EAAIltC,KAAKkb,WAAa9L,EACzB89B,EAAIltC,KAAKkb,UAAYtsB,KAAKmgB,IAAI,EAAGm+B,EAAIltC,KAAKkb,UAAY4W,GAC5Cob,EAAIltC,KAAKkb,UAAYgyB,EAAIltC,KAAKmb,WAAa/L,IACrD89B,EAAIltC,KAAKmb,YAAc2W,GAExBob,EAAIltC,KAAKmb,WAAavsB,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAI68C,EAAIltC,KAAKwb,SAAW0xB,EAAIltC,KAAKkb,UAAWgyB,EAAIltC,KAAKmb,aAE5F+xB,EAAI9C,SAASC,UACbxqC,KAAK+rC,YAIMqF,WAA8BjG,GAC1CtxC,YAAYwzC,EAAmB70B,EAAoBD,EAA0BD,EAAwBD,EAA8BD,EAAmBD,EAAoBM,GACzK8yB,QAKA8B,EAAIltC,KAAKqY,WAAaA,EACtB60B,EAAIltC,KAAKoY,iBAAmBA,EAC5B80B,EAAIltC,KAAKmY,eAAiBA,EAC1B+0B,EAAIltC,KAAKkY,qBAAuBA,EAChCg1B,EAAIltC,KAAKiY,UAAYA,EACrBi1B,EAAIltC,KAAKgY,WAAaA,EACtBk1B,EAAIltC,KAAKsY,WAAaA,EAEtB40B,EAAI9C,SAASC,UACbxqC,KAAK+rC,YAKMsF,WAA2BlG,GACvCtxC,YAAYwzC,EAAmBiE,EAAyBC,GACvDhG,QAEA,IAAIiG,EAASnE,EAAIltC,KAAK+X,SAASo5B,GAC/BjE,EAAIltC,KAAK+X,SAASo5B,GAAmBjE,EAAIltC,KAAK+X,SAASq5B,GACvDlE,EAAIltC,KAAK+X,SAASq5B,GAAoBC,EAGtC,IAAK,IAAIpxC,EAAkBitC,EAAIltC,KAAKe,kBAAoBmsC,EAAIltC,KAAKiB,kBAAmBhB,EAAUitC,EAAIltC,KAAK8b,kBAAmB7b,IACzH,IAAK,IAAIysB,EAAwB,EAAGA,EAAgBwgB,EAAIltC,KAAK2b,sBAAuB+Q,IAAiB,CACpG,IAAIrc,EAAyB68B,EAAIltC,KAAK+X,SAAS9X,GAASwX,YAAYiV,GACpE,IAAK,IAAIv+B,EAAY,EAAGA,EAAIJ,EAAO0K,SAAUtK,IAAK,CACjD,IAAImjD,EAAyBjhC,EAAWkD,YAAYplB,IAAMwlB,EAAUwJ,WAAa+vB,EAAIltC,KAAKe,kBAAoB,EAC1GsP,EAAWlP,YAAYhT,GAAKmjD,GAAiBH,EAChD9gC,EAAWlP,YAAYhT,GAAKijD,EAAmBE,EAEvCjhC,EAAWlP,YAAYhT,GAAKmjD,GAAiBF,IACrD/gC,EAAWlP,YAAYhT,GAAKgjD,EAAkBG,IAMlDpE,EAAI9C,SAASC,UACbxqC,KAAK+rC,YAKM2F,WAA2BvG,GACvCtxC,YAAYwzC,EAAmBsE,EAA8BC,EAA8BC,GAE1F,GADAtG,QACI8B,EAAIltC,KAAKe,mBAAqBywC,GAAwBtE,EAAIltC,KAAKiB,mBAAqBwwC,GAAwBvE,EAAIltC,KAAK+a,iBAAmB22B,EAAoB,CAC/J,MAAMC,EAAyB,GAE/B,SAASC,EAAYC,EAAkBC,EAAkBC,EAAkBC,EAAkBx6B,EAAgBtc,EAAkBif,GAC9H,IAAK,IAAIhsB,EAAY,EAAGA,EAAI0jD,EAAU1jD,IAAK,CAC1C,MAAM8R,EAAU9R,EAAI4jD,EACd1E,EAAal/C,EAAI6jD,EACvB,GAAI7jD,EAAI2jD,EACPH,EAAY1xC,GAAWitC,EAAIltC,KAAK+X,SAASs1B,OACnC,CACNsE,EAAY1xC,GAAW,IAAIsX,EAC3Bo6B,EAAY1xC,GAASuX,OAASA,EAC9B,IAAK,IAAIlL,EAAY,EAAGA,EAAI4gC,EAAIltC,KAAK2b,sBAAuBrP,IAAK,CAChE,MAAM+D,EAAyB,IAAI2B,EAAW9W,EAASif,GACjDxgB,EAAsBs4C,GAAsB/2C,GAC5ChB,EAAiBT,EAAa21C,cAAcz1C,GAClD0W,EAAW+O,eAAellB,EAAOO,SAAUS,EAASif,EAA0B,GAAnB+yB,EAAIltC,KAAK0b,QAAkC,GAAnBwxB,EAAIltC,KAAK0b,OAAawxB,EAAIltC,KAAK0b,QAAU,GAC5HrL,EAAWnW,OAASP,EACpBg4C,EAAY1xC,GAASwX,YAAYnL,GAAK+D,EAEvC,IAAK,IAAI/D,EAAY,EAAGA,EAAI4gC,EAAIltC,KAAKyb,mBAAoBnP,IACxDqlC,EAAY1xC,GAASyX,SAASpL,GAAK,IAAI6D,EAExC,IAAK,IAAI7D,EAAY,EAAGA,EAAI4gC,EAAIltC,KAAKwb,SAAUlP,IAC9CqlC,EAAY1xC,GAAS0X,KAAKrL,GAAK,IAMnCslC,EAAYJ,EAAsBtE,EAAIltC,KAAKe,kBAAmB,EAAG,EAAG,GAAG,GAAO,GAC9E6wC,EAAYH,EAAsBvE,EAAIltC,KAAKiB,kBAAmBuwC,EAAsBtE,EAAIltC,KAAKe,kBAAmB,GAAG,GAAM,GACzH6wC,EAAYF,EAAoBxE,EAAIltC,KAAK+a,gBAAiB02B,EAAuBD,EAAsBtE,EAAIltC,KAAKe,kBAAoBmsC,EAAIltC,KAAKiB,kBAAmB,GAAG,GAAO,GAE1KisC,EAAIltC,KAAKe,kBAAoBywC,EAC7BtE,EAAIltC,KAAKiB,kBAAoBwwC,EAC7BvE,EAAIltC,KAAK+a,gBAAkB22B,EAE3B,IAAK,IAAIzxC,EAAkB,EAAGA,EAAUitC,EAAIltC,KAAK8b,kBAAmB7b,IACnEitC,EAAIltC,KAAK+X,SAAS9X,GAAW0xC,EAAY1xC,GAE1CitC,EAAIltC,KAAK+X,SAAS3pB,OAAS8+C,EAAIltC,KAAK8b,kBAEpCoxB,EAAIjtC,QAAUrR,KAAKyB,IAAI68C,EAAIjtC,QAASuxC,EAAuBC,EAAuBC,EAAqB,GAGvG,IAAK,IAAIzxC,EAAkBitC,EAAIltC,KAAKe,kBAAoBmsC,EAAIltC,KAAKiB,kBAAmBhB,EAAUitC,EAAIltC,KAAK8b,kBAAmB7b,IACzH,IAAK,IAAIysB,EAAwB,EAAGA,EAAgBwgB,EAAIltC,KAAK2b,sBAAuB+Q,IACnF,IAAK,IAAIhZ,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAAO,CAEvD,IAAIrD,EAAyB68B,EAAIltC,KAAK+X,SAAS9X,GAASwX,YAAYiV,GAChEzP,EAAoB5M,EAAWkD,YAAYG,GAC3C0G,EAAqB/J,EAAWlP,YAAYuS,IAASuJ,GAAatJ,EAAUwJ,WAAc+vB,EAAIltC,KAAKe,kBAAoB,GAGvHqZ,GAAc8yB,EAAIltC,KAAKe,mBAAsBkc,GAAatJ,EAAUuJ,aACvED,EAAYtJ,EAAUC,OACtBvD,EAAWkD,YAAYG,GAAOC,EAAUC,OACxCvD,EAAWoD,YAAYC,GAAOG,EAAWC,SAEtCsG,GAAc8yB,EAAIltC,KAAKe,kBAAoBmsC,EAAIltC,KAAKiB,mBAAsBgc,GAAatJ,EAAUwJ,aACpG9M,EAAWkD,YAAYG,GAAOC,EAAUC,OACxCvD,EAAWoD,YAAYC,GAAOG,EAAWC,SAO7Co5B,EAAI9C,SAASC,UAEbzqC,EAAYyG,cAEZxG,KAAK+rC,aAKKsG,WAAyBlH,GACrCtxC,YAAYwzC,EAAmBI,EAAoB6E,EAAgBC,GAAoB,GACtFhH,QACA,MAAMiC,EAAqBH,EAAIjtC,QACzBwwB,EAAiByc,EAAIlxB,IAC3BkxB,EAAIjtC,QAAUqtC,EACdJ,EAAIlxB,IAAMm2B,EACLC,IACJlF,EAAInE,aAAen6C,KAAKyB,IAAI68C,EAAIlxB,IAAKptB,KAAKmgB,IAAIm+B,EAAIlxB,KAAOkxB,EAAItD,iBAAmB,GAAIsD,EAAInE,gBAEzFmE,EAAI9C,SAASC,UACTgD,GAAcC,GAAc7c,GAAU0hB,GACzCtyC,KAAK+rC,YAKKyG,WAAuBrH,GACnCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAWrV,UACpBm0C,IACftvC,KAAK+rC,KACLv7B,EAAWrV,SAAWm0C,EACtB9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,kBAKHiI,WAAoBtH,GAChCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAWzV,OACpBu0C,IACftvC,KAAK+rC,KACLv7B,EAAWzV,MAAQu0C,EACnB9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,kBAKHkI,WAAsBvH,GAClCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAWpV,SACpBk0C,IACf9+B,EAAWpV,QAAUk0C,EACrB9+B,EAAWgC,aAAetkB,EAAO8G,SAASwb,EAAWpV,SAAStK,UAC9D0f,EAAWkC,aAAexkB,EAAO8G,SAASwb,EAAWpV,SAASlG,WAC9Dsb,EAAWiC,aAAe,GAC1BjC,EAAWmC,YAAczkB,EAAO8G,SAASwb,EAAWpV,SAASnG,KAC7Dub,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKK4G,WAA2BxH,GACvCtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAC9E,IAAI0D,EAAsBriC,EAAWpV,QACrCiyC,EAAI/T,MAAMwZ,SAAS9+B,EAAW4F,gBAAiByzB,EAAIjtC,QAASitC,EAAI8B,wBAEhE9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAYuD,GAAe3kD,EAAO8G,SAASzG,SAC1DiiB,EAAWgC,aAAe88B,EAAW,GACrC9+B,EAAWpV,QAAUlN,EAAO8G,SAASzG,OACrC8+C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKgH,WAA2B5H,GACvCtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAC9E,IAAI0D,EAAsBriC,EAAWpV,QACrCiyC,EAAI/T,MAAMwZ,SAAS9+B,EAAW8F,gBAAiBuzB,EAAIjtC,QAASitC,EAAI8B,wBAEhE9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAYuD,GAAe3kD,EAAO8G,SAASzG,SAC1DiiB,EAAWiC,aAAe68B,EAC1B9+B,EAAWpV,QAAUlN,EAAO8G,SAASzG,OACrC8+C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKiH,WAA2B7H,GACvCtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAC9E,IAAI0D,EAAsBriC,EAAWpV,QACrCiyC,EAAI/T,MAAMwZ,SAAS9+B,EAAW+F,gBAAiBszB,EAAIjtC,QAASitC,EAAI8B,wBAEhE9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAYuD,GAAe3kD,EAAO8G,SAASzG,SAC1DiiB,EAAWkC,aAAe48B,EAC1B9+B,EAAWpV,QAAUlN,EAAO8G,SAASzG,OACrC8+C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKkH,WAA0B9H,GACtCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACxEyD,EAAmBpiC,EAAWmC,YACpC,IAAIkgC,EAAsBriC,EAAWpV,QAErCiyC,EAAI9C,SAASC,UACToI,GAAYtD,GAAYuD,GAAe3kD,EAAO8G,SAASzG,SAC1DiiB,EAAWmC,YAAc28B,EACzB9+B,EAAWpV,QAAUlN,EAAO8G,SAASzG,OACrC8+C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKmH,WAA4B/H,GACxCtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QAC+B8B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACnEr8B,cAAgBw8B,EAC3BjC,EAAI/T,MAAMwZ,SAAS9+B,EAAWgG,iBAAkBqzB,EAAIjtC,QAASitC,EAAI8B,wBAEjE9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpBoH,WAA6BhI,GACzCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACxEyD,EAAWpiC,EAAWuC,eAE5Bs6B,EAAI9C,SAASC,UACToI,GAAYtD,IACf9+B,EAAWuC,eAAiBu8B,EAC5BtvC,KAAK+rC,aAKKqH,WAAgCjI,GAC5CtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACxEyD,EAAWpiC,EAAWwC,kBAE5Bq6B,EAAI9C,SAASC,UACToI,GAAYtD,IACf9+B,EAAWwC,kBAAoBs8B,EAC/BtvC,KAAK+rC,aAKKsH,WAAkClI,GAC9CtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACxEyD,EAAWpiC,EAAWyC,oBAE5Bo6B,EAAI9C,SAASC,UACToI,GAAYtD,IACf9+B,EAAWyC,oBAAsBq8B,EACjCtvC,KAAK+rC,aAKKuH,WAAuBnI,GACnCtxC,YAAYwzC,EAAmB78B,EAAwB0D,GACtDq3B,QACAr3B,EAAauN,sBACbjR,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,YAIMwH,WAAwBpI,GACpCtxC,YAAYwzC,EAAmB78B,EAAwB+C,GACtDg4B,QACAh4B,EAAckO,sBACdjR,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,YAIMyH,WAA8BrI,GAC1CtxC,YAAYwzC,EAAmBoG,EAAmBnE,GACjD/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAWgD,iBAAiBigC,IACrCnE,IACf9+B,EAAWgD,iBAAiBigC,GAAanE,EACzC9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,OAKR,MAAM2H,WAA+BvI,GAEpCtxC,YAAoBktC,GACnBwE,QADmBvrC,KAAA+mC,EAAAA,EAEnB/mC,KAAK2zC,GAAc3zC,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAG9Et1C,SACDmG,KAAK8rC,WACT9rC,KAAK2zC,GAAYt5C,OAAS2F,KAAK2zC,GAAY1+C,KAC3C+K,KAAK+mC,EAAKwD,SAASC,kBAKToJ,WAAyBF,GACrC75C,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,MAAM8B,GACNrtC,KAAK2zC,GAAY33C,WAAaszC,EAC9BjC,EAAI/T,MAAMwZ,SAAS9+B,EAAW0F,cAAe2zB,EAAIjtC,QAASitC,EAAI8B,wBAC9D9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpB8H,WAA4B1I,GACxCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAWvU,eACpBqzC,IACf9+B,EAAWvU,cAAgBqzC,EAC3B9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKK+H,WAA2BJ,GACvC75C,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,MAAM8B,GACNrtC,KAAK2zC,GAAYphC,aAAe+8B,EAChCjC,EAAI/T,MAAMwZ,SAAS9+B,EAAWmF,aAAck0B,EAAIjtC,QAASitC,EAAI8B,wBAC7D9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpBgI,WAA8BL,GAC1C75C,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,MAAM8B,GACNrtC,KAAK2zC,GAAY14C,gBAAkBq0C,EACnCjC,EAAI/T,MAAMwZ,SAAS9+B,EAAWoF,cAAei0B,EAAIjtC,QAASitC,EAAI8B,wBAC9D9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpBiI,WAA6B7I,GACzCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAWtV,gBACpBo0C,IACf9+B,EAAWtV,eAAiBo0C,EAC5B9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKkI,WAAwB9I,GACpCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAWlV,WACpBg0C,IACf9+B,EAAWlV,UAAYg0C,EACvB9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKmI,WAA2B/I,GACvCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAWjV,cACpB+zC,IACf9+B,EAAWjV,aAAe+zC,EAC1B9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKoI,WAA+BhJ,GAC3CtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAW/U,kBACpB6zC,IACf9+B,EAAW/U,iBAAmB6zC,EAC9B9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKqI,WAA+BjJ,GAC3CtxC,YAAYwzC,EAAmBgH,EAAuB/E,GACrD/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAW9U,UAAU24C,GAAez4C,UAC7C0zC,IACf9+B,EAAW9U,UAAU24C,GAAez4C,SAAW0zC,EAC/C9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKuI,WAAgCnJ,GAC5CtxC,YAAYwzC,EAAmBgH,EAAuB/E,GACrD/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBACrD3+B,EAAW9U,UAAU24C,GAAe14C,WAC7C2zC,IACf9+B,EAAW9U,UAAU24C,GAAe14C,UAAY2zC,EAChD9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKwI,WAAgCb,GAC5C75C,YAAYwzC,EAAmBgH,EAAuBzB,EAAkBtD,GACvE/D,MAAM8B,GACNrtC,KAAK2zC,GAAYj4C,UAAU24C,GAAevjD,UAAYw+C,EAGtDjC,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpByI,WAAgCd,GAC5C75C,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,MAAM8B,GACNrtC,KAAK2zC,GAAYn4C,kBAAoB8zC,EAGrCjC,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpB0I,WAAoCtJ,GAChDtxC,YAAYwzC,EAAmBqH,GAE9B,GADAnJ,QACI8B,EAAIltC,KAAK2b,uBAAyB44B,EAA0B,CAC/D,IAAK,IAAIt0C,EAAkB,EAAGA,EAAUitC,EAAIltC,KAAK8b,kBAAmB7b,IAAW,CAC9E,MAAMu0C,EAA+BtH,EAAIltC,KAAK+X,SAAS9X,GAASwX,YAAYy1B,EAAIltC,KAAK2b,sBAAwB,GACvG84B,EAA4BD,EAAiBrxB,eACnD,IAAK,IAAI7W,EAAY4gC,EAAIltC,KAAK2b,sBAAuBrP,EAAIioC,EAA0BjoC,IAAK,CACvF,MAAMooC,EAA4B,IAAI1iC,EAAWk7B,EAAIltC,KAAK8c,kBAAkB7c,GAAUitC,EAAIltC,KAAK+c,gBAAgB9c,IACtF,GAArBu0C,EAAiB1/C,KAEpB4/C,EAAchgC,gBAAe,GAAqB,GAAO,GAC1B,GAArB8/B,EAAiB1/C,KAE3B4/C,EAAchgC,gBAAe,GAA0B,GAAM,GAE7DggC,EAAct1B,eAAeq1B,EAAsBvH,EAAIltC,KAAK8c,kBAAkB7c,GAAUitC,EAAIltC,KAAK+c,gBAAgB9c,GAA6B,GAAnBitC,EAAIltC,KAAK0b,QAAkC,GAAnBwxB,EAAIltC,KAAK0b,OAAawxB,EAAIltC,KAAK0b,QAAU,GAE7LwxB,EAAIltC,KAAK+X,SAAS9X,GAASwX,YAAYnL,GAAKooC,EAE7CxH,EAAIltC,KAAK+X,SAAS9X,GAASwX,YAAYrpB,OAASmmD,EAChD,IAAK,IAAIjoC,EAAY,EAAGA,EAAI4gC,EAAIltC,KAAKyb,mBAAoBnP,IACpD4gC,EAAIltC,KAAK+X,SAAS9X,GAASyX,SAASpL,GAAG+D,YAAckkC,IACxDrH,EAAIltC,KAAK+X,SAAS9X,GAASyX,SAASpL,GAAG+D,WAAa,GAKvD68B,EAAIltC,KAAK2b,sBAAwB44B,EAGjC,IAAK,IAAIt0C,EAAkBitC,EAAIltC,KAAKe,kBAAoBmsC,EAAIltC,KAAKiB,kBAAmBhB,EAAUitC,EAAIltC,KAAK8b,kBAAmB7b,IACzH,IAAK,IAAIysB,EAAwB,EAAGA,EAAgBwgB,EAAIltC,KAAK2b,sBAAuB+Q,IACnF,IAAK,IAAIhZ,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAAO,CAEvD,IAAIrD,EAAyB68B,EAAIltC,KAAK+X,SAAS9X,GAASwX,YAAYiV,GACxCrc,EAAWmD,eAAeE,IAGjCw5B,EAAIltC,KAAK2b,wBAC7BtL,EAAWmD,eAAeE,GAAO,EACjCrD,EAAWoD,YAAYC,GAAO,GAOlCw5B,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKK+I,WAAkB3J,GAC9BtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACI8B,EAAIltC,KAAKvC,KAAO0xC,IACnBjC,EAAIltC,KAAKvC,IAAM0xC,EACfjC,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKgJ,WAAmB5J,GAC/BtxC,YAAoBktC,EAA2BoL,EAAyB6C,EAA0B9C,EAAyBhB,GAC1H3F,QADmBvrC,KAAA+mC,EAAAA,EAA2B/mC,KAAAmyC,SAAAA,EAAyBnyC,KAAAg1C,UAAAA,EAA0Bh1C,KAAAkyC,SAAAA,EAAyBlyC,KAAAkxC,UAAAA,EAE1HlxC,KAAK+mC,EAAK5mC,KAAKkb,UAAYrb,KAAKkyC,SAChClyC,KAAK+mC,EAAK5mC,KAAKmb,WAAatb,KAAKkxC,UACjClxC,KAAK+mC,EAAKwD,SAASC,UACfxqC,KAAKmyC,UAAYnyC,KAAKkyC,UAAYlyC,KAAKg1C,WAAah1C,KAAKkxC,WAC5DlxC,KAAK+rC,YAKKkJ,WAAyB5J,GAKrCxxC,YAAYwzC,EAAmB58B,EAAYnB,EAAengB,EAAe+lD,GAAoB,GAC5F3J,MAAM2J,GACNl1C,KAAK+mC,EAAOsG,EACZrtC,KAAKquC,GAAQ59B,EACbzQ,KAAKm1C,GAAS7lC,EACdtP,KAAKyO,EAAStf,EACd6Q,KAAK+rC,KACL/rC,KAAKmsC,OAGItyC,KACTmG,KAAKquC,GAAM3+B,QAAQ8O,OAAOxe,KAAKyO,EAAQ,EAAGzO,KAAKm1C,IAC/Cn1C,KAAK+mC,EAAKwD,SAASC,UAGV3wC,KACTmG,KAAKquC,GAAM3+B,QAAQ8O,OAAOxe,KAAKyO,EAAQ,GACvCzO,KAAK+mC,EAAKwD,SAASC,iBAIR4K,WAAqBjK,GACjCtxC,YAAYwzC,EAA0BuF,EAAkBtD,GACvD/D,QADqCvrC,KAAA4yC,SAAAA,EAErCvF,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASuX,OAAS23B,EACxCjC,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpBsJ,WAAqBzJ,GACjC/xC,YAAYwzC,EAAmBiC,GAC9B/D,QAEI8B,EAAIltC,KAAK0b,QAAUyzB,IACtBjC,EAAIltC,KAAK0b,OAASyzB,EAClBjC,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKuJ,WAAoB1J,GAChC/xC,YAAYwzC,EAAmBnxB,EAAkB3L,EAAcglC,EAAwBC,EAAsBC,GAC5GlK,QAGAvrC,KAAKkuC,OAAO,IAAIwH,GAAmBrI,EAAKnxB,EAASq5B,EAAgBC,EAAc,MAAM,IAGrF,IAAIG,EAA6B,EACjC,GAAKtI,EAAIltC,KAAK+c,gBAAgBmwB,EAAIjtC,SAYjCu1C,EAAqBz5B,EAAQ3L,MAAMhiB,YAXnC,IAAK,IAAID,EAAY,EAAGA,EAAI4tB,EAAQ3L,MAAMhiB,OAAQD,IACjD,GAAI4tB,EAAQ3L,MAAMjiB,GAAGihB,MAAQgmC,EAAgB,CAC5C,GAAIr5B,EAAQ3L,MAAMjiB,GAAGkhB,IAAM+lC,EAAgB,MAAM,IAAIxlD,MAErD4lD,EAAqBrnD,EAAI,OACnB,GAAI4tB,EAAQ3L,MAAMjiB,GAAGihB,MAAQimC,EACnC,MAAM,IAAIzlD,MAQb,KAAOwlD,EAAiBC,GAAc,CACrC,IAAK,MAAM/vB,KAAclV,EAAO,CAC/B,MAAMkW,EAAoBhB,EAAkB,MAAI8vB,EAC1C7uB,EAAkBjB,EAAgB,IAAI8vB,EAC5C,GAAI9uB,GAAa+uB,EAAc,MAC/B,MAAM/kC,EAAa,IAAIpB,EAAKoW,EAAoB,QAAE,GAAIgB,EAAWC,EAASjB,EAAiB,KAAE,GAAW,QAAG,GAC3GhV,EAAKf,QAAQnhB,OAAS,EACtB,IAAK,MAAM+gB,KAASmW,EAAoB,QACvChV,EAAKf,QAAQ/gB,KAAK2gB,GAEnBmB,EAAKd,KAAKphB,OAAS,EACnB,IAAK,MAAM4hB,KAAOsV,EAAiB,KAClChV,EAAKd,KAAKhhB,KAAKogB,EAAYoB,EAAIhV,SAAUgV,EAAInB,KAAMmB,EAAInc,SAExDkoB,EAAQ3L,MAAMiO,OAAOm3B,IAAsB,EAAGllC,GAC1CA,EAAKjB,IAAMgmC,GACdx1C,KAAKkuC,OAAO,IAAI0H,GAAiBvI,EAAK58B,EAAMA,EAAKlB,MAAOimC,IAI1DD,GAAkBE,EAGnBpI,EAAI9C,SAASC,UACbxqC,KAAK+rC,YAIM8J,WAA8BjK,GAC1C/xC,YAAYwzC,EAAmB78B,EAAwBslC,GACtDvK,QACA/6B,EAAW+O,eAAeu2B,EAAgBA,EAAuB,OAAGA,EAAsB,OAAG,GAAO,GACpGzI,EAAI9C,SAASC,UACbxqC,KAAK+rC,YAIMgK,WAAgC5K,GAC5CtxC,YAAYwzC,EAAmBiC,EAAkBpzB,GAChDqvB,QACIrvB,EAAQ1L,YAAc8+B,IACzBpzB,EAAQ1L,WAAa8+B,EACrBjC,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKiK,WAAyB7K,GACrCtxC,YAAYwzC,EAAmBx5B,EAAa1kB,GAC3Co8C,QAEA,IAAI0K,EAAkBniC,EAAUC,OAC5B3T,EAAkB,EAClBoQ,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAE/D,GAAThgD,EACH8mD,EAAOniC,EAAUyZ,UAEA,GAATp+B,EACR8mD,EAAOniC,EAAUC,OAET5kB,EAAQ,EAAIk+C,EAAIltC,KAAKe,mBAC7B+0C,EAAOniC,EAAUuJ,WACjBjd,EAAUjR,EAAQ,IAGlB8mD,EAAOniC,EAAUwJ,WACjBld,EAAUjR,EAAQk+C,EAAIltC,KAAKe,kBAAoB,GAG5CsP,EAAWkD,YAAYG,IAAQoiC,GAAQzlC,EAAWlP,YAAYuS,IAAQzT,IAEzEoQ,EAAWkD,YAAYG,GAAOoiC,EAC9BzlC,EAAWlP,YAAYuS,GAAOzT,EAE9BitC,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKmK,WAA4B/K,GACxCtxC,YAAYwzC,EAAmBx5B,EAAasiC,GAC3C5K,QAEA,IAAI/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAExE3+B,EAAWmD,eAAeE,IAAQsiC,IACrC3lC,EAAWmD,eAAeE,GAAOsiC,EAEjC9I,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKqK,WAAyBjL,GACrCtxC,YAAYwzC,EAAmBx5B,EAAawiC,GAC3C9K,QAEA,IAAItwB,EAAsBjH,EAAWC,QACjCzD,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAE5E,OAAQkH,GACP,IAAK,cACJp7B,EAAUjH,EAAW6E,cACrB,MACD,IAAK,QACJoC,EAAUjH,EAAW8E,SACrB,MACD,IAAK,SACJmC,EAAUjH,EAAW+E,UACrB,MACD,IAAK,WACJkC,EAAUjH,EAAWgF,WACrB,MACD,IAAK,SACJiC,EAAUjH,EAAWiF,aACrB,MACD,IAAK,MACJgC,EAAUjH,EAAWkF,OACrB,MACD,IAAK,aACJ+B,EAAUjH,EAAWmF,aACrB,MACD,IAAK,cACJ8B,EAAUjH,EAAWoF,cACrB,MACD,IAAK,cACJ6B,EAAUjH,EAAWqF,aACrB,MACD,IAAK,cACJ4B,EAAUjH,EAAWsF,aACrB,MACD,IAAK,cACJ2B,EAAUjH,EAAWuF,aACrB,MACD,IAAK,cACJ0B,EAAUjH,EAAWwF,aACrB,MACD,IAAK,cACJyB,EAAUjH,EAAWyF,cACrB,MACD,IAAK,cACJwB,EAAUjH,EAAW0F,cACrB,MACD,IAAK,SACJuB,EAAUjH,EAAW2F,UACrB,MACD,IAAK,gBACJsB,EAAUjH,EAAW4F,gBACrB,MACD,IAAK,gBACJqB,EAAUjH,EAAW8F,gBACrB,MACD,IAAK,gBACJmB,EAAUjH,EAAW+F,gBACrB,MACD,IAAK,YACJkB,EAAUjH,EAAWiG,YACrB,MACD,IAAK,iBACJgB,EAAUjH,EAAWgG,iBACrB,MACD,IAAK,iBACJiB,EAAUjH,EAAWkG,iBACrB,MACD,IAAK,cACJe,EAAUjH,EAAW6F,cAOvB,GAAIrJ,EAAWoD,YAAYC,IAAQoH,EAAS,CAE3CzK,EAAWoD,YAAYC,GAAOoH,EAG9B,IAAIR,EAAc4yB,EAAIltC,KAAKyY,WAAWpX,IAAIyZ,GAE1C,IAAK,IAAI3sB,EAAY,EAAGA,EAAI++C,EAAIltC,KAAKyb,mBAAoBttB,IAAK,CAC7D,MAAM4tB,EAAmBmxB,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASyX,SAASvpB,GACjE,GAAI4tB,EAAQ1L,YAAc68B,EAAI8B,uBAC7B,IAAK,IAAI1iC,EAAY,EAAGA,EAAIyP,EAAQ3L,MAAMhiB,OAAQke,IAAK,CACtD,MAAMgE,EAAayL,EAAQ3L,MAAM9D,GACjC,GAAIgE,EAAKf,QAAQ,IAAMxhB,EAAO0K,SAAWib,EAAM,EAC9C,IAAK,IAAI6R,EAAY,EAAGA,EAAIjV,EAAKd,KAAKphB,OAAQm3B,IAAK,CAClD,MAAMvV,EAAeM,EAAKd,KAAK+V,GAC3BvV,EAAInc,OAASymB,IAChBtK,EAAInc,OAASymB,KAOnB4yB,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKuK,WAAiCnL,GAC7CtxC,YAAYwzC,EAAmBiC,GAE9B,GADA/D,QACI8B,EAAIltC,KAAKyb,oBAAsB0zB,EAAU,CAC5C,IAAK,IAAIhhD,EAAY,EAAGA,EAAI++C,EAAIltC,KAAK8b,kBAAmB3tB,IAAK,CAC5D,MAAMioD,EAAwBlJ,EAAIltC,KAAK+X,SAAS5pB,GAAGwpB,KAC7C0+B,EAA6BnJ,EAAIltC,KAAK+X,SAAS5pB,GAAGupB,SACxD,IAAK,IAAIpL,EAAY,EAAGA,EAAI8pC,EAAYhoD,OAAQke,IAC3C8pC,EAAY9pC,GAAK6iC,IAAUiH,EAAY9pC,GAAK,GAEjD,IAAK,IAAIA,EAAY+pC,EAAgBjoD,OAAQke,EAAI6iC,EAAU7iC,IAC1D+pC,EAAgB/pC,GAAK,IAAI6D,EAE1BkmC,EAAgBjoD,OAAS+gD,EAE1BjC,EAAIltC,KAAKyb,mBAAqB0zB,EAC9BjC,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKK0K,WAAkCpL,GAS9CxxC,YAAYwzC,EAAmBjtC,EAAiB+b,GAC/CovB,OAAM,GALCvrC,KAAA02C,GAAkC,KAMzC,MAAMv2C,EAAaktC,EAAIltC,KACvB,GAAwC,GAApCA,EAAK+X,SAAS9X,GAAS0X,KAAKqE,GAAW,OAE3Cnc,KAAK+mC,EAAOsG,EACZrtC,KAAK22C,GAAOx6B,EACZnc,KAAK42C,GAAWx2C,EAChBJ,KAAK62C,GAAmB12C,EAAKyb,mBAC7B5b,KAAK82C,GAAmB32C,EAAKyb,mBAE7B,IAAIm7B,EAAuC,KACvCC,EAAkC,KACtC,IAAK,IAAIjxB,EAAuB,EAAGA,GAAgB5lB,EAAKyb,mBAAoBmK,IAAgB,CAC3F,IAAIkxB,GAAO,EACX,IAAK,IAAIC,EAAmB,EAAGA,EAAW/2C,EAAKwb,SAAUu7B,IACxD,GAAI/2C,EAAK+X,SAAS9X,GAAS0X,KAAKo/B,IAAanxB,EAAc,CAC1DkxB,GAAO,EACP,MAGF,GAAIA,EAAM,SACc,MAApBD,IACHA,EAAmBjxB,GAGpB,GAA4B,GADH5lB,EAAK+X,SAAS9X,GAASyX,SAASkO,EAAe,GAC5DxV,MAAMhiB,OAAa,CAC9BwoD,EAAwBhxB,EACxB,OAIF,GAA6B,MAAzBgxB,EACH/2C,KAAKm3C,GAAgBJ,OACf,GAAI52C,EAAKyb,mBAAqBzb,EAAKwb,SACzC3b,KAAK82C,GAAmB32C,EAAKyb,mBAAqB,EAClD5b,KAAKm3C,GAAgBh3C,EAAKyb,mBAAqB,MACzC,CAAA,GAAwB,MAApBo7B,EAIV,MAAM,IAAIjnD,MAHViQ,KAAKm3C,GAAgBH,EACrBh3C,KAAK02C,GAAmBv2C,EAAK+X,SAAS9X,GAASyX,SAASm/B,EAAmB,GAAGzmC,MAK/EvQ,KAAK+rC,KACL/rC,KAAK0rC,KAGI7xC,KACT,MAAMsG,EAAaH,KAAK+mC,EAAK5mC,KAC7B,IAAK,IAAIsM,EAAYtM,EAAKyb,mBAAoBnP,EAAIzM,KAAK82C,GAAkBrqC,IACxE,IAAK,IAAIne,EAAY,EAAGA,EAAI6R,EAAK8b,kBAAmB3tB,IACnD6R,EAAK+X,SAAS5pB,GAAGupB,SAASpL,GAAK,IAAI6D,EAGrCnQ,EAAKyb,mBAAqB5b,KAAK82C,GACN32C,EAAK+X,SAASlY,KAAK42C,IAAU/+B,SAAS7X,KAAKm3C,GAAgB,GAC5E5mC,MAAQ,GAChBpQ,EAAK+X,SAASlY,KAAK42C,IAAU9+B,KAAK9X,KAAK22C,IAAQ32C,KAAKm3C,GACpDn3C,KAAK+mC,EAAKwD,SAASC,UAGV3wC,KACT,MAAMsG,EAAaH,KAAK+mC,EAAK5mC,KACvB+b,EAAmB/b,EAAK+X,SAASlY,KAAK42C,IAAU/+B,SAAS7X,KAAKm3C,GAAgB,GACvD,MAAzBn3C,KAAK02C,KAA0Bx6B,EAAQ3L,MAAQvQ,KAAK02C,IACxDv2C,EAAK+X,SAASlY,KAAK42C,IAAU9+B,KAAK9X,KAAK22C,IAAQ,EAC/C,IAAK,IAAIroD,EAAY,EAAGA,EAAI6R,EAAK8b,kBAAmB3tB,IACnD6R,EAAK+X,SAAS5pB,GAAGupB,SAAStpB,OAASyR,KAAK62C,GAEzC12C,EAAKyb,mBAAqB5b,KAAK62C,GAC/B72C,KAAK+mC,EAAKwD,SAASC,iBAIR4M,WAAsBhJ,GAClCv0C,YAAYwzC,EAA0B58B,EAAYX,EAAkBunC,GACnE9L,MAAM8B,EAAK58B,GAEX4mC,GAAer3C,KAAKsuC,GACpB,MAAMgJ,EAAuBt3C,KAAK0uC,GAAS5+B,GAAUd,KAC/CuoC,EAAoBxoD,KAAKyB,IAAI8mD,EAAcD,GAC3CG,EAAkBzoD,KAAKmgB,IAAIooC,EAAcD,GAC/C,IAAII,GAAkB,EACtB,IAAK,IAAInpD,EAAY,EAAGA,EAAI0R,KAAK0uC,GAASngD,OAAQD,IAAK,CACtD,MAAMopD,EAAkBjnC,EAAKd,KAAKrhB,GAC5B0gB,EAAe0oC,EAAO1oC,KACxBA,EAAOuoC,EACVv3C,KAAK2uC,GAAShgD,KAAKogB,EAAY2oC,EAAOv8C,SAAU6T,EAAM0oC,EAAO1jD,SACnDgb,EAAOwoC,IACZC,IACJz3C,KAAK2uC,GAAShgD,KAAKogB,EAAY/O,KAAK0uC,GAAS5+B,GAAU3U,SAAUk8C,EAAar3C,KAAK0uC,GAAS5+B,GAAU9b,SACtGyjD,GAAS,GAEVz3C,KAAK2uC,GAAShgD,KAAKogB,EAAY2oC,EAAOv8C,SAAU6T,EAAM0oC,EAAO1jD,UAG1DyjD,GACJz3C,KAAK2uC,GAAShgD,KAAKogB,EAAY/O,KAAK0uC,GAAS5+B,GAAU3U,SAAUk8C,EAAar3C,KAAK0uC,GAAS5+B,GAAU9b,SAGvGgM,KAAK23C,YAIMC,WAAwBxJ,GACpCv0C,YAAYwzC,EAA0B58B,EAAYonC,EAAmBC,EAAiBC,EAAgBn5B,GACrG2sB,MAAM8B,EAAK58B,GAEXonC,GAAa73C,KAAKsuC,GAClBwJ,GAAW93C,KAAKsuC,GAChByJ,GAAUtnC,EAAKf,QAAQkP,GAEvB,IAKItwB,EACA0pD,EACAC,EACAtpD,EARAupD,GAAoB,EACpBC,GAAkB,EAClBC,EAAuB,EACvBC,EAAqB,EACrBC,GAAmB,EAgBvB,IAXIR,EAAUD,GACbvpD,EAAI,EACJ0pD,EAAY,EACZC,EAAOxnC,EAAKd,KAAKphB,OACjBI,EAAQshD,IAAoBjwC,KAAK2uC,GAAShgD,KAAKshD,MAE/C3hD,EAAImiB,EAAKd,KAAKphB,OAAS,EACvBypD,GAAa,EACbC,GAAQ,EACRtpD,EAAQshD,IAAoBjwC,KAAK2uC,GAASlwB,QAAQwxB,KAE5C3hD,GAAK2pD,EAAM3pD,GAAK0pD,EAAW,CACjC,MAAMN,EAAkBjnC,EAAKd,KAAKrhB,GAC5B0gB,EAAe0oC,EAAO1oC,KAC5B,OACC,GAAKkpC,EAYE,CAAA,GAAKC,EAWL,CACN,GAAInpC,EAAOgpC,GAAaF,EAAUE,EACjC,MAEIN,EAAOv8C,UAAYi9C,IAAcE,GAAU,GAC/C3pD,EAAKogB,EAAYupC,EAAUP,EAASL,EAAOv8C,SAAU6T,EAAM0oC,EAAO1jD,SAClE,MAZD,GAJIgb,EAAOgpC,GAAaF,EAAUE,IACjCI,EAAeV,EAAOv8C,SACtBk9C,EAAaX,EAAO1jD,QAEjBgb,EAAOgpC,EAAYF,EAAUE,EAChC,MAEArpD,EAAKogB,EAAYgpC,EAAQD,EAASO,IAClCF,GAAS,MArBI,CAKd,GAJInpC,EAAOgpC,GAAaH,EAAYG,IACnCI,EAAeV,EAAOv8C,SACtBk9C,EAAaX,EAAO1jD,QAEjBgb,EAAOgpC,EAAYH,EAAYG,EAAW,CAC7CrpD,EAAKogB,EAAY2oC,EAAOv8C,SAAU6T,EAAM0oC,EAAO1jD,SAC/C,MAEArF,EAAKogB,EAAYqpC,EAAcP,EAAWQ,IAC1CH,GAAW,GAwBVC,GACJxpD,EAAKogB,EAAYgpC,EAAQD,EAASO,IAGnCr4C,KAAK23C,YAIMY,WAA4BvM,GACxCnyC,YAAYwzC,EAAmBnxB,GAC9BqvB,QACA,MAAMiN,EAAsBtqD,EAAOqF,aAAerF,EAAOwF,QAAQ25C,EAAIltC,KAAK0b,QAAQloB,aAE5E8kD,EAA4C,SAAUC,GAC3D,IAAIC,EAA8BzqD,EAAOwF,QAAQ25C,EAAIltC,KAAK0b,QAAQjoB,kBAClE,GAAkB,MAAd+kD,EAAoB,CACvB,MAAMC,EAAoB7pD,KAAKmU,MAAMw1C,EAAUxqD,EAAOqF,cAAgBrF,EAAOqF,aACvEm6B,EAAoBgrB,EAAUE,EACpC,IAAIC,EAAkBD,EACtB,IAAK,MAAME,KAAaH,EAAY,CACnC,KAAIjrB,GAAaorB,GAGhB,MAFAD,GAAWL,EAKb,OAAOK,EAEP,OAAO9pD,KAAKgb,MAAM2uC,EAAUF,GAAeA,GAI7C,IAAIlqD,EAAY,EAChB,KAAOA,EAAI4tB,EAAQ3L,MAAMhiB,QAAQ,CAChC,MAAMkiB,EAAayL,EAAQ3L,MAAMjiB,GAC7BmqD,EAAahoC,EAAKlB,QAAUkpC,EAAahoC,EAAKjB,KACjDxP,KAAKkuC,OAAO,IAAI6K,GAAgB1L,EAAKnxB,EAASzL,EAAMniB,GAAG,KAEvD0R,KAAKkuC,OAAO,IAAI8K,GAAiB3L,EAAK58B,EAAMgoC,IAC5CnqD,OAMJ,MAAM0qD,WAAyB5K,GAC9Bv0C,YAAYwzC,EAA0B58B,EAAYgoC,GACjDlN,MAAM8B,EAAK58B,GAEX,IAAK,MAAMinC,KAAU13C,KAAK0uC,GACzB1uC,KAAK2uC,GAAShgD,KAAKogB,EAAY2oC,EAAOv8C,SAAUs9C,EAAaf,EAAO1oC,KAAOhP,KAAKsuC,IAAatuC,KAAKsuC,GAAWoJ,EAAO1jD,SAGrHgM,KAAK23C,YAIMsB,WAAgCrN,GAC5C/xC,YAAYwzC,EAAmB6L,EAAqBC,GACnD5N,QACA,IAAIgC,EAAsBx+C,KAAKgb,MAAOmvC,EAAc7L,EAAIltC,KAAKub,YAAextB,EAAOqF,cAEnF,GADIg6C,EAAc,IAAGA,GAAeF,EAAIltC,KAAKub,YAAcxtB,EAAOqF,cAC/C,GAAfg6C,EAAJ,CAEA,OAAQ4L,GACP,IAAK,aAAc,CAClB,MAAMld,EAAsB/tC,EAAOqF,aAAe85C,EAAIltC,KAAKub,YAC3D,IAAK,MAAMtb,KAAWitC,EAAIltC,KAAK+X,SAC9B,IAAK,MAAMgE,KAAW9b,EAAQyX,SAAU,CACvC,MAAMoK,EAAmB,GAEzB,IAAK,IAAI9F,EAAc,EAAGA,GAAO,EAAGA,IAAO,CAC1C,MAAM6xB,EAAuB7xB,EAAM8f,EAEnC,IAAK,MAAMsQ,KAAWrwB,EAAQ3L,MAAO,CACpC,MAAMu9B,EAA4BvB,EAAQh9B,MAAQg+B,EAC5CQ,EAA0BxB,EAAQ/8B,IAAM+9B,EACxCd,EAAwB19C,KAAKmgB,IAAI,EAAG4+B,EAAoBE,GACxDtB,EAAsB39C,KAAKyB,IAAIyrC,EAAa8R,EAAkBC,GAEhEvB,EAAgBC,GACnBJ,GAAmBC,EAASuB,EAAoBE,EAAevB,EAAeA,EAAeC,EAAazqB,IAK7G/F,EAAQ3L,MAAQ0R,GAGjB,MACF,IAAK,WAAY,CAChB,IAAIm3B,EAA2B/L,EAAIltC,KAAKwb,SACpC09B,EAA4BhM,EAAIltC,KAAKkb,UACrCi+B,EAA6BjM,EAAIltC,KAAKmb,WAI1C,GAFAtb,KAAKkuC,OAAO,IAAId,GAA2BC,EAAKA,EAAIltC,KAAKub,YAAa6xB,IAElE2L,EAAc,EAAG,CACpB,IAAIK,GAA2B,EAC/B,IAAK,MAAMn5C,KAAWitC,EAAIltC,KAAK+X,SACP,GAAnB9X,EAAQ0X,KAAK,KAASyhC,GAAkB,GAE7C,GAAIA,EAAiB,CACpB,IAAK,MAAMn5C,KAAWitC,EAAIltC,KAAK+X,SAC9B9X,EAAQ0X,KAAKgL,QAEduqB,EAAIltC,KAAKwb,gBAETy9B,IACAC,IACAhM,EAAIlxB,MAGN,KAAOkxB,EAAIltC,KAAKwb,SAAWy9B,GAAkB,CAC5C,IAAK,MAAMh5C,KAAWitC,EAAIltC,KAAK+X,SAC9B9X,EAAQ0X,KAAKnpB,KAAK,GAEnB0+C,EAAIltC,KAAKwb,WAEV0xB,EAAIltC,KAAKkb,UAAYg+B,EACrBhM,EAAIltC,KAAKmb,WAAag+B,EACrB,MACF,QAAS,MAAM,IAAIvpD,MAAM,mDAG1Bs9C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAIMyN,WAA0B5N,GACtC/xC,YAAYwzC,EAAmBiC,EAAkB6J,GAEhD,GADA5N,QACI8B,EAAIltC,KAAKub,aAAe4zB,EAAU,CACrC,OAAQ6J,GACP,IAAK,SACJ,GAAI9L,EAAIltC,KAAKub,YAAc4zB,EAAU,CACpC,MAAMprB,EAA2B,IAAI8nB,GACrC,IAAK,IAAI19C,EAAY,EAAGA,EAAI++C,EAAIltC,KAAK8b,kBAAmB3tB,IACvD,IAAK,IAAIme,EAAY,EAAGA,EAAI4gC,EAAIltC,KAAK+X,SAAS5pB,GAAGupB,SAAStpB,OAAQke,IACjEyX,EAASgqB,OAAO,IAAIwH,GAAmBrI,EAAKA,EAAIltC,KAAK+X,SAAS5pB,GAAGupB,SAASpL,GAAI6iC,EAAWphD,EAAOqF,aAAc85C,EAAIltC,KAAKub,YAAcxtB,EAAOqF,aAAc,MAAM,IAIlK,MACF,IAAK,UAAW,CACf,MAAMklD,EAAe,SAAUC,GAC9B,OAAO3pD,KAAKgb,MAAM2uC,EAAUpJ,EAAWjC,EAAIltC,KAAKub,cAEjD,IAAK,IAAIM,EAAuB,EAAGA,EAAeqxB,EAAIltC,KAAK8b,kBAAmBD,IAC7E,IAAK,IAAI+J,EAAuB,EAAGA,EAAesnB,EAAIltC,KAAK+X,SAAS8D,GAAcnE,SAAStpB,OAAQw3B,IAAgB,CAClH,MAAM7J,EAAmBmxB,EAAIltC,KAAK+X,SAAS8D,GAAcnE,SAASkO,GAClE,IAAI0zB,EAAoB,EACxB,KAAOA,EAAYv9B,EAAQ3L,MAAMhiB,QAAQ,CACxC,MAAMkiB,EAAayL,EAAQ3L,MAAMkpC,GAC7BhB,EAAahoC,EAAKlB,QAAUkpC,EAAahoC,EAAKjB,KACjDxP,KAAKkuC,OAAO,IAAI6K,GAAgB1L,EAAKnxB,EAASzL,EAAMgpC,GAAW,KAE/Dz5C,KAAKkuC,OAAO,IAAI8K,GAAiB3L,EAAK58B,EAAMgoC,IAC5CgB,MAKJz5C,KAAKkuC,OAAO,IAAIwL,GAAYrM,EAAKA,EAAIltC,KAAKwa,MAAO0yB,EAAIltC,KAAKwa,MAAQ20B,EAAWjC,EAAIltC,KAAKub,cACrF,MACF,IAAK,WACJ1b,KAAKkuC,OAAO,IAAId,GAA2BC,EAAKiC,EAAU,IAC1DjC,EAAIltC,KAAKkb,UAAY,EACrBgyB,EAAIltC,KAAKmb,WAAa+xB,EAAIltC,KAAKwb,SAC9B,MACF,QAAS,MAAM,IAAI5rB,MAAM,mDAG1Bs9C,EAAIltC,KAAKub,YAAc4zB,EACvBjC,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKK4N,WAAoB/N,GAChC/xC,YAAYwzC,EAAmBiC,GAC9B/D,QACI8B,EAAIltC,KAAKib,OAASk0B,IACrBjC,EAAIltC,KAAKib,MAAQk0B,EACjBjC,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKK6N,WAAwBhO,GACpC/xC,YAAYwzC,GACX9B,QACA,MAAMprC,EAAaktC,EAAIltC,KACjBzN,EAAoBxE,EAAOsE,KAAK2N,EAAKvC,KAAKlL,UAC1CmnD,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/D,IAAK,IAAI79B,EAAuB,EAAGA,EAAe7b,EAAKe,kBAAmB8a,IACzE,IAAK,IAAIk7B,EAAmB,EAAGA,EAAW/2C,EAAKwb,SAAUu7B,IAAY,CACpE,MAAMh7B,EAA0B/b,EAAK6lB,WAAWhK,EAAck7B,GAC9D,GAAe,MAAXh7B,EACH,IAAK,MAAMzL,KAAQyL,EAAQ3L,MAAO,CACjC,MAAMy8B,EAAmBv8B,EAAKd,KAAK,GACnC,IAAK,IAAIG,EAAmB,EAAGA,EAAWW,EAAKd,KAAKphB,OAAQuhB,IAAY,CACvE,MAAM+8B,EAAmBp8B,EAAKd,KAAKG,GACnC,GAAIk9B,EAAQ7xC,UAAY0xC,EAAQ1xC,SAAU,CACzC,IAAI60C,EAAiBnD,EAAQ79B,KAAOg+B,EAAQh+B,KAC5CghC,GAAUjhD,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAOqF,aAAcs5C,EAAQ79B,KAAOyB,EAAKlB,QAAUy9B,EAAQh+B,KAAOyB,EAAKlB,QACtGygC,GAAUnD,EAAQ74C,OAASg5C,EAAQh5C,OACnC,IAAK,MAAMsb,KAASmB,EAAKf,QAAS,CAEjCmqC,GADannD,EAAYs6C,EAAQ7xC,SAAWmU,GAAS,KAClC0gC,MAS1B,IAAI8J,EAAkB,EAClBC,EAAwB,EAC5B,IAAK,IAAIn8C,EAAc,EAAGA,EAAM,GAAIA,IAAO,CAE1C,MAAMo8C,EAAoBH,EAAWj8C,IAAQ,EAAIi8C,GAAYj8C,EAAM,GAAK,IAAMi8C,GAAYj8C,EAAM,GAAK,IAAMi8C,GAAYj8C,EAAM,GAAK,KAC9Hm8C,EAAgBC,IACnBD,EAAgBC,EAChBF,EAAUl8C,GAIZ,GAAIk8C,GAAW35C,EAAKvC,IAAK,CACxB,MAAMozC,EAAe7wC,EAAKvC,IAAMk8C,EAC1BG,EAAuBlrD,KAAKC,IAAIgiD,GAEtC,IAAK,IAAIh1B,EAAuB,EAAGA,EAAe7b,EAAKe,kBAAmB8a,IACzE,IAAK,MAAME,KAAW/b,EAAK+X,SAAS8D,GAAcnE,SACjD,IAAK,IAAIvpB,EAAY,EAAGA,EAAI2rD,EAAc3rD,IACzC0R,KAAKkuC,OAAO,IAAIgM,GAAgB7M,EAAKrxB,EAAcE,EAAS80B,EAAO,GAAG,IAKzE7wC,EAAKvC,IAAMk8C,EACXzM,EAAI9C,SAASC,UACbxqC,KAAK+rC,gBAKQqG,GAAsB/2C,GACrC,MAAM8+C,EAAiC,GACvC,IAAK,IAAIpgD,EAAwB,EAAGA,EAAgBH,EAAaK,iBAAiB1L,OAAQwL,IAAiB,CAC1G,MAAMK,EAA2BR,EAAaK,iBAAiBF,GAC/D,GAAqB,mBAAjBK,EAAStI,KACb,IAAK,IAAIkI,EAAsB,EAAGA,EAAcI,EAASF,QAAQ3L,OAAQyL,IAAe,CACvF,MAAMK,EAAiBD,EAASF,QAAQF,GACjBmT,MAAnB9S,EAAOO,UAA4C,GAAlBP,EAAOgB,SAAoBA,GAC/D8+C,EAAqBxrD,MAAMoL,GAAiB,GAAKC,IAIpD,OAAOmgD,EAAsBprD,KAAKa,SAAWuqD,EAAqB5rD,OAAU,YAG7D6rD,GAAsBj6C,GACrC,IAAK,IAAI6b,EAAuB,EAAGA,EAAe7b,EAAK+X,SAAS3pB,OAAQytB,IACvE,IAAK,MAAMxL,KAAcrQ,EAAK+X,SAAS8D,GAAcpE,YAAa,CACjE,MAAMvc,EAAmB8E,EAAK8c,kBAAkBjB,GAC1C1B,EAAiBna,EAAK+c,gBAAgBlB,GACtCliB,EAAuBkiB,GAAgB7b,EAAKe,kBAAqBtH,EAAaygD,kBAAkBtrD,KAAKa,SAAW,GAAM,aAAe,oBAAuBwiD,GAAsB/2C,GAClLhB,EAAiBT,EAAa21C,cAAcz1C,GAClD0W,EAAW+O,eAAellB,EAAOO,SAAUS,EAASif,EAAsB,GAAfna,EAAK0b,QAA8B,GAAf1b,EAAK0b,OAAa1b,EAAK0b,QAAU,GAChHrL,EAAWnW,OAASP,SAKVwgD,WAAmB1O,GAC/B/xC,YAAYwzC,EAAmBkN,GAC9BhP,QACA,IAAIrqC,EAAoBmsC,EAAIltC,KAAKe,kBAC7BE,EAAoBisC,EAAIltC,KAAKiB,kBAC7B8Z,EAAkBmyB,EAAIltC,KAAK+a,gBAC/BmyB,EAAIltC,KAAK4a,iBAAiBw/B,GACtBr5C,GAAqBmsC,EAAIltC,KAAKe,mBAAqBE,GAAqBisC,EAAIltC,KAAKiB,mBAAqB8Z,GAAmBmyB,EAAIltC,KAAK+a,iBACrInb,EAAYyG,cAEE,IAAX+zC,GACHv6C,KAAKkuC,OAAO,IAAIsM,GAAuBnN,EAAK,EAAG,IAC/CA,EAAIoN,UAAUC,oBACdN,GAAsB/M,EAAIltC,OAE1BH,KAAKkuC,OAAO,IAAIyM,GAA6BtN,IAE9CA,EAAI9C,SAASC,UACbxqC,KAAK+rC,YAIM4O,WAAqCxP,GACjDtxC,YAAYwzC,GACX9B,QACA,MAAMnrC,EAAkBrR,KAAKyB,IAAI68C,EAAIjtC,QAASitC,EAAIltC,KAAK8b,kBAAoB,GACrEE,EAAcptB,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAI68C,EAAIltC,KAAKwb,SAAW,EAAG0xB,EAAIlxB,MAC9D+sB,EAAuBn6C,KAAKyB,IAAI68C,EAAIlxB,IAAKptB,KAAKmgB,IAAIm+B,EAAIlxB,KAAOkxB,EAAItD,iBAAmB,GAAIh7C,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAI68C,EAAIltC,KAAKwb,SAAW0xB,EAAItD,iBAAkBsD,EAAInE,iBAC7JmE,EAAIjtC,SAAWA,GAAWitC,EAAIlxB,KAAOA,GAAOkxB,EAAInE,cAAgBA,IACnEmE,EAAIjtC,QAAUA,EACditC,EAAIlxB,IAAMA,EACVkxB,EAAInE,aAAeA,EACnBmE,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKoC,WAA8BvC,GAC1C/xC,YAAYwzC,EAAmBlsC,EAA0BE,EAA0BC,GAClFiqC,QAEA,MAAMprC,EAAaktC,EAAIltC,KAEvB,SAASy6C,EAA0B1iC,EAAqB2iC,GACvD,KAAO3iC,EAAS3pB,OAASssD,GAAW,CACnC,IAAIC,EAAwB5iC,EAAS3pB,OAAS,EAC1CwsD,EAAqB,EACzB,IAAK,IAAI/+B,EAAuB,EAAGA,EAAe9D,EAAS3pB,OAAS,EAAGytB,IAAgB,CACtF,IAAIg/B,EAAiB,EACrB,IAAK,MAAM7+B,KAAOjE,EAAS8D,GAAclE,KAC7B,GAAPqE,GAAU6+B,IAEXA,GAAUD,IACbD,EAAgB9+B,EAChB++B,EAAaC,GAGf9iC,EAASsG,OAAOs8B,EAAe,IAQjC,IAJAF,EAA0Bz5C,EAAejT,EAAOmK,sBAChDuiD,EAA0Bv5C,EAAenT,EAAOqK,sBAChDqiD,EAA0Bt5C,EAAapT,EAAOuK,oBAEvC0I,EAAc5S,OAASL,EAAOkK,sBAAsB+I,EAAcxS,KAAK,IAAI+oB,GAClF,KAAOrW,EAAc9S,OAASL,EAAOoK,sBAAsB+I,EAAc1S,KAAK,IAAI+oB,GAClF,KAAOpW,EAAY/S,OAASL,EAAOsK,oBAAoB8I,EAAY3S,KAAK,IAAI+oB,GAG5EvX,EAAKwb,SAAW,EAChBxb,EAAK2b,sBAAwB,EAC7B3b,EAAKyb,mBAAqB,EAC1B,MAAMq/B,EAA8B95C,EAAckP,OAAOhP,EAAcgP,OAAO/O,IAC9E,IAAK,IAAI0a,EAAuB,EAAGA,EAAei/B,EAAiB1sD,OAAQytB,IAAgB,CAC1F,MAAM5b,EAAmB66C,EAAiBj/B,GAC1C7b,EAAKwb,SAAW5sB,KAAKmgB,IAAI/O,EAAKwb,SAAUvb,EAAQ0X,KAAKvpB,QACrD4R,EAAKyb,mBAAqB7sB,KAAKmgB,IAAI/O,EAAKyb,mBAAoBxb,EAAQyX,SAAStpB,QAC7E4R,EAAK2b,sBAAwB/sB,KAAKmgB,IAAI/O,EAAK2b,sBAAuB1b,EAAQwX,YAAYrpB,QACtF4R,EAAK+X,SAAS8D,GAAgB5b,EAE/BD,EAAK+X,SAAS3pB,OAAS0sD,EAAiB1sD,OACxC4R,EAAKe,kBAAoBC,EAAc5S,OACvC4R,EAAKiB,kBAAoBC,EAAc9S,OACvC4R,EAAK+a,gBAAkB5Z,EAAY/S,OAEnC4R,EAAKwb,SAAW5sB,KAAKyB,IAAItC,EAAOgF,YAAaiN,EAAKwb,UAClDxb,EAAKyb,mBAAqB7sB,KAAKyB,IAAItC,EAAOgF,YAAaiN,EAAKyb,oBAC5Dzb,EAAK2b,sBAAwB/sB,KAAKyB,IAAItC,EAAOoF,yBAA0B6M,EAAK2b,uBAC5E,IAAK,IAAIE,EAAuB,EAAGA,EAAe7b,EAAK+X,SAAS3pB,OAAQytB,IAAgB,CACvF,MAAM5b,EAAmBD,EAAK+X,SAAS8D,GACvC,IAAK,IAAIk7B,EAAmB,EAAGA,EAAW92C,EAAQ0X,KAAKvpB,OAAQ2oD,KAC1D92C,EAAQ0X,KAAKo/B,GAAY/2C,EAAKyb,oBAAsBxb,EAAQ0X,KAAKo/B,GAAY,KAChF92C,EAAQ0X,KAAKo/B,GAAY,GAG3B,IAAK,MAAMh7B,KAAW9b,EAAQyX,UACzBqE,EAAQ1L,YAAcrQ,EAAK2b,uBAAyBI,EAAQ1L,WAAa,KAC5E0L,EAAQ1L,WAAa,GAGvB,KAAOpQ,EAAQ0X,KAAKvpB,OAAS4R,EAAKwb,UACjCvb,EAAQ0X,KAAKnpB,KAAK,GAEnB,KAAOyR,EAAQyX,SAAStpB,OAAS4R,EAAKyb,oBACrCxb,EAAQyX,SAASlpB,KAAK,IAAI2hB,GAE3B,KAAOlQ,EAAQwX,YAAYrpB,OAAS4R,EAAK2b,uBAAuB,CAC/D,MAAMtL,EAAyB,IAAI2B,EAAWk7B,EAAIltC,KAAK8c,kBAAkBjB,GAAeqxB,EAAIltC,KAAK+c,gBAAgBlB,IAC7G7b,EAAK8c,kBAAkBjB,GAC1BxL,EAAWqE,gBAAe,GAAuB,GAAM,GAC7C1U,EAAK+c,gBAAgBlB,GAC/BxL,EAAWqE,gBAAe,GAAqB,GAAO,GAEtDrE,EAAWqE,gBAAe,GAAsB,GAAO,GAExDzU,EAAQwX,YAAYjpB,KAAK6hB,GAG1BpQ,EAAQwX,YAAYrpB,OAAS4R,EAAK2b,sBAClC1b,EAAQ0X,KAAKvpB,OAAS4R,EAAKwb,SAC3Bvb,EAAQyX,SAAStpB,OAAS4R,EAAKyb,mBAGhCzb,EAAKkb,UAAYtsB,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAI2P,EAAKwb,SAAW,EAAGxb,EAAKkb,YAC9Dlb,EAAKmb,WAAavsB,KAAKyB,IAAI2P,EAAKwb,SAAWxb,EAAKkb,UAAWlb,EAAKmb,YAEhEtb,KAAKkuC,OAAO,IAAIyM,GAA6BtN,IAC7CA,EAAI9C,SAASC,UACbxqC,KAAK+rC,KAELhsC,EAAYyG,wBAIE00C,GAAoBvsB,EAAWC,GAC9C,GAAID,EAAEpgC,QAAUqgC,EAAErgC,OAAQ,OAAO,EAEjC,IAAK,IAAIkrD,EAAoB,EAAGA,EAAY9qB,EAAEpgC,OAAQkrD,IAAa,CAClE,MAAMlN,EAAgB5d,EAAE8qB,GAClBrpC,EAAgBwe,EAAE6qB,GACxB,GAAIrpC,EAAQb,OAASg9B,EAAQh9B,OAASa,EAAQZ,KAAO+8B,EAAQ/8B,KAAOY,EAAQV,QAAQnhB,QAAUg+C,EAAQ78B,QAAQnhB,QAAU6hB,EAAQT,KAAKphB,QAAUg+C,EAAQ58B,KAAKphB,OAC3J,OAAO,EAGR,IAAK,IAAIqwB,EAAqB,EAAGA,EAAa2tB,EAAQ78B,QAAQnhB,OAAQqwB,IACrE,GAAIxO,EAAQV,QAAQkP,IAAe2tB,EAAQ78B,QAAQkP,GAClD,OAAO,EAIT,IAAK,IAAI9O,EAAmB,EAAGA,EAAWy8B,EAAQ58B,KAAKphB,OAAQuhB,IAC9D,GAAIM,EAAQT,KAAKG,GAAU3U,UAAYoxC,EAAQ58B,KAAKG,GAAU3U,UAAYiV,EAAQT,KAAKG,GAAUd,MAAQu9B,EAAQ58B,KAAKG,GAAUd,MAAQoB,EAAQT,KAAKG,GAAU9b,QAAUu4C,EAAQ58B,KAAKG,GAAU9b,OAC/L,OAAO,EAKV,OAAO,WAGQi6C,GAAwB/1B,GACvC,IAAK,MAAM9X,KAAW8X,EAAU,CAC/B,MAAMijC,EAAyB,GAC/B,IAAK,IAAIh/B,EAAc,EAAGA,EAAM/b,EAAQ0X,KAAKvpB,OAAQ4tB,IAAO,CAC3D,GAAyB,GAArB/b,EAAQ0X,KAAKqE,GAAW,SAE5B,MAAMyxB,EAAsBxtC,EAAQyX,SAASzX,EAAQ0X,KAAKqE,GAAO,GAEjE,IAAIi/B,GAAgC,EACpC,IAAK,IAAIC,EAA0B,EAAGA,EAAkBF,EAAY5sD,OAAQ8sD,IAAmB,CAC9F,MAAMr5B,EAAsBm5B,EAAYE,GACxC,GAAIr5B,EAAWxR,YAAco9B,EAAWp9B,YAAcwR,EAAWzR,MAAMhiB,QAAUq/C,EAAWr9B,MAAMhiB,QAI9F2sD,GAAoBtN,EAAWr9B,MAAOyR,EAAWzR,OAAQ,CAC5D6qC,GAAuB,EACvBh7C,EAAQ0X,KAAKqE,GAAOk/B,EAAkB,EACtC,OAIGD,IACJD,EAAYxsD,KAAKi/C,GACjBxtC,EAAQ0X,KAAKqE,GAAOg/B,EAAY5sD,QAIlC,IAAK,IAAIw3B,EAAuB,EAAGA,EAAeo1B,EAAY5sD,OAAQw3B,IACrE3lB,EAAQyX,SAASkO,GAAgBo1B,EAAYp1B,GAE9C3lB,EAAQyX,SAAStpB,OAAS4sD,EAAY5sD,cAI3BmrD,WAAoBvO,GAChCtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIltC,KAAKwa,MAAQ5rB,KAAKmgB,IAAIhhB,EAAO0E,SAAU7D,KAAKyB,IAAItC,EAAO2E,SAAU9D,KAAKgb,MAAMulC,KAChFjC,EAAI/T,MAAMwZ,SAAS9+B,EAAW8E,UAC9Bu0B,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpBuP,WAAqBnQ,GACjCtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIltC,KAAKob,OAAS+zB,EAClBjC,EAAI/T,MAAMwZ,SAAS9+B,EAAW+E,WAC9Bs0B,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpBgN,WAAwB1N,GAKpCxxC,YAAYwzC,EAAmBnxB,EAAkBzL,EAAYthB,EAAe+lD,GAAoB,GAC/F3J,MAAM2J,GACNl1C,KAAK+mC,EAAOsG,EACZrtC,KAAKu7C,GAAWr/B,EAChBlc,KAAKquC,GAAQ59B,EACbzQ,KAAKyO,EAAStf,EACd6Q,KAAK+rC,KACL/rC,KAAKmsC,OAGItyC,KACTmG,KAAKu7C,GAAShrC,MAAMiO,OAAOxe,KAAKyO,EAAQ,EAAGzO,KAAKquC,IAChDruC,KAAK+mC,EAAKwD,SAASC,UAGV3wC,KACTmG,KAAKu7C,GAAShrC,MAAMiO,OAAOxe,KAAKyO,EAAQ,GACxCzO,KAAK+mC,EAAKwD,SAASC,iBAIRoL,WAAyBxH,GACrCv0C,YAAYwzC,EAA0B58B,EAAY+qC,EAAoBC,GACrElQ,MAAM8B,EAAK58B,GAEX+qC,GAAcx7C,KAAKsuC,GACnBmN,GAAYz7C,KAAKsuC,GACjB,IAIIhgD,EAJA4pD,GAAoB,EACpBG,EAAqBr4C,KAAK0uC,GAAS,GAAG16C,OACtCokD,EAAuBp4C,KAAK0uC,GAAS,GAAGvzC,SACxCugD,GAAuB,EAE3B,IAAKptD,EAAI,EAAGA,EAAI0R,KAAK0uC,GAASngD,OAAQD,IAAK,CAC1C,MAAMopD,EAAkB13C,KAAK0uC,GAASpgD,GACtC,GAAIopD,EAAO1oC,KAAOwsC,EACjBnD,EAAaX,EAAO1jD,OACpBokD,EAAeV,EAAOv8C,aAChB,CAAA,KAAIu8C,EAAO1oC,MAAQysC,GAWzB,MALA,GALI/D,EAAO1oC,KAAOwsC,IAAetD,GAChCl4C,KAAK2uC,GAAShgD,KAAKogB,EAAYqpC,EAAcoD,EAAYnD,IAE1Dr4C,KAAK2uC,GAAShgD,KAAKogB,EAAY2oC,EAAOv8C,SAAUu8C,EAAO1oC,KAAM0oC,EAAO1jD,SACpEkkD,GAAW,EACPR,EAAO1oC,MAAQysC,EAAU,CAC5BC,GAAc,EACd,QAQCA,GAAa17C,KAAK2uC,GAAShgD,KAAKogB,EAAY/O,KAAK0uC,GAASpgD,GAAG6M,SAAUsgD,EAAUz7C,KAAK0uC,GAASpgD,GAAG0F,SAEtGgM,KAAK23C,YAIMjC,WAA2B1J,GACvCnyC,YAAYwzC,EAAmBnxB,EAAkB3M,EAAeC,EAAamsC,EAAwB,KAAMC,GAAiB,GAC3HrQ,QACA,IAAIj9C,EAAY,EAChB,KAAOA,EAAI4tB,EAAQ3L,MAAMhiB,QAAQ,CAChC,MAAMkiB,EAAayL,EAAQ3L,MAAMjiB,GACjC,GAAImiB,GAAQkrC,GAAwB,MAAZA,EACvBrtD,SACM,GAAImiB,EAAKjB,KAAOD,EACtBjhB,SACM,GAAImiB,EAAKlB,OAASC,EAAK,CAE7B,IAAK69B,EAAIltC,KAAK+c,gBAAgBmwB,EAAIjtC,SACjC,MAEA9R,SAEK,GAAImiB,EAAKlB,MAAQA,GAASkB,EAAKjB,IAAMA,EAAK,CAChD,IAAK69B,EAAIltC,KAAK+c,gBAAgBmwB,EAAIjtC,UAAYw7C,GAAsB,MAAZD,GAAoBlrC,EAAKf,QAAQ,IAAMisC,EAASjsC,QAAQ,GAAK,CACpH,MAAMmsC,EAAaprC,EAAKC,QACxB1Q,KAAKkuC,OAAO,IAAI0H,GAAiBvI,EAAK58B,EAAMA,EAAKlB,MAAOA,IACxDjhB,IACA0R,KAAKkuC,OAAO,IAAI6K,GAAgB1L,EAAKnxB,EAAS2/B,EAAMvtD,GAAG,IACvD0R,KAAKkuC,OAAO,IAAI0H,GAAiBvI,EAAKwO,EAAMrsC,EAAKqsC,EAAKrsC,MAEvDlhB,SACUmiB,EAAKlB,MAAQA,KAClB89B,EAAIltC,KAAK+c,gBAAgBmwB,EAAIjtC,UAAYw7C,GAAsB,MAAZD,GAAoBlrC,EAAKf,QAAQ,IAAMisC,EAASjsC,QAAQ,KAC/G1P,KAAKkuC,OAAO,IAAI0H,GAAiBvI,EAAK58B,EAAMA,EAAKlB,MAAOA,IACzDjhB,KACUmiB,EAAKjB,IAAMA,KAChB69B,EAAIltC,KAAK+c,gBAAgBmwB,EAAIjtC,UAAYw7C,GAAsB,MAAZD,GAAoBlrC,EAAKf,QAAQ,IAAMisC,EAASjsC,QAAQ,KAC/G1P,KAAKkuC,OAAO,IAAI0H,GAAiBvI,EAAK58B,EAAMjB,EAAKiB,EAAKjB,MACvDlhB,MAEK++C,EAAIltC,KAAK+c,gBAAgBmwB,EAAIjtC,UAAYw7C,GAAsB,MAAZD,GAAoBlrC,EAAKf,QAAQ,IAAMisC,EAASjsC,QAAQ,GAC/G1P,KAAKkuC,OAAO,IAAI6K,GAAgB1L,EAAKnxB,EAASzL,EAAMniB,GAAG,IAEvDA,MAML,MAAMwtD,WAAoC9P,GACzCnyC,YAAYwzC,EAAmBnxB,GAC9BqvB,QACA,IAAIj9C,EAAY,EAChB,KAAOA,EAAI4tB,EAAQ3L,MAAMhiB,QAAQ,CAChC,MAAMkiB,EAAayL,EAAQ3L,MAAMjiB,GACjC,GAAImiB,EAAKlB,MAAQ89B,EAAIoN,UAAUsB,uBAAyB1O,EAAIoN,UAAUsB,sBAAwBtrC,EAAKjB,IAAK,CACvG,MAAMqsC,EAAaprC,EAAKC,QACxB1Q,KAAKkuC,OAAO,IAAI0H,GAAiBvI,EAAK58B,EAAMA,EAAKlB,MAAO89B,EAAIoN,UAAUsB,wBACtEztD,IACA0R,KAAKkuC,OAAO,IAAI6K,GAAgB1L,EAAKnxB,EAAS2/B,EAAMvtD,GAAG,IACvD0R,KAAKkuC,OAAO,IAAI0H,GAAiBvI,EAAKwO,EAAMxO,EAAIoN,UAAUsB,sBAAuBF,EAAKrsC,WAEhF,GAAIiB,EAAKlB,MAAQ89B,EAAIoN,UAAUuB,qBAAuB3O,EAAIoN,UAAUuB,oBAAsBvrC,EAAKjB,IAAK,CAC1G,MAAMqsC,EAAaprC,EAAKC,QACxB1Q,KAAKkuC,OAAO,IAAI0H,GAAiBvI,EAAK58B,EAAMA,EAAKlB,MAAO89B,EAAIoN,UAAUuB,sBACtE1tD,IACA0R,KAAKkuC,OAAO,IAAI6K,GAAgB1L,EAAKnxB,EAAS2/B,EAAMvtD,GAAG,IACvD0R,KAAKkuC,OAAO,IAAI0H,GAAiBvI,EAAKwO,EAAMxO,EAAIoN,UAAUuB,oBAAqBH,EAAKrsC,MACpFlhB,SAEAA,MAMJ,MAAM2tD,WAA4B5Q,GAWjCxxC,YAAYwzC,EAAmBjtC,EAAiBqQ,EAAYyrC,EAAiBC,GAAuB,EAAOxkC,GAAkB,GAC5H4zB,OAAM,GACNvrC,KAAK+mC,EAAOsG,EACZrtC,KAAKquC,GAAQ59B,EACbzQ,KAAK0uC,GAAWj+B,EAAKd,KACrB3P,KAAK2uC,GAAW,GAChB3uC,KAAK4uC,GAAcn+B,EAAKf,QACxB1P,KAAK6uC,GAAc,GAKnB,MAAMxzC,EAAmBgyC,EAAIltC,KAAK8c,kBAAkB7c,GACpD,GAAI/E,GAAWgyC,EAAIltC,KAAK8c,kBAAkBowB,EAAIjtC,SAAU,OAGxD,GAAIitC,EAAIltC,KAAK+c,gBAAgBmwB,EAAIjtC,SAAU,OAE3C,MAAMqb,EAAoBpgB,EAAUnN,EAAOyK,UAAY,EAAI00C,EAAIltC,KAAKsb,SAEpE,IAAK,IAAIntB,EAAY,EAAGA,EAAI0R,KAAK4uC,GAAYrgD,OAAQD,IAAK,CACzD,IAAIghB,EAAgBtP,KAAK4uC,GAAYtgD,GACrC,GAAIqpB,IAAWtc,EAEbiU,EADG4sC,EACKntD,KAAKyB,IAAIirB,EAAUnM,EAAQ+9B,EAAIltC,KAAKsX,KAEpC1oB,KAAKmgB,IAAI,EAAGI,EAAQ+9B,EAAIltC,KAAKsX,UAGtC,GAAIykC,EACH,IAAK,IAAIzvC,EAAY6C,EAAQ,EAAG7C,GAAKgP,EAAUhP,IAAK,CAGlD6C,EAAQ7C,EACR,WAIF,IAAK,IAAIA,EAAY6C,EAAQ,EAAG7C,GAAK,EAAGA,IAAK,CAG3C6C,EAAQ7C,EACR,MAMJ,IAAI2vC,GAAsB,EAC1B,IAAK,IAAI3vC,EAAY,EAAGA,EAAIzM,KAAK6uC,GAAYtgD,OAAQke,IACpD,GAAIzM,KAAK6uC,GAAYpiC,IAAM6C,EAAO,CACjC8sC,GAAa,EACb,MAGGA,GAAYp8C,KAAK6uC,GAAYlgD,KAAK2gB,GAGxC,IAAI9e,EAAc,EACd0e,EAAcuM,EAElB,IAAK,IAAIntB,EAAY,EAAGA,EAAI0R,KAAK6uC,GAAYtgD,OAAQD,IAAK,CACzD,MAAM0iD,EAAehxC,KAAK6uC,GAAY,GAAK7uC,KAAK6uC,GAAYvgD,GACxDkC,EAAMwgD,IAAMxgD,EAAMwgD,GAClB9hC,EAAM8hC,EAAOv1B,IAAUvM,EAAM8hC,EAAOv1B,GAGzC,IAAK,MAAMi8B,KAAU13C,KAAK0uC,GAAU,CACnC,IAAIvzC,EAAmBu8C,EAAOv8C,SAAW6E,KAAK4uC,GAAY,GAI1D,GAFIzzC,EAAW3K,IAAK2K,EAAW3K,GAC3B2K,EAAW+T,IAAK/T,EAAW+T,GAC3ByI,IAAWtc,EAEbF,EADG+gD,EACQntD,KAAKyB,IAAI0e,EAAK/T,EAAWkyC,EAAIltC,KAAKsX,KAElC1oB,KAAKmgB,IAAI1e,EAAK2K,EAAWkyC,EAAIltC,KAAKsX,UAG9C,GAAIykC,EACH,IAAK,IAAI5tD,EAAY6M,EAAW,EAAG7M,GAAK4gB,EAAK5gB,IAAK,CAGhD6M,EAAW7M,EACX,WAIF,IAAK,IAAIA,EAAY6M,EAAW,EAAG7M,GAAKkC,EAAKlC,IAAK,CAGhD6M,EAAW7M,EACX,MAKJ6M,GAAY6E,KAAK6uC,GAAY,GAC7B7uC,KAAK2uC,GAAShgD,KAAKogB,EAAY5T,EAAUu8C,EAAO1oC,KAAM0oC,EAAO1jD,SAG9D,GAAiC,GAA7BgM,KAAK2uC,GAAS,GAAGxzC,SAAe,MAAM,IAAIpL,MAAM,4BAEpD,IAAK,IAAIzB,EAAY,EAAGA,EAAI0R,KAAK2uC,GAASpgD,OAAS,GAC9CyR,KAAK2uC,GAASrgD,EAAI,GAAG6M,UAAY6E,KAAK2uC,GAASrgD,GAAG6M,UACrD6E,KAAK2uC,GAASrgD,GAAG6M,UAAY6E,KAAK2uC,GAASrgD,EAAI,GAAG6M,UAClD6E,KAAK2uC,GAASrgD,EAAI,GAAG0F,QAAUgM,KAAK2uC,GAASrgD,GAAG0F,QAChDgM,KAAK2uC,GAASrgD,GAAG0F,QAAUgM,KAAK2uC,GAASrgD,EAAI,GAAG0F,OAChDgM,KAAK2uC,GAASnwB,OAAOlwB,EAAG,GAExBA,IAIF0R,KAAK0rC,KACL1rC,KAAK+rC,KAGIlyC,KACTmG,KAAKquC,GAAM1+B,KAAO3P,KAAK2uC,GACvB3uC,KAAKquC,GAAM3+B,QAAU1P,KAAK6uC,GAC1B7uC,KAAK+mC,EAAKwD,SAASC,UAGV3wC,KACTmG,KAAKquC,GAAM1+B,KAAO3P,KAAK0uC,GACvB1uC,KAAKquC,GAAM3+B,QAAU1P,KAAK4uC,GAC1B5uC,KAAK+mC,EAAKwD,SAASC,iBAIR0P,WAAwBlO,GACpCnyC,YAAYwzC,EAAmBjtC,EAAiB8b,EAAkBggC,EAAiBC,GAAuB,EAAOxkC,GAAkB,GAClI4zB,QACI8B,EAAIoN,UAAU4B,wBACjBr8C,KAAKkuC,OAAO,IAAI4N,GAA4BzO,EAAKnxB,IAElD,IAAK,MAAMzL,KAAQyL,EAAQ3L,MACtB88B,EAAIoN,UAAU4B,yBAA2B5rC,EAAKjB,KAAO69B,EAAIoN,UAAUsB,uBAAyBtrC,EAAKlB,OAAS89B,EAAIoN,UAAUuB,sBAG5Hh8C,KAAKkuC,OAAO,IAAI+N,GAAoB5O,EAAKjtC,EAASqQ,EAAMyrC,EAAQC,EAAaxkC,WAKnE2kC,WAA6BnR,GACzCtxC,YAAYwzC,EAAmBkP,EAAeC,EAAeC,EAAeC,GAC3EnR,QACA8B,EAAIoN,UAAUkC,eAAiBJ,EAC/BlP,EAAIoN,UAAUmC,eAAiBJ,EAC/BnP,EAAIoN,UAAUoC,eAAiBJ,EAC/BpP,EAAIoN,UAAUqC,eAAiBJ,EAC/BrP,EAAI9C,SAASC,UACbxqC,KAAK+rC,YAIMyO,WAA+BnP,GAS3CxxC,YAAYwzC,EAAmB6E,EAAkB6K,GAChDxR,OAAM,GACNvrC,KAAK+mC,EAAOsG,EACZrtC,KAAKsuC,GAAYjB,EAAIoN,UAAUsB,sBAC/B/7C,KAAKuuC,GAAUlB,EAAIoN,UAAUuB,oBAC7Bh8C,KAAKg9C,GAAa3P,EAAIoN,UAAU4B,uBAChCr8C,KAAKwuC,GAAY0D,EACjBlyC,KAAKyuC,GAAUsO,EACf/8C,KAAKi9C,GAAa/K,EAAW6K,EAC7B/8C,KAAK0rC,KACL1rC,KAAK+rC,KAGIlyC,KACTmG,KAAK+mC,EAAK0T,UAAUsB,sBAAwB/7C,KAAKwuC,GACjDxuC,KAAK+mC,EAAK0T,UAAUuB,oBAAsBh8C,KAAKyuC,GAC/CzuC,KAAK+mC,EAAK0T,UAAU4B,uBAAyBr8C,KAAKi9C,GAClDj9C,KAAK+mC,EAAKwD,SAASC,UAGV3wC,KACTmG,KAAK+mC,EAAK0T,UAAUsB,sBAAwB/7C,KAAKsuC,GACjDtuC,KAAK+mC,EAAK0T,UAAUuB,oBAAsBh8C,KAAKuuC,GAC/CvuC,KAAK+mC,EAAK0T,UAAU4B,uBAAyBr8C,KAAKg9C,GAClDh9C,KAAK+mC,EAAKwD,SAASC,iBAIR0S,WAAgClR,GAC5CnyC,YAAYwzC,EAAmBjtC,EAAiB8b,EAAkBihC,EAAeC,GAGhF,GAFA7R,QAEa,GAAT4R,GAA2B,GAAbC,EAAgB,OAE9B/P,EAAIoN,UAAU4B,wBACjBr8C,KAAKkuC,OAAO,IAAI4N,GAA4BzO,EAAKnxB,IAGlD,MAAMi2B,EAAmB9E,EAAIoN,UAAUsB,sBACjCsB,EAAiBhQ,EAAIoN,UAAUuB,oBAC/B9J,EAAmBnjD,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAI68C,EAAIltC,KAAKub,YAAcxtB,EAAOqF,aAAc4+C,EAAWgL,IAC/FJ,EAAiBhuD,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAI68C,EAAIltC,KAAKub,YAAcxtB,EAAOqF,aAAc8pD,EAASF,IAC7FjL,GAAY6K,EAEf/8C,KAAKkuC,OAAO,IAAIwH,GAAmBrI,EAAKnxB,EAASi2B,EAAUkL,EAAQ,MAAM,IAC/DF,EAAQ,GAElBn9C,KAAKkuC,OAAO,IAAIwH,GAAmBrI,EAAKnxB,EAASg2B,EAAUnjD,KAAKyB,IAAI2hD,EAAU4K,GAAS,MAAM,IACzF5K,GAAYgL,GAEfn9C,KAAKkuC,OAAO,IAAIwH,GAAmBrI,EAAKnxB,EAASi2B,GAAWgL,EAAO,MAAM,MAI1En9C,KAAKkuC,OAAO,IAAIwH,GAAmBrI,EAAKnxB,EAASntB,KAAKmgB,IAAImuC,EAAQnL,GAAW6K,EAAQ,MAAM,IACvFM,EAAShQ,EAAIltC,KAAKub,YAAcxtB,EAAOqF,aAAe4pD,GAEzDn9C,KAAKkuC,OAAO,IAAIwH,GAAmBrI,EAAKnxB,EAASmxB,EAAIltC,KAAKub,YAAcxtB,EAAOqF,aAAe4pD,EAAOE,EAAQ,MAAM,KAIrHr9C,KAAKkuC,OAAO,IAAIsM,GAAuBnN,EAAK6E,EAAU6K,IACtD,MAAMO,EAAe,GACrB,IAAI3H,EAA6B,EAC7BrnD,EAAY,EAChB,KAAOA,EAAI4tB,EAAQ3L,MAAMhiB,QAAQ,CAChC,MAAMkiB,EAAayL,EAAQ3L,MAAMjiB,GAC7BmiB,EAAKjB,KAAO2iC,GAAY1hC,EAAKlB,OAAS8tC,GACzC/uD,IACImiB,EAAKjB,KAAO0iC,IAAUyD,EAAqBrnD,KAE/CgvD,EAAa3uD,KAAK8hB,EAAKC,SACvB1Q,KAAKkuC,OAAO,IAAI6K,GAAgB1L,EAAKnxB,EAASzL,EAAMniB,GAAG,KAIzD,IAAK,MAAMmiB,KAAQ6sC,EAAc,CAChC7sC,EAAKlB,OAAS4tC,EACd1sC,EAAKjB,KAAO2tC,EAEZ,IAAK,IAAI7uD,EAAY,EAAGA,EAAIS,KAAKC,IAAIouD,GAAY9uD,IAChD0R,KAAKkuC,OAAO,IAAI+N,GAAoB5O,EAAKjtC,EAASqQ,EAAM2sC,EAAY,IAGrEp9C,KAAKkuC,OAAO,IAAI6K,GAAgB1L,EAAKnxB,EAASzL,EAAMklC,KAAsB,YAKhE4H,WAA8C3R,GAC1D/xC,YAAYwzC,EAAmBmQ,EAAkBC,EAAkBC,EAAsBC,GACxFpS,QACA,IAAK,IAAInrC,EAAkBs9C,EAAct9C,EAAUs9C,EAAeC,EAAev9C,IAAW,CAC3F,MAAMw9C,EAAuC,GAE7C,IAAK,IAAIzhC,EAAcqhC,EAAUrhC,EAAMqhC,EAAWC,EAAUthC,IAAO,CAClE,MAAM0hC,EAA8BxQ,EAAIltC,KAAK+X,SAAS9X,GAAS0X,KAAKqE,GACpE,GAA2B,GAAvB0hC,EAAJ,CAEA,GAAqD1wC,MAAjDywC,EAAiBx/B,OAAOy/B,IAAoC,CAC/D,IAAIC,GAAkB,EACtB,IAAK,IAAIC,EAAe,EAAGA,EAAO1Q,EAAIltC,KAAKwb,SAAUoiC,IACpD,IAAIA,EAAOP,GAAYO,GAAQP,EAAWC,IACrCpQ,EAAIltC,KAAK+X,SAAS9X,GAAS0X,KAAKimC,IAASF,EAAqB,CACjEC,GAAkB,EAClB,MAIH,GAAIA,EAAiB,CAEpB,MAAME,EAAyB3Q,EAAIltC,KAAK6lB,WAAW5lB,EAAS+b,GAC5Dnc,KAAKkuC,OAAO,IAAIyC,GAAqBtD,EAAK,EAAGlxB,EAAK/b,EAAS,EAAG,IAC9DJ,KAAKkuC,OAAO,IAAIuI,GAA0BpJ,EAAKjtC,EAAS+b,IACxD,MAAM6F,EAA6BqrB,EAAIltC,KAAK6lB,WAAW5lB,EAAS+b,GAChE,GAAkB,MAAd6F,EAAoB,MAAM,IAAIjyB,MAClCiQ,KAAKkuC,OAAO,IAAIoH,GAAYjI,EAAKrrB,EAAYg8B,EAAcztC,MAAO,EAAGriB,EAAOqF,aAAe85C,EAAIltC,KAAKub,YAAaxtB,EAAOqF,aAAe85C,EAAIltC,KAAKub,cAChJ1b,KAAKkuC,OAAO,IAAI6H,GAAwB1I,EAAK2Q,EAAcxtC,WAAYwR,IACvE47B,EAAiBx/B,OAAOy/B,IAAwBxQ,EAAIltC,KAAK+X,SAAS9X,GAAS0X,KAAKqE,QAEhFyhC,EAAiBx/B,OAAOy/B,IAAwBA,EAIlD79C,KAAKkuC,OAAO,IAAIyC,GAAqBtD,EAAKuQ,EAAiBx/B,OAAOy/B,IAAuB1hC,EAAK/b,EAAS,EAAG,cAMjG69C,WAA2B9S,GACvCtxC,YAAYwzC,EAAmBnxB,EAAkBgiC,GAChD3S,QACI8B,EAAIoN,UAAU4B,wBACjB,IAAIP,GAA4BzO,EAAKnxB,GAEtC,MAAMT,EAAmB4xB,EAAIltC,KAAKsb,SAClC,IAAK,MAAMhL,KAAQyL,EAAQ3L,MAAO,CACjC,GAAI88B,EAAIoN,UAAU4B,yBAA2B5rC,EAAKjB,KAAO69B,EAAIoN,UAAUsB,uBAAyBtrC,EAAKlB,OAAS89B,EAAIoN,UAAUuB,qBAC3H,SAED,MAAMmC,EAAuB,GACvBC,EAAqB,GAC3B,IAAK,IAAI9vD,EAAY,EAAGA,EAAImiB,EAAKf,QAAQnhB,OAAQD,IAAK,CACrD,MAAMghB,EAAgBmB,EAAKf,QAAQphB,GAC7B+vD,EAA2BH,EAAS5uC,EAAQ,KAAOA,EAASA,EAAQ,KAC7B,GAAzC6uC,EAAWxpC,QAAQ0pC,IACtBF,EAAWxvD,KAAK0vD,GAIlB,IAAI7tD,EAAc,EACd0e,EAAcuM,EAElB,IAAK,IAAIntB,EAAY,EAAGA,EAAI6vD,EAAW5vD,OAAQD,IAAK,CACnD,MAAM0iD,EAAemN,EAAW,GAAKA,EAAW7vD,GAC5CkC,EAAMwgD,IAAMxgD,EAAMwgD,GAClB9hC,EAAM8hC,EAAOv1B,IAAUvM,EAAM8hC,EAAOv1B,GAGzC,IAAK,MAAMi8B,KAAUjnC,EAAKd,KAAM,CAC/B,IAAIxU,EAAmBu8C,EAAOv8C,SAAWsV,EAAKf,QAAQ,GAClDvU,EAAW3K,IAAK2K,EAAW3K,GAC3B2K,EAAW+T,IAAK/T,EAAW+T,GAC/B,MAAMovC,EAA8BJ,EAAS/iD,EAAW,KAAOA,EAAYA,EAAW,IACtFijD,EAAQzvD,KAAKogB,EAAYuvC,EAAsBH,EAAW,GAAIzG,EAAO1oC,KAAM0oC,EAAO1jD,SAGnF,GAA2B,GAAvBoqD,EAAQ,GAAGjjD,SAAe,MAAM,IAAIpL,MAAM,4BAE9C,IAAK,IAAIzB,EAAY,EAAGA,EAAI8vD,EAAQ7vD,OAAS,GACxC6vD,EAAQ9vD,EAAI,GAAG6M,UAAYijD,EAAQ9vD,GAAG6M,UACzCijD,EAAQ9vD,GAAG6M,UAAYijD,EAAQ9vD,EAAI,GAAG6M,UACtCijD,EAAQ9vD,EAAI,GAAG0F,QAAUoqD,EAAQ9vD,GAAG0F,QACpCoqD,EAAQ9vD,GAAG0F,QAAUoqD,EAAQ9vD,EAAI,GAAG0F,OACpCoqD,EAAQ5/B,OAAOlwB,EAAG,GAElBA,IAIFmiB,EAAKf,QAAUyuC,EACf1tC,EAAKd,KAAOyuC,EAEbp+C,KAAK+rC,KACLsB,EAAI9C,SAASC,iBAIF+T,WAAqBpT,GACjCtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAAwBn7C,OAASs7C,EAGhFjC,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpByS,WAAwBrT,GACpCtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QACI+D,EAAS/gD,OAAS,KACrB+gD,EAAWA,EAAS5vB,UAAU,EAAG,KAGlC2tB,EAAIltC,KAAK4b,MAAQuzB,EACjBvyC,SAASgf,MAAQuzB,EAAW,MAAQ11C,EAAac,mBACjD2yC,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpB0S,WAA0BtT,GACtCtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QACI+D,EAAS/gD,OAAS,KACrB+gD,EAAWA,EAAS5vB,UAAU,EAAG,KAGlC2tB,EAAIltC,KAAK+X,SAASm1B,EAAIqR,mBAAmB5sD,KAAOw9C,EAChDjC,EAAIsR,oBAAqB,EAEzBtR,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpB6S,WAAkBzT,GAC9BtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAAwBv8B,IAAM08B,EAC7EjC,EAAI/T,MAAMwZ,SAAS9+B,EAAWkF,OAAQm0B,EAAIjtC,QAASitC,EAAI8B,wBACvD9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpB8S,WAAuB1T,GACnCtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAAwBt8B,SAAWy8B,EAClFjC,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpB+S,WAAqB3T,GACjCtxC,YAAYwzC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAAwBj8B,OAASo8B,EAChFjC,EAAI/T,MAAMwZ,SAAS9+B,EAAW2F,UAAW0zB,EAAIjtC,QAASitC,EAAI8B,wBAC1D9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAUtvC,KAAK+rC,YAIpBgT,WAAyB1T,GAKrCxxC,YAAYwzC,EAAmB58B,EAAYuuC,EAAkBC,EAAoBC,EAAsBC,GACtG5T,OAAM,GACNvrC,KAAK+mC,EAAOsG,EACZrtC,KAAKquC,GAAQ59B,EACbzQ,KAAK0uC,GAAWj+B,EAAKd,KACrB3P,KAAK2uC,GAAW,GAEhB,IAAIyQ,GAAoB,EAExB,IAAK,MAAMjvC,KAAOM,EAAKd,KAClBQ,EAAInB,KAAOgwC,EACVG,EACHn/C,KAAK2uC,GAAShgD,KAAKogB,EAAYoB,EAAIhV,SAAUgV,EAAInB,KAAMiwC,IAEvDj/C,KAAK2uC,GAAShgD,KAAKwhB,GAEVA,EAAInB,MAAQgwC,GACtBh/C,KAAK2uC,GAAShgD,KAAKogB,EAAYmwC,EAAcF,EAAUC,IACvDG,GAAW,IAENA,IACJp/C,KAAK2uC,GAAShgD,KAAKogB,EAAYmwC,EAAcF,EAAUC,IACvDG,GAAW,GAERD,EACHn/C,KAAK2uC,GAAShgD,KAAKogB,EAAYoB,EAAIhV,SAAUgV,EAAInB,KAAMiwC,IAEvDj/C,KAAK2uC,GAAShgD,KAAKwhB,IAKtB,IAAK,IAAI7hB,EAAY,EAAGA,EAAI0R,KAAK2uC,GAASpgD,OAAS,GAC9CyR,KAAK2uC,GAASrgD,EAAI,GAAG6M,UAAY6E,KAAK2uC,GAASrgD,GAAG6M,UACrD6E,KAAK2uC,GAASrgD,GAAG6M,UAAY6E,KAAK2uC,GAASrgD,EAAI,GAAG6M,UAClD6E,KAAK2uC,GAASrgD,EAAI,GAAG0F,QAAUgM,KAAK2uC,GAASrgD,GAAG0F,QAChDgM,KAAK2uC,GAASrgD,GAAG0F,QAAUgM,KAAK2uC,GAASrgD,EAAI,GAAG0F,OAChDgM,KAAK2uC,GAASnwB,OAAOlwB,EAAG,GAExBA,IAIF0R,KAAK0rC,KACL1rC,KAAK+rC,KAGIlyC,KACTmG,KAAKquC,GAAM1+B,KAAO3P,KAAK2uC,GACvB3uC,KAAK+mC,EAAKwD,SAASC,UAGV3wC,KACTmG,KAAKquC,GAAM1+B,KAAO3P,KAAK0uC,GACvB1uC,KAAK+mC,EAAKwD,SAASC,iBAIR6U,WAAuBlU,GACnCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAC1E3+B,EAAW6B,UAAYi9B,IAC1B9+B,EAAW6B,SAAWi9B,EACtB9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,aAKKuT,WAAwBnU,GACpCtxC,YAAYwzC,EAAmBiC,GAC9B/D,QACA,MAAM/6B,EAAyB68B,EAAIltC,KAAK+X,SAASm1B,EAAIjtC,SAASwX,YAAYy1B,EAAI8B,wBAC1E3+B,EAAW8B,WAAag9B,IAC3B9+B,EAAW8B,UAAYg9B,EACvB9+B,EAAWnW,OAASmW,EAAWvb,KAC/Bo4C,EAAI9C,SAASC,UACbxqC,KAAK+rC,OC1jGR,MAAMwT,OAAEA,GAAM71C,IAAEA,GAAG81C,KAAEA,GAAIC,GAAEA,GAAEC,MAAEA,GAAKC,GAAEA,GAAEC,OAAEA,GAAMC,OAAEA,IAAWnhD,QAEhDohD,GA2DZjmD,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EA1DH/mC,KAAA+/C,GAAgCL,GAAM,CAAEphD,MAAO,gCAAiCrJ,KAAM,SAAU+qD,KAAM,MACtGhgD,KAAAigD,GAAkCP,GAAM,CAAEphD,MAAO,gCAAiCrJ,KAAM,SAAU+qD,KAAM,MACxGhgD,KAAAkgD,GAA+CN,GAAO,CAAEthD,MAAO,gBAC/EuhD,GAAO,CAAEhuD,MAAO,UAAY,gCAC5BguD,GAAO,CAAEhuD,MAAO,WAAa,iCAC7BguD,GAAO,CAAEhuD,MAAO,YAAc,gCAEdmO,KAAAmgD,GAAiCT,GAAM,CAAEphD,MAAO,gCAAiCrJ,KAAM,SAAU+qD,KAAM,MACvGhgD,KAAAogD,GAAqCR,GAAO,CAAEthD,MAAO,gBACrEuhD,GAAO,CAAEhuD,MAAO,OAAS,gCACzBguD,GAAO,CAAEhuD,MAAO,aAAe,uCAGfmO,KAAAqgD,GAAmCd,GAAO,CAAEhX,MAAO,iBACnDvoC,KAAAsgD,GAAiCf,GAAO,CAAEhX,MAAO,aAAcjqC,MAAO,cAAgB,QAEvF0B,KAAAsoC,UAA4B5+B,GAAI,CAAE6+B,MAAO,qBAAsBjqC,MAAO,iBACrFmhD,GAAG,iBACH/1C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,sBACZ,8BACAqhD,KACAH,GAAK,CAAElhD,MAAO,uCAAyC,uBACvDqhD,KACAH,GAAK,CAAElhD,MAAO,uCAAyC,8DACvDqhD,MAED3/C,KAAK+/C,IAENr2C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,6CACZ,iBACAqhD,KACAH,GAAK,CAAElhD,MAAO,8BAA8ByB,EAAYyH,kBAAoB,qCAG7ExH,KAAKmgD,IAENz2C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,gBAAkB0B,KAAKogD,KAE/D12C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,sBACZ,iBACAqhD,KACAH,GAAK,CAAElhD,MAAO,uCAAyC,0CAExD0B,KAAKigD,IAENv2C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,gBAAkB0B,KAAKkgD,KAE/Dx2C,GAAI,CAAEpL,MAAO,+EACZ0B,KAAKsgD,IAENtgD,KAAKqgD,IAmDErgD,KAAAugD,GAAS,KAChBvgD,KAAK+mC,EAAKqF,QAGJpsC,KAAAwgD,QAAU,KAChBxgD,KAAKsgD,GAAYG,oBAAoB,QAASzgD,KAAK0gD,IACnD1gD,KAAKqgD,GAAcI,oBAAoB,QAASzgD,KAAKugD,IACrDvgD,KAAK+/C,GAAYU,oBAAoB,WAAYX,GAAmBa,IACpE3gD,KAAK+/C,GAAYU,oBAAoB,OAAQX,GAAmBc,IAChE5gD,KAAKigD,GAAcQ,oBAAoB,WAAYX,GAAmBa,IACtE3gD,KAAKigD,GAAcQ,oBAAoB,OAAQX,GAAmBc,IAClE5gD,KAAKmgD,GAAaM,oBAAoB,WAAYX,GAAmBa,IACrE3gD,KAAKmgD,GAAaM,oBAAoB,OAAQX,GAAmBc,IACjE5gD,KAAKsoC,UAAUmY,oBAAoB,UAAWzgD,KAAK6gD,KAG5C7gD,KAAA6gD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQ7iD,SAAwC,IAAjBgrC,EAAM8X,SACxD/gD,KAAK0gD,MAsBC1gD,KAAA0gD,GAAe,KACtB7/B,OAAOC,aAAakgC,QAAQ,oBAAqBhhD,KAAKkgD,GAA0BruD,OAChFgvB,OAAOC,aAAakgC,QAAQ,mBAAoBhhD,KAAKogD,GAAgBvuD,OACrE,MAAMovD,EAAqB,IAAIrV,GAC/BqV,EAAM/S,OAAO,IAAI2C,GAAU7wC,KAAK+mC,EAAM+Y,GAAmBoB,GAAUlhD,KAAK+/C,MACxEkB,EAAM/S,OAAO,IAAI4C,GAAe9wC,KAAK+mC,EAAM+Y,GAAmBoB,GAAUlhD,KAAKmgD,IAA6C,aAA9BngD,KAAKogD,GAAgBvuD,QACjHovD,EAAM/S,OAAO,IAAIsL,GAAkBx5C,KAAK+mC,EAAM+Y,GAAmBoB,GAAUlhD,KAAKigD,IAAgBjgD,KAAKkgD,GAA0BruD,QAC/HmO,KAAK+mC,EAAKoa,OAAS,KACnBnhD,KAAK+mC,EAAKqa,OAAOH,GAAO,IA9FxBjhD,KAAK+/C,GAAYluD,MAAQmO,KAAK+mC,EAAK5mC,KAAKsX,IAAM,GAC9CzX,KAAK+/C,GAAYvvD,IAAMtC,EAAOiF,OAAS,GACvC6M,KAAK+/C,GAAY7wC,IAAMhhB,EAAOkF,OAAS,GAEvC4M,KAAKmgD,GAAatuD,MAAQmO,KAAK+mC,EAAK5mC,KAAKwb,SAAW,GACpD3b,KAAKmgD,GAAa3vD,IAAMtC,EAAO+E,YAAc,GAC7C+M,KAAKmgD,GAAajxC,IAAMhhB,EAAOgF,YAAc,GAE7C8M,KAAKigD,GAAcpuD,MAAQmO,KAAK+mC,EAAK5mC,KAAKub,YAAc,GACxD1b,KAAKigD,GAAczvD,IAAMtC,EAAO6E,eAAiB,GACjDiN,KAAKigD,GAAc/wC,IAAMhhB,EAAO8E,eAAiB,GAEjD,MAAMquD,EAA8BxgC,OAAOC,aAAaC,QAAQ,oBAC5C,MAAhBsgC,IACHrhD,KAAKogD,GAAgBvuD,MAAQwvD,GAG9B,MAAMC,EAA8BzgC,OAAOC,aAAaC,QAAQ,qBAC5C,MAAhBugC,IACHthD,KAAKkgD,GAA0BruD,MAAQyvD,GAGxCthD,KAAK+/C,GAAYH,SACjB2B,YAAW,IAAMvhD,KAAK+/C,GAAYyB,UAElCxhD,KAAKmgD,GAAaP,SAClB2B,YAAW,IAAMvhD,KAAKmgD,GAAaqB,UAEnCxhD,KAAKigD,GAAcL,SACnB2B,YAAW,IAAMvhD,KAAKigD,GAAcuB,UAEpCxhD,KAAKsgD,GAAY5V,iBAAiB,QAAS1qC,KAAK0gD,IAChD1gD,KAAKqgD,GAAc3V,iBAAiB,QAAS1qC,KAAKugD,IAElDvgD,KAAK+/C,GAAYrV,iBAAiB,WAAYoV,GAAmBa,IACjE3gD,KAAK+/C,GAAYrV,iBAAiB,OAAQoV,GAAmBc,IAE7D5gD,KAAKmgD,GAAazV,iBAAiB,WAAYoV,GAAmBa,IAClE3gD,KAAKmgD,GAAazV,iBAAiB,OAAQoV,GAAmBc,IAE9D5gD,KAAKigD,GAAcvV,iBAAiB,WAAYoV,GAAmBa,IACnE3gD,KAAKigD,GAAcvV,iBAAiB,OAAQoV,GAAmBc,IAE/D5gD,KAAKsoC,UAAUoC,iBAAiB,UAAW1qC,KAAK6gD,IAyBzChnD,UAAoBovC,GAC3B,MAAMwY,EAAYxY,EAAW,MAAIA,EAAMyY,MAAQzY,EAAM8X,QACrD,OAAgB,IAAZU,GAAkBA,EAAW,KAAOA,EAAW,IAAMA,EAAW,MACnExY,EAAMQ,kBACC,GAKD5vC,UAAuBovC,GAC9B,MAAMyW,EAA4CzW,EAAM6X,OACxDpB,EAAM7tD,MAAQusB,OAAO0hC,GAAmBoB,GAAUxB,IAG3C7lD,UAAiB6lD,GACxB,OAAO3wD,KAAKmU,MAAMnU,KAAKmgB,IAAI8nB,OAAO0oB,EAAMlvD,KAAMzB,KAAKyB,IAAIwmC,OAAO0oB,EAAMxwC,KAAM8nB,OAAO0oB,EAAM7tD,WCnJzF,MAAM0tD,OAAEA,GAAM71C,IAAEA,GAAG+1C,GAAEA,GAAEC,MAAEA,IAAUhhD,QAEtBijD,GAsCZ9nD,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EArCH/mC,KAAA4hD,GAAqClC,GAAM,CAAEphD,MAAO,gCAAiCrJ,KAAM,SAAU+qD,KAAM,MAC3GhgD,KAAA6hD,GAAwCnC,GAAM,CAAEphD,MAAO,gCAAiCrJ,KAAM,SAAU+qD,KAAM,MAC9GhgD,KAAA8hD,GAAyCpC,GAAM,CAAEphD,MAAO,gCAAiCrJ,KAAM,SAAU+qD,KAAM,MAC/GhgD,KAAA+hD,GAAwCrC,GAAM,CAAEphD,MAAO,gCAAiCrJ,KAAM,SAAU+qD,KAAM,MAC9GhgD,KAAAgiD,GAAuCtC,GAAM,CAAEphD,MAAO,gCAAiCrJ,KAAM,SAAU+qD,KAAM,MAE7GhgD,KAAAqgD,GAAmCd,GAAO,CAAEhX,MAAO,iBACnDvoC,KAAAsgD,GAAiCf,GAAO,CAAEhX,MAAO,aAAcjqC,MAAO,cAAgB,QAEvF0B,KAAAsoC,UAA4B5+B,GAAI,CAAE6+B,MAAO,qBAAsBjqC,MAAO,iBACrFmhD,GAAG,oBACH/1C,GAAI,CAAEpL,MAAO,oGACZ,kBACA0B,KAAK8hD,IAENp4C,GAAI,CAAEpL,MAAO,oGACZ,iBACA0B,KAAK+hD,IAENr4C,GAAI,CAAEpL,MAAO,oGACZ,gBACA0B,KAAKgiD,IAENt4C,GAAI,CAAEpL,MAAO,oGACZ,wBACA0B,KAAK4hD,IAENl4C,GAAI,CAAEpL,MAAO,oGACZ,2BACA0B,KAAK6hD,IAENn4C,GAAI,CAAEpL,MAAO,+EACZ0B,KAAKsgD,IAENtgD,KAAKqgD,IA0CErgD,KAAAugD,GAAS,KAChBvgD,KAAK+mC,EAAKqF,QAGJpsC,KAAAwgD,QAAU,KAChBxgD,KAAKsgD,GAAYG,oBAAoB,QAASzgD,KAAK0gD,IACnD1gD,KAAKqgD,GAAcI,oBAAoB,QAASzgD,KAAKugD,IACrDvgD,KAAK4hD,GAAiBnB,oBAAoB,WAAYkB,GAAsBhB,IAC5E3gD,KAAK6hD,GAAoBpB,oBAAoB,WAAYkB,GAAsBhB,IAC/E3gD,KAAK8hD,GAAqBrB,oBAAoB,WAAYkB,GAAsBhB,IAChF3gD,KAAK+hD,GAAoBtB,oBAAoB,WAAYkB,GAAsBhB,IAC/E3gD,KAAKgiD,GAAmBvB,oBAAoB,WAAYkB,GAAsBhB,IAC9E3gD,KAAK4hD,GAAiBnB,oBAAoB,OAAQkB,GAAsBf,IACxE5gD,KAAK6hD,GAAoBpB,oBAAoB,OAAQkB,GAAsBf,IAC3E5gD,KAAK8hD,GAAqBrB,oBAAoB,OAAQkB,GAAsBf,IAC5E5gD,KAAK+hD,GAAoBtB,oBAAoB,OAAQkB,GAAsBf,IAC3E5gD,KAAKgiD,GAAmBvB,oBAAoB,OAAQkB,GAAsBf,IAC1E5gD,KAAKsoC,UAAUmY,oBAAoB,UAAWzgD,KAAK6gD,KAG5C7gD,KAAA6gD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQ7iD,SAAwC,IAAjBgrC,EAAM8X,SACxD/gD,KAAK0gD,MAsBC1gD,KAAA0gD,GAAe,KACtB,MAAMO,EAAqB,IAAIrV,GAC/BqV,EAAM/S,OAAO,IAAIoI,GAAyBt2C,KAAK+mC,EAAM4a,GAAsBT,GAAUlhD,KAAK4hD,MAC1FX,EAAM/S,OAAO,IAAIuG,GAA4Bz0C,KAAK+mC,EAAM4a,GAAsBT,GAAUlhD,KAAK6hD,MAC7FZ,EAAM/S,OAAO,IAAIwD,GAAmB1xC,KAAK+mC,EAAM4a,GAAsBT,GAAUlhD,KAAK8hD,IAAuBH,GAAsBT,GAAUlhD,KAAK+hD,IAAsBJ,GAAsBT,GAAUlhD,KAAKgiD,MAC3MhiD,KAAK+mC,EAAKoa,OAAS,KACnBnhD,KAAK+mC,EAAKqa,OAAOH,GAAO,IAxFxBjhD,KAAK4hD,GAAiB/vD,MAAQmO,KAAK+mC,EAAK5mC,KAAKyb,mBAAqB,GAClE5b,KAAK4hD,GAAiBpxD,IAAM,IAC5BwP,KAAK4hD,GAAiB1yC,IAAMhhB,EAAOgF,YAAc,GAEjD8M,KAAK6hD,GAAoBhwD,MAAQmO,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,GACxE9b,KAAK6hD,GAAoBrxD,IAAMtC,EAAOmF,yBAA2B,GACjE2M,KAAK6hD,GAAoB3yC,IAAMhhB,EAAOoF,yBAA2B,GAEjE0M,KAAK8hD,GAAqBjwD,MAAQmO,KAAK+mC,EAAK5mC,KAAKe,kBAAoB,GACrElB,KAAK8hD,GAAqBtxD,IAAMtC,EAAOkK,qBAAuB,GAC9D4H,KAAK8hD,GAAqB5yC,IAAMhhB,EAAOmK,qBAAuB,GAE9D2H,KAAK+hD,GAAoBlwD,MAAQmO,KAAK+mC,EAAK5mC,KAAKiB,kBAAoB,GACpEpB,KAAK+hD,GAAoBvxD,IAAMtC,EAAOoK,qBAAuB,GAC7D0H,KAAK+hD,GAAoB7yC,IAAMhhB,EAAOqK,qBAAuB,GAE7DyH,KAAKgiD,GAAmBnwD,MAAQmO,KAAK+mC,EAAK5mC,KAAK+a,gBAAkB,GACjElb,KAAKgiD,GAAmBxxD,IAAMtC,EAAOsK,mBAAqB,GAC1DwH,KAAKgiD,GAAmB9yC,IAAMhhB,EAAOuK,mBAAqB,GAE1DuH,KAAK8hD,GAAqBlC,SAC1B2B,YAAW,IAAMvhD,KAAK8hD,GAAqBN,UAE3CxhD,KAAKsgD,GAAY5V,iBAAiB,QAAS1qC,KAAK0gD,IAChD1gD,KAAKqgD,GAAc3V,iBAAiB,QAAS1qC,KAAKugD,IAClDvgD,KAAK4hD,GAAiBlX,iBAAiB,WAAYiX,GAAsBhB,IACzE3gD,KAAK6hD,GAAoBnX,iBAAiB,WAAYiX,GAAsBhB,IAC5E3gD,KAAK8hD,GAAqBpX,iBAAiB,WAAYiX,GAAsBhB,IAC7E3gD,KAAK+hD,GAAoBrX,iBAAiB,WAAYiX,GAAsBhB,IAC5E3gD,KAAKgiD,GAAmBtX,iBAAiB,WAAYiX,GAAsBhB,IAC3E3gD,KAAK4hD,GAAiBlX,iBAAiB,OAAQiX,GAAsBf,IACrE5gD,KAAK6hD,GAAoBnX,iBAAiB,OAAQiX,GAAsBf,IACxE5gD,KAAK8hD,GAAqBpX,iBAAiB,OAAQiX,GAAsBf,IACzE5gD,KAAK+hD,GAAoBrX,iBAAiB,OAAQiX,GAAsBf,IACxE5gD,KAAKgiD,GAAmBtX,iBAAiB,OAAQiX,GAAsBf,IACvE5gD,KAAKsoC,UAAUoC,iBAAiB,UAAW1qC,KAAK6gD,IA6BzChnD,UAAoBovC,GAC3B,MAAMwY,EAAYxY,EAAW,MAAIA,EAAMyY,MAAQzY,EAAM8X,QACrD,OAAgB,IAAZU,GAAkBA,EAAW,KAAOA,EAAW,IAAMA,EAAW,MACnExY,EAAMQ,kBACC,GAKD5vC,UAAuBovC,GAC9B,MAAMyW,EAA4CzW,EAAM6X,OACxDpB,EAAM7tD,MAAQusB,OAAOujC,GAAsBT,GAAUxB,IAG9C7lD,UAAiB6lD,GACxB,OAAO3wD,KAAKmU,MAAMnU,KAAKmgB,IAAI8nB,OAAO0oB,EAAMlvD,KAAMzB,KAAKyB,IAAIwmC,OAAO0oB,EAAMxwC,KAAM8nB,OAAO0oB,EAAM7tD,WCxHzF,MAAM0tD,OAAEA,GAAM71C,IAAEA,GAAG+1C,GAAEA,IAAO/gD,QAEfujD,GA0BZpoD,YAAYwzC,GAxBJrtC,KAAAwoC,EAAkB,EAClBxoC,KAAAkiD,GAAkB,EAClBliD,KAAAmiD,GAAqB,EACrBniD,KAAAoiD,GAAmB,EACnBpiD,KAAAyoC,GAAsB,EACvBzoC,KAAAqiD,SAAyB,IAAIzzD,aAAa,IAC1CoR,KAAAsiD,iBAAiC,IAAI1zD,aAAa,IACjDoR,KAAAuiD,GAA4B,EAC5BviD,KAAAwiD,GAA+B,GACtBxiD,KAAAinC,EAAuB,IACvBjnC,KAAAknC,EAAwB,IACxBlnC,KAAAyiD,GAAwB1jD,EAAImpC,KAAK,CAAEb,KAAMtnC,EAAY+H,mBAAoB8/B,iBAAkB,SAC3F5nC,KAAA0iD,GAAwB3jD,EAAI4oC,IAAI,CAAEC,iBAAkB,SACpD5nC,KAAA2iD,GAA2B5jD,EAAI4oC,IAAI,CAAEC,iBAAkB,SACvD5nC,KAAA4iD,GAAyB7jD,EAAI4oC,IAAI,CAAEC,iBAAkB,SACrD5nC,KAAAqoC,EAAsBtpC,EAAI4oC,IAAI,CAAErpC,MAAO,qBAAqByB,EAAYqH,2DAA4DogC,MAAO,OAAQC,OAAQ,OAAQob,QAAS,OAAS7iD,KAAKinC,EAAe,IAAMjnC,KAAKknC,EAAe4b,oBAAqB,QACxQ9iD,KAAKyiD,GACLziD,KAAK0iD,GACL1iD,KAAK2iD,GACL3iD,KAAK4iD,IAGU5iD,KAAAsoC,UAAyB5pC,EAAKgL,IAAI,CAAE6+B,MAAO,GAAIjqC,MAAO,uDAAyD0B,KAAKqoC,GA+C5HroC,KAAA+iD,GAAe,KAEtB,IAAIC,GAAY,EAChB,GAAIhjD,KAAKwiD,GAAaj0D,OAAS,EAC9B,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IACnB0R,KAAKwiD,GAAaxiD,KAAKuiD,IAAmBj0D,IAAM0R,KAAKqiD,SAAS/zD,KACjE00D,GAAY,EAAO10D,EAAI,IAKT,GAAb00D,GAAkD,GAA5BhjD,KAAKwiD,GAAaj0D,SAG3CyR,KAAKwiD,GAAahkC,OAAO,EAAGxe,KAAKuiD,IAEjCviD,KAAKuiD,GAAoB,EAEzBviD,KAAKwiD,GAAa/jC,QAAQze,KAAKqiD,SAASjjC,SAGpCpf,KAAKwiD,GAAaj0D,OAAS,IAC9ByR,KAAKwiD,GAAa9jC,QAOd1e,KAAAosC,KAAO,KAETpsC,KAAKuiD,GAAoBviD,KAAKwiD,GAAaj0D,OAAS,IACvDyR,KAAKuiD,KACLviD,KAAKqiD,SAAWriD,KAAKwiD,GAAaxiD,KAAKuiD,IAAmBnjC,QAC1D,IAAI4vB,GAAiBhvC,KAAK+mC,EAAM/mC,KAAKqiD,UACrCriD,KAAKijD,WAKAjjD,KAAAmsC,KAAO,KAETnsC,KAAKuiD,GAAoB,IAC5BviD,KAAKuiD,KACLviD,KAAKqiD,SAAWriD,KAAKwiD,GAAaxiD,KAAKuiD,IAAmBnjC,QAC1D,IAAI4vB,GAAiBhvC,KAAK+mC,EAAM/mC,KAAKqiD,UACrCriD,KAAKijD,WAKCjjD,KAAA6gD,GAAmB5X,IACL,IAAjBA,EAAM8X,UACT/gD,KAAKosC,OACLnD,EAAMia,mBAEc,IAAjBja,EAAM8X,UACT/gD,KAAKmsC,OACLlD,EAAMia,oBAIAljD,KAAAwpC,GAAqBP,IAC5BA,EAAMQ,iBACNzpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7H9pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKmiD,IAAc,EAEnBniD,KAAKoqC,MAGEpqC,KAAAiqC,GAAqBhB,IAC5BA,EAAMQ,iBACNzpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvH9pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKmiD,IAAc,EAEnBniD,KAAKoqC,MAGEpqC,KAAAmqC,GAAmBlB,IAC1B,GAAmC,MAA/BjpC,KAAKsoC,UAAUmb,aAAsB,OACzC,MAAM/Z,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7H9pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKoqC,MAGEpqC,KAAAqqC,GAAmBpB,IAC1B,GAAmC,MAA/BjpC,KAAKsoC,UAAUmb,aAAsB,OACzC,IAAKzjD,KAAKyoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvH9pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKoqC,MA2CEpqC,KAAAsqC,GAAuBrB,IAE9BjpC,KAAK+iD,KACL/iD,KAAKyoC,GAAa,GApMlBzoC,KAAK+mC,EAAOsG,EAEZ,IAAK,IAAI/+C,EAAY,EAAGA,GAAK,EAAGA,GAAK,EACpC0R,KAAK0iD,GAAO5lD,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYkI,MAAOq/B,EAAIh5C,EAAI0R,KAAKinC,EAAe,EAAK,EAAGM,EAAG,EAAGC,MAAO,EAAGC,OAAQznC,KAAKknC,KAE9H,IAAK,IAAI54C,EAAY,EAAGA,GAAK,EAAGA,IAC/B0R,KAAK2iD,GAAU7lD,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYmI,UAAWo/B,EAAIh5C,EAAI0R,KAAKinC,EAAe,EAAK,EAAGM,EAAG,EAAGC,MAAO,EAAGC,OAAQznC,KAAKknC,KAIrIlnC,KAAK0iD,GAAO5lD,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYkI,MAAOq/B,EAAG,EAAGC,EAAIvnC,KAAKknC,EAAgB,EAAK,EAAGM,MAAOxnC,KAAKinC,EAAcQ,OAAQ,KACrI,IAAK,IAAIn5C,EAAY,EAAGA,EAAI,EAAGA,IAC9B0R,KAAK2iD,GAAU7lD,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYmI,UAAWo/B,EAAG,EAAGC,EAAO,EAAJj5C,GAAS0R,KAAKknC,EAAgB,IAAKM,MAAOxnC,KAAKinC,EAAcQ,OAAQ,KACjJznC,KAAK2iD,GAAU7lD,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYmI,UAAWo/B,EAAG,EAAGC,EAAGvnC,KAAKknC,EAAgB,EAAQ,EAAJ54C,GAAS0R,KAAKknC,EAAgB,IAAKM,MAAOxnC,KAAKinC,EAAcQ,OAAQ,KAI3K,IAAIic,EAAc3jD,EAAYW,gBAAgBV,KAAK+mC,EAAK5mC,KAAMH,KAAK+mC,EAAK3mC,SAASa,YAEjF,IAAK,IAAI3S,EAAY,EAAGA,GAAK,GAAIA,IAAK,CACrC,IAAI6gB,EAAcnP,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAAwBtzC,eAAevN,GAC1H0R,KAAKqiD,SAAS/zD,GAAK6gB,EACnBnP,KAAKsiD,iBAAiBh0D,GAAK6gB,EAC3BnP,KAAK4iD,GAAQ9lD,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMqc,EAAKpc,EAAIh5C,EAAI0R,KAAKinC,EAAe,GAAKM,GAAIp4B,EAAM,KAAOnP,KAAKknC,EAAgB,IAAKM,MAAOxnC,KAAKinC,EAAe,GAAIQ,OAAQznC,KAAKknC,EAAgB,MAIxLlnC,KAAK+iD,KAEL/iD,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKwpC,IAClDzsC,SAAS2tC,iBAAiB,YAAa1qC,KAAKmqC,IAC5CptC,SAAS2tC,iBAAiB,UAAW1qC,KAAKsqC,IAE1CtqC,KAAKsoC,UAAUoC,iBAAiB,aAAc1qC,KAAKiqC,IACnDjqC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKqqC,IAClDrqC,KAAKsoC,UAAUoC,iBAAiB,WAAY1qC,KAAKsqC,IACjDtqC,KAAKsoC,UAAUoC,iBAAiB,cAAe1qC,KAAKsqC,IAEpDtqC,KAAKqoC,EAAKqC,iBAAiB,UAAW1qC,KAAK6gD,IAC3C7gD,KAAKsoC,UAAUoC,iBAAiB,UAAW1qC,KAAK6gD,IAkHzChnD,KACP,GAAImG,KAAKyoC,EAAY,CACpB,MAAMt5C,EAAgBJ,KAAKyB,IAAI,GAAIzB,KAAKmgB,IAAI,EAAGngB,KAAKmU,MAAqB,GAAflD,KAAKwoC,EAAexoC,KAAKinC,KAC7E0c,EAAc50D,KAAKyB,IAAI,GAAIzB,KAAKmgB,IAAI,EAAGngB,KAAKmU,MAAqB,GAAflD,KAAKkiD,GAAeliD,KAAKknC,KAGjF,IAAwB,GAApBlnC,KAAKmiD,IAAoBniD,KAAKmiD,IAAchzD,EAAO,CACtD,IAAIy0D,EAASz0D,EACT00D,EAAU7jD,KAAKmiD,GACf2B,EAAcH,EACdI,EAAY/jD,KAAKoiD,GACjBpiD,KAAKmiD,GAAahzD,IACrBy0D,EAAS5jD,KAAKmiD,GACd0B,EAAU10D,EACV20D,EAAc9jD,KAAKoiD,GACnB2B,EAAYJ,GAEb,IAAK,IAAIr1D,EAAIs1D,EAAQt1D,GAAKu1D,EAASv1D,IAAK,CACvC,MAAM01D,EAAiBj1D,KAAKgb,MAAM+5C,GAA4Cx1D,EAAIs1D,IAAWC,EAAUD,IAAtDG,EAAYD,IAC7D9jD,KAAKqiD,SAAS/zD,GAAK01D,EAAS,GAC5BhkD,KAAK4iD,GAAQqB,SAAS31D,GAAGuP,aAAa,IAAK,GAAMmmD,GAAUhkD,KAAKknC,EAAgB,WAKjFlnC,KAAKqiD,SAASlzD,GAASw0D,EAAM,GAC7B3jD,KAAK4iD,GAAQqB,SAAS90D,GAAO0O,aAAa,IAAK,GAAM8lD,GAAO3jD,KAAKknC,EAAgB,KAMlF,IAAI8H,GAAiBhvC,KAAK+mC,EAAM/mC,KAAKqiD,UAErCriD,KAAKmiD,GAAahzD,EAClB6Q,KAAKoiD,GAAWuB,GAWX9pD,SACN,IAAK,IAAIvL,EAAI,EAAGA,EAAI,GAAIA,IACvB0R,KAAK4iD,GAAQqB,SAAS31D,GAAGuP,aAAa,IAAK,IAAOmC,KAAKqiD,SAAS/zD,GAAK,KAAO0R,KAAKknC,EAAgB,YAKvFgd,GAuBZrqD,YAAoBktC,EAA4Bod,GAA5BnkD,KAAA+mC,EAAAA,EAA4B/mC,KAAAmkD,GAAAA,EArBzCnkD,KAAAokD,iBAA2C,IAAInC,GAAuBjiD,KAAK+mC,GAElE/mC,KAAAqkD,GAAiC9E,GAAO,CAAEjhD,MAAO,cAAerJ,KAAM,WAErE+K,KAAAqgD,GAAmCd,GAAO,CAAEhX,MAAO,iBACnDvoC,KAAAsgD,GAAiCf,GAAO,CAAEhX,MAAO,aAAcjqC,MAAO,cAAgB,QAEvF0B,KAAAsoC,UAA4B5+B,GAAI,CAAE6+B,MAAO,qBAAsBjqC,MAAO,iBACrFmhD,GAAG,+BACH/1C,GAAI,CAAEpL,MAAO,qHACZ0B,KAAKqkD,IAEN36C,GAAI,CAAEpL,MAAO,qFACZ0B,KAAKokD,iBAAiB9b,WAEvB5+B,GAAI,CAAEpL,MAAO,+EACZ0B,KAAKsgD,IAENtgD,KAAKqgD,IAiBErgD,KAAAskD,GAAc,KACjBtkD,KAAK+mC,EAAKzN,MAAM7L,SACnBztB,KAAKmkD,GAAYI,KACjBvkD,KAAKwkD,qBAELxkD,KAAK+mC,EAAKzN,MAAM5I,YAChB1wB,KAAKmkD,GAAYM,KACjBzkD,KAAKwkD,qBAkBCxkD,KAAAugD,GAAS,KAChBvgD,KAAK+mC,EAAKoa,OAAS,KACnBnhD,KAAK+mC,EAAKqF,QAGJpsC,KAAAwgD,QAAU,KAChBxgD,KAAKsgD,GAAYG,oBAAoB,QAASzgD,KAAK0gD,IACnD1gD,KAAKqgD,GAAcI,oBAAoB,QAASzgD,KAAKugD,IACrDvgD,KAAKsoC,UAAUmY,oBAAoB,UAAWzgD,KAAK0kD,gBAEnD1kD,KAAKqkD,GAAY5D,oBAAoB,QAASzgD,KAAKskD,KAG7CtkD,KAAA0kD,eAAkBzb,IACe,UAAzBA,EAAM6X,OAAQ7iD,SAAwC,IAAjBgrC,EAAM8X,SACxD/gD,KAAK0gD,KAEe,IAAjBzX,EAAM8X,UACT/gD,KAAKskD,KACLrb,EAAMQ,kBAEc,IAAjBR,EAAM8X,UACT/gD,KAAKokD,iBAAiBhY,OACtBnD,EAAMia,mBAEc,IAAjBja,EAAM8X,UACT/gD,KAAKokD,iBAAiBjY,OACtBlD,EAAMia,oBAIAljD,KAAA0gD,GAAe,KACtB1gD,KAAK+mC,EAAKoa,OAAS,KAEnB,IAAInS,GAAiBhvC,KAAK+mC,EAAM/mC,KAAKokD,iBAAiB9B,kBACtDtiD,KAAK+mC,EAAKqa,OAAO,IAAIpS,GAAiBhvC,KAAK+mC,EAAM/mC,KAAKokD,iBAAiB/B,WAAW,IAxElFriD,KAAKsgD,GAAY5V,iBAAiB,QAAS1qC,KAAK0gD,IAChD1gD,KAAKqgD,GAAc3V,iBAAiB,QAAS1qC,KAAKugD,IAClDvgD,KAAKsoC,UAAUoC,iBAAiB,UAAW1qC,KAAK0kD,gBAChD1kD,KAAKqkD,GAAY3Z,iBAAiB,QAAS1qC,KAAKskD,IAChDtkD,KAAKwkD,mBAELjD,YAAW,IAAMvhD,KAAKqkD,GAAY7C,UAGlCxhD,KAAKokD,iBAAiBnB,SAchBppD,mBACFmG,KAAK+mC,EAAKzN,MAAM7L,SACnBztB,KAAKqkD,GAAYx3C,UAAU+qB,OAAO,cAClC53B,KAAKqkD,GAAYx3C,UAAUC,IAAI,eAC/B9M,KAAKqkD,GAAYtoC,MAAQ,gBACzB/b,KAAKqkD,GAAYM,UAAY,UAE7B3kD,KAAKqkD,GAAYx3C,UAAU+qB,OAAO,eAClC53B,KAAKqkD,GAAYx3C,UAAUC,IAAI,cAC/B9M,KAAKqkD,GAAYtoC,MAAQ,eACzB/b,KAAKqkD,GAAYM,UAAY,SC7ShC,SAASC,GAAS72C,EAAqBxf,GACtC,MAAMs2D,EAAoB,IAAIC,YAAYv2D,GAC1C,IAAIw2D,EAAa,EACbC,EAAYj2D,KAAKyB,IAAIud,EAAOk3C,WAAYJ,EAAKI,YACjD,MAAMC,EAAY,CAAC,EAAG,EAAG,EAAG,GAC5B,IAAK,MAAMC,KAAYD,EACtB,GAAIF,GAAaG,EAAU,CAC1B,MAAMxoD,EAAOyoD,EAAaD,EAAUp3C,EAAQ82C,EAAME,EAAYC,GAC9DD,EAAapoD,EAAKooD,WAClBC,EAAYroD,EAAKqoD,UAGnB,OAAOH,EACP,SAASO,EAAaD,EAAkBp3C,EAAqB82C,EAAmBE,EAAoBC,GACnG,IAAIK,EAAiBC,WACrB,OAAQH,GACP,KAAK,EACJE,EAAYz2D,aACZ,MACD,KAAK,EACJy2D,EAAY71D,aACZ,MACD,KAAK,EACJ61D,EAAYE,YACZ,MACD,KAAK,EAGL,QACCF,EAAYC,WAId,MAAME,EAAc,IAAIH,EAAUt3C,EAAQg3C,EAAaC,EAAYG,EAAY,GACzEM,EAAY,IAAIJ,EAAUR,EAAME,EAAaC,EAAYG,EAAY,GAC3E,IAAK,IAAI72D,EAAY,EAAGA,EAAIm3D,EAAUl3D,OAAQD,IAC7Cm3D,EAAUn3D,GAAKk3D,EAAYl3D,GAE5B,MAAO,CACNy2D,WAAYS,EAAYE,WAAaF,EAAYP,WACjDD,UAAWA,EAAYS,EAAUl3D,OAAS42D,UAMhCQ,GAMZ9rD,YAAY+rD,GALJ5lD,KAAA6lD,GAAsB,EACtB7lD,KAAA8lD,GAAoB,EAK3B9lD,KAAK+lD,GAAe,IAAIjB,YAAYc,GACpC5lD,KAAKgmD,GAAQ,IAAIC,SAASjmD,KAAK+lD,IAGxBlsD,GAAUqsD,GACjBlmD,KAAK8lD,IAAaI,EACdlmD,KAAK8lD,GAAY9lD,KAAK+lD,GAAad,aACtCjlD,KAAK+lD,GAAenB,GAAS5kD,KAAK+lD,GAAch3D,KAAKmgB,IAAmC,EAA/BlP,KAAK+lD,GAAad,WAAgBjlD,KAAK8lD,KAChG9lD,KAAKgmD,GAAQ,IAAIC,SAASjmD,KAAK+lD,KAI1BlsD,gBACN,OAAOmG,KAAK6lD,GAGNhsD,cAAc1K,EAAe0C,GACnCmO,KAAKgmD,GAAMG,UAAUh3D,EAAO0C,IAAU,GAAG,GAGnCgI,YAAYhI,GAClBA,KAAkB,EAClBmO,KAAKomD,GAAU,GACfpmD,KAAKgmD,GAAMG,UAAUnmD,KAAK6lD,GAAah0D,GAAO,GAC9CmO,KAAK6lD,GAAc7lD,KAAK8lD,GAGlBjsD,YAAYhI,GAClBA,KAAkB,EAClBmO,KAAKomD,GAAU,GACfpmD,KAAKgmD,GAAMK,SAASrmD,KAAK6lD,GAAch0D,GAAS,GAAM,KACtDmO,KAAKgmD,GAAMK,SAASrmD,KAAK6lD,GAAc,EAAIh0D,GAAS,EAAK,KACzDmO,KAAKgmD,GAAMK,SAASrmD,KAAK6lD,GAAc,EAAa,IAAV,GAC1C7lD,KAAK6lD,GAAc7lD,KAAK8lD,GAGlBjsD,YAAYhI,GAClBA,KAAkB,EAClBmO,KAAKomD,GAAU,GACfpmD,KAAKgmD,GAAMM,UAAUtmD,KAAK6lD,GAAah0D,GAAO,GAC9CmO,KAAK6lD,GAAc7lD,KAAK8lD,GAGlBjsD,WAAWhI,GACjBA,KAAkB,EAClBmO,KAAKomD,GAAU,GACfpmD,KAAKgmD,GAAMK,SAASrmD,KAAK6lD,GAAah0D,GACtCmO,KAAK6lD,GAAc7lD,KAAK8lD,GAGlBjsD,UAAUhI,GAChBA,GAAgB,EAChBmO,KAAKomD,GAAU,GACfpmD,KAAKgmD,GAAMO,QAAQvmD,KAAK6lD,GAAah0D,GACrCmO,KAAK6lD,GAAc7lD,KAAK8lD,GAGlBjsD,eAAehI,GAErB,IADAA,KAAkB,IACL,IAAM,MAAM,IAAI9B,MAAM,kCACnCiQ,KAAKomD,GAAU,GACfpmD,KAAKgmD,GAAMK,SAASrmD,KAAK6lD,GAAah0D,GACtCmO,KAAK6lD,GAAc7lD,KAAK8lD,GAGlBjsD,wBAAwBhI,GAE9B,IADAA,KAAkB,GACN,UAAY,MAAM,IAAI9B,MAAM,sCACxC,IAAIy2D,GAAwB,EAC5B,IAAK,IAAIl4D,EAAY,EAAGA,EAAI,EAAGA,IAAK,CACnC,MACM8tB,EAAgBvqB,IADA,GAAS,EAAJvD,EACc,IAC7B,GAAR8tB,GAAkB,GAAL9tB,IAAQk4D,GAAe,GACpCA,GAAcxmD,KAAKymD,YAAiB,GAALn4D,EAAS,EAAO,KAAQ8tB,IAItDviB,eAAeoe,GACrBjY,KAAK0mD,wBAAwBzuC,EAAO1pB,QACpC,IAAK,IAAID,EAAY,EAAGA,EAAI2pB,EAAO1pB,OAAQD,IAAK,CAC/C,MAAMmzD,EAAmBxpC,EAAO/J,WAAW5f,GAC3C,GAAImzD,EAAW,IAAM,MAAM,IAAI1xD,MAAM,+CACrCiQ,KAAKymD,WAAWhF,IAIX5nD,uBACN,OAAO+qD,GAAS5kD,KAAK+lD,GAAc/lD,KAAK8lD,KC5InC,MACMa,GAA+B,KAsG/BC,GAAmD,CAC/DC,GAAI,CAAElrD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzC8yD,GAAI,CAAEnrD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzC+yD,GAAI,CAAEprD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCgzD,GAAI,CAAErrD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCizD,GAAI,CAAEtrD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCkzD,GAAI,CAAEvrD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCmzD,GAAI,CAAExrD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCozD,GAAI,CAAEzrD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCqzD,GAAI,CAAE1rD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCszD,GAAI,CAAE3rD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCuzD,GAAI,CAAE5rD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCwzD,GAAI,CAAE7rD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCyzD,GAAI,CAAE9rD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzC0zD,GAAI,CAAE/rD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzC2zD,GAAI,CAAEhsD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzC4zD,GAAI,CAAEjsD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzC6zD,GAAI,CAAElsD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzC8zD,GAAI,CAAEnsD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzC+zD,GAAI,CAAEpsD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCg0D,GAAI,CAAErsD,UAAW,GAAIsU,SAAU,EAAGjc,OAAQ,GAC1Ci0D,GAAI,CAAEtsD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCk0D,GAAI,CAAEvsD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCm0D,GAAI,CAAExsD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GACzCo0D,GAAI,CAAEzsD,UAAW,GAAIsU,SAAU,EAAGjc,OAAQ,GAC1Cq0D,GAAI,CAAE1sD,UAAW,EAAGsU,SAAU,EAAGjc,OAAQ,GAUzCs0D,GAAI,CAAE3sD,UAAW,GAAIsU,SAAU,EAAGjc,OAAQ,GAC1Cu0D,GAAI,CAAE5sD,UAAW,GAAIsU,SAAU,EAAGjc,OAAQ,GAG1Cw0D,GAAI,CAAE7sD,UAAW,GAAIsU,SAAU,EAAGjc,OAAQ,GAC1Cy0D,GAAI,CAAE9sD,UAAW,GAAIsU,SAAU,EAAGjc,OAAQ,aAU3B00D,GAAuB10D,GAEtC,OAAOjF,KAAKuB,IAAI0D,EAAS,IAAK,GAAO,kBCjJtC,MAAMurD,OAAEA,GAAM71C,IAAEA,GAAG+1C,GAAEA,GAAEC,MAAEA,GAAKE,OAAEA,GAAMC,OAAEA,IAAWnhD,EAEnD,SAASiqD,GAAKC,EAAaC,EAAcnjB,GACxC,OAAOkjB,EAAMljB,GAAKmjB,EAAOD,GAG1B,SAASE,GAAKC,EAAYj3D,GACzB,GAAIyH,UAAUyvD,iBAEb,YADAzvD,UAAUyvD,iBAAiBD,EAAMj3D,GAIlC,MAAMm3D,EAA4BlsD,SAAS0C,cAAc,KACzD,GAAuB0N,MAAnB87C,EAAOC,SAAuB,CACjC,MAAMC,EAAcC,IAAIC,gBAAgBN,GACxCxH,YAAW,WAAc6H,IAAIE,gBAAgBH,KAAS,KACtDF,EAAOM,KAAOJ,EACdF,EAAOC,SAAWp3D,EAIlByvD,YAAW,WAAc0H,EAAOO,cAAc,IAAIC,WAAW,YAAc,OACrE,CACN,MAAMN,EAAcC,IAAIC,gBAAgBN,GACxCxH,YAAW,WAAc6H,IAAIE,gBAAgBH,KAAS,KACjDtoC,OAAO6oC,KAAKP,EAAK,YAAWtoC,OAAO8oC,SAASJ,KAAOJ,UAI7CS,GA0FZ/vD,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EAlFZ/mC,KAAA6pD,eAAyB,EAChB7pD,KAAA8pD,GAA8BpK,GAAM,CAAEzqD,KAAM,OAAQqJ,MAAO,eAAgBzM,MAAO,eAAgBk4D,UAAW,IAAKC,UAAa,cAC/HhqD,KAAAiqD,GAAwCvgD,GAAI,CAAEpL,MAAO,gBAAkB,IAAI4rD,KAAK,SAChFlqD,KAAAmqD,GAAiCzK,GAAM,CAAEzqD,KAAM,aAC/C+K,KAAAoqD,GAAkC1K,GAAM,CAAEphD,MAAO,cAAerJ,KAAM,SAAUzE,IAAK,IAAK0e,IAAK,IAAK8wC,KAAM,MAC1GhgD,KAAAqqD,GAAiC3K,GAAM,CAAEzqD,KAAM,aAC/C+K,KAAAsqD,GAAmC1K,GAAO,CAAEthD,MAAO,gBACnEuhD,GAAO,CAAEhuD,MAAO,OAAS,wBACzBguD,GAAO,CAAEhuD,MAAO,OAAS,wBACzBguD,GAAO,CAAEhuD,MAAO,QAAU,wBAC1BguD,GAAO,CAAEhuD,MAAO,QAAU,0BAEVmO,KAAAqgD,GAAmCd,GAAO,CAAEhX,MAAO,iBACnDvoC,KAAAuqD,GAAmChL,GAAO,CAAEhX,MAAO,eAAgBjqC,MAAO,cAAgB,UAC1F0B,KAAAwqD,GAAqC9gD,GAAI,CAAEpL,MAAO,0BAA0ByB,EAAY6H,8DACxF5H,KAAAyqD,GAAuC/gD,GAAI,CAAEpL,MAAO,8CAAgD,MACpG0B,KAAA0qD,GAA2ChhD,GAAI,CAAEpL,MAAO,6BAA6ByB,EAAY+H,uEACjH9H,KAAKwqD,GACLxqD,KAAKyqD,IAiCUzqD,KAAAsoC,UAA4B5+B,GAAI,CAAE6+B,MAAO,qBAAsBjqC,MAAO,iBACrFmhD,GAAG,kBACH/1C,GAAI,CAAEpL,MAAO,4FACZ,aACA0B,KAAK8pD,IAENpgD,GAAI,CAAEpL,MAAO,4FACZ,UACA0B,KAAKiqD,IAENvgD,GAAI,CAAEpL,MAAO,gCACZoL,GAAI,CAAEpL,MAAO,uBACZoL,GAAI,CAAEpL,MAAO,wBAA0B,UACvCoL,GAAI,CAAEpL,MAAO,wBAA0B,eACvCoL,GAAI,CAAEpL,MAAO,wBAA0B,WAExCoL,GAAI,CAAEpL,MAAO,uBACZoL,GAAI,CAAEpL,MAAO,gDAAkD0B,KAAKmqD,IACpEzgD,GAAI,CAAEpL,MAAO,gDAAkD0B,KAAKoqD,IACpE1gD,GAAI,CAAEpL,MAAO,gDAAkD0B,KAAKqqD,MAGtE3gD,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,gBAAkB0B,KAAKsqD,IAC9D5gD,GAAI,CAAEpL,MAAO,qBAAuB,kGACpC0B,KAAK0qD,GACLhhD,GAAI,CAAEpL,MAAO,+EACZ0B,KAAKuqD,IAENvqD,KAAKqgD,IAoDErgD,KAAAugD,GAAS,KAChBvgD,KAAK6pD,eAAgB,EACrB7pD,KAAK+mC,EAAKqF,QAOJpsC,KAAAwgD,QAAU,KAChBxgD,KAAK8pD,GAAUrJ,oBAAoB,QAASmJ,GAAae,IACzD3qD,KAAKoqD,GAAc3J,oBAAoB,OAAQmJ,GAAahJ,IAC5D5gD,KAAKuqD,GAAc9J,oBAAoB,QAASzgD,KAAK4qD,IACrD5qD,KAAKqgD,GAAcI,oBAAoB,QAASzgD,KAAKugD,IACrDvgD,KAAKsoC,UAAUmY,oBAAoB,UAAWzgD,KAAK6gD,KAG5C7gD,KAAA6gD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQ7iD,SAAwC,IAAjBgrC,EAAM8X,SACxD/gD,KAAK4qD,MA6BC5qD,KAAA4qD,GAAU,KACjB,GAA0B,GAAtB5qD,KAAK6pD,cAGT,OADAhpC,OAAOC,aAAakgC,QAAQ,eAAgBhhD,KAAKsqD,GAAcz4D,OACvDmO,KAAKsqD,GAAcz4D,OAC1B,IAAK,MACJmO,KAAK6pD,eAAgB,EACrB7pD,KAAK6qD,GAAU,OACf,MACD,IAAK,MACJ7qD,KAAK6pD,eAAgB,EACrB7pD,KAAK6qD,GAAU,OACf,MACD,IAAK,OACJ7qD,KAAK6pD,eAAgB,EACrB7pD,KAAK8qD,KACL,MACD,IAAK,OACJ9qD,KAAK6pD,eAAgB,EACrB7pD,KAAK+qD,KACL,MACD,QACC,MAAM,IAAIh7D,MAAM,iCAtHlBiQ,KAAKoqD,GAAcv4D,MAAQ,IAEK,GAA5BmO,KAAK+mC,EAAK5mC,KAAKkb,WAClBrb,KAAKmqD,GAAaa,SAAU,EAC5BhrD,KAAKmqD,GAAac,UAAW,IAE7BjrD,KAAKmqD,GAAaa,SAAU,EAC5BhrD,KAAKmqD,GAAac,UAAW,GAE1BjrD,KAAK+mC,EAAK5mC,KAAKkb,UAAYrb,KAAK+mC,EAAK5mC,KAAKmb,YAActb,KAAK+mC,EAAK5mC,KAAKwb,UAC1E3b,KAAKqqD,GAAaW,SAAU,EAC5BhrD,KAAKqqD,GAAaY,UAAW,IAE7BjrD,KAAKqqD,GAAaW,SAAU,EAC5BhrD,KAAKqqD,GAAaY,UAAW,GAG9B,MAAMC,EAAkCrqC,OAAOC,aAAaC,QAAQ,gBAC5C,MAApBmqC,IACHlrD,KAAKsqD,GAAcz4D,MAAQq5D,GAG5BlrD,KAAK8pD,GAAUlK,SACf2B,YAAW,IAAMvhD,KAAK8pD,GAAUtI,UAEhCxhD,KAAK8pD,GAAUpf,iBAAiB,QAASkf,GAAae,IACtD3qD,KAAKoqD,GAAc1f,iBAAiB,OAAQkf,GAAahJ,IACzD5gD,KAAKuqD,GAAc7f,iBAAiB,QAAS1qC,KAAK4qD,IAClD5qD,KAAKqgD,GAAc3V,iBAAiB,QAAS1qC,KAAKugD,IAClDvgD,KAAKqqD,GAAa3f,iBAAiB,SAAS,KAAS1qC,KAAKiqD,GAAsB3qD,WAAoB8G,YAAcpG,KAAKmrD,cAAcnrD,KAAK+mC,EAAKzN,MAAM8xB,gBAAgBprD,KAAKmqD,GAAaa,QAAShrD,KAAKqqD,GAAaW,SAAUhrD,KAAKoqD,GAAcv4D,MAAQ,OACvPmO,KAAKmqD,GAAazf,iBAAiB,SAAS,KAAS1qC,KAAKiqD,GAAsB3qD,WAAoB8G,YAAcpG,KAAKmrD,cAAcnrD,KAAK+mC,EAAKzN,MAAM8xB,gBAAgBprD,KAAKmqD,GAAaa,QAAShrD,KAAKqqD,GAAaW,SAAUhrD,KAAKoqD,GAAcv4D,MAAQ,OACvPmO,KAAKoqD,GAAc1f,iBAAiB,UAAU,KAAS1qC,KAAKiqD,GAAsB3qD,WAAoB8G,YAAcpG,KAAKmrD,cAAcnrD,KAAK+mC,EAAKzN,MAAM8xB,gBAAgBprD,KAAKmqD,GAAaa,QAAShrD,KAAKqqD,GAAaW,SAAUhrD,KAAKoqD,GAAcv4D,MAAQ,OACzPmO,KAAKsoC,UAAUoC,iBAAiB,UAAW1qC,KAAK6gD,IAEhD7gD,KAAK8pD,GAAUj4D,MAAQk1C,EAAK5mC,KAAK4b,MACjC6tC,GAAae,GAAkB,KAAM3qD,KAAK8pD,IAEzC9pD,KAAKiqD,GAAsB3qD,WAAoB8G,YAAcpG,KAAKmrD,cAAcnrD,KAAK+mC,EAAKzN,MAAM8xB,gBAAgBprD,KAAKmqD,GAAaa,QAAShrD,KAAKqqD,GAAaW,SAAUhrD,KAAKoqD,GAAcv4D,MAAQ,IAI5LgI,cAActK,GACrB,MAAM87D,EAAqBt8D,KAAKgb,MAAMxa,EAAUyQ,KAAK+mC,EAAKzN,MAAMlQ,kBAC1DkiC,EAAkBD,EAAa,GAErC,OADwBt8D,KAAKmU,MAAMmoD,EAAa,IAC/B,KAAOC,EAAU,GAAK,IAAM,IAAMA,EAQ7CzxD,eAAey1C,GACrBtvC,KAAK8pD,GAAUj4D,MAAQy9C,EAiBhBz1C,UAAyBovC,EAAqBsiB,GAErD,IAAI7L,EACJ,GAAa,MAATzW,EACHyW,EAA0BzW,EAAM6X,WAC1B,CAAA,GAAW3zC,MAAPo+C,EAIV,OAHA7L,EAAQ6L,EAKT,MAAMC,EAAc,qCACpB,GAAIA,EAAYlyD,KAAKomD,EAAM7tD,OAAQ,CAClC,IAAI45D,EAA4B/L,EAAMnK,eACtCmK,EAAM7tD,MAAQ6tD,EAAM7tD,MAAM8H,QAAQ6xD,EAAa,IAC/CC,IACA/L,EAAMgM,kBAAkBD,EAAWA,IAI7B5xD,UAAuBovC,GAC9B,MAAMyW,EAA4CzW,EAAM6X,OACxDpB,EAAM7tD,MAAQ9C,KAAKmU,MAAMnU,KAAKmgB,IAAI8nB,OAAO0oB,EAAMlvD,KAAMzB,KAAKyB,IAAIwmC,OAAO0oB,EAAMxwC,KAAM8nB,OAAO0oB,EAAM7tD,UAAY,GA6BnGgI,KAIP,GAA0B,GAAtBmG,KAAK6pD,cACR,OAID,MAAM8B,EAAwD,EAA9B3rD,KAAKs5B,MAAMlQ,iBACrCwiC,EAAuB5rD,KAAK6rD,aAAeF,EAE3CG,EAAyB/8D,KAAKyB,IAAIm7D,EAAiB3rD,KAAK+rD,aAAeH,GACvEI,EAAe,IAAIx8D,aAAas8D,GAChCG,EAAe,IAAIz8D,aAAas8D,GAetC,GAbA9rD,KAAKs5B,MAAMtN,WAAWggC,EAAcC,EAAcH,GAGlD9rD,KAAKksD,iBAAiB/oD,IAAI6oD,EAAcJ,GACxC5rD,KAAKmsD,iBAAiBhpD,IAAI8oD,EAAcL,GAGxC5rD,KAAKwqD,GAAmBlsD,MAAMC,YAAY,QAASxP,KAAKgb,OAAO/J,KAAK6rD,aAAe,GAAK7rD,KAAKosD,YAAc,KAAS,KACpHpsD,KAAKyqD,GAAqB9F,UAAY51D,KAAKgb,OAAO/J,KAAK6rD,aAAe,GAAK7rD,KAAKosD,YAAc,KAAS,IAGvGpsD,KAAK6rD,eAED7rD,KAAK6rD,cAAgB7rD,KAAKosD,YAG7B,GADApsD,KAAKyqD,GAAqB9F,UAAY,cACb,OAArB3kD,KAAKqsD,aACRrsD,KAAKssD,SAED,CAAA,GAAyB,OAArBtsD,KAAKqsD,aAIb,MAAM,IAAIt8D,MAAM,yCAHhBiQ,KAAKusD,UAQNhL,YAAW,KAAQvhD,KAAKwsD,QAMlB3yD,GAAU5E,GAKjB,GAHA+K,KAAKqsD,aAAep3D,EACpB+K,KAAK6rD,aAAe,EACpB7rD,KAAKs5B,MAAQ,IAAInQ,GAAMnpB,KAAK+mC,EAAK5mC,MACrB,OAARlL,EACH+K,KAAKs5B,MAAMlQ,iBAAmB,SAE1B,CAAA,GAAY,OAARn0B,EAIR,MAAM,IAAIlF,MAAM,yCAHhBiQ,KAAKs5B,MAAMlQ,iBAAmB,MAU/B,GAJAppB,KAAKwqD,GAAmBlsD,MAAMC,YAAY,QAAS,MACnDyB,KAAKyqD,GAAqB9F,UAAY,KAEtC3kD,KAAKs5B,MAAM7P,gBAAkBuN,OAAOh3B,KAAKoqD,GAAcv4D,OAAS,GAC3DmO,KAAKmqD,GAAaa,QACtB,IAAK,IAAIyB,EAAoB,EAAGA,EAAYzsD,KAAK+mC,EAAK5mC,KAAKkb,UAAWoxC,IACrEzsD,KAAKs5B,MAAMozB,UAIb1sD,KAAKs5B,MAAM9I,kBAAkBxwB,KAAK+mC,EAAK5mC,MACvCH,KAAKs5B,MAAM7I,yBAEXzwB,KAAK+rD,aAAe/rD,KAAKs5B,MAAM8xB,gBAAgBprD,KAAKmqD,GAAaa,QAAShrD,KAAKqqD,GAAaW,QAAShrD,KAAKs5B,MAAM7P,iBAEhHzpB,KAAKosD,YAAcr9D,KAAK+f,KAAK9O,KAAK+rD,cAA8C,EAA9B/rD,KAAKs5B,MAAMlQ,mBAC7DppB,KAAKksD,iBAAmB,IAAI18D,aAAawQ,KAAK+rD,cAC9C/rD,KAAKmsD,iBAAmB,IAAI38D,aAAawQ,KAAK+rD,cAG9CxK,YAAW,KAAQvhD,KAAKwsD,QAGjB3yD,KACP,MAAMkyD,EAAuB/rD,KAAKksD,iBAAiB39D,OAC7CqhC,EAAqB5vB,KAAKs5B,MAAMlQ,iBAKhCujC,EAH0B,EAGcZ,EAI9C,IAAI58D,EAAgB,EACpB,MAAMy9D,EAA2B,IAAI9H,YAHP,GAJC,EAII6H,GAI7BppB,EAAiB,IAAI0iB,SAAS2G,GACpCrpB,EAAK4iB,UAAUh3D,EAAO,YAAY,GAAQA,GAAS,EACnDo0C,EAAK4iB,UAAUh3D,EAAO,GAVS,EAUJw9D,GAA8B,GAAOx9D,GAAS,EACzEo0C,EAAK4iB,UAAUh3D,EAAO,YAAY,GAAQA,GAAS,EACnDo0C,EAAK4iB,UAAUh3D,EAAO,YAAY,GAAQA,GAAS,EACnDo0C,EAAK4iB,UAAUh3D,EAAO,IAAY,GAAOA,GAAS,EAClDo0C,EAAK+iB,UAAUn3D,EAAO,GAAQ,GAAOA,GAAS,EAC9Co0C,EAAK+iB,UAAUn3D,EAhBiB,GAgBO,GAAOA,GAAS,EACvDo0C,EAAK4iB,UAAUh3D,EAAOygC,GAAY,GAAOzgC,GAAS,EAClDo0C,EAAK4iB,UAAUh3D,EAjBgB,EAiBTygC,EAlBU,GAkBqC,GAAOzgC,GAAS,EACrFo0C,EAAK+iB,UAAUn3D,EAAO09D,GAAkC,GAAO19D,GAAS,EACxEo0C,EAAK+iB,UAAUn3D,EAlBe,IAkBO,GAAOA,GAAS,EACrDo0C,EAAK4iB,UAAUh3D,EAAO,YAAY,GAAQA,GAAS,EACnDo0C,EAAK4iB,UAAUh3D,EArBgB,EAqBTw9D,GAA8B,GAAOx9D,GAAS,EAE5C,CAEvB,MAAM29D,EAAgB,MACtB,IAAK,IAAIx+D,EAAY,EAAGA,EAAIy9D,EAAcz9D,IAAK,CAC9C,IAAIy+D,EAAeh+D,KAAKmU,MAAMnU,KAAKmgB,KAAK,EAAGngB,KAAKyB,IAAI,EAAGwP,KAAKksD,iBAAiB59D,KAAOw+D,GAChFE,EAAej+D,KAAKmU,MAAMnU,KAAKmgB,KAAK,EAAGngB,KAAKyB,IAAI,EAAGwP,KAAKmsD,iBAAiB79D,KAAOw+D,GAEnFvpB,EAAK0pB,SAAS99D,EAAO49D,GAAM,GAAO59D,GAAS,EAC3Co0C,EAAK0pB,SAAS99D,EAAO69D,GAAM,GAAO79D,GAAS,GAmB9C25D,GADmB,IAAIoE,KAAK,CAACN,GAAc,CAAE33D,KAAM,cACxC+K,KAAK8pD,GAAUj4D,MAAM2O,OAAS,QAEzCR,KAAKugD,KAGE1mD,KACP,MAAMszD,EAAyB,KAC9B,MAGMC,EAA0B,KAC1BC,EAAkB,IAJExsC,OAAgB,OAIPysC,WAHN,EAG+BttD,KAAKs5B,MAAMlQ,iBAFlD,KAGfmkC,EAAiB,GAEjBzjB,EAAmB,IAAI0jB,WAAWxtD,KAAKksD,iBAAiB39D,QACxD40D,EAAoB,IAAIqK,WAAWxtD,KAAKmsD,iBAAiB59D,QAE/D,IAAK,IAAID,EAAY,EAAGA,EAAI0R,KAAKksD,iBAAiB39D,OAAQD,IACzDw7C,EAAKx7C,GAAKS,KAAKmU,MAFM,MAEAnU,KAAKmgB,KAAK,EAAGngB,KAAKyB,IAAI,EAAGwP,KAAKksD,iBAAiB59D,MACpE60D,EAAM70D,GAAKS,KAAKmU,MAHK,MAGCnU,KAAKmgB,KAAK,EAAGngB,KAAKyB,IAAI,EAAGwP,KAAKmsD,iBAAiB79D,MAGtE,IAAK,IAAIA,EAAY,EAAGA,EAAIw7C,EAAKv7C,OAAQD,GAAK8+D,EAAiB,CAC9D,MAAMK,EAAwB3jB,EAAK4jB,SAASp/D,EAAGA,EAAI8+D,GAC7CO,EAAyBxK,EAAMuK,SAASp/D,EAAGA,EAAI8+D,GAC/CQ,EAAcP,EAAWQ,aAAaJ,EAAWE,GACnDC,EAAOr/D,OAAS,GAAGg/D,EAAQ5+D,KAAKi/D,GAGrC,MAAMA,EAAcP,EAAWS,QAC3BF,EAAOr/D,OAAS,GAAGg/D,EAAQ5+D,KAAKi/D,GAGpC9E,GADmB,IAAIoE,KAAKK,EAAS,CAAEt4D,KAAM,cAClC+K,KAAK8pD,GAAUj4D,MAAM2O,OAAS,QACzCR,KAAKugD,MAGN,GAAI,WAAY1/B,OACfssC,QACM,CACN,IAAIY,EAAShxD,SAAS0C,cAAc,UACpCsuD,EAAOC,IAAM,wDACbD,EAAOE,OAASd,EAChBpwD,SAASwM,KAAKzM,YAAYixD,IAIpBl0D,KACP,MAAMsG,EAAaH,KAAK+mC,EAAK5mC,KAEvB+tD,EADkC,EACmBhgE,EAAOsF,aAAetF,EAAOqF,aAClF46D,EAFkC,EAEmBjgE,EAAOsF,aAG5DgxB,EAAyBrkB,EAAKumC,oBAC9B0nB,EAA8Br/D,KAAKgb,MAFHskD,IAEiC7pC,GAEjE8pC,EAA0BJ,EAAmB/tD,EAAKub,YAClD6yC,EAAyB,GAGzBC,EAAyB,GAC/B,GAAIxuD,KAAKmqD,GAAaa,QACrB,IAAK,IAAI7uC,EAAc,EAAGA,EAAMhc,EAAKkb,UAAWc,IAC/CqyC,EAAa7/D,KAAKwtB,GAGpB,IAAK,IAAIsyC,EAAoB,EAAGA,EAAYz3B,OAAOh3B,KAAKoqD,GAAcv4D,OAAQ48D,IAC7E,IAAK,IAAItyC,EAAchc,EAAKkb,UAAWc,EAAMhc,EAAKkb,UAAYlb,EAAKmb,WAAYa,IAC9EqyC,EAAa7/D,KAAKwtB,GAGpB,GAAInc,KAAKqqD,GAAaW,QACrB,IAAK,IAAI7uC,EAAchc,EAAKkb,UAAYlb,EAAKmb,WAAYa,EAAMhc,EAAKwb,SAAUQ,IAC7EqyC,EAAa7/D,KAAKwtB,GAIpB,MAAMuyC,EAAS,CAAC,CAAEC,QAAQ,EAAMvuD,SAAU,EAAGwuD,aAAc,EAAGvzD,SAAS,EAAOwzD,WAAW,IACzF,IAAIC,EAA6B,EAC7BC,GAAyB,EAC7B,IAAK,IAAI3uD,EAAkB,EAAGA,EAAUJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmBhB,IAC5G,GAAK2uD,GAAqE,GAApD/uD,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAASwX,YAAY,GAAG3iB,KAG/D,CACN,GAAI65D,GAAsB,GAAI,SAC9BJ,EAAO//D,KAAK,CAAEggE,QAAQ,EAAOvuD,QAASA,EAASwuD,YAAaE,IAAsBzzD,QAAS2E,KAAK+mC,EAAK5mC,KAAK8c,kBAAkB7c,GAAUyuD,WAAW,IACvH,GAAtBC,GAAyBA,SAL7BJ,EAAO//D,KAAK,CAAEggE,QAAQ,EAAOvuD,QAASA,EAASwuD,YAAa,EAAGvzD,SAAS,EAAMwzD,WAAW,IACzFE,GAAgB,EAQlB,MAAMC,EAA4B,IAAIrJ,GAAkB,MACxDqJ,EAAOC,YAAW,YAClBD,EAAOC,YAAY,GACnBD,EAAOE,YAAW,GAClBF,EAAOE,YAAYR,EAAOngE,QAC1BygE,EAAOE,YAAYhB,GAEnB,IAAK,MAAMiB,KAAST,EAAQ,CAC3BM,EAAOC,YAAW,YAElB,MAAMN,OAAEA,EAAMvuD,QAAEA,EAAOwuD,YAAEA,EAAWvzD,QAAEA,EAAOwzD,UAAEA,GAAcM,EAGvDC,EAA0BJ,EAAOK,gBACvCL,EAAOC,YAAY,GAEnB,IAAIK,EAAmB,EACnBC,EAAuB,EAC3B,MAAMC,EAAiB,SAAUxgD,GAChC,GAAIA,EAAOsgD,EAAU,MAAM,IAAIv/D,MAAM,wCACrCi/D,EAAOtI,wBAAwB13C,EAAOsgD,GACtCA,EAAWtgD,GAGNygD,EAAoB,SAAUC,EAAkC79D,GACrE,KAAMA,GAAS,GAAKA,GAAS,KAAO,MAAM,IAAI9B,MAAM,0CAA4C8B,GAChGm9D,EAAOvI,WAAW,IAA8BmI,GAChDI,EAAOW,eAAeD,GACtBV,EAAOW,eAAuB,EAAR99D,IAGvB,GAAI88D,EAAQ,CAGXa,EAAe,GACfR,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,GACrBX,EAAOY,eAAe,sCAEtBJ,EAAe,GACfR,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,IACrBX,EAAOtI,wBAAwB,GAC/BsI,EAAOa,YAAYzB,GAEnBoB,EAAe,GACfR,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,IACrBX,EAAOtI,wBAAwB,GAC/BsI,EAAOvI,WAAWtmD,EAAKub,aACvBszC,EAAOvI,WAAW,GAClBuI,EAAOvI,WAAW,IAClBuI,EAAOvI,WAAW,GAElB,MAAMqJ,EAAmB5hE,EAAOmE,OAAO8N,EAAKib,OAAO7oB,MAAM,KAAOrE,EAAOmE,OAAO8N,EAAKib,OAAO7oB,MAAM,GAC1FqL,EAAcuC,EAAKvC,IACzB,IAAImyD,EAAoBnyD,EAGxB,IAFiB,IAAN,EAANA,KAAemyD,GAAa,GAC7BD,IAASC,GAAa,GACnBA,EAAY,GAAGA,GAAa,GAEnCP,EAAe,GACfR,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,IACrBX,EAAOtI,wBAAwB,GAC/BsI,EAAOgB,UAAUD,GACjBf,EAAOvI,WAAWqJ,EAAU,EAAI,GAE5B9vD,KAAKmqD,GAAaa,UAASuE,GAAgBjB,EAAkBnuD,EAAKkb,WACtEm0C,EAAeD,GACfP,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,GACrBX,EAAOY,eAAe,cAEtB,IAAK,IAAInB,EAAoB,EAAGA,EAAYwB,SAASjwD,KAAKoqD,GAAcv4D,OAAQ48D,IAC/Ec,GAAgBjB,EAAkBnuD,EAAKmb,WACvCk0C,EAAeD,GACfP,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,GACrBX,EAAOY,eAAenB,EAAYz3B,OAAOh3B,KAAKoqD,GAAcv4D,OAAS,EAAI,cAAgB,YAI1F,GADImO,KAAKqqD,GAAaW,UAASuE,GAAgBjB,GAAmBnuD,EAAKwb,SAAWxb,EAAKkb,UAAYlb,EAAKmb,aACpGi0C,GAAgBjB,EAAkBE,EAAajgE,OAAQ,MAAM,IAAIwB,MAAM,qCAErE,CAGN,IAAImgE,EAAsB70D,EACvB,iBAAmB+E,EACnB,iBAAmBA,EACtBovD,EAAe,GACfR,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,GACrBX,EAAOY,eAAeM,GAGtBV,EAAe,GAAIC,EAAiB,IAAA,GACpCD,EAAe,GAAIC,EAAiB,IAAA,GACpCD,EAAe,GAAIC,EAAiB,EAA0ClB,GAC9EiB,EAAe,GAAIC,EAAiB,GAA0C,GAC9ED,EAAe,GAAIC,EAAiB,IAAA,KACpCD,EAAe,GAAIC,EAAiB,IAAA,KAEpC,IAAIU,GAA+B,EACnC,SAASC,EAAwBjzC,GAChC,MAAM3M,EAAyBrQ,EAAK+X,SAAS9X,GAASwX,YAAYuF,GAC5D9iB,EAAwBT,EAAa21C,cAAc/+B,EAAWnW,QAEpE,GAAI81D,GAAuBhzC,EAAiB,CAO3C,GANAgzC,EAAsBhzC,EACtBqyC,EAAeD,GACfP,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,GACrBX,EAAOY,eAAe,eAAiBzyC,EAAkB,KAEpD0xC,EAAW,CACf,IAAIwB,EAA4B,GAEhC,GAAc,MAAVh2D,GAAwC8S,MAAtB9S,EAAOE,YAC5B81D,EAAoBh2D,EAAOE,iBACrB,GAAmB,GAAfiW,EAAWvb,KAErBo7D,EAAoB,QACd,CACN,MAAMC,EAA6B9/C,EAAW8D,oBAAoBrf,KAC5Ds7D,EAAwC,GAAZD,GAAkD,GAAZA,EACxE,GAAmB,GAAf9/C,EAAWvb,MAA+C,GAAfub,EAAWvb,KAExDo7D,EADGh1D,EACiB,IAEAk1D,EAAmB,GAAK,QAEvC,GAAmB,GAAf//C,EAAWvb,KAA6B,CAClD,MAAMu7D,EAA8BD,EACjC3G,GAAa6G,qBACb7G,GAAa8G,uBACZF,EAAkBjiE,OAASiiB,EAAW6B,WACzCg+C,EAAoBG,EAAkBhgD,EAAW6B,gBAE5C,GAAmB,GAAf7B,EAAWvb,KACrBo7D,EAAoBE,EAAmB,GAAO,QACxC,GAAmB,GAAf//C,EAAWvb,MAA4C,GAAfub,EAAWvb,KAC7Do7D,EAAoBE,EAAmB,EAAI,OACrC,CAAA,GAAmB,GAAf//C,EAAWvb,KAGrB,MAAM,IAAIlF,MAAM,iCAFhBsgE,EAAoBE,EAAmB,GAAO,IAOhDf,EAAeD,GACfP,EAAOvI,WAAW,IAA8BmI,GAChDI,EAAOW,eAAeU,GAIvBb,EAAeD,GACf,IAAI/oB,GDze6B9E,ECyeqBvY,GAAMyV,6BAA6BpuB,EAAWxc,QDxehD,IAAlDjF,KAAKuB,IAAiB,kBAAboxC,EAAiC,MCye5C+tB,EAAiB,EAAoC1gE,KAAKyB,IAAI,IAAMzB,KAAKgb,MAAMy8B,KAG/EgpB,EAAeD,GACf,IAAIoB,EAAkE,IAAzCngD,EAAWoC,IAAM1kB,EAAO4H,UAAY,GAAY,GAC7E25D,EAAiB,GAAiC1gE,KAAKyB,IAAI,IAAMzB,KAAKgb,MAAM4mD,SD/e3CjvB,ECkfA,MAA/BvhC,EAAK6lB,WAAW5lB,EAAS,IAG5BgwD,EAAwB,GAGzB,IAAIQ,EAAwBjK,GACxBkK,EDtpBqC,ICupBrCC,GAA6C,EAEjD,MAAMC,EAAsB11D,EAAUnN,EAAOwJ,kBAAoBxJ,EAAOsE,KAAK2N,EAAKvC,KAAKlL,UACjF+mC,EAAwBp+B,EAAUnN,EAAOwK,cAAgB,EAE/D,IAAK,MAAMyjB,KAAOqyC,EAAc,CAC/B,MAAMtyC,EAA0B/b,EAAK6lB,WAAW5lB,EAAS+b,GAEzD,GAAe,MAAXD,EAAiB,CAEpB,MAAMiB,EAA0BjB,EAAQ1L,WAClCA,EAAyBrQ,EAAK+X,SAAS9X,GAASwX,YAAYuF,GAC5D9iB,EAAwBT,EAAa21C,cAAc/+B,EAAWnW,QACpE+1D,EAAwBjzC,GAExB,IAAI6zC,GAA2B,EAC3BC,GAAwB,EACxBC,EAAoB,EACxBF,EAAkBxgD,EAAW4D,WAAW/d,WACxC46D,EAAezgD,EAAW4D,WAAW7d,YACjC06D,EACCD,IACgB,GAAfxgD,EAAWvb,KACdi8D,EAAY,EACa,GAAf1gD,EAAWvb,KACrBi8D,EAAYhjE,EAAOyI,cAEnBoH,QAAQozD,MAAM,0DAA4D3gD,EAAWvb,OAIvFi8D,EAAYhjE,EAAOwI,aAGpB,IAAK,IAAI+iD,EAAoB,EAAGA,EAAYv9B,EAAQ3L,MAAMhiB,OAAQkrD,IAAa,CAC9E,MAAMhpC,EAAayL,EAAQ3L,MAAMkpC,GAE3B2X,EAAwB7B,EAAe9+C,EAAKlB,MAAQ4+C,EAC1D,IAAIkD,EAAkBD,EAClBE,EAAoB7gD,EAAKd,KAAK,GAAG3b,OACjCu9D,EAAsB9gD,EAAKd,KAAK,GAAGxU,SACvC,MAAMq2D,EAAwB,EAAE,GAAI,GAAI,GAAI,GACtCC,EAAwB,EAAE,GAAI,GAAI,GAAI,GACtCr6B,EAAoBroC,KAAKyB,IAAI0gE,EAAWzgD,EAAKf,QAAQnhB,QACrDmjE,EAAmB7C,EAAY9/D,KAAKmgB,IAAI,EAAGngB,KAAKgb,MA7PvB,GA6PmD0G,EAAKd,KAAK,GAAG3b,OAAS,IA7PzE,GAkQ/B,IAAI6b,EAAuBY,EAAKouB,mBAC5B8yB,EAAsB9hD,EAAe4pB,EACzC,IAAKo1B,EAAW,CACf,IAAI+C,EAAyBrD,EACzBsD,GAAyB,GAC7B,IAAK,IAAI/hD,EAAmB,EAAGA,EAAWW,EAAKd,KAAKphB,OAAQuhB,IAAY,CACvE,MAAM3U,EAAWsV,EAAKd,KAAKG,GAAU3U,SAAWs+B,EAChDm4B,EAAiB7iE,KAAKyB,IAAIohE,EAAgBz2D,EAAWozD,GACrDsD,EAAiB9iE,KAAKmgB,IAAI2iD,EAAgB12D,EAAWozD,GAgBtDoD,EAAc5iE,KAAKyB,IAAIohE,EAAgB7iE,KAAKmgB,IAAI2iD,EAAgBF,IAGjE,IAAK,IAAI7hD,EAAmB,EAAGA,EAAWW,EAAKd,KAAKphB,OAAQuhB,IAAY,CACvE,MAAMg9B,EAAsBskB,EAAgB3gD,EAAKd,KAAKG,GAAUd,KAAOm/C,EACjE2D,EAAwBrhD,EAAKd,KAAKG,GAAU9b,OAC5C+9D,EAA0BthD,EAAKd,KAAKG,GAAU3U,SAE9C5M,EAAiBu+C,EAAcukB,EACrC,IAAK,IAAIW,EAAmB,EAAGA,EAAWzjE,EAAQyjE,IAAY,CAC7D,MAAMC,EAAuBZ,EAAUW,EACjCE,EAAuBvJ,GAAK2I,EAAWQ,EAAeE,EAAWzjE,GAGjE4M,EAFyBwtD,GAAK4I,EAAaQ,EAAiBC,EAAWzjE,GAEnCkrC,EAAgBk4B,EACpDlvC,EAAoB1zB,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAI,MAAQzB,KAAKgb,MAAM,MAAU,EAAM5O,EAAWozD,MAEvF9nB,EAAqB13C,KAAKyB,IAAI,IAAMzB,KAAKgb,OD9kBb23B,EC8kB8CvY,GAAMyS,uBAAuBs2B,GD7kBjF,IAA7BnjE,KAAKuB,IAAIoxC,EAAY,QC+kBhBjf,GAAamuC,IAChBpB,EAAeyC,GACfjD,EAAOvI,WAAW,IAA0BmI,GAC5CI,EAAOW,eAA2B,IAAZltC,GACtBusC,EAAOW,eAAgBltC,GAAa,EAAK,KACzCmuC,EAAgBnuC,GAGbgkB,GAAcoqB,GAAmBhC,IACpCW,EAAeyC,GACfxC,EAAiB,GAAwChpB,GACzDoqB,EAAiBpqB,GAGlB,MAAM0rB,EAAwBF,GAAgBb,EAC9C,IAAK,IAAIn5B,EAAoB,EAAGA,EAAYb,EAAWa,IAAa,CACnE,IAAI/Z,EAAoBzN,EAAKf,QAAQuoB,GACrC,GAAI42B,EAAW,CACd3wC,GAAarO,EACb,MAAMuiD,EAAuB,CAC5B,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAED,GAAIl0C,EAAY,GAAKA,GAAak0C,EAAW7jE,OAAQ,MAAM,IAAIwB,MAAM,+CAAiDmuB,GACtHA,EAAYk0C,EAAWl0C,OACjB,CACN,GAAI+yC,GAAgBxgD,EAAKf,QAAQnhB,OAAS0pC,EAAY,GAAKA,GAAab,EAAY,EAAG,CACtF,MAAMi7B,GAAsBJ,EAAe1C,GAAgBrB,EACrDoE,EAAuBpkE,EAAOuF,iBAAmB06D,EAAmBjgE,EAAOsF,aAC3EjC,EAAmBxC,KAAKmU,MAAMmvD,EAAqBC,GACzDp0C,EAAYzN,EAAKf,QAAQuoB,EAAY7mC,EAAsBqf,EAAKf,QAAQnhB,OAAS0pC,EAAWznB,EAAWuC,eAAgBxhB,IAExH2sB,EAAY6yC,EAAc7yC,EAAYub,EAAgBk4B,EACxC,MAAVt3D,GAAmD8S,MAAjC9S,EAAO0B,uBAC5BmiB,GAAa,GAAK7jB,EAAO0B,uBACfV,IACV6iB,GAAa,IAAOtkB,EAAaK,iBAAiBrI,WAAW,gBAAgBsI,QAAQtI,WAAW,cAAcmK,wBAG3GV,IAAS6iB,GAAa,GAE3BA,EAAYnvB,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAI,IAAK0tB,IACtCuzC,EAAYx5B,GAAa/Z,EAEpBi0C,GAAgBX,EAAYv5B,IAAcw5B,EAAYx5B,KAC1Du3B,EAAeyC,GACfjD,EAAOvI,WAAW,IAAwBmI,GAC1CI,EAAOW,eAAe6B,EAAYv5B,IAClC+2B,EAAOW,eAAe+B,IAIxB,IAAK,IAAIz5B,EAAoB,EAAGA,EAAYb,EAAWa,KAClDk6B,GAAgBX,EAAYv5B,IAAcw5B,EAAYx5B,MACzDu3B,EAAeyC,GACfjD,EAAOvI,WAAW,IAAuBmI,GACzCI,EAAOW,eAAe8B,EAAYx5B,IAClC+2B,EAAOW,eAAe+B,GACtBF,EAAYv5B,GAAaw5B,EAAYx5B,IAKxCo5B,EAAUvkB,EACVwkB,EAAYQ,EACZP,EAAcQ,EAGf,MAAMQ,EAAsBhD,EAAe9+C,EAAKjB,IAAM2+C,EAGtD,IAAK,IAAIl2B,EAAoB,EAAGA,EAAYb,EAAWa,IACtDu3B,EAAe+C,GACfvD,EAAOvI,WAAW,IAAwBmI,GAC1CI,EAAOW,eAAe6B,EAAYv5B,IAClC+2B,EAAOW,eAAe+B,GAGvBZ,GAAoC,QAGjCA,IACHA,GAAoC,ED/0BE,KCi1BlCD,IACHA,EDl1BqC,ICo1BrCrB,EAAeD,GACfE,EAAiB,GAAwCoB,IAGtDD,GAAiBjK,KAEpBiK,EAAgBjK,GAChB6I,EAAeD,GACfP,EAAOvI,WAAW,IAA0BmI,GAC5CI,EAAOW,eAA+B,IAAhBiB,GACtB5B,EAAOW,eAAgBiB,GAAiB,EAAK,OAKhDrB,GAAgBjB,GAIlBkB,EAAeD,GACfP,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,IACrBX,EAAOtI,wBAAwB,GAG/BsI,EAAOwD,cAAcpD,EAAiBJ,EAAOK,gBAAkBD,EAAkB,OD1sBzC1tB,EC8sBzConB,GADmB,IAAIoE,KAAK,CAAC8B,EAAOyD,wBAAyB,CAAEx9D,KAAM,eAC1D+K,KAAK8pD,GAAUj4D,MAAM2O,OAAS,QAEzCR,KAAKugD,KAGE1mD,KACP,MAAM4qB,EAAqBzkB,KAAK+mC,EAAK5mC,KAAKmjB,aAAatjB,KAAKmqD,GAAaa,QAASh0B,OAAOh3B,KAAKoqD,GAAcv4D,OAAQmO,KAAKqqD,GAAaW,SAChI0H,EAAqBlzC,KAAKmzC,UAAUluC,EAAY,KAAM,MAE5DqkC,GADmB,IAAIoE,KAAK,CAACwF,GAAa,CAAEz9D,KAAM,qBACvC+K,KAAK8pD,GAAUj4D,MAAM2O,OAAS,SACzCR,KAAKugD,MAxzBkBqJ,GAAA8G,uBAAmC,CAC1D,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEuB9G,GAAA6G,qBAAiC,CACxD,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,WCvFWmC,GA0BZ/4D,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EAzBH/mC,KAAAinC,EAAuB,IACvBjnC,KAAAknC,EAAwB,GACxBlnC,KAAA6yD,GAA0B9zD,EAAI4oC,IAAI,CAAEC,iBAAkB,SACtD5nC,KAAA8yD,GAAyB/zD,EAAI4oC,IAAI,CAAEC,iBAAkB,SACrD5nC,KAAA+yD,GAAyBh0D,EAAImpC,KAAK,CAAEb,KAAM,OAAQU,OAAQ,eAAgBC,eAAgB,EAAGJ,iBAAkB,SAC/G5nC,KAAAgzD,GAAuC,GACvChzD,KAAAizD,GAA4Cl0D,EAAI4oC,IAAI,CAAEC,iBAAkB,SACxE5nC,KAAAqoC,EAAsBtpC,EAAI4oC,IAAI,CAAErpC,MAAO,4FAA6FkpC,MAAO,OAAQC,OAAQ,OAAQob,QAAS,OAAS7iD,KAAKinC,EAAe,IAAMjnC,KAAKknC,EAAe4b,oBAAqB,QACxQ9iD,KAAK6yD,GACL7yD,KAAK8yD,GACL9yD,KAAK+yD,GACL/yD,KAAKizD,IAGUjzD,KAAAsoC,UAAyB5pC,EAAKgL,IAAI,CAAE6+B,MAAO,YAAajqC,MAAO,gBAAkB0B,KAAKqoC,GAE9FroC,KAAAwoC,EAAkB,EAClBxoC,KAAAkiD,GAAkB,EAClBliD,KAAAkzD,GAAoB,EACpBlzD,KAAAmzD,GAAmB,EACnBnzD,KAAAyoC,GAAsB,EACtBzoC,KAAAozD,GAAkC,KAClCpzD,KAAAqzD,GAAwB,GACxBrzD,KAAAszD,IAA2B,EAiC3BtzD,KAAAwpC,GAAqBP,IAC5BA,EAAMQ,iBACNzpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7H9pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GAExCliD,KAAKkzD,GAAYlzD,KAAKuzD,GAASvzD,KAAKwoC,GACpCxoC,KAAKmzD,GAAWnzD,KAAKwzD,GAAQxzD,KAAKkiD,IAClCliD,KAAKoqC,MAGEpqC,KAAAiqC,GAAqBhB,IAC5BA,EAAMQ,iBACNzpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvH9pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GAExCliD,KAAKkzD,GAAYlzD,KAAKuzD,GAASvzD,KAAKwoC,GACpCxoC,KAAKmzD,GAAWnzD,KAAKwzD,GAAQxzD,KAAKkiD,IAClCliD,KAAKoqC,MAGEpqC,KAAAmqC,GAAmBlB,IAC1B,GAAmC,MAA/BjpC,KAAKsoC,UAAUmb,aAAsB,OACzC,MAAM/Z,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7H9pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKoqC,MAGEpqC,KAAAqqC,GAAmBpB,IAC1B,GAAmC,MAA/BjpC,KAAKsoC,UAAUmb,aAAsB,OACzC,IAAKzjD,KAAKyoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvH9pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKoqC,MAgCEpqC,KAAAsqC,GAAuBrB,IAC1BjpC,KAAKyoC,IACRzoC,KAAK+mC,EAAKqa,OAAOphD,KAAKozD,IACtBpzD,KAAKozD,GAAU,MAEhBpzD,KAAKyoC,GAAa,GAlHlB,IAAK,IAAIn6C,EAAY,EAAGA,GAAKJ,EAAO4J,uBAAwBxJ,GAAQ,EACnE0R,KAAK6yD,GAAS/1D,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYkI,MAAOq/B,GAAIh5C,EAAI,KAAQ0R,KAAKinC,EAAe,IAAM/4C,EAAO4J,uBAAyB,GAAK,EAAGyvC,EAAG,EAAGC,MAAO,EAAGC,OAAQznC,KAAKknC,KAE9K,IAAK,IAAI54C,EAAY,EAAGA,GAAKJ,EAAO4J,uBAAwBxJ,GAAQ,EACnE0R,KAAK8yD,GAAQh2D,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYmI,UAAWo/B,GAAIh5C,EAAI,KAAQ0R,KAAKinC,EAAe,IAAM/4C,EAAO4J,uBAAyB,GAAK,EAAGyvC,EAAG,EAAGC,MAAO,EAAGC,OAAQznC,KAAKknC,KAEjL,IAAK,IAAI54C,EAAY,EAAGA,EAAI,EAAGA,IAAK,CACnC,MAAM84C,EAAuBroC,EAAIqoC,KAAK,CAAEC,KAAM,eAAgBC,EAAItnC,KAAKinC,EAAmB,EAAJ34C,EAAQ,EAAIi5C,EAAG,EAAGC,MAAO,EAAGC,OAAQznC,KAAKknC,IAC/HlnC,KAAKgzD,GAAmBrkE,KAAKy4C,GAC7BpnC,KAAKizD,GAA2Bn2D,YAAYsqC,GAG7CpnC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKwpC,IAClDzsC,SAAS2tC,iBAAiB,YAAa1qC,KAAKmqC,IAC5CptC,SAAS2tC,iBAAiB,UAAW1qC,KAAKsqC,IAE1CtqC,KAAKsoC,UAAUoC,iBAAiB,aAAc1qC,KAAKiqC,IACnDjqC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKqqC,IAClDrqC,KAAKsoC,UAAUoC,iBAAiB,WAAY1qC,KAAKsqC,IACjDtqC,KAAKsoC,UAAUoC,iBAAiB,cAAe1qC,KAAKsqC,IAG7CzwC,GAASytC,GAChB,OAAQp5C,EAAO4J,uBAAyB,GAAKwvC,GAAKtnC,KAAKinC,EAAe,GAAK,GAGpEptC,GAAQ0tC,GACf,OAAOr5C,EAAO+J,cAAgB,EAAIsvC,EAAIvnC,KAAKknC,GAqDpCrtC,KACP,GAAImG,KAAKyoC,EAAY,CACpB,MAAMvxB,EAAelX,KAAKuzD,GAASvzD,KAAKwoC,GAClCmb,EAAc3jD,KAAKwzD,GAAQxzD,KAAKkiD,IAEhC1xC,EAAyBxQ,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAC1F57B,EAA+B/C,EAAW+C,cAEhD,GAAI2D,GAAQlX,KAAKkzD,GAAW,CAC3B,MAAM3sB,GAAiBod,EAAM3jD,KAAKmzD,KAAaj8C,EAAOlX,KAAKkzD,IACrDz9D,EAAiBuK,KAAKmzD,GAAWnzD,KAAKkzD,GAAY3sB,EAClDktB,EAAoB1kE,KAAK+f,KAAK/f,KAAKyB,IAAIwP,KAAKkzD,GAAWh8C,IACvDw8C,EAAoB3kE,KAAKmU,MAAMnU,KAAKmgB,IAAIlP,KAAKkzD,GAAWh8C,IAC9D,IAAK,IAAI5oB,EAAYmlE,EAAWnlE,GAAKolE,EAAWplE,IAC3CA,EAAI,GAAKA,GAAKJ,EAAO4J,yBACzByb,EAAczX,UAAUxN,GAAKS,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAO+J,aAAclJ,KAAKgb,MAAMzb,EAAIi4C,EAAQ9wC,MAIhG8d,EAAczX,UAAU/M,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAO4J,uBAAyB,EAAG/I,KAAKgb,MAAMmN,MAAWnoB,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAO+J,aAAclJ,KAAKgb,MAAM45C,KAE3J3jD,KAAKkzD,GAAYh8C,EACjBlX,KAAKmzD,GAAWxP,EAEhB3jD,KAAKozD,GAAU,IAAI7f,GAAgBvzC,KAAK+mC,EAAMv2B,EAAY+C,GAC1DvT,KAAK+mC,EAAK4sB,qBAAqB3zD,KAAKozD,KAY/Bv5D,SACN,MACM0Z,EADyBvT,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAChD57B,cAC1CqgD,EAAwBpiD,IACrB,EAAKA,EAAQtjB,EAAO+J,cAAiB+H,KAAKknC,EAGnD,IAAIqc,EAAiB9pD,EAAauG,KAAKknC,GACnCgB,EAAe,GACnB,IAAK,IAAI55C,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAyB,EAAGxJ,IAAK,CACnE,GAAkC,GAA9BilB,EAAczX,UAAUxN,GAAS,SACrC,IAAIulE,EAAep6D,GAAcnL,EAAI,KAAQ0R,KAAKinC,EAAe,IAAM/4C,EAAO4J,uBAAyB,IACvGowC,GAAQ,KAAO2rB,EAAO,IAAMtQ,EAAS,IACrCrb,GAAQ,KAAO2rB,EAAO,IAAMp6D,EAAam6D,EAAqBrgD,EAAczX,UAAUxN,KAAO,IAG9F,MAAMwlE,EAAqBF,EAAqBrgD,EAAczX,UAAU5N,EAAO4J,uBAAyB,IACxG,IAAK,IAAIxJ,EAAY,EAAGA,EAAI,EAAGA,IAAK,CACnC,MAAM84C,EAAuBpnC,KAAKgzD,GAAmB1kE,GACrD84C,EAAKvpC,aAAa,IAAKpE,EAAaq6D,IACpC1sB,EAAKvpC,aAAa,SAAUpE,EAAauG,KAAKknC,EAAgB4sB,IAG3D9zD,KAAKqzD,IAAiBnrB,IACzBloC,KAAKqzD,GAAgBnrB,EACrBloC,KAAK+yD,GAAOl1D,aAAa,IAAKqqC,IAE3BloC,KAAKszD,IAAmBtzD,KAAK+mC,EAAKgtB,YACrC/zD,KAAKszD,GAAkBtzD,KAAK+mC,EAAKgtB,UACjC/zD,KAAK8yD,GAAQx0D,MAAM01D,QAAUh0D,KAAK+mC,EAAKgtB,UAAY,GAAK,SCjL3D,MAAMvU,KAAEA,IAAS9gD,QAEJu1D,GAKZp6D,YAA4B6lD,EAA0C3Y,EAAqCmtB,GAA/El0D,KAAA0/C,MAAAA,EAA0C1/C,KAAA+mC,EAAAA,EAAqC/mC,KAAAk0D,GAAAA,EAJnGl0D,KAAAozD,GAAyB,KACzBpzD,KAAAm0D,GAAiB,GACjBn0D,KAAAo0D,GAAoB,GAYpBp0D,KAAAq0D,GAAa,KACyBr0D,KAAK+mC,EAAKutB,cAAct0D,KAAKozD,MACxCpzD,KAAKo0D,GAAYp0D,KAAKm0D,IACxDn0D,KAAKozD,GAAUpzD,KAAKk0D,GAAWl0D,KAAKo0D,GAAWp0D,KAAK0/C,MAAM7tD,OAC1DmO,KAAK+mC,EAAK4sB,qBAAqB3zD,KAAKozD,KAG7BpzD,KAAAu0D,GAAc,KACrBv0D,KAAK+mC,EAAKqa,OAAOphD,KAAKozD,IACtBpzD,KAAKozD,GAAU,MAlBf1T,EAAMhV,iBAAiB,QAAS1qC,KAAKq0D,IACrC3U,EAAMhV,iBAAiB,SAAU1qC,KAAKu0D,IAGhC16D,YAAYhI,GAClBmO,KAAKm0D,GAAStiE,EACdmO,KAAK0/C,MAAM7tD,MAAQusB,OAAOvsB,UAgBf2iE,GAMZ36D,YAA4B6lD,EAA0C3Y,EAAqCmtB,EAAqEO,GAApJz0D,KAAA0/C,MAAAA,EAA0C1/C,KAAA+mC,EAAAA,EAAqC/mC,KAAAk0D,GAAAA,EALnGl0D,KAAAozD,GAAyB,KACzBpzD,KAAAm0D,GAAiB,EACjBn0D,KAAAo0D,GAAoB,EAepBp0D,KAAAq0D,GAAa,KACyBr0D,KAAK+mC,EAAKutB,cAAct0D,KAAKozD,MACxCpzD,KAAKo0D,GAAYp0D,KAAKm0D,IACjC,MAAnBn0D,KAAKk0D,KACRl0D,KAAKozD,GAAUpzD,KAAKk0D,GAAWl0D,KAAKo0D,GAAWnE,SAASjwD,KAAK0/C,MAAM7tD,QACnEmO,KAAK+mC,EAAK4sB,qBAAqB3zD,KAAKozD,MAI9BpzD,KAAAu0D,GAAc,KACE,MAAnBv0D,KAAKk0D,KACRl0D,KAAK+mC,EAAKqa,OAAOphD,KAAKozD,IACtBpzD,KAAKozD,GAAU,OAtBhBpzD,KAAKsoC,UAAwBkX,GAAZ,EAAiB,CAAEjX,MAAO,UAAWjqC,MAAO,mCAAmD,CAAEA,MAAO,qBAAvBohD,GAClGA,EAAMhV,iBAAiB,QAAS1qC,KAAKq0D,IACrC3U,EAAMhV,iBAAiB,SAAU1qC,KAAKu0D,IAGhC16D,YAAYhI,GAClBmO,KAAKm0D,GAAStiE,EACdmO,KAAK0/C,MAAM7tD,MAAQusB,OAAOvsB,UChDf6iE,GAIZ76D,YAAY0pC,GAHJvjC,KAAAiO,EAAqB,EAI5BjO,KAAKgmD,GAAQziB,EAGP1pC,eACN,OAAOmG,KAAKiO,EAGNpU,aACN,GAAImG,KAAKiO,EAAa,EAAIjO,KAAKgmD,GAAMf,WAAY,MAAM,IAAIl1D,MAAM,uCACjE,MAAMgC,EAAiBiO,KAAKgmD,GAAM2O,UAAU30D,KAAKiO,GAAY,GAE7D,OADAjO,KAAKiO,GAAc,EACZlc,EAGD8H,aACN,OAAQmG,KAAK40D,aAAe,GAAO50D,KAAK40D,aAAe,EAAM50D,KAAK40D,YAG5D/6D,aACN,GAAImG,KAAKiO,EAAa,EAAIjO,KAAKgmD,GAAMf,WAAY,MAAM,IAAIl1D,MAAM,uCACjE,MAAMgC,EAAiBiO,KAAKgmD,GAAM6O,UAAU70D,KAAKiO,GAAY,GAE7D,OADAjO,KAAKiO,GAAc,EACZlc,EAGD8H,YACN,GAAImG,KAAKiO,EAAa,EAAIjO,KAAKgmD,GAAMf,WAAY,MAAM,IAAIl1D,MAAM,uCACjE,MAAMgC,EAAiBiO,KAAKgmD,GAAM8O,SAAS90D,KAAKiO,GAEhD,OADAjO,KAAKiO,IACElc,EAGD8H,WACN,GAAImG,KAAKiO,EAAa,EAAIjO,KAAKgmD,GAAMf,WAAY,MAAM,IAAIl1D,MAAM,uCACjE,MAAMgC,EAAiBiO,KAAKgmD,GAAM+O,QAAQ/0D,KAAKiO,GAE/C,OADAjO,KAAKiO,IACElc,EAGD8H,YACN,GAAImG,KAAKiO,EAAa,EAAIjO,KAAKgmD,GAAMf,WAAY,MAAM,IAAIl1D,MAAM,uCACjE,OAAOiQ,KAAKgmD,GAAM8O,SAAS90D,KAAKiO,GAG1BpU,gBACN,MAAM9H,EAAiBiO,KAAK40D,YAE5B,OADI7iE,GAAU,KAAMgM,QAAQnN,IAAI,wCAA0CmB,EAAS,WAAaiO,KAAKiO,GACrF,IAATlc,EAGD8H,yBACN,IAAI9H,EAAiB,EACrB,IAAK,IAAIzD,EAAY,EAAGA,EAAI,EAAGA,IAAK,CACnC,MAAM0mE,EAAmBh1D,KAAK40D,YAE9B,GADA7iE,GAAqB,IAAXijE,IACK,IAAXA,GAGH,MAFAjjE,IAAmB,EAKrB,OAAOA,EAGD8H,UAAUtL,GAChByR,KAAKiO,GAAc1f,EAGbsL,UACN,OAAOmG,KAAKgmD,GAAMf,WAAajlD,KAAKiO,EAG9BpU,sBAAsBtL,GAC5B,GAAIyR,KAAKiO,EAAa1f,EAASyR,KAAKgmD,GAAMf,WAAY,MAAM,IAAIl1D,MAAM,uCACtE,MAAMgC,EAA4B,IAAI2iE,GAAkB,IAAIzO,SAASjmD,KAAKgmD,GAAMn3C,OAAQ7O,KAAKgmD,GAAMN,WAAa1lD,KAAKiO,EAAY1f,IAEjI,OADAyR,KAAKi1D,UAAU1mE,GACRwD,GCvET,MAAMwtD,OAAEA,GAAM9nB,EAAEA,GAAC/tB,IAAEA,GAAG+1C,GAAEA,GAAEC,MAAEA,IAAUhhD,QAEzBw2D,GAgBZr7D,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EAfH/mC,KAAAm1D,GAA+BzV,GAAM,CAAEzqD,KAAM,OAAQmgE,OAAQ,8DAC7Dp1D,KAAAqgD,GAAmCd,GAAO,CAAEhX,MAAO,iBAEpDvoC,KAAAsoC,UAA4B5+B,GAAI,CAAE6+B,MAAO,qBAAsBjqC,MAAO,iBACrFmhD,GAAG,UACHhoB,GAAE,CAAEn5B,MAAO,sCACV,2KAEDm5B,GAAE,CAAEn5B,MAAO,sCACV,iKAED0B,KAAKm1D,GACLn1D,KAAKqgD,IAWErgD,KAAAugD,GAAS,KAChBvgD,KAAK+mC,EAAKqF,QAGJpsC,KAAAwgD,QAAU,KAChBxgD,KAAKm1D,GAAW1U,oBAAoB,SAAUzgD,KAAKq1D,IACnDr1D,KAAKqgD,GAAcI,oBAAoB,QAASzgD,KAAKugD,KAG9CvgD,KAAAq1D,GAAoB,KAC3B,MAAMC,EAAat1D,KAAKm1D,GAAWI,MAAO,GAC1C,IAAKD,EAAM,OAEX,MAAME,EAAoBF,EAAKxjE,KAAKstB,MAA+C,GAAxCk2C,EAAKxjE,KAAK2jE,YAAY,KAAO,IAAM,IAC9E,GAAiB,QAAbD,EAAqB,CACxB,MAAME,EAAqB,IAAIC,WAC/BD,EAAOhrB,iBAAiB,QAASzB,IAChCjpC,KAAK+mC,EAAKoa,OAAS,KACnBnhD,KAAK+mC,EAAK6uB,gBACV51D,KAAK+mC,EAAKqa,OAAO,IAAI9G,GAAWt6C,KAAK+mC,EAAc2uB,EAAO3jE,SAAS,GAAM,MAE1E2jE,EAAOG,WAAWP,QACZ,GAAiB,QAAbE,GAAoC,OAAbA,EAAoB,CACrD,MAAME,EAAqB,IAAIC,WAC/BD,EAAOhrB,iBAAiB,QAASzB,IAChCjpC,KAAK+mC,EAAKoa,OAAS,KACnBnhD,KAAK+mC,EAAK6uB,gBACV51D,KAAK81D,GAA4BJ,EAAO3jE,WAEzC2jE,EAAOK,kBAAkBT,QAEzBv3D,QAAQozD,MAAM,gCACdnxD,KAAKugD,MAvCNvgD,KAAKm1D,GAAWvV,SAChB2B,YAAW,IAAMvhD,KAAKm1D,GAAW3T,UAEjCxhD,KAAKm1D,GAAWzqB,iBAAiB,SAAU1qC,KAAKq1D,IAChDr1D,KAAKqgD,GAAc3V,iBAAiB,QAAS1qC,KAAKugD,IAuC3C1mD,GAAegV,GAGtB,MAAM6mD,EAAS,IAAIhB,GAAkB,IAAIzO,SAASp3C,IAClD,IAAImnD,EAAyC,KAO7C,MAAMtH,EAAkB,GACxB,KAAOgH,EAAOO,WAAW,CACxB,MAAMC,EAAoBR,EAAOS,aAC3BC,EAAsBV,EAAOS,aACnC,GAAa,YAATD,EACiB,MAAhBF,EACHA,EAAeN,EAAOW,sBAAsBD,GAE5Cr4D,QAAQozD,MAAM,uDAET,GAAa,YAAT+E,EAAkC,CAC5C,MAAMI,EAAiCZ,EAAOW,sBAAsBD,GAChEE,EAAYL,WACfvH,EAAO//D,KAAK,CACX+mE,OAAQY,EACRC,kBAAmBD,EAAYE,yBAC/BloC,OAAO,EACPmoC,eAAgB,SAKlBf,EAAOT,UAAUmB,GAInB,GAAoB,MAAhBJ,EAGH,OAFAj4D,QAAQozD,MAAM,iDACdnxD,KAAKugD,KAGN,MAAMmW,EAAqBV,EAAaW,aACRX,EAAaW,aAC7C,MAAMzI,EAA2B8H,EAAaW,aAK9C,IAAIC,EAAuC,EAC3C,MAAMC,EAAgC,GAChCC,EAAwC,GAAVJ,EACpC,GAAII,EACHD,EAAoBloE,KAAKioE,QAEzB,IAAK,IAAIG,EAAqB,EAAGA,EAAarI,EAAOngE,OAAQwoE,IAC5DF,EAAoBloE,KAAKooE,GA0B3B,MAAMC,EAA0B,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KACrHC,EAA0B,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KACrHC,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5EC,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5EC,EAAqC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnFC,EAAqC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjHC,EAAkC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/FC,EAA4B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzFC,EAAsC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnGC,EAAwC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3G,IAAIrJ,EAA8B,IAC9B1yC,EAAsB,EACtBq0C,EAAoB,EACpBD,GAAmB,EAGnB4H,EAA0B,EAC9B,OAAa,CACZ,IAAInB,EAA4Bv/B,OAAO0H,UACnCi5B,GAA2B,EAC/B,IAAK,MAAMZ,KAAcF,EAAqB,CAG7C,MAAM1H,EAAeT,EAAOqI,GAC5B,MAAQ5H,EAAM7gC,OAAS6gC,EAAMoH,mBAAqBmB,GAAiB,CAOlE,MACME,EAAoC,IADfzI,EAAMuG,OAAOmC,YACU1I,EAAMuG,OAAOd,YAAczF,EAAMsH,cAC7EqB,EAAkC,IAAdF,EACpBG,EAAqC,GAAdH,EAChB,KAATE,IACH3I,EAAMsH,cAAgBmB,GAGvB,IAAII,GAA8B,EAElC,OAAQF,GACP,KAAA,IAA4B,CAC3B,MAAMxoD,EAAgB6/C,EAAMuG,OAAOuC,gBACL9I,EAAMuG,OAAOuC,gBAC3CV,EAAWQ,GAAcppE,KAAK,CAAEqjE,SAAU0F,EAAiBpoD,MAAOA,EAAOoiD,SAAU,EAAKv3D,SAAU,EAAGqsC,kBAAmB,EAAGmqB,eAAgB,EAAGuH,IAAI,IACjJ,MACF,KAAA,IAA2B,CAC1B,MAAM5oD,EAAgB6/C,EAAMuG,OAAOuC,gBAC7BvG,EAAmBvC,EAAMuG,OAAOuC,gBACtC,GAAgB,GAAZvG,EACH6F,EAAWQ,GAAcppE,KAAK,CAAEqjE,SAAU0F,EAAiBpoD,MAAOA,EAAOoiD,SAAU,EAAKv3D,SAAU,EAAGqsC,kBAAmB,EAAGmqB,eAAgB,EAAGuH,IAAI,QAC5I,CACN,MAAMlkE,EAAiBjF,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAO0H,YAAc,EAAG7G,KAAKgb,MACxEof,GAAMgvC,6BAA6BzP,GAAuB2O,EAAyBU,QAE9EnlD,EAAc7jB,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAO6H,OAAQhH,KAAKgb,QAC1DutD,EAAsBS,GAAgB,IAAM,GAAK,GAAK7pE,EAAO4H,aAEhEyhE,EAAWQ,GAAcppE,KAAK,CAC7BqjE,SAAU0F,EACVpoD,MAAOA,EACPoiD,SAAU3iE,KAAKmgB,IAAI,EAAKngB,KAAKyB,IAAI,GAAMkhE,EAAW,IAAM,KACxDv3D,QAASi9D,EAAyBW,GAClCvxB,iBAAkBxyC,EAClB28D,cAAe/9C,EACfslD,IAAI,KAGL,MACF,KAAA,IAC4B/I,EAAMuG,OAAOuC,gBACV9I,EAAMuG,OAAOuC,gBAC1C,MACF,KAAA,IAAkC,CACjC,MAAMvI,EAAkBP,EAAMuG,OAAOuC,gBAC/BpmE,EAAgBs9D,EAAMuG,OAAOuC,gBAGnC,OAAQvI,GACP,KAAA,EACgC,GAA3BsH,EAAce,IAA+F,GAA3Bd,EAAcc,KACnGb,EAAkBa,GAAgBlmE,GAElC,MACF,KAAA,EACCwlE,EAAyBU,GAAgBlmE,EACxC,MACF,KAAA,GACCylE,EAAsBS,GAAgBlmE,EACrC,MACF,KAAA,GACC4lE,EAAiBM,GAAcppE,KAAK,CAAEqjE,SAAU0F,EAAiB1jE,OAAQm1B,GAAMivC,wBLvF7C3xB,EKuF+F50C,ELtFlI9C,KAAKuB,IAAIm2C,EAAa,IAAK,OKuFzB,MACF,KAAA,GACgC,GAA3BuwB,EAAce,IAA+F,GAA3Bd,EAAcc,KACnGZ,EAAkBY,GAAgBlmE,GAElC,MACF,KAAA,IACColE,EAAcc,GAAgBlmE,EAC7B,MACF,KAAA,IACCmlE,EAAce,GAAgBlmE,GAG/B,MACF,KAAA,IAAkC,CACjC,MAAMsI,EAAkBg1D,EAAMuG,OAAOuC,gBACrCb,EAAyBW,GAAgB59D,EACxC,MACF,KAAA,IAC+Bg1D,EAAMuG,OAAOuC,gBAC1C,MACF,KAAA,IAA8B,CAC7B,MAAMI,EAAclJ,EAAMuG,OAAOuC,gBAK3B98D,IAJcg0D,EAAMuG,OAAOuC,iBAEG,EAAKI,GAAO,KAAU,IAC3BnB,EAAkBa,GAAkD,IAAlCZ,EAAkBY,IAGnFP,EAAgBO,GAAcppE,KAAK,CAAEqjE,SAAU0F,EAAiBv8D,SAAUA,IACzE,MACF,KAAA,IACC,GAAe,KAAXy8D,EAAmC,CACtC,MAAMlI,EAAkBP,EAAMuG,OAAOuC,gBAC/B1pE,EAAiB4gE,EAAMuG,OAAOc,yBAGpC,GAAW,IAAP9G,EACHsI,GAAqB,EACrB7I,EAAMuG,OAAOT,UAAU1mE,QACjB,GAAW,IAAPmhE,EACVtB,EAAsBe,EAAMuG,OAAO4C,aACnCnJ,EAAMuG,OAAOT,UAAU1mE,EAAS,QAC1B,GAAW,IAAPmhE,EAA+C,CACzD,MAAM6I,EAAoBpJ,EAAMuG,OAAOd,YACvC,IAAI4D,EAA8BrJ,EAAMuG,OAAOd,YAY/C,IAX4CzF,EAAMuG,OAAOd,YACHzF,EAAMuG,OAAOd,YACnEzF,EAAMuG,OAAOT,UAAU1mE,EAAS,GAKhCmtB,EAA0B,EAAZ68C,EAIc,IAAN,EAAd78C,KAA0B88C,EAAsB,GAAK98C,EAAcxtB,EAAO8E,iBAAmB0oB,GAAuC,EAAxBxtB,EAAO6E,gBAC1H2oB,IAA6B,EAC7B88C,GAA4C,EAE7C98C,EAAc3sB,KAAKmgB,IAAIhhB,EAAO6E,eAAgBhE,KAAKyB,IAAItC,EAAO8E,eAAgB0oB,SAC7D,IAAPg0C,GACVK,EAAYZ,EAAMuG,OAAO+C,WACzB3I,EAAsC,GAA5BX,EAAMuG,OAAOd,YACvBzF,EAAMuG,OAAOT,UAAU1mE,EAAS,IAGhC4gE,EAAMuG,OAAOT,UAAU1mE,OAGlB,CAAA,GAAmB,KAAfqpE,GAAsC,KAAfA,EAOjC,OAFA75D,QAAQozD,MAAM,8BAAgCyG,QAC9C53D,KAAKugD,KANiD,CAEtD,MAAMhyD,EAAiB4gE,EAAMuG,OAAOc,yBACpCrH,EAAMuG,OAAOT,UAAU1mE,IAMvB,MACF,QAGC,OAFAwP,QAAQozD,MAAM,4BAA8B2G,QAC5C93D,KAAKugD,MAKFyX,GAAsB7I,EAAMuG,OAAOO,UACvC9G,EAAMoH,kBAAoBmB,EAAkBvI,EAAMuG,OAAOc,0BAEzDrH,EAAM7gC,OAAQ,EAGVwoC,IACHF,IACIA,EAA+BlI,EAAOngE,SACzCsoE,EAAoB,GAAKD,EACzBlI,EAAOkI,GAA8BL,mBAAqBmB,EAC1DnB,EAAoBxnE,KAAKyB,IAAI+lE,EAAmB7H,EAAOkI,GAA8BL,mBACrFoB,GAAkB,KAMjBxI,EAAM7gC,QACVqpC,GAAkB,EAClBpB,EAAoBxnE,KAAKyB,IAAI+lE,EAAmBpH,EAAMoH,oBAIxD,IAAIoB,EAGH,MAFAD,EAAkBnB,MLzMqB9vB,EKgNzC,MACMjiB,EAAyBz1B,KAAKmgB,IAAIhhB,EAAO0E,SAAU7D,KAAKyB,IAAItC,EAAO2E,SAAU9D,KAAKgb,MADlD,IACgFqkD,KAChHD,EAA2BD,EAAmBhgE,EAAOqF,aACrD0oC,EAAsB/tC,EAAOqF,aAAemoB,EAC5Cg9C,EAAwB3pE,KAAK+f,KAAK4oD,EAAkBvJ,EAAmBlyB,GAE7E,SAAS08B,EAAuB3G,GAC/B,OAAOjjE,KAAKgb,MAAMioD,EAAW7D,GAG9B,IAAIvwD,EAAcmyD,EAGlB,IAFID,IAASlyD,GAAO,GACH,IAAN,EAANA,KAAeA,GAAO,GACpBA,EAAM,GAAGA,GAAO,GACvBA,GAAY,GAGZ,MAAMuD,EAA2B,GAC3BE,EAA2B,GAC3BC,EAAyB,GAC/B,IAAK,IAAIstD,EAAsB,EAAGA,EAAc,GAAIA,IAAe,CAClE,GAAsC,GAAlC2I,EAAW3I,GAAargE,OAAa,SAEzC,MAAM6R,EAAmB,IAAIsX,EAEvBkhD,EAAoCh/D,EAAai/D,yBAAyBtB,EAAW3I,GAAa,GAAGz0D,SACrG2+D,EAAsD,MAAtBF,EAA8B,KAAOh/D,EAAa21C,cAAcqpB,GAEhGG,EAA4C,GAAfnK,EAC7B99C,EAA0BioD,GAAsC,MAAjBD,GAAkD,GAAzBA,EAAcz9D,QACtF+W,EAA0C,MAAjB0mD,GAAgD,GAAvBA,EAAcx+C,MAChE0+C,EAA2BloD,EAAiB5iB,EAAOwJ,kBAAoBxJ,EAAOsE,KAAKoL,GAAKlL,UACxF+mC,EAAwB3oB,EAAiB5iB,EAAOwK,cAAgB,EAChEugE,EAA4BnoD,EAAiB,GAAM,EACnDooD,EAA0BpoD,EAAiB5iB,EAAOyK,UAAY,EAAI,GAAKzK,EAAO2K,aAEhFiY,EACCioD,EACH13D,EAAcod,QAAQre,GAEtBiB,EAAc1S,KAAKyR,GAEVgS,EACV9Q,EAAY3S,KAAKyR,GAEjBe,EAAcxS,KAAKyR,GAGpB,IAAI+4D,EAA0B,EAC1BC,EAAyB,EACzBC,EAAkC,EAClCC,EAA+BprE,EAAO4H,UAE1C,GAAIijE,EAAkB,CACrB,MAAMQ,EAAwB,GAC9B,IAAI3sC,GAAsB,EACtB1Q,EAA0B,KAC1Bs9C,EAAwB,EACxBC,GAA+B,EAEnC,MAAM3/D,EAAsBF,EAAaygD,kBAAkB,oBACrDhgD,EAAiBT,EAAa21C,cAAcz1C,GAC5C0W,EAAyB,IAAI2B,GAAW,GAAO,GACrD3B,EAAW+O,eAAellB,EAAOO,UAAU,GAAO,GAAO,GAAO,GAChE4V,EAAWnW,OAASP,EACpBsG,EAAQwX,YAAYjpB,KAAK6hB,GAEzB,IAAK,IAAIkpD,EAAyB,EAAGA,GAAkBnC,EAAW3I,GAAargE,OAAQmrE,IAAkB,CACxG,MACMC,EADuBD,GAAkBnC,EAAW3I,GAAargE,OACrB,KAAOgpE,EAAW3I,GAAa8K,GAC3EE,EAAqC,MAAbD,EAAoB3iC,OAAO6iC,iBAAmBlB,EAAuBgB,EAAU3H,UAC7G,GAAIuH,EAAYhrE,OAAS,GAAKqrE,EAAgBJ,IAA+B,MAAbG,GAAqBA,EAAUzB,IAAK,CACnG,MAAM/7C,EAAcptB,KAAKmU,MAAMs2D,EAAgBv9B,GACzC+R,EAAuB7xB,EAAM8f,EAEnC,GAAIrP,GAAczQ,GAAkB,MAAXD,EAAiB,CAEzC,IADA0Q,IACOA,EAAazQ,GACnB/b,EAAQ0X,KAAK8U,GAAc,EAC3BA,IAED1Q,EAAU,IAAI5L,EACdlQ,EAAQyX,SAASlpB,KAAKutB,GACtB9b,EAAQ0X,KAAK8U,GAAcxsB,EAAQyX,SAAStpB,OAC5C2tB,EAAQ1L,WAAa,IAOjBipD,GAAuBjpD,EAAWxc,OAASqlE,KAC/C7oD,EAAWxc,OAASqlE,EACpB7oD,EAAWoC,IAAM0mD,EACjB9oD,EAAWqC,SAAW,EACtB4mD,GAAsB,GAGvB,MAAMK,EAAsB,GAC5B,IAAIC,EAAsBb,EACtBc,EAAsB,EACtBvzB,EAAqB,EACzB,IAAK,MAAMn3B,KAASiqD,EAAa,CAChC,MAAMzjD,EAAkC8wC,GAAiBt3C,IACf,GAAtCwqD,EAAUnlD,QAAQmB,EAAKna,YAC1Bm+D,EAAUnrE,KAAKmnB,EAAKna,WAErB8qC,EAAa13C,KAAKmgB,IAAIu3B,EAAY13C,KAAKgb,MAAM+L,EAAK9hB,OAASmlE,IAC3DY,EAAchrE,KAAKyB,IAAIupE,EAAajkD,EAAK7F,UACzC+pD,EAAcjrE,KAAKmgB,IAAI8qD,EAAalkD,EAAK7F,UAE1C,MAAMA,EAAmBlhB,KAAKyB,IAAIwpE,EAAajrE,KAAKmgB,IAAI6qD,EAAa,IAC/DttB,EAAwB+sB,EAAgBxrB,EACxCtB,EAAsB39C,KAAKyB,IAAIyrC,EAAaltC,KAAKyB,IAAIopE,EAAgB5rB,EAAcvB,EAA2B,EAAXx8B,IAEnGQ,EAAa,IAAIpB,GAAM,EAAGo9B,EAAeC,EAAajG,GAAY,GAExEh2B,EAAKf,QAAQnhB,OAAS,EACtB,IAAK,IAAIqwB,EAAqB,EAAGA,EAAa7vB,KAAKyB,IAAItC,EAAOwI,aAAcojE,EAAUvrE,QAASqwB,IAAc,CAC5G,MAAMq7C,EAAoBH,EAAUl7C,EAAa7vB,KAAKmgB,IAAI,EAAG4qD,EAAUvrE,OAASL,EAAOwI,gBAC/C,GAApC+Z,EAAKf,QAAQiF,QAAQslD,IACxBxpD,EAAKf,QAAQ/gB,KAAKsrE,GAGpB/9C,EAAQ3L,MAAM5hB,KAAK8hB,GAEnB8oD,EAAYhrE,OAAS,EAIL,MAAborE,GAAqBA,EAAUzB,IAA2C/qD,MAArCy5C,GAAiB+S,EAAUrqD,SACnEiqD,EAAY5qE,KAAKgrE,EAAUrqD,OAC3BkqD,EAAgBI,EAChBT,EAAkBQ,EAAUjI,SAC5B2H,EAA0BM,EAAUnzB,iBACpC8yB,EAAuBK,EAAUhJ,oBAG7B,CAMN,IAAIuJ,EAA8B,EAC9BC,EAAgC,EAChCC,EAA8B,EAC9BC,EAA+B,EACnC,SAASC,EAA0BtI,GAClC,KAAOoI,EAAsB5C,EAAgB5I,GAAargE,QAAUipE,EAAgB5I,GAAawL,GAAqBpI,UAAYA,GACjIkI,EAAsB1C,EAAgB5I,GAAawL,GAAqBj/D,SACxEi/D,IAGF,SAASG,EAA4BvI,GACpC,KAAOqI,EAAuB5C,EAAiB7I,GAAargE,QAAUkpE,EAAiB7I,GAAayL,GAAsBrI,UAAYA,GACrImI,EAAwB1C,EAAiB7I,GAAayL,GAAsBrmE,OAC5EqmE,IAIF,MAAMG,EAAoC,GACpCjB,EAAwB,GAC9B,IAAI3sC,GAAsB,EACtB1Q,EAA0B,KAC1Bu+C,EAA4B,EAC5BjB,EAAwB,EACxBkB,EAAmB,EACnBrpE,EAAqB,EAEzB,IAAK,IAAIsoE,KAAapC,EAAW3I,GAAc,CAC9C,MAAM2H,EAA4BoD,EAAU3H,SACtC4H,EAAwBjB,EAAuBpC,GAErD,GAAIgD,EAAYhrE,OAAS,GAAKqrE,EAAgBJ,EAAe,CAI5D,MAAM1rC,EAAmB/+B,KAAKmU,MAAMs2D,EAAgBv9B,GAC9ClO,EAAiBh/B,KAAK+f,KAAK8qD,EAAgB39B,GACjD,IAAK,IAAI9f,EAAc2R,EAAU3R,EAAM4R,EAAQ5R,IAAO,CACrD,MAAM6xB,EAAuB7xB,EAAM8f,EAC7B0+B,EAA2Bx+C,EAAMT,EAAcwyC,EAC/C0M,GAA0Bz+C,EAAM,GAAKT,EAAcwyC,EAEnDzhB,EAAwB19C,KAAKmgB,IAAI,EAAGsqD,EAAgBxrB,GACpDtB,EAAsB39C,KAAKyB,IAAIyrC,EAAa29B,EAAgB5rB,GAC5D6sB,EAA4B9rE,KAAKmgB,IAAIyrD,EAAkBF,GACvDK,EAA0B/rE,KAAKyB,IAAIoqE,EAAgBrE,GAEzD,GAAI9pB,EAAgBC,EAAa,CAChC,MAAM5yC,EAA6BF,EAAai/D,yBAAyBO,GACnE/+D,EAAwC,MAAfP,EAAuB,KAAOF,EAAa21C,cAAcz1C,GAGxF,GAAI8yB,GAAczQ,GAAkB,MAAXD,EAAiB,CAEzC,IADA0Q,IACOA,EAAazQ,GACnB/b,EAAQ0X,KAAK8U,GAAc,EAC3BA,IAQD,GANA1Q,EAAU,IAAI5L,EACdlQ,EAAQyX,SAASlpB,KAAKutB,GACtB9b,EAAQ0X,KAAK8U,GAAcxsB,EAAQyX,SAAStpB,OAID4e,MAAvCqtD,EAAoBpB,GAA8B,CACrD,MAAM5oD,EAAyB,IAAI2B,EAAWrB,EAAgBsB,GAC9DooD,EAAoBpB,GAAkB5oD,EAEnB,MAAf1W,GAAiC,MAAVO,GAAqC,GAAlBA,EAAOgB,SAAoByV,GACxEN,EAAW+O,eAAellB,EAAOO,SAAUkW,EAAgBsB,GAAc,GAAO,GAChF5B,EAAWnW,OAASP,IAEpB0W,EAAWqE,gBAAgBzC,EAAY,EAAyBtB,EAAc,EAAA,EAAgDA,EAAgBsB,GAC9I5B,EAAWzV,MAAQ,GAGpByV,EAAWxc,OAASqlE,EACpB7oD,EAAWoC,IAAM0mD,EACjB9oD,EAAWqC,SAAW,EAEtBzS,EAAQwX,YAAYjpB,KAAK6hB,GAG1B0L,EAAQ1L,WAAapQ,EAAQwX,YAAYjD,QAAQ6lD,EAAoBpB,IAO3BjsD,MAAvCqtD,EAAoBpB,KACvBoB,EAAoBpB,GAAgBplE,OAASjF,KAAKyB,IAAIgqE,EAAoBpB,GAAgBplE,OAAQqlE,GAClGmB,EAAoBpB,GAAgBxmD,IAAM7jB,KAAKyB,IAAIgqE,EAAoBpB,GAAgBxmD,IAAK0mD,IAK7F,MAAM7oD,EAAa,IAAIpB,GAAM,EAAGo9B,EAAeC,EAAa,GAAG,GAC/Dj8B,EAAKd,KAAKphB,OAAS,EAEnB+rE,EAA0BO,GAC1BN,EAA4BM,GAC5B,MAAME,EAA2BxB,EAAY,GAAKN,EAAoBD,EAChEgC,EAA8BjsE,KAAKgb,OAAOgxD,EAAmBb,GAAuBzgC,GACpFwhC,EAA0BlsE,KAAKgb,MAAMmwD,EAAsBlB,GACjE,IAAIkC,EAAoBnsD,EAAY,EAAG,EAAGhgB,KAAKgb,MAAMovD,EAAkBgB,IACvE1pD,EAAKd,KAAKhhB,KAAKusE,GASf,MAAMC,EAAgC,CACrC,CAAEtxC,KAAM,EAAGva,MAAO0rD,EAAqBhnE,OAAQknE,EAASlnE,OAAQonE,UAAU,EAAOC,WAAW,IAE7F,IAAIC,EAAuB,EAEvBC,GAAyBR,EAAmBb,GAAuBzgC,EACnE+hC,EAA6BrC,EAAkBgB,EACnD,IAAK,IAAItwC,EAAe4iB,EAAgB,EAAG5iB,GAAQ6iB,EAAa7iB,IAAQ,CACvE,MAAMmoC,EAAmBjjE,KAAKmgB,IAAI2rD,EAAmB9rE,KAAKyB,IAAIsqE,EAAkB,EAAG/rE,KAAKgb,MAAMokD,GAAoBtkC,EAAOmkB,MACnHytB,EAA2B5xC,EAAO4iB,EAClCivB,EAAqB7xC,GAAQ6iB,EAKnC4tB,EAA0BtI,GAC1BuI,EAA4BvI,GAC5B,MAAM2J,GAAqBzB,EAAsBa,GAAoBthC,EAC/DmiC,EAAyBzC,EAAkBgB,EAE3C0B,EAAuB9sE,KAAKgb,MAAM4xD,GAClCG,EAA8B/sE,KAAKC,IAAI2sE,EAAYE,GAAgB,IACnEE,EAAgChtE,KAAKC,IAAIusE,EAAgBxsE,KAAKgb,MAAMwxD,IAAkB,IACzFxsE,KAAKC,IAAI2sE,EAAYJ,IAAkB,EACvCxsE,KAAKmU,MAAMy4D,IAAc5sE,KAAKmU,MAAMq4D,GACjCH,EAAoBU,GAAsBC,EAE1CC,EAA4BjtE,KAAKgb,MAAM6xD,GACvCK,EAAmCltE,KAAKC,IAAI4sE,EAAiBI,GAAqB,IAClFE,EAAqCntE,KAAKC,IAAIwsE,EAAqBzsE,KAAKgb,MAAMyxD,IACjFzsE,KAAKC,IAAI4sE,EAAiBJ,IAAuB,EACjDzsE,KAAKmU,MAAM04D,IAAmB7sE,KAAKmU,MAAMs4D,GACtCW,EAAyBF,GAA2BC,EAK1D,GAHAX,EAAgBI,EAChBH,EAAqBI,EAEjBR,GAAYe,GAAiBT,EAAU,CAC1C,MAAMU,EAA2B,CAAEvyC,KAAM4xC,EAAkBnsD,MAAOusD,EAAc7nE,OAAQgoE,EAAmBZ,SAAUA,GAAYM,EAAUL,UAAWc,GAAiBT,GACjK1uB,EAAwBmuB,EAAcG,GAK5C,IAAIe,GAAkB,EAClBC,EAAwBtlC,OAAO0H,UAEnC,GAAI09B,EAAWhB,SAAU,CACxB,MAAM70B,GAAiB61B,EAAW9sD,MAAQ09B,EAAQ19B,QAAU8sD,EAAWvyC,KAAOmjB,EAAQnjB,MACtF,IAAI0yC,EAAmCxtE,KAAKC,IAAIu3C,GAC5Ci2B,GAA0B,EAC1BC,EAAgCzlC,OAAO0H,UAC3C,IAAK,IAAIg+B,EAAyBpB,EAAe,EAAGoB,EAAiBvB,EAAc5sE,OAAQmuE,IAAkB,CAC5G,MAAMC,EAA6BxB,EAAcuB,GACjD,GAAIC,EAAavB,SAAU,CAC1B,MAAMwB,EAA+B5vB,EAAQ19B,MAAQi3B,GAASo2B,EAAa9yC,KAAOmjB,EAAQnjB,MACpFgzC,EAAmB9tE,KAAKC,IAAI4tE,EAAuBD,EAAartD,OAClEitD,EAA2BM,IAC9BN,EAA2BM,EAC3BL,GAAiB,EACjBC,EAAwBC,IAIvBF,IACHH,GAAS,EACTC,EAAgBvtE,KAAKyB,IAAI8rE,EAAeG,IAI1C,GAAIL,EAAWf,UAAW,CACzB,MAAM90B,GAAiB61B,EAAWpoE,OAASg5C,EAAQh5C,SAAWooE,EAAWvyC,KAAOmjB,EAAQnjB,MACxF,IAAIizC,EAAiC/tE,KAAKC,IAAIu3C,GAC1Cw2B,GAAwB,EACxBC,EAA8BhmC,OAAO0H,UACzC,IAAK,IAAIg+B,EAAyBpB,EAAe,EAAGoB,EAAiBvB,EAAc5sE,OAAQmuE,IAAkB,CAC5G,MAAMC,EAA6BxB,EAAcuB,GACjD,GAAIC,EAAatB,UAAW,CAC3B,MAAM4B,EAA6BjwB,EAAQh5C,OAASuyC,GAASo2B,EAAa9yC,KAAOmjB,EAAQnjB,MACnFgzC,EAAmB9tE,KAAKC,IAAIiuE,EAAqBN,EAAa3oE,QAChE8oE,EAAyBD,IAC5BC,EAAyBD,EACzBE,GAAe,EACfC,EAAsBN,IAIrBK,IACHV,GAAS,EACTC,EAAgBvtE,KAAKyB,IAAI8rE,EAAeU,IAI1C,GAAIX,EAAQ,CACX,MAAMa,EAA2B/B,EAAcmB,GAC/C7rD,EAAKd,KAAKhhB,KAAKogB,EAAYmuD,EAAW5tD,MAAQ0rD,EAAqBkC,EAAWrzC,KAAMqzC,EAAWlpE,SAC/FsnE,EAAegB,EAGhBnB,EAAcxsE,KAAKytE,IAKrB,MAAMe,EAA+BhC,EAAcA,EAAc5sE,OAAS,GAC1EkiB,EAAKd,KAAKhhB,KAAKogB,EAAYouD,EAAe7tD,MAAQ0rD,EAAqBmC,EAAetzC,KAAMszC,EAAenpE,SAG3G,IAAIynB,EAAmBy9C,EACnBkE,EAAmB,EACvB,IAAK,MAAMC,KAAW5sD,EAAKd,KAC1B8L,EAAW1sB,KAAKyB,IAAIirB,EAAUy9C,EAAkBmE,EAAQliE,UACxDiiE,EAAWruE,KAAKyB,IAAI4sE,GAAWC,EAAQliE,UAIxCsV,EAAKf,QAAQnhB,OAAS,EACtB,IAAK,IAAIqwB,EAAqB,EAAGA,EAAa7vB,KAAKyB,IAAItC,EAAOwI,aAAc6iE,EAAYhrE,QAASqwB,IAAc,CAC9G,IAAIq7C,EAAoBV,EAAY36C,EAAa7vB,KAAKmgB,IAAI,EAAGqqD,EAAYhrE,OAASL,EAAOwI,eAAiBuiE,EAC5F,MAAV5+D,GAAmD8S,MAAjC9S,EAAO0B,yBAC5Bk+D,GAAa,GAAK5/D,EAAO0B,wBAE1B,MAAMuhE,EAAuBvuE,KAAKmgB,IAAIkuD,EAAUruE,KAAKyB,IAAIirB,EAAU1sB,KAAKgb,OAAOkwD,EAAYgB,GAAmBxhC,KAC9G,IAA2C,GAAvChpB,EAAKf,QAAQiF,QAAQ2oD,GAAqB,CAC7C7sD,EAAKf,QAAQ/gB,KAAK2uE,GAClB,MAAMttB,EAAiBv/B,EAAKjB,IAAMiB,EAAKlB,MACvCmrD,GAAY4C,EAAettB,EAC3B3+C,GAAc2+C,GAGhB9zB,EAAQ3L,MAAM5hB,KAAK8hB,MAMuB,GAAzC8oD,EAAY5kD,QAAQglD,EAAUrqD,QACjCiqD,EAAY/6C,OAAO+6C,EAAY5kD,QAAQglD,EAAUrqD,OAAQ,GAEtDqqD,EAAUzB,KACbqB,EAAY5qE,KAAKgrE,EAAUrqD,OAC3B6pD,EAAkBQ,EAAUjI,SAC5B0H,EAAiBO,EAAUx/D,QAC3Bk/D,EAA0BM,EAAUnzB,iBACpC8yB,EAAuBK,EAAUhJ,eAGlC8J,EAAoBlE,EACpBiD,EAAgBI,EAGjB,MAAM2D,EAAuB7C,EAAWrpE,EACxC+O,EAAQuX,OAAU7G,GAAkBsB,EAAgB,EAAIrjB,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAIwP,KAAK+mC,EAAKy2B,kBAAmBzuE,KAAKgb,MAAOwzD,EAAe,GAAM,OAG5I,KAAOn9D,EAAQ0X,KAAKvpB,OAASmqE,GAC5Bt4D,EAAQ0X,KAAKnpB,KAAK,GAMpB,SAAS8uE,EAAgBvlD,EAAqB2iC,GAC7C,KAAO3iC,EAAS3pB,OAASssD,GAAW,CACnC,IAAI6iB,EAA4BxlD,EAAS3pB,OAAS,EAC9CovE,EAA4BzlD,EAAS3pB,OAAS,EAC9CqvE,EAA0B5mC,OAAO0H,UACjCm/B,EAAqB7mC,OAAO0H,UAChC,IAAK,IAAIo/B,EAAwB,EAAGA,EAAgB5lD,EAAS3pB,OAAS,EAAGuvE,IACxE,IAAK,IAAIC,EAAwBD,EAAgB,EAAGC,EAAgB7lD,EAAS3pB,OAAQwvE,IAAiB,CACrG,MAAMC,EAAoB9lD,EAAS4lD,GAC7BG,EAAoB/lD,EAAS6lD,GACnC,IAAIG,EAAoB,EACpBC,EAAe,EACnB,IAAK,IAAIjnB,EAAmB,EAAGA,EAAW8mB,EAASlmD,KAAKvpB,QAAU2oD,EAAW+mB,EAASnmD,KAAKvpB,OAAQ2oD,IACnE,GAA3B8mB,EAASlmD,KAAKo/B,IAA6C,GAA3B+mB,EAASnmD,KAAKo/B,IAAgBgnB,IACnC,GAA3BF,EAASlmD,KAAKo/B,IAA6C,GAA3B+mB,EAASnmD,KAAKo/B,IAAgBinB,IAE/DD,GAAaN,IACZM,EAAYN,GAAmBO,EAAON,KACzCH,EAAoBI,EACpBH,EAAoBI,EACpBH,EAAkBM,EAClBL,EAAaM,GAOjB,MAAMH,EAAoB9lD,EAASwlD,GAC7BO,EAAoB/lD,EAASylD,GAC7BS,EAAkCJ,EAASpmD,YAAYrpB,OACvD8vE,EAA+BL,EAASnmD,SAAStpB,OACvD,IAAK,MAAMiiB,KAAcytD,EAASrmD,YACjComD,EAASpmD,YAAYjpB,KAAK6hB,GAE3B,IAAK,MAAM0L,KAAW+hD,EAASpmD,SAC9BqE,EAAQ1L,YAAc4tD,EACtBJ,EAASnmD,SAASlpB,KAAKutB,GAExB,IAAK,IAAIg7B,EAAmB,EAAGA,EAAW8mB,EAASlmD,KAAKvpB,QAAU2oD,EAAW+mB,EAASnmD,KAAKvpB,OAAQ2oD,IACnE,GAA3B8mB,EAASlmD,KAAKo/B,IAA6C,GAA3B+mB,EAASnmD,KAAKo/B,KACjD8mB,EAASlmD,KAAKo/B,GAAY+mB,EAASnmD,KAAKo/B,GAAYmnB,GAKtDnmD,EAASsG,OAAOm/C,EAAmB,IAIrCF,EAAgBt8D,EAAejT,EAAOmK,sBACtColE,EAAgBp8D,EAAenT,EAAOqK,sBACtCklE,EAAgBn8D,EAAapT,EAAOuK,oBAwBpCuH,KAAK+mC,EAAK6uB,gBACV,IAAK,MAAMx1D,KAAWJ,KAAK+mC,EAAK5mC,KAAK+X,SAAU9X,EAAQ2X,OAAQ,EAC/D/X,KAAK+mC,EAAKoa,OAAS,KACnBnhD,KAAK+mC,EAAKqa,OAAO,IAzBjB,cAA+BxV,GAC9B/xC,YAAYwzC,GACX9B,QACA,MAAMprC,EAAaktC,EAAIltC,KACvBA,EAAKwa,MAAQ6J,EACbrkB,EAAKub,YAAcA,EACnBvb,EAAKvC,IAAMA,EACXuC,EAAKib,MAAQ,GACbjb,EAAKob,OAAS,EACdpb,EAAK0b,OAAS,EAEdoyB,GAAwB9sC,GACxB8sC,GAAwB5sC,GACxB4sC,GAAwB3sC,GAExBtB,KAAKkuC,OAAO,IAAIC,GAAsBd,EAAKlsC,EAAeE,EAAeC,IACzEnB,EAAKkb,UAAY,EACjBlb,EAAKmb,WAAanb,EAAKwb,SACvB3b,KAAK+rC,KACLsB,EAAI9C,SAASC,YAMuBxqC,KAAK+mC,IAAO,GAAM,UCh2B7Cu3B,GAoJLzkE,qBAAqB0kE,GAC3B,OAAQA,GACP,IAAK,SACJv+D,KAAKM,EAAc8F,YAAcpG,KAAKw+D,GACtC,MACD,IAAK,aACJx+D,KAAKM,EAAc8F,YAAcpG,KAAKy+D,GACtC,MACD,IAAK,iBACJz+D,KAAKM,EAAc8F,YAAcpG,KAAK0+D,KA5JjBJ,GAAAE,GAAwB,SAGxBF,GAAAI,GAAgC,i5DA2DhCJ,GAAAG,GAA4B,yrEAmE7B1+D,EAAY+H,sBAAsB/H,EAAYqH,mPAOnDrH,EAAYqH,gIAGNrH,EAAY+H,oDACZ/H,EAAYqH,8CAKZk3D,GAAAh+D,EAAkCvD,SAASwM,KAAKzM,YAAY4B,EAAKJ,MAAM,CAAErJ,KAAM,cC/IxG,MAAMsqD,OAAEA,GAAM71C,IAAEA,GAAG+1C,GAAEA,GAAEC,MAAEA,GAAKE,OAAEA,GAAMC,OAAEA,IAAWnhD,QAEtCigE,GA2BZ9kE,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EA1BH/mC,KAAA4+D,GAAmClf,GAAM,CAAEphD,MAAO,gCAAiCrJ,KAAM,SAAU+qD,KAAM,IAAKnuD,MAAO,MACrHmO,KAAA6+D,GAAmCjf,GAAO,CAAEthD,MAAO,gBACnEuhD,GAAO,CAAEhuD,MAAO,UAAY,iBAC5BguD,GAAO,CAAEhuD,MAAO,cAAgB,sBAChCguD,GAAO,CAAEhuD,MAAO,kBAAoB,4BAEpBmO,KAAAqgD,GAAmCd,GAAO,CAAEhX,MAAO,iBACnDvoC,KAAAsgD,GAAiCf,GAAO,CAAEhX,MAAO,aAAcjqC,MAAO,cAAgB,QAEvF0B,KAAAsoC,UAA4B5+B,GAAI,CAAE6+B,MAAO,qBAAsBjqC,MAAO,iBACrFmhD,GAAG,cACH/1C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,sBACZ,uBAED0B,KAAK4+D,IAENl1D,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,gBAAkB0B,KAAK6+D,KAE/Dn1D,GAAI,CAAEpL,MAAO,+EACZ0B,KAAKsgD,IAENtgD,KAAKqgD,IAyBErgD,KAAAugD,GAAS,KAChBvgD,KAAK+mC,EAAKqF,QAGJpsC,KAAAwgD,QAAU,KAChBxgD,KAAKsgD,GAAYG,oBAAoB,QAASzgD,KAAK0gD,IACnD1gD,KAAKqgD,GAAcI,oBAAoB,QAASzgD,KAAKugD,IACrDvgD,KAAK4+D,GAAene,oBAAoB,OAAQke,GAAa/d,IAC7D5gD,KAAKsoC,UAAUmY,oBAAoB,UAAWzgD,KAAK6gD,KAG5C7gD,KAAA6gD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQ7iD,SAAwC,IAAjBgrC,EAAM8X,SACxD/gD,KAAK0gD,MAUC1gD,KAAA0gD,GAAe,KACtB7/B,OAAOC,aAAakgC,QAAQ,aAAchhD,KAAK6+D,GAAchtE,OAC7DgvB,OAAOC,aAAakgC,QAAQ,eAAgBhhD,KAAK4+D,GAAe/sE,OAChEmO,KAAK+mC,EAAKoa,OAAS,KACnBnhD,KAAK+mC,EAAK+3B,WAAa9+D,KAAK6+D,GAAchtE,MAC1CysE,GAAOS,cAAc/+D,KAAK+mC,EAAK+3B,YAC/B9+D,KAAK+mC,EAAKi4B,gBAAuBn+C,OAAOC,aAAaC,QAAQ,iBAAmB,KAAtD,EAC1B/gB,KAAK+mC,EAAKy2B,kBAAoBtvE,EAAO2K,aAAemH,KAAK+mC,EAAKi4B,cAC9Dh/D,KAAK+mC,EAAKk4B,iBAAmBj/D,KAAK+mC,EAAKi4B,cAAgBh/D,KAAK+mC,EAAK5mC,KAAKsX,IAAM,EAC5EzX,KAAK+mC,EAAKqF,QArDVpsC,KAAK4+D,GAAepuE,IAAM,IAC1BwP,KAAK4+D,GAAe1vD,IAAM,IAC1B,MAAMgwD,EAA6Br+C,OAAOC,aAAaC,QAAQ,gBAC5C,MAAfm+C,IACHl/D,KAAK4+D,GAAe/sE,MAAQqtE,GAG7B,MAAMC,EAA4Bt+C,OAAOC,aAAaC,QAAQ,cAC5C,MAAdo+C,IACHn/D,KAAK6+D,GAAchtE,MAAQstE,GAG5Bn/D,KAAK4+D,GAAehf,SACpB2B,YAAW,IAAMvhD,KAAK4+D,GAAepd,UAErCxhD,KAAKsgD,GAAY5V,iBAAiB,QAAS1qC,KAAK0gD,IAChD1gD,KAAKqgD,GAAc3V,iBAAiB,QAAS1qC,KAAKugD,IAClDvgD,KAAK4+D,GAAel0B,iBAAiB,OAAQi0B,GAAa/d,IAC1D5gD,KAAKsoC,UAAUoC,iBAAiB,UAAW1qC,KAAK6gD,IAoBzChnD,UAAuBovC,GAC9B,MAAMyW,EAA4CzW,EAAM6X,OACxD,IAAIjvD,GAAiB6tD,EAAM7tD,MAC3B6tD,EAAM7tD,MAAQ9C,KAAKmgB,KAAKwwC,EAAMlvD,IAAKzB,KAAKyB,KAAKkvD,EAAMxwC,IAAKrd,IAAU,ICrEpE,MAAM0tD,OAAEA,GAAM71C,IAAEA,GAAG+1C,GAAEA,GAAEC,MAAEA,IAAUhhD,QAEtB0gE,GA0DZvlE,YAAYwlE,GAzDKr/D,KAAAinC,EAAuB,IACvBjnC,KAAAknC,EAAwB,GACxBlnC,KAAAyiD,GAAwB1jD,EAAImpC,KAAK,CAAEb,KAAMtnC,EAAY+H,mBAAoB8/B,iBAAkB,SAC3F5nC,KAAA0iD,GAAwB3jD,EAAI4oC,IAAI,CAAEC,iBAAkB,SACpD5nC,KAAA2iD,GAA2B5jD,EAAI4oC,IAAI,CAAEC,iBAAkB,SACvD5nC,KAAAs/D,GAA8BvgE,EAAImpC,KAAK,CAAEb,KAAM,OAAQU,OAAQhoC,EAAY2H,cAAesgC,eAAgB,EAAGJ,iBAAkB,SAC/H5nC,KAAAu/D,GAA8BxgE,EAAIygE,OAAO,CAAEn4B,KAAMtnC,EAAY2H,cAAeqgC,OAAQ,OAAQ03B,EAAG,MAC/Fz/D,KAAA0/D,GAA4B3gE,EAAImpC,KAAK,CAAEb,KAAM,OAAQU,OAAQhoC,EAAYwH,YAAaygC,eAAgB,EAAGJ,iBAAkB,SAC3H5nC,KAAA2/D,GAA8B5gE,EAAImpC,KAAK,CAAEb,KAAM,OAAQU,OAAQhoC,EAAY8H,WAAYmgC,eAAgB,EAAGJ,iBAAkB,SAC5H5nC,KAAA4/D,GAA8B7gE,EAAIygE,OAAO,CAAEn4B,KAAMtnC,EAAY8H,WAAYkgC,OAAQ,OAAQ03B,EAAG,MAC5Fz/D,KAAA6/D,GAA0B9gE,EAAIs3C,KAAK,CAAE/O,EAAG,QAASC,EAAG,SAAUK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,yBAA2B,KAC7IrnC,KAAA+/D,GAA0BhhE,EAAIs3C,KAAK,CAAE/O,EAAG,QAASC,EAAG,SAAUK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,yBAA2B,KAC7IrnC,KAAAggE,GAA0BjhE,EAAIs3C,KAAK,CAAE/O,EAAG,QAASC,EAAG,SAAUK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,yBAA2B,KAC7IrnC,KAAAigE,GAA2BlhE,EAAIs3C,KAAK,CAAE/O,EAAG,MAAOC,EAAG,SAAUK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,yBAA2B,MAC5IrnC,KAAAkgE,GAA4BnhE,EAAIs3C,KAAK,CAAE/O,EAAG,MAAOC,EAAG,OAAQK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,yBAA2B,OAC3IrnC,KAAAmgE,GAA8BphE,EAAIs3C,KAAK,CAAE/O,EAAG,MAAOC,EAAG,OAAQK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,uBAAyB,UAC3IrnC,KAAAogE,GAA8BrhE,EAAIs3C,KAAK,CAAE/O,EAAG,QAASC,EAAG,OAAQK,iBAAkB,OAAQk4B,YAAa,MAAOO,UAAW,qBAAsBh5B,KAAM,uBAAyB,QAC9KrnC,KAAAsgE,GAA8BvhE,EAAIqoC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,OAAQC,OAAQ,MAAOH,EAAG,KAAMC,EAAG,OAAQF,KAAMtnC,EAAY+H,qBACvI9H,KAAAugE,GAA+BxhE,EAAIqoC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,OAAQC,OAAQ,MAAOH,EAAG,KAAMC,EAAG,OAAQF,KAAMtnC,EAAY+H,qBACxI9H,KAAAwgE,GAA+BzhE,EAAIqoC,KAAK,CAAEQ,iBAAkB,OAAQH,OAAQ,MAAOH,EAAG,KAAMC,EAAG,OAAQF,KAAM,uBAC7GrnC,KAAAygE,GAA+B1hE,EAAIqoC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,MAAOC,OAAQ,MAAOF,EAAG,OAAQF,KAAMtnC,EAAYgI,gBAC9H/H,KAAA0gE,GAAgC3hE,EAAIqoC,KAAK,CAAEQ,iBAAkB,OAAQH,OAAQ,MAAOH,EAAG,KAAMC,EAAG,OAAQF,KAAM,uBAC9GrnC,KAAA2gE,GAAgC5hE,EAAIqoC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,MAAOC,OAAQ,MAAOF,EAAG,OAAQF,KAAMtnC,EAAYgI,gBAC/H/H,KAAA4gE,GAAyB7hE,EAAIk5C,KAAK,CAAE4oB,aAAc,OAAQprE,OAAQ,QAClEuK,KAAA8gE,GAAyB/hE,EAAIk5C,KAAK,CAAE4oB,aAAc,SAAUprE,OAAQ,QACpEuK,KAAA+gE,GAAyBhiE,EAAIk5C,KAAK,CAAE4oB,aAAc,MAAOprE,OAAQ,QACjEuK,KAAAghE,GAAgCjiE,EAAIkiE,eAAe,CAAEC,GAAI,aAAcC,cAAe,kBAAoBnhE,KAAK4gE,GAAQ5gE,KAAK8gE,GAAQ9gE,KAAK+gE,IACzI/gE,KAAAohE,GAAwBriE,EAAIsiE,KAAK,GAAIrhE,KAAKghE,IAC1ChhE,KAAAqoC,EAAsBtpC,EAAI4oC,IAAI,CAAErpC,MAAO,qBAAqByB,EAAYqH,2DAA4DogC,MAAO,OAAQC,OAAQ,OAAQob,QAAS,OAAS7iD,KAAKinC,EAAe,IAAMjnC,KAAKknC,EAAe4b,oBAAqB,QACxQ9iD,KAAKohE,GACLphE,KAAKyiD,GACLziD,KAAK0iD,GACL1iD,KAAK2iD,GACL3iD,KAAKs/D,GACLt/D,KAAK0/D,GACL1/D,KAAK2/D,GACL3/D,KAAKu/D,GACLv/D,KAAK4/D,GACL5/D,KAAK6/D,GACL7/D,KAAK+/D,GACL//D,KAAKggE,GACLhgE,KAAKigE,GACLjgE,KAAKkgE,GACLlgE,KAAKmgE,GACLngE,KAAKogE,GACLpgE,KAAKsgE,GACLtgE,KAAKugE,GACLvgE,KAAKwgE,GACLxgE,KAAK0gE,GACL1gE,KAAKygE,GACLzgE,KAAK2gE,IAGU3gE,KAAAsoC,UAAyB5pC,EAAKgL,IAAI,CAAE6+B,MAAO,GAAIjqC,MAAO,mDAAqD0B,KAAKqoC,GAK/H,IAAK,IAAI/5C,EAAY,EAAGA,GAAK,EAAGA,IAC/B0R,KAAK0iD,GAAO5lD,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYkI,MAAOq/B,EAAIh5C,EAAI0R,KAAKinC,EAAe,EAAK,EAAGM,EAAG,EAAGC,MAAO,EAAGC,OAAQznC,KAAKknC,KAE9H,IAAK,IAAI54C,EAAY,EAAGA,GAAK,EAAGA,GAAK,EACpC0R,KAAK2iD,GAAU7lD,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYmI,UAAWo/B,EAAIh5C,EAAI0R,KAAKinC,EAAe,EAAK,EAAGM,EAAG,EAAGC,MAAO,EAAGC,OAAQznC,KAAKknC,KAGrIlnC,KAAKshE,GAAiBjC,EAIhBxlE,cAAc6e,EAAqB6oD,EAAuB5oD,EAAsB6oD,GACtFxhE,KAAKwgE,GAAa3iE,aAAa,QAAS,GAAK9O,KAAKyB,IAAIwP,KAAKinC,EAAcvuB,GAAe1Y,KAAKinC,EAAe,KAC5GjnC,KAAKygE,GAAa5iE,aAAa,IAAK,GAAK9O,KAAKyB,IAAIwP,KAAKinC,EAAcs6B,GAAiBvhE,KAAKinC,EAAe,KAC1GjnC,KAAK0gE,GAAc7iE,aAAa,QAAS,GAAK9O,KAAKyB,IAAIwP,KAAKinC,EAActuB,GAAgB3Y,KAAKinC,EAAe,KAC9GjnC,KAAK2gE,GAAc9iE,aAAa,IAAK,GAAK9O,KAAKyB,IAAIwP,KAAKinC,EAAcu6B,GAAkBxhE,KAAKinC,EAAe,KAGtGptC,SACN,MAAM+5D,EAAwBpiD,GACtBziB,KAAKmgB,IAAI,GAAI,EAAKsC,EAAQ,IAAOxR,KAAKknC,EAAgB,GAAK,GAGnE,IAAIu6B,EAAoB,EACpBC,EAA4B,EAC5BC,GAA0B,EAC1Bz5B,EAAe,GACf05B,EAAqB,CAAC,GAAI,GAAI,IAClC,IAAK,IAAItzE,EAAY,EAAGA,EAAI,GAAIA,IAAK,CAEpC,IAAIuzE,GAAwB7hE,KAAKshE,GAAeQ,iBAAiBjwE,MACjEgwE,EAAgBA,EAAe,GAAKA,EAAe,GAAMA,EAAe,EACxE,IAAIE,GAA2B/hE,KAAKshE,GAAeU,uBAAuBnwE,MAC1EkwE,EAAmBA,EAAkB,GAAKA,EAAkB,GAAM,GAAKA,EAAkB,IAAM,GAC/F,IAAIE,GAA4BjiE,KAAKshE,GAAeY,qBAAqBrwE,MACrEswE,GAA+BniE,KAAKshE,GAAec,2BAA2BvwE,MAC9E8xB,EAAqB,EAAJr1B,EAAU,GAC3BgzB,EAAoB,EAAI,KACxBqC,GAAUs+C,EAEb3gD,EAAY,GAAK,MAAQqC,EAAS,EAAIs+C,GAAoBJ,GAAgB,EAAIA,IAEtEl+C,EAASw+C,IAEjB7gD,EAAY,IAA2C,IAApCqC,EAAS,EAAIw+C,GAA6B,KAAQJ,EAAkB,MAAQ,EAAIA,KAI3F,GAALzzE,IACH45C,GAAQ,OAASzuC,EAAam6D,EAAqBtyC,IAAc,KAI9DogD,EAAoBC,IACnBA,GAAkB,IACrBC,EAASD,IAAmB,KAAOloE,EAAanL,EAAI0R,KAAKinC,EAAe,IAAM,IAAMxtC,EAAam6D,EAAqBtyC,IAAc,KAErIsgD,EAASF,IAAsB,KAAOjoE,EAAanL,EAAI0R,KAAKinC,EAAe,IAAM,IAAMxtC,EAAam6D,EAAqBtyC,IAAc,KAE9G,GAArBogD,GAA6C,GAAlBC,GAA4C,GAArBD,KACrD1hE,KAAKu/D,GAAU1hE,aAAa,KAAMpE,EAAanL,EAAI0R,KAAKinC,EAAe,KACvEjnC,KAAKu/D,GAAU1hE,aAAa,KAAMpE,EAAam6D,EAAqBtyC,MAE5C,GAArBogD,IACH1hE,KAAK4/D,GAAU/hE,aAAa,KAAMpE,EAAanL,EAAI0R,KAAKinC,EAAe,KACvEjnC,KAAK4/D,GAAU/hE,aAAa,KAAMpE,EAAam6D,EAAqBtyC,MAGrEqgD,EAAiBD,GAGD,GAAbD,GAA+B,GAAbngD,GACrB4mB,GAAQ,KACR05B,EAASF,IAAsB,OAE/Bx5B,GAAQ,KACR05B,EAASF,IAAsB,MAEhCx5B,GAAQzuC,EAAanL,EAAI0R,KAAKinC,EAAe,IAAM,IAAMxtC,EAAam6D,EAAqBtyC,IAAc,IACzGsgD,EAASF,IAAsBjoE,EAAanL,EAAI0R,KAAKinC,EAAe,IAAM,IAAMxtC,EAAam6D,EAAqBtyC,IAAc,IAChImgD,EAAYngD,EAGa,GAArBogD,GAA2BpzE,GAA2B,GAAtB6zE,EAA2B,GAC9DT,IAEwB,GAArBA,GAA2BpzE,GAAwB,GAAnB2zE,EAAwB,GAC3DP,IAIF,MAAM5N,EAAqBF,EAAqB6N,GAC5CA,EAAY,IACfv5B,GAAQ,MAAQloC,KAAKinC,EAAe,GAAK,IAAMxtC,EAAaq6D,GAAc,IAC1E8N,EAASF,IAAsB,MAAQ1hE,KAAKinC,EAAe,GAAK,IAAMxtC,EAAaq6D,GAAc,KAGlG9zD,KAAKs/D,GAAYzhE,aAAa,IAAK+jE,EAAS,IAC5C5hE,KAAK0/D,GAAU7hE,aAAa,IAAK+jE,EAAS,IAC1C5hE,KAAK2/D,GAAY9hE,aAAa,IAAK+jE,EAAS,IAC5C5hE,KAAKyiD,GAAM5kD,aAAa,IAAKqqC,EAAO,KAAOloC,KAAKinC,EAAe,IAAMxtC,EAAaq6D,GAAc,MAAQ9zD,KAAKinC,EAAe,IAAMxtC,EAAauG,KAAKknC,GAAiB,QAAUztC,EAAauG,KAAKknC,GAAiB,cAIvMm7B,GAkGZxoE,YAAoBktC,EAA4Bod,GAA5BnkD,KAAA+mC,EAAAA,EAA4B/mC,KAAAmkD,GAAAA,EAhGxCnkD,KAAAsiE,cAA+B,IAAIlD,GAAcp/D,MAEzCA,KAAAqkD,GAAiC9E,GAAO,CAAEjhD,MAAO,cAAerJ,KAAM,WAEtE+K,KAAAuiE,iBAAqC7iB,GAAM,CAAE3jC,MAAO,cAAezd,MAAO,uCAAwCrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAK,KAAMrd,MAAO,IAAKmuD,KAAM,MACxKhgD,KAAAwiE,gBAAoC9iB,GAAM,CAAE3jC,MAAO,aAAczd,MAAO,uCAAwCrJ,KAAM,QAASzE,IAAK,OAAQ0e,IAAK,QAASrd,MAAO,OAAQmuD,KAAM,QAC/KhgD,KAAAoiE,2BAA+C1iB,GAAM,CAAE3jC,MAAO,uBAAwBzd,MAAO,wCAAyCrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAK,MAAOrd,MAAO,IAAKmuD,KAAM,SAC7LhgD,KAAAkiE,qBAAyCxiB,GAAM,CAAE3jC,MAAO,oBAAqBzd,MAAO,wCAAyCrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAK,IAAKrd,MAAO,IAAKmuD,KAAM,SAClLhgD,KAAAgiE,uBAA2CtiB,GAAM,CAAE3jC,MAAO,mBAAoBzd,MAAO,wCAAyCrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAK,KAAMrd,MAAO,KAAMmuD,KAAM,MACrLhgD,KAAA8hE,iBAAqCpiB,GAAM,CAAE3jC,MAAO,gBAAiBzd,MAAO,wCAAyCrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAK,KAAMrd,MAAO,KAAMmuD,KAAM,MAC5KhgD,KAAAyiE,iBAAqC/iB,GAAM,CAAE3jC,MAAO,cAAezd,MAAO,uCAAwCrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAK,IAAKrd,MAAO,IAAKmuD,KAAM,SAU/KhgD,KAAA0iE,sBAAgC,EAChC1iE,KAAA2iE,oBAA8B,EAC9B3iE,KAAA4iE,uBAAiC,EACjC5iE,KAAA6iE,qBAA+B,EAEtB7iE,KAAAqgD,GAAmCd,GAAO,CAAEhX,MAAO,iBACnDvoC,KAAAsgD,GAAiCf,GAAO,CAAEhX,MAAO,aAAcjqC,MAAO,cAAgB,QACtF0B,KAAA8iE,GAAkCvjB,GAAO,CAAEjhD,MAAO,cAAgB,SAEnE0B,KAAAsoC,UAA4B5+B,GAAI,CAAE6+B,MAAO,qBAAsBjqC,MAAO,iBACrFmhD,GAAG,mBACH/1C,GAAI,CAAEpL,MAAO,qHACZ0B,KAAKqkD,IAEN36C,GAAI,CAAEpL,MAAO,qFACZ0B,KAAKsiE,cAAch6B,WAEpB5+B,GAAI,CAAEpL,MAAO,uHACZoL,GAAI,CAAEpL,MAAO,6DAA6DyB,EAAYwH,gBACrF,IAEDmC,GAAI,CAAEpL,MAAO,8DAA8DyB,EAAY2H,kBACtF,SAEDgC,GAAI,CAAEpL,MAAO,4DAA4DyB,EAAY8H,eACpF,WAGF6B,GAAI,CAAEpL,MAAO,uHACZoL,GAAI,CAAEpL,MAAO,6DAA6DyB,EAAYwH,gBACrF,cAEDmC,GAAI,CAAEpL,MAAO,mCACZ0B,KAAKoiE,4BAEN14D,GAAI,CAAEpL,MAAO,iCACZ0B,KAAKkiE,uBAIPx4D,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,6DAA6DyB,EAAYwH,gBACrF,UAEDmC,GAAI,CAAEpL,MAAO,mCACZ0B,KAAKgiE,wBAENt4D,GAAI,CAAEpL,MAAO,iCACZ0B,KAAK8hE,mBAGPp4D,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,8DAA8DyB,EAAYwH,gBACtF,gBAEDvH,KAAKuiE,kBAEN74D,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,8DAA8DyB,EAAYwH,gBACtF,eAEDvH,KAAKwiE,iBAEN94D,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,8DAA8DyB,EAAYwH,gBACtF,gBAEDvH,KAAKyiE,kBAEN/4D,GAAI,CAAEpL,MAAO,+EACZ0B,KAAKsgD,GACLtgD,KAAK8iE,IAEN9iE,KAAKqgD,IA2CErgD,KAAA+iE,GAAgB,KACvB/iE,KAAK0iE,wBACD1iE,KAAK0iE,uBAAyB,IACjC1iE,KAAK2iE,qBAAuB,KAEzB3iE,KAAK+mC,EAAK5mC,KAAKuY,YAAc1Y,KAAK2iE,sBACrC3iE,KAAK2iE,oBAAsB3iE,KAAK+mC,EAAK5mC,KAAKuY,YAC1C1Y,KAAK0iE,sBAAwB,IAG9B1iE,KAAK4iE,yBACD5iE,KAAK4iE,wBAA0B,IAClC5iE,KAAK6iE,sBAAwB,KAE1B7iE,KAAK+mC,EAAK5mC,KAAKwY,aAAe3Y,KAAK6iE,uBACtC7iE,KAAK6iE,qBAAuB7iE,KAAK+mC,EAAK5mC,KAAKwY,aAC3C3Y,KAAK4iE,uBAAyB,IAG/B5iE,KAAKsiE,cAAcU,cAAchjE,KAAK+mC,EAAK5mC,KAAKuY,YAAa1Y,KAAK2iE,oBAAqB3iE,KAAK+mC,EAAK5mC,KAAKwY,aAAc3Y,KAAK6iE,sBAEzHhiD,OAAOoiD,sBAAsBjjE,KAAK+iE,KAG3B/iE,KAAAskD,GAAc,KACjBtkD,KAAK+mC,EAAKzN,MAAM7L,SACnBztB,KAAKmkD,GAAYI,KACjBvkD,KAAKwkD,qBAELxkD,KAAK+mC,EAAKzN,MAAM5I,YAChB1wB,KAAKmkD,GAAYM,KACjBzkD,KAAKwkD,qBAkBCxkD,KAAAq0D,GAAa,MACfr0D,KAAKkiE,qBAAqBrwE,OAASmO,KAAKoiE,2BAA2BvwE,QACvEmO,KAAKkiE,qBAAqBzhB,oBAAoB,QAASzgD,KAAKkjE,IAC5DljE,KAAKkiE,qBAAqBrwE,MAAQmO,KAAKoiE,2BAA2BvwE,MAClEmO,KAAKkiE,qBAAqBx3B,iBAAiB,QAAS1qC,KAAKkjE,KAE1DljE,KAAKsiE,cAAcrf,SACnBjjD,KAAKmjE,MAIEnjE,KAAAkjE,GAAgC,MAClCljE,KAAKkiE,qBAAqBrwE,OAASmO,KAAKoiE,2BAA2BvwE,QACvEmO,KAAKoiE,2BAA2B3hB,oBAAoB,QAASzgD,KAAKq0D,IAClEr0D,KAAKoiE,2BAA2BvwE,MAAQmO,KAAKkiE,qBAAqBrwE,MAClEmO,KAAKoiE,2BAA2B13B,iBAAiB,QAAS1qC,KAAKq0D,KAEhEr0D,KAAKsiE,cAAcrf,SACnBjjD,KAAKmjE,MAGEnjE,KAAAugD,GAAS,KAEhBvgD,KAAK8hE,iBAAiBjwE,MAAQ,GAAKmO,KAAKojE,mBACxCpjE,KAAKgiE,uBAAuBnwE,MAAQ,GAAKmO,KAAKqjE,yBAC9CrjE,KAAKkiE,qBAAqBrwE,MAAQ,GAAKmO,KAAKsjE,uBAC5CtjE,KAAKoiE,2BAA2BvwE,MAAQ,GAAKmO,KAAKujE,6BAClDvjE,KAAKuiE,iBAAiB1wE,MAAQ,GAAKmO,KAAKwjE,mBACxCxjE,KAAKwiE,gBAAgB3wE,MAAQ,GAAKmO,KAAKyjE,kBACvCzjE,KAAKyiE,iBAAiB5wE,MAAQ,GAAKmO,KAAK0jE,mBAExC1jE,KAAKmjE,KACLnjE,KAAK+mC,EAAKoa,OAAS,MAGbnhD,KAAAwgD,QAAU,KAChBxgD,KAAKsgD,GAAYG,oBAAoB,QAASzgD,KAAK0gD,IACnD1gD,KAAK8iE,GAAariB,oBAAoB,QAASzgD,KAAK2jE,IACpD3jE,KAAKqgD,GAAcI,oBAAoB,QAASzgD,KAAKugD,IACrDvgD,KAAKsoC,UAAUmY,oBAAoB,UAAWzgD,KAAK0kD,gBACnD1kD,KAAKuiE,iBAAiB9hB,oBAAoB,QAASzgD,KAAKq0D,IACxDr0D,KAAKwiE,gBAAgB/hB,oBAAoB,QAASzgD,KAAKq0D,IACvDr0D,KAAKkiE,qBAAqBzhB,oBAAoB,QAASzgD,KAAKkjE,IAC5DljE,KAAK8hE,iBAAiBrhB,oBAAoB,QAASzgD,KAAKq0D,IACxDr0D,KAAKgiE,uBAAuBvhB,oBAAoB,QAASzgD,KAAKq0D,IAC9Dr0D,KAAKoiE,2BAA2B3hB,oBAAoB,QAASzgD,KAAKq0D,IAClEr0D,KAAKyiE,iBAAiBhiB,oBAAoB,QAASzgD,KAAKq0D,IAExDr0D,KAAKqkD,GAAY5D,oBAAoB,QAASzgD,KAAKskD,KAG7CtkD,KAAA0kD,eAAkBzb,IACe,UAAzBA,EAAM6X,OAAQ7iD,SAAwC,IAAjBgrC,EAAM8X,SACxD/gD,KAAK0gD,KAEe,IAAjBzX,EAAM8X,UACT/gD,KAAKskD,KACLrb,EAAMQ,mBAIAzpC,KAAA2jE,GAAiB,KAEW,MAA/B3jE,KAAK8hE,iBAAiBjwE,OAA+C,QAA9BmO,KAAKwiE,gBAAgB3wE,OAAkD,KAA/BmO,KAAKuiE,iBAAiB1wE,OAAmD,KAAnCmO,KAAKkiE,qBAAqBrwE,OAAqD,MAArCmO,KAAKgiE,uBAAuBnwE,OAA0D,KAAzCmO,KAAKoiE,2BAA2BvwE,OAA+C,KAA/BmO,KAAKyiE,iBAAiB5wE,QAErRmO,KAAK8hE,iBAAiBjwE,MAAQ,KAC9BmO,KAAKwiE,gBAAgB3wE,MAAQ,OAC7BmO,KAAKuiE,iBAAiB1wE,MAAQ,IAC9BmO,KAAKkiE,qBAAqBrwE,MAAQ,IAClCmO,KAAKgiE,uBAAuBnwE,MAAQ,KACpCmO,KAAKoiE,2BAA2BvwE,MAAQ,IACxCmO,KAAKyiE,iBAAiB5wE,MAAQ,IAE9BmO,KAAKq0D,OAICr0D,KAAAmjE,GAAiB,KAExBnjE,KAAK+mC,EAAKqa,OAAO,IAAIhQ,GAAsBpxC,KAAK+mC,GAC7C/mC,KAAK8hE,iBAAiBjwE,MAAQ,IAAMmO,KAAK8hE,iBAAiBjwE,MAAQ,IAAOmO,KAAK8hE,iBAAiBjwE,MAAQ,GACvGmO,KAAKgiE,uBAAuBnwE,MAAQ,IAAMmO,KAAKgiE,uBAAuBnwE,MAAQ,GAAM,IAAMmO,KAAKgiE,uBAAuBnwE,MAAQ,IAAM,IACrImO,KAAKkiE,qBAAqBrwE,OAC1BmO,KAAKoiE,2BAA2BvwE,OAChCmO,KAAKwiE,gBAAgB3wE,OACrBmO,KAAKuiE,iBAAiB1wE,OACtBmO,KAAKyiE,iBAAiB5wE,QACrB,IAGImO,KAAA0gD,GAAe,KACtB1gD,KAAKmjE,KACLnjE,KAAK+mC,EAAKoa,OAAS,MAnLnBnhD,KAAKsgD,GAAY5V,iBAAiB,QAAS1qC,KAAK0gD,IAChD1gD,KAAK8iE,GAAap4B,iBAAiB,QAAS1qC,KAAK2jE,IACjD3jE,KAAKqgD,GAAc3V,iBAAiB,QAAS1qC,KAAKugD,IAClDvgD,KAAKsoC,UAAUoC,iBAAiB,UAAW1qC,KAAK0kD,gBAEhD1kD,KAAK8hE,iBAAiBjwE,MAAQ,IAAMmO,KAAK+mC,EAAK5mC,KAAKqY,WAAa,EAAgC,GAA5BxY,KAAK+mC,EAAK5mC,KAAKqY,WAAkB,EAAIxY,KAAK+mC,EAAK5mC,KAAKqY,YACxHxY,KAAKgiE,uBAAuBnwE,MAAQ,IAAMmO,KAAK+mC,EAAK5mC,KAAKoY,iBAAmB,EAAsC,GAAlCvY,KAAK+mC,EAAK5mC,KAAKoY,iBAAwB,GAA6C,IAAvCvY,KAAK+mC,EAAK5mC,KAAKoY,iBAAmB,IAC/JvY,KAAKkiE,qBAAqBrwE,MAAQ,GAAKmO,KAAK+mC,EAAK5mC,KAAKmY,eACtDtY,KAAKoiE,2BAA2BvwE,MAAQ,GAAKmO,KAAK+mC,EAAK5mC,KAAKkY,qBAC5DrY,KAAKuiE,iBAAiB1wE,MAAQ,GAAKmO,KAAK+mC,EAAK5mC,KAAKgY,WAClDnY,KAAKwiE,gBAAgB3wE,MAAQ,GAAKmO,KAAK+mC,EAAK5mC,KAAKiY,UACjDpY,KAAKyiE,iBAAiB5wE,MAAQ,GAAKmO,KAAK+mC,EAAK5mC,KAAKsY,WAElDzY,KAAKojE,oBAAsBpjE,KAAK8hE,iBAAiBjwE,MACjDmO,KAAKqjE,0BAA4BrjE,KAAKgiE,uBAAuBnwE,MAC7DmO,KAAKsjE,wBAA0BtjE,KAAKkiE,qBAAqBrwE,MACzDmO,KAAKujE,8BAAgCvjE,KAAKoiE,2BAA2BvwE,MACrEmO,KAAKwjE,oBAAsBxjE,KAAKuiE,iBAAiB1wE,MACjDmO,KAAKyjE,mBAAqBzjE,KAAKwiE,gBAAgB3wE,MAC/CmO,KAAK0jE,oBAAsB1jE,KAAKyiE,iBAAiB5wE,MAEjDmO,KAAKuiE,iBAAiB73B,iBAAiB,QAAS1qC,KAAKq0D,IACrDr0D,KAAKwiE,gBAAgB93B,iBAAiB,QAAS1qC,KAAKq0D,IACpDr0D,KAAK8hE,iBAAiBp3B,iBAAiB,QAAS1qC,KAAKq0D,IACrDr0D,KAAKkiE,qBAAqBx3B,iBAAiB,QAAS1qC,KAAKkjE,IACzDljE,KAAKgiE,uBAAuBt3B,iBAAiB,QAAS1qC,KAAKq0D,IAC3Dr0D,KAAKoiE,2BAA2B13B,iBAAiB,QAAS1qC,KAAKq0D,IAC/Dr0D,KAAKyiE,iBAAiB/3B,iBAAiB,QAAS1qC,KAAKq0D,IAErDr0D,KAAKqkD,GAAY3Z,iBAAiB,QAAS1qC,KAAKskD,IAEhDzjC,OAAOoiD,sBAAsBjjE,KAAK+iE,IAElC/iE,KAAKwkD,mBAELxkD,KAAKsiE,cAAcrf,SAsCbppD,mBACFmG,KAAK+mC,EAAKzN,MAAM7L,SACnBztB,KAAKqkD,GAAYx3C,UAAU+qB,OAAO,cAClC53B,KAAKqkD,GAAYx3C,UAAUC,IAAI,eAC/B9M,KAAKqkD,GAAYtoC,MAAQ,gBACzB/b,KAAKqkD,GAAYM,UAAY,UAE7B3kD,KAAKqkD,GAAYx3C,UAAU+qB,OAAO,eAClC53B,KAAKqkD,GAAYx3C,UAAUC,IAAI,cAC/B9M,KAAKqkD,GAAYtoC,MAAQ,eACzB/b,KAAKqkD,GAAYM,UAAY,eCrVnBif,GAgCZ/pE,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EA/BH/mC,KAAAknC,EAAwB,GACxBlnC,KAAA6jE,GAAqB,EACrB7jE,KAAA8jE,GAAmB,EACnB9jE,KAAA+jE,GAAoB,EAEpB/jE,KAAAgkE,GAAwBjlE,EAAImpC,KAAK,CAAEb,KAAM,OAAQU,OAAQhoC,EAAY6H,WAAYogC,eAAgB,IACjGhoC,KAAAikE,GAA6BllE,EAAImpC,KAAK,CAAEb,KAAMtnC,EAAYsH,aAAcugC,iBAAkB,SAE1F5nC,KAAAqoC,EAAsBtpC,EAAI4oC,IAAI,CAAErpC,MAAO,qBAAqByB,EAAYqH,6DAA8DqgC,OAAQznC,KAAKknC,GACnKlnC,KAAKgkE,GACLhkE,KAAKikE,IAGUjkE,KAAAsoC,UAAyB5pC,EAAKgL,IAAI,CAAEpL,MAAO,oDAAsD0B,KAAKqoC,GAE9GroC,KAAAkkE,GAAoB,GACpBlkE,KAAAozD,GAA6B,KAC7BpzD,KAAAmkE,GAAkB,CAAEr2C,UAAW,EAAGs2C,MAAO,GACzCpkE,KAAAwoC,EAAkB,EAElBxoC,KAAAqkE,GAAwB,EACxBrkE,KAAAskE,GAAwB,EACxBtkE,KAAAukE,IAA6B,EAC7BvkE,KAAAwkE,IAAiC,EACjCxkE,KAAAyoC,GAAsB,EACtBzoC,KAAA0oC,GAAsB,EACtB1oC,KAAAykE,IAA8B,EAC9BzkE,KAAA0kE,IAA6B,EAC7B1kE,KAAA2kE,GAA4B,EAC5B3kE,KAAA4kE,IAA6B,EAgD7B5kE,KAAAqpC,GAAkBJ,IACrBjpC,KAAK0oC,IACT1oC,KAAK0oC,GAAa,EAClB1oC,KAAKspC,OAGEtpC,KAAAupC,GAAiBN,IACnBjpC,KAAK0oC,IACV1oC,KAAK0oC,GAAa,EAClB1oC,KAAKspC,OAGEtpC,KAAAwpC,GAAqBP,IAC5BA,EAAMQ,iBACNzpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,KAE7D9pC,KAAK6kE,KACL7kE,KAAKspC,KACLtpC,KAAKmqC,GAAgBlB,IAGdjpC,KAAAiqC,GAAqBhB,IAE5BjpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,EAAUS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,KAEvD9pC,KAAK6kE,KACL7kE,KAAKspC,KAELtpC,KAAKqkE,GAAgBp7B,EAAMiB,QAAQ,GAAGN,QACtC5pC,KAAKskE,GAAgBr7B,EAAMiB,QAAQ,GAAGkZ,QACtCpjD,KAAKwkE,IAAwB,EAC7BxkE,KAAKukE,IAAoB,GAGlBvkE,KAAAmqC,GAAmBlB,IAC1B,MAAMS,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,KAE7D9pC,KAAKoqC,MAGEpqC,KAAAqqC,GAAmBpB,IAC1B,IAAKjpC,KAAKyoC,EAAY,OACtB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,EAAUS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,KAGlD9pC,KAAKwkE,IAA0BxkE,KAAKukE,KACpCx1E,KAAKC,IAAIi6C,EAAMiB,QAAQ,GAAGkZ,QAAUpjD,KAAKskE,IAAiB,GAC7DtkE,KAAKukE,IAAoB,EACfx1E,KAAKC,IAAIi6C,EAAMiB,QAAQ,GAAGN,QAAU5pC,KAAKqkE,IAAiB,KACpErkE,KAAKwkE,IAAwB,IAI3BxkE,KAAKwkE,KACRxkE,KAAKoqC,KACLnB,EAAMQ,mBA0DAzpC,KAAA8kE,GAAsB77B,IAC7BA,EAAMQ,iBACDzpC,KAAKukE,KACTvkE,KAAKoqC,KACLpqC,KAAK0oC,GAAa,EAClB1oC,KAAKsqC,GAAoBrB,GACzBjpC,KAAKspC,MAGNtpC,KAAKyoC,GAAa,GAGXzoC,KAAAsqC,GAAuBrB,IACV,MAAhBjpC,KAAKozD,IAAiBpzD,KAAK+mC,EAAKqa,OAAOphD,KAAKozD,IAChDpzD,KAAKozD,GAAU,KACfpzD,KAAKyoC,GAAa,EAClBzoC,KAAK6kE,KACL7kE,KAAK+kE,MAiCE/kE,KAAAglE,GAAmB,KAC1BhlE,KAAK+kE,MAvNL/kE,KAAK6kE,KACL7kE,KAAK+kE,KACL/kE,KAAK+mC,EAAKwD,SAAS06B,MAAMjlE,KAAKglE,IAE9BhlE,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKwpC,IAClDzsC,SAAS2tC,iBAAiB,YAAa1qC,KAAKmqC,IAC5CptC,SAAS2tC,iBAAiB,UAAW1qC,KAAKsqC,IAC1CtqC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKqpC,IAClDrpC,KAAKsoC,UAAUoC,iBAAiB,WAAY1qC,KAAKupC,IAEjDvpC,KAAKsoC,UAAUoC,iBAAiB,aAAc1qC,KAAKiqC,IACnDjqC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKqqC,IAClDrqC,KAAKsoC,UAAUoC,iBAAiB,WAAY1qC,KAAK8kE,IACjD9kE,KAAKsoC,UAAUoC,iBAAiB,cAAe1qC,KAAK8kE,IAG7CjrE,KACP,MAAMsiB,EAAcnc,KAAKwoC,EAAUxoC,KAAKkkE,GACxClkE,KAAKmkE,GAAQr2C,SAAW3R,EAEpBA,EAAMnc,KAAK+mC,EAAK5mC,KAAKkb,UAAY,KAAQc,EAAMnc,KAAK+mC,EAAK5mC,KAAKkb,UAAYrb,KAAK+mC,EAAK5mC,KAAKmb,WAAa,IACrGa,EAAMnc,KAAK+mC,EAAK5mC,KAAKkb,UAAwC,GAA5Brb,KAAK+mC,EAAK5mC,KAAKmb,WACnDtb,KAAKmkE,GAAQC,KAAOpkE,KAAK6jE,GAEzB7jE,KAAKmkE,GAAQC,KAAOpkE,KAAK8jE,GAG1B9jE,KAAKmkE,GAAQC,KAAOpkE,KAAK+jE,GAInBlqE,GAAeqrE,GACtB,IAAI31D,EAAgBxgB,KAAKgb,MAAMm7D,EAASllE,KAAK+mC,EAAK5mC,KAAKmb,WAAa,GAChE9L,EAAcD,EAAQvP,KAAK+mC,EAAK5mC,KAAKmb,WASzC,OARI/L,EAAQ,IACXC,GAAOD,EACPA,EAAQ,GAELC,EAAMxP,KAAK+mC,EAAK5mC,KAAKwb,WACxBpM,GAASC,EAAMxP,KAAK+mC,EAAK5mC,KAAKwb,SAC9BnM,EAAMxP,KAAK+mC,EAAK5mC,KAAKwb,UAEf,CAAEpM,MAAOA,EAAOhhB,OAAQihB,EAAMD,GAoE9B1V,KACP,GAAImG,KAAKyoC,EAAY,CACpB,IAAI0J,EAAmBnyC,KAAK+mC,EAAK5mC,KAAKkb,UAClCgiC,EAAiBr9C,KAAK+mC,EAAK5mC,KAAKkb,UAAYrb,KAAK+mC,EAAK5mC,KAAKmb,WAC3C,MAAhBtb,KAAKozD,IAAmBpzD,KAAK+mC,EAAKutB,cAAct0D,KAAKozD,MACxDjhB,EAAWnyC,KAAKozD,GAAQjhB,SACxBkL,EAASlL,EAAWnyC,KAAKozD,GAAQpe,WAGlC,MAAM74B,EAAcnc,KAAKwoC,EAAUxoC,KAAKkkE,GACxC,IAAI30D,EACAC,EACA9C,EACJ,GAAI1M,KAAKmkE,GAAQC,MAAQpkE,KAAK6jE,GAC7Bt0D,EAAQ4iC,EAAWpjD,KAAKgb,MAAMoS,EAAMnc,KAAKmkE,GAAQr2C,UACjDte,EAAM6tC,EACF9tC,EAAQ,IAAGA,EAAQ,GACnBA,GAASvP,KAAK+mC,EAAK5mC,KAAKwb,WAAUpM,EAAQvP,KAAK+mC,EAAK5mC,KAAKwb,UACzDpM,GAASC,EACZD,EAAQC,EAAM,EACJD,EAAQC,IAClB9C,EAAO6C,EACPA,EAAQC,EACRA,EAAM9C,GAEP1M,KAAKozD,GAAU,IAAIre,GAAW/0C,KAAK+mC,EAAMoL,EAAUkL,EAASlL,EAAU5iC,EAAOC,EAAMD,QAC7E,GAAIvP,KAAKmkE,GAAQC,MAAQpkE,KAAK8jE,GACpCv0D,EAAQ4iC,EACR3iC,EAAM6tC,EAAStuD,KAAKgb,MAAMoS,EAAMnc,KAAKmkE,GAAQr2C,UACzCte,EAAM,IAAGA,EAAM,GACfA,GAAOxP,KAAK+mC,EAAK5mC,KAAKwb,WAAUnM,EAAMxP,KAAK+mC,EAAK5mC,KAAKwb,UACrDnM,GAAOD,EACVC,EAAMD,EAAQ,EACJC,EAAMD,IAChB7C,EAAO6C,EACPA,EAAQC,EACRA,EAAM9C,GAEP1M,KAAKozD,GAAU,IAAIre,GAAW/0C,KAAK+mC,EAAMoL,EAAUkL,EAASlL,EAAU5iC,EAAOC,EAAMD,QAC7E,GAAIvP,KAAKmkE,GAAQC,MAAQpkE,KAAK+jE,GAAW,CAC/C,MAAMoB,EAAuBnlE,KAAKolE,GAAejpD,GACjDnc,KAAKozD,GAAU,IAAIre,GAAW/0C,KAAK+mC,EAAMoL,EAAUkL,EAASlL,EAAUgzB,EAAU51D,MAAO41D,EAAU52E,QAElGyR,KAAK+mC,EAAKzN,MAAM+rC,eACZrlE,KAAK+mC,EAAKu+B,YACb,IAAIjzB,GAAiBryC,KAAK+mC,EAAM/mC,KAAK+mC,EAAK3mC,QAASrR,KAAKmU,MAAMlD,KAAK+mC,EAAKzN,MAAMhyB,WAAW,GAE1FtH,KAAK+mC,EAAK4sB,qBAAqB3zD,KAAKozD,SAEpCpzD,KAAK6kE,KACL7kE,KAAKspC,KAwBCzvC,KACP,MAAM0rE,EAAyBvlE,KAAK0oC,IAAe1oC,KAAKyoC,EAGxD,GAFAzoC,KAAKikE,GAAW3lE,MAAM0sC,WAAau6B,EAAgB,UAAY,SAE3DA,EAAe,CAClB,MAAMC,EAAiBxlE,KAAKknC,EAAgB,EAE5C,IAAIu+B,EAA0BzlE,KAAK+mC,EAAK5mC,KAAc,UAAIH,KAAKkkE,GAC3DwB,GAAyB1lE,KAAK+mC,EAAK5mC,KAAKkb,UAAYrb,KAAK+mC,EAAK5mC,KAAKmb,YAActb,KAAKkkE,GAC1F,GAAIlkE,KAAKmkE,GAAQC,MAAQpkE,KAAK6jE,GAC7B6B,EAAiB1lE,KAAK+mC,EAAK5mC,KAAc,UAAIH,KAAKkkE,GAAqB,EAATsB,OACxD,GAAIxlE,KAAKmkE,GAAQC,MAAQpkE,KAAK8jE,GACpC2B,GAAkBzlE,KAAK+mC,EAAK5mC,KAAKkb,UAAYrb,KAAK+mC,EAAK5mC,KAAKmb,YAActb,KAAKkkE,GAAqB,EAATsB,MACrF,CACN,MAAML,EAAuBnlE,KAAKolE,GAAeplE,KAAKmkE,GAAQr2C,UAC9D23C,EAAkBN,EAAe,MAAInlE,KAAKkkE,GAC1CwB,GAAiBP,EAAU51D,MAAQ41D,EAAU52E,QAAUyR,KAAKkkE,GAG7DlkE,KAAKikE,GAAWpmE,aAAa,IAC5B,KAAK4nE,EAAiBD,SACjBE,EAAgBF,SAChBA,EAAS,KAAKA,EAAS,WAAoBE,EAAgBF,KAAUxlE,KAAKknC,EAAgB,OAC1Fu+B,EAAiBD,KAAUxlE,KAAKknC,EAAgB,OAChDs+B,EAAS,KAAKA,EAAS,WAAoBC,EAAiBD,UAU5D3rE,KACPmG,KAAKkkE,GAAYlkE,KAAK+mC,EAAKqC,cAE3B,MAAMo8B,EAAiBxlE,KAAKknC,EAAgB,EACtC7rB,EAAqBrb,KAAK+mC,EAAK5mC,KAAc,UAAIH,KAAKkkE,GACtDyB,GAAoB3lE,KAAK+mC,EAAK5mC,KAAKkb,UAAYrb,KAAK+mC,EAAK5mC,KAAKmb,YAActb,KAAKkkE,GAEvF,GAAIlkE,KAAK2kE,IAAqB3kE,KAAK+mC,EAAK5mC,KAAKwb,UAAY3b,KAAK4kE,IAAqB5kE,KAAKkkE,GAAW,CAClGlkE,KAAK2kE,GAAoB3kE,KAAK+mC,EAAK5mC,KAAKwb,SACxC3b,KAAK4kE,GAAoB5kE,KAAKkkE,GAC9B,MAAM0B,EAAc5lE,KAAKkkE,GAAYlkE,KAAK+mC,EAAK5mC,KAAKwb,SACpD3b,KAAKsoC,UAAUhqC,MAAMkpC,MAAQo+B,EAAc,KAC3C5lE,KAAKqoC,EAAKxqC,aAAa,QAAS+nE,EAAc,IAG3C5lE,KAAKykE,IAAsBppD,GAAarb,KAAK0kE,IAAqBiB,IACrE3lE,KAAKykE,GAAqBppD,EAC1Brb,KAAK0kE,GAAoBiB,EACzB3lE,KAAKgkE,GAAMnmE,aAAa,IACvB,KAAKwd,EAAYmqD,SACZG,EAAWH,SACXA,EAAS,KAAKA,EAAS,WAAoBG,EAAWH,KAAUxlE,KAAKknC,EAAgB,OACrF7rB,EAAYmqD,KAAUxlE,KAAKknC,EAAgB,OAC3Cs+B,EAAS,KAAKA,EAAS,WAAoBnqD,EAAYmqD,UAK9DxlE,KAAKspC,MC/RP,MAAMiW,OAAEA,GAAM71C,IAAEA,GAAG81C,KAAEA,GAAIC,GAAEA,GAAEC,MAAEA,GAAKC,GAAEA,GAAEC,OAAEA,GAAMC,OAAEA,IAAWnhD,QAEhDmnE,GA4BZhsE,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EA3BH/mC,KAAAigD,GAAkCP,GAAM,CAAEphD,MAAO,gCAAiCrJ,KAAM,SAAU+qD,KAAM,OAAQnuD,MAAO,MACvHmO,KAAAkgD,GAA+CN,GAAO,CAAEthD,MAAO,gBAC/EuhD,GAAO,CAAEhuD,MAAO,YAAc,+BAC9BguD,GAAO,CAAEhuD,MAAO,cAAgB,mCAEhBmO,KAAAqgD,GAAmCd,GAAO,CAAEhX,MAAO,iBACnDvoC,KAAAsgD,GAAiCf,GAAO,CAAEhX,MAAO,aAAcjqC,MAAO,cAAgB,QAEvF0B,KAAAsoC,UAA4B5+B,GAAI,CAAE6+B,MAAO,qBAAsBjqC,MAAO,iBACrFmhD,GAAG,uBACH/1C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,sBACZ,iBACAqhD,KACAH,GAAK,CAAElhD,MAAO,8BAA8ByB,EAAYyH,kBAAoB,0CAE7ExH,KAAKigD,IAENv2C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,gBAAkB0B,KAAKkgD,KAE/Dx2C,GAAI,CAAEpL,MAAO,+EACZ0B,KAAKsgD,IAENtgD,KAAKqgD,IAqBErgD,KAAAugD,GAAS,KAChBvgD,KAAK+mC,EAAKqF,QAGJpsC,KAAAwgD,QAAU,KAChBxgD,KAAKsgD,GAAYG,oBAAoB,QAASzgD,KAAK0gD,IACnD1gD,KAAKqgD,GAAcI,oBAAoB,QAASzgD,KAAKugD,IACrDvgD,KAAKigD,GAAcQ,oBAAoB,OAAQolB,GAAwBjlB,IACvE5gD,KAAKsoC,UAAUmY,oBAAoB,UAAWzgD,KAAK6gD,KAG5C7gD,KAAA6gD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQ7iD,SAAwC,IAAjBgrC,EAAM8X,SACxD/gD,KAAK0gD,MAYC1gD,KAAA0gD,GAAe,KACtB7/B,OAAOC,aAAakgC,QAAQ,4BAA6BhhD,KAAKkgD,GAA0BruD,OACxFmO,KAAK+mC,EAAKoa,OAAS,KACnBnhD,KAAK+mC,EAAKqa,OAAO,IAAInI,GAAwBj5C,KAAK+mC,GAAO/mC,KAAKigD,GAAcpuD,MAAOmO,KAAKkgD,GAA0BruD,QAAQ,IA7C1HmO,KAAKigD,GAAczvD,KAAQwP,KAAK+mC,EAAK5mC,KAAKub,YAAe,GACzD1b,KAAKigD,GAAc/wC,IAAMlP,KAAK+mC,EAAK5mC,KAAKub,YAAc,GAEtD,MAAM4lC,EAA8BzgC,OAAOC,aAAaC,QAAQ,6BAC5C,MAAhBugC,IACHthD,KAAKkgD,GAA0BruD,MAAQyvD,GAGxCthD,KAAKigD,GAAcL,SACnB2B,YAAW,IAAMvhD,KAAKigD,GAAcuB,SAAS,KAE7CxhD,KAAKsgD,GAAY5V,iBAAiB,QAAS1qC,KAAK0gD,IAChD1gD,KAAKqgD,GAAc3V,iBAAiB,QAAS1qC,KAAKugD,IAClDvgD,KAAKigD,GAAcvV,iBAAiB,OAAQm7B,GAAwBjlB,IACpE5gD,KAAKsoC,UAAUoC,iBAAiB,UAAW1qC,KAAK6gD,IAoBzChnD,UAAuBovC,GAC9B,MAAMyW,EAA4CzW,EAAM6X,OACxD,IAAIjvD,GAAiB6tD,EAAM7tD,MAC3BA,EAAQ9C,KAAKgb,MAAMlY,EAAQ3D,EAAOqF,cAAgBrF,EAAOqF,aACzD1B,EAAQ9C,KAAKgb,MAAc,IAARlY,GAAe,IAClC6tD,EAAM7tD,MAAQ9C,KAAKmgB,KAAKwwC,EAAMlvD,IAAKzB,KAAKyB,KAAKkvD,EAAMxwC,IAAKrd,IAAU,UCrEvDi0E,GA6BZjsE,YAAoBktC,EAA4Bg/B,GAA5B/lE,KAAA+mC,EAAAA,EAA4B/mC,KAAA+lE,GAAAA,EA5B/B/lE,KAAAgmE,GAA6B,GAC7BhmE,KAAAimE,GAAmC,GACnCjmE,KAAAkmE,GAAsCxnE,EAAKgL,IAAI,CAAEpL,MAAO,qBAAqByB,EAAYgI,wKAAyKo+D,MAASpmE,EAAYwH,aAAe,IACvSvH,KAAAomE,GAA8B,IAAInS,GAASv1D,EAAKghD,MAAM,CAAEphD,MAAO,UAAUyB,EAAYwH,kCAAkCxH,EAAYgI,oHAAqHo+D,MAASpmE,EAAYwH,aAAe,IAAKvH,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAImP,GAAkBz+C,KAAK+mC,EAAM6L,EAAUtD,KAE9XtvC,KAAAqmE,GAAsC3nE,EAAKkhD,OAAO,CAAEthD,MAAO,sEAE3EI,EAAKmhD,OAAO,CAAEhuD,MAAO,UAAY,aACjC6M,EAAKmhD,OAAO,CAAEhuD,MAAO,SAAW,mBAChC6M,EAAKmhD,OAAO,CAAEhuD,MAAO,WAAa,qBAClC6M,EAAKmhD,OAAO,CAAEhuD,MAAO,WAAa,gBAClC6M,EAAKmhD,OAAO,CAAEhuD,MAAO,WAAa,gBAClC6M,EAAKmhD,OAAO,CAAEhuD,MAAO,aAAe,wBACpC6M,EAAKmhD,OAAO,CAAEhuD,MAAO,aAAe,wBAGrBmO,KAAAsoC,UAAyB5pC,EAAKgL,IAAI,CAAE6+B,MAAO,aAAcjqC,MAAO,mCAAqCpQ,EAAOkL,gBAAkB,OAAS4G,KAAKkmE,GAAqBlmE,KAAKomE,GAAkB1mB,MAAO1/C,KAAKqmE,IAE5MrmE,KAAAknC,EAAwB,IACxBlnC,KAAAsmE,GAAgC,EAChCtmE,KAAAumE,GAAiC,EACjCvmE,KAAAwmE,GAAiC,EACjCxmE,KAAAymE,GAA+B,EAC/BzmE,KAAA0mE,IAAkC,EAClC1mE,KAAA2mE,GAAkC,EAClC3mE,KAAA4mE,IAAgC,EAChC5mE,KAAA6mE,IAAqC,EAmBrC7mE,KAAA8mE,GAA6B,KACpC,IAAIx3B,EAAWtvC,KAAKomE,GAAkB1mB,MAAM7tD,MACxCy9C,EAAS/gD,OAAS,KACrByR,KAAKomE,GAAkB1mB,MAAM7tD,MAAQy9C,EAAS5vB,UAAU,EAAG,MAIrD1f,KAAA+mE,GAA4B99B,IACnCA,EAAMia,mBAGCljD,KAAAgnE,GAAwB,KAC/BhnE,KAAKomE,GAAkB1mB,MAAMphD,MAAMC,YAAY,UAAW,QAC1DyB,KAAKkmE,GAAoB5nE,MAAMC,YAAY,UAAW,SAG/CyB,KAAAinE,GAAyBh+B,IAChCjpC,KAAK4mE,IAAwB5mE,KAAK6mE,GAClC7mE,KAAKknE,GAAkCj+B,IAIhCjpC,KAAAmnE,GAAuB,KAC9BnnE,KAAK4mE,IAAuB,EAC5B5mE,KAAKkmE,GAAoB5nE,MAAMC,YAAY,UAAW,SAI/CyB,KAAAknE,GAAqCj+B,IAE5CjpC,KAAK6mE,GAA4B7mE,KAAK4mE,GAEtC5mE,KAAK2mE,GAA0B53E,KAAKmU,MAAMnU,KAAKyB,IAAIwP,KAAKsmE,GAAuBv3E,KAAKmgB,IAAI,EAAG+gD,SAASjwD,KAAKqmE,GAAiB/nE,MAAMiC,iBAAiB,QAAUP,KAAK0mE,MAChK1mE,KAAK+mC,EAAK2X,kBAAoB1+C,KAAK2mE,GAEnC3mE,KAAKkmE,GAAoB5nE,MAAMC,YAAY,UAAW,IAGjDyB,KAAK2mE,GAA0B3mE,KAAK+mC,EAAK5mC,KAAKe,mBAAqBlB,KAAK+mC,EAAK5mC,KAAKe,mBAAqBhT,EAAOmK,sBAC9G2H,KAAK2mE,IAA2B3mE,KAAK+mC,EAAK5mC,KAAKe,mBAAqBlB,KAAK2mE,GAA0B3mE,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,mBAAqBpB,KAAK+mC,EAAK5mC,KAAKiB,mBAAqBlT,EAAOqK,sBACrNyH,KAAK2mE,IAA2B3mE,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,mBAAqBpB,KAAK+mC,EAAK5mC,KAAK+a,iBAAmBhtB,EAAOuK,mBACpJuH,KAAKqmE,GAAiBe,QAAQ,GAAGnc,UAAW,EAG5CjrD,KAAKqmE,GAAiBe,QAAQ,GAAGnc,UAAW,EAIT,GAAhCjrD,KAAK2mE,IAAgC3mE,KAAK2mE,IAA2B3mE,KAAK+mC,EAAK5mC,KAAKe,mBAAqBlB,KAAK2mE,IAA2B3mE,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAC9LpB,KAAKqmE,GAAiBe,QAAQ,GAAGnc,UAAW,EAG5CjrD,KAAKqmE,GAAiBe,QAAQ,GAAGnc,UAAW,EAEzCjrD,KAAK2mE,IAA2B3mE,KAAK+mC,EAAK5mC,KAAKe,kBAAoB,GAAKlB,KAAK2mE,IAA2B3mE,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAoB,GAAKpB,KAAK2mE,IAA2B3mE,KAAK+mC,EAAK5mC,KAAK8b,kBAAoB,EACzPjc,KAAKqmE,GAAiBe,QAAQ,GAAGnc,UAAW,EAG5CjrD,KAAKqmE,GAAiBe,QAAQ,GAAGnc,UAAW,EAIL,GAApCjrD,KAAK+mC,EAAK5mC,KAAKe,mBAA0D,GAAhClB,KAAK2mE,GACjD3mE,KAAKqmE,GAAiBe,QAAQ,GAAGnc,UAAW,EAG5CjrD,KAAKqmE,GAAiBe,QAAQ,GAAGnc,UAAW,GAItCjrD,KAAAqnE,GAA2Bp+B,IAOlC,OANAjpC,KAAKkmE,GAAoB5nE,MAAMC,YAAY,UAAW,QACtDyB,KAAKqmE,GAAiB/nE,MAAMC,YAAY,UAAW,QACnDyB,KAAK4mE,IAAuB,EAC5B39B,EAAMia,kBAGEljD,KAAKqmE,GAAiBx0E,OAC7B,IAAK,SACJmO,KAAKomE,GAAkB1mB,MAAMphD,MAAMC,YAAY,UAAW,IAC1DyB,KAAKomE,GAAkB1mB,MAAMphD,MAAMC,YAAY,YAAayB,KAAKkmE,GAAoB5nE,MAAMiC,iBAAiB,cAChE,MAAxCP,KAAKkmE,GAAoB9/D,YAC5BpG,KAAKomE,GAAkB1mB,MAAM7tD,MAAQmO,KAAKkmE,GAAoB9/D,YAG9DpG,KAAKomE,GAAkB1mB,MAAM7tD,MAAQ,GAEtCmO,KAAKomE,GAAkB1mB,MAAME,SAC7B,MACD,IAAK,QACJ5/C,KAAK+mC,EAAKqa,OAAO,IAAI/P,GAAmBrxC,KAAK+mC,EAAM/mC,KAAK2mE,GAAyB3mE,KAAK2mE,GAA0B,IAChH,MACD,IAAK,UACJ3mE,KAAK+mC,EAAKqa,OAAO,IAAI/P,GAAmBrxC,KAAK+mC,EAAM/mC,KAAK2mE,GAAyB3mE,KAAK2mE,GAA0B,IAChH,MACD,IAAK,UACJ3mE,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK2mE,IAAyB5uD,OAAS/X,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK2mE,IAAyB5uD,MACrH/X,KAAKijD,SACL,MACD,IAAK,UAAW,CAEf,IAAIqkB,GAAsB,EAC1B,IAAK,IAAIlnE,EAAkB,EAAGA,EAAUJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmBhB,IACxGJ,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS2X,QAAU3X,GAAWJ,KAAK2mE,MAC9DW,GAAa,EACblnE,EAAUJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,mBAG9D,GAAIkmE,EACH,IAAK,IAAIlnE,EAAkB,EAAGA,EAAUJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmBhB,IAC5GJ,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS2X,MAAS3X,GAAWJ,KAAK2mE,QAI3D,IAAK,IAAIvmE,EAAkB,EAAGA,EAAUJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmBhB,IAC5GJ,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS2X,OAAQ,EAG3C/X,KAAKijD,SACL,MAED,IAAK,YAAa,CAEjB,IAGIskB,EAHA51B,EAA+B3xC,KAAK+mC,EAAK5mC,KAAKe,kBAC9C0wC,EAA+B5xC,KAAK+mC,EAAK5mC,KAAKiB,kBAC9CywC,EAA6B7xC,KAAK+mC,EAAK5mC,KAAK+a,gBAG5Clb,KAAK2mE,GAA0B3mE,KAAK+mC,EAAK5mC,KAAKe,mBACjDywC,IACA41B,EAAY51B,GAEJ3xC,KAAK2mE,GAA0B3mE,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,mBACzFwwC,IACA21B,EAAY51B,EAAuBC,IAGnCC,IACA01B,EAAY51B,EAAuBC,EAAuBC,GAG3D7xC,KAAK+mC,EAAKqa,OAAO,IAAI1P,GAAmB1xC,KAAK+mC,EAAM4K,EAAsBC,EAAsBC,IAE/F,IAAK,IAAIzxC,EAAkBmnE,EAAY,EAAGnnE,EAAUJ,KAAK2mE,GAA0B,EAAGvmE,IACrFJ,KAAK+mC,EAAKqa,OAAO,IAAI/P,GAAmBrxC,KAAK+mC,EAAM3mC,EAAU,EAAGA,IAAU,GAE3E,MAED,IAAK,YAAa,CACjB,IAAIuxC,EAA+B3xC,KAAK+mC,EAAK5mC,KAAKe,kBAC9C0wC,EAA+B5xC,KAAK+mC,EAAK5mC,KAAKiB,kBAC9CywC,EAA6B7xC,KAAK+mC,EAAK5mC,KAAK+a,gBAChD,GAAIlb,KAAK2mE,GAA0B3mE,KAAK+mC,EAAK5mC,KAAKe,kBAAmB,CAEpEywC,IACA,IAAK,IAAIvxC,EAAkBJ,KAAK2mE,GAAyBvmE,EAAUuxC,EAAsBvxC,IACxFJ,KAAK+mC,EAAKqa,OAAO,IAAI/P,GAAmBrxC,KAAK+mC,EAAM3mC,EAASA,EAAU,GAAIA,GAAWJ,KAAK2mE,SAGvF,GAAI3mE,KAAK2mE,IAA2B3mE,KAAK+mC,EAAK5mC,KAAKe,mBAAqBlB,KAAK2mE,GAA0B3mE,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmB,CAEhLwwC,IACA,IAAK,IAAIxxC,EAAkBJ,KAAK2mE,GAAyBvmE,EAAUuxC,EAAuBC,EAAsBxxC,IAC/GJ,KAAK+mC,EAAKqa,OAAO,IAAI/P,GAAmBrxC,KAAK+mC,EAAM3mC,EAASA,EAAU,GAAIA,GAAWJ,KAAK2mE,QAGvF,CAEJ90B,IACA,IAAK,IAAIzxC,EAAkBJ,KAAK2mE,GAAyBvmE,EAAUuxC,EAAuBC,EAAuBC,EAAoBzxC,IACpIJ,KAAK+mC,EAAKqa,OAAO,IAAI/P,GAAmBrxC,KAAK+mC,EAAM3mC,EAASA,EAAU,GAAIA,GAAWJ,KAAK2mE,IAG5F3mE,KAAK+mC,EAAKqa,OAAO,IAAI1P,GAAmB1xC,KAAK+mC,EAAM4K,EAAsBC,EAAsBC,IAAqB,GACpH,OAGiC,UAA/B7xC,KAAKqmE,GAAiBx0E,OACzBmO,KAAK+lE,GAAQyB,eAEdxnE,KAAKqmE,GAAiBoB,eAAiB,GAGhCznE,KAAA0nE,GAAYz+B,IAEnB,MAAM95C,EAAQ6Q,KAAKgmE,GAASrxD,QAAwBs0B,EAAM6X,QAC1D,IAAc,GAAV3xD,EAAa,OACE85C,EAAMW,QAAU5pC,KAAKgmE,GAAS,GAAGr8B,wBAAwBG,KACjE,KACV9pC,KAAK+mC,EAAK5mC,KAAK+X,SAAS/oB,GAAO4oB,OAAS/X,KAAK+mC,EAAK5mC,KAAK+X,SAAS/oB,GAAO4oB,OAExE/X,KAAK+mC,EAAKwD,SAASC,WAGZxqC,KAAA2nE,GAAgB1+B,IACvB,MAAM95C,EAAQ6Q,KAAKgmE,GAASrxD,QAAwBs0B,EAAM6X,QAC1D,IAAc,GAAV3xD,EAMH,YALK6Q,KAAK4mE,IAAwB39B,EAAM6X,QAAU9gD,KAAKkmE,IAAuBj9B,EAAM6X,QAAU9gD,KAAKqmE,KAClGrmE,KAAKkmE,GAAoB5nE,MAAMC,YAAY,UAAW,QACtDyB,KAAKqmE,GAAiB/nE,MAAMC,YAAY,UAAW,QACnDyB,KAAKqmE,GAAiB/nE,MAAMC,YAAY,QAAS,SAKnD,GADmB0qC,EAAMW,QAAU5pC,KAAKgmE,GAAS,GAAGr8B,wBAAwBG,MAChE,IACX,IAAK9pC,KAAK4mE,GAAsB,CAE/B5mE,KAAKqmE,GAAiB/nE,MAAMC,YAAY,UAAW,IACnD,IAAIkpC,EAASznC,KAAK+mC,EAAK6gC,mBACvB5nE,KAAKkmE,GAAoB5nE,MAAMC,YAAY,YAAa,oBAAsBkpC,EAAS,EAAIA,EAASt4C,GAAS,OAElE,IAAvC6Q,KAAK+mC,EAAK5mC,KAAK+X,SAAS/oB,GAAO2C,MAClCkO,KAAKkmE,GAAoB9/D,YAAcpG,KAAK+mC,EAAK5mC,KAAK+X,SAAS/oB,GAAO2C,KACtEkO,KAAKkmE,GAAoB5nE,MAAMC,YAAY,UAAW,MAGlDpP,EAAQ6Q,KAAK+mC,EAAK5mC,KAAKe,kBAC1BlB,KAAKkmE,GAAoB9/D,YAAc,UAAYjX,EAAQ,GACjDA,EAAQ6Q,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBACpEpB,KAAKkmE,GAAoB9/D,YAAc,UAAYjX,EAAQ6Q,KAAK+mC,EAAK5mC,KAAKe,kBAAoB,GAG9FlB,KAAKkmE,GAAoB9/D,YAAc,QAAUjX,EAAQ6Q,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAoB,GAGhIpB,KAAKkmE,GAAoB5nE,MAAMC,YAAY,UAAW,SAGvDyB,KAAKqmE,GAAiB/nE,MAAMglD,IAAOp1D,EAAOkL,gBAAkB,EAAIjK,EAAQ6Q,KAAK0mE,GAA0B,KACvG1mE,KAAKqmE,GAAiB/nE,MAAMC,YAAY,QAAS,cAI7CyB,KAAK4mE,KACT5mE,KAAKkmE,GAAoB5nE,MAAMC,YAAY,UAAW,QACtDyB,KAAKqmE,GAAiB/nE,MAAMC,YAAY,UAAW,QACnDyB,KAAKqmE,GAAiB/nE,MAAMC,YAAY,QAAS,SAK5CyB,KAAA6nE,GAAiB5+B,IACnBjpC,KAAK4mE,KACT5mE,KAAKkmE,GAAoB5nE,MAAMC,YAAY,UAAW,QACtDyB,KAAKqmE,GAAiB/nE,MAAMC,YAAY,QAAS,SArQlDyB,KAAKsoC,UAAUoC,iBAAiB,QAAS1qC,KAAK0nE,IAC9C1nE,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAK2nE,IAClD3nE,KAAKsoC,UAAUoC,iBAAiB,aAAc1qC,KAAK6nE,IAEnD7nE,KAAKqmE,GAAiBoB,eAAiB,EACvCznE,KAAKqmE,GAAiB37B,iBAAiB,SAAU1qC,KAAKqnE,IACtDrnE,KAAKqmE,GAAiB37B,iBAAiB,YAAa1qC,KAAKknE,IACzDlnE,KAAKqmE,GAAiB37B,iBAAiB,OAAQ1qC,KAAKmnE,IACpDnnE,KAAKqmE,GAAiB37B,iBAAiB,QAAS1qC,KAAKinE,IAErDjnE,KAAKomE,GAAkB1mB,MAAMhV,iBAAiB,SAAU1qC,KAAKgnE,IAC7DhnE,KAAKomE,GAAkB1mB,MAAMhV,iBAAiB,OAAQ1qC,KAAKgnE,IAC3DhnE,KAAKomE,GAAkB1mB,MAAMhV,iBAAiB,YAAa1qC,KAAK+mE,IAChE/mE,KAAKomE,GAAkB1mB,MAAMhV,iBAAiB,QAAS1qC,KAAK8mE,IA4PtDjtE,QAAQovC,GACd,OAAQA,EAAM8X,SACb,KAAK,GAKL,KAAK,GACJ/gD,KAAK4mE,IAAuB,EAE5B5mE,KAAKkmE,GAAoB5nE,MAAMC,YAAY,UAAW,SAOlD1E,SACN,IAAKmG,KAAK+mC,EAAK+gC,oBAAqB,OAEpC,MAAMnqB,EAAgB39C,KAAK+mC,EAAK6gC,mBAEhC,GAAI5nE,KAAKsmE,IAAyBtmE,KAAK+mC,EAAK5mC,KAAK8b,kBAAmB,CACnE,IAAK,IAAIsrB,EAAYvnC,KAAKsmE,GAAuB/+B,EAAIvnC,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBsrB,IAAK,CAE3F,MAAMwgC,EAAmCrpE,EAAKgL,IAAI,CAAE6+B,MAAO,6BAA8BjqC,MAAO,gRAC1F0pE,EAA6BtpE,EAAKgL,IAAI,CAAE6+B,MAAO,cAAejqC,MAAO,qGAErE2pE,EAAgCvpE,EAAKgL,IAAI,CAAEpL,MAAO,wHAA0H,CACjL0pE,EACAD,IAED/nE,KAAKsoC,UAAUxrC,YAAYmrE,GAC3BjoE,KAAKgmE,GAASz+B,GAAK0gC,EACnBjoE,KAAKimE,GAAe1+B,GAAKwgC,EAG1B,IAAK,IAAIxgC,EAAYvnC,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBsrB,EAAIvnC,KAAKsmE,GAAuB/+B,IACtFvnC,KAAKsoC,UAAUv7B,YAAY/M,KAAKgmE,GAASz+B,IAG1CvnC,KAAKgmE,GAASz3E,OAASyR,KAAK+mC,EAAK5mC,KAAK8b,kBAGvC,IAAK,IAAIsrB,EAAY,EAAGA,EAAIvnC,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBsrB,IACzDvnC,KAAK+mC,EAAK5mC,KAAK+X,SAASqvB,GAAGxvB,OAC9B/X,KAAKgmE,GAASz+B,GAAG0c,SAAS,GAAGp3C,UAAUC,IAAI,SAEvCy6B,EAAIvnC,KAAK+mC,EAAK5mC,KAAKe,kBACtBlB,KAAKimE,GAAe1+B,GAAGjpC,MAAM6nE,MAAQpmE,EAAYwI,sBACzCg/B,EAAIvnC,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAC9DpB,KAAKimE,GAAe1+B,GAAGjpC,MAAM6nE,MAAQpmE,EAAY0I,sBAEjDzI,KAAKimE,GAAe1+B,GAAGjpC,MAAM6nE,MAAQpmE,EAAY4I,sBAGlD3I,KAAKgmE,GAASz+B,GAAG0c,SAAS,GAAGp3C,UAAU+qB,OAAO,SAE1C2P,EAAIvnC,KAAK+mC,EAAK5mC,KAAKe,kBACtBlB,KAAKimE,GAAe1+B,GAAGjpC,MAAM6nE,MAAQpmE,EAAYuI,mBACzCi/B,EAAIvnC,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAC9DpB,KAAKimE,GAAe1+B,GAAGjpC,MAAM6nE,MAAQpmE,EAAYyI,mBAEjDxI,KAAKimE,GAAe1+B,GAAGjpC,MAAM6nE,MAAQpmE,EAAY2I,kBAIpD,GAAI1I,KAAK0mE,IAA0B/oB,GAAiB39C,KAAKsmE,IAAyBtmE,KAAK+mC,EAAK5mC,KAAK8b,kBAChG,IAAK,IAAIsrB,EAAY,EAAGA,EAAIvnC,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBsrB,IAC7DvnC,KAAKgmE,GAASz+B,GAAGjpC,MAAM4pE,WAAcvqB,EAAgB,IAAM,EAAK,KAChE39C,KAAKgmE,GAASz+B,GAAGjpC,MAAM6pE,cAAiBxqB,EAAgB,IAAM,EAAK,KAIrE,GAAI39C,KAAKymE,IAAwBzmE,KAAK+mC,EAAK5mC,KAAK+a,iBAAmBlb,KAAKsmE,IAAyBtmE,KAAK+mC,EAAK5mC,KAAK8b,kBAC/G,IAAK,IAAIsrB,EAAY,EAAGA,EAAIvnC,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBsrB,IACzDA,EAAIvnC,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBACzDpB,KAAKgmE,GAASz+B,GAAG0c,SAAS,GAAGp3C,UAAU+qB,OAAO,WAG9C53B,KAAKgmE,GAASz+B,GAAG0c,SAAS,GAAGp3C,UAAUC,IAAI,WAK9C,GAAI9M,KAAKymE,IAAwBzmE,KAAK+mC,EAAK5mC,KAAK+a,iBAAmBlb,KAAKumE,IAA0BvmE,KAAK+mC,EAAK5mC,KAAKe,mBAAqBlB,KAAKwmE,IAA0BxmE,KAAK+mC,EAAK5mC,KAAKiB,kBAAmB,CACtM,IAAK,IAAImmC,EAAY,EAAGA,EAAIvnC,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBsrB,IAC7D,GAAIA,EAAIvnC,KAAK+mC,EAAK5mC,KAAKe,kBAAmB,CACzC,IAAIiO,EAAeo4B,EAAI,EACvBvnC,KAAKimE,GAAe1+B,GAAGnhC,YAAc+I,EAAM,GAC3CnP,KAAKimE,GAAe1+B,GAAGjpC,MAAM8pE,SAAYj5D,GAAO,GAAM,WAAa,eAE/D,GAAIo4B,EAAIvnC,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmB,CACjF,IAAI+N,EAAeo4B,EAAIvnC,KAAK+mC,EAAK5mC,KAAKe,kBAAoB,EAC1DlB,KAAKimE,GAAe1+B,GAAGnhC,YAAc+I,EAAM,GAC3CnP,KAAKimE,GAAe1+B,GAAGjpC,MAAM8pE,SAAYj5D,GAAO,GAAM,WAAa,cAE/D,CACJ,IAAIA,EAAeo4B,EAAIvnC,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAoB,EAC7FpB,KAAKimE,GAAe1+B,GAAGnhC,YAAc+I,EAAM,GAC3CnP,KAAKimE,GAAe1+B,GAAGjpC,MAAM8pE,SAAYj5D,GAAO,GAAM,WAAa,UAGrEnP,KAAKumE,GAAyBvmE,KAAK+mC,EAAK5mC,KAAKe,kBAC7ClB,KAAKwmE,GAAyBxmE,KAAK+mC,EAAK5mC,KAAKiB,kBAC7CpB,KAAKymE,GAAuBzmE,KAAK+mC,EAAK5mC,KAAK+a,gBAGxClb,KAAK0mE,IAA0B/oB,GAAiB39C,KAAKsmE,IAAyBtmE,KAAK+mC,EAAK5mC,KAAK8b,oBAChGjc,KAAK0mE,GAAyB/oB,EAC9B39C,KAAKsmE,GAAwBtmE,KAAK+mC,EAAK5mC,KAAK8b,kBAC5Cjc,KAAKknC,EAAgBh5C,EAAOkL,gBAAkB4G,KAAK+mC,EAAK5mC,KAAK8b,kBAAoB0hC,EACjF39C,KAAKkmE,GAAoB5nE,MAAMC,YAAY,UAAW,QACtDyB,KAAKsoC,UAAUhqC,MAAMmpC,OAASznC,KAAKknC,EAAgB,KAE/ClnC,KAAK0mE,GAAyB,IACjC1mE,KAAKkmE,GAAoB5nE,MAAMC,YAAY,aAAc,QACzDyB,KAAKqmE,GAAiB/nE,MAAMC,YAAY,aAAc,QACtDyB,KAAKomE,GAAkB1mB,MAAMphD,MAAMC,YAAY,aAAc,SAGrDyB,KAAK0mE,GAAyB,IACtC1mE,KAAKkmE,GAAoB5nE,MAAMC,YAAY,aAAc,QACzDyB,KAAKqmE,GAAiB/nE,MAAMC,YAAY,aAAc,QACtDyB,KAAKomE,GAAkB1mB,MAAMphD,MAAMC,YAAY,aAAc,UAG7DyB,KAAKkmE,GAAoB5nE,MAAMC,YAAY,aAAc,OACzDyB,KAAKqmE,GAAiB/nE,MAAMC,YAAY,aAAc,OACtDyB,KAAKomE,GAAkB1mB,MAAMphD,MAAMC,YAAY,aAAc,iBCzapD8pE,GA0BZxuE,YAAoBktC,EAA4BuhC,GAA5BtoE,KAAA+mC,EAAAA,EAA4B/mC,KAAAsoE,GAAAA,EAzB/BtoE,KAAAinC,EAAuB,GACvBjnC,KAAAknC,EAAwB,IACxBlnC,KAAAuoE,GAAuB,EACvBvoE,KAAAwoE,GAAuBt6E,EAAO2K,aAC9BmH,KAAAyoE,IAAyBzoE,KAAKknC,EAAgBlnC,KAAKuoE,IAAgBvoE,KAAKwoE,GACjFxoE,KAAA0oE,GAAsB1oE,KAAKyoE,GAAgBzoE,KAAK+mC,EAAKi4B,cAAgBh/D,KAAKuoE,GACjEvoE,KAAA6nC,EAA0B9oC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAY+H,mBAAoBw/B,EAAG,EAAGC,EAAG,EAAGC,MAAOxnC,KAAKinC,EAAe,EAAGQ,OAAQznC,KAAK0oE,KAClI1oE,KAAA8nC,EAAmC/oC,EAAIqoC,KAAK,CAAEC,KAAM,OAAQU,OAAQhoC,EAAYsH,aAAc2gC,eAAgB,EAAGJ,iBAAkB,OAAQN,EAAG,EAAGC,EAAG,EAAGC,MAAOxnC,KAAKinC,EAAe,EAAGQ,OAAQznC,KAAK0oE,KAClM1oE,KAAA2oE,GAA+B5pE,EAAImpC,KAAK,CAAEb,KAAMtnC,EAAYsH,aAAcugC,iBAAkB,SAC5F5nC,KAAA4oE,GAAiC7pE,EAAImpC,KAAK,CAAEb,KAAMtnC,EAAYsH,aAAcugC,iBAAkB,SAE9F5nC,KAAAqoC,EAAsBtpC,EAAI4oC,IAAI,CAAErpC,MAAO,8FAA+FkpC,MAAOxnC,KAAKinC,EAAcQ,OAAQ,OAAQob,QAAS,UAAY7iD,KAAKknC,EAAe4b,oBAAqB,SAC/O9iD,KAAAsoC,UAA4B5pC,EAAKgL,IAAI,CAAEw3D,GAAI,2BAA4B5iE,MAAO,oFAAsF0B,KAAKqoC,GAGjLroC,KAAAkiD,GAAkB,EAClBliD,KAAAyoC,GAAsB,EACtBzoC,KAAA0oC,GAAsB,EACtB1oC,KAAA2oC,IAAqB,EAGrB3oC,KAAA6oE,IAA8B,EAC9B7oE,KAAA8oE,IAA8B,EAC9B9oE,KAAAozD,GAA+B,KAoC/BpzD,KAAAqpC,GAAkBJ,IACrBjpC,KAAK0oC,IACT1oC,KAAK0oC,GAAa,EAClB1oC,KAAKspC,OAGEtpC,KAAAupC,GAAiBN,IACnBjpC,KAAK0oC,IACV1oC,KAAK0oC,GAAa,EAClB1oC,KAAKspC,OAGEtpC,KAAAwpC,GAAqBP,IAC5BA,EAAMQ,iBACNzpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAE3C3pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACpCliD,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,UAAYJ,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,WACpGJ,KAAKspC,KAEDtpC,KAAKkiD,IAAWliD,KAAK+oE,GAAa/oE,KAAK0oE,IAAc1oE,KAAKkiD,IAAWliD,KAAK+oE,KAC7E/oE,KAAK2oC,IAAY,EACjB3oC,KAAKozD,GAAU,KACfpzD,KAAKgqC,GAAahqC,KAAKkiD,MAIjBliD,KAAAiqC,GAAqBhB,IAC5BA,EAAMQ,iBACNzpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAE3C3pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACpCliD,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,UAAYJ,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,WACpGJ,KAAKspC,KAEDtpC,KAAKkiD,IAAWliD,KAAK+oE,GAAa/oE,KAAK0oE,IAAc1oE,KAAKkiD,IAAWliD,KAAK+oE,KAC7E/oE,KAAK2oC,IAAY,EACjB3oC,KAAKozD,GAAU,KACfpzD,KAAKgqC,GAAahqC,KAAKkiD,MAIjBliD,KAAAmqC,GAAmBlB,IAC1B,MAAMS,EAA2B1pC,KAAKqoC,EAAKsB,wBAE3C3pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKoqC,MAGEpqC,KAAAqqC,GAAmBpB,IAC1B,IAAKjpC,KAAKyoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2B1pC,KAAKqoC,EAAKsB,wBAE3C3pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKoqC,MAmCEpqC,KAAAsqC,GAAuBrB,IAC9B,IAAKjpC,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,WAAaJ,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,UAAYJ,KAAKyoC,EACtH,GAAIzoC,KAAK2oC,GACY,MAAhB3oC,KAAKozD,IAAiBpzD,KAAK+mC,EAAKqa,OAAOphD,KAAKozD,QAC1C,CACN,MAAM4V,EAAgChpE,KAAK+mC,EAAKutB,cAAct0D,KAAKozD,IAC7DxgB,EAAmBo2B,EAAuBhpE,KAAKozD,GAASxgB,SAAW5yC,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASuX,OAC9GsxD,EAAwBjpE,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASuX,OAErE3X,KAAKkiD,GAAUliD,KAAK+oE,GAA+B,GAAlB/oE,KAAK0oE,GACrCO,EAAgBjpE,KAAK+mC,EAAKy2B,oBAC7Bx9D,KAAKozD,GAAU,IAAIhe,GAAap1C,KAAK+mC,EAAM6L,EAAUq2B,EAAgB,GACrEjpE,KAAK+mC,EAAKqa,OAAOphD,KAAKozD,GAAS4V,IAG5BC,EAAgB,IACnBjpE,KAAKozD,GAAU,IAAIhe,GAAap1C,KAAK+mC,EAAM6L,EAAUq2B,EAAgB,GACrEjpE,KAAK+mC,EAAKqa,OAAOphD,KAAKozD,GAAS4V,IAKnChpE,KAAKyoC,GAAa,EAClBzoC,KAAK2oC,IAAY,EACjB3oC,KAAKspC,MAwBEtpC,KAAAglE,GAAmB,KAC1BhlE,KAAK+oE,GAAa/oE,KAAKknC,EAAiBlnC,KAAKyoE,GAAgBzoE,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASuX,OACxG3X,KAAK+kE,MAnLL/kE,KAAK+mC,EAAKwD,SAAS06B,MAAMjlE,KAAKglE,IAC9BhlE,KAAKglE,KAELhlE,KAAKqoC,EAAKvrC,YAAYkD,KAAK6nC,GAG3B,IAAK,IAAIv5C,EAAY,EAAGA,GAAK0R,KAAKwoE,GAAcl6E,IAC/C0R,KAAKqoC,EAAKvrC,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYkI,MAAOq/B,EAAG,EAAGC,EAAGj5C,EAAI0R,KAAKyoE,GAAejhC,MAAOxnC,KAAKinC,EAAcQ,OAAQznC,KAAKuoE,MAGnIvoE,KAAKqoC,EAAKvrC,YAAYkD,KAAK8nC,GAC3B9nC,KAAKqoC,EAAKvrC,YAAYkD,KAAK2oE,IAC3B3oE,KAAKqoC,EAAKvrC,YAAYkD,KAAK4oE,IAE3B,MAAMn+B,EAAqC,GAApBzqC,KAAKinC,EAI5BjnC,KAAK2oE,GAAa9qE,aAAa,IAAK,KAAK4sC,SAAmBA,EADjC,UACkEA,EADlE,UAE3BzqC,KAAK4oE,GAAe/qE,aAAa,IAAK,KAAK4sC,KAAUzqC,KAAKknC,EAHtC,OAG+DuD,EAFxD,KAE+EzqC,KAAKknC,EAJ1F,QAIoHuD,EAF9G,KAEqIzqC,KAAKknC,EAJhJ,QAMrBlnC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKwpC,IAClDzsC,SAAS2tC,iBAAiB,YAAa1qC,KAAKmqC,IAC5CptC,SAAS2tC,iBAAiB,UAAW1qC,KAAKsqC,IAC1CtqC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKqpC,IAClDrpC,KAAKsoC,UAAUoC,iBAAiB,WAAY1qC,KAAKupC,IAEjDvpC,KAAKsoC,UAAUoC,iBAAiB,aAAc1qC,KAAKiqC,IACnDjqC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKqqC,IAClDrqC,KAAKsoC,UAAUoC,iBAAiB,WAAY1qC,KAAKsqC,IACjDtqC,KAAKsoC,UAAUoC,iBAAiB,cAAe1qC,KAAKsqC,IAmE7CzwC,KACP,IAAImG,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,WAAYJ,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAApG,CACA,GAAIJ,KAAK2oC,GAAW,CACnB,MAAMsgC,EAAwBjpE,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASuX,OAEnEi7B,EADuC5yC,KAAK+mC,EAAKutB,cAAct0D,KAAKozD,IACnBpzD,KAAKozD,GAASxgB,SAAWq2B,EAEhF,IAAItxD,EAAiBsxD,EACrB,KAAOjpE,KAAKkiD,GAAUliD,KAAKgqC,GAAmC,IAArBhqC,KAAKyoE,IACzC9wD,EAAS3X,KAAK+mC,EAAKy2B,mBACtB7lD,IACA3X,KAAKgqC,IAAchqC,KAAKyoE,GAK1B,KAAOzoE,KAAKkiD,GAAUliD,KAAKgqC,GAAkC,GAArBhqC,KAAKyoE,IACxC9wD,EAAS,GACZA,IACA3X,KAAKgqC,IAAchqC,KAAKyoE,GAM1BzoE,KAAKozD,GAAU,IAAIhe,GAAap1C,KAAK+mC,EAAM6L,EAAUj7B,GACrD3X,KAAK+mC,EAAK4sB,qBAAqB3zD,KAAKozD,IAGjCpzD,KAAK0oC,GAAY1oC,KAAKspC,MA8BnBzvC,KAEP,IAAIqvE,GAA2B,EAC3BC,GAA6B,EAC7Bp+B,GAA+B,EAHJ/qC,KAAK0oC,IAAe1oC,KAAKyoC,IAMnDzoC,KAAKkiD,GAAUliD,KAAK+oE,GAAa/oE,KAAK0oE,GACzCQ,GAAkB,EACRlpE,KAAKkiD,GAAUliD,KAAK+oE,GAC9BI,GAAoB,EAEpBp+B,GAAsB,GAIxB/qC,KAAK2oE,GAAarqE,MAAM0sC,WAAak+B,EAAkB,UAAY,SACnElpE,KAAK4oE,GAAetqE,MAAM0sC,WAAam+B,EAAoB,UAAY,SACvEnpE,KAAK8nC,EAAiBxpC,MAAM0sC,WAAaD,EAAsB,UAAY,SAQpElxC,KAEPmG,KAAK0oE,GAAc1oE,KAAKyoE,GAAgBzoE,KAAK+mC,EAAKi4B,cAAgBh/D,KAAKuoE,GAEvEvoE,KAAKqoC,EAAK/pC,MAAM0sC,WAAchrC,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,UAAYJ,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAAY,SAAW,UACjJJ,KAAK6oE,IAAsB7oE,KAAK+oE,IAAc/oE,KAAK8oE,IAAsB9oE,KAAK0oE,KACjF1oE,KAAK6oE,GAAqB7oE,KAAK+oE,GAC/B/oE,KAAK8oE,GAAqB9oE,KAAK0oE,GAC/B1oE,KAAK6nC,EAAQhqC,aAAa,SAAU,GAAKmC,KAAK0oE,IAC9C1oE,KAAK8nC,EAAiBjqC,aAAa,SAAU,GAAKmC,KAAK0oE,IACvD1oE,KAAK6nC,EAAQhqC,aAAa,IAAK,IAAMmC,KAAK+oE,GAAa/oE,KAAK0oE,KAC5D1oE,KAAK8nC,EAAiBjqC,aAAa,IAAK,IAAMmC,KAAK+oE,GAAa/oE,KAAK0oE,KAErE1oE,KAAKsoE,GAAOc,eAEbppE,KAAKspC,MCxNP,MAAM+/B,GAANxvE,cACQmG,KAAAspE,OAAiB,EACjBtpE,KAAAomB,SAAwB,KACxBpmB,KAAAupE,QAAuB,KACvBvpE,KAAAqmB,SAAwB,KACxBrmB,KAAAsP,MAAgB,EAChBtP,KAAA4e,YAAsB,EACtB5e,KAAAwpE,SAAmB,EACnBxpE,KAAAuP,MAAgB,EAChBvP,KAAAwP,IAAc,EACdxP,KAAA6pB,KAAe,EACf7pB,KAAAypE,UAAoB,EACpBzpE,KAAA0pE,aAAuB,EACvB1pE,KAAA2P,KAAkB,UAGbg6D,GA2FZ9vE,YAAoBktC,EAA4B6iC,EAA+BC,GAA3D7pE,KAAA+mC,EAAAA,EAA4B/mC,KAAA4pE,GAAAA,EAA+B5pE,KAAA6pE,GAAAA,EA1FxE7pE,KAAA8pE,aAAuB,EACvB9pE,KAAA+pE,WAAqB,EACX/pE,KAAAgqE,GAAwCjrE,EAAImd,QAAQ,CAAEglD,GAAI,8BAAgClhE,KAAK6pE,GAAYviC,EAAG,IAAKC,EAAG,IAAK0iC,aAAc,mBACzIjqE,KAAAkqE,GAAwCnrE,EAAImd,QAAQ,CAAEglD,GAAI,8BAAgClhE,KAAK6pE,GAAYviC,EAAG,IAAKC,EAAG,IAAK0iC,aAAc,mBACzIjqE,KAAAmqE,GAAuCprE,EAAImd,QAAQ,CAAEglD,GAAI,6BAA+BlhE,KAAK6pE,GAAYviC,EAAG,IAAKC,EAAG,IAAK0iC,aAAc,mBACvIjqE,KAAAoqE,GAAiCrrE,EAAIqoC,KAAK,CAAEE,EAAG,IAAKC,EAAG,IAAKK,iBAAkB,OAAQP,KAAM,mCAAqCrnC,KAAK6pE,GAAa,MAC5J7pE,KAAAqqE,GAAmCtrE,EAAI4oC,MAC9B3nC,KAAAsqE,GAA+BvrE,EAAIqoC,KAAK,CAAEE,EAAG,IAAKC,EAAG,IAAKC,MAAO,IAAKH,KAAMtnC,EAAYuH,SAAUsgC,iBAAkB,SACpH5nC,KAAAuqE,GAAiCxrE,EAAIqoC,KAAK,CAAEmB,MAAO,wBAAyBlB,KAAMtnC,EAAY4H,iBAAkBogC,OAAQhoC,EAAYsH,aAAc2gC,eAAgB,EAAGwiC,mBAAoB,OAAQC,eAAgB,MAAO7iC,iBAAkB,OAAQoD,WAAY,WAC9PhrC,KAAA0qE,GAA8B3rE,EAAImpC,KAAK,CAAEb,KAAM,OAAQU,OAAQhoC,EAAYsH,aAAc2gC,eAAgB,IAAKJ,iBAAkB,SAC1I5nC,KAAA2qE,kBAAoCjsE,EAAKgL,IAAI,CAAE89B,MAAO,KAAMojC,cAAe,QAASC,gBAAiB,OAAQvsE,MAAO,uGAAwGwsE,oBAAqB,YACvO9qE,KAAAqoC,EAAsBtpC,EAAI4oC,IAAI,CAAErpC,MAAO,qBAAqByB,EAAYqH,4DAA6DogC,MAAO,OAAQC,OAAQ,QAC5K1oC,EAAIsiE,KACHrhE,KAAKgqE,GACLhqE,KAAKkqE,GACLlqE,KAAKmqE,IAENnqE,KAAKoqE,GACLpqE,KAAKuqE,GACLvqE,KAAKqqE,GACLrqE,KAAK0qE,GACL1qE,KAAKsqE,IAEUtqE,KAAAsoC,UAA4B5pC,EAAKgL,IAAI,CAAEpL,MAAO,oEAAsE0B,KAAKqoC,EAAMroC,KAAK2qE,mBAEnI3qE,KAAA+qE,GAA4B,GAC5B/qE,KAAAgrE,GAAyC,GACzChrE,KAAAirE,GAAqClsE,EAAIqoC,OACzCpnC,KAAAkrE,GAAoCnsE,EAAIqoC,OAIjDpnC,KAAAmrE,GAAiC,EACjCnrE,KAAAorE,GAAgC,EAChCprE,KAAAqrE,GAAkC,EACnCrrE,KAAAsrE,iBAA2B,EAC1BtrE,KAAAurE,GAA6B,EAI7BvrE,KAAAwrE,GAA6B,EAC7BxrE,KAAAyrE,GAA6B,EAI7BzrE,KAAA0rE,IAAwB,EAGxB1rE,KAAAwoC,EAAkB,EAClBxoC,KAAAkiD,GAAkB,EAClBliD,KAAAyoC,GAAsB,EACtBzoC,KAAA0oC,GAAsB,EACtB1oC,KAAA2rE,IAA0B,EAC1B3rE,KAAA4rE,IAA4B,EAC5B5rE,KAAA6rE,IAAuB,EACvB7rE,KAAA8rE,GAAkC,GAElC9rE,KAAA+rE,GAAuB,EACvB/rE,KAAAgsE,GAAuB,EACvBhsE,KAAAisE,GAAqB,EACrBjsE,KAAAksE,IAAsB,EACtBlsE,KAAAmsE,IAA0B,EAC1BnsE,KAAAosE,IAAqC,EACrCpsE,KAAAqsE,IAAmC,EACnCrsE,KAAAssE,IAAsC,EACtCtsE,KAAAusE,GAAoB,EACpBvsE,KAAAwsE,GAAqB,EACrBxsE,KAAAysE,GAAsB,EACtBzsE,KAAA0sE,IAAwB,EACxB1sE,KAAA2sE,GAAqC,KACrC3sE,KAAA4sE,GAAiD,KACjD5sE,KAAA6sE,IAA0C,EAC1C7sE,KAAAmkE,GAAyB,IAAIkF,GAC7BrpE,KAAA8sE,GAAkC,GAClC9sE,KAAAu7C,GAA2B,KAC3Bv7C,KAAA+sE,GAAqB,EACrB/sE,KAAAgtE,GAAwB,EACxBhtE,KAAAitE,IAA0B,EAC1BjtE,KAAAktE,IAA2B,EAC3BltE,KAAAmtE,IAA8B,EAC9BntE,KAAAotE,IAAgC,EAChCptE,KAAAszD,IAA2B,EAC3BtzD,KAAAqtE,IAA0B,EAC1BrtE,KAAAstE,IAAwB,EACxBttE,KAAAutE,IAA2B,EAC3BvtE,KAAAwtE,IAAsC,EACtCxtE,KAAAytE,IAAsC,EACtCztE,KAAA0tE,IAAoC,EACpC1tE,KAAA2tE,IAA8B,EA0C9B3tE,KAAA4tE,GAA8B3kC,IACrC,MAAM4kC,EAAwC5kC,EAAM6X,OAGpD,IAAIgtB,EAAoB92C,OAAO62C,EAAMlpB,WACrC,MAAKnB,MAAMsqB,IAAcA,GAAa,GAAKA,EAAY9tE,KAAKwrE,KAIrC,IAAnBqC,EAAMlpB,WAAsC,KAAnBkpB,EAAMlpB,UAAkB,CAEhDnB,MAAMsqB,KACTA,EAAY9tE,KAAKwrE,GACjBqC,EAAMlpB,UAAY,GAAK3kD,KAAKwrE,IAG7B,IAAIuC,EAAoBh/E,KAAKmU,MAAMnU,KAAKmgB,IAAI8nB,OAAOh3B,KAAKwrE,IAAqBz8E,KAAKyB,IAAIwmC,OAAOh3B,KAAKyrE,IAAqBqC,KACnHD,EAAMlpB,WAAaopB,EAAY,KAClCF,EAAMlpB,UAAYopB,EAAY,IAG/B,IAAIC,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IACjH/tE,KAAKmrE,IAA0B1xE,EAAa1K,KAAKmgB,IAAIngB,KAAKyB,IAAIwP,KAAKinC,EAAe,GAAe,EAAV+mC,EAAahuE,KAAKiuE,IAAcjuE,KAAKkuE,GAAa3+D,MAAQvP,KAAKmuE,GAAYn/D,MAAQ,EAAc,EAAVg/D,GAAc,IAC5LhuE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,OAAayB,KAAKmrE,GAAyB,MAEpF,MAAMjnD,EAA2B,IAAI8nB,GACrChsC,KAAK2sE,GAAczoD,EACnBlkB,KAAK+mC,EAAK4sB,qBAAqB3zD,KAAK2sE,IAEpCzoD,EAASgqB,OAAO,IAAI6Q,GAAiB/+C,KAAK+mC,EAAM/mC,KAAKkuE,GAAcluE,KAAKmuE,GAAYn/D,KAAMhP,KAAK+mC,EAAK5mC,KAAKua,eAAeqzD,EAAW/tE,KAAKouE,IAAkBpuE,KAAKmuE,GAAYhzE,SAAU6E,KAAK+pE,cAgYrL/pE,KAAAquE,gBAAkB,KACxB,MAAMC,EAAsBtuE,KAAKuuE,KACjC,IAAI9zD,EAAcza,KAAK+mC,EAAK5mC,KAAKya,cAAa,GAC9C5a,KAAK8rE,GAAmBv9E,OAASyR,KAAK+mC,EAAK5mC,KAAK8b,kBAChDjc,KAAK8sE,GAAoBv+E,OAASyR,KAAK+mC,EAAK5mC,KAAK8b,kBACjD,IAAK,IAAI3tB,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAK5mC,KAAKe,kBAAmB5S,IAC7D0R,KAAK8rE,GAAmBx9E,GAAK,CAACygB,EAAY,EAAG,EAAG0L,GAAM1L,EAAY,EAAGu/D,EAAa7zD,IAClFza,KAAK8sE,GAAoBx+E,GAAK,CAACmsB,EAAKA,GAErC,IAAK,IAAInsB,EAAY0R,KAAK+mC,EAAK5mC,KAAKe,kBAAmB5S,EAAI0R,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmB9S,IAC/H0R,KAAK8rE,GAAmBx9E,GAAK,CAACygB,EAAY,EAAG,EAAG0L,GAAM1L,EAAY,EAAGu/D,EAAa,IAClFtuE,KAAK8sE,GAAoBx+E,GAAK,CAACmsB,EAAK,GAErC,IAAK,IAAInsB,EAAY0R,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmB9S,EAAI0R,KAAK+mC,EAAK5mC,KAAK8b,kBAAmB3tB,IAC/H0R,KAAK8rE,GAAmBx9E,GAAK,CAACygB,EAAY,EAAG,EAAG0L,GAAM1L,EAAY,EAAGu/D,EAAa,IAClFtuE,KAAK8sE,GAAoBx+E,GAAK,CAACmsB,EAAK,IAI9Bza,KAAAwuE,GAAoBC,IAEvBzuE,KAAK6rE,KAAgB7rE,KAAK+pE,YAAc/pE,KAAK2rE,IAAkB3rE,KAAKyoC,GAAc3c,YAAYC,MAAQ/rB,KAAKisE,GAAa,KAAQjsE,KAAKmkE,GAAQmF,OAAStpE,KAAK+mC,EAAKutB,cAAct0D,KAAK2sE,MACtL3sE,KAAK2sE,GAAavgC,OAClBpsC,KAAKksE,IAAa,EAClBlsE,KAAKmsE,IAAiB,EACtBnsE,KAAK0uE,KACL1uE,KAAK+mC,EAAKwD,SAASokC,kBAGpB,MAAMC,EAAsB7/E,KAAKmU,MAAMlD,KAAK+mC,EAAKzN,MAAMhyB,UAEvD,GAAItH,KAAK+mC,EAAKzN,MAAM7L,UAA8B,MAAjBztB,KAAKu7C,IAAoBv7C,KAAK+mC,EAAK5mC,KAAK6lB,WAAWhmB,KAAK+mC,EAAK3mC,QAASrR,KAAKmU,MAAMlD,KAAK+mC,EAAKzN,MAAMhyB,YAActH,KAAKu7C,IAAaxsD,KAAKmU,MAAMlD,KAAK+mC,EAAKzN,MAAMhyB,WAAatH,KAAK+mC,EAAK5qB,IAAMnc,KAAK6pE,IAAa,CAC3O7pE,KAAKsqE,GAAazsE,aAAa,aAAc,WAC7C,MAAMgxE,EAAsB7uE,KAAK+mC,EAAKzN,MAAMhyB,SAAWsnE,EACnD7/E,KAAKC,IAAI6/E,EAAc7uE,KAAK+sE,IAAc,GAC7C/sE,KAAK+sE,GAAa8B,EAElB7uE,KAAK+sE,IAAgD,IAAjC8B,EAAc7uE,KAAK+sE,IAExC/sE,KAAKsqE,GAAazsE,aAAa,IAAK,GAAKpE,EAAauG,KAAK+sE,GAAa/sE,KAAKinC,EAAe,SAE5FjnC,KAAKsqE,GAAazsE,aAAa,aAAc,UAG1CmC,KAAK+mC,EAAKzN,MAAM7L,SAAWztB,KAAK+mC,EAAKu+B,YAActlE,KAAK2tE,IAAsBiB,IACjF,IAAIv8B,GAAiBryC,KAAK+mC,EAAM/mC,KAAK+mC,EAAK3mC,QAASwuE,GACnD5uE,KAAK+mC,EAAKwD,SAASokC,kBAEpB3uE,KAAK2tE,GAAqBiB,EAC1B/tD,OAAOoiD,sBAAsBjjE,KAAKwuE,KAG3BxuE,KAAAqpC,GAAkBJ,IACrBjpC,KAAK0oC,IACT1oC,KAAK0oC,GAAa,EAClB1oC,KAAK6rE,IAAc,IAGZ7rE,KAAAupC,GAAiBN,IACnBjpC,KAAK0oC,IACV1oC,KAAK0oC,GAAa,IAGX1oC,KAAAwpC,GAAqBP,IAC5BA,EAAMQ,iBACN,MAAMC,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7H9pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAK6rE,IAAc,EACnB7rE,KAAKksE,GAAajjC,EAAM6lC,SACxB9uE,KAAKmsE,IAAiB,EACtBnsE,KAAK0uE,MAGE1uE,KAAAiqC,GAAqBhB,IAC5BA,EAAMQ,iBACN,MAAMC,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvH9pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAK6rE,IAAc,EACnB7rE,KAAKksE,GAAajjC,EAAM6lC,SACxB9uE,KAAKmsE,IAAiB,EACtBnsE,KAAKisE,GAAangD,YAAYC,MAC9B/rB,KAAK0uE,MA2HE1uE,KAAAmqC,GAAmBlB,IAC1B,MAAMS,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7H9pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAK6rE,IAAc,EACnB7rE,KAAKoqC,MAGEpqC,KAAAqqC,GAAmBpB,IAC1B,IAAKjpC,KAAKyoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvH9pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKoqC,MAuWEpqC,KAAAsqC,GAAuBrB,IAC9B,IAAKjpC,KAAKmkE,GAAQmF,MAAO,OACzB,MAAMyF,EAA2B/uE,KAAK+mC,EAAKutB,cAAct0D,KAAK2sE,IAC9D,GAAI3sE,KAAKyoC,GAAcsmC,GAAuC,MAApB/uE,KAAK2sE,GAC9C,GAAI3sE,KAAKssE,GACRtsE,KAAK+mC,EAAKqa,OAAOphD,KAAK2sE,IACtB3sE,KAAK2sE,GAAc,KAEE,MAAjB3sE,KAAKu7C,IAAoBv7C,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,UAAUJ,KAAKu7C,GAAShrC,MAAMme,MAAK,SAAUC,EAAGC,GAAK,OAAQD,EAAEpf,OAASqf,EAAErf,MAASof,EAAEjf,QAAQ,GAAKkf,EAAElf,QAAQ,GAAKif,EAAEpf,MAAQqf,EAAErf,cAE7L,GAAIvP,KAAKosE,IAA6BpsE,KAAKqsE,IAA2BrsE,KAAKksE,GACjFlsE,KAAKgvE,GAAqBhvE,KAAK2sE,IAC/B3sE,KAAK2sE,GAAc,UACb,GAAI3sE,KAAK2rE,IAA0C,MAAxB3rE,KAAKmkE,GAAQoF,UAAoBvpE,KAAK2sE,GAAY7gC,UAAY9rC,KAAKosE,IAA6BpsE,KAAKqsE,IAA2BrsE,KAAKssE,IAA8BtsE,KAAKksE,GACzMlsE,KAAK+mC,EAAKqa,OAAOphD,KAAK2sE,IACtB3sE,KAAK2sE,GAAc,KAEE,MAAjB3sE,KAAKu7C,IAAoBv7C,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,UAAUJ,KAAKu7C,GAAShrC,MAAMme,MAAK,SAAUC,EAAGC,GAAK,OAAQD,EAAEpf,OAASqf,EAAErf,MAASof,EAAEjf,QAAQ,GAAKkf,EAAElf,QAAQ,GAAKif,EAAEpf,MAAQqf,EAAErf,aAE7L,CAEN,GAAqB,MAAjBvP,KAAKu7C,GAAkB,MAAM,IAAIxrD,MAErC,MAAMm0B,EAA2B,IAAI8nB,GAGrC,GAFA9nB,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAM,EAAG,KAEzB,GAA5B/mC,KAAKmkE,GAAQvlD,YAOhB,GANI5e,KAAKmkE,GAAQoF,QAAQ75D,QAAQnhB,QAAUL,EAAOwI,cACjDwtB,EAASgqB,OAAO,IAAI+G,GAAiBj1C,KAAK+mC,EAAM/mC,KAAKmkE,GAAQoF,QAASvpE,KAAKmkE,GAAQoF,QAAQ75D,QAAQ,GAAI,GAAG,IAE3GwU,EAASgqB,OAAO,IAAI+G,GAAiBj1C,KAAK+mC,EAAM/mC,KAAKmkE,GAAQoF,QAASvpE,KAAKmkE,GAAQ70D,MAAOtP,KAAKmkE,GAAQoF,QAAQ75D,QAAQnhB,SACvHyR,KAAKivE,GAAUjvE,KAAKmkE,GAAQoF,SAExBvpE,KAAK+mC,EAAKmoC,oBAAsBlvE,KAAK+mC,EAAKzN,MAAM7L,QAAS,CAC5D,MAAMxd,EAAmBlhB,KAAKyB,IAAItC,EAAOqF,aAAcyM,KAAKmkE,GAAQ30D,IAAMxP,KAAKmkE,GAAQ50D,OACvFvP,KAAK+mC,EAAKzN,MAAMjQ,kBAAoBpZ,EACpCjQ,KAAK+mC,EAAKzN,MAAM/P,iBAAmBvpB,KAAKmkE,GAAQoF,QAAQ75D,QAAQW,SAChErQ,KAAK+mC,EAAKzN,MAAMhQ,kBAAmB,QAGO,GAAvCtpB,KAAKmkE,GAAQoF,QAAQ75D,QAAQnhB,OAChC21B,EAASgqB,OAAO,IAAI6K,GAAgB/4C,KAAK+mC,EAAM/mC,KAAKu7C,GAAUv7C,KAAKmkE,GAAQoF,QAASvpE,KAAKmkE,GAAQqF,UAAU,IAE3GtlD,EAASgqB,OAAO,IAAI+G,GAAiBj1C,KAAK+mC,EAAM/mC,KAAKmkE,GAAQoF,QAASvpE,KAAKmkE,GAAQ70D,MAAOtP,KAAKmkE,GAAQoF,QAAQ75D,QAAQiF,QAAQ3U,KAAKmkE,GAAQ70D,QAAQ,IAGtJtP,KAAK+mC,EAAKqa,OAAOl9B,GAInBlkB,KAAKyoC,GAAa,EAClBzoC,KAAK2rE,IAAiB,EACtB3rE,KAAKosE,IAA4B,EACjCpsE,KAAKqsE,IAA0B,EAC/BrsE,KAAKssE,IAA6B,EAClCtsE,KAAK6sE,IAAiC,EACtC7sE,KAAK2qE,kBAAkB9sE,aAAa,OAAQkC,EAAYyH,eACxDxH,KAAK6kE,KACL7kE,KAAKspC,MAzkCL,IAAK,IAAIh7C,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAK5mC,KAAKsX,IAAKnpB,IAAK,CACpD,MAAM6gF,EAA4BpwE,EAAIqoC,OACtC+nC,EAAUtxE,aAAa,IAAK,KAC5BsxE,EAAUtxE,aAAa,OAAc,GAALvP,EAAUyR,EAAYkI,MAAQlI,EAAYiI,iBAC1EhI,KAAKgqE,GAAmBltE,YAAYqyE,GACpCnvE,KAAKgrE,GAAqB18E,GAAK6gF,EAGhCnvE,KAAKirE,GAAmBptE,aAAa,IAAK,KAC1CmC,KAAKirE,GAAmBptE,aAAa,IAAK,KAC1CmC,KAAKirE,GAAmBptE,aAAa,OAAQkC,EAAYiI,iBACzDhI,KAAKkqE,GAAmBptE,YAAYkD,KAAKirE,IACzCjrE,KAAKkrE,GAAkBrtE,aAAa,OAAQkC,EAAYiI,iBACxDhI,KAAKmqE,GAAkBrtE,YAAYkD,KAAKkrE,IAEpClrE,KAAK4pE,IACR5pE,KAAK6kE,KACL7kE,KAAKspC,KACLzoB,OAAOoiD,sBAAsBjjE,KAAKwuE,IAClCxuE,KAAKqoC,EAAKqC,iBAAiB,YAAa1qC,KAAKwpC,IAC7CzsC,SAAS2tC,iBAAiB,YAAa1qC,KAAKmqC,IAC5CptC,SAAS2tC,iBAAiB,UAAW1qC,KAAKsqC,IAC1CtqC,KAAKqoC,EAAKqC,iBAAiB,YAAa1qC,KAAKqpC,IAC7CrpC,KAAKqoC,EAAKqC,iBAAiB,WAAY1qC,KAAKupC,IAE5CvpC,KAAKqoC,EAAKqC,iBAAiB,aAAc1qC,KAAKiqC,IAC9CjqC,KAAKqoC,EAAKqC,iBAAiB,YAAa1qC,KAAKqqC,IAC7CrqC,KAAKqoC,EAAKqC,iBAAiB,WAAY1qC,KAAKsqC,IAC5CtqC,KAAKqoC,EAAKqC,iBAAiB,cAAe1qC,KAAKsqC,IAE/CtqC,KAAK2qE,kBAAkBjgC,iBAAiB,QAAS1qC,KAAK4tE,MAEtD5tE,KAAKsqE,GAAahsE,MAAM01D,QAAU,OAClCh0D,KAAKqoC,EAAKvrC,YAAYiC,EAAIqoC,KAAK,CAAEE,EAAG,EAAGC,EAAG,EAAGC,MAAO,IAAOC,OAAQ,IAAOJ,KAAMtnC,EAAYqH,iBAAkB9I,MAAO,oBAGtH0B,KAAKquE,kBAqCEx0E,KACP,MAAMu1E,EAA6BlhF,EAAOwF,QAAQsM,KAAK+mC,EAAK5mC,KAAK0b,QAAQloB,aACzE,OAAIy7E,EAAqB,GAAK,EAEtBlhF,EAAOqF,aAAe,EACnB67E,EAAqB,GAAK,EAE7BlhF,EAAOqF,aAAe,EACnB67E,EAAqB,GAAK,EAE7BlhF,EAAOqF,aAAe,EAEvBrF,EAAOqF,aAGPsG,KACP,OAAO3L,EAAOqF,aAAerF,EAAOwF,QAAQsM,KAAK+mC,EAAK5mC,KAAK0b,QAAQloB,aAG5DkG,GAAmB6lD,GAC1B,MAAMlH,EAAsBx4C,KAAKqvE,KACjC,OAAOtgF,KAAKmU,MAAMw8C,EAAQlH,GAAeA,EAGlC3+C,KAEP,GADAmG,KAAKmkE,GAAU,IAAIkF,GACfrpE,KAAKwoC,EAAU,GAAKxoC,KAAKwoC,EAAUxoC,KAAKinC,GAAgBjnC,KAAKkiD,GAAU,GAAKliD,KAAKkiD,GAAUliD,KAAKknC,GAAiBlnC,KAAK0rE,IAAgB,EAAG,OAE7I,MAAMlzB,EAAsBx4C,KAAKqvE,KACjCrvE,KAAKmkE,GAAQsF,UAAYzpE,KAAKwoC,EAAUxoC,KAAKiuE,GAC7CjuE,KAAKmkE,GAAQt6C,KACZ96B,KAAKmU,MACJnU,KAAKmgB,IAAI,EACRngB,KAAKyB,IAAIwP,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,aAAeilD,EAAax4C,KAAKmkE,GAAQsF,YAErFjxB,GAAeA,EAEnB,IAAI82B,GAAqB,EAEzB,GAAqB,MAAjBtvE,KAAKu7C,GAAkB,CAC1B,IAAK,MAAM9qC,KAAQzQ,KAAKu7C,GAAShrC,MAChC,GAAIE,EAAKjB,KAAOxP,KAAKmkE,GAAQsF,UACxBzpE,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,UACxCqQ,EAAKf,QAAQ,IAAM3gB,KAAKmU,MAAMlD,KAAKuvE,GAAgBvvE,KAAKkiD,OAC3DliD,KAAKmkE,GAAQ/9C,SAAW3V,GAEpB6+D,GACJtvE,KAAKmkE,GAAQqF,aAGdxpE,KAAKmkE,GAAQ/9C,SAAW3V,EACxBzQ,KAAKmkE,GAAQqF,iBAER,GAAI/4D,EAAKlB,OAASvP,KAAKmkE,GAAQsF,WAAah5D,EAAKjB,IAAMxP,KAAKmkE,GAAQsF,UACtEzpE,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SACxCqQ,EAAKf,QAAQ,IAAM3gB,KAAKmU,MAAMlD,KAAKuvE,GAAgBvvE,KAAKkiD,MAC3DliD,KAAKmkE,GAAQoF,QAAU94D,EACvB6+D,GAAY,KAGHA,GAAsC,MAAxBtvE,KAAKmkE,GAAQoF,SAAmB94D,EAAKlB,MAAQvP,KAAKmkE,GAAQoF,QAAQh6D,QACzFvP,KAAKmkE,GAAQqF,WAGdxpE,KAAKmkE,GAAQoF,QAAU94D,OAElB,GAAIA,EAAKlB,MAAQvP,KAAKmkE,GAAQsF,UAAW,CAC/C,IAAIzpE,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAKtC,CACNJ,KAAKmkE,GAAQ99C,SAAW5V,EACxB,MANA,GAAIA,EAAKf,QAAQ,IAAM3gB,KAAKmU,MAAMlD,KAAKuvE,GAAgBvvE,KAAKkiD,KAAW,CACtEliD,KAAKmkE,GAAQ99C,SAAW5V,EACxB,OASJ,GAAIzQ,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,WAAaJ,KAAKsrE,gBAE9D,GAAkD,MAA9CtrE,KAAKu7C,GAAShrC,MAAMvQ,KAAKmkE,GAAQqF,WAA6C,MAAxBxpE,KAAKmkE,GAAQoF,QAAiB,CAEvF,IAAIp8C,EAAiB,EAErB,KAAOntB,KAAKmkE,GAAQoF,QAAQh6D,MAAQvP,KAAKmkE,GAAQoF,QAAQ55D,KAAKwd,GAAQne,KAAOhP,KAAKmkE,GAAQsF,WAAat8C,EAASntB,KAAKmkE,GAAQoF,QAAQ55D,KAAKphB,QACzI4+B,IAGGA,EAAS,GACRntB,KAAKmkE,GAAQoF,QAAQh6D,MAAQvP,KAAKmkE,GAAQoF,QAAQ55D,KAAKwd,GAAQne,KAAOhP,KAAKmkE,GAAQsF,UAAYzpE,KAAKmkE,GAAQsF,WAAazpE,KAAKmkE,GAAQoF,QAAQh6D,MAAQvP,KAAKmkE,GAAQoF,QAAQ55D,KAAKwd,EAAS,GAAGne,OAC/Lme,IAIFntB,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,QAAS,WAClDyB,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,UAAW,IAEpD,IAAI0c,EAAsBjb,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,qBAAqBnvC,KAAK6pE,KAAaj2D,YAAY1lB,EAAO0K,SAAW,EAAIoH,KAAKmkE,GAAQoF,QAAQ75D,QAAQ,IAE7Lq+D,EAAoB/tE,KAAK+mC,EAAK5mC,KAAKkuB,eAAeruB,KAAKmkE,GAAQoF,QAAQ55D,KAAKwd,GAAQn5B,OAAQinB,GAG5F+yD,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IAEjH/tE,KAAKqrE,GAA0B,EAAc,EAAV2C,EACnChuE,KAAKmrE,IAA0B1xE,EAAa1K,KAAKmgB,IAAIngB,KAAKyB,IAAIwP,KAAKinC,EAAe,GAAe,EAAV+mC,EAAahuE,KAAKiuE,IAAcjuE,KAAKmkE,GAAQoF,QAAQh6D,MAAQvP,KAAKmkE,GAAQoF,QAAQ55D,KAAKwd,GAAQne,MAAQ,EAAc,EAAVg/D,GAAc,IAChNhuE,KAAKorE,IAAyB3xE,EAAauG,KAAKwvE,GAAoBxvE,KAAKmkE,GAAQoF,QAAQ75D,QAAQ,GAAK1P,KAAKgtE,IAAiB,IAAMhtE,KAAK0rE,GAAe1rE,KAAKyvE,IAAgB,GAE3KzvE,KAAKurE,GAAqBvrE,KAAKmkE,GAAQoF,QAAQ55D,KAAKwd,GAAQn5B,OAC5DgM,KAAKkuE,GAAeluE,KAAKmkE,GAAQoF,QACjCvpE,KAAKmuE,GAAcnuE,KAAKmkE,GAAQoF,QAAQ55D,KAAKwd,GAC7CntB,KAAKwrE,GAAqBxrE,KAAK+mC,EAAK5mC,KAAKkuB,eAAe,EAAGpT,GAC3Djb,KAAKyrE,GAAqBzrE,KAAK+mC,EAAK5mC,KAAKkuB,eAAeruB,KAAK+mC,EAAK5mC,KAAKyY,WAAWpX,IAAIyZ,GAAoBA,GAC1Gjb,KAAKouE,GAAkBnzD,EAEvBjb,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,OAAayB,KAAKmrE,GAAyB,MACpFnrE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,MAAYyB,KAAKorE,GAAwB,MAClFprE,KAAK2qE,kBAAkBvkE,YAAc,GAAK2nE,OAI1C/tE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,UAAW,QACpDyB,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAK2qE,kBAAkB9sE,aAAa,kBAAmB,cAG/CmC,KAAKsrE,kBACdtrE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,UAAW,QACpDyB,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAK2qE,kBAAkB9sE,aAAa,kBAAmB,eAIxDmC,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,UAAW,QACpDyB,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAK2qE,kBAAkB9sE,aAAa,kBAAmB,SAGxD,IAAI6xE,EAAqB1vE,KAAKuvE,GAAgBvvE,KAAKkiD,IAEnD,GAA4B,MAAxBliD,KAAKmkE,GAAQoF,QAAiB,CAEjCvpE,KAAKmkE,GAAQ50D,MAAQvP,KAAKmkE,GAAQoF,QAAQh6D,MAC1CvP,KAAKmkE,GAAQ30D,IAAMxP,KAAKmkE,GAAQoF,QAAQ/5D,IACxCxP,KAAKmkE,GAAQx0D,KAAO3P,KAAKmkE,GAAQoF,QAAQ55D,KAEzC,IAEIq9B,EAFA7xC,EAAmB,EACnBg2D,EAAgB,EAEhBtkB,EAAmB7sC,KAAKmkE,GAAQoF,QAAQ55D,KAAK,GACjD,IAAK,IAAIlD,EAAY,EAAGA,EAAIzM,KAAKmkE,GAAQoF,QAAQ55D,KAAKphB,OAAQke,IAAK,CAClEugC,EAAUH,EACVA,EAAU7sC,KAAKmkE,GAAQoF,QAAQ55D,KAAKlD,GACpC,MAAMkjE,EAAmB3vE,KAAKiuE,IAAcjuE,KAAKmkE,GAAQoF,QAAQh6D,MAAQy9B,EAAQh+B,MAC3E4gE,EAAoB5vE,KAAKiuE,IAAcjuE,KAAKmkE,GAAQoF,QAAQh6D,MAAQs9B,EAAQ79B,MAClF,GAAIhP,KAAKwoC,EAAUonC,EAAW,SAC9B,GAAI5vE,KAAKwoC,EAAUmnC,EAAU,MAAM,IAAI5/E,MACvC,MAAM8/E,GAAyB7vE,KAAKwoC,EAAUmnC,IAAaC,EAAYD,GACjEG,EAAc/gF,KAAKe,KAAK,EAAMf,KAAKe,KAAK,GAAOf,KAAKuB,IAAIu/E,EAAgB,GAAK,IAAQ,GACrFE,EAAqBhhF,KAAKC,IAAI69C,EAAQ1xC,SAAW6xC,EAAQ7xC,UAC/DA,EAAW6xC,EAAQ7xC,UAAY,EAAM00E,GAAiBhjC,EAAQ1xC,SAAW00E,EACzE1e,EAAQ2e,EAAMC,EAAa,IAC3B,MAGD,IAAIC,EAAsBh5C,OAAO0H,UAC7BuxC,GAAuBj5C,OAAO0H,UAC9BwxC,EAAuBl5C,OAAO0H,UAClC,IAAK,MAAMvuB,KAAOnQ,KAAKmkE,GAAQoF,QAAQ55D,KAAM,CACxCqgE,EAAc7/D,EAAIhV,WAAU60E,EAAc7/D,EAAIhV,UAC9C80E,EAAc9/D,EAAIhV,WAAU80E,EAAc9/D,EAAIhV,UAClD,MAAMg1E,EAAsBphF,KAAKC,IAAIgR,KAAKmkE,GAAQoF,QAAQh6D,MAAQY,EAAInB,KAAOhP,KAAKwoC,EAAUxoC,KAAKiuE,IAC7FiC,EAAeC,IAClBD,EAAeC,EACfnwE,KAAKmkE,GAAQuF,aAAe1pE,KAAKmkE,GAAQoF,QAAQ55D,KAAKgF,QAAQxE,IAQhE,GAJAu/D,GAAcv0E,EACd6E,KAAKmkE,GAAQ70D,MAAQtP,KAAKowE,GAAaV,GAAaM,GAAchwE,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SAAWlS,EAAOyK,UAAY,EAAIqH,KAAK+mC,EAAK5mC,KAAKsb,UAAYw0D,IAGrKjwE,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SAAU,CACzD,IAAIiwE,EAAkBlf,EACtB,IAAK,IAAI7iE,EAAY,EAAGA,EAAI0R,KAAKmkE,GAAQoF,QAAQ75D,QAAQnhB,OAAQD,IAAK,CACrE,MAAMuuE,EAAmB9tE,KAAKC,IAAIgR,KAAKmkE,GAAQoF,QAAQ75D,QAAQphB,GAAKohF,EAAa,IAC7E7S,EAAWwT,IACfA,EAAUxT,EACV78D,KAAKmkE,GAAQ70D,MAAQtP,KAAKmkE,GAAQoF,QAAQ75D,QAAQphB,KAIpD,IAAK,IAAIA,EAAY,EAAGA,EAAI0R,KAAKmkE,GAAQoF,QAAQ75D,QAAQnhB,OAAQD,IAChE,GAAI0R,KAAKmkE,GAAQoF,QAAQ75D,QAAQphB,IAAM0R,KAAKmkE,GAAQ70D,MAAO,CAC1DtP,KAAKmkE,GAAQvlD,WAAatwB,EAC1B,WAGI,CAGN0R,KAAKmkE,GAAQ70D,MAAQtP,KAAKowE,GAAaV,EAAY,EAAG1vE,KAAK+mC,EAAK5mC,KAAKsb,UACrE,MAAM60D,EAAwBtwE,KAAKuwE,GAAYvwE,KAAKuwE,GAAYhiF,OAAS,GAAGygB,KACtEwhE,EAAoBzhF,KAAKmU,MAAMlD,KAAKmkE,GAAQt6C,KAAO37B,EAAOqF,cAC1D+6E,EAAsBtuE,KAAKuuE,KAC3BkC,EAAmBzwE,KAAKmkE,GAAQt6C,KAAO37B,EAAOqF,aACpD,GAAqB,GAAjB+8E,EACHtwE,KAAKmkE,GAAQ50D,MAAQvP,KAAKmkE,GAAQt6C,UAC5B,GAAIymD,EAAgBpiF,EAAOqF,aACjCyM,KAAKmkE,GAAQ50D,MAAQihE,EAAYtiF,EAAOqF,kBAClC,GAAI+8E,GAAiBpiF,EAAOqF,aAClCyM,KAAKmkE,GAAQ50D,MAAQihE,EAAYtiF,EAAOqF,aACpC+6E,EAAcpgF,EAAOqF,cAAgBk9E,EAAWnC,IACnDtuE,KAAKmkE,GAAQ50D,OAASxgB,KAAKmU,MAAMutE,EAAWnC,GAAeA,OAEtD,CACNtuE,KAAKmkE,GAAQ50D,MAAQihE,EAAYtiF,EAAOqF,aACxC,IAAIm9E,EAAWxiF,EAAOqF,aAAe+8E,GAAiB,EAAIA,EAAgBvhF,KAAKyB,IAAI8/E,EAAehC,GAClG,KAAOoC,EAAWpC,GAAepgF,EAAOqF,aAAem9E,GAAY,GAClEA,IAED1wE,KAAKmkE,GAAQ50D,OAASxgB,KAAKmU,MAAMutE,EAAWC,GAAYA,EAEzD1wE,KAAKmkE,GAAQ30D,IAAMxP,KAAKmkE,GAAQ50D,MAAQ+gE,EACxC,IAAIK,EAAqB,EACrBC,EAAmB5wE,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,aAqB3D,GApB6B,MAAzByM,KAAKmkE,GAAQ/9C,WAChBuqD,EAAa3wE,KAAKmkE,GAAQ/9C,SAAS5W,KAEP,MAAzBxP,KAAKmkE,GAAQ99C,WAChBuqD,EAAW5wE,KAAKmkE,GAAQ99C,SAAS9W,OAE9BvP,KAAKmkE,GAAQ50D,MAAQohE,GACxB3wE,KAAKmkE,GAAQ50D,MAAQohE,EACrB3wE,KAAKmkE,GAAQ30D,IAAMxP,KAAKmkE,GAAQ50D,MAAQ+gE,EACpCtwE,KAAKmkE,GAAQ30D,IAAMohE,IACtB5wE,KAAKmkE,GAAQ30D,IAAMohE,IAEV5wE,KAAKmkE,GAAQ30D,IAAMohE,IAC7B5wE,KAAKmkE,GAAQ30D,IAAMohE,EACnB5wE,KAAKmkE,GAAQ50D,MAAQvP,KAAKmkE,GAAQ30D,IAAM8gE,EACpCtwE,KAAKmkE,GAAQ50D,MAAQohE,IACxB3wE,KAAKmkE,GAAQ50D,MAAQohE,IAInB3wE,KAAKmkE,GAAQ30D,IAAMxP,KAAKmkE,GAAQ50D,OAAS+gE,EAC5CtwE,KAAKuwE,GAAcvwE,KAAK8rE,GAAmB9rE,KAAK+mC,EAAK3mC,SACrDJ,KAAKmkE,GAAQx0D,KAAO3P,KAAKuwE,OACnB,CACNvwE,KAAKmkE,GAAQx0D,KAAO,GACpB,IAAK,MAAM+nC,KAAU13C,KAAKuwE,GAAa,CACtC,KAAI74B,EAAO1oC,MAAQhP,KAAKmkE,GAAQ30D,IAAMxP,KAAKmkE,GAAQ50D,OAG5C,CACNvP,KAAKmkE,GAAQx0D,KAAKhhB,KAAKogB,EAAY,EAAG/O,KAAKmkE,GAAQ30D,IAAMxP,KAAKmkE,GAAQ50D,MAAOmoC,EAAO1jD,SACpF,MAHA,GADAgM,KAAKmkE,GAAQx0D,KAAKhhB,KAAKogB,EAAY,EAAG2oC,EAAO1oC,KAAM0oC,EAAO1jD,SACtD0jD,EAAO1oC,MAAQhP,KAAKmkE,GAAQ30D,IAAMxP,KAAKmkE,GAAQ50D,MAAO,OAQ7D,GAAIvP,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAAU,CAEtD,GAAgC,MAA5BJ,KAAK8sE,IAA8E,MAA/C9sE,KAAK8sE,GAAoB9sE,KAAK+mC,EAAK3mC,SAC1E,IAAK,IAAI+P,EAAc,EAAGA,EAAMnQ,KAAKmkE,GAAQx0D,KAAKphB,OAAQ4hB,IACzDnQ,KAAKmkE,GAAQx0D,KAAKQ,GAAKnc,OAASgM,KAAK8sE,GAAoB9sE,KAAK+mC,EAAK3mC,SAAS+P,GAK9E,IAAI0gE,EAAoB7wE,KAAK+mC,EAAK5mC,KAAKya,aAAa5a,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAAUJ,KAAK+mC,EAAK3mC,QAASJ,KAAK+mC,EAAKoI,qBAAqBnvC,KAAK6pE,IAAa7pE,KAAKmkE,GAAQ70D,OACpLwhE,EAAyB,EAC7B,IAAK,MAAM3gE,KAAOnQ,KAAKmkE,GAAQx0D,KAC1BQ,EAAInc,OAAS88E,IAChBA,EAAiB3gE,EAAInc,QAIvB,GAAI88E,EAAiBD,EACpB,IAAK,MAAM1gE,KAAOnQ,KAAKmkE,GAAQx0D,KAC9BQ,EAAInc,OAASjF,KAAKgb,MAAMoG,EAAInc,QAAU68E,EAAYC,KAOtD9wE,KAAKmkE,GAAQmF,OAAQ,EAIdzvE,KACP,OAAOmG,KAAKmkE,GAAQmF,OAAStpE,KAAK+mC,EAAK0T,UAAU4B,wBAA0Br8C,KAAK+mC,EAAK0T,UAAUsB,uBAAyB/7C,KAAKmkE,GAAQsF,WAAazpE,KAAKmkE,GAAQsF,WAAazpE,KAAK+mC,EAAK0T,UAAUuB,oBAGzLniD,KACP,OAAOmG,KAAKmkE,GAAQmF,OAAStpE,KAAK+mC,EAAK0T,UAAU4B,yBAAsD,GAA5Br8C,KAAKmkE,GAAQvlD,YAAoB5e,KAAK+mC,EAAK0T,UAAUsB,sBAAwB,GAAK/7C,KAAKmkE,GAAQsF,WAAazpE,KAAKmkE,GAAQsF,WAAazpE,KAAK+mC,EAAK0T,UAAUsB,sBAAwB,KAGtPliD,KACP,OAAOmG,KAAKmkE,GAAQmF,OAAStpE,KAAK+mC,EAAK0T,UAAU4B,yBAAsD,GAA5Br8C,KAAKmkE,GAAQvlD,YAAoB5e,KAAK+mC,EAAK0T,UAAUuB,oBAAsB,MAAQh8C,KAAKmkE,GAAQsF,WAAazpE,KAAKmkE,GAAQsF,WAAazpE,KAAK+mC,EAAK0T,UAAUuB,oBAAsB,EAGrPniD,GAAgBk3E,GACvB,OAAOhiF,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAIwP,KAAKgxE,GAAc,EAAGhxE,KAAKgxE,GAAeD,EAAS/wE,KAAK0rE,KAAkB1rE,KAAKgtE,GAGpGnzE,GAAao3E,EAAezgF,EAAa0e,GAMhD,OALI+hE,EAAQzgF,IAAKygF,EAAQzgF,GACrBygF,EAAQ/hE,IAAK+hE,EAAQ/hE,GAIlBngB,KAAKmU,MAAM+tE,GAqCXp3E,GAAU4W,GACjBzQ,KAAKuwE,GAAc,GACnB,IAAK,MAAM74B,KAAUjnC,EAAKd,KACzB3P,KAAKuwE,GAAY5hF,KAAKogB,EAAY,EAAG2oC,EAAO1oC,KAAM0oC,EAAO1jD,SAE1D,IAAK,IAAI1F,EAAY,EAAGA,EAAI0R,KAAKuwE,GAAYhiF,OAAS,GACjDyR,KAAKuwE,GAAYjiF,EAAI,GAAG0F,QAAUgM,KAAKuwE,GAAYjiF,GAAG0F,QACzDgM,KAAKuwE,GAAYjiF,GAAG0F,QAAUgM,KAAKuwE,GAAYjiF,EAAI,GAAG0F,OACtDgM,KAAKuwE,GAAY/xD,OAAOlwB,EAAG,GAE3BA,IAGF0R,KAAK8rE,GAAmB9rE,KAAK+mC,EAAK3mC,SAAWJ,KAAKuwE,GAElDvwE,KAAK8sE,GAAoB9sE,KAAK+mC,EAAK3mC,SAAW,GAC9C,IAAK,IAAI+P,EAAc,EAAGA,EAAMnQ,KAAKuwE,GAAYhiF,OAAQ4hB,IACxDnQ,KAAK8sE,GAAoB9sE,KAAK+mC,EAAK3mC,SAASzR,KAAKqR,KAAKuwE,GAAYpgE,GAAKnc,QAIlE6F,sBACFmG,KAAK0oC,IACR1oC,KAAK+mC,EAAKzN,MAAMhyB,SAAWtH,KAAK+mC,EAAK5qB,IAAMnc,KAAK6pE,GAAc7pE,KAAKwoC,EAAUxoC,KAAKinC,GA8F7EptC,oBAAoBq3E,GAC1B,GAAIlxE,KAAKsrE,gBAAiB,CAIzB,GAHAtrE,KAAKsrE,iBAAkB,EACvBtrE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,iBAAkB,QAEvDsiB,OAAOswD,aAAc,CACxB,IAAIC,EAAwBvwD,OAAOswD,eACxB,MAAPC,GACHA,EAAIC,kBAGN,GAAIH,EAAgB,CACnBlxE,KAAKmuE,GAAYn6E,OAASgM,KAAKurE,GAE/B,IAAIwC,EAAoB/tE,KAAK+mC,EAAK5mC,KAAKkuB,eAAeruB,KAAKurE,GAAoBvrE,KAAKouE,IAGhFJ,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IACjH/tE,KAAKmrE,IAA0B1xE,EAAa1K,KAAKmgB,IAAIngB,KAAKyB,IAAIwP,KAAKinC,EAAe,GAAe,EAAV+mC,EAAahuE,KAAKiuE,IAAcjuE,KAAKkuE,GAAa3+D,MAAQvP,KAAKmuE,GAAYn/D,MAAQ,EAAc,EAAVg/D,GAAc,IAC5LhuE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,OAAayB,KAAKmrE,GAAyB,MAEpF,MAAMjnD,EAA2B,IAAI8nB,GACrChsC,KAAK2sE,GAAczoD,EACnBlkB,KAAK+mC,EAAK4sB,qBAAqB3zD,KAAK2sE,IAEpCzoD,EAASgqB,OAAO,IAAI6Q,GAAiB/+C,KAAK+mC,EAAM/mC,KAAKkuE,GAAcluE,KAAKmuE,GAAYn/D,KAAMhP,KAAKurE,GAAoBvrE,KAAKmuE,GAAYhzE,SAAU6E,KAAK+pE,YAEnJ/pE,KAAK2sE,GAAc,KAGa3sE,KAAK+mC,EAAKutB,cAAct0D,KAAK2sE,KAErC,MAApB3sE,KAAK2sE,KACR3sE,KAAK+mC,EAAKqa,OAAOphD,KAAK2sE,IACtB3sE,KAAK2sE,GAAc,OAMf9yE,KAEP,GAAImG,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,UAAwE,QAA5DJ,KAAK2qE,kBAAkBrsE,MAAMiC,iBAAiB,YACtGP,KAAKwoC,GAAWxoC,KAAKmrE,GAAyB,GAC9CnrE,KAAKwoC,GAAWxoC,KAAKmrE,GAAyBnrE,KAAKqrE,GAA0B,GAC7ErrE,KAAKkiD,IAAWliD,KAAKorE,GAAwB,GAC7CprE,KAAKkiD,IAAWliD,KAAKorE,GAAwB,GAAI,CAIjD,GAFAprE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAK2qE,kBAAkB9sE,aAAa,kBAAmB,QACnDgjB,OAAOswD,aAAc,CACxB,IAAIC,EAAwBvwD,OAAOswD,eACxB,MAAPC,GACHA,EAAIE,kBAAkBtxE,KAAK2qE,mBAG7B9pD,OAAO0gC,YAAW,KAAQvhD,KAAK2qE,kBAAkBnpB,WACjDxhD,KAAKsrE,iBAAkB,MACjB,CACNtrE,KAAKuxE,qBAAoB,GACrBvxE,KAAK+mC,EAAKmoC,mBAAmBlvE,KAAK+mC,EAAKzN,MAAMk4C,oBACjDxxE,KAAKyoC,GAAa,EAClBzoC,KAAK+rE,GAAe/rE,KAAKwoC,EACzBxoC,KAAKgsE,GAAehsE,KAAKkiD,GACzBliD,KAAK6kE,KACL7kE,KAAKspC,KACL,MAAMplB,EAA2B,IAAI8nB,GAKrC,GAJAhsC,KAAK2sE,GAAczoD,EACnBlkB,KAAK6sE,GAAiC7sE,KAAK+mC,EAAKutB,cAAct0D,KAAK4sE,IACnE5sE,KAAK+mC,EAAK4sB,qBAAqB3zD,KAAK2sE,IAEhC3sE,KAAKyxE,KACRzxE,KAAKosE,IAA4B,OAC3B,GAAIpsE,KAAK0xE,KACf1xE,KAAKqsE,IAA0B,OACzB,GAAIrsE,KAAKksE,GACf,GAAKlsE,KAAK+mC,EAAK0T,UAAU4B,yBAAsD,GAA5Br8C,KAAKmkE,GAAQvlD,YAAqB5e,KAAK2xE,KACzFztD,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAM,EAAG,SAEzD,GAA4B,MAAxB/mC,KAAKmkE,GAAQoF,QAChBrlD,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAM/mC,KAAKmkE,GAAQoF,QAAQh6D,MAAOvP,KAAKmkE,GAAQoF,QAAQ/5D,UACjG,CACN,MAAMD,EAAgBxgB,KAAKmgB,IAAI,EAAGngB,KAAKyB,KAAKwP,KAAK+mC,EAAK5mC,KAAKub,YAAc,GAAKxtB,EAAOqF,aAAcxE,KAAKmU,MAAMlD,KAAKmkE,GAAQsF,UAAYv7E,EAAOqF,cAAgBrF,EAAOqF,eAC/Jic,EAAcD,EAAQrhB,EAAOqF,aACnC2wB,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAMx3B,EAAOC,SAGzD,GAAIxP,KAAK2xE,KACf3xE,KAAKssE,IAA6B,OAC5B,GAAItsE,KAAKmkE,GAAQmF,OAAiC,MAAxBtpE,KAAKmkE,GAAQoF,QAAiB,CAC9DrlD,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAM,EAAG,IAQzD,MAAMt2B,EAAa,IAAIpB,EAAKrP,KAAKmkE,GAAQ70D,MAAOtP,KAAKmkE,GAAQ50D,MAAOvP,KAAKmkE,GAAQ30D,IAAK,EAAGxP,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,UACpIqQ,EAAKd,KAAO,GACZ,IAAK,MAAM+nC,KAAU13C,KAAKmkE,GAAQx0D,KACjCc,EAAKd,KAAKhhB,KAAKogB,EAAY,EAAG2oC,EAAO1oC,KAAM0oC,EAAO1jD,SAEnDkwB,EAASgqB,OAAO,IAAIuI,GAA0Bz2C,KAAK+mC,EAAM/mC,KAAK+mC,EAAK3mC,QAASJ,KAAK+mC,EAAK5qB,MACtF,MAAMD,EAA0Blc,KAAK+mC,EAAK6qC,kBAAkB5xE,KAAK6pE,IACjE,GAAe,MAAX3tD,EAAiB,MAAM,IAAInsB,MAG/B,GAFAm0B,EAASgqB,OAAO,IAAI6K,GAAgB/4C,KAAK+mC,EAAM7qB,EAASzL,EAAMzQ,KAAKmkE,GAAQqF,WAEvExpE,KAAK+mC,EAAKmoC,oBAAsBlvE,KAAK+mC,EAAKzN,MAAM7L,QAAS,CAE5D,MAAMxd,EAAmBlhB,KAAKyB,IAAItC,EAAOqF,aAAcyM,KAAKmkE,GAAQ30D,IAAMxP,KAAKmkE,GAAQ50D,OACvFvP,KAAK+mC,EAAKzN,MAAMjQ,kBAAoBpZ,EACpCjQ,KAAK+mC,EAAKzN,MAAM/P,iBAAmB,CAACvpB,KAAKmkE,GAAQ70D,OACjDtP,KAAK+mC,EAAKzN,MAAMhQ,kBAAmB,GAGrCtpB,KAAK6xE,MAyBCh4E,KACHmG,KAAK+mC,EAAKmoC,mBAAqBlvE,KAAK0oC,GAAY1oC,KAAK+mC,EAAKzN,MAAMk4C,oBAMpE,MAAMzC,EAA2B/uE,KAAK+mC,EAAKutB,cAAct0D,KAAK2sE,IAE9D,IAAK3sE,KAAK2rE,IAAkB3rE,KAAKyoC,GAAczoC,KAAKmkE,GAAQmF,OAASyF,EAAiB,CACrF,MAAM+C,EAAa9xE,KAAKwoC,EAAUxoC,KAAK+rE,GACjCgG,EAAa/xE,KAAKkiD,GAAUliD,KAAKgsE,GACnCj9E,KAAKe,KAAKgiF,EAAKA,EAAKC,EAAKA,GAAM,IAClC/xE,KAAK2rE,IAAiB,EACtB3rE,KAAK4rE,GAAmB78E,KAAKC,IAAI8iF,IAAO/iF,KAAKC,IAAI+iF,IAQnD,GAJI/xE,KAAKksE,IAAclsE,KAAK4rE,IAAoB78E,KAAKC,IAAIgR,KAAK+rE,GAAe/rE,KAAKwoC,GAAW,IAC5FxoC,KAAKmsE,IAAiB,GAGnBnsE,KAAK2rE,IAAkB3rE,KAAKyoC,GAAczoC,KAAKmkE,GAAQmF,OAASyF,EAAiB,CACpF/uE,KAAK2sE,GAAavgC,OAClB,MAAMloB,EAA2B,IAAI8nB,GACrChsC,KAAK2sE,GAAczoD,EACnBlkB,KAAK+mC,EAAK4sB,qBAAqB3zD,KAAK2sE,IAEpC,MAAMn0B,EAAsBx4C,KAAKqvE,KAC3B1iD,EAAsB3sB,KAAKgyE,GAAmBhyE,KAAKwoC,EAAUxoC,KAAKiuE,IACxE,GAAIjuE,KAAKosE,GACRloD,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAMh4C,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAIwP,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,aAAco5B,IAAe3sB,KAAK+mC,EAAK0T,UAAUuB,sBAChKh8C,KAAK6xE,UACC,GAAI7xE,KAAKqsE,GACfnoD,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAM/mC,KAAK+mC,EAAK0T,UAAUsB,sBAAuBhtD,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAIwP,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,aAAco5B,MACxK3sB,KAAK6xE,UACC,GAAI7xE,KAAKssE,GAA4B,CAC3C,MAAMpwD,EAA0Blc,KAAK+mC,EAAK6qC,kBAAkB5xE,KAAK6pE,IACjE,GAAI7pE,KAAK2rE,IAA6B,MAAXzvD,EAAiB,CAC3Clc,KAAK2sE,GAAavgC,OAClB,MAAMloB,EAA2B,IAAI8nB,GACrChsC,KAAK2sE,GAAczoD,EACnBlkB,KAAK+mC,EAAK4sB,qBAAqB3zD,KAAK2sE,IAEpC,MAAMsF,EAAuB/jF,EAAOmE,OAAO2N,KAAK+mC,EAAK5mC,KAAKib,OAAO7oB,MAAMs1B,QAAOyf,GAAKA,IAAG/4C,OAChF2jF,EAAqBlyE,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SAAW,EAAIJ,KAAK+mC,EAAK5mC,KAAKsX,IAAMw6D,EACpGE,EAAuBpjF,KAAKgb,OAAO/J,KAAKwoC,EAAUxoC,KAAK+rE,KAAiB/rE,KAAKiuE,GAAaz1B,IAAgBA,EAC1G45B,EAA2BrjF,KAAKgb,OAAO/J,KAAKgsE,GAAehsE,KAAKkiD,KAAYliD,KAAK0rE,GAAewG,IACtGhuD,EAASgqB,OAAO,IAAIgP,GAAwBl9C,KAAK+mC,EAAM/mC,KAAK+mC,EAAK3mC,QAAS8b,EAASi2D,EAAcC,UAG5F,GAAIpyE,KAAKksE,IAAclsE,KAAKmsE,IAElC,GAAInsE,KAAK2rE,GAAgB,CACxB,IAAIp8D,EAAgBxgB,KAAKmgB,IAAI,EAAGngB,KAAKyB,KAAKwP,KAAK+mC,EAAK5mC,KAAKub,YAAc,GAAKxtB,EAAOqF,aAAcxE,KAAKmU,MAAMlD,KAAKmkE,GAAQsF,UAAYv7E,EAAOqF,cAAgBrF,EAAOqF,eAC/Jic,EAAcD,EAAQrhB,EAAOqF,aAOjC,GAN4B,MAAxByM,KAAKmkE,GAAQoF,UAChBh6D,EAAQxgB,KAAKmgB,IAAIK,EAAOvP,KAAKmkE,GAAQoF,QAAQh6D,OAC7CC,EAAMzgB,KAAKyB,IAAIgf,EAAKxP,KAAKmkE,GAAQoF,QAAQ/5D,MAItCmd,EAAcpd,EAAO,CACxBA,EAAQ,EACR,MAAM2M,EAA0Blc,KAAK+mC,EAAK6qC,kBAAkB5xE,KAAK6pE,IACjE,GAAe,MAAX3tD,EACH,IAAK,IAAI5tB,EAAY,EAAGA,EAAI4tB,EAAQ3L,MAAMhiB,OAAQD,IAC7C4tB,EAAQ3L,MAAMjiB,GAAGihB,OAASod,IAC7Bpd,EAAQ2M,EAAQ3L,MAAMjiB,GAAGihB,OAEtB2M,EAAQ3L,MAAMjiB,GAAGkhB,KAAOmd,IAC3Bpd,EAAQ2M,EAAQ3L,MAAMjiB,GAAGkhB,KAI5B,IAAK,IAAIoa,EAAe,EAAGA,GAAQ5pB,KAAK+mC,EAAK5mC,KAAKub,YAAakO,IAAQ,CACtE,MAAMC,EAAeD,EAAO17B,EAAOqF,aAC/Bgc,GAASsa,GAAQA,GAAQ8C,IAC5Bpd,EAAQsa,IAKX,GAAI8C,EAAcnd,EAAK,CACtBA,EAAMthB,EAAOqF,aAAeyM,KAAK+mC,EAAK5mC,KAAKub,YAC3C,MAAMQ,EAA0Blc,KAAK+mC,EAAK6qC,kBAAkB5xE,KAAK6pE,IACjE,GAAe,MAAX3tD,EACH,IAAK,IAAI5tB,EAAY,EAAGA,EAAI4tB,EAAQ3L,MAAMhiB,OAAQD,IAAK,CACtD,GAAI4tB,EAAQ3L,MAAMjiB,GAAGihB,OAASod,EAAa,CAC1Cnd,EAAM0M,EAAQ3L,MAAMjiB,GAAGihB,MACvB,MAED,GAAI2M,EAAQ3L,MAAMjiB,GAAGkhB,KAAOmd,EAAa,CACxCnd,EAAM0M,EAAQ3L,MAAMjiB,GAAGkhB,IACvB,OAIH,IAAK,IAAIoa,EAAe,EAAGA,GAAQ5pB,KAAK+mC,EAAK5mC,KAAKub,YAAakO,IAAQ,CACtE,MAAMC,EAAeD,EAAO17B,EAAOqF,aAC/Bo5B,EAAc9C,GAAQA,EAAOra,IAChCA,EAAMqa,IAKT3F,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAMx3B,EAAOC,IAC7DxP,KAAK6xE,WAIN,GAA4B,MAAxB7xE,KAAKmkE,GAAQoF,QAAiB,CAIjC,IAAI8I,EACAC,EAJJpuD,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAM,EAAG,IAKrDpa,EAAc3sB,KAAKmkE,GAAQ50D,OAC9B8iE,GAAY,EACZC,EAAetyE,KAAKmkE,GAAQ50D,MAAQod,IAEpC0lD,GAAY,EACZC,EAAe3lD,EAAc3sB,KAAKmkE,GAAQ50D,MAAQipC,GAGnD,IA2CIjpC,EACAC,EA5CA8gE,EAAwB93B,EAC5B,IAAK,IAAIlqD,EAAYkqD,EAAalqD,GAAK0R,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,aAAcjF,GAAKkqD,EAAa,CAC1G,GAAmB,GAAfA,GACH,GAAIlqD,EAAI,QAED,GAAIA,GAAKJ,EAAOqF,aAAe,GACrC,GAAIjF,EAAI,GAAK,GAAKA,EAAI,GAAK,EAC1B,cAEK,GAAIA,GAA2B,IAAtBJ,EAAOqF,cACtB,GAAIjF,EAAI,GAAK,GAAKA,EAAI,GAAK,EAC1B,cAEK,GAAIA,EAAIJ,EAAOqF,cAAgB,EACrC,cAGD,GAAIjF,GAAK,EAAIkqD,GACZlqD,EAAIJ,EAAOqF,cAAgB,GAC3BjF,GAA2B,EAAtBJ,EAAOqF,aAAqB,GACjCjF,GAA2B,EAAtBJ,EAAOqF,aAAqB,GACjCjF,GAA2B,EAAtBJ,EAAOqF,aAAqB,EACjC,SAIF,MAAMg/E,EAAwBjkF,EAC9B,GAAIikF,GAAiBD,EAAc,CAClChC,EAAgBiC,EAChB,MAMD,GAJIA,EAAgBD,IACnBhC,EAAgBiC,GAGbA,EAAgBD,EAAc,CAC7BhC,EAAgBgC,EAAe95B,IAClC83B,EAAgBiC,GAEjB,OAiBF,GAVIF,GACH7iE,EAAMxP,KAAKmkE,GAAQ50D,MACnBA,EAAQC,EAAM8gE,IAEd/gE,EAAQvP,KAAKmkE,GAAQ50D,MACrBC,EAAMD,EAAQ+gE,GAEX/gE,EAAQ,IAAGA,EAAQ,GACnBC,EAAMxP,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,eAAcic,EAAMxP,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,cAElGgc,EAAQC,EAAK,CAChB0U,EAASgqB,OAAO,IAAIuI,GAA0Bz2C,KAAK+mC,EAAM/mC,KAAK+mC,EAAK3mC,QAASJ,KAAK+mC,EAAK5qB,MACtF,MAAMD,EAA0Blc,KAAK+mC,EAAK6qC,kBAAkB5xE,KAAK6pE,IACjE,GAAe,MAAX3tD,EAAiB,MAAM,IAAInsB,MAG/B,IAAIzB,EACJ,IAFA41B,EAASgqB,OAAO,IAAIwH,GAAmB11C,KAAK+mC,EAAM7qB,EAAS3M,EAAOC,EAAK,IAAIH,EAAKrP,KAAKmkE,GAAQ70D,MAAO,EAAG,EAAG,KAErGhhB,EAAI,EAAGA,EAAI4tB,EAAQ3L,MAAMhiB,UACzB2tB,EAAQ3L,MAAMjiB,GAAGihB,OAASC,GADOlhB,KAGtC,MAAMkkF,EAAgB,IAAInjE,EAAKrP,KAAKmkE,GAAQ70D,MAAOC,EAAOC,EACzDxP,KAAK+mC,EAAK5mC,KAAKka,iBAAiBra,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAAUJ,KAAK+mC,EAAK3mC,QAASJ,KAAK+mC,EAAKoI,qBAAqBnvC,KAAK6pE,IAAa7pE,KAAKmkE,GAAQ70D,OACpKtP,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,UAC5C8jB,EAASgqB,OAAO,IAAI6K,GAAgB/4C,KAAK+mC,EAAM7qB,EAASs2D,EAASlkF,IACjE0R,KAAKivE,GAAUuD,GAEfxyE,KAAKusE,GAAY8F,EAAY9iE,EAAQC,EACrCxP,KAAKwsE,GAAaxsE,KAAKmkE,GAAQ70D,MAC/BtP,KAAKysE,GAAc+F,EAAQ7iE,KAAK0iE,EAAY,EAAI,GAAGr+E,OACnDgM,KAAK0sE,IAAe,EAGrB,IAAI+F,EAA8BzyE,KAAKu7C,GAEvCv7C,KAAKu7C,GAAWv7C,KAAK+mC,EAAK6qC,kBAAkB5xE,KAAK6pE,IAE5B,MAAjB7pE,KAAKu7C,IAAoBv7C,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,UAAYJ,KAAK4pE,IAAgB6I,GAAezyE,KAAKu7C,IAE1Hv7C,KAAKu7C,GAAShrC,MAAMme,MAAK,SAAUC,EAAGC,GAAK,OAAQD,EAAEpf,OAASqf,EAAErf,MAASof,EAAEjf,QAAQ,GAAKkf,EAAElf,QAAQ,GAAKif,EAAEpf,MAAQqf,EAAErf,cAG9G,GAAIvP,KAAK4rE,GAAkB,CAGjC1nD,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAM,EAAG,IAEzD,MAAMjkB,GAAiB9iB,KAAKwoC,EAAUxoC,KAAK+rE,IAAgB/rE,KAAKiuE,GAE1DyE,EAAsB1yE,KAAKmkE,GAAQoF,QAAQ55D,KAAK3P,KAAKmkE,GAAQuF,cACnE,IAAIryB,EAAsBtoD,KAAKgb,OAAO/J,KAAKmkE,GAAQoF,QAAQh6D,MAAQmjE,EAAW1jE,KAAO8T,GAAS01B,GAAeA,EAI7G,GAHInB,EAAc,IAAGA,EAAc,GAC/BA,EAAcr3C,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,eAAc8jD,EAAcr3C,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,cAEjG,MAAjByM,KAAKu7C,GAAkB,MAAM,IAAIxrD,MAErC,GAAIsnD,GAAer3C,KAAKmkE,GAAQoF,QAAQh6D,OAASvP,KAAKmkE,GAAQuF,cAAgB1pE,KAAKmkE,GAAQoF,QAAQ55D,KAAKphB,OAAS,GAChH8oD,GAAer3C,KAAKmkE,GAAQoF,QAAQ/5D,KAAoC,GAA7BxP,KAAKmkE,GAAQuF,aAExDxlD,EAASgqB,OAAO,IAAI6K,GAAgB/4C,KAAK+mC,EAAM/mC,KAAKu7C,GAAUv7C,KAAKmkE,GAAQoF,QAASvpE,KAAKmkE,GAAQqF,UAAU,IAE3GxpE,KAAK0sE,IAAe,MACd,CACN,MAAMn9D,EAAgBxgB,KAAKyB,IAAIwP,KAAKmkE,GAAQoF,QAAQh6D,MAAO8nC,GACrD7nC,EAAczgB,KAAKmgB,IAAIlP,KAAKmkE,GAAQoF,QAAQ/5D,IAAK6nC,GAEvDr3C,KAAKusE,GAAYl1B,EACjBr3C,KAAKwsE,GAAaxsE,KAAKmkE,GAAQoF,QAAQ75D,SAAoC,GAA5B1P,KAAKmkE,GAAQvlD,WAAmB,EAAI5e,KAAKmkE,GAAQvlD,YAAc5e,KAAKmkE,GAAQoF,QAAQ55D,KAAK3P,KAAKmkE,GAAQuF,cAAcvuE,SACnK6E,KAAKysE,GAAczsE,KAAKmkE,GAAQoF,QAAQ55D,KAAK3P,KAAKmkE,GAAQuF,cAAc11E,OACxEgM,KAAK0sE,IAAe,EAEpBxoD,EAASgqB,OAAO,IAAIwH,GAAmB11C,KAAK+mC,EAAM/mC,KAAKu7C,GAAUhsC,EAAOC,EAAKxP,KAAKmkE,GAAQoF,UAC1FrlD,EAASgqB,OAAO,IAAIkJ,GAAcp3C,KAAK+mC,EAAM/mC,KAAKmkE,GAAQoF,QAASvpE,KAAKmkE,GAAQuF,aAAcryB,IAC9Fr3C,KAAKivE,GAAUjvE,KAAKmkE,GAAQoF,eAEvB,IAAgC,GAA5BvpE,KAAKmkE,GAAQvlD,YAAoB5e,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAAU,CAG9F8jB,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAM,EAAG,IAEzD,MAAMiY,EACLjwD,KAAKmgB,IAAIlP,KAAKmkE,GAAQoF,QAAQh6D,MAC7BxgB,KAAKyB,IAAIwP,KAAKmkE,GAAQoF,QAAQ/5D,IAC7BzgB,KAAKgb,MAAM/J,KAAKwoC,GAAWxoC,KAAKiuE,GAAaz1B,IAAgBA,IAE3Dx4C,KAAKmkE,GAAQoF,QAAQh6D,MAE1B,IAAIy9B,EACAH,EAAmB7sC,KAAKmkE,GAAQoF,QAAQ55D,KAAK,GAC7CsvC,EAAqB,EACrBC,EAAuB,EACvBzkC,EAAcza,KAAK+mC,EAAK5mC,KAAKya,aAAa5a,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAAUJ,KAAK+mC,EAAK3mC,QAASJ,KAAK+mC,EAAKoI,qBAAqBnvC,KAAK6pE,IAAa7pE,KAAKmkE,GAAQ70D,OAG9KqjE,EAAyB,GAAO5jF,KAAKuB,IAAImqB,EAAK,IAC9Cm4D,EAAyB,GAAO7jF,KAAKuB,IAAImqB,EAAK,IAC9Co4D,EAAoB7yE,KAAKgsE,GAAehsE,KAAKkiD,GAAU,GAAK,EAC5D4wB,EAAqB/jF,KAAKyB,IAAIzB,KAAKC,IAAIgR,KAAKgsE,GAAehsE,KAAKkiD,IAAWywB,EAAgB,GAAK5jF,KAAKmgB,IAAI,EAAGngB,KAAKC,IAAIgR,KAAKgsE,GAAehsE,KAAKkiD,IAAW0wB,EAAiB,GAG1KE,EAAa,IAChB9yE,KAAKksE,IAAa,GAGnB,IAAK,IAAI59E,EAAY,EAAGA,EAAI0R,KAAKmkE,GAAQoF,QAAQ55D,KAAKphB,OAAQD,IAAK,CAGlE,GAFA0+C,EAAUH,EACVA,EAAU7sC,KAAKmkE,GAAQoF,QAAQ55D,KAAKrhB,GAChC0wD,EAAWnS,EAAQ79B,KAAM,SAC7B,GAAIgwC,EAAWhS,EAAQh+B,KAAM,MAAM,IAAIjf,MACvC,MAAMgjF,GAAuB/zB,EAAWhS,EAAQh+B,OAAS69B,EAAQ79B,KAAOg+B,EAAQh+B,MAChFiwC,EAAalwD,KAAKgb,MAAMijC,EAAQh5C,QAAU,EAAM++E,GAAelmC,EAAQ74C,OAAS++E,EAAcF,EAAWC,GAEjF,GAApB9yE,KAAK8pE,aAAuD,GAA/B9pE,KAAK+mC,EAAKisC,mBAA+BhzE,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,WAClH6+C,EAA0C,EAA7BlwD,KAAKmU,MAAM+7C,EAAa,IAElCA,EAAa,IAAGA,EAAa,GAC7BA,EAAaxkC,IAAKwkC,EAAaxkC,GACnCykC,EAAel/C,KAAKowE,GAAapjC,EAAQ7xC,UAAY,EAAM43E,GAAelmC,EAAQ1xC,SAAW43E,EAAc/yE,KAAKmkE,GAAQoF,QAAQ75D,QAAQ,GAAI,EAAG1P,KAAK+mC,EAAK5mC,KAAKsb,UAAYzb,KAAKmkE,GAAQoF,QAAQ75D,QAAQ,GACvM,MAGD1P,KAAKusE,GAAYvsE,KAAKmkE,GAAQoF,QAAQh6D,MAAQyvC,EAC9Ch/C,KAAKwsE,GAAaxsE,KAAKmkE,GAAQoF,QAAQ75D,SAAoC,GAA5B1P,KAAKmkE,GAAQvlD,WAAmB,EAAI5e,KAAKmkE,GAAQvlD,YAAcsgC,EAC9Gl/C,KAAKysE,GAAcxtB,EACnBj/C,KAAK0sE,IAAe,EAEpBxoD,EAASgqB,OAAO,IAAI6Q,GAAiB/+C,KAAK+mC,EAAM/mC,KAAKmkE,GAAQoF,QAASvqB,EAAUC,EAAYC,EAAcl/C,KAAK+pE,YAC/G/pE,KAAKivE,GAAUjvE,KAAKmkE,GAAQoF,aACtB,CAMN,GAJArlD,EAASgqB,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAM,EAAG,IAEzD/mC,KAAKysE,GAAczsE,KAAKmkE,GAAQoF,QAAQ55D,KAAK3P,KAAKmkE,GAAQuF,cAAc11E,OAEnD,MAAjBgM,KAAKu7C,GAAkB,MAAM,IAAIxrD,MAErC,IAAI8nD,EACAC,EACA93C,KAAKwoC,GAAWxoC,KAAK+rE,IACxBl0B,EAAY9oD,KAAKmgB,IAAIlP,KAAKmkE,GAAQoF,QAAQh6D,MAAOvP,KAAKmkE,GAAQt6C,MAC9DiuB,EAAUnrB,EAAc6rB,IAExBX,EAAY9oD,KAAKyB,IAAIwP,KAAKmkE,GAAQoF,QAAQ/5D,IAAKxP,KAAKmkE,GAAQt6C,KAAO2uB,GACnEV,EAAUnrB,GAEPmrB,EAAU,IAAGA,EAAU,GACvBA,EAAU93C,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,eAAcukD,EAAU93C,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,cAC1GukD,EAAU93C,KAAKmkE,GAAQoF,QAAQ/5D,KAClC0U,EAASgqB,OAAO,IAAIwH,GAAmB11C,KAAK+mC,EAAM/mC,KAAKu7C,GAAUv7C,KAAKmkE,GAAQoF,QAAQh6D,MAAOuoC,EAAS93C,KAAKmkE,GAAQoF,UAEhHzxB,EAAU93C,KAAKmkE,GAAQoF,QAAQh6D,OAClC2U,EAASgqB,OAAO,IAAIwH,GAAmB11C,KAAK+mC,EAAM/mC,KAAKu7C,GAAUzD,EAAS93C,KAAKmkE,GAAQoF,QAAQ/5D,IAAKxP,KAAKmkE,GAAQoF,UAGlH,IAAInM,EAAmBpmC,OAAO0H,UAC1BjjB,GAAoBub,OAAO0H,UAC/B,IAAK,MAAMpvB,KAAStP,KAAKmkE,GAAQoF,QAAQ75D,QACpC0tD,EAAW9tD,IAAO8tD,EAAW9tD,GAC7BmM,EAAWnM,IAAOmM,EAAWnM,GAKlC,GAHA8tD,GAAYp9D,KAAKmkE,GAAQoF,QAAQ75D,QAAQ1P,KAAKmkE,GAAQvlD,YACtDnD,GAAYzb,KAAKmkE,GAAQoF,QAAQ75D,QAAQ1P,KAAKmkE,GAAQvlD,YAEjD5e,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAKzC,CACJ,MAAM23C,EAAiB/3C,KAAKowE,GAAapwE,KAAKwsE,IAAapP,EAAUlvE,EAAO0K,SAAW,GACvFsrB,EAASgqB,OAAO,IAAI0J,GAAgB53C,KAAK+mC,EAAM/mC,KAAKmkE,GAAQoF,QAAS1xB,EAAWC,EAASC,EAAQ/3C,KAAKmkE,GAAQvlD,aAC9G5e,KAAKwsE,GAAaz0B,MARqC,CACvD,MAAMA,EAAiB/3C,KAAKowE,GAAapwE,KAAKuvE,GAAgBvvE,KAAKkiD,KAAWkb,GAAWp9D,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SAAWlS,EAAOyK,UAAY,EAAIqH,KAAK+mC,EAAK5mC,KAAKsb,UAAYA,GACjMyI,EAASgqB,OAAO,IAAI0J,GAAgB53C,KAAK+mC,EAAM/mC,KAAKmkE,GAAQoF,QAAS1xB,EAAWC,EAASC,EAAQ/3C,KAAKmkE,GAAQvlD,aAC9G5e,KAAKwsE,GAAaz0B,EAOnB/3C,KAAKivE,GAAUjvE,KAAKmkE,GAAQoF,SAE5BvpE,KAAKusE,GAAYz0B,EACjB93C,KAAK0sE,IAAe,GAIjB1sE,KAAKyoC,GAAczoC,KAAKmkE,GAAQmF,OAASyF,IAC9C/uE,KAAK6kE,KACL7kE,KAAKspC,MAiECzvC,GAAqBgyC,GAC5B7rC,KAAK4sE,GAA0B/gC,EAC/B7rC,KAAK+mC,EAAKqa,OAAOphD,KAAK4sE,GAAyB5sE,KAAK6sE,IAG7ChzE,KACP,GAAImG,KAAK6rE,GACR,IAAK7rE,KAAKyoC,IAAezoC,KAAKmkE,GAAQmF,QAAUtpE,KAAK2rE,KAAmB3rE,KAAK0sE,IAAgB1sE,KAAKksE,IAAclsE,KAAKosE,IAA6BpsE,KAAKqsE,IAA2BrsE,KAAKssE,GACtLtsE,KAAK0qE,GAAY7sE,aAAa,aAAc,UAEvCmC,KAAKsrE,kBACTtrE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,UAAW,QACpDyB,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAK2qE,kBAAkB9sE,aAAa,kBAAmB,cAGlD,CACNmC,KAAK0qE,GAAY7sE,aAAa,aAAc,WAE5C,MAAMypC,EAAYtnC,KAAKiuE,GAAajuE,KAAKusE,GACnChlC,EAAYvnC,KAAKwvE,GAAoBxvE,KAAKwsE,GAAaxsE,KAAKgtE,IAC5DxH,GAAkBxlE,KAAK0rE,GAAe1rE,KAAKyvE,IAAgB,EAC3DjoC,EAAgB,GAChBC,EAAiB,GACjBhtB,EAAcza,KAAK+mC,EAAK5mC,KAAKya,aAAa5a,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAAUJ,KAAK+mC,EAAK3mC,QAASJ,KAAK+mC,EAAKoI,qBAAqBnvC,KAAK6pE,IAAa7pE,KAAKmkE,GAAQ70D,OAGpL,IAAI2jE,EAAqB,GAEzBA,GAAc,KAAOx5E,EAAa6tC,GAAK,IAAM7tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,IAAQ,IACnGw4D,GAAc,KAAOx5E,EAAa6tC,GAAK,IAAM7tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,GAAOgtB,GAAU,IAC5GwrC,GAAc,KAAOx5E,EAAa6tC,GAAK,IAAM7tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,IAAQ,IACnGw4D,GAAc,KAAOx5E,EAAa6tC,GAAK,IAAM7tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,GAAOgtB,GAAU,IAC5GwrC,GAAc,KAAOx5E,EAAa6tC,GAAK,IAAM7tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,IAAQ,IACnGw4D,GAAc,KAAOx5E,EAAa6tC,EAAIE,GAAS,IAAM/tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,IAAQ,IAC3Gw4D,GAAc,KAAOx5E,EAAa6tC,GAAK,IAAM7tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,IAAQ,IACnGw4D,GAAc,KAAOx5E,EAAa6tC,EAAIE,GAAS,IAAM/tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,IAAQ,IAC3Gw4D,GAAc,KAAOx5E,EAAa6tC,GAAK,IAAM7tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,IAAQ,IACnGw4D,GAAc,KAAOx5E,EAAa6tC,EAAIE,GAAS,IAAM/tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,IAAQ,IAC3Gw4D,GAAc,KAAOx5E,EAAa6tC,GAAK,IAAM7tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,IAAQ,IACnGw4D,GAAc,KAAOx5E,EAAa6tC,EAAIE,GAAS,IAAM/tC,EAAa8tC,EAAIi+B,GAAUxlE,KAAKysE,GAAchyD,IAAQ,IAE3Gza,KAAK0qE,GAAY7sE,aAAa,IAAKo1E,QAGpC,GAAKjzE,KAAK0oC,IAAc1oC,KAAKyoC,GAAezoC,KAAKmkE,GAAQmF,MAUxD,GAFAtpE,KAAK0qE,GAAY7sE,aAAa,aAAc,WAExCmC,KAAKyxE,KAA6B,CACrC,MAAMhnC,EAAiBzqC,KAAKiuE,GAAajuE,KAAK+mC,EAAK0T,UAAUsB,sBACvDjS,EAAerwC,EAAagxC,EAAS,GACrC0Y,EAAgB1pD,EAAagxC,EAAS,GACtC8Y,EAAiBvjD,KAAKwvE,IAAqB,IACjDxvE,KAAK0qE,GAAY7sE,aAAa,IAAK,KAAOisC,EAAO,QAAUA,EAAO,IAAMyZ,EAAS,MAAQJ,EAAQ,IAAMI,EAAS,MAAQJ,EAAQ,aAC1H,GAAInjD,KAAK0xE,KAA2B,CAC1C,MAAMjnC,EAAiBzqC,KAAKiuE,GAAajuE,KAAK+mC,EAAK0T,UAAUuB,oBACvDlS,EAAerwC,EAAagxC,EAAS,GACrC0Y,EAAgB1pD,EAAagxC,EAAS,GACtC8Y,EAAiBvjD,KAAKwvE,IAAqB,IACjDxvE,KAAK0qE,GAAY7sE,aAAa,IAAK,KAAOisC,EAAO,QAAUA,EAAO,IAAMyZ,EAAS,MAAQJ,EAAQ,IAAMI,EAAS,MAAQJ,EAAQ,aAC1H,GAAInjD,KAAK2xE,KAAwB,CACvC,MAAM7nC,EAAerwC,EAAauG,KAAKiuE,GAAajuE,KAAK+mC,EAAK0T,UAAUsB,sBAAwB,GAC1FoH,EAAgB1pD,EAAauG,KAAKiuE,GAAajuE,KAAK+mC,EAAK0T,UAAUuB,oBAAsB,GACzFuH,EAAiBvjD,KAAKwvE,IAAqB,IACjDxvE,KAAK0qE,GAAY7sE,aAAa,IAAK,KAAOisC,EAAO,QAAUA,EAAO,IAAMyZ,EAAS,MAAQJ,EAAQ,IAAMI,EAAS,MAAQJ,EAAQ,aAEhInjD,KAAKkzE,GAAUlzE,KAAK0qE,GAAa1qE,KAAKmkE,GAAQ70D,MAAOtP,KAAKmkE,GAAQ50D,MAAOvP,KAAKmkE,GAAQx0D,MAAO3P,KAAK0rE,GAAe1rE,KAAKyvE,IAAgB,EAAI,GAAG,EAAMzvE,KAAKgtE,SA3BzJhtE,KAAK0qE,GAAY7sE,aAAa,aAAc,UACvCmC,KAAKsrE,kBACTtrE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,UAAW,QACpDyB,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAK2qE,kBAAkB9sE,aAAa,kBAAmB,UA6BnDhE,KACHmG,KAAK+mC,EAAK0T,UAAU4B,wBACvBr8C,KAAKuqE,GAAe1sE,aAAa,aAAc,WAC/CmC,KAAKuqE,GAAe1sE,aAAa,IAAKugB,OAAOpe,KAAKiuE,GAAajuE,KAAK+mC,EAAK0T,UAAUsB,wBACnF/7C,KAAKuqE,GAAe1sE,aAAa,QAASugB,OAAOpe,KAAKiuE,IAAcjuE,KAAK+mC,EAAK0T,UAAUuB,oBAAsBh8C,KAAK+mC,EAAK0T,UAAUsB,0BAElI/7C,KAAKuqE,GAAe1sE,aAAa,aAAc,UAI1ChE,SACN,MAAMy9B,EAA8Bt3B,KAAK+mC,EAAK6qC,kBAAkB5xE,KAAK6pE,IAiBrE,GAfI7pE,KAAKu7C,IAAYjkB,GAAgC,MAAjBt3B,KAAKu7C,KACpCv7C,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,UAAYJ,KAAK4pE,IAA+B,MAAftyC,GAE7EA,EAAY/mB,MAAMme,MAAK,SAAUC,EAAGC,GAAK,OAAQD,EAAEpf,OAASqf,EAAErf,MAASof,EAAEjf,QAAQ,GAAKkf,EAAElf,QAAQ,GAAKif,EAAEpf,MAAQqf,EAAErf,SAElHvP,KAAK2sE,GAAc,KACnB3sE,KAAKsqC,GAAoB,OAE1BtqC,KAAKu7C,GAAWjkB,EAEhBt3B,KAAKinC,EAAejnC,KAAKsoC,UAAU17B,YACnC5M,KAAKknC,EAAgBlnC,KAAKsoC,UAAU6qC,aACpCnzE,KAAKiuE,GAAajuE,KAAKinC,GAAgBjnC,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,cAC3EyM,KAAKgtE,GAAgBhtE,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASuX,OAAS3X,KAAK+mC,EAAK5mC,KAAKsX,IAEpFzX,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SAC9CJ,KAAKyvE,GAAe,EACpBzvE,KAAKgxE,GAAc9iF,EAAOyK,eAEtB,GAAIqH,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,UAIjD,GAHAJ,KAAKyvE,GAAezvE,KAAK+qE,GACzB/qE,KAAKgxE,GAAc9iF,EAAO0K,SAEL,MAAjBoH,KAAKu7C,GAER,IAAK,MAAM9qC,KAAQzQ,KAAKu7C,GAAShrC,MAAO,CACvC,IAAIjB,EAAQmB,EAAKf,QAAQ,GACrBmhE,EAAoB7wE,KAAK+mC,EAAK5mC,KAAKya,cAAa,EAAM5a,KAAK+mC,EAAK3mC,QAASJ,KAAK+mC,EAAKoI,qBAAqBnvC,KAAK6pE,IAAav6D,GAC1HwhE,EAAyB,EAC7B,IAAK,MAAM3gE,KAAOM,EAAKd,KAClBQ,EAAInc,OAAS88E,IAChBA,EAAiB3gE,EAAInc,QAIvB,GAAI88E,EAAiBD,EACpB,IAAK,MAAM1gE,KAAOM,EAAKd,KACtBQ,EAAInc,OAASjF,KAAKgb,MAAMoG,EAAInc,QAAU68E,EAAYC,UAOtD9wE,KAAKyvE,GAAe,EACpBzvE,KAAKgxE,GAAchxE,KAAK+mC,EAAKk4B,iBAG9Bj/D,KAAK0rE,GAAe1rE,KAAKknC,EAAgBlnC,KAAKgxE,GAE1ChxE,KAAKutE,IAAmBvtE,KAAK+mC,EAAK5mC,KAAK0b,QAC1C7b,KAAKwtE,IAA8BxtE,KAAK+mC,EAAK5mC,KAAKe,mBAClDlB,KAAKytE,IAA8BztE,KAAK+mC,EAAK5mC,KAAKiB,mBAClDpB,KAAK0tE,IAA4B1tE,KAAK+mC,EAAK5mC,KAAK+a,kBAChDlb,KAAKutE,GAAkBvtE,KAAK+mC,EAAK5mC,KAAK0b,OACtC7b,KAAKwtE,GAA6BxtE,KAAK+mC,EAAK5mC,KAAKe,kBACjDlB,KAAKytE,GAA6BztE,KAAK+mC,EAAK5mC,KAAKiB,kBACjDpB,KAAK0tE,GAA2B1tE,KAAK+mC,EAAK5mC,KAAK+a,gBAC/Clb,KAAKquE,mBAGNruE,KAAKuwE,GAAcvwE,KAAK8rE,GAAmB9rE,KAAK+mC,EAAK3mC,SAEjDJ,KAAKitE,IAAkBjtE,KAAKinC,GAAgBjnC,KAAKktE,IAAmBltE,KAAKknC,IAC5ElnC,KAAKitE,GAAiBjtE,KAAKinC,EAC3BjnC,KAAKktE,GAAkBltE,KAAKknC,EAC5BlnC,KAAKoqE,GAAevsE,aAAa,QAAS,GAAKmC,KAAKinC,GACpDjnC,KAAKoqE,GAAevsE,aAAa,SAAU,GAAKmC,KAAKknC,GACrDlnC,KAAKsqE,GAAazsE,aAAa,SAAU,GAAKmC,KAAKknC,GACnDlnC,KAAKuqE,GAAe1sE,aAAa,IAAK,KACtCmC,KAAKuqE,GAAe1sE,aAAa,SAAU,GAAKmC,KAAKknC,IAGtD,MAAMksC,EAAYpzE,KAAKinC,EAAejnC,KAAK+mC,EAAK5mC,KAAKub,YACrD,GAAI1b,KAAKmtE,IAAsBiG,GAAapzE,KAAKotE,IAAwBptE,KAAK0rE,GAAc,CAC3F1rE,KAAKmtE,GAAqBiG,EAC1BpzE,KAAKotE,GAAuBptE,KAAK0rE,GACjC1rE,KAAKgqE,GAAmBnsE,aAAa,QAAS,GAAKu1E,GACnDpzE,KAAKgqE,GAAmBnsE,aAAa,SAAU,GAAMmC,KAAK0rE,GAAe1rE,KAAK+mC,EAAK5mC,KAAKsX,KACxFzX,KAAKkqE,GAAmBrsE,aAAa,QAAS,GAAKu1E,GACnDpzE,KAAKkqE,GAAmBrsE,aAAa,SAAU,GAAKmC,KAAK0rE,IACzD1rE,KAAKmqE,GAAkBtsE,aAAa,QAAS,GAAKu1E,GAClDpzE,KAAKmqE,GAAkBtsE,aAAa,SAAU,GAAMmC,KAAiB,IACrEA,KAAKmqE,GAAkBtsE,aAAa,IAAK,GAAMmC,KAAKyvE,GAAe,GACnEzvE,KAAKirE,GAAmBptE,aAAa,QAAS,IAAMu1E,EAAY,IAChEpzE,KAAKirE,GAAmBptE,aAAa,SAAU,IAAMmC,KAAK0rE,GAAe,IACrE1rE,KAAK0rE,GAAe1rE,KAAKyvE,KAC5BzvE,KAAKkrE,GAAkBrtE,aAAa,QAAS,IAAMu1E,EAAY,IAC/DpzE,KAAKkrE,GAAkBrtE,aAAa,SAAU,IAAMmC,KAAK0rE,GAAe1rE,KAAKyvE,MAK9E,IAAK,IAAIhjE,EAAY,EAAGA,EAAIzM,KAAK+mC,EAAK5mC,KAAKsX,IAAKhL,IAAK,CACpD,MAAM0iE,EAA4BnvE,KAAKgrE,GAAqBv+D,GACtD86B,GAAavnC,KAAK+mC,EAAK5mC,KAAKsX,IAAMhL,GAAKzM,KAAK+mC,EAAK5mC,KAAKsX,IAC5D03D,EAAUtxE,aAAa,QAAS,IAAMu1E,EAAY,IAClDjE,EAAUtxE,aAAa,IAAK,IAAM0pC,EAAIvnC,KAAK0rE,GAAe,IAC1DyD,EAAUtxE,aAAa,SAAU,IAAMmC,KAAK0rE,GAAe,KAI7D1rE,KAAKqqE,GAh4CP,SAAqDgJ,GACpD,MAAM3iE,EAAc2iE,EAAKC,WAAU,GAEnC,OADAD,EAAKE,WAAYC,aAAa9iE,EAAO2iE,GAC9B3iE,EA63CmB+iE,CAA4BzzE,KAAKqqE,IAEtDrqE,KAAK4pE,KACH5pE,KAAKyoC,GAAYzoC,KAAK6kE,KAC3B7kE,KAAKspC,KACLtpC,KAAK6xE,MAGF7xE,KAAKszD,IAAmBtzD,KAAK+mC,EAAKgtB,YACrC/zD,KAAKszD,GAAkBtzD,KAAK+mC,EAAKgtB,UACjC/zD,KAAKgrE,GAAqBj8E,KAAKgb,MAAM/J,KAAK+mC,EAAK5mC,KAAKsX,IAAM1oB,KAAK2kF,KAAK,OAAS71E,aAAa,OAAQmC,KAAK+mC,EAAKgtB,UAAYh0D,EAAYmI,UAAYnI,EAAYiI,kBAG7J,IAAK,IAAIyE,EAAY,EAAGA,EAAIzM,KAAK+mC,EAAK5mC,KAAKsX,IAAKhL,IAG/CzM,KAAKgrE,GAAqBv+D,GAAGnO,MAAM0sC,WAAa,UAyBjD,GApBIhrC,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SACzCJ,KAAKqtE,KACTrtE,KAAKqtE,IAAiB,EACtBrtE,KAAKstE,IAAe,EACpBttE,KAAKoqE,GAAevsE,aAAa,OAAQ,mCAAqCmC,KAAK6pE,GAAa,MAEvF7pE,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAC9CJ,KAAKstE,KACTttE,KAAKqtE,IAAiB,EACtBrtE,KAAKstE,IAAe,EACpBttE,KAAKoqE,GAAevsE,aAAa,OAAQ,kCAAoCmC,KAAK6pE,GAAa,OAG5F7pE,KAAKqtE,IAAkBrtE,KAAKstE,MAC/BttE,KAAKqtE,IAAiB,EACtBrtE,KAAKstE,IAAe,EACpBttE,KAAKoqE,GAAevsE,aAAa,OAAQ,mCAAqCmC,KAAK6pE,GAAa,MAI9F7pE,KAAK+mC,EAAK4sC,eACR3zE,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAC7C,IAAK,IAAIA,EAAkBJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAoB,EAAGhB,GAAW,EAAGA,IAAW,CAC5H,GAAIA,GAAWJ,KAAK+mC,EAAK3mC,QAAS,SAClC,GAAIJ,KAAK+mC,EAAK5mC,KAAK8c,kBAAkB7c,IAAYJ,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SAAU,SAEtG,MAAMwzE,EAA2B5zE,KAAK+mC,EAAK5mC,KAAK6lB,WAAW5lB,EAASJ,KAAK+mC,EAAK5qB,IAAMnc,KAAK6pE,IACzF,GAAgB,MAAZ+J,EACJ,IAAK,MAAMnjE,KAAQmjE,EAASrjE,MAC3B,IAAK,MAAMjB,KAASmB,EAAKf,QAAS,CACjC,MAAMmkE,EAA2B90E,EAAImpC,OACrC2rC,EAASh2E,aAAa,OAAQkC,EAAYW,gBAAgBV,KAAK+mC,EAAK5mC,KAAMC,GAASY,eACnF6yE,EAASh2E,aAAa,iBAAkB,QACxCmC,KAAKkzE,GAAUW,EAAUvkE,EAAOmB,EAAKlB,MAAOkB,EAAKd,KAA0B,IAApB3P,KAAK0rE,IAAqB,EAAO1rE,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAASuX,OAAS3X,KAAK+mC,EAAK5mC,KAAKsX,KACjJzX,KAAKqqE,GAAkBvtE,YAAY+2E,IAOxC,GAAqB,MAAjB7zE,KAAKu7C,GACR,IAAK,MAAM9qC,KAAQzQ,KAAKu7C,GAAShrC,MAAO,CACvC,IAAK,IAAIjiB,EAAY,EAAGA,EAAImiB,EAAKf,QAAQnhB,OAAQD,IAAK,CACrD,MAAMghB,EAAgBmB,EAAKf,QAAQphB,GACnC,IAAIulF,EAA2B90E,EAAImpC,OAWnC,GAVA2rC,EAASh2E,aAAa,OAAQkC,EAAYW,gBAAgBV,KAAK+mC,EAAK5mC,KAAMH,KAAK+mC,EAAK3mC,SAASY,eAC7F6yE,EAASh2E,aAAa,iBAAkB,QACxCmC,KAAKkzE,GAAUW,EAAUvkE,EAAOmB,EAAKlB,MAAOkB,EAAKd,MAAO3P,KAAK0rE,GAAe1rE,KAAKyvE,IAAgB,EAAI,GAAG,EAAOzvE,KAAKgtE,IACpHhtE,KAAKqqE,GAAkBvtE,YAAY+2E,GACnCA,EAAW90E,EAAImpC,OACf2rC,EAASh2E,aAAa,OAAQkC,EAAYW,gBAAgBV,KAAK+mC,EAAK5mC,KAAMH,KAAK+mC,EAAK3mC,SAASa,aAC7F4yE,EAASh2E,aAAa,iBAAkB,QACxCmC,KAAKkzE,GAAUW,EAAUvkE,EAAOmB,EAAKlB,MAAOkB,EAAKd,MAAO3P,KAAK0rE,GAAe1rE,KAAKyvE,IAAgB,EAAI,GAAG,EAAMzvE,KAAKgtE,IACnHhtE,KAAKqqE,GAAkBvtE,YAAY+2E,GAE/BpjE,EAAKf,QAAQnhB,OAAS,EAAG,CAC5B,MACMwM,EADyBiF,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,qBAAqBnvC,KAAK6pE,KAC1Fz1D,WAChC,IAAKrZ,EAAM1E,YAAc0E,EAAMxE,aAAewE,EAAMtE,WAAa,EAAG,CACnE,IAAIq9E,EAAkC/0E,EAAIs3C,OAC1Cy9B,EAAgBj2E,aAAa,IAAK,GAAKpE,EAAauG,KAAKiuE,GAAax9D,EAAKlB,MAAQ,IACnFukE,EAAgBj2E,aAAa,IAAK,GAAKpE,EAAauG,KAAKwvE,GAAoBlgE,EAAQtP,KAAKgtE,MAC1F8G,EAAgBj2E,aAAa,QAAS,MACtCi2E,EAAgBj2E,aAAa,OAAQkC,EAAY0H,cACjDqsE,EAAgBj2E,aAAa,cAAe,SAC5Ci2E,EAAgBj2E,aAAa,oBAAqB,WAClDi2E,EAAgBj2E,aAAa,iBAAkB,QAC/Ci2E,EAAgB1tE,YAAc,IAAM9X,EAAI,GACxC0R,KAAKqqE,GAAkBvtE,YAAYg3E,KAMtC,GAAI9zE,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,UAAYJ,KAAK2rE,KAAmB3rE,KAAK4rE,IAAoBn7D,GAAQzQ,KAAKmkE,GAAQoF,QAAS,CAEvIvpE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,UAAW,IACpDyB,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAK2qE,kBAAkB9sE,aAAa,kBAAmB,SACvDmC,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,QAAS,WAElD,IAAIwvE,EAAoB/tE,KAAK+mC,EAAK5mC,KAAKkuB,eAAeruB,KAAKysE,GAAazsE,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,qBAAqBnvC,KAAK6pE,KAAaj2D,YAAY1lB,EAAO0K,SAAW,EAAI6X,EAAKf,QAAQ,KAG3Ns+D,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IAEjH/tE,KAAKqrE,GAA0B,EAAc,EAAV2C,EACnChuE,KAAKmrE,IAA0B1xE,EAAa1K,KAAKmgB,IAAIngB,KAAKyB,IAAIwP,KAAKinC,EAAe,GAAe,EAAV+mC,EAAahuE,KAAKiuE,GAAajuE,KAAKusE,GAAY,EAAc,EAAVyB,GAAc,IACzJhuE,KAAKorE,IAAyB3xE,EAAauG,KAAKwvE,GAAoB/+D,EAAKf,QAAQ,GAAK1P,KAAKgtE,IAAiB,IAAMhtE,KAAK0rE,GAAe1rE,KAAKyvE,IAAgB,GAE3JzvE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,OAAayB,KAAKmrE,GAAyB,MACpFnrE,KAAK2qE,kBAAkBrsE,MAAMC,YAAY,MAAYyB,KAAKorE,GAAwB,MAClFprE,KAAK2qE,kBAAkBvkE,YAAc,GAAK2nE,IAOtCl0E,GAAUk6E,EAA4BzkE,EAAeC,EAAeI,EAAiB61D,EAAgBwO,EAAqBv+E,GACjI,MAAMw+E,EAAqBj0E,KAAKiuE,IAAct+D,EAAKA,EAAKphB,OAAS,GAAGygB,KAAOW,EAAK,GAAGX,MAC7EklE,EAAoB,GAAMnlF,KAAKyB,IAAI,EAAGyjF,EAAa,GAEzD,IAAIpnC,EAAmBl9B,EAAK,GAE5B,MAAM8K,EAAcza,KAAK+mC,EAAK5mC,KAAKya,aAAa5a,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAAUJ,KAAK+mC,EAAK3mC,QAASJ,KAAK+mC,EAAKoI,qBAAqBnvC,KAAK6pE,IAAav6D,GAEvK,IAAI2jE,EAAqB,KAAOx5E,EAAauG,KAAKiuE,IAAc1+D,EAAQs9B,EAAQ79B,MAAQklE,GAAa,IAAMz6E,EAAauG,KAAKwvE,GAAoBlgE,EAAQ7Z,GAAU+vE,GAAUwO,EAAannC,EAAQ74C,OAASymB,EAAM,IAAQ,IAEzN,IAAK,IAAInsB,EAAY,EAAGA,EAAIqhB,EAAKphB,OAAQD,IAAK,CAC7C,IAAI0+C,EAAmBH,EACvBA,EAAUl9B,EAAKrhB,GACf,IAAI6lF,EAAmBn0E,KAAKiuE,IAAc1+D,EAAQy9B,EAAQh+B,OAAc,GAAL1gB,EAAS4lF,EAAY,GACpFE,EAAmBp0E,KAAKiuE,IAAc1+D,EAAQs9B,EAAQ79B,OAAS1gB,GAAKqhB,EAAKphB,OAAS,EAAI2lF,EAAY,GAClGG,EAAqBr0E,KAAKwvE,GAAoBlgE,EAAQ09B,EAAQ7xC,SAAW1F,GACzE6+E,EAAqBt0E,KAAKwvE,GAAoBlgE,EAAQu9B,EAAQ1xC,SAAW1F,GACzE4iD,EAAqB27B,EAAahnC,EAAQh5C,OAASymB,EAAM,EACzD85D,EAAqBP,EAAannC,EAAQ74C,OAASymB,EAAM,EAC7Dw4D,GAAc,KAAOx5E,EAAa06E,GAAY,IAAM16E,EAAa46E,EAAa7O,EAASntB,GAAc,IACjGrL,EAAQ7xC,SAAW0xC,EAAQ1xC,WAAU83E,GAAc,KAAOx5E,EAAa06E,EAAW,GAAK,IAAM16E,EAAa46E,EAAa7O,EAASntB,GAAc,KAC9IrL,EAAQ7xC,SAAW0xC,EAAQ1xC,WAAU83E,GAAc,KAAOx5E,EAAa26E,EAAW,GAAK,IAAM36E,EAAa66E,EAAa9O,EAAS+O,GAAc,KAClJtB,GAAc,KAAOx5E,EAAa26E,GAAY,IAAM36E,EAAa66E,EAAa9O,EAAS+O,GAAc,IAEtG,IAAK,IAAIjmF,EAAYqhB,EAAKphB,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAClD,IAAI0+C,EAAmBH,EACvBA,EAAUl9B,EAAKrhB,GACf,IAAI6lF,EAAmBn0E,KAAKiuE,IAAc1+D,EAAQy9B,EAAQh+B,OAAS1gB,GAAKqhB,EAAKphB,OAAS,EAAI2lF,EAAY,GAClGE,EAAmBp0E,KAAKiuE,IAAc1+D,EAAQs9B,EAAQ79B,OAAc,GAAL1gB,EAAS4lF,EAAY,GACpFG,EAAqBr0E,KAAKwvE,GAAoBlgE,EAAQ09B,EAAQ7xC,SAAW1F,GACzE6+E,EAAqBt0E,KAAKwvE,GAAoBlgE,EAAQu9B,EAAQ1xC,SAAW1F,GACzE4iD,EAAqB27B,EAAahnC,EAAQh5C,OAASymB,EAAM,EACzD85D,EAAqBP,EAAannC,EAAQ74C,OAASymB,EAAM,EAC7Dw4D,GAAc,KAAOx5E,EAAa06E,GAAY,IAAM16E,EAAa46E,EAAa7O,EAASntB,GAAc,IACjGrL,EAAQ7xC,SAAW0xC,EAAQ1xC,WAAU83E,GAAc,KAAOx5E,EAAa06E,EAAW,GAAK,IAAM16E,EAAa46E,EAAa7O,EAASntB,GAAc,KAC9IrL,EAAQ7xC,SAAW0xC,EAAQ1xC,WAAU83E,GAAc,KAAOx5E,EAAa26E,EAAW,GAAK,IAAM36E,EAAa66E,EAAa9O,EAAS+O,GAAc,KAClJtB,GAAc,KAAOx5E,EAAa26E,GAAY,IAAM36E,EAAa66E,EAAa9O,EAAS+O,GAAc,IAEtGtB,GAAc,IAEdc,EAAWl2E,aAAa,IAAKo1E,GAGtBp5E,GAAoByV,GAC3B,OAAOtP,KAAK0rE,IAAgB1rE,KAAKgxE,GAAW,EAAa,WCxiD9CwD,GAsCZ36E,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EArCH/mC,KAAAy0E,GAAkC/1E,EAAKgL,IAAI,CAAEpL,MAAO,oGACpD0B,KAAA00E,GAAiCh2E,EAAKgL,IAAI,CAAEpL,MAAO,oGACnD0B,KAAA20E,GAAgCj2E,EAAKgL,IAAI,CAAEpL,MAAO,oGAClD0B,KAAA40E,GAA2Bl2E,EAAKgL,IAAI,CAAEpL,MAAO,gDAAgDyB,EAAYwH,mFAC1GvH,KAAAsoC,UAA4B5pC,EAAKgL,IAAI,CAAEpL,MAAO,wGAC7D0B,KAAKy0E,GACLz0E,KAAK00E,GACL10E,KAAK20E,GACL30E,KAAK40E,IAEW50E,KAAAknC,EAAwB,IACxBlnC,KAAA60E,GAA+B,GAC/B70E,KAAA80E,GAAiC,GACjC90E,KAAA+0E,GAAoC,GACpC/0E,KAAAg1E,GAAqC,GACrCh1E,KAAAi1E,GAAoC,GACpCj1E,KAAAk1E,GAAmC,GAK5Cl1E,KAAAkiD,GAAkB,EAClBliD,KAAAyoC,GAAsB,EACtBzoC,KAAA0oC,GAAsB,EAEtB1oC,KAAAm1E,IAAwB,EACxBn1E,KAAAo1E,IAA0B,EAC1Bp1E,KAAAqtE,IAA0B,EAC1BrtE,KAAAstE,IAAwB,EACxBttE,KAAAq1E,IAAwB,EACxBr1E,KAAAs1E,IAA+B,EAsH/Bt1E,KAAAqpC,GAAkBJ,IACrBjpC,KAAK0oC,IACT1oC,KAAK0oC,GAAa,EAClB1oC,KAAKspC,OAGEtpC,KAAAupC,GAAiBN,IACnBjpC,KAAK0oC,IACV1oC,KAAK0oC,GAAa,EAClB1oC,KAAKspC,OAGEtpC,KAAAwpC,GAAqBP,IAC5BA,EAAMQ,iBACNzpC,KAAK+mC,EAAKzN,MAAMk4C,oBAChBxxE,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKsoC,UAAUqB,wBAEhD3pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKu1E,KACLv1E,KAAKspC,MAGEtpC,KAAAmqC,GAAmBlB,KACtBjpC,KAAKyoC,GAAczoC,KAAK0oC,IAAY1oC,KAAK+mC,EAAKzN,MAAMk4C,oBACxD,MAAM9nC,EAA2B1pC,KAAKsoC,UAAUqB,wBAEhD3pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKw1E,KACDx1E,KAAKyoC,GAAYzoC,KAAKu1E,KAC1Bv1E,KAAKspC,MAGEtpC,KAAAy1E,GAAsBxsC,IACzBjpC,KAAKyoC,GAAYzoC,KAAK01E,KAC1B11E,KAAKyoC,GAAa,EAClBzoC,KAAKspC,MAGEtpC,KAAAiqC,GAAqBhB,IAC5BA,EAAMQ,iBACNzpC,KAAK+mC,EAAKzN,MAAMk4C,oBAChBxxE,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKsoC,UAAUqB,wBAEhD3pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKw1E,KACLx1E,KAAKu1E,MAGEv1E,KAAAqqC,GAAmBpB,IAC1BA,EAAMQ,iBACNzpC,KAAK+mC,EAAKzN,MAAMk4C,oBAChB,MAAM9nC,EAA2B1pC,KAAKsoC,UAAUqB,wBAEhD3pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKw1E,KACDx1E,KAAKyoC,GAAYzoC,KAAKu1E,MAGnBv1E,KAAA8kE,GAAsB77B,IAC7BA,EAAMQ,iBACNzpC,KAAK01E,MAeE11E,KAAAglE,GAAmB,KAC1B,MAAM2Q,EAAkB31E,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SAC7Dka,EAAiBta,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAchE,GAbIu1E,GACH31E,KAAK0rE,GAAe,GACpB1rE,KAAKgxE,GAAc9iF,EAAOyK,WAElB2hB,GACRta,KAAK0rE,GAAe,GACpB1rE,KAAKgxE,GAAc9iF,EAAO0K,WAG1BoH,KAAK0rE,GAAgB1rE,KAAKknC,EAAgBlnC,KAAK+mC,EAAKk4B,iBACpDj/D,KAAKgxE,GAAchxE,KAAK+mC,EAAKk4B,mBAGzB0W,IAAWr7D,EAAO,CACtB,IAAK,IAAIhsB,EAAY0R,KAAKs1E,GAAqBhnF,EAAI0R,KAAK+mC,EAAKk4B,iBAAkB3wE,IAAK,CACnF,MAAMsnF,EAA6Bl3E,EAAKgL,IAAI,CAAE6+B,MAAO,cAAejqC,MAAO,uIACrEu3E,EAA2Bn3E,EAAKgL,IAAI,CAAE6+B,MAAO,eAAgBjqC,MAAO,qBAAuBs3E,GACjG51E,KAAKy0E,GAAgB33E,YAAY+4E,GACjC71E,KAAK80E,GAAanmF,KAAKinF,GACvB51E,KAAK60E,GAAWlmF,KAAKknF,GACrB71E,KAAKs1E,KAGN,IAAK,IAAIhnF,EAAY0R,KAAKs1E,GAAqBhnF,EAAI0R,KAAK+mC,EAAKk4B,iBAAkB3wE,IAC9E0R,KAAKy0E,GAAgB1nE,YAAY/M,KAAKy0E,GAAgBqB,WACtD91E,KAAK80E,GAAap2D,MAClB1e,KAAK60E,GAAWn2D,MAGjB1e,KAAKs1E,GAAsBt1E,KAAK+mC,EAAKk4B,iBAGtCj/D,KAAKw1E,KACDx1E,KAAKyoC,GAAYzoC,KAAKu1E,KAC1Bv1E,KAAK+mC,EAAKzN,MAAM9P,iBAAmBxpB,KAAK+mC,EAAK3mC,QAC7CJ,KAAK+kE,MAGE/kE,KAAA+kE,GAAU,KACjB,IAAK/kE,KAAK+mC,EAAKgvC,YAAa,OAE5B,MAAMJ,EAAS31E,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SACpDka,EAAQta,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SAEvD,GAAIJ,KAAKo1E,IAAkBp1E,KAAK+mC,EAAK5mC,KAAKib,OAASpb,KAAKq1E,IAAgBr1E,KAAK+mC,EAAK5mC,KAAKvC,KAAOoC,KAAKqtE,IAAkBsI,GAAU31E,KAAKstE,IAAgBhzD,EAAO,OAC3Jta,KAAKo1E,GAAiBp1E,KAAK+mC,EAAK5mC,KAAKib,MACrCpb,KAAKq1E,GAAer1E,KAAK+mC,EAAK5mC,KAAKvC,IACnCoC,KAAKqtE,GAAiBsI,EACtB31E,KAAKstE,GAAehzD,EACpB,MAAM9J,EAAyBxQ,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAMhG,GAJAnvC,KAAKy0E,GAAgBn2E,MAAM01D,QAAW2hB,GAAUr7D,EAAS,OAAS,OAClEta,KAAK00E,GAAep2E,MAAM01D,QAAU2hB,EAAS,OAAS,OACtD31E,KAAK20E,GAAcr2E,MAAM01D,QAAU15C,EAAQ,OAAS,OAE/Cq7D,GAAWr7D,GA0CX,GAAIA,EAAO,CACf,IAII07D,EAJAC,EAAmB,GACnBC,EAAoB,GACpBC,EAAwBp2E,EAAYuJ,oBACpC8sE,EAAyBr2E,EAAYsJ,sBAEzC,IAAK,IAAIoD,EAAY,EAAGA,EAAIve,EAAO0K,SAAU6T,IAAK,CAEjD,IAAI4pE,GAA0B,EAC1BC,GAAoB,EACpBC,EAAwB/lE,EAAWmD,eAAezlB,EAAO0K,SAAW6T,EAAI,GAAK,EAEjF,OAAQ+D,EAAWkD,YAAYxlB,EAAO0K,SAAW6T,EAAI,IACpD,KAAKqH,EAAUC,OACdkiE,EAAW,MACXI,GAAiB,EACjBD,EAAiBr2E,EAAYsJ,sBAC7BitE,GAAW,EACX,MACD,KAAKxiE,EAAUuJ,WACd24D,EAAaxlE,EAAWlP,YAAYpT,EAAO0K,SAAW6T,EAAI,GAAK,EAC/D8pE,EAAgB/lE,EAAWmD,eAAezlB,EAAO0K,SAAW6T,EAAI,GAAK,EAEjB,IAAhDzM,KAAK+mC,EAAK5mC,KAAK+X,SAAS89D,EAAa,GAAGlkF,KAEvCkO,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,EACtCk6D,GAAc,IAAMO,GAAiB,IACxCN,EAAW,IAAMD,EACjBC,GAAY,KAAOM,IAGnBN,EAAW,QAAUD,EACrBC,GAAY,OAASM,GAItBN,EAAW,SAAWD,EAOtBC,EADGj2E,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,EAC/B,IAAMk6D,EAAa,IAAMh2E,KAAK+mC,EAAK5mC,KAAK+X,SAAS89D,EAAa,GAAGlkF,KAAO,KAAOykF,EAG/E,IAAMP,EAAa,IAAMh2E,KAAK+mC,EAAK5mC,KAAK+X,SAAS89D,EAAa,GAAGlkF,KAI9E,MACD,KAAKgiB,EAAUwJ,WACd04D,EAAaxlE,EAAWlP,YAAYpT,EAAO0K,SAAW6T,EAAI,GAAK,EAC/D8pE,EAAgB/lE,EAAWmD,eAAezlB,EAAO0K,SAAW6T,EAAI,GAAK,EAEjB,IAAhDzM,KAAK+mC,EAAK5mC,KAAK+X,SAAS89D,EAAa,GAAGlkF,KAEvCkO,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,EAEtCk6D,GAAc,IAAMO,GAAiB,IACxCN,EAAW,IAAMD,EACjBC,GAAY,KAAOM,IAGnBN,EAAW,QAAUD,EACrBC,GAAY,OAASM,GAItBN,EAAW,SAAWD,EAMtBC,EADGj2E,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,EAC/B,IAAMk6D,EAAa,IAAMh2E,KAAK+mC,EAAK5mC,KAAK+X,SAAS89D,EAAa,GAAGlkF,KAAO,KAAOykF,EAG/E,IAAMP,EAAa,IAAMh2E,KAAK+mC,EAAK5mC,KAAK+X,SAAS89D,EAAa,GAAGlkF,KAI9E,MACD,KAAKgiB,EAAUyZ,UACd0oD,EAAW,OAKb,GAAII,EACH,OAAQ7lE,EAAWoD,YAAY1lB,EAAO0K,SAAW6T,EAAI,IACpD,KAAKuH,EAAWC,QACfmiE,EAAiBr2E,EAAYsJ,sBAC7B6sE,EAAY,OACZI,GAAW,EACX,MACD,KAAKtiE,EAAWmF,aACf+8D,EAAY,aACZ,MACD,KAAKliE,EAAWoF,cACf88D,EAAY,cACZ,MACD,KAAKliE,EAAWyF,cACfy8D,EAAY,cACZ,MACD,KAAKliE,EAAWqF,aACf68D,EAAY,OACZ,MACD,KAAKliE,EAAWsF,aACf48D,EAAY,OACZ,MACD,KAAKliE,EAAWuF,aACf28D,EAAY,OACZ,MACD,KAAKliE,EAAWwF,aACf08D,EAAY,OACZ,MACD,KAAKliE,EAAWiF,aACfi9D,EAAY,SACZ,MACD,KAAKliE,EAAWgF,WACfk9D,EAAY,WACZ,MACD,KAAKliE,EAAWkF,OACfg9D,EAAY,MACZ,MACD,KAAKliE,EAAW2F,UACfu8D,EAAY,SACZ,MACD,KAAKliE,EAAW4F,gBACfs8D,EAAY,gBACZ,MACD,KAAKliE,EAAW8F,gBACfo8D,EAAY,gBACZ,MACD,KAAKliE,EAAW+F,gBACfm8D,EAAY,gBACZ,MACD,KAAKliE,EAAWgG,iBACfk8D,EAAY,YACZ,MACD,KAAKliE,EAAWkG,iBACfg8D,EAAY,YACZ,MACD,KAAKliE,EAAWiG,YACfi8D,EAAY,YACZ,MACD,KAAKliE,EAAW0F,cACfw8D,EAAY,cACZ,MACD,KAAKliE,EAAW+E,UACfm9D,EAAY,SACZ,MACD,KAAKliE,EAAW6E,cACfq9D,EAAY,SACZ,MACD,KAAKliE,EAAW8E,SACfo9D,EAAY,QACZ,MACD,KAAKliE,EAAW6F,cACfq8D,EAAY,SAKf,MAAMM,EAA6Bx2E,KAAK+0E,GAAgBtoE,GAClDgqE,EAA8Bz2E,KAAKg1E,GAAiBvoE,GACpDiqE,EAAgC12E,KAAKi1E,GAAgBxoE,GACrDkqE,EAA+B32E,KAAKk1E,GAAezoE,GASzD,GARA+pE,EAAWl4E,MAAM+oC,KAAO8uC,EACxBK,EAAWpwE,YAAc6vE,EACzBQ,EAAYn4E,MAAM+oC,KAAO+uC,EACzBK,EAAYrwE,YAAciwE,EAAiBH,EAAY,UACvDQ,EAActwE,YAAc,IAAMlY,EAAO0K,SAAW6T,GACpDkqE,EAAar4E,MAAM+oC,KAAOivC,EAAWv2E,EAAY+I,iBAAmB/I,EAAYsJ,sBAGK,IAAjFrJ,KAAK+mC,EAAK5mC,KAAK+X,SAAS1H,EAAWlP,YAAYpT,EAAO0K,SAAW6T,EAAI,IAAI3a,KAAY,CACxF,IAAI8kF,EAAsB,IACtBnvC,EAAiB+uC,EAAWK,cAAeA,cAAeltC,wBAAwBlC,OAClFl5C,EAAiBioF,EAAWM,wBAC5BC,EAAkB,EAWtB,IAVIxoF,EAASk5C,EAAS,GACrBmvC,EAAc,OACdG,EAAU,GAEFxoF,EAASk5C,EAAS,KAC1BmvC,EAAc,MACdG,EAAU,GAEXP,EAAWl4E,MAAM+hE,UAAY,8BAAgC,GAAK0W,EAAUhoF,KAAKgb,MAAMhb,KAAKmgB,IAAI,GAAIu4B,EAAS,IAAM,KAAO,mBAAqBmvC,EAAc,OAEvI,QAAfA,GAAyBJ,EAAWM,wBAA0BrvC,EAAS,GAAG,CAChF,IAAIhyC,EAAS,GAAK8gF,GAAiB,GAAK,EAAI,GAC5CC,EAAWpwE,YAAcowE,EAAWpwE,YAAY4wE,OAAO,EAAGR,EAAWpwE,YAAY7X,OAASkH,GAAU+gF,EAAWpwE,YAAY4wE,OAAOR,EAAWpwE,YAAY7X,OAASkH,EAAS,QAGxK,CACJ,IAAIgyC,EAAiB+uC,EAAWK,cAAeA,cAAeltC,wBAAwBlC,OACtF+uC,EAAWl4E,MAAM+hE,UAAY,8BAAgC,GAAKtxE,KAAKgb,MAAMhb,KAAKmgB,IAAI,GAAIu4B,EAAS,IAAM,KAAO,gCAhPlH,IAAK,IAAIh7B,EAAY,EAAGA,EAAIzM,KAAKgxE,GAAavkE,IAAK,CAClD,MAAMwqE,GAA0BxqE,EAAIve,EAAOsE,KAAKwN,KAAK+mC,EAAK5mC,KAAKvC,KAAKlL,WAAa,GAC3ED,EAAsBvE,EAAOsE,KAAKykF,GAAgBxkF,WAExD,GADAuN,KAAK60E,GAAWpoE,GAAGnO,MAAM44E,WAAazkF,EAAasN,EAAYoI,cAAgBpI,EAAYqI,cACtFla,EAAOmE,OAAO2N,KAAK+mC,EAAK5mC,KAAKib,OAAO7oB,MAAMka,EAAI,IAG5C,CAIN,IAAI4pC,EAEJ,GALAr2C,KAAK60E,GAAWpoE,GAAGI,UAAU+qB,OAAO,YACpC53B,KAAK80E,GAAaroE,GAAGnO,MAAM01D,QAAU,GAIjC9lE,EAAOsE,KAAKykF,GAAgBxkF,WAC/B4jD,EAAOnoD,EAAOsE,KAAKykF,GAAgBnlF,SAC7B,CACN,MAAMqlF,EAAmBjpF,EAAOyE,oBAAoB8Z,EAAI,IACxD4pC,EAAOnoD,EAAOsE,MAAMykF,EAAiB,GAAKE,GAAY,IAAIrlF,KAC1C,GAAZqlF,EACH9gC,GAAQ,KACe,GAAb8gC,IACV9gC,GAAQ,KAIV,MAAMw3B,EAAwB7tE,KAAK80E,GAAaroE,GAE3CA,EAAI,IAAO,GACf4pC,GAAQtnD,KAAKmU,MAAMuJ,EAAI,IAAMzM,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASuX,OACxEk2D,EAAMvvE,MAAM+hE,UAAY,wBAGxBwN,EAAMvvE,MAAM+hE,UAAY,sBAIzBwN,EAAMvvE,MAAM6nE,MAAQj4E,EAAOsE,KAAKykF,GAAgBxkF,WAAa,QAAU,QACvEo7E,EAAMznE,YAAciwC,OAhCpBr2C,KAAK60E,GAAWpoE,GAAGI,UAAUC,IAAI,YACjC9M,KAAK80E,GAAaroE,GAAGnO,MAAM01D,QAAU,OA8OxCh0D,KAAKspC,MA9eL,IAAK,IAAIh7C,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAKk4B,iBAAkB3wE,IAAK,CAC5D,MAAMsnF,EAA6Bl3E,EAAKgL,IAAI,CAAE6+B,MAAO,cAAejqC,MAAO,uIACrEu3E,EAA2Bn3E,EAAKgL,IAAI,CAAE6+B,MAAO,eAAgBjqC,MAAO,qBAAuBs3E,GACjG51E,KAAKy0E,GAAgB33E,YAAY+4E,GACjC71E,KAAK80E,GAAanmF,KAAKinF,GACvB51E,KAAK60E,GAAWlmF,KAAKknF,GAEtB71E,KAAKs1E,GAAsBt1E,KAAK+mC,EAAKk4B,iBAErC,IAAK,IAAI3wE,EAAY,EAAGA,EAAIJ,EAAOyK,UAAWrK,IAAK,CAClD,MAAM8sB,EAAwD,KAAvC,EAAO9sB,EAAIJ,EAAOyK,UAAa,KAChDy+E,EAAqB,GAAQ9oF,EAAIJ,EAAOyK,UAAY,GAAOzK,EAAOyK,UAAa,GACrFqH,KAAK00E,GAAe53E,YAAY4B,EAAKgL,IAAI,CAAE6+B,MAAO,cAAejqC,MAAO,oBAAoB8c,MAAUA,0BAA8Bg8D,QAGrI,IAAK,IAAI9oF,EAAY,EAAGA,EAAIJ,EAAO0K,SAAUtK,IAAK,CAGjD,MAAM+oF,EAA+Bt4E,EAAIs3C,KAAK,CAAE9N,MAAO,kBAAmBqiC,cAAe,OAAQvjC,KAAMtnC,EAAYuJ,oBAAqBhL,MAAO,qKACzIg5E,EAAgCv4E,EAAIs3C,KAAK,CAAE9N,MAAO,kBAAmBqiC,cAAe,OAAQvjC,KAAMtnC,EAAYuJ,oBAAqBhL,MAAO,mKAC1Ii5E,EAA4Bx4E,EAAIs3C,KAAK,CAAE9N,MAAO,0BAA2BlB,KAAMtnC,EAAYqJ,gBAAiB9K,MAAO,mKACnHk5E,EAA4Bz4E,EAAIqoC,KAAK,CAAEI,MAAO,OAAQC,OAAQ,MAAOJ,KAAMtnC,EAAY+I,iBAAkBxK,MAAO,0DAEhHm5E,EAA6B14E,EAAI4oC,IAAI,CAAEkb,QAAS,YAAarb,MAAO,OAAQlpC,MAAO,uCAAyC,CACjI+4E,IAEKK,EAA0B34E,EAAI4oC,IAAI,CAAEkb,QAAS,YAAarb,MAAO,OAAQlpC,MAAO,yBAA2B,CAChHk5E,EACAD,IAEKI,EAA8B54E,EAAI4oC,IAAI,CAAEkb,QAAS,YAAarb,MAAO,OAAQlpC,MAAO,yBAA2B,CACpHg5E,IAGKM,EAA2Bl5E,EAAKgL,IAAI,CAAEpL,MAAO,gGAAkG,CACpJo5E,EACAD,IAEKI,EAA2Bn5E,EAAKgL,IAAI,CAAEpL,MAAO,wGAA0G,CAC5Jq5E,IAGKG,EAAgCp5E,EAAKgL,IAAI,CAAEpL,MAAO,wJAA0J,CACjNs5E,EACAC,IAGKE,EAAyBr5E,EAAKgL,IAAI,CAAE6+B,MAAO,mBAAoBjqC,MAAO,eAAiByB,EAAYqJ,gBAAkB,KAAO0uE,GAClI93E,KAAK20E,GAAc73E,YAAYi7E,GAC/B/3E,KAAK+0E,GAAgBpmF,KAAK0oF,GAC1Br3E,KAAKg1E,GAAiBrmF,KAAK2oF,GAC3Bt3E,KAAKi1E,GAAgBtmF,KAAK4oF,GAC1Bv3E,KAAKk1E,GAAevmF,KAAK6oF,GAG1Bx3E,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKwpC,IAClDzsC,SAAS2tC,iBAAiB,YAAa1qC,KAAKmqC,IAC5CptC,SAAS2tC,iBAAiB,UAAW1qC,KAAKy1E,IAC1Cz1E,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKqpC,IAClDrpC,KAAKsoC,UAAUoC,iBAAiB,WAAY1qC,KAAKupC,IAEjDvpC,KAAKsoC,UAAUoC,iBAAiB,aAAc1qC,KAAKiqC,IACnDjqC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKqqC,IAClDrqC,KAAKsoC,UAAUoC,iBAAiB,WAAY1qC,KAAK8kE,IACjD9kE,KAAKsoC,UAAUoC,iBAAiB,cAAe1qC,KAAK8kE,IAEpD9kE,KAAK+mC,EAAKwD,SAAS06B,MAAMjlE,KAAKglE,IAC9BhlE,KAAKglE,KAzECnrE,cACNmG,KAAKo1E,IAAkB,EACvBp1E,KAAK+kE,KA0EElrE,KACP,MAAMuhB,EAAgCltB,EAAOmE,OAAO2N,KAAK+mC,EAAK5mC,KAAKib,OAAO7oB,MACpEm9E,EAAqB3gF,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAIwP,KAAKgxE,GAAc,EAAGhxE,KAAKgxE,GAAehxE,KAAKkiD,GAAUliD,KAAK0rE,KAC9G,GAAItwD,EAAMrsB,KAAKmU,MAAMwsE,GAAc,KAAO1vE,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SACpFJ,KAAKg4E,GAAejpF,KAAKmU,MAAMwsE,OACzB,CACN,IAAIuI,EAAmBlpF,KAAKmU,MAAMwsE,GAAc,EAC5CwI,EAAsBnpF,KAAKmU,MAAMwsE,GAAc,EACnD,MAAQt0D,EAAM68D,EAAW,KACxBA,IAED,MAAQ78D,EAAM,EAAgB,KAC7B88D,IAED,IAAIC,EAAmBF,EACnBG,EAAsBF,EAAc,EACpCD,EAAW,IAAM,GAAKA,EAAW,IAAM,IAC1CE,GAAY,IAETD,EAAc,IAAM,GAAKA,EAAc,IAAM,IAChDE,GAAe,IAEhBp4E,KAAKg4E,GAAetI,EAAa0I,EAAcD,EAAWzI,EAAauI,EAAWC,GAI5Er+E,KACP,MAAMmkB,EAAuBhe,KAAKg4E,GAAmE,GAApDh4E,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASuX,OACxF3X,KAAKm1E,IAAgBn3D,IACzBhe,KAAKm1E,GAAen3D,EACpBhe,KAAK+mC,EAAKzN,MAAMjQ,kBAAoB2N,OAAO6iC,iBAC3C75D,KAAK+mC,EAAKzN,MAAM/P,iBAAmB,CAACvpB,KAAKm1E,IACzCn1E,KAAK+mC,EAAKzN,MAAMhQ,kBAAmB,GAG5BzvB,KACPmG,KAAKm1E,IAAgB,EACrBn1E,KAAK+mC,EAAKzN,MAAMjQ,kBAAoB,EAwE7BxvB,KAEP,GADAmG,KAAK40E,GAASt2E,MAAM0sC,YAAehrC,KAAK0oC,GAAc1oC,KAAKyoC,EAAc,SAAW,WAC/EzoC,KAAK0oC,GAAc1oC,KAAKyoC,EAAY,OAEzC,MAAMiB,EAA2B1pC,KAAKsoC,UAAUqB,wBAC1C0uC,EAAsBr4E,KAAK0rE,IAAgB1rE,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,MAE1GtjD,KAAK40E,GAASt2E,MAAMwrC,KAAO,MAC3B9pC,KAAK40E,GAASt2E,MAAMglD,IAAM+0B,GAAer4E,KAAKgxE,GAAchxE,KAAKg4E,GAAe,GAAK,KACrFh4E,KAAK40E,GAASt2E,MAAMmpC,OAAS4wC,EAAc,MC1N7C,MAAMC,GAAgB,gBAStB,SAASC,GAAa36E,GACrB,OAAO4hB,KAAKC,MAAM7hB,EAAI8hB,UAAU44D,GAAc/pF,kBAG/BiqF,GAAa/9E,GAC5B,OAAO69E,GAAgB94D,KAAKmzC,UAAUl4D,YAGvBg+E,KAEf,OAAS1pF,KAAKa,WAAa,IAAM,KAAQ,GAAG8oF,SAAS,IAGtD,SAASC,GAAahqD,EAAkBC,GACvC,OAAOA,EAAEgqD,SAAS,GAAG5pE,KAAO2f,EAAEiqD,SAAS,GAAG5pE,KAG3C,SAAS6pE,GAAgBlqD,EAAqBC,GAC7C,OAAOA,EAAE5f,KAAO2f,EAAE3f,WAGN8pE,GAAbj/E,cAGSmG,KAAA+4E,GAAc,IAAI/gE,EAEnBne,8BACN,MAAMm/E,EAAyB,GACzBC,EAAwC,GAC9C,IAAK,IAAI3qF,EAAI,EAAGA,EAAIwyB,aAAavyB,OAAQD,IAAK,CAC7C,MAAM4qF,EAAkBp4D,aAAaljB,IAAItP,GACzC,GAlCmC,GAkClB4qF,EAlCRvkE,QAAQ2jE,IAkCU,CAC1B,MAAM79E,EAA4B89E,GAAaW,GAC/C,IAAI/4E,EAAkC84E,EAAWx+E,EAAQ0+E,KAC7ChsE,MAARhN,IACHA,EAAO,CAAEy4E,SAAU,IACnBK,EAAWx+E,EAAQ0+E,KAAOh5E,EAC1B64E,EAAMrqF,KAAKwR,IAEZA,EAAKy4E,SAASjqF,KAAK8L,IAGrB,IAAK,MAAM0F,KAAQ64E,EAClB74E,EAAKy4E,SAASlqD,KAAKmqD,IAGpB,OADAG,EAAMtqD,KAAKiqD,IACJK,EAGDn/E,YAAYs/E,EAAarnF,EAAcsnF,GAC7C,MAAMC,EAAkBvnF,EAClB+mD,EAAkB9pD,KAAKgb,MAAMuvE,KAAKvtD,OAExCwtD,aAAav5E,KAAKw5E,IAClBx5E,KAAKw5E,GAA4Bj4B,YAAW,KAC3C,IAECvhD,KAAK+4E,GAAMh+D,iBAAiBq+D,GAC3B,MAAOjoB,GAER,YADAtwC,OAAO44D,MAAM,yLAA8LtoB,EAAQ,KAAOA,EAAMuoB,OAIjO,MAAMV,EAAyBF,GAAaa,uBAC5C,IAAIC,EAAoC,KACxC,IAAK,MAAMz5E,KAAQ64E,EACd74E,EAAKy4E,SAAS,GAAGO,KAAOA,IAC3BS,EAAcz5E,GAGG,MAAfy5E,IACHA,EAAc,CAAEhB,SAAU,IAC1BI,EAAMv6D,QAAQm7D,IAEf,IAAIhB,EAA+BgB,EAAYhB,SAE3CiB,EAAkB,IACtB,GAAIjB,EAASrqF,OAAS,EAAG,CACxB,MAAMurF,EAAyBlB,EAAS,GAAG5pE,KAE3C6qE,EAD+BjB,EAAS,GAAGmB,KAChBhrF,KAAKyB,IAvFN,KAuFiCqoD,EAAUihC,GAGtE,MAAME,EAA+B,CAAEb,IAAKA,EAAKrnF,KAAMunF,EAASrqE,KAAM6pC,EAASkhC,KAAMF,GAC/EI,EAAiBzB,GAAawB,GACpCpB,EAASn6D,QAAQu7D,GACjBl5D,aAAakgC,QAAQi5B,EAAQb,GAG7B,IAAIc,EA/FoB,IAgGxB,MAAMC,EAAmBprF,KAAKuB,IAAI,EAAG,IACrC,IAAK,IAAIhC,EAAY,EAAGA,EAAIsqF,EAASrqF,OAAQD,IAAK,CAIjD,GAH4BsqF,EAAStqF,GAAGyrF,MACbzrF,GAAKsqF,EAASrqF,OAAS,EAAK,EAAMqqF,EAAStqF,EAAI,GAAGyrF,MAE/CG,EAAS,CACtC,IAAIE,EAAyB9rF,EAC7B,GAAIA,EAAIsqF,EAASrqF,OAAS,EAAG,CAC5B,MAAM8rF,EAAsBzB,EAAStqF,GAAG0gB,KAClCsrE,EAAoB1B,EAAStqF,EAAI,GAAG0gB,KAOrCqrE,EANqBzB,EAAStqF,EAAI,GAAG0gB,KAMV,IAAOsrE,EAAYD,KAClDD,EAAiB9rF,EAAI,GAGvBwyB,aAAay5D,WAAW/B,GAAaI,EAASwB,KAC9C,MAEDF,GAAWC,EAKZ,KAAOnB,EAAMzqF,OA9HS,GA8HkB,CACvC,IAAIisF,EAA2C,KAC3CC,EAA0BzjD,OAAO0jD,kBACrC,IAAK,IAAIpsF,EAAYS,KAAKgb,MAAM4wE,GAAuBrsF,EAAI0qF,EAAMzqF,OAAQD,IAAK,CAC7E,MAAM6R,EAAsB64E,EAAM1qF,GAI5BssF,EAAoB,IAHC/hC,EAAU14C,EAAKy4E,SAAS,GAAG5pE,MAGV,MAA4B,GAGlEghC,GADuB7vC,EAAKy4E,SAAS,GAAGmB,KAAO,KACfa,EAClCH,EAAkBzqC,IACrByqC,EAAkBzqC,EAClBwqC,EAAqBr6E,GAGvB,IAAK,MAAM1F,KAAW+/E,EAAoB5B,SACzC93D,aAAay5D,WAAW/B,GAAa/9E,IAEtCu+E,EAAMx6D,OAAOw6D,EAAMrkE,QAAQ6lE,GAAsB,MAEhD,MC/JL,MAAMj7B,OAAEA,GAAM71C,IAAEA,GAAG+1C,GAAEA,GAAEhoB,EAAEA,GAACmoB,OAAEA,GAAMC,OAAEA,GAAMg7B,OAAEA,IAAWn8E,QAE1Co8E,GAcZjhF,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EAbH/mC,KAAA+6E,GAAiCrxE,KACjC1J,KAAAqgD,GAAmCd,GAAO,CAAEhX,MAAO,iBAEpDvoC,KAAAsoC,UAA4B5+B,GAAI,CAAE6+B,MAAO,SAAUjqC,MAAO,iBACzEmhD,GAAG,iBACH/1C,GAAI,CAAEpL,MAAO,wCACZm5B,GAAE,uHACFz3B,KAAK+6E,GACLtjD,GAAE,gOAEHz3B,KAAKqgD,IAgCErgD,KAAAugD,GAAS,KAChBvgD,KAAK+mC,EAAKqF,QAGJpsC,KAAAwgD,QAAU,KAChBxgD,KAAKqgD,GAAcI,oBAAoB,QAASzgD,KAAKugD,KAjCrDvgD,KAAKqgD,GAAc3V,iBAAiB,QAAS1qC,KAAKugD,IAElD,MAAMy4B,EAAyBF,GAAaa,uBAExB,GAAhBX,EAAMzqF,QACTyR,KAAK+6E,GAAej+E,YAAY26B,GAAE,mEAGnC,IAAK,MAAMt3B,KAAQ64E,EAAO,CACzB,MAAMgC,EAAiCp7B,GAAO,CAAEthD,MAAO,iBAEvD,IAAK,MAAM7D,KAAW0F,EAAKy4E,SAC1BoC,EAAYl+E,YAAY+iD,GAAO,CAAEhuD,MAAO4I,EAAQuU,MAAQvU,EAAQ3I,KAAO,KAAO,IAAIwnF,KAAK7+E,EAAQuU,MAAMisE,mBAGtG,MAAMC,EAA4BL,GAAO,CAAEv8E,MAAO,6DAClD48E,EAAOltB,IAAM,gBAAkBntC,OAAOC,aAAaC,QAAQy3D,GAAar4E,EAAKy4E,SAAS,KACtF,MAAMtwC,EAA4B5+B,GAAI,CAAEpL,MAAO,kBAAoBoL,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,+BAAiC08E,GAAcE,GACzJl7E,KAAK+6E,GAAej+E,YAAYwrC,GAEhC0yC,EAAYtwC,iBAAiB,UAAU,KACtC,MAAMjwC,EAA4B0F,EAAKy4E,SAASoC,EAAYvT,eAC5DyT,EAAOC,cAAexxB,SAAShwD,QAAQ,gBAAkBknB,OAAOC,aAAaC,QAAQy3D,GAAa/9E,KAClGygF,EAAOC,cAAe3xB,cAAc,IAAI4xB,MAAM,0BCrCrCC,GA2BZxhF,YAAoBktC,EAA4Bu0C,GAA5Bt7E,KAAA+mC,EAAAA,EAA4B/mC,KAAAs7E,GAAAA,EA1B/Bt7E,KAAAinC,EAAuB,IACvBjnC,KAAAknC,EAAwB,GACxBlnC,KAAAyiD,GAAwB1jD,EAAImpC,KAAK,CAAEb,KAAMtnC,EAAY+H,mBAAoB8/B,iBAAkB,SAC3F5nC,KAAA6yD,GAA0B9zD,EAAI4oC,IAAI,CAAEC,iBAAkB,SACtD5nC,KAAA8yD,GAAyB/zD,EAAI4oC,IAAI,CAAEC,iBAAkB,SACrD5nC,KAAA+yD,GAAyBh0D,EAAImpC,KAAK,CAAEb,KAAM,OAAQU,OAAQ,eAAgBC,eAAgB,EAAGJ,iBAAkB,SAC/G5nC,KAAAu7E,GAAyBx8E,EAAImpC,KAAK,CAAEb,KAAM,eAAgBO,iBAAkB,SAC5E5nC,KAAAqoC,EAAsBtpC,EAAI4oC,IAAI,CAAErpC,MAAO,qBAAqByB,EAAYqH,2DAA4DogC,MAAO,OAAQC,OAAQ,OAAQob,QAAS,OAAS7iD,KAAKinC,EAAe,IAAMjnC,KAAKknC,EAAe4b,oBAAqB,QACxQ9iD,KAAKyiD,GACLziD,KAAK6yD,GACL7yD,KAAK8yD,GACL9yD,KAAK+yD,GACL/yD,KAAKu7E,IAGUv7E,KAAAsoC,UAAyB5pC,EAAKgL,IAAI,CAAE6+B,MAAO,WAAYjqC,MAAO,gBAAkB0B,KAAKqoC,GAE7FroC,KAAAwoC,EAAkB,EAClBxoC,KAAAkiD,GAAkB,EAClBliD,KAAAkzD,GAAoB,EACpBlzD,KAAAmzD,GAAmB,EACnBnzD,KAAAyoC,GAAsB,EACtBzoC,KAAAozD,GAAiC,KACjCpzD,KAAAqzD,GAAwB,GACxBrzD,KAAAszD,IAA2B,EA4B3BtzD,KAAAwpC,GAAqBP,IAC5BA,EAAMQ,iBACNzpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7H9pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GAExCliD,KAAKkzD,GAAYlzD,KAAKuzD,GAASvzD,KAAKwoC,GACpCxoC,KAAKmzD,GAAWnzD,KAAKwzD,GAAQxzD,KAAKkiD,IAClCliD,KAAKoqC,MAGEpqC,KAAAiqC,GAAqBhB,IAC5BA,EAAMQ,iBACNzpC,KAAKyoC,GAAa,EAClB,MAAMiB,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvH9pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GAExCliD,KAAKkzD,GAAYlzD,KAAKuzD,GAASvzD,KAAKwoC,GACpCxoC,KAAKmzD,GAAWnzD,KAAKwzD,GAAQxzD,KAAKkiD,IAClCliD,KAAKoqC,MAGEpqC,KAAAmqC,GAAmBlB,IAC1B,GAAmC,MAA/BjpC,KAAKsoC,UAAUmb,aAAsB,OACzC,MAAM/Z,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7H9pC,KAAKkiD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKoqC,MAGEpqC,KAAAqqC,GAAmBpB,IAC1B,GAAmC,MAA/BjpC,KAAKsoC,UAAUmb,aAAsB,OACzC,IAAKzjD,KAAKyoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQ9pC,KAAKinC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvH9pC,KAAKkiD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAOtjD,KAAKknC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAKoqC,MAgCEpqC,KAAAsqC,GAAuBrB,IAC1BjpC,KAAKyoC,IACRzoC,KAAK+mC,EAAKqa,OAAOphD,KAAKozD,IACtBpzD,KAAKozD,GAAU,MAEhBpzD,KAAKyoC,GAAa,GA7GlB,IAAK,IAAIn6C,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,GAAKJ,EAAO0J,+BACrEoI,KAAK6yD,GAAS/1D,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYkI,MAAOq/B,GAAIh5C,EAAI,GAAK0R,KAAKinC,GAAgB/4C,EAAOyJ,sBAAwB,GAAK,EAAG4vC,EAAG,EAAGC,MAAO,EAAGC,OAAQznC,KAAKknC,KAErK,IAAK,IAAI54C,EAAY,EAAGA,GAAKJ,EAAOyJ,sBAAuBrJ,GAAKJ,EAAO0J,+BACtEoI,KAAK8yD,GAAQh2D,YAAYiC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYmI,UAAWo/B,GAAIh5C,EAAI,GAAK0R,KAAKinC,GAAgB/4C,EAAOyJ,sBAAwB,GAAK,EAAG4vC,EAAG,EAAGC,MAAO,EAAGC,OAAQznC,KAAKknC,KAGxKlnC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKwpC,IAClDzsC,SAAS2tC,iBAAiB,YAAa1qC,KAAKmqC,IAC5CptC,SAAS2tC,iBAAiB,UAAW1qC,KAAKsqC,IAE1CtqC,KAAKsoC,UAAUoC,iBAAiB,aAAc1qC,KAAKiqC,IACnDjqC,KAAKsoC,UAAUoC,iBAAiB,YAAa1qC,KAAKqqC,IAClDrqC,KAAKsoC,UAAUoC,iBAAiB,WAAY1qC,KAAKsqC,IACjDtqC,KAAKsoC,UAAUoC,iBAAiB,cAAe1qC,KAAKsqC,IAG7CzwC,GAASytC,GAChB,OAAQp5C,EAAOyJ,sBAAwB,GAAK2vC,EAAItnC,KAAKinC,EAAe,EAG7DptC,GAAQ0tC,GACf,OAAOr5C,EAAO6C,aAAe,GAAKw2C,EAAI,IAAMvnC,KAAKknC,EAAgB,IAqD1DrtC,KACP,GAAImG,KAAKyoC,EAAY,CACpB,MAAMvxB,EAAelX,KAAKuzD,GAASvzD,KAAKwoC,GAClCmb,EAAc3jD,KAAKwzD,GAAQxzD,KAAKkiD,IAEhC1xC,EAAyBxQ,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAC1Fj7B,EAAqD,MAAvBlU,KAAKs7E,GAA0B9qE,EAAW0D,aAAe1D,EAAWiD,qBAAqBzT,KAAKs7E,IAElI,GAAIpkE,GAAQlX,KAAKkzD,GAAW,CAC3B,MAAM3sB,GAAiBod,EAAM3jD,KAAKmzD,KAAaj8C,EAAOlX,KAAKkzD,IACrDz9D,EAAiBuK,KAAKmzD,GAAWnzD,KAAKkzD,GAAY3sB,EAClDktB,EAAoB1kE,KAAK+f,KAAK/f,KAAKyB,IAAIwP,KAAKkzD,GAAWh8C,IACvDw8C,EAAoB3kE,KAAKmU,MAAMnU,KAAKmgB,IAAIlP,KAAKkzD,GAAWh8C,IAC9D,IAAK,IAAI5oB,EAAYmlE,EAAWnlE,GAAKolE,EAAWplE,IAC3CA,EAAI,GAAKA,GAAKJ,EAAOyJ,wBACzBuc,EAAahY,SAAS5N,GAAKS,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAO6C,YAAahC,KAAKgb,MAAMzb,EAAIi4C,EAAQ9wC,MAI7Fye,EAAahY,SAASnN,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAOyJ,sBAAwB,EAAG5I,KAAKgb,MAAMmN,MAAWnoB,KAAKmgB,IAAI,EAAGngB,KAAKyB,IAAItC,EAAO6C,YAAahC,KAAKgb,MAAM45C,KAEvJ3jD,KAAKkzD,GAAYh8C,EACjBlX,KAAKmzD,GAAWxP,EAEhB3jD,KAAKozD,GAAU,IAAI9f,GAAetzC,KAAK+mC,EAAMv2B,EAAY0D,GACzDlU,KAAK+mC,EAAK4sB,qBAAqB3zD,KAAKozD,KAY/Bv5D,SACN,MAAM2W,EAAyBxQ,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAC1Fj7B,EAAqD,MAAvBlU,KAAKs7E,GAA0B9qE,EAAW0D,aAAe1D,EAAWiD,qBAAqBzT,KAAKs7E,IAC5H1nB,EAAwBpiD,IACrB,EAAKA,EAAQtjB,EAAO6C,cAAiBiP,KAAKknC,EAAgB,GAAK,EAGxE,IAAIu6B,EAAoB,EACpBv5B,EAAe,OAASzuC,EAAauG,KAAKknC,GAAiB,IAC/D,IAAK,IAAI54C,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IAAK,CAC9D,IAAIgzB,EAAoBpN,EAAahY,SAAS5N,GAE7C45C,GADgB,GAAbu5B,GAA+B,GAAbngD,EACb,KAEA,KAET4mB,GAAQzuC,GAAcnL,EAAI,GAAK0R,KAAKinC,GAAgB/4C,EAAOyJ,sBAAwB,IAAM,IAAM8B,EAAam6D,EAAqBtyC,IAAc,IAC/ImgD,EAAYngD,EAGb,MAAMwyC,EAAqBF,EAAqB6N,GAC5CA,EAAY,IACfv5B,GAAQ,MAAQloC,KAAKinC,EAAe,GAAK,IAAMxtC,EAAaq6D,GAAc,KAGvE9zD,KAAKqzD,IAAiBnrB,IACzBloC,KAAKqzD,GAAgBnrB,EACrBloC,KAAK+yD,GAAOl1D,aAAa,IAAKqqC,GAC9BloC,KAAKyiD,GAAM5kD,aAAa,IAAKqqC,EAAO,KAAOloC,KAAKinC,EAAe,IAAMxtC,EAAaq6D,GAAc,MAAQ9zD,KAAKinC,EAAe,IAAMxtC,EAAauG,KAAKknC,GAAiB,QAAUztC,EAAauG,KAAKknC,GAAiB,OAElNlnC,KAAKu7E,GAAO19E,aAAa,IAAK,KAAOmC,KAAKinC,EAAe,IAAMxtC,EAAaq6D,GAAc,OAAS9zD,KAAKinC,EAAe,GAAK,IAAMxtC,EAAaq6D,EAAa,GAAK,OAAS9zD,KAAKinC,EAAe,GAAK,IAAMxtC,EAAaq6D,EAAa,GAAK,MACxO9zD,KAAKu7E,GAAOj9E,MAAM01D,QAAWyN,EAAY,EAAK,GAAK,QAEhDzhE,KAAKszD,IAAmBtzD,KAAK+mC,EAAKgtB,YACrC/zD,KAAKszD,GAAkBtzD,KAAK+mC,EAAKgtB,UACjC/zD,KAAK8yD,GAAQx0D,MAAM01D,QAAUh0D,KAAK+mC,EAAKgtB,UAAY,GAAK,SClL3D,MAAMxU,OAAEA,GAAM71C,IAAEA,GAAG+1C,GAAEA,GAAEG,OAAEA,GAAMC,OAAEA,IAAWnhD,QAE/B88E,GA2BZ3hF,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EA1BH/mC,KAAAy7E,GAAkC77B,GAAO,CAAEthD,MAAO,gBAClEuhD,GAAO,CAAEhuD,MAAO,gBAAkB,gBAClCguD,GAAO,CAAEhuD,MAAO,iBAAmB,iBACnCguD,GAAO,CAAEhuD,MAAO,oBAAsB,4BACtCguD,GAAO,CAAEhuD,MAAO,mBAAqB,gBACrCguD,GAAO,CAAEhuD,MAAO,iBAAmB,iBACnCguD,GAAO,CAAEhuD,MAAO,oBAAsB,iBACtCguD,GAAO,CAAEhuD,MAAO,UAAY,UAC5BguD,GAAO,CAAEhuD,MAAO,UAAY,UAC5BguD,GAAO,CAAEhuD,MAAO,YAAc,aAEdmO,KAAAqgD,GAAmCd,GAAO,CAAEhX,MAAO,iBACnDvoC,KAAAsgD,GAAiCf,GAAO,CAAEhX,MAAO,aAAcjqC,MAAO,cAAgB,QAEvF0B,KAAAsoC,UAA4B5+B,GAAI,CAAE6+B,MAAO,qBAAsBjqC,MAAO,iBACrFmhD,GAAG,aACH/1C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,gBAAkB0B,KAAKy7E,KAE/D/xE,GAAI,CAAEpL,MAAO,+EACZ0B,KAAKsgD,IAENtgD,KAAKqgD,IAEWrgD,KAAA07E,UAA2B76D,OAAOC,aAAaC,QAAQ,cAYhE/gB,KAAAugD,GAAS,KACM,MAAlBvgD,KAAK07E,UACR37E,EAAY47E,SAAS37E,KAAK07E,WAE1B37E,EAAY47E,SAAS,gBAEtB37E,KAAK+mC,EAAKqF,QAGJpsC,KAAAwgD,QAAU,KAChBxgD,KAAKsgD,GAAYG,oBAAoB,QAASzgD,KAAK0gD,IACnD1gD,KAAKqgD,GAAcI,oBAAoB,QAASzgD,KAAKugD,IACrDvgD,KAAKsoC,UAAUmY,oBAAoB,UAAWzgD,KAAK6gD,KAG5C7gD,KAAA6gD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQ7iD,SAAwC,IAAjBgrC,EAAM8X,SACxD/gD,KAAK0gD,MAIC1gD,KAAA0gD,GAAe,KACtB7/B,OAAOC,aAAakgC,QAAQ,aAAchhD,KAAKy7E,GAAa5pF,OAC5DmO,KAAK+mC,EAAKoa,OAAS,KACnBnhD,KAAK+mC,EAAK60C,WAAa57E,KAAKy7E,GAAa5pF,MACzCmO,KAAK+mC,EAAKqF,QAGHpsC,KAAA67E,GAAgB,KACvB97E,EAAY47E,SAAS37E,KAAKy7E,GAAa5pF,QAtCjB,MAAlBmO,KAAK07E,YACR17E,KAAKy7E,GAAa5pF,MAAQmO,KAAK07E,WAEhC17E,KAAKsgD,GAAY5V,iBAAiB,QAAS1qC,KAAK0gD,IAChD1gD,KAAKqgD,GAAc3V,iBAAiB,QAAS1qC,KAAKugD,IAClDvgD,KAAKsoC,UAAUoC,iBAAiB,UAAW1qC,KAAK6gD,IAChD7gD,KAAKy7E,GAAa/wC,iBAAiB,SAAU1qC,KAAK67E,KCrCpD,MAAMt8B,OAAEA,GAAM71C,IAAEA,GAAG+tB,EAAEA,GAACgoB,GAAEA,GAAEq8B,GAAEA,IAAOp9E,QAEtBq9E,GAKZliF,YAAoBktC,EAAoB9xC,GACvC,IAAIy6D,EAEJ,OAHmB1vD,KAAA+mC,EAAAA,EAJH/mC,KAAAg8E,GAAkCz8B,GAAO,CAAEhX,MAAO,iBAoV3DvoC,KAAAugD,GAAS,KAChBvgD,KAAK+mC,EAAKqF,QAGJpsC,KAAAwgD,QAAU,KAChBxgD,KAAKg8E,GAAav7B,oBAAoB,QAASzgD,KAAKugD,KAlV5CtrD,GACP,IAAK,QACJy6D,EAAUhmD,GACT+1C,GAAG,SACHhoB,GAAE,sdACFA,GAAE,6RAEF,MACF,IAAK,MACJi4B,EAAUhmD,GACT+1C,GAAG,YACHhoB,GAAE,+JAEF,MACF,IAAK,QACJi4B,EAAUhmD,GACT+1C,GAAG,cACHhoB,GAAE,gFAEF,MACF,IAAK,SACJi4B,EAAUhmD,GACT+1C,GAAG,UACHhoB,GAAE,0OAEF,MACF,IAAK,SACJi4B,EAAUhmD,GACT+1C,GAAG,UACHhoB,GAAE,0IAEF,MACF,IAAK,kBACJi4B,EAAUhmD,GACT+1C,GAAG,qBACHhoB,GAAE,gSAEF,MACF,IAAK,mBACJi4B,EAAUhmD,GACT+1C,GAAG,qBACHhoB,GAAE,yMACFA,GAAE,qRAEF,MACF,IAAK,MACJi4B,EAAUhmD,GACT+1C,GAAG,sBACHhoB,GAAE,0LACFA,GAAE,wUAEF,MACF,IAAK,WAEHi4B,EAAUhmD,GACT+1C,GAAG,gBACHhoB,GAAE,oPACFA,GAAE,sQAGJ,MACD,IAAK,gBAEHi4B,EAAUhmD,GACT+1C,GAAG,kBACHhoB,GAAE,yMAGJ,MACD,IAAK,kBAEHi4B,EAAUhmD,GACT+1C,GAAG,4BACHhoB,GAAE,qIAGJ,MACD,IAAK,SACJi4B,EAAUhmD,GACT+1C,GAAG,UACHhoB,GAAE,4EACFA,GAAE,uFAEF,MACF,IAAK,iBACJi4B,EAAUhmD,GACT+1C,GAAG,mBACHhoB,GAAE,iGACFA,GAAE,qJAEF,MACF,IAAK,eACJi4B,EAAUhmD,GACT+1C,GAAG,oCACHhoB,GAAE,oGACFA,GAAE,kWACFA,GAAE,2GAGF,MACF,IAAK,kBACJi4B,EAAUhmD,GACT+1C,GAAG,kCACHhoB,GAAE,gOACFA,GAAE,gQAGF,MACF,IAAK,iBACJi4B,EAAUhmD,GACT+1C,GAAG,4BACHhoB,GAAE,+HACFA,GAAE,oGAEF,MACF,IAAK,aACJi4B,EAAUhmD,GACT+1C,GAAG,cACHhoB,GAAE,0DACFA,GAAE,ySACFA,GAAE,sGAEF,MACF,IAAK,WACJi4B,EAAUhmD,GACT+1C,GAAG,aACHhoB,GAAE,mHAEF,MACF,IAAK,YACJi4B,EAAUhmD,GACT+1C,GAAG,SACHhoB,GAAE,+KAEF,MACF,IAAK,gBACJi4B,EAAUhmD,GACT+1C,GAAG,uBACHhoB,GAAE,mHACFA,GAAE,yGAEF,MACF,IAAK,aACJi4B,EAAUhmD,GACT+1C,GAAG,oBACHhoB,GAAE,+KAEF,MACF,IAAK,WACJi4B,EAAUhmD,GACT+1C,GAAG,uBACHhoB,GAAE,kMACFA,GAAE,gWACFA,GAAE,2KAEF,MACF,IAAK,SACJi4B,EAAUhmD,GACT+1C,GAAG,UACHhoB,GAAE,sKACFA,GAAE,mXACFA,GAAE,oOAEF,MACF,IAAK,UACJi4B,EAAUhmD,GACT+1C,GAAG,WACHhoB,GAAE,8GAEF,MACF,IAAK,eAEHi4B,EAAUhmD,GACT+1C,GAAG,iBACHhoB,GAAE,sHAEF,MACH,IAAK,eAEHi4B,EAAUhmD,GACT+1C,GAAG,iBACHhoB,GAAE,qMAEF,MACH,IAAK,eAEHi4B,EAAUhmD,GACT+1C,GAAG,iBACHhoB,GAAE,8GAGJ,MACD,IAAK,cAEHi4B,EAAUhmD,GACT+1C,GAAG,gBACHhoB,GAAE,gJAGJ,MACD,IAAK,YACJi4B,EAAUhmD,GACT+1C,GAAG,gBACHhoB,GAAE,mRACFA,GAAE,0KACFA,GAAE,yYAEF,MACF,IAAK,eACJi4B,EAAUhmD,GACT+1C,GAAG,YACHhoB,GAAE,6KAEF,MACF,IAAK,oBACJi4B,EAAUhmD,GACT+1C,GAAG,sBACHhoB,GAAE,gUACFA,GAAE,gJAEF,MACF,IAAK,iBACJi4B,EAAUhmD,GACT+1C,GAAG,mBACHhoB,GAAE,kIAEF,MACF,IAAK,mBACJi4B,EAAUhmD,GACT+1C,GAAG,qBACHhoB,GAAE,sHACFA,GAAE,qGAEF,MACF,IAAK,WACJi4B,EAAUhmD,GACT+1C,GAAG,YACHhoB,GAAE,2KACFA,GAAE,kJACFA,GAAE,yIAEF,MACF,IAAK,YACJi4B,EAAUhmD,GACT+1C,GAAG,aACHhoB,GAAE,mNACFA,GAAE,+IAEF,MACF,IAAK,UACJi4B,EAAUhmD,GACT+1C,GAAG,WACHhoB,GAAE,gHACFA,GAAE,sRACFA,GAAE,qJAEF,MACF,IAAK,kBACJi4B,EAAUhmD,GACT+1C,GAAG,oBACHhoB,GAAE,oIACFA,GAAE,4GAEF,MACF,IAAK,kBACJi4B,EAAUhmD,GACT+1C,GAAG,oBACHhoB,GAAE,oJACFA,GAAE,yIAEF,MACF,IAAK,iBACJi4B,EAAUhmD,GACToyE,GAAG,6CACHrkD,GAAE,+IACFA,GAAE,mJAEF,MACF,IAAK,cACJi4B,EAAUhmD,GACToyE,GAAG,0CACHrkD,GAAE,4IACFA,GAAE,gJAEF,MACF,IAAK,aACJi4B,EAAUhmD,GACT+1C,GAAG,qBACHhoB,GAAE,+HACFA,GAAE,0IAEF,MACF,IAAK,gBACJi4B,EAAUhmD,GACT+1C,GAAG,wBACHhoB,GAAE,+HACFA,GAAE,gHAEF,MACF,IAAK,SACJi4B,EAAUhmD,GACT+1C,GAAG,qBACHhoB,GAAE,8LACFA,GAAE,uNACFA,GAAE,4PAEF,MACF,IAAK,gBACJi4B,EAAUhmD,GACT+1C,GAAG,uBACHhoB,GAAE,gMAEF,MACF,IAAK,sBACJi4B,EAAUhmD,GACT+1C,GAAG,wBACHhoB,GAAE,0LAEF,MAEF,QAAS,MAAM,IAAI1nC,MAAM,6BAA+BkF,GAGzD+K,KAAKsoC,UAAY5+B,GAAI,CAAE6+B,MAAO,SAAUjqC,MAAO,iBAC9CoxD,EACA1vD,KAAKg8E,IAGNz6B,YAAW,IAAMvhD,KAAKg8E,GAAax6B,UAEnCxhD,KAAKg8E,GAAatxC,iBAAiB,QAAS1qC,KAAKugD,KC/UnD,MAAM07B,GAULpiF,YAAYuG,EAAkC87E,EAA6BC,EAAYhW,GAAzCnmE,KAAAk8E,GAAAA,EAA6Bl8E,KAAAm8E,GAAAA,EAT1Dn8E,KAAAo8E,GAAcr/E,SAASC,eAAe,KACtCgD,KAAAq8E,GAAyBt9E,EAAIs3C,KAAK,CAAEimC,cAAe,aAAcxc,YAAa,GAAI8K,cAAe,SAAU2R,cAAe,OAAQl1C,KAAM,OAASrnC,KAAKo8E,IACtJp8E,KAAAw8E,GAAwBz9E,EAAIqoC,KAAK,CAAEE,EAAG,EAAGC,EAAG,IAC7CvnC,KAAAsoC,UAA2BvpC,EAAI4oC,IAAI3nC,KAAKw8E,GAAOx8E,KAAKq8E,IAC5Dr8E,KAAAy8E,GAAyB,EACzBz8E,KAAA08E,IAAwB,EACxB18E,KAAA28E,IAA6B,EAC7B38E,KAAA48E,GAAyB,GAGhC58E,KAAKw8E,GAAM3+E,aAAa,OAAQkC,EAAY+H,oBAC5C9H,KAAKq8E,GAAOx+E,aAAa,OAAQsoE,GAG3BtsE,QAAQ2tC,EAAeC,GAC7BznC,KAAKsoC,UAAUzqC,aAAa,IAAK,GAAMmC,KAAKk8E,GAAK10C,GACjDxnC,KAAKsoC,UAAUzqC,aAAa,IAAK,IAAM3P,EAAOkL,gBAAkB4G,KAAKm8E,GAAK10C,IAC1EznC,KAAKw8E,GAAM3+E,aAAa,QAAS,IAAM2pC,EAAQ,IAC/CxnC,KAAKw8E,GAAM3+E,aAAa,SAAU,IAAM4pC,EAAS,IACjDznC,KAAKq8E,GAAOx+E,aAAa,IAAK,GAAM2pC,EAAQ,GAC5CxnC,KAAKq8E,GAAOx+E,aAAa,IAAK,GAAK9O,KAAKgb,MAAM09B,EAAS,EAAI,IAGrD5tC,SAAS1K,EAAe0tF,EAAcC,EAAmB3W,EAAe9qE,EAAkBif,GAC5Fta,KAAKy8E,IAAkBttF,IACrB6Q,KAAK28E,IAAgC,GAATxtF,IAAuC,GAAvB6Q,KAAKy8E,MACxC,GAATttF,EACH6Q,KAAKw8E,GAAM3+E,aAAa,OAAQ,QAG5BxC,EACH2E,KAAKw8E,GAAM3+E,aAAa,OAAQg/E,EAAM98E,EAAY0I,sBAAwB1I,EAAYyI,oBAC9E8R,EACRta,KAAKw8E,GAAM3+E,aAAa,OAAQg/E,EAAM98E,EAAY4I,oBAAsB5I,EAAY2I,kBAEpF1I,KAAKw8E,GAAM3+E,aAAa,OAAQg/E,EAAM98E,EAAYwI,sBAAwBxI,EAAYuI,qBAKrFnZ,GAAS,KACZ6Q,KAAKq8E,GAAOx+E,aAAa,YAAa,MACtCmC,KAAKq8E,GAAOx+E,aAAa,QAAS,wCAGlCmC,KAAKq8E,GAAOx+E,aAAa,YAAa,MACtCmC,KAAKq8E,GAAOx+E,aAAa,QAAS,oCAGnCmC,KAAKy8E,GAAiBttF,EACtB6Q,KAAKo8E,GAAM74C,KAAO,GAAKp0C,GAGpB6Q,KAAK08E,IAAgBG,GAAO78E,KAAK48E,IAAkBzW,IACtDnmE,KAAK08E,GAAeG,EAChBC,EACH98E,KAAKq8E,GAAOx+E,aAAa,OAAQkC,EAAY0H,eAE7CzH,KAAKq8E,GAAOx+E,aAAa,OAAQsoE,GAEN,GAAvBnmE,KAAKy8E,GACRz8E,KAAKw8E,GAAM3+E,aAAa,OAAQkC,EAAYqH,kBAGxC/L,EACH2E,KAAKw8E,GAAM3+E,aAAa,OAAQg/E,EAAM98E,EAAY0I,sBAAwB1I,EAAYyI,oBAC9E8R,EACRta,KAAKw8E,GAAM3+E,aAAa,OAAQg/E,EAAM98E,EAAY4I,oBAAsB5I,EAAY2I,kBAEpF1I,KAAKw8E,GAAM3+E,aAAa,OAAQg/E,EAAM98E,EAAYwI,sBAAwBxI,EAAYuI,sBAKtFtI,KAAK28E,IAAqBG,GAAY98E,KAAK48E,IAAkBzW,IAChEnmE,KAAK28E,GAAoBG,EACrBA,GACH98E,KAAKw8E,GAAM3+E,aAAa,OAAQsoE,GAChCnmE,KAAKq8E,GAAOx+E,aAAa,OAAQkC,EAAY0H,gBAE7CzH,KAAKq8E,GAAOx+E,aAAa,OAAQsoE,GAEN,GAAvBnmE,KAAKy8E,GACRz8E,KAAKw8E,GAAM3+E,aAAa,OAAQkC,EAAYqH,kBAGxC/L,EACH2E,KAAKw8E,GAAM3+E,aAAa,OAAQg/E,EAAM98E,EAAY0I,sBAAwB1I,EAAYyI,oBAC9E8R,EACRta,KAAKw8E,GAAM3+E,aAAa,OAAQg/E,EAAM98E,EAAY4I,oBAAsB5I,EAAY2I,kBAEpF1I,KAAKw8E,GAAM3+E,aAAa,OAAQg/E,EAAM98E,EAAYwI,sBAAwBxI,EAAYuI,sBAK1FtI,KAAK48E,GAAiBzW,SAIX4W,GAwDZljF,YAAoBktC,EAA4Bod,GAA5BnkD,KAAA+mC,EAAAA,EAA4B/mC,KAAAmkD,GAAAA,EAvDhCnkD,KAAAg9E,GAAkCt+E,EAAKkhD,OAAO,CAAEthD,MAAO,wBAA0BpQ,EAAOkL,gBAAkB,gDAEzHsF,EAAKmhD,OAAO,CAAEhuD,MAAO,aAAe,qBACpC6M,EAAKmhD,OAAO,CAAEhuD,MAAO,YAAc,oBACnC6M,EAAKmhD,OAAO,CAAEhuD,MAAO,aAAe,oBAEpBmO,KAAAi9E,GAA6Bl+E,EAAIm+E,IACjCl9E,KAAAm9E,GAAmCp+E,EAAIm+E,IACvCl9E,KAAAmnC,EAA4BpoC,EAAIqoC,KAAK,CAAEC,KAAMtnC,EAAYuH,SAAUggC,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAGC,OAAQ,MACjGznC,KAAAo9E,GAAgCr+E,EAAIqoC,KAAK,CAAEC,KAAM,OAAQU,OAAQhoC,EAAYsH,aAAc2gC,eAAgB,EAAGJ,iBAAkB,OAAQN,EAAG,EAAGC,EAAG,EAAGC,MAAO,GAAIC,OAAQ,KACvKznC,KAAA2oE,GAA+B5pE,EAAImpC,KAAK,CAAEb,KAAMtnC,EAAY0H,aAAcsgC,OAAQhoC,EAAY0H,aAAcugC,eAAgB,EAAGJ,iBAAkB,SACjJ5nC,KAAA4oE,GAAiC7pE,EAAImpC,KAAK,CAAEb,KAAMtnC,EAAY0H,aAAcsgC,OAAQhoC,EAAY0H,aAAcugC,eAAgB,EAAGJ,iBAAkB,SACnJ5nC,KAAAq9E,GAAiCt+E,EAAImpC,KAAK,CAAEb,KAAMtnC,EAAY+H,mBAAoBigC,OAAQhoC,EAAY+H,mBAAoBkgC,eAAgB,EAAGJ,iBAAkB,SAC/J5nC,KAAAuqE,GAAiCxrE,EAAIqoC,KAAK,CAAEmB,MAAO,wBAAyBlB,KAAMtnC,EAAY4H,iBAAkBogC,OAAQhoC,EAAYsH,aAAc2gC,eAAgB,EAAGwiC,mBAAoB,OAAQC,eAAgB,MAAO7iC,iBAAkB,OAAQoD,WAAY,SAAU1D,EAAG,EAAGC,EAAG,EAAGC,MAAO,GAAIC,OAAQ,KACvSznC,KAAAqoC,EAAsBtpC,EAAI4oC,IAAI,CAAErpC,MAAO,qBAAqByB,EAAYqH,wCAAyCqgC,OAAQ,KACzIznC,KAAKi9E,GACLj9E,KAAKq9E,GACLr9E,KAAKuqE,GACLvqE,KAAKm9E,GACLn9E,KAAKo9E,GACLp9E,KAAK2oE,GACL3oE,KAAK4oE,GACL5oE,KAAKmnC,GAEWnnC,KAAAs9E,GAA6B5+E,EAAKkhD,OAAO,CAAErX,MAAO,iBAAkBjqC,MAAO,4JAC5E0B,KAAAsoC,UAAyB5pC,EAAKgL,IAAI,CAAE6+B,MAAO,cAAejqC,MAAO,uDAAyD0B,KAAKqoC,EAAMroC,KAAKs9E,GAASt9E,KAAKg9E,IAEvJh9E,KAAAu9E,GAAiB,GACjBv9E,KAAAw9E,GAAgC,GACzCx9E,KAAAwoC,EAAkB,EAClBxoC,KAAAkiD,GAAkB,EAMlBliD,KAAAy9E,GAAyB,EACzBz9E,KAAA09E,GAA6B,EAC7B19E,KAAA29E,GAAoB,EACpB39E,KAAA49E,GAAwB,EACxB59E,KAAA0oC,GAAsB,EACtB1oC,KAAA69E,IAAyB,EACzB79E,KAAA2rE,IAAiB,EACjB3rE,KAAAkkE,GAAoB,GACpBlkE,KAAA89E,GAAyB,GACzB99E,KAAAsmE,GAAgC,EAChCtmE,KAAA2kE,GAA4B,EAC5B3kE,KAAA+9E,GAAgC,EAChC/9E,KAAAooC,GAA6B,EAC7BpoC,KAAA4kE,IAA6B,EAC7B5kE,KAAA0mE,IAAkC,EAClC1mE,KAAAg+E,GAAsB3kF,EACtB2G,KAAAi+E,GAA0B,EAC1Bj+E,KAAAk+E,GAA0B,EAsC1Bl+E,KAAAm+E,GAAiCl1C,IACxCjpC,KAAKi+E,GAAkBlvF,KAAKmU,MAAMnU,KAAKyB,IAAIwP,KAAK+mC,EAAK5mC,KAAKwb,SAAW,EAAG5sB,KAAKmgB,IAAI,EAAGlP,KAAKwoC,EAAUxoC,KAAKkkE,OAGjGlkE,KAAAo+E,GAAuBn1C,IAE9B,IAAIo1C,EAA4C,aAA3Br+E,KAAKg9E,GAAanrF,MAAwB,EAAI,EAEpC,aAA3BmO,KAAKg9E,GAAanrF,OAAmD,YAA3BmO,KAAKg9E,GAAanrF,OAI/DmO,KAAK+mC,EAAK5qB,IAAMnc,KAAKi+E,GAAkB,EAAII,EAE3Cr+E,KAAK+mC,EAAK0T,UAAUC,oBACpB16C,KAAK+mC,EAAK0T,UAAU6jC,aAMhBt+E,KAAK+mC,EAAKzN,MAAMhyB,UAAYtH,KAAKi+E,GAAkBI,IACtDr+E,KAAK+mC,EAAKzN,MAAMhyB,WAChBtH,KAAKmkD,GAAYo6B,GAAcz1C,oBAIG,aAA3B9oC,KAAKg9E,GAAanrF,QAI1BmO,KAAK+mC,EAAK5qB,IAAMnc,KAAKi+E,GAErBj+E,KAAK+mC,EAAK0T,UAAUC,oBACpB16C,KAAK+mC,EAAK0T,UAAU+jC,aAMhBx+E,KAAK+mC,EAAKzN,MAAMhyB,SAAWtH,KAAKi+E,KACnCj+E,KAAK+mC,EAAKzN,MAAMhyB,WAChBtH,KAAKmkD,GAAYo6B,GAAcz1C,oBAKjC9oC,KAAKg9E,GAAavV,eAAiB,GAG5BznE,KAAAy+E,GAAqB,KAC5Bz+E,KAAK+mC,EAAK0T,UAAUikC,WAAW1+E,KAAKs9E,GAAQ7V,gBAGrCznE,KAAAwuE,GAAoBC,IAC3B,MAAMnnE,EAAYtH,KAAKkkE,GAAYlkE,KAAK+mC,EAAKzN,MAAMhyB,SAAW,EAC1DtH,KAAKooC,GAAqB9gC,IAC7BtH,KAAKooC,EAAoB9gC,EACzBtH,KAAKmnC,EAAUtpC,aAAa,IAAK,GAAKyJ,IAEvCuZ,OAAOoiD,sBAAsBjjE,KAAKwuE,KAwB3BxuE,KAAA2+E,GAAsB11C,IAC7BjpC,KAAK69E,IAAgB,EACrB79E,KAAK2rE,IAAiB,EACtB3rE,KAAK4+E,GAAiB31C,GACtBjpC,KAAKy9E,GAAiBz9E,KAAK29E,GAC3B39E,KAAK09E,GAAqB19E,KAAK49E,IAGxB59E,KAAA6+E,GAAoB51C,IAC3BjpC,KAAK4+E,GAAiB31C,GAClBjpC,KAAKy9E,IAAkBz9E,KAAK29E,IAAa39E,KAAK09E,IAAsB19E,KAAK49E,IAE5E30C,EAAMQ,iBAEHzpC,KAAK69E,IAAe79E,KAAK8+E,KAC7B9+E,KAAKspC,MAGEtpC,KAAA++E,GAAuB91C,IAC9BjpC,KAAK69E,IAAgB,EACrB79E,KAAK2rE,IAAiB,EACtB3rE,KAAKspC,MAGEtpC,KAAAqpC,GAAkBJ,IACrBjpC,KAAK0oC,IACT1oC,KAAK0oC,GAAa,IAGX1oC,KAAAupC,GAAiBN,IACnBjpC,KAAK0oC,IACV1oC,KAAK0oC,GAAa,IAWX1oC,KAAAwpC,GAAqBP,IAC5BA,EAAMQ,iBACNzpC,KAAK69E,IAAgB,EACrB79E,KAAKg/E,GAAgB/1C,GACrBjpC,KAAKy9E,GAAiBz9E,KAAK29E,GAC3B39E,KAAK09E,GAAqB19E,KAAK49E,GAG3B59E,KAAKkiD,IAAWh0D,EAAOkL,kBAEtB6vC,EAAM6lC,UACT9uE,KAAK2rE,IAAiB,EACtB3rE,KAAK+mC,EAAK0T,UAAUwkC,kBAAkBj/E,KAAK+mC,EAAK0T,UAAUkC,eAAgB38C,KAAK29E,GAAW39E,KAAK+mC,EAAK0T,UAAUoC,eAAgB78C,KAAK49E,IACnI59E,KAAK+mC,EAAK0T,UAAUykC,qBAEpBl/E,KAAK2rE,IAAiB,EAClB3rE,KAAK+mC,EAAK3mC,SAAWJ,KAAK49E,IAAiB59E,KAAK+mC,EAAK5qB,KAAOnc,KAAK29E,KACpE39E,KAAK+mC,EAAK0T,UAAU0kC,cAAcn/E,KAAK49E,GAAe59E,KAAK29E,IAC3D39E,KAAK2rE,IAAiB,GAEvB3rE,KAAK+mC,EAAK0T,UAAUC,uBAKf16C,KAAAmqC,GAAmBlB,IAC1BjpC,KAAKg/E,GAAgB/1C,GACjBjpC,KAAK69E,KACJ79E,KAAKy9E,IAAkBz9E,KAAK29E,IAAa39E,KAAK09E,IAAsB19E,KAAK49E,KAC5E59E,KAAK2rE,IAAiB,GAEvB3rE,KAAK8+E,MAEN9+E,KAAKspC,MAGEtpC,KAAAy1E,GAAsBxsC,IAC7B,GAAIjpC,KAAK69E,KAAkB79E,KAAK2rE,IAC3B3rE,KAAK+mC,EAAK3mC,SAAWJ,KAAK49E,IAAiB59E,KAAK+mC,EAAK5qB,KAAOnc,KAAK29E,GAAW,CAC/E,MAAMyB,GAAgBp/E,KAAKkiD,GAAUh0D,EAAOkL,iBAAmB4G,KAAK89E,GAAkB99E,KAAK89E,GAAiB,EACtGuB,EAAuBr/E,KAAK+mC,EAAK5mC,KAAKyb,mBAC5C5b,KAAK+mC,EAAK0T,UAAUikC,YAAY1+E,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK49E,IAAe9lE,KAAK9X,KAAK29E,KAAcyB,EAAK,EAAIC,KAAkBA,EAAe,IAGhJr/E,KAAK69E,IAAgB,EACrB79E,KAAK2rE,IAAiB,EACtB3rE,KAAKspC,MA/MLzoB,OAAOoiD,sBAAsBjjE,KAAKwuE,IAClCxuE,KAAKqoC,EAAKqC,iBAAiB,YAAa1qC,KAAKwpC,IAC7CzsC,SAAS2tC,iBAAiB,YAAa1qC,KAAKmqC,IAC5CptC,SAAS2tC,iBAAiB,UAAW1qC,KAAKy1E,IAC1Cz1E,KAAKqoC,EAAKqC,iBAAiB,YAAa1qC,KAAKqpC,IAC7CrpC,KAAKqoC,EAAKqC,iBAAiB,WAAY1qC,KAAKupC,IAE5CvpC,KAAKs9E,GAAQ5yC,iBAAiB,SAAU1qC,KAAKy+E,IAC7Cz+E,KAAKs9E,GAAQ5yC,iBAAiB,aAAc1qC,KAAK2+E,IACjD3+E,KAAKs9E,GAAQ5yC,iBAAiB,YAAa1qC,KAAK6+E,IAChD7+E,KAAKs9E,GAAQ5yC,iBAAiB,WAAY1qC,KAAK++E,IAC/C/+E,KAAKs9E,GAAQ5yC,iBAAiB,cAAe1qC,KAAK++E,IAElD,IAAIO,GAAgC,EACpCviF,SAAS2tC,iBAAiB,aAAa,KACjC40C,IACJt/E,KAAKg+E,IAAa,EAClBh+E,KAAKspC,MAENg2C,GAAuB,KACrB,GACHviF,SAAS2tC,iBAAiB,cAAc,KAClC40C,IACJt/E,KAAKg+E,IAAa,EAClBh+E,KAAKspC,MAENg2C,GAAuB,KACrB,GAEHt/E,KAAKg9E,GAAavV,eAAiB,EACnCznE,KAAKg9E,GAAatyC,iBAAiB,SAAU1qC,KAAKo+E,IAClDp+E,KAAKg9E,GAAatyC,iBAAiB,YAAa1qC,KAAKm+E,IAmE/CtkF,sBACFmG,KAAK0oC,IACR1oC,KAAK+mC,EAAKzN,MAAMhyB,SAAWtH,KAAK29E,GAAa39E,KAAKwoC,EAAUxoC,KAAKkkE,GAAalkE,KAAKkkE,IAI7ErqE,KACPmG,KAAK+mC,EAAK0T,UAAUwkC,kBAAkBj/E,KAAK+mC,EAAK0T,UAAUkC,eAAgB38C,KAAK29E,GAAW39E,KAAK+mC,EAAK0T,UAAUoC,eAAgB78C,KAAK49E,IACnI59E,KAAK+mC,EAAK0T,UAAUykC,mBAGbrlF,GAAiBovC,GACxB,MAAMS,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,EAAUS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,KACvD9pC,KAAKkiD,GAAUjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,IACnDE,MAAMxjD,KAAKwoC,KAAUxoC,KAAKwoC,EAAU,GACpCgb,MAAMxjD,KAAKkiD,MAAUliD,KAAKkiD,GAAU,GACxCliD,KAAK29E,GAAY5uF,KAAKmU,MAAMnU,KAAKyB,IAAIwP,KAAK+mC,EAAK5mC,KAAKwb,SAAW,EAAG5sB,KAAKmgB,IAAI,EAAGlP,KAAKwoC,EAAUxoC,KAAKkkE,MAClGlkE,KAAK49E,GAAgB7uF,KAAKmU,MAAMnU,KAAKyB,IAAIwP,KAAK+mC,EAAK5mC,KAAK8b,kBAAoB,EAAGltB,KAAKmgB,IAAI,GAAIlP,KAAKkiD,GAAUh0D,EAAOkL,iBAAmB4G,KAAK89E,MAqCnIjkF,GAAgBovC,GACvB,MAAMS,EAA2B1pC,KAAKqoC,EAAKsB,wBAC3C3pC,KAAKwoC,GAAWS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,KAC7D9pC,KAAKkiD,IAAWjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,IAC7DtjD,KAAK29E,GAAY5uF,KAAKmU,MAAMnU,KAAKyB,IAAIwP,KAAK+mC,EAAK5mC,KAAKwb,SAAW,EAAG5sB,KAAKmgB,IAAI,EAAGlP,KAAKwoC,EAAUxoC,KAAKkkE,MAClGlkE,KAAK49E,GAAgB7uF,KAAKmU,MAAMnU,KAAKyB,IAAIwP,KAAK+mC,EAAK5mC,KAAK8b,kBAAoB,EAAGltB,KAAKmgB,IAAI,GAAIlP,KAAKkiD,GAAUh0D,EAAOkL,iBAAmB4G,KAAK89E,MAoDnIjkF,KACP,IAAIuG,EAAkBJ,KAAK49E,GACvBzhE,EAAcnc,KAAK29E,GAEnB39E,KAAKg+E,KACR7hE,EAAMnc,KAAK+mC,EAAK5qB,IAChB/b,EAAUJ,KAAK+mC,EAAK3mC,SAGrB,MAAM08E,EAAqB3gE,GAAOnc,KAAK+mC,EAAK5qB,KAAO/b,GAAWJ,KAAK+mC,EAAK3mC,QAClEm/E,EAA4Bv/E,KAAKkiD,IAAWh0D,EAAOkL,gBAEzD,GAAI4G,KAAK2rE,IAAkB3rE,KAAKy9E,IAAkBz9E,KAAK29E,GAAW,CAGjE,IAAIlP,EAAoB6K,KAAKvtD,MAEzB0iD,EAAYzuE,KAAKk+E,IAAmB,KAEnC/hE,EAAMnc,KAAK+mC,EAAKmC,aAAelpC,KAAK+mC,EAAKgD,iBAAmB,GAAK/pC,KAAK+mC,EAAKmC,aAAelpC,KAAK+mC,EAAK5mC,KAAKwb,SAAW3b,KAAK+mC,EAAKgD,kBAEjI/pC,KAAKmkD,GAAYq7B,mBAAmB,GAEjCrjE,EAAMnc,KAAK+mC,EAAKmC,cAAgBlpC,KAAK+mC,EAAKmC,aAAe,GAE5DlpC,KAAKmkD,GAAYq7B,oBAAoB,GAGtCx/E,KAAKk+E,GAAkBzP,GAqBzB,GAfIzuE,KAAK0oC,IAAe1oC,KAAK69E,KAAkBf,GAAYyC,GAC1Dv/E,KAAKo9E,GAAcv/E,aAAa,IAAK,IAAM,EAAImC,KAAKkkE,GAAY/nD,IAChEnc,KAAKo9E,GAAcv/E,aAAa,IAAK,IAAM,EAAI3P,EAAOkL,gBAAmB4G,KAAK89E,GAAiB19E,IAC/FJ,KAAKo9E,GAAcv/E,aAAa,SAAU,IAAMmC,KAAK89E,GAAiB,IACtE99E,KAAKo9E,GAAcv/E,aAAa,QAAS,IAAMmC,KAAKkkE,GAAY,IAChElkE,KAAKo9E,GAAc9+E,MAAM0sC,WAAa,YAC3BhrC,KAAK0oC,GAAgB1oC,KAAKwoC,GAAWrsB,EAAMnc,KAAKkkE,IAAelkE,KAAKwoC,EAAUrsB,EAAMnc,KAAKkkE,GAAYlkE,KAAKkkE,IAAelkE,KAAKkiD,GAAU,KAAUq9B,GAC7Jv/E,KAAKo9E,GAAcv/E,aAAa,IAAK,IAAM,EAAImC,KAAKkkE,GAAY/nD,IAChEnc,KAAKo9E,GAAcv/E,aAAa,IAAK,KACrCmC,KAAKo9E,GAAcv/E,aAAa,SAAU,IAAM3P,EAAOkL,gBAAkB,IACzE4G,KAAKo9E,GAAc9+E,MAAM0sC,WAAa,WAEtChrC,KAAKo9E,GAAc9+E,MAAM0sC,WAAa,UAGlChrC,KAAK0oC,GAAc1oC,KAAKg+E,KAAelB,GAAYyC,EAAiB,CACxE,MAAMH,GAAgBp/E,KAAKkiD,GAAUh0D,EAAOkL,iBAAmB4G,KAAK89E,GAAkB99E,KAAK89E,GAAiB,EACtGrzC,EAAiBzqC,KAAKkkE,IAAa/nD,EAAM,IACzC+oD,EAAiBh3E,EAAOkL,gBAAkB4G,KAAK89E,IAAkB19E,EAAU,IAC3EK,EAAqC,GAAtBT,KAAK89E,GACpB2B,EAAoC,GAAtBz/E,KAAK89E,GACnBt2C,EAAsC,KAAtBxnC,KAAK89E,GAE3B99E,KAAK2oE,GAAa9qE,aAAa,OAAQuhF,IAAOp/E,KAAKg+E,GAAaj+E,EAAYsH,aAAetH,EAAY0H,cACvGzH,KAAK4oE,GAAe/qE,aAAa,OAASuhF,GAAOp/E,KAAKg+E,GAAwCj+E,EAAY0H,aAAvC1H,EAAYsH,cAE/ErH,KAAK2oE,GAAa9qE,aAAa,IAAK,KAAK4sC,KAAUy6B,EAASua,OAASh1C,EAASjD,KAAS09B,EAASzkE,OAAUgqC,EAASjD,KAAS09B,EAASzkE,OACrIT,KAAK4oE,GAAe/qE,aAAa,IAAK,KAAK4sC,KAAUy6B,EAASua,OAASh1C,EAASjD,KAAS09B,EAASzkE,OAAUgqC,EAASjD,KAAS09B,EAASzkE,OAEvIT,KAAK2oE,GAAarqE,MAAM0sC,WAAa,UACrChrC,KAAK4oE,GAAetqE,MAAM0sC,WAAa,eAEvChrC,KAAK2oE,GAAarqE,MAAM0sC,WAAa,SACrChrC,KAAK4oE,GAAetqE,MAAM0sC,WAAa,SAGxChrC,KAAKuqE,GAAejsE,MAAMwrC,KAAQ9pC,KAAKkkE,GAAYlkE,KAAK+mC,EAAK5qB,IAAO,KACpEnc,KAAKuqE,GAAejsE,MAAMglD,IAAOp1D,EAAOkL,gBAAmB4G,KAAK89E,GAAiB99E,KAAK+mC,EAAK3mC,QAAY,KAEvGJ,KAAKs9E,GAAQh/E,MAAMwrC,KAAQ9pC,KAAKkkE,GAAYlkE,KAAK+mC,EAAK5qB,IAAO,KAE7Dnc,KAAKs9E,GAAQh/E,MAAMkpC,MAAQxnC,KAAKkkE,GAAY,KAC5ClkE,KAAKs9E,GAAQh/E,MAAMglD,IAAOp1D,EAAOkL,gBAAkB4G,KAAK89E,GAAiB99E,KAAK+mC,EAAK3mC,QAAW,KAC9FJ,KAAKs9E,GAAQh/E,MAAMmpC,OAASznC,KAAK89E,GAAiB,KAElD99E,KAAKg9E,GAAa1+E,MAAMwrC,KAAQ9pC,KAAKkkE,GAAY/nD,EAAO,KAExD,MAAMkjE,EAAuBr/E,KAAK+mC,EAAK5mC,KAAKyb,mBAAqB,EACjE,IAAK,IAAIttB,EAAY0R,KAAK+9E,GAAuBzvF,EAAI+wF,EAAc/wF,IAClE0R,KAAKs9E,GAAQxgF,YAAY4B,EAAKmhD,OAAO,CAAEhuD,MAAOvD,GAAKA,IAEpD,IAAK,IAAIA,EAAY+wF,EAAc/wF,EAAI0R,KAAK+9E,GAAuBzvF,IAClE0R,KAAKs9E,GAAQvwE,YAAkB/M,KAAKs9E,GAAQxH,WAE7C91E,KAAK+9E,GAAwBsB,EAC7B,MAAMK,EAA0B1/E,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAAS0X,KAAK9X,KAAK+mC,EAAK5qB,KACtFnc,KAAKs9E,GAAQ7V,eAAiBiY,IAAiB1/E,KAAKs9E,GAAQ7V,cAAgBiY,GAG1E7lF,SAKN,GAHAmG,KAAKkkE,GAAYlkE,KAAK+mC,EAAKqC,cAC3BppC,KAAK89E,GAAiB99E,KAAK+mC,EAAK6gC,mBAE5B5nE,KAAKsmE,IAAyBtmE,KAAK+mC,EAAK5mC,KAAK8b,kBAAmB,CAGnE,IAAK,IAAIsrB,EAAYvnC,KAAKsmE,GAAuB/+B,EAAIvnC,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBsrB,IAAK,CAC3FvnC,KAAKu9E,GAAMh2C,GAAK,GAChB,IAAK,IAAID,EAAY,EAAGA,EAAItnC,KAAK2kE,GAAmBr9B,IAAK,CACxD,MAAMq4C,EAAW,IAAI1D,GAAI10C,EAAGD,EAAGC,EAAGxnC,EAAYW,gBAAgBV,KAAK+mC,EAAK5mC,KAAMonC,GAAG3mC,kBACjF++E,EAAIC,QAAQ5/E,KAAKkkE,GAAWlkE,KAAK89E,IACjC99E,KAAKi9E,GAAcngF,YAAY6iF,EAAIr3C,WACnCtoC,KAAKu9E,GAAMh2C,GAAGD,GAAKq4C,GAKrB,IAAK,IAAIp4C,EAAYvnC,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBsrB,EAAIvnC,KAAKsmE,GAAuB/+B,IACtF,IAAK,IAAID,EAAY,EAAGA,EAAItnC,KAAK2kE,GAAmBr9B,IACnDtnC,KAAKi9E,GAAclwE,YAAY/M,KAAKu9E,GAAMh2C,GAAGD,GAAGgB,WAIlDtoC,KAAKu9E,GAAMhvF,OAASyR,KAAK+mC,EAAK5mC,KAAK8b,kBACnCjc,KAAK69E,IAAgB,EAGtB,GAAI79E,KAAK2kE,IAAqB3kE,KAAK+mC,EAAK5mC,KAAKwb,UAAY3b,KAAK4kE,IAAqB5kE,KAAKkkE,GAAW,CAClG,IAAK,IAAI38B,EAAY,EAAGA,EAAIvnC,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBsrB,IAAK,CAClE,IAAK,IAAID,EAAYtnC,KAAK2kE,GAAmBr9B,EAAItnC,KAAK+mC,EAAK5mC,KAAKwb,SAAU2rB,IAAK,CAC9E,MAAMq4C,EAAW,IAAI1D,GAAI10C,EAAGD,EAAGC,EAAGxnC,EAAYW,gBAAgBV,KAAK+mC,EAAK5mC,KAAMonC,GAAG3mC,kBACjF++E,EAAIC,QAAQ5/E,KAAKkkE,GAAWlkE,KAAK89E,IACjC99E,KAAKi9E,GAAcngF,YAAY6iF,EAAIr3C,WACnCtoC,KAAKu9E,GAAMh2C,GAAGD,GAAKq4C,EAEpB,IAAK,IAAIr4C,EAAYtnC,KAAK+mC,EAAK5mC,KAAKwb,SAAU2rB,EAAItnC,KAAK2kE,GAAmBr9B,IACzEtnC,KAAKi9E,GAAclwE,YAAY/M,KAAKu9E,GAAMh2C,GAAGD,GAAGgB,WAEjDtoC,KAAKu9E,GAAMh2C,GAAGh5C,OAASyR,KAAK+mC,EAAK5mC,KAAKwb,SAOvC,IAAIs3D,EAAa,GAEjB,IAAK,IAAI3rC,EAAY,EAAGA,EAAItnC,KAAK+mC,EAAK5mC,KAAKwb,SAAU2rB,IAAK,CACzD,IAAIu4C,EAAWv4C,EAAItnC,KAAKkkE,GAAY,EAKpC+O,GAAc,KAAK4M,SAHHv4C,EAAItnC,KAAKkkE,GAAYlkE,KAAKkkE,GAAY,OACrCh2E,EAAOkL,gBAAkB,OAEiCymF,WAK5E,GAFA7/E,KAAKq9E,GAAex/E,aAAa,IAAKo1E,GAElCjzE,KAAK2kE,GAAoB3kE,KAAK+mC,EAAK5mC,KAAKwb,SAAU,CACrD3b,KAAKw9E,GAAYjvF,OAASyR,KAAK+mC,EAAK5mC,KAAKwb,SACzC,IAAK,IAAImkE,EAAM9/E,KAAK2kE,GAAmBmb,EAAM9/E,KAAKw9E,GAAYjvF,OAAQuxF,IACrE9/E,KAAKw9E,GAAYsC,GAAO/gF,EAAIs3C,KAAK,CAAEimC,cAAe,aAAcxc,YAAa,MAAO8K,cAAe,SAAU2R,cAAe,OAAQj1C,EAAMw4C,EAAM9/E,KAAKkkE,GAAYlkE,KAAKkkE,GAAY,EAAK,KAAM38B,EAAK,MAAOF,KAAMtnC,EAAYyH,eAAiB,IAAMs4E,EAAM,IACpPA,EAAM,GAAK,GAEd9/E,KAAKw9E,GAAYsC,GAAKjiF,aAAa,OAAQkC,EAAYwH,aAExDvH,KAAKm9E,GAAoBrgF,YAAYkD,KAAKw9E,GAAYsC,SAGnD,GAAI9/E,KAAK2kE,GAAoB3kE,KAAK+mC,EAAK5mC,KAAKwb,SAAU,CAC1D,IAASmkE,EAAM9/E,KAAK2kE,GAAoB,EAAGmb,GAAO9/E,KAAK+mC,EAAK5mC,KAAKwb,SAAUmkE,IAC1E9/E,KAAKm9E,GAAoBpwE,YAAY/M,KAAKw9E,GAAYsC,IAEvD9/E,KAAKw9E,GAAYjvF,OAASyR,KAAK+mC,EAAK5mC,KAAKwb,SAI1C,GAAI3b,KAAK4kE,IAAqB5kE,KAAKkkE,GAClC,IAAS4b,EAAM,EAAGA,EAAM9/E,KAAKw9E,GAAYjvF,OAAQuxF,IAChD9/E,KAAKw9E,GAAYsC,GAAKjiF,aAAa,IAAMiiF,EAAM9/E,KAAKkkE,GAAYlkE,KAAKkkE,GAAY,EAAK,MAKxFlkE,KAAK2kE,GAAoB3kE,KAAK+mC,EAAK5mC,KAAKwb,SACxC,MAAMiqD,EAAc5lE,KAAKkkE,GAAYlkE,KAAK+mC,EAAK5mC,KAAKwb,SACpD3b,KAAKsoC,UAAUhqC,MAAMkpC,MAAQo+B,EAAc,KAC3C5lE,KAAKqoC,EAAKxqC,aAAa,QAAS+nE,EAAc,IAC9C5lE,KAAK69E,IAAgB,EAGtB,GAAI79E,KAAK0mE,IAA0B1mE,KAAK89E,IAAkB99E,KAAK4kE,IAAqB5kE,KAAKkkE,GAAW,CACnGlkE,KAAK4kE,GAAoB5kE,KAAKkkE,GAC9B,IAAK,IAAI38B,EAAY,EAAGA,EAAIvnC,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBsrB,IAC7D,IAAK,IAAID,EAAY,EAAGA,EAAItnC,KAAK2kE,GAAmBr9B,IACnDtnC,KAAKu9E,GAAMh2C,GAAGD,GAAGs4C,QAAQ5/E,KAAKkkE,GAAWlkE,KAAK89E,IAGhD99E,KAAK69E,IAAgB,EAGtB,GAAI79E,KAAK0mE,IAA0B1mE,KAAK89E,IAAkB99E,KAAKsmE,IAAyBtmE,KAAK+mC,EAAK5mC,KAAK8b,kBAAmB,CACzHjc,KAAK0mE,GAAyB1mE,KAAK89E,GACnC99E,KAAKsmE,GAAwBtmE,KAAK+mC,EAAK5mC,KAAK8b,kBAC5C,MAAM8jE,EAAuB7xF,EAAOkL,gBAAkB4G,KAAK+mC,EAAK5mC,KAAK8b,kBAAoBjc,KAAK89E,GAC9F99E,KAAKqoC,EAAKxqC,aAAa,SAAU,GAAKkiF,GACtC//E,KAAKmnC,EAAUtpC,aAAa,SAAU,GAAKkiF,GAC3C//E,KAAKsoC,UAAUhqC,MAAMmpC,OAASs4C,EAAe,KAG9C,IAAK,IAAItzE,EAAY,EAAGA,EAAIzM,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBxP,IAC7D,IAAK,IAAIne,EAAY,EAAGA,EAAI0R,KAAK2kE,GAAmBr2E,IAAK,CACxD,MAAM4tB,EAA0Blc,KAAK+mC,EAAK5mC,KAAK6lB,WAAWvZ,EAAGne,GACvDwuF,EAAqBxuF,GAAK0R,KAAK+mC,EAAK5qB,KAAO1P,GAAKzM,KAAK+mC,EAAK3mC,QAC1Dy8E,EAA2B,MAAX3gE,GAA2C,GAAxBA,EAAQ3L,MAAMhiB,OAEjDoxF,EAAW3/E,KAAKu9E,GAAM9wE,GAAGne,GAC/B,GAAIA,EAAI0R,KAAK+mC,EAAK5mC,KAAKwb,SAAU,CAChC,MAAMqkE,EAAwBjgF,EAAYW,gBAAgBV,KAAK+mC,EAAK5mC,KAAMsM,GAC1EkzE,EAAIM,SAASjgF,KAAK+mC,EAAK5mC,KAAK+X,SAASzL,GAAGqL,KAAKxpB,GAAIuuF,EAAKC,EAAUD,IAAQC,EAAWkD,EAAOp/E,iBAAmBo/E,EAAOj/E,eAAgB0L,GAAKzM,KAAK+mC,EAAK5mC,KAAKe,mBAAqBuL,EAAIzM,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmBqL,GAAKzM,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,mBAC7Su+E,EAAIr3C,UAAUhqC,MAAM0sC,WAAa,eAEjC20C,EAAIr3C,UAAUhqC,MAAM0sC,WAAa,SAMpChrC,KAAKs9E,GAAQh/E,MAAM01D,QAAUh0D,KAAKg+E,GAAa,GAAK,OAEhDh+E,KAAK+mC,EAAK0T,UAAUylC,kBAAoB,GAAKlgF,KAAK+mC,EAAK0T,UAAU0lC,mBAAqB,GAIzFngF,KAAKuqE,GAAe1sE,aAAa,IAAKugB,OAAOpe,KAAKkkE,GAAYlkE,KAAK+mC,EAAK0T,UAAU2lC,gBAAkB,IACpGpgF,KAAKuqE,GAAe1sE,aAAa,IAAKugB,OAAOlwB,EAAOkL,gBAAkB4G,KAAK89E,GAAiB99E,KAAK+mC,EAAK0T,UAAU4lC,oBAAsB,IACtIrgF,KAAKuqE,GAAe1sE,aAAa,QAASugB,OAAOpe,KAAKkkE,GAAYlkE,KAAK+mC,EAAK0T,UAAUylC,kBAAoB,IAC1GlgF,KAAKuqE,GAAe1sE,aAAa,SAAUugB,OAAOpe,KAAK89E,GAAiB99E,KAAK+mC,EAAK0T,UAAU0lC,mBAAqB,IACjHngF,KAAKuqE,GAAe1sE,aAAa,aAAc,YAE/CmC,KAAKuqE,GAAe1sE,aAAa,aAAc,UAGhDmC,KAAKspC,MCrkBP,MAAMiW,OAAEA,GAAM71C,IAAEA,GAAGg2C,MAAEA,GAAKE,OAAEA,GAAMJ,KAAEA,GAAI8gC,SAAEA,GAAQzgC,OAAEA,GAAM0gC,OAAEA,IAAW7hF,EAEvE,SAAS8hF,GAAaC,EAAyBC,GAC9C,IAAK,IAAIvxF,EAAgB,EAAGA,EAAQuxF,EAAMnyF,OAAQY,IACjDsxF,EAAK3jF,YAAY+iD,GAAO,CAAEhuD,MAAO1C,GAASuxF,EAAMvxF,KAEjD,OAAOsxF,EAeR,SAASE,GAAmBtlF,EAAkBulF,GAC7C,MAAMH,EAA0B7gC,GAAO,CAAEshB,GAAI0f,IAIzCvlF,GACHolF,EAAK3jF,YAAY+iD,GAAO,CAAEhuD,MAAK,GAA0B+H,EAAa21C,cAAa,GAAwBz9C,OAC3G2uF,EAAK3jF,YAAY+iD,GAAO,CAAEhuD,MAAK,GAA6B+H,EAAa21C,cAAa,GAA2Bz9C,OACjH2uF,EAAK3jF,YAAY+iD,GAAO,CAAEhuD,MAAK,GAA4B+H,EAAa21C,cAAa,GAA0Bz9C,SAE/G2uF,EAAK3jF,YAAY+iD,GAAO,CAAEhuD,MAAK,GAAyB+H,EAAa21C,cAAa,GAAuBz9C,OACzG2uF,EAAK3jF,YAAY+iD,GAAO,CAAEhuD,MAAK,GAAwB+H,EAAa21C,cAAa,GAAsBz9C,OACvG2uF,EAAK3jF,YAAY+iD,GAAO,CAAEhuD,MAAK,GAA8B+H,EAAa21C,cAAa,GAA4Bz9C,OACnH2uF,EAAK3jF,YAAY+iD,GAAO,CAAEhuD,MAAK,GAA6B+H,EAAa21C,cAAa,GAA2Bz9C,OACjH2uF,EAAK3jF,YAAY+iD,GAAO,CAAEhuD,MAAK,GAAuB+H,EAAa21C,cAAa,GAAqBz9C,OACrG2uF,EAAK3jF,YAAY+iD,GAAO,CAAEhuD,MAAK,GAAmC+H,EAAa21C,cAAa,GAAiCz9C,QAG9H,MAAM+uF,EAA2BP,GAAS,CAAEzS,MAAO,gBACnDgT,EAAY/jF,YAAY+iD,GAAO,CAAEhuD,MAAO,gBAAkB,kBAC1DgvF,EAAY/jF,YAAY+iD,GAAO,CAAEhuD,MAAO,mBAAqB,qBAC7D4uF,EAAK3jF,YAAY+jF,GAGjB,IAAK,IAAI9mF,EAAwB,EAAGA,EAAgBH,EAAaK,iBAAiB1L,OAAQwL,IAAiB,CAC1G,MAAMK,EAA2BR,EAAaK,iBAAiBF,GACzDknD,EAAqBq/B,GAAS,CAAEzS,MAAOzzE,EAAStI,KAAO,OAC7D,IAAIgvF,GAAoB,EACxB,IAAK,IAAI9mF,EAAsB,EAAGA,EAAcI,EAASF,QAAQ3L,OAAQyL,IAAe,CACvF,MAAMK,EAAiBD,EAASF,QAAQF,GACjB,GAAlBK,EAAOgB,SAAoBA,IAC/B4lD,EAAMnkD,YAAY+iD,GAAO,CAAEhuD,OAAQkI,GAAiB,GAAKC,GAAeK,EAAOvI,OAC/EgvF,GAAW,GAKb,GAAqB,kBAAjB1mF,EAAStI,MAA4BgvF,EAAU,CAGlD,IAAIC,EAAc9/B,EAAMl0C,YAAYk0C,EAAMgD,SAAS,KACnDhD,EAAM+/B,aAAaD,EAAa9/B,EAAMgD,SAAS,IAGhD,GAAqB,iBAAjB7pD,EAAStI,MAA2BgvF,EAAU,CAGjD,IAAIG,EAAahgC,EAAMl0C,YAAYk0C,EAAMgD,SAAS,KAClDhD,EAAM+/B,aAAaC,EAAYhgC,EAAMgD,SAAS,IAG/C,GAAqB,oBAAjB7pD,EAAStI,MAA8BgvF,EAAU,CAGpD,IAAII,EAAkBjgC,EAAMl0C,YAAYk0C,EAAMgD,SAAS,IACvDhD,EAAM+/B,aAAaE,EAAiBjgC,EAAMgD,SAAS,IAGhD68B,GAAUL,EAAK3jF,YAAYmkD,GAGhC,OAAOw/B,EAGR,SAASU,GAAiBV,EAAyB5uF,GAClD,MAAMuvF,EAAcvvF,EAAM6mF,WACtB+H,EAAK5uF,OAASuvF,IAAaX,EAAK5uF,MAAQuvF,GAGxCC,EAAEZ,GAAMl9C,KAAK,YAChB89C,EAAEZ,GAAMtxE,IAAItd,GAAOyvF,QAAQ,kBAI7B,MAAMC,GASL1nF,YAA4B0mF,EAA4Cx5C,EAAqCmtB,GAAjFl0D,KAAAugF,OAAAA,EAA4CvgF,KAAA+mC,EAAAA,EAAqC/mC,KAAAk0D,GAAAA,EAFrGl0D,KAAAozD,GAAyB,KAiDzBpzD,KAAA2nE,GAAgB1+B,IACvB,GAAIjpC,KAAKwhF,UAAW,CAEnB,IAAIl6C,GAAK2B,EAAMW,SAAWX,EAAMY,OAAS7pC,KAAKugF,OAAO52C,wBAAwBG,KACzEvC,EAAIx4C,KAAKmU,OAAO+lC,EAAMma,SAAWna,EAAMoa,OAASrjD,KAAKugF,OAAO52C,wBAAwB2Z,KAEpF/b,EAAI,IAAGA,EAAI,GACXA,EAAI,KAAIA,EAAI,IAEhB,IAAIk6C,EAAMzhF,KAAKugF,OAAOmB,WAAW,MAEjC,GAA2B,GAAvB1hF,KAAK2hF,gBAA0B5yF,KAAKC,IAAIgR,KAAK4hF,MAAQt6C,GAAK,GAAI,CAEjE,IAAIu6C,EAAcv6C,EAAItnC,KAAK4hF,MAASt6C,EAAItnC,KAAK4hF,MACzCE,EAAcx6C,EAAItnC,KAAK4hF,MAAS5hF,KAAK4hF,MAAQt6C,EAEjD,IAAK,IAAIh5C,EAAIuzF,EAAYvzF,GAAKwzF,EAAYxzF,GAAK,EAAG,CAEjD,IAAIyzF,EAAYhzF,KAAKC,IAAIs4C,EAAItnC,KAAK4hF,OAAS,EAASt6C,EAAItnC,KAAK4hF,MAC5D,GAAQtzF,EAAIuzF,IAAeC,EAAaD,IACpCvzF,EAAIuzF,IAAeC,EAAaD,GAAgB,EACjDp1E,EAAI1d,KAAKgb,MAAMw9B,GAAKvnC,KAAKgiF,MAAQz6C,GAAKw6C,GAE1CN,EAAIQ,UAAYliF,EAAYc,YAAY,uBACxC4gF,EAAIS,SAA6B,EAApBnzF,KAAKmU,MAAM5U,EAAI,GAAQ,EAAG,EAAG,IAC1CmzF,EAAIQ,UAAYliF,EAAYc,YAAY,0BACxC4gF,EAAIS,SAA6B,EAApBnzF,KAAKmU,MAAM5U,EAAI,GAAQ,GAAI,EAAG,GAC3CmzF,EAAIQ,UAAYliF,EAAYc,YAAY,+BACxC4gF,EAAIS,SAA6B,EAApBnzF,KAAKmU,MAAM5U,EAAI,GAAQ,GAAI,EAAG,GAC3CmzF,EAAIS,SAA6B,EAApBnzF,KAAKmU,MAAM5U,EAAI,GAAQ,GAAI,EAAG,GAC3CmzF,EAAIQ,UAAYliF,EAAYoiF,wBAAwBniF,KAAK+mC,EAAK5mC,KAAMH,KAAK+mC,EAAK3mC,SAASa,YACvFwgF,EAAIS,SAA6B,EAApBnzF,KAAKmU,MAAM5U,EAAI,GAAQme,EAAI,EAAG,EAAG,GAG9CzM,KAAKivC,SAASlgD,KAAKmU,MAAM5U,EAAI,IAAOme,EAAI,SAMzCg1E,EAAIQ,UAAYliF,EAAYc,YAAY,uBACxC4gF,EAAIS,SAA6B,EAApBnzF,KAAKmU,MAAMokC,EAAI,GAAQ,EAAG,EAAG,IAC1Cm6C,EAAIQ,UAAYliF,EAAYc,YAAY,0BACxC4gF,EAAIS,SAA6B,EAApBnzF,KAAKmU,MAAMokC,EAAI,GAAQ,GAAI,EAAG,GAC3Cm6C,EAAIQ,UAAYliF,EAAYc,YAAY,+BACxC4gF,EAAIS,SAA6B,EAApBnzF,KAAKmU,MAAMokC,EAAI,GAAQ,GAAI,EAAG,GAC3Cm6C,EAAIS,SAA6B,EAApBnzF,KAAKmU,MAAMokC,EAAI,GAAQ,GAAI,EAAG,GAC3Cm6C,EAAIQ,UAAYliF,EAAYoiF,wBAAwBniF,KAAK+mC,EAAK5mC,KAAMH,KAAK+mC,EAAK3mC,SAASa,YACvFwgF,EAAIS,SAA6B,EAApBnzF,KAAKmU,MAAMokC,EAAI,GAAQC,EAAI,EAAG,EAAG,GAG9CvnC,KAAKivC,SAASlgD,KAAKmU,MAAMokC,EAAI,IAAOC,EAAI,GAIzCvnC,KAAK2hF,gBAAiB,EACtB3hF,KAAK4hF,MAAQt6C,EACbtnC,KAAKgiF,MAAQz6C,EAGb,IAAI/2B,EAAyBxQ,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAE1F9gD,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI0R,KAAKivC,SAAS1gD,OAAQD,IACjDD,GAAO2R,KAAKivC,SAAS3gD,GAEtB,MAAME,EAAkBH,EAAM2R,KAAKivC,SAAS1gD,OAG5C,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAI0R,KAAKivC,SAAS1gD,OAAQD,IACjDG,GAAcC,EACdA,EAAWsR,KAAKivC,SAAS3gD,GAAKE,EAC9BgiB,EAAW8C,uBAAuBhlB,GAAKG,EAGxC+hB,EAAW8C,uBAAuB,IAAM,IAKlCtT,KAAAoiF,GAAgBn5C,IACvBjpC,KAAKwhF,WAAY,EAGjBxhF,KAAK2nE,GAAa1+B,IAEXjpC,KAAAqiF,GAAa,KACpBriF,KAAKwhF,WAAY,EACjBxhF,KAAK2hF,gBAAiB,EAEtB3hF,KAAKu0D,MAGEv0D,KAAAu0D,GAAc,KACrBv0D,KAAKozD,GAAUpzD,KAAKk0D,GAAWl0D,KAAKivC,UAEpCjvC,KAAK+mC,EAAKqa,OAAOphD,KAAKozD,IAEtBpzD,KAAKozD,GAAU,MAhJfmtB,EAAO71C,iBAAiB,YAAa1qC,KAAK2nE,IAC1C4Y,EAAO71C,iBAAiB,YAAa1qC,KAAKoiF,IAC1C7B,EAAO71C,iBAAiB,UAAW1qC,KAAKqiF,IACxC9B,EAAO71C,iBAAiB,aAAc1qC,KAAKqiF,IAE3CriF,KAAKwhF,WAAY,EACjBxhF,KAAK2hF,gBAAiB,EACtB3hF,KAAK4hF,MAAQ,EACb5hF,KAAKgiF,MAAQ,EAEbhiF,KAAKivC,SAAW,IAAIrgD,aAAa,IAGjCoR,KAAKsiF,eAICzoF,eACN,IAAI4nF,EAAMzhF,KAAKugF,OAAOmB,WAAW,MAGjCD,EAAIQ,UAAYliF,EAAYc,YAAY,uBACxC4gF,EAAIS,SAAS,EAAG,EAAG,IAAK,IAGxBT,EAAIQ,UAAYliF,EAAYc,YAAY,0BACxC4gF,EAAIS,SAAS,EAAG,GAAI,IAAK,GAGzBT,EAAIQ,UAAYliF,EAAYc,YAAY,+BACxC4gF,EAAIS,SAAS,EAAG,GAAI,IAAK,GACzBT,EAAIS,SAAS,EAAG,GAAI,IAAK,GAGzBT,EAAIQ,UAAYliF,EAAYoiF,wBAAwBniF,KAAK+mC,EAAK5mC,KAAMH,KAAK+mC,EAAK3mC,SAASa,YAEvF,IAAK,IAAIqmC,EAAY,EAAGA,EAAI,GAAIA,IAAK,CACpC,IAAIC,EAAYvnC,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAAwBtzC,eAAeyrC,GAAK,GAC7Hm6C,EAAIS,SAAa,EAAJ56C,EAAOC,EAAI,EAAG,EAAG,GAE9BvnC,KAAKivC,SAAS3H,GAAKC,EAAI,WA6Gbg7C,GA6ZZ1oF,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EA5Zb/mC,KAAAmhD,OAAwB,KAEdnhD,KAAAwiF,GAAoC,IAAI7Y,GAAc3pE,KAAK+mC,GAAM,GAAQ,GACzE/mC,KAAAyiF,GAAgC,IAAI9Y,GAAc3pE,KAAK+mC,GAAM,EAAM,GACnE/mC,KAAA0iF,GAAoC,IAAI/Y,GAAc3pE,KAAK+mC,GAAM,EAAO,GACxE/mC,KAAA2iF,GAA4B,IAAI5F,GAAY/8E,KAAK+mC,EAAM/mC,MACvDA,KAAA4iF,GAA0B,IAAI9c,GAAW9lE,KAAK+mC,EAAM/mC,MACpDA,KAAA6iF,GAA0B,IAAIjf,GAAW5jE,KAAK+mC,GAC9C/mC,KAAAsoE,GAAgB,IAAIkM,GAAMx0E,KAAK+mC,GAC/B/mC,KAAA8iF,GAAoC,IAAIza,GAAgBroE,KAAK+mC,EAAM/mC,KAAKsoE,IACxEtoE,KAAAqkD,GAAiC9E,GAAO,CAAEjhD,MAAO,eAAgBrJ,KAAM,WACvE+K,KAAA+iF,GAAoCxjC,GAAO,CAAEhX,MAAO,gBAAiBjqC,MAAO,eAAgBrJ,KAAM,SAAU8mB,MAAO,gCACnH/b,KAAAgjF,GAAoCzjC,GAAO,CAAEhX,MAAO,gBAAiBjqC,MAAO,eAAgBrJ,KAAM,SAAU8mB,MAAO,6BACnH/b,KAAAijF,GAAwB,IAAIzuB,GAAO9U,GAAM,CAAE3jC,MAAO,cAAezd,MAAO,uCAAwCrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAK,KAAMrd,MAAO,KAAMmuD,KAAM,MAAQhgD,KAAK+mC,EAAM,MAAM,GAChM/mC,KAAAkjF,GAAkCnkF,EAAIqoC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,MAAOC,OAAQ,MAAOH,EAAG,KAAMC,EAAG,MAAOF,KAAMtnC,EAAY+H,qBACzI9H,KAAA0gE,GAAgC3hE,EAAIqoC,KAAK,CAAEQ,iBAAkB,OAAQH,OAAQ,MAAOD,MAAO,KAAMF,EAAG,KAAMC,EAAG,MAAOF,KAAM,wBAC1HrnC,KAAA2gE,GAAgC5hE,EAAIqoC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,MAAOC,OAAQ,MAAOH,EAAG,KAAMC,EAAG,MAAOF,KAAMtnC,EAAYgI,gBACvI/H,KAAA4gE,GAAyB7hE,EAAIk5C,KAAK,CAAE4oB,aAAc,OAAQprE,OAAQ,QAClEuK,KAAA8gE,GAAyB/hE,EAAIk5C,KAAK,CAAE4oB,aAAc,SAAUprE,OAAQ,QACpEuK,KAAA+gE,GAAyBhiE,EAAIk5C,KAAK,CAAE4oB,aAAc,MAAOprE,OAAQ,SACjEuK,KAAAghE,GAAgCjiE,EAAIkiE,eAAe,CAAEC,GAAI,cAAeC,cAAe,kBAAoBnhE,KAAK4gE,GAAQ5gE,KAAK8gE,GAAQ9gE,KAAK+gE,IAC1I/gE,KAAAohE,GAAwBriE,EAAIsiE,KAAK,GAAIrhE,KAAKghE,IAC1ChhE,KAAAmjF,GAAqCpkF,EAAI4oC,IAAI,CAAErpC,MAAO,wEAAyEkpC,MAAO,QAASC,OAAQ,OAAQqb,oBAAqB,OAAQD,QAAS,cACrN7iD,KAAKohE,GACLphE,KAAKkjF,GACLljF,KAAK0gE,GACL1gE,KAAK2gE,IAEW3gE,KAAAojF,GAAgC15E,GAAI,CAAE6+B,MAAO,sBAAuBjqC,MAAO,qCAC3F0B,KAAKmjF,IAEWnjF,KAAAqjF,GAA+BzjC,GAAO,CAAEthD,MAAO,gBAC/DuhD,GAAO,CAAEi9B,UAAU,EAAM7xB,UAAU,EAAMq4B,QAAQ,GAAS,QAC1DzjC,GAAO,CAAEhuD,MAAO,OAAS,oBACzBguD,GAAO,CAAEhuD,MAAO,UAAY,oBAC5BguD,GAAO,CAAEhuD,MAAO,UAAY,oBAC5BguD,GAAO,CAAEhuD,MAAO,WAAa,mBAC7BguD,GAAO,CAAEhuD,MAAO,YAAc,oBAC9BguD,GAAO,CAAEhuD,MAAO,cAAgB,sBAChCguD,GAAO,CAAEhuD,MAAO,cAAgB,yBAChCguD,GAAO,CAAEhuD,MAAO,aAAe,0BAC/BguD,GAAO,CAAEhuD,MAAO,gBAAkB,6BAElBmO,KAAAujF,GAA+B3jC,GAAO,CAAEthD,MAAO,gBAC/DuhD,GAAO,CAAEi9B,UAAU,EAAM7xB,UAAU,EAAMq4B,QAAQ,GAAS,QAC1DzjC,GAAO,CAAEhuD,MAAO,QAAU,YAC1BguD,GAAO,CAAEhuD,MAAO,QAAU,YAC1BguD,GAAO,CAAEhuD,MAAO,QAAU,oBAC1BguD,GAAO,CAAEhuD,MAAO,cAAgB,2BAChCguD,GAAO,CAAEhuD,MAAO,gBAAkB,8BAClCguD,GAAO,CAAEhuD,MAAO,cAAgB,kCAChCguD,GAAO,CAAEhuD,MAAO,cAAgB,2BAChCguD,GAAO,CAAEhuD,MAAO,aAAe,kBAC/BguD,GAAO,CAAEhuD,MAAO,iBAAmB,uBACnCguD,GAAO,CAAEhuD,MAAO,qBAAuB,iCACvCguD,GAAO,CAAEhuD,MAAO,eAAiB,qBACjCguD,GAAO,CAAEhuD,MAAO,iBAAmB,uBACnCguD,GAAO,CAAEhuD,MAAO,qBAAuB,kCACvCguD,GAAO,CAAEhuD,MAAO,gBAAkB,wBAGlCguD,GAAO,CAAEhuD,MAAO,mBAAqB,2BACrCguD,GAAO,CAAEhuD,MAAO,mBAAqB,6BAErBmO,KAAAwjF,GAAkC5jC,GAAO,CAAEthD,MAAO,gBAClEuhD,GAAO,CAAEi9B,UAAU,EAAM7xB,UAAU,EAAMq4B,QAAQ,GAAS,eAC1DzjC,GAAO,CAAEhuD,MAAO,YAAc,qBAC9BguD,GAAO,CAAEhuD,MAAO,cAAgB,qBAChCguD,GAAO,CAAEhuD,MAAO,qBAAuB,uBACvCguD,GAAO,CAAEhuD,MAAO,eAAiB,mBACjCguD,GAAO,CAAEhuD,MAAO,aAAe,2BAC/BguD,GAAO,CAAEhuD,MAAO,gBAAkB,qBAClCguD,GAAO,CAAEhuD,MAAO,iBAAmB,qBACnCguD,GAAO,CAAEhuD,MAAO,qBAAuB,yBACvCguD,GAAO,CAAEhuD,MAAO,uBAAyB,yBACzCguD,GAAO,CAAEhuD,MAAO,qBAAuB,4BACvCguD,GAAO,CAAEhuD,MAAO,oBAAsB,wBACtCguD,GAAO,CAAEhuD,MAAO,cAAgB,iBAChCguD,GAAO,CAAEhuD,MAAO,cAAgB,iBAGhBmO,KAAAyjF,GAAkCjD,GAAa5gC,KAAU1xD,EAAOmE,OAAOqxF,KAAItoE,GAASA,EAAMtpB,QAC1FkO,KAAA2jF,GAAgCnD,GAAa5gC,KAAU1xD,EAAOsE,KAAKkxF,KAAI9lF,GAAOA,EAAI9L,OAAM8xF,WACxF5jF,KAAA6jF,GAAuB,IAAIrvB,GAAO9U,GAAM,CAAEphD,MAAO,qCAAsCrJ,KAAM,QAASzE,IAAK,KAAM0e,IAAK,MAAOrd,MAAO,MAAOmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIoK,GAAY15C,KAAK+mC,EAAM6L,EAAUtD,KAAW,GAC5PtvC,KAAA8jF,GAAkCpkC,GAAM,CAAEphD,MAAO,0EAA2ErJ,KAAM,SAAU+qD,KAAM,MAClJhgD,KAAA+jF,GAAwB,IAAIvvB,GAAO9U,GAAM,CAAEphD,MAAO,aAAcrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAKhhB,EAAO4E,YAAc,EAAGjB,MAAO,IAAKmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIgM,GAAat7C,KAAK+mC,EAAM6L,EAAUtD,KAAW,GACpPtvC,KAAAgkF,GAAmCxD,GAAa5gC,KAAU1xD,EAAOwF,QAAQgwF,KAAI7nE,GAAUA,EAAO/pB,QAC9FkO,KAAAikF,GAA0CtD,IAAmB,EAAO,qBACpE3gF,KAAAkkF,GAAuCvD,IAAmB,EAAM,oBAChE3gF,KAAAmkF,GAAsC3D,GAAa5gC,KAAU1xD,EAAO0I,WAAW8sF,KAAIpoF,GAAaA,EAAUxJ,QAC1GkO,KAAAokF,GAAsC16E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,cAAgB,eAAgB56E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAKmkF,KAC9LnkF,KAAAukF,GAAuC3kC,KACvC5/C,KAAAwkF,GAAuC96E,GAAI,CAAE6+B,MAAO,YAAajqC,MAAO,kBAAoBkhD,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,oBAAsB,gBAAiB56E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAKukF,KAC/NvkF,KAAAykF,GAAkC,IAAIjwB,GAAO9U,GAAM,CAAEphD,MAAO,+BAAgCrJ,KAAM,QAASzE,IAAKzB,KAAKmU,OAAOhV,EAAO0H,YAAc,GAAIsZ,IAAKngB,KAAKmU,MAAMhV,EAAO0H,YAAc,GAAI/D,MAAO,IAAKmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIiP,GAAav+C,KAAK+mC,EAAM6L,EAAUtD,KAAW,GAC5TtvC,KAAA0kF,GAAoDhlC,GAAM,CAAEphD,MAAO,6BAA8B4iE,GAAI,uBAAwBjsE,KAAM,SAAU+qD,KAAM,IAAKxvD,IAAKzB,KAAKmU,OAAOhV,EAAO0H,YAAc,GAAIsZ,IAAKngB,KAAKmU,MAAMhV,EAAO0H,YAAc,GAAI/D,MAAO,MAClPmO,KAAA2kF,GAA6Cj7E,GAAI,CAAE6+B,MAAO,YAAajqC,MAAO,eAAiBkhD,GAAK,CAAEjX,MAAO,MAAOjqC,MAAO,sBAAuB+lF,QAAS,IAAMrkF,KAAKskF,GAAY,qBAAuB,aACzMtkF,KAAA4kF,GAA6Cl7E,GAAI,CAAE6+B,MAAO,aAAe7+B,GAAI,GAC7FA,GAAI,CAAEpL,MAAO,UAAYyB,EAAYyH,cAAgB,KAAOg4C,GAAK,CAAEjX,MAAO,OAASvoC,KAAK2kF,KACxFj7E,GAAI,CAAEpL,MAAO,UAAYyB,EAAYyH,cAAgB,uBAAyBxH,KAAK0kF,KACjF1kF,KAAKykF,GAAwBn8C,WACftoC,KAAA6kF,GAAqB,IAAIrwB,GAAO9U,GAAM,CAAEphD,MAAO,aAAcwmF,SAAU,UAAW7vF,KAAM,QAASzE,IAAK,IAAK0e,IAAKhhB,EAAO6H,OAAQlE,MAAO3D,EAAO4H,UAAWkqD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIsP,GAAU5+C,KAAK+mC,EAAM6L,EAAUtD,KAAW,GACvQtvC,KAAA+kF,GAAkCxlC,GAAO,CAAEjhD,MAAO,4EAA6E+lF,QAAS,IAAMrkF,KAAKglF,GAAoB,IAAM,KAC7KhlF,KAAAilF,GAAuCvlC,GAAM,CAAEphD,MAAO,+BAAgC4iE,GAAI,oBAAqBjsE,KAAM,SAAU+qD,KAAM,IAAKxvD,IAAK,IAAK0e,IAAK,MAAOrd,MAAO,MACvKmO,KAAAklF,GAAgCx7E,GAAI,CAAE6+B,MAAO,aAAe7+B,GAAI,GAChF81C,GAAK,CAAEjX,MAAO,MAAO48C,SAAU,IAAK7mF,MAAO,kCAAmC+lF,QAAS,IAAMrkF,KAAKskF,GAAY,QAAU,SACxH56E,GAAI,CAAEpL,MAAO,UAAYyB,EAAYyH,cAAgB,uBAAyBxH,KAAKilF,KACjFjlF,KAAK+kF,GAAc/kF,KAAK6kF,GAAWv8C,WACrBtoC,KAAAolF,GAA0B,IAAI5wB,GAAO9U,GAAM,CAAEphD,MAAO,aAAcrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAKlP,KAAK+mC,EAAK5mC,KAAKyY,WAAWpX,IAAIwS,EAAWiG,aAAcpoB,MAAO,IAAKmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIuP,GAAe7+C,KAAK+mC,EAAM6L,EAAUtD,KAAW,GACvRtvC,KAAAqlF,GAA4B37E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOjqC,MAAO,oBAAqB+lF,QAAS,IAAMrkF,KAAKskF,GAAY,aAAe,UAAWtkF,KAAKolF,GAAgB98C,WACxLtoC,KAAAslF,GAAiC57E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAKqlF,IACxErlF,KAAAulF,GAAwB,IAAI/wB,GAAO9U,GAAM,CAAEphD,MAAO,aAAcrJ,KAAM,QAASzE,IAAKtC,EAAO8H,UAAWkZ,IAAKhhB,EAAO+H,UAAWpE,MAAO,EAAGmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIwP,GAAa9+C,KAAK+mC,EAAM6L,EAAUtD,KAAW,GACzPtvC,KAAAwlF,GAA0C9lC,GAAM,CAAEphD,MAAO,+BAAgC4iE,GAAI,uBAAwBjsE,KAAM,SAAU+qD,KAAM,IAAKxvD,IAAK,GAAKtC,EAAO8H,UAAWkZ,IAAK,GAAKhhB,EAAO+H,UAAWpE,MAAO,MAC/MmO,KAAAylF,GAAmC/7E,GAAI,CAAE6+B,MAAO,aAAe7+B,GAAI,GACnF81C,GAAK,CAAEjX,MAAO,MAAOjqC,MAAO,kCAAmC+lF,QAAS,IAAMrkF,KAAKskF,GAAY,WAAa,YAC5G56E,GAAI,CAAEpL,MAAO,UAAYyB,EAAYyH,cAAgB,uBAAyBxH,KAAKwlF,KACjFxlF,KAAKulF,GAAcj9C,WACLtoC,KAAA0lF,GAAqClF,GAAa5gC,KAAU1xD,EAAO6F,UAAU2vF,KAAIt1F,GAAQA,EAAK0D,QAC9FkO,KAAA2lF,GAAsCnF,GAAa5gC,KAAU1xD,EAAOoB,WAAWo0F,KAAIt1F,GAAQA,EAAK0D,QAChGkO,KAAA4lF,GAAqCl8E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,aAAe,UAAW56E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAK0lF,KACvL1lF,KAAA6lF,GAAsCn8E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,cAAgB,WAAY56E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAK2lF,KAC1L3lF,KAAA8lF,GAAuCtF,GAAa5gC,KAAU1xD,EAAOuG,YAAYivF,KAAI7oF,GAAcA,EAAW/I,QAC9GkO,KAAA+lF,GAAyCxmC,GAAO,CAAEjhD,MAAO,4EAA6E+lF,QAAS,IAAMrkF,KAAKglF,GAAoB,IAAM,KACpLhlF,KAAAgmF,GAAiCt8E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,eAAiB,eAAgBtkF,KAAK+lF,GAAqBr8E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAK8lF,KACpN9lF,KAAAimF,GAA0CvmC,GAAM,CAAEzqD,KAAM,WAAYqJ,MAAO,+CAC3E0B,KAAAkmF,GAAqCx8E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOjqC,MAAO,oBAAqB+lF,QAAS,IAAMrkF,KAAKskF,GAAY,kBAAoB,kBAAmBtkF,KAAKimF,IAC9LjmF,KAAAmmF,GAA4CzmC,GAAM,CAAEzqD,KAAM,WAAYqJ,MAAO,+CAC7E0B,KAAAomF,GAAuC18E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOjqC,MAAO,oBAAqB+lF,QAAS,IAAMrkF,KAAKskF,GAAY,wBAA0B,cAAetkF,KAAKmmF,IAClMnmF,KAAAqmF,GAAwC38E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAKkmF,GAAuBlmF,KAAKomF,IAC3GpmF,KAAAsmF,GAAoC9F,GAAa5gC,KAAU1xD,EAAOyH,cAClEqK,KAAAumF,GAA8B,IAAI/xB,GAAO9U,GAAM,CAAEphD,MAAO,aAAcrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAKhhB,EAAOqG,kBAAoB,EAAG1C,MAAO,IAAKmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIwE,GAAmB9zC,KAAK+mC,EAAM6L,EAAUtD,KAAW,GAC/QtvC,KAAAwmF,GAAmC98E,GAAI,CAAE6+B,MAAO,YAAaxsB,MAAO,oCAAsCyjC,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,iBAAmB,eAAgBtkF,KAAKumF,GAAoBj+C,WAClNtoC,KAAAymF,GAAiC,IAAIjyB,GAAO9U,GAAM,CAAEphD,MAAO,aAAcrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAKhhB,EAAOsG,qBAAuB,EAAG3C,MAAO,IAAKmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIyE,GAAsB/zC,KAAK+mC,EAAM6L,EAAUtD,KAAW,GACxRtvC,KAAA0mF,GAAsCh9E,GAAI,CAAE6+B,MAAO,YAAaxsB,MAAO,kCAAoCyjC,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,oBAAsB,gBAAiBtkF,KAAKymF,GAAuBn+C,WAC1NtoC,KAAA2mF,GAA2CnG,GAAa5gC,KAAU1xD,EAAOoJ,UAAUosF,KAAI9nF,GAAYA,EAAS9J,QACrHkO,KAAA4mF,GAAqCl9E,GAAI,CAAE6+B,MAAO,YAAaxsB,MAAO,4BAA8ByjC,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,mBAAqB,eAAgB56E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAK2mF,KAC5N3mF,KAAA6mF,GAA0CrG,GAAa5gC,KAAU1xD,EAAOoJ,UAAUosF,KAAI9nF,GAAYA,EAAS9J,QACpHkO,KAAA8mF,GAAoCp9E,GAAI,CAAE6+B,MAAO,YAAaxsB,MAAO,kCAAoCyjC,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,kBAAoB,cAAe56E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAK6mF,KAC/N7mF,KAAA+mF,GAA4B,IAAIvyB,GAAO9U,GAAM,CAAEphD,MAAO,aAAcrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAKhhB,EAAOiK,gBAAiBtG,MAAO,IAAKmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIsE,GAAiB5zC,KAAK+mC,EAAM6L,EAAUtD,KAAW,GACrQtvC,KAAAgnF,GAAiCt9E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,eAAiB,gBAAiBtkF,KAAK+mF,GAAkBz+C,WAClKtoC,KAAAinF,GAAqCzG,GAAa5gC,KAAU1xD,EAAOqH,UAAUmuF,KAAIvoF,GAAYA,EAASrJ,QACtGkO,KAAAknF,GAAkCx9E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,aAAe,aAAc56E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAKinF,KACvLjnF,KAAAmnF,GAAkC3G,GAAa5gC,KAAU1xD,EAAOkI,OAAOstF,KAAI3oF,GAASA,EAAMjJ,QAC1FkO,KAAAonF,GAAoC7nC,GAAO,CAAEjhD,MAAO,4EAA6E+lF,QAAS,IAAMrkF,KAAKglF,GAAoB,IAAM,KAC/KhlF,KAAAqnF,GAA+B39E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,WAAa,WAAYtkF,KAAKonF,GAAgB19E,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,iBAAmB0B,KAAKmnF,KAC7NnnF,KAAAsnF,GAA+B,IAAI9yB,GAAO9U,GAAM,CAAEphD,MAAO,aAAcrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAKlP,KAAK+mC,EAAK5mC,KAAKyY,WAAWpX,IAAIwS,EAAWgG,kBAAmBnoB,MAAO,IAAKmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAI4D,GAAoBlzC,KAAK+mC,EAAM6L,EAAUtD,KAAW,GACtStvC,KAAAunF,GAAiC79E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOjqC,MAAO,oBAAqB+lF,QAAS,IAAMrkF,KAAKskF,GAAY,kBAAoB,UAAWtkF,KAAKsnF,GAAqBh/C,WACvMtoC,KAAAwnF,GAAmC9nC,GAAM,CAAEzqD,KAAM,WAAYqJ,MAAO,+CACpE0B,KAAAynF,GAA8B/9E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOjqC,MAAO,oBAAqB+lF,QAAS,IAAMrkF,KAAKskF,GAAY,oBAAsB,kBAAmBtkF,KAAKwnF,IACzLxnF,KAAA0nF,GAAmCh+E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAKunF,GAAmBvnF,KAAKynF,IAClGznF,KAAA2nF,GAAoCnH,GAAa5gC,KAAU1xD,EAAO8G,SAAS0uF,KAAItoF,GAAWA,EAAQtJ,QAClGkO,KAAA4nF,GAAsCroC,GAAO,CAAEjhD,MAAO,4EAA6E+lF,QAAS,IAAMrkF,KAAKglF,GAAoB,IAAM,KACjLhlF,KAAA6nF,GAAiCn+E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,YAAc,YAAatkF,KAAK4nF,GAAkBl+E,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,iBAAmB0B,KAAK2nF,KACnO3nF,KAAA8nF,GAA8B,IAAItzB,GAAO9U,GAAM,CAAEphD,MAAO,aAAcrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAKlP,KAAK+mC,EAAK5mC,KAAKyY,WAAWpX,IAAIwS,EAAW4F,iBAAkB/nB,MAAO,IAAKmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIqD,GAAmB3yC,KAAK+mC,EAAM6L,EAAUtD,KAAW,GACnStvC,KAAA+nF,GAAgCr+E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOjqC,MAAO,oBAAqB+lF,QAAS,IAAMrkF,KAAKskF,GAAY,iBAAmB,UAAWtkF,KAAK8nF,GAAoBx/C,WACpMtoC,KAAAgoF,GAA8B,IAAIxzB,GAAO9U,GAAM,CAAEphD,MAAO,aAAcrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAKlP,KAAK+mC,EAAK5mC,KAAKyY,WAAWpX,IAAIwS,EAAW8F,iBAAkBjoB,MAAO,IAAKmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIyD,GAAmB/yC,KAAK+mC,EAAM6L,EAAUtD,KAAW,GACnStvC,KAAAioF,GAAgCv+E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOjqC,MAAO,oBAAqB+lF,QAAS,IAAMrkF,KAAKskF,GAAY,iBAAmB,UAAWtkF,KAAKgoF,GAAoB1/C,WACpMtoC,KAAAkoF,GAA8B,IAAI1zB,GAAO9U,GAAM,CAAEphD,MAAO,aAAcrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAKlP,KAAK+mC,EAAK5mC,KAAKyY,WAAWpX,IAAIwS,EAAW+F,iBAAkBloB,MAAO,IAAKmuD,KAAM,MAAQhgD,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAI0D,GAAmBhzC,KAAK+mC,EAAM6L,EAAUtD,KAAW,GACnStvC,KAAAmoF,GAAgCz+E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOjqC,MAAO,oBAAqB+lF,QAAS,IAAMrkF,KAAKskF,GAAY,iBAAmB,UAAWtkF,KAAKkoF,GAAoB5/C,WACpMtoC,KAAAooF,GAAwC5H,GAAa5gC,KAAU1xD,EAAOiH,aAAauuF,KAAItoF,GAAWA,EAAQtJ,QAC1GkO,KAAAqoF,GAAqC3+E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOjqC,MAAO,oBAAqB+lF,QAAS,IAAMrkF,KAAKskF,GAAY,gBAAkB,SAAU56E,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,iBAAmB0B,KAAKooF,KAC7OpoF,KAAAsoF,GAAqC5+E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAK+nF,GAAkB/nF,KAAKioF,GAAkBjoF,KAAKmoF,GAAkBnoF,KAAKqoF,IACjJroF,KAAAuoF,GAA8B7+E,GAAI,CAAE6+B,MAAO,oBAC3CvoC,KAAAwoF,GAAyChI,GAAa5gC,KAAU1xD,EAAOsJ,UAAUksF,KAAI9sE,GAAYA,EAAS9kB,QAC1GkO,KAAAyoF,GAAgC/+E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,iBAAmB,aAAc56E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAKwoF,KACzLxoF,KAAA0oF,GAAkC,IAAIrN,GAAer7E,KAAK+mC,EAAM,MAChE/mC,KAAA2oF,GAA4Bj/E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,aAAe,aAActkF,KAAK0oF,GAAgBpgD,WAC/JtoC,KAAA4oF,GAAoC,IAAIh2B,GAAgB5yD,KAAK+mC,GAC7D/mC,KAAA6oF,GAA6Bn/E,GAAI,CAAE6+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,cAAgB,cAAetkF,KAAK4oF,GAAiBtgD,WACnKtoC,KAAA8oF,GAA6Bp/E,GAAI,CAAE6+B,MAAO,oBAC1CvoC,KAAA+oF,GAA+Br/E,GAAI,CAAE6+B,MAAO,oBAO5CvoC,KAAAgpF,GAA2CzpC,GAAO,CAAEjhD,MAAO,kBAAmBiqC,MAAO,cAAgB,CACrH,OAEAxpC,EAAI4oC,IAAI,CAAErpC,MAAO,iGAAkGkpC,MAAO,MAAOC,OAAQ,MAAOob,QAAS,gBAAkB,CAC1K9jD,EAAImpC,KAAK,CAAE+gD,EAAG,mJAAoJ5hD,KAAM,qBAGzJrnC,KAAAkpF,GAA4C3pC,GAAO,CAAEjhD,MAAO,kBAAmBiqC,MAAO,eAAiB,CACvH,QAEAxpC,EAAI4oC,IAAI,CAAErpC,MAAO,iGAAkGkpC,MAAO,MAAOC,OAAQ,MAAOob,QAAS,aAAe,CACvK9jD,EAAImpC,KAAK,CAAE+gD,EAAG,0EAA2ElhD,OAAQ,eAAgBV,KAAM,SACvHtoC,EAAImpC,KAAK,CAAE+gD,EAAG,oEAAqE5hD,KAAM,qBAI1ErnC,KAAAmpF,GAA0C,IAAI5H,GAAiBhB,GAAO,CAAE/4C,MAAO,IAAKC,OAAQ,GAAInpC,MAAO,oBAAsByB,EAAY+H,mBAAoBo5D,GAAI,yBAA2BlhE,KAAK+mC,GAAOkI,GAA2B,IAAID,GAAiBhvC,KAAK+mC,EAAMkI,KACnQjvC,KAAAopF,GAtblB,SAA8BC,EAAgB5I,EAAyBC,GACtED,EAAK3jF,YAAY+iD,GAAO,CAAEi9B,UAAU,EAAM7xB,UAAU,EAAMp5D,MAAOw3F,GAAUA,IAE3E,IAAK,MAAMp5C,KAAQywC,EAClBD,EAAK3jF,YAAY+iD,GAAO,CAAEhuD,MAAOo+C,GAAQA,IAE1C,OAAOwwC,EAgbqD6I,CAAqB,cAAe1pC,GAAO,CAAEthD,MAAO,2EAC/GpQ,EAAO6F,UAAU2vF,KAAIt1F,GAAQA,EAAK0D,QAElBkO,KAAAupF,GAAqChqC,GAAO,CAAEjhD,MAAO,oDAAqD+lF,QAAS,IAAMrkF,KAAKskF,GAAY,uBAAyB,KAEnKtkF,KAAAwpF,GAAkC9/E,GAAI,CAAEpL,MAAO,mDAAqD,CACpHoL,GAAI,CAAEpL,MAAO,sDAAwD,CAAC0B,KAAKmpF,GAAsB5I,SACjG72E,GAAI,CAAEpL,MAAO,yDAA2D,CAAC0B,KAAKopF,GAAuBppF,KAAKupF,OAG1FvpF,KAAAypF,GAA+B,IAAIx1B,GAASvU,GAAM,CAAEphD,MAAO,oJAAqJyrD,UAAW,KAAM90D,KAAM,OAAQpD,MAAO+H,EAAac,qBAAuBsF,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIkP,GAAgBx+C,KAAK+mC,EAAM6L,EAAUtD,KAGtXtvC,KAAA0pF,GAAmC,IAAIl1B,GAAO9U,GAAM,CAAEphD,MAAO,yBAA0BrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAKhhB,EAAO+I,qBAAsBpF,MAAO,IAAKmuD,KAAM,IAAKjkC,MAAO,uBAAyB/b,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIkF,GAAwBx0C,KAAK+mC,EAAM6L,EAAUtD,KAAW,GACxTtvC,KAAA2pF,GAA6CnJ,GAAa5gC,GAAO,CAAEthD,MAAO,eAAgByd,MAAO,sBAAwB7tB,EAAOoJ,UAAUosF,KAAI9nF,GAAYA,EAAS9J,QACnKkO,KAAA4pF,GAAgClgF,GAAI,CAAE6+B,MAAO,eAC7D7+B,GAAI,CAAEpL,MAAO,2CAA6C,MAC1DoL,GAAI,CAAEpL,MAAO,oCACb0B,KAAK0pF,GAAyBphD,UAC9B5+B,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,kCAAoC0B,KAAK2pF,KAUhE3pF,KAAA6pF,GAAiDngF,GAAI,CAAE6+B,MAAO,mBAC9EvoC,KAAK4lF,GACL5lF,KAAK6lF,GACL7lF,KAAKylF,GACLzlF,KAAKwpF,GACLxpF,KAAKwmF,GACLxmF,KAAK0mF,GACL1mF,KAAK4mF,GACL5mF,KAAKgmF,GACLhmF,KAAKqmF,GAEL38E,GAAI,CAAE6+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,YAAc,YACnE56E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAKsmF,KAExCtmF,KAAKqnF,GACLrnF,KAAK0nF,GACL1nF,KAAK6nF,GACL7nF,KAAKsoF,GACLtoF,KAAKknF,GACLlnF,KAAKokF,GACLpkF,KAAKuoF,GACLvoF,KAAKyoF,GACLzoF,KAAK4pF,GACL5pF,KAAK2oF,GACL3oF,KAAK6oF,GACL7oF,KAAK8oF,GACL9oF,KAAK8mF,GACL9mF,KAAKgnF,IAEWhnF,KAAA8pF,GAAuCpgF,GAAI,CAAE6+B,MAAO,mBACpE7+B,GAAI,CAAE6+B,MAAO,aACZvoC,KAAKgpF,GACLhpF,KAAKkpF,KAGUlpF,KAAA+pF,GAA6CrgF,GAAI,CAAEw3D,GAAI,yBAA0B5iE,MAAO,8DAA8DyB,EAAYyH,kBAClL,uBAEgBxH,KAAAgqF,GAA2CtgF,GAAI,CAAE6+B,MAAO,mBACxEvoC,KAAK+pF,GACL/pF,KAAKwkF,GACL96E,GAAI,CAAE6+B,MAAO,YAAa24B,GAAI,iBAC7B1hB,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,mBAAqB,UAC1E56E,GACCA,GAAI,CAAE6+B,MAAO,eAAiBvoC,KAAKikF,IACnCv6E,GAAI,CAAE6+B,MAAO,cAAgBvoC,KAAKkkF,MAGpClkF,KAAK4kF,GACL5kF,KAAKklF,GACLllF,KAAKslF,GAELtlF,KAAK6pF,IAEW7pF,KAAAiqF,GAAoClrF,EAAImpC,KAAK,CAAE+gD,EAAG,8FAA+F5hD,KAAMtnC,EAAYgJ,mBAAoBmhF,YAAa,YACpMlqF,KAAAmqF,GAAuCprF,EAAImpC,KAAK,CAAE+gD,EAAG,uGAAwG5hD,KAAMtnC,EAAYgJ,qBAE/K/I,KAAAoqF,GAAmC1gF,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,mBAC1E0B,KAAAqqF,GAAoC3gF,GAAI,CAAEpL,MAAO,oFACjE0B,KAAKwiF,GAAmBl6C,UACxBtoC,KAAKyiF,GAAen6C,UACpBtoC,KAAK0iF,GAAmBp6C,WAERtoC,KAAAsqF,GAA+B5gF,GAAI,CAAE6+B,MAAO,gBAC5DvoC,KAAKsoE,GAAOhgC,UACZtoC,KAAKqqF,GACLrqF,KAAK8iF,GAAiBx6C,WAENtoC,KAAAgnC,EAAkCt9B,GAAI,CAAE6+B,MAAO,kBAC/DvoC,KAAK2iF,GAAar6C,UAClBtoC,KAAK6iF,GAAYv6C,WAEDtoC,KAAAuqF,GAAyC7gF,GAAI,CAAE6+B,MAAO,yBACtEvoC,KAAK4iF,GAAYt6C,UACjBtoC,KAAKgnC,GAEUhnC,KAAAu+E,GAA8B,IAAIz3C,GAAa9mC,KAAK+mC,EAAM/mC,KAAKgnC,GAC9DhnC,KAAAwqF,GAA6B9gF,GAAI,CAAE6+B,MAAO,cAC1DvoC,KAAKuqF,GACLvqF,KAAKu+E,GAAcj2C,WAGJtoC,KAAAyqF,GAAgC/gF,GAAI,CAAE6+B,MAAO,6BAC5D7+B,GAAI,CAAE6+B,MAAO,gBACZ7+B,GAAI,CAAEpL,MAAO,4DAA8D,CAAC0B,KAAKypF,GAAmB/pC,SAErGh2C,GAAI,CAAE6+B,MAAO,mBACZvoC,KAAKojF,GACL15E,GAAI,CAAE6+B,MAAO,yBACZvoC,KAAKqkD,GACLrkD,KAAK+iF,GACL/iF,KAAKgjF,IAENt5E,GAAI,CAAE6+B,MAAO,4BACZiX,GAAK,CAAEjX,MAAO,mBACdvoC,KAAKijF,GAAc36C,YAGrB5+B,GAAI,CAAE6+B,MAAO,aACZ7+B,GAAI,CAAE6+B,MAAO,6BACZvoC,KAAKqjF,IAEN35E,GAAI,CAAE6+B,MAAO,6BACZvoC,KAAKujF,IAEN75E,GAAI,CAAE6+B,MAAO,oCACZvoC,KAAKwjF,KAGP95E,GAAI,CAAE6+B,MAAO,sBACZ7+B,GAAI,CAAE6+B,MAAO,mBACZ7+B,GAAI,CAAE6+B,MAAO,wBACZ7+B,GAAI,CAAEpL,MAAO,+FACZoL,GAAI,CAAE6+B,MAAO,MAAOjqC,MAAO,gFAAiF+lF,QAAS,IAAMrkF,KAAKskF,GAAY,gBAC3IvlF,EAAI4oC,IAAI,CAAErpC,MAAO,6EAA8EkpC,MAAO,OAAQC,OAAQ,OAAQijD,eAAgB,QAAS7nC,QAAS,eAC/J7iD,KAAKiqF,KAGPvgF,GAAI,CAAE6+B,MAAO,MAAOjqC,MAAO,oFAAqF+lF,QAAS,IAAMrkF,KAAKskF,GAAY,mBAC/IvlF,EAAI4oC,IAAI,CAAErpC,MAAO,6EAA8EkpC,MAAO,OAAQC,OAAQ,OAAQijD,eAAgB,MAAO7nC,QAAS,eAC7J7iD,KAAKmqF,KAGP,qBAOFzgF,GAAI,CAAE6+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,QAAU,SAC/D56E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAK2jF,KAExCj6E,GAAI,CAAE6+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,UAAY,WACjE9kC,GAAK,CAAElhD,MAAO,kBACb0B,KAAK6jF,GAAav7C,UAClBtoC,KAAK8jF,KAGPp6E,GAAI,CAAE6+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,WAAa,YAClEtkF,KAAK+jF,GAAcz7C,WAEpB5+B,GAAI,CAAE6+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,WAAa,YAClE56E,GAAI,CAAE6+B,MAAO,mBAAqBvoC,KAAKgkF,OAI1Ct6E,GAAI,CAAE6+B,MAAO,4BACZvoC,KAAKgqF,GACLhqF,KAAK+oF,KAIS/oF,KAAA2qF,UAA4BjhF,GAAI,CAAE6+B,MAAO,gBAAiBqiD,SAAU,KACnF5qF,KAAKsqF,GACLtqF,KAAKwqF,GACLxqF,KAAKyqF,GACLzqF,KAAKoqF,IAGEpqF,KAAA6qF,IAAuB,EACvB7qF,KAAA8qF,GAAoC,KAC3B9qF,KAAA+qF,GAAkC,GAClC/qF,KAAAgrF,GAAsC,GACtChrF,KAAAirF,GAAgD,GAChDjrF,KAAAkrF,GAAiD,GACjDlrF,KAAAmrF,GAA4C,GAC5CnrF,KAAAorF,GAA+C,GACxDprF,KAAAqrF,GAA6B,GAC7BrrF,KAAAsrF,GAAgC,GAChCtrF,KAAAurF,GAA6B,GAC7BvrF,KAAAwrF,IAAgC,EAChCxrF,KAAAyrF,GAA2B,EAC3BzrF,KAAA0rF,GAAwB,EACxB1rF,KAAA2rF,GAA8B,EAE9B3rF,KAAA4rF,IAA4B,EAC5B5rF,KAAA6rF,IAAgC,EAChC7rF,KAAA8rF,IAA8B,EAC9B9rF,KAAA+rF,IAAmC,EAEnC/rF,KAAA4iE,uBAAiC,EACjC5iE,KAAA6iE,qBAA+B,EAC/B7iE,KAAAgsF,iBAA2B,EAyd5BhsF,KAAAwnE,aAAe,KACrBxnE,KAAK2qF,UAAUnpC,MAAM,CAAEyqC,eAAe,KAI/BjsF,KAAAksF,GAA0B,KAC5BlsF,KAAKyiF,GAAenX,iBACxBtrE,KAAK2qF,UAAUnpC,MAAM,CAAEyqC,eAAe,KAOjCjsF,KAAAmsF,YAAc,KACpBnsF,KAAK4iF,GAAYt6C,UAAUhqC,MAAM01D,QAAUh0D,KAAK+mC,EAAK+gC,oBAAsB,GAAK,OAChF,MAAMskB,EAAcpsF,KAAKgnC,EAAgB2C,wBAezC,GAdA3pC,KAAK+mC,EAAKgD,iBAAmBh7C,KAAKmU,OAAOkpF,EAAYjpC,MAAQipC,EAAYtiD,MAAQ9pC,KAAK+mC,EAAKqC,eAC3FppC,KAAKu+E,GAAct7B,SACnBjjD,KAAK4iF,GAAY3/B,SACjBjjD,KAAK2iF,GAAa1/B,SAEdlmD,SAASsvF,eAAiBrsF,KAAKyiF,GAAe9X,mBAAqB3qE,KAAKyiF,GAAenX,iBAC1FtrE,KAAKyiF,GAAelR,qBAAoB,GAGzCvxE,KAAKsoE,GAAOhgC,UAAUhqC,MAAM01D,QAAUh0D,KAAK+mC,EAAKgvC,YAAc,GAAK,OACnE/1E,KAAK8iF,GAAiBx6C,UAAUhqC,MAAM01D,QAAUh0D,KAAK+mC,EAAKulD,cAAgB,GAAK,OAC/EtsF,KAAKu+E,GAAcj2C,UAAUhqC,MAAM01D,QAAUh0D,KAAK+mC,EAAK5mC,KAAKwb,SAAW3b,KAAK+mC,EAAKgD,iBAAmB,GAAK,OACzG/pC,KAAKojF,GAAc9kF,MAAM01D,QAAUh0D,KAAK+mC,EAAKwlD,iBAAmB,GAAK,OAEjEvsF,KAAK+mC,EAAKylD,gBAAiB,CAC9B,MACMC,EADyBzsF,KAAKqqF,GAAkBlX,aAAenzE,KAAK+mC,EAAKk4B,iBAC9Bj/D,KAAK+mC,EAAK5mC,KAAKsX,IAAM,EAAE,GAClEi1E,EAAuB1sF,KAAKqqF,GAAkBz9E,aAA4C,EAA7B5M,KAAK+mC,EAAK5mC,KAAKub,aAC5EixE,EAAuB3sF,KAAKqqF,GAAkBz9E,aAAe5M,KAAK+mC,EAAK5mC,KAAKub,YAAc,GAE1FkxE,EADoB79F,KAAKmgB,IAAIw9E,EAAc39F,KAAKyB,IAAIm8F,EAAcF,IACzBzsF,KAAK+mC,EAAK5mC,KAAKub,YAE9D1b,KAAKwiF,GAAmBl6C,UAAUhqC,MAAMkpC,MAAQolD,EAAqB,KACrE5sF,KAAKyiF,GAAen6C,UAAUhqC,MAAMkpC,MAAQolD,EAAqB,KACjE5sF,KAAK0iF,GAAmBp6C,UAAUhqC,MAAMkpC,MAAQolD,EAAqB,KACrE5sF,KAAKwiF,GAAmBl6C,UAAUhqC,MAAMuuF,WAAa,IACrD7sF,KAAKyiF,GAAen6C,UAAUhqC,MAAMuuF,WAAa,IACjD7sF,KAAK0iF,GAAmBp6C,UAAUhqC,MAAMuuF,WAAa,IACrD7sF,KAAKwiF,GAAmBl6C,UAAUhqC,MAAM01D,QAAU,GAClDh0D,KAAK0iF,GAAmBp6C,UAAUhqC,MAAM01D,QAAU,GAClDh0D,KAAKwiF,GAAmBv/B,SACxBjjD,KAAK0iF,GAAmBz/B,cAExBjjD,KAAKyiF,GAAen6C,UAAUhqC,MAAMkpC,MAAQ,GAC5CxnC,KAAKyiF,GAAen6C,UAAUhqC,MAAMuuF,WAAa,GACjD7sF,KAAKwiF,GAAmBl6C,UAAUhqC,MAAM01D,QAAU,OAClDh0D,KAAK0iF,GAAmBp6C,UAAUhqC,MAAM01D,QAAU,OAEnDh0D,KAAKyiF,GAAex/B,SAEpB,MAAM6pC,EAAwC,EAC5C9sF,KAAK+mC,EAAKgmD,SAAW,KAAO,IAAM,qBAClC/sF,KAAK+mC,EAAKu+B,WAAa,KAAO,IAAM,qBACpCtlE,KAAK+mC,EAAKmoC,kBAAoB,KAAO,IAAM,uBAC3ClvE,KAAK+mC,EAAKgvC,YAAc,KAAO,IAAM,mBACrC/1E,KAAK+mC,EAAKgtB,UAAY,KAAO,IAAM,2BACnC/zD,KAAK+mC,EAAK4sC,aAAe,KAAO,IAAM,qBACtC3zE,KAAK+mC,EAAKulD,cAAgB,KAAO,IAAM,qBACvCtsF,KAAK+mC,EAAKisC,kBAAoB,KAAO,IAAM,yBAC3ChzE,KAAK+mC,EAAK+gC,oBAAsB,KAAO,IAAM,yBAC7C9nE,KAAK+mC,EAAKimD,kBAAoB,KAAO,IAAM,4BAC3ChtF,KAAK+mC,EAAKwlD,iBAAmB,KAAO,IAAM,uBAC3C,gBACA,gBAGD,IAAK,IAAIj+F,EAAY,EAAGA,EAAIw+F,EAAev+F,OAAQD,IAAK,CACvD,MAAMuxD,EAA+C7/C,KAAKwjF,GAAav/B,SAAS31D,EAAI,GAChFuxD,EAAO8E,WAAamoC,EAAex+F,KAAIuxD,EAAO8E,UAAYmoC,EAAex+F,IAG9E,MAAM8R,EAAmBJ,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SACrD8b,EAA0Blc,KAAK+mC,EAAK6qC,oBACpCz0D,EAA0Bnd,KAAK+mC,EAAKoI,uBACpC3+B,EAAyBpQ,EAAQwX,YAAYuF,GAC7C8vE,EAAqBjtF,KAAK2qF,UAAUuC,SAASnwF,SAASsvF,eACtDA,EAAgCtvF,SAASsvF,cAY/C,GAVAlL,GAAiBnhF,KAAKyjF,GAAczjF,KAAK+mC,EAAK5mC,KAAKib,OACnDpb,KAAKyjF,GAAa1nE,MAAQ7tB,EAAOmE,OAAO2N,KAAK+mC,EAAK5mC,KAAKib,OAAO9oB,SAC9D6uF,GAAiBnhF,KAAK2jF,GAAYz1F,EAAOsE,KAAKjE,OAAS,EAAIyR,KAAK+mC,EAAK5mC,KAAKvC,KAC1EoC,KAAK6jF,GAAasJ,YAAYp+F,KAAKmgB,IAAI,EAAGngB,KAAKgb,MAAM/J,KAAK+mC,EAAK5mC,KAAKwa,SACpE3a,KAAK8jF,GAAcjyF,MAAQ9C,KAAKgb,MAAM/J,KAAK+mC,EAAK5mC,KAAKwa,OAAO+9D,WAC5D14E,KAAKypF,GAAmB0D,YAAYntF,KAAK+mC,EAAK5mC,KAAK4b,OACnD/b,KAAK+jF,GAAcoJ,YAAYntF,KAAK+mC,EAAK5mC,KAAKob,QAE9C4lE,GAAiBnhF,KAAKgkF,GAAehkF,KAAK+mC,EAAK5mC,KAAK0b,QAE/C7b,KAAK+mC,EAAK5mC,KAAK+c,gBAAgBld,KAAK+mC,EAAK3mC,SA2QzC,CACAgtF,GAAc,EACdC,GAAiB,EAErB,IAAIC,EAAqBv+F,KAAKyB,IAAIwP,KAAK+mC,EAAK0T,UAAUkC,eAAgB38C,KAAK+mC,EAAK0T,UAAUmC,gBACtF2wC,EAAsBx+F,KAAKmgB,IAAIlP,KAAK+mC,EAAK0T,UAAUkC,eAAgB38C,KAAK+mC,EAAK0T,UAAUmC,gBACvF4wC,EAAqBz+F,KAAKyB,IAAIwP,KAAK+mC,EAAK0T,UAAUoC,eAAgB78C,KAAK+mC,EAAK0T,UAAUqC,gBACtF2wC,EAAsB1+F,KAAKmgB,IAAIlP,KAAK+mC,EAAK0T,UAAUoC,eAAgB78C,KAAK+mC,EAAK0T,UAAUqC,gBAE3F,GAAmC,GAA/B18C,EAAQ0X,KAAK9X,KAAK+mC,EAAK5qB,KAE1B,IAAK,IAAI7tB,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAK5mC,KAAKwb,SAAUrtB,IAEhD8R,EAAQ0X,KAAKxpB,IAAM8R,EAAQ0X,KAAK9X,KAAK+mC,EAAK5qB,MAAQ7tB,GAAK0R,KAAK+mC,EAAK5qB,MACnE7tB,EAAIg/F,GAAch/F,EAAIi/F,GAAevtF,KAAK+mC,EAAK3mC,QAAUotF,GAAcxtF,KAAK+mC,EAAK3mC,QAAUqtF,KAE5FL,GAAc,EACd9+F,EAAI0R,KAAK+mC,EAAK5mC,KAAKwb,UAItB,IAAK,IAAIrtB,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAK5mC,KAAKwb,SAAUrtB,IAE7B,GAAnB8R,EAAQ0X,KAAKxpB,IAAW0R,KAAK+mC,EAAK5mC,KAAK2sB,qBAAqB9sB,KAAK+mC,EAAK3mC,QAAS9R,IAAM6uB,GAAmB7uB,GAAK0R,KAAK+mC,EAAK5qB,MACzH7tB,EAAIg/F,GAAch/F,EAAIi/F,GAAevtF,KAAK+mC,EAAK3mC,QAAUotF,GAAcxtF,KAAK+mC,EAAK3mC,QAAUqtF,KAE5FJ,GAAiB,EACjB/+F,EAAI0R,KAAK+mC,EAAK5mC,KAAKwb,UAIjByxE,EACHptF,KAAKiqF,GAAsB3rF,MAAMC,YAAY,OAAQwB,EAAY+I,kBAGjE9I,KAAKiqF,GAAsB3rF,MAAMC,YAAY,OAAQwB,EAAYgJ,oBAG9DskF,EACHrtF,KAAKmqF,GAAyB7rF,MAAMC,YAAY,OAAQwB,EAAY+I,kBAGpE9I,KAAKmqF,GAAyB7rF,MAAMC,YAAY,OAAQwB,EAAYgJ,oBAGrE/I,KAAKikF,GAAqB3lF,MAAM01D,QAAU,OAC1Ch0D,KAAKkkF,GAAkB5lF,MAAM01D,QAAU,OACvCqtB,EAAE,sBAAsBqM,SAASC,OACjCtM,EAAE,qBAAqBqM,SAASC,OAChC3tF,KAAK+oF,GAAgBjsF,YAAYkD,KAAK8pF,IACtC9pF,KAAK+oF,GAAgB/H,aAAahhF,KAAKwkF,GAAsBxkF,KAAK+oF,GAAgBzpF,YAClFU,KAAK+oF,GAAgB/H,aAAahhF,KAAK+pF,GAA4B/pF,KAAK+oF,GAAgBzpF,YACjC,IAAnDU,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAAStO,KAC9CkO,KAAK+pF,GAA2B3jF,YAAc,qBAG9CpG,KAAK+pF,GAA2B3jF,YAAcpG,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAAStO,KAG1FkO,KAAK6lF,GAAoBvnF,MAAM01D,QAAU,OACzCh0D,KAAK4lF,GAAmBtnF,MAAM01D,QAAU,OACxCh0D,KAAK2oF,GAAarqF,MAAM01D,QAAU,OAClCh0D,KAAK6oF,GAAcvqF,MAAM01D,QAAU,OACnCh0D,KAAKgmF,GAAe1nF,MAAM01D,QAAU,OACpCh0D,KAAKqnF,GAAgB/oF,MAAM01D,QAAU,OACrCh0D,KAAK0nF,GAAoBppF,MAAM01D,QAAU,OACzCh0D,KAAKwmF,GAAiBloF,MAAM01D,QAAU,OACtCh0D,KAAK0mF,GAAoBpoF,MAAM01D,QAAU,OACzCh0D,KAAK4mF,GAAmBtoF,MAAM01D,QAAU,OACxCh0D,KAAK8oF,GAAcxqF,MAAM01D,QAAU,OACnCh0D,KAAKwpF,GAAgBlrF,MAAM01D,QAAU,OACrCh0D,KAAKokF,GAAoB9lF,MAAM01D,QAAU,OACzCh0D,KAAKuoF,GAAejqF,MAAM01D,QAAU,OACpCh0D,KAAKyoF,GAAcnqF,MAAM01D,QAAU,OACnCh0D,KAAK4pF,GAActrF,MAAM01D,QAAU,OACnCh0D,KAAK8mF,GAAkBxoF,MAAM01D,QAAU,OACvCh0D,KAAKgnF,GAAe1oF,MAAM01D,QAAU,OACpCh0D,KAAK6nF,GAAkBvpF,MAAM01D,QAAU,OACvCh0D,KAAKsoF,GAAsBhqF,MAAM01D,QAAU,OAC3Ch0D,KAAKknF,GAAmB5oF,MAAM01D,QAAU,OACxCh0D,KAAKylF,GAAiBnnF,MAAM01D,QAAU,OACtCh0D,KAAKklF,GAAc5mF,MAAM01D,QAAU,OACnCh0D,KAAKslF,GAAkBhnF,MAAM01D,QAAU,OAEvCh0D,KAAK+oF,GAAgBzqF,MAAM01D,QAAU,GACrCh0D,KAAK+oF,GAAgBzqF,MAAM6nE,MAAQpmE,EAAYW,gBAAgBV,KAAK+mC,EAAK5mC,KAAMH,KAAK+mC,EAAK3mC,SAASa,YAElG,IAAK,IAAI4S,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAAO,CAEvD,IAAIrD,EAAyBxQ,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAC1F/xB,EAAoB5M,EAAWkD,YAAYG,GAC3C0G,EAAqB/J,EAAWlP,YAAYuS,IAASuJ,GAAatJ,EAAUwJ,WAActd,KAAK+mC,EAAK5mC,KAAKe,kBAAoB,GAC7HsZ,EAAwBhK,EAAWmD,eAAeE,GAmBtD,GAhBI2G,GAAiBxa,KAAK+mC,EAAK5mC,KAAK2b,wBACnCtB,EAAgB,EAChBhK,EAAWmD,eAAeE,GAAO,EACjCrD,EAAWoD,YAAYC,GAAO,GAE3B0G,GAAcva,KAAK+mC,EAAK5mC,KAAKe,mBAAsBkc,GAAatJ,EAAUuJ,aAC7ED,EAAYtJ,EAAUC,OACtBvD,EAAWkD,YAAYG,GAAOC,EAAUC,OACxCvD,EAAWoD,YAAYC,GAAOG,EAAWC,SAEtCsG,GAAcva,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,mBAAsBgc,GAAatJ,EAAUwJ,aAChH9M,EAAWkD,YAAYG,GAAOC,EAAUC,OACxCvD,EAAWoD,YAAYC,GAAOG,EAAWC,SAItCjU,KAAK+mC,EAAK4X,oBAAsB3+C,KAAK4tF,GAAiB/5E,GAAKowC,SAAS11D,QAAU,EAAIyR,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmB,CAC1J,KAAOpB,KAAK4tF,GAAiB/5E,GAAKvU,YAAYU,KAAK4tF,GAAiB/5E,GAAK+jB,OAAO,GAChF,MAAMi2D,EAAwB,GAC9BA,EAAYl/F,KAAK,QACjBk/F,EAAYl/F,KAAK,QACjB,IAAK,IAAIL,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAK5mC,KAAKe,kBAAmB5S,IACtB,IAAnC0R,KAAK+mC,EAAK5mC,KAAK+X,SAAS5pB,GAAGwD,KAC9B+7F,EAAYl/F,KAAK,UAAYL,EAAI,IAGjCu/F,EAAYl/F,KAAKqR,KAAK+mC,EAAK5mC,KAAK+X,SAAS5pB,GAAGwD,MAG9C,IAAK,IAAIxD,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAK5mC,KAAKiB,kBAAmB9S,IACa,IAAtE0R,KAAK+mC,EAAK5mC,KAAK+X,SAAS5pB,EAAI0R,KAAK+mC,EAAK5mC,KAAKe,mBAAmBpP,KACjE+7F,EAAYl/F,KAAK,UAAYL,EAAI,IAGjCu/F,EAAYl/F,KAAKqR,KAAK+mC,EAAK5mC,KAAK+X,SAAS5pB,EAAI0R,KAAK+mC,EAAK5mC,KAAKe,mBAAmBpP,MAGjF0uF,GAAaxgF,KAAK4tF,GAAiB/5E,GAAMg6E,GAkB1C,GAdIr9E,EAAWkD,YAAYG,IAAQC,EAAUC,OAC5C/T,KAAK4tF,GAAiB/5E,GAAK4zD,cAAgB,EAEnCj3D,EAAWkD,YAAYG,IAAQC,EAAUyZ,UACjDvtB,KAAK4tF,GAAiB/5E,GAAK4zD,cAAgB,EAEnCj3D,EAAWkD,YAAYG,IAAQC,EAAUuJ,WACjDrd,KAAK4tF,GAAiB/5E,GAAK4zD,cAAgBj3D,EAAWlP,YAAYuS,GAAO,EAGzE7T,KAAK4tF,GAAiB/5E,GAAK4zD,cAAgBj3D,EAAWlP,YAAYuS,GAAO,EAAI7T,KAAK+mC,EAAK5mC,KAAKe,kBAIzFlB,KAAK8tF,GAAoBj6E,GAAKowC,SAAS11D,QAAUyR,KAAK+mC,EAAK5mC,KAAK2b,sBAAuB,CAC1F,KAAO9b,KAAK8tF,GAAoBj6E,GAAKvU,YAAYU,KAAK8tF,GAAoBj6E,GAAK+jB,OAAO,GACtF,MAAMm2D,EAA2B,GACjC,IAAK,IAAIz/F,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAK5mC,KAAK2b,sBAAuBxtB,IACjEy/F,EAAep/F,KAAKL,EAAI,GAEzBkyF,GAAaxgF,KAAK8tF,GAAoBj6E,GAAMk6E,GAQ7C,GAJA/tF,KAAK8tF,GAAoBj6E,GAAK4zD,cAAgBj3D,EAAWmD,eAAeE,GAIpEuJ,GAAatJ,EAAUC,OAAQ,CAElC,IAAIoiC,EAA4Bn2C,KAAK+mC,EAAK5mC,KAAK+X,SAASqC,GAAY3C,YAAY4C,GAEhF,KAAOxa,KAAKguF,GAAan6E,GAAKvU,YAAYU,KAAKguF,GAAan6E,GAAK+jB,OAAO,GACxE,MAAMq2D,EAAwB,GAC9BA,EAAYt/F,KAAK,QAG+B,GAA5CqR,KAAK4tF,GAAiB/5E,GAAK4zD,eAC9BwmB,EAAYt/F,KAAK,eACjBs/F,EAAYt/F,KAAK,SACjBs/F,EAAYt/F,KAAK,UACjBs/F,EAAYt/F,KAAK,YACjBs/F,EAAYt/F,KAAK,iBAKjBs/F,EAAYt/F,KAAK,UACjBs/F,EAAYt/F,KAAK,OACjBs/F,EAAYt/F,KAAK,aACjBs/F,EAAYt/F,KAAK,cACjBs/F,EAAYt/F,KAAK,eACjBs/F,EAAYt/F,KAAK,UACjBs/F,EAAYt/F,KAAK,kBACjBs/F,EAAYt/F,KAAK,kBACK,GAAlBwnD,EAAclhD,MAAiD,GAAlBkhD,EAAclhD,MAA+C,GAAlBkhD,EAAclhD,MAAsD,GAAlBkhD,EAAclhD,MAAgD,GAAlBkhD,EAAclhD,OACvMg5F,EAAYt/F,KAAK,iBACjBs/F,EAAYt/F,KAAK,iBACjBs/F,EAAYt/F,KAAK,kBAEI,GAAlBwnD,EAAclhD,KACjBg5F,EAAYt/F,KAAK,eAES,GAAlBwnD,EAAclhD,OACtBg5F,EAAYt/F,KAAK,eACjBs/F,EAAYt/F,KAAK,eACjBs/F,EAAYt/F,KAAK,eACjBs/F,EAAYt/F,KAAK,eACjBs/F,EAAYt/F,KAAK,iBAInB6xF,GAAaxgF,KAAKguF,GAAan6E,GAAMo6E,GAErC,IAAIC,GAAqB,EACrBjO,EAAmB,EAIvB,OAAQzvE,EAAWoD,YAAYC,IAE9B,KAAKG,EAAW6E,cACXuE,GAAatJ,EAAUyZ,UAC1B0yD,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAW8E,SACXsE,GAAatJ,EAAUyZ,UAC1B0yD,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAW+E,UACXqE,GAAatJ,EAAUyZ,UAC1B0yD,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAWgF,WACXoE,GAAatJ,EAAUyZ,UAC1B0yD,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAW6F,cACXuD,GAAatJ,EAAUyZ,UAC1B0yD,EAAW,EAEXiO,GAAY,EACb,MAED,KAAKl6E,EAAWiF,aACXmE,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,WAC/D2iE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAWkF,OACXkE,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,WAC/D2iE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAWiG,YACXmD,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,WAC/D2iE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAWmF,aACXiE,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,WAC/D2iE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAWoF,cACXgE,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,WAC/D2iE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAW2F,UACXyD,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,WAC/D2iE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAWgG,iBACXoD,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,WAC/D2iE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAWkG,iBACXkD,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,WAC/D2iE,EAAW,EAEXiO,GAAY,EACb,MAED,KAAKl6E,EAAW4F,gBACXwD,GAAatJ,EAAUuJ,WAC1B4iE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAW8F,gBACXsD,GAAatJ,EAAUuJ,WAC1B4iE,EAAW,GAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAW+F,gBACXqD,GAAatJ,EAAUuJ,WAC1B4iE,EAAW,GAEXiO,GAAY,EACb,MACD,KAAKl6E,EAAW0F,cACV0D,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,YAAiC,GAAlB64B,EAAclhD,KAG7Fi5F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAKjsE,EAAWqF,aACV+D,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,YAAiC,GAAlB64B,EAAclhD,KAG7Fi5F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAKjsE,EAAWsF,aACV8D,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,YAAiC,GAAlB64B,EAAclhD,KAG7Fi5F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAKjsE,EAAWuF,aACV6D,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,YAAiC,GAAlB64B,EAAclhD,KAG7Fi5F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAKjsE,EAAWwF,aACV4D,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,YAAiC,GAAlB64B,EAAclhD,KAG7Fi5F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAKjsE,EAAWyF,cACV2D,GAAatJ,EAAUuJ,YAAcD,GAAatJ,EAAUwJ,YAAiC,GAAlB64B,EAAclhD,KAG7Fi5F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAKjsE,EAAWC,SAMbi6E,GACHluF,KAAKguF,GAAan6E,GAAK4zD,cAAgB,EACvCj3D,EAAWoD,YAAYC,GAAOG,EAAWC,QACzCjU,KAAKmuF,GAAmBt6E,IAGxB7T,KAAKguF,GAAan6E,GAAK4zD,cAAgBwY,OAG9BzvE,EAAWoD,YAAYC,IAAQG,EAAWC,UACpDjU,KAAKguF,GAAan6E,GAAK4zD,cAAgB,EACvCznE,KAAKmuF,GAAmBt6E,IAKrB7T,KAAK4tF,GAAiB/5E,GAAK4zD,eAAiB,GAC7CznE,KAAK8tF,GAAoBj6E,GAAkB,cAAqBvV,MAAM01D,QAAU,OAClFqtB,EAAE,qBAAuBxtE,GAAKrS,IAAI,GAAGlD,MAAM01D,QAAU,OACrDqtB,EAAE,kBAAoBxtE,GAAKrS,IAAI,GAAGmjD,UAAY,WAGE,GAA5C3kD,KAAK4tF,GAAiB/5E,GAAK4zD,eAC9B4Z,EAAE,kBAAoBxtE,GAAKrS,IAAI,GAAGlD,MAAM01D,QAAU,OAChDh0D,KAAKguF,GAAan6E,GAAkB,cAAqBvV,MAAM01D,QAAU,SAG3EqtB,EAAE,kBAAoBxtE,GAAKrS,IAAI,GAAGlD,MAAM01D,QAAU,GAChDh0D,KAAKguF,GAAan6E,GAAkB,cAAqBvV,MAAM01D,QAAU,MAI1Eh0D,KAAK8tF,GAAoBj6E,GAAkB,cAAqBvV,MAAM01D,QAAWh0D,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,EAAK,GAAK,OACpIulE,EAAE,qBAAuBxtE,GAAKrS,IAAI,GAAGlD,MAAM01D,QAAWh0D,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,EAAK,GAAK,OACvGulE,EAAE,kBAAoBxtE,GAAKrS,IAAI,GAAGmjD,UAAa3kD,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,EAAK,MAAQ,WACnGulE,EAAE,kBAAoBxtE,GAAKrS,IAAI,GAAGlD,MAAM01D,QAAU,GAChDh0D,KAAKguF,GAAan6E,GAAkB,cAAqBvV,MAAM01D,QAAU,IAK7Eh0D,KAAK+mC,EAAK4X,oBAAqB,EAE/B,IAAK,IAAIyvC,EAAqB,EAAGA,EAAalgG,EAAOkI,OAAO7H,OAAQ6/F,IAAc,CACjF,MAAMvuC,EAAkB7/C,KAAKmnF,GAAaljC,SAASmqC,GAC9CvuC,EAAOwuC,aAAa,WACxBxuC,EAAOhiD,aAAa,SAAU,IAKhCmC,KAAKwkF,GAAqBlmF,MAAM01D,QAAU,OAE1Ch0D,KAAK6pF,GAA+BvrF,MAAM01D,QAAU,OACpDh0D,KAAKklF,GAAc5mF,MAAM01D,QAAU,OACnCh0D,KAAKslF,GAAkBhnF,MAAM01D,QAAU,OACvCh0D,KAAK4kF,GAA2BtmF,MAAM01D,QAAU,OAChDqtB,EAAE,kBAAkBiN,IAAI,UAAW,QAEnCtuF,KAAKgqF,GAAyB1rF,MAAM6nE,MAAQpmE,EAAYW,gBAAgBV,KAAK+mC,EAAK5mC,KAAMH,KAAK+mC,EAAK3mC,SAASa,YAGvGjB,KAAK+mC,EAAK3mC,SAAWJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,mBAC1EpB,KAAKsoE,GAAOc,kBA/qB0C,CAEvDppE,KAAK6pF,GAA+BvrF,MAAM01D,QAAU,GACpDh0D,KAAKklF,GAAc5mF,MAAM01D,QAAU,GACnCh0D,KAAKslF,GAAkBhnF,MAAM01D,QAAWh0D,KAAK4rF,GAAmB,GAAK,OACrE5rF,KAAKylF,GAAiBnnF,MAAM01D,QAAU,GACtCh0D,KAAK4kF,GAA2BtmF,MAAM01D,QAAU,GAChDqtB,EAAE,kBAAkBiN,IAAI,UAAW,IACnCtuF,KAAKgqF,GAAyBltF,YAAYkD,KAAK8pF,IAC/C9pF,KAAKgqF,GAAyBhJ,aAAahhF,KAAKwkF,GAAsBxkF,KAAKgqF,GAAyB1qF,YACpGU,KAAKgqF,GAAyBhJ,aAAahhF,KAAK+pF,GAA4B/pF,KAAKgqF,GAAyB1qF,YAEnD,IAAnDU,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAAStO,KAC9CkO,KAAK+pF,GAA2B3jF,YAAc,sBAG9CpG,KAAK+pF,GAA2B3jF,YAAcpG,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAAStO,KAG1FkO,KAAK+oF,GAAgBzqF,MAAM01D,QAAU,OAIrC,IAAIq5B,GAAiB,EACjBD,GAAc,EAElB,GAAmC,GAA/BhtF,EAAQ0X,KAAK9X,KAAK+mC,EAAK5qB,KAAW,CAErC,IAAImxE,EAAqBv+F,KAAKyB,IAAIwP,KAAK+mC,EAAK0T,UAAUkC,eAAgB38C,KAAK+mC,EAAK0T,UAAUmC,gBACtF2wC,EAAsBx+F,KAAKmgB,IAAIlP,KAAK+mC,EAAK0T,UAAUkC,eAAgB38C,KAAK+mC,EAAK0T,UAAUmC,gBACvF4wC,EAAqBz+F,KAAKyB,IAAIwP,KAAK+mC,EAAK0T,UAAUoC,eAAgB78C,KAAK+mC,EAAK0T,UAAUqC,gBACtF2wC,EAAsB1+F,KAAKmgB,IAAIlP,KAAK+mC,EAAK0T,UAAUoC,eAAgB78C,KAAK+mC,EAAK0T,UAAUqC,gBAE3F,IAAK,IAAIxuD,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAK5mC,KAAKwb,SAAUrtB,IAEhD8R,EAAQ0X,KAAKxpB,IAAM8R,EAAQ0X,KAAK9X,KAAK+mC,EAAK5qB,MAAQ7tB,GAAK0R,KAAK+mC,EAAK5qB,MACnE7tB,EAAIg/F,GAAch/F,EAAIi/F,GAAevtF,KAAK+mC,EAAK3mC,QAAUotF,GAAcxtF,KAAK+mC,EAAK3mC,QAAUqtF,KAE5FL,GAAc,EACd9+F,EAAI0R,KAAK+mC,EAAK5mC,KAAKwb,UAIrB,IAAK,IAAIrtB,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAK5mC,KAAKwb,SAAUrtB,IAE7B,GAAnB8R,EAAQ0X,KAAKxpB,IAAW0R,KAAK+mC,EAAK5mC,KAAK2sB,qBAAqB9sB,KAAK+mC,EAAK3mC,QAAS9R,IAAM6uB,GAAmB7uB,GAAK0R,KAAK+mC,EAAK5qB,MACzH7tB,EAAIg/F,GAAch/F,EAAIi/F,GAAevtF,KAAK+mC,EAAK3mC,QAAUotF,GAAcxtF,KAAK+mC,EAAK3mC,QAAUqtF,KAE5FJ,GAAiB,EACjB/+F,EAAI0R,KAAK+mC,EAAK5mC,KAAKwb,UAsCtB,GAhCIyxE,EACHptF,KAAKiqF,GAAsB3rF,MAAMC,YAAY,OAAQwB,EAAY+I,kBAGjE9I,KAAKiqF,GAAsB3rF,MAAMC,YAAY,OAAQwB,EAAYgJ,oBAE9DskF,EACHrtF,KAAKmqF,GAAyB7rF,MAAMC,YAAY,OAAQwB,EAAY+I,kBAGpE9I,KAAKmqF,GAAyB7rF,MAAMC,YAAY,OAAQwB,EAAYgJ,oBAGjE/I,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,UAC9CJ,KAAKikF,GAAqB3lF,MAAM01D,QAAU,OAC1Ch0D,KAAKkkF,GAAkB5lF,MAAM01D,QAAU,GAEvCqtB,EAAE,sBAAsBqM,SAASC,OACjCtM,EAAE,qBAAqBqM,SAASa,OAEhCpN,GAAiBnhF,KAAKkkF,GAAmB1zE,EAAWnW,UAEpD2F,KAAKikF,GAAqB3lF,MAAM01D,QAAU,GAC1Ch0D,KAAKkkF,GAAkB5lF,MAAM01D,QAAU,OAGvCqtB,EAAE,sBAAsBqM,SAASa,OACjClN,EAAE,qBAAqBqM,SAASC,OAEhCxM,GAAiBnhF,KAAKikF,GAAsBzzE,EAAWnW,SAGnD2F,KAAK+mC,EAAKynD,oBAAsBh+E,EAAWnW,QAAUmW,EAAWvb,KAG9D,CAwBN,GApBmB,GAAfub,EAAWvb,MACd+K,KAAK6lF,GAAoBvnF,MAAM01D,QAAU,GACzCmtB,GAAiBnhF,KAAK2lF,GAAkBn1E,EAAW8B,YAEnDtS,KAAK6lF,GAAoBvnF,MAAM01D,QAAU,OAEvB,GAAfxjD,EAAWvb,MACd+K,KAAK4lF,GAAmBtnF,MAAM01D,QAAU,OACxCh0D,KAAK2oF,GAAarqF,MAAM01D,QAAU,GAClCh0D,KAAK0oF,GAAgBzlC,UAErBjjD,KAAK2oF,GAAarqF,MAAM01D,QAAU,OAEhB,GAAfxjD,EAAWvb,MACd+K,KAAK4lF,GAAmBtnF,MAAM01D,QAAU,OACxCh0D,KAAK6oF,GAAcvqF,MAAM01D,QAAU,GACnCh0D,KAAK4oF,GAAiB3lC,UAEtBjjD,KAAK6oF,GAAcvqF,MAAM01D,QAAU,OAEjB,GAAfxjD,EAAWvb,KAAgC,CAC9C+K,KAAK4lF,GAAmBtnF,MAAM01D,QAAU,OACxCh0D,KAAK8oF,GAAcxqF,MAAM01D,QAAU,GACnCh0D,KAAKgmF,GAAe1nF,MAAM01D,QAAU,OACpCh0D,KAAKqmF,GAAyB/nF,MAAM01D,QAAU,OAC9Ch0D,KAAKqnF,GAAgB/oF,MAAM01D,QAAU,OACrCh0D,KAAK0nF,GAAoBppF,MAAM01D,QAAU,OACzCh0D,KAAKwmF,GAAiBloF,MAAM01D,QAAU,OACtCh0D,KAAK0mF,GAAoBpoF,MAAM01D,QAAU,OACzCh0D,KAAK4mF,GAAmBtoF,MAAM01D,QAAU,OACxC,IAAK,IAAI1lE,EAAY,EAAGA,EAAIJ,EAAOyK,UAAWrK,IAC7C6yF,GAAiBnhF,KAAKorF,GAAwB98F,GAAIkiB,EAAWgD,iBAAiBllB,IAC9E0R,KAAKmrF,GAAwB78F,GAAG20D,cAGjCjjD,KAAK8oF,GAAcxqF,MAAM01D,QAAU,OACnCh0D,KAAKgmF,GAAe1nF,MAAM01D,QAAU,GACpCh0D,KAAKqmF,GAAyB/nF,MAAM01D,QAAWh0D,KAAK+rF,GAA0B,GAAK,OACnF/rF,KAAKqnF,GAAgB/oF,MAAM01D,QAAU,GACrCh0D,KAAK0nF,GAAoBppF,MAAM01D,QAAWh0D,KAAK8rF,IAA0C,GAApBt7E,EAAWzV,MAAa,GAAK,OAClGiF,KAAKonF,GAAe9oF,MAAM01D,QAA+B,GAApBxjD,EAAWzV,MAAa,GAAK,OAClEiF,KAAKwmF,GAAiBloF,MAAM01D,QAAU,GACtCh0D,KAAK0mF,GAAoBpoF,MAAM01D,QAAU,GACzCh0D,KAAK4mF,GAAmBtoF,MAAM01D,QAAU,GA4BzC,GA1BmB,GAAfxjD,EAAWvb,OACd+K,KAAK4lF,GAAmBtnF,MAAM01D,QAAU,GACxCmtB,GAAiBnhF,KAAK0lF,GAAiBl1E,EAAW6B,WAGhC,GAAf7B,EAAWvb,MACd+K,KAAKwpF,GAAgBlrF,MAAM01D,QAAU,GACrCh0D,KAAK4lF,GAAmBtnF,MAAM01D,QAAU,QAGxCh0D,KAAKwpF,GAAgBlrF,MAAM01D,QAAU,OAGnB,GAAfxjD,EAAWvb,MACd+K,KAAK4lF,GAAmBtnF,MAAM01D,QAAU,OACxCh0D,KAAK8mF,GAAkBxoF,MAAM01D,QAAU,GACvCh0D,KAAKgnF,GAAe1oF,MAAM01D,QAAU,GACpCh0D,KAAK+mF,GAAkBrnC,MAAM3jC,MAAQtiB,EAAa+W,EAAWxU,YAAc,IAC3EmlF,GAAiBnhF,KAAK6mF,GAAsBr2E,EAAWvU,eACvD+D,KAAK+mF,GAAkBoG,YAAY38E,EAAWxU,cAE9CgE,KAAK8mF,GAAkBxoF,MAAM01D,QAAU,OACvCh0D,KAAKgnF,GAAe1oF,MAAM01D,QAAU,QAIlB,GAAfxjD,EAAWvb,KAA2B,CACzC+K,KAAKokF,GAAoB9lF,MAAM01D,QAAU,GACzCh0D,KAAKuoF,GAAejqF,MAAM01D,QAAU,GACpCh0D,KAAKyoF,GAAcnqF,MAAM01D,QAAU,GACnCh0D,KAAK4pF,GAActrF,MAAM01D,QAAU,GACnCh0D,KAAK4lF,GAAmBtnF,MAAM01D,QAAU,OACxCmtB,GAAiBnhF,KAAKmkF,GAAkB3zE,EAAWlV,WACnD6lF,GAAiBnhF,KAAKwoF,GAAqBh4E,EAAWjV,cACtDyE,KAAK0pF,GAAyByD,YAAY38E,EAAWhV,mBACrD2lF,GAAiBnhF,KAAK2pF,GAAyBn5E,EAAW/U,kBAC1DuE,KAAK2pF,GAAwB9S,cAAev4E,MAAM6nE,MAAS31D,EAAWhV,kBAAoB,EAAK,GAAKuE,EAAYyH,cAChH,IAAK,IAAIlZ,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IAAK,CACtD,MAAMmgG,EAAsBngG,EAAIJ,EAAO0I,WAAW4Z,EAAWlV,WAAWzE,aACxEmJ,KAAK+qF,GAAcz8F,GAAGgQ,MAAM6nE,MAAQsoB,EAAY1uF,EAAYwH,YAAc,GAC1E45E,GAAiBnhF,KAAKkrF,GAA0B58F,GAAIkiB,EAAW9U,UAAUpN,GAAGqN,WAC5EqE,KAAKgrF,GAA0B18F,GAAG6+F,YAAY38E,EAAW9U,UAAUpN,GAAGwC,WACtEqwF,GAAiBnhF,KAAKirF,GAAyB38F,GAAIkiB,EAAW9U,UAAUpN,GAAGsN,UAC3E,MAAM8yF,GAAwBD,EAAY,SAAW,eAAiBngG,EAAI,GAC1E0R,KAAKkrF,GAA0B58F,GAAGytB,MAAQ2yE,EAAe,aACzD1uF,KAAKgrF,GAA0B18F,GAAGoxD,MAAM3jC,MAAQ2yE,GAAgBD,EAAY,UAAY,cACxFzuF,KAAKirF,GAAyB38F,GAAGytB,MAAQ2yE,EAAe,YACxD1uF,KAAKirF,GAAyB38F,GAAGuoF,cAAev4E,MAAM6nE,MAAS31D,EAAW9U,UAAUpN,GAAGwC,UAAY,EAAK,GAAKiP,EAAYyH,oBAI1HxH,KAAKokF,GAAoB9lF,MAAM01D,QAAU,OACzCh0D,KAAKuoF,GAAejqF,MAAM01D,QAAU,OACpCh0D,KAAKyoF,GAAcnqF,MAAM01D,QAAU,OACnCh0D,KAAK4pF,GAActrF,MAAM01D,QAAU,OAGjB,GAAfxjD,EAAWvb,MACd+K,KAAK4lF,GAAmBtnF,MAAM01D,QAAU,OACxCh0D,KAAK6nF,GAAkBvpF,MAAM01D,QAAU,OACvCh0D,KAAKsoF,GAAsBhqF,MAAM01D,QAAU,OAC3Ch0D,KAAKknF,GAAmB5oF,MAAM01D,QAAU,QACf,GAAfxjD,EAAWvb,MACrB+K,KAAK6nF,GAAkBvpF,MAAM01D,QAAU,OACvCh0D,KAAKknF,GAAmB5oF,MAAM01D,QAAU,OACxCh0D,KAAKsoF,GAAsBhqF,MAAM01D,QAAU,SAE3Ch0D,KAAK6nF,GAAkBvpF,MAAM01D,QAAU,GAEpB,GAAfxjD,EAAWvb,MAAkD,GAAfub,EAAWvb,MAA4C,GAAfub,EAAWvb,KACpG+K,KAAKknF,GAAmB5oF,MAAM01D,QAAU,OAGxCh0D,KAAKknF,GAAmB5oF,MAAM01D,QAAU,GAEzCh0D,KAAKsoF,GAAsBhqF,MAAM01D,QAAWh0D,KAAK6rF,GAAuB,GAAK,aAI/E,IAAK,IAAIuC,EAAqB,EAAGA,EAAalgG,EAAOkI,OAAO7H,OAAQ6/F,IAAc,CACjF,MAAM9K,GAAmBp1F,EAAO4F,iCAAiC0c,EAAWvb,OAAQ/G,EAAOkI,OAAOg4F,GAAY53F,iBACxGqpD,EAAkB7/C,KAAKmnF,GAAaljC,SAASmqC,GAC/C9K,EACEzjC,EAAOwuC,aAAa,WACxBxuC,EAAOhiD,aAAa,SAAU,IAG/BgiD,EAAOrhD,gBAAgB,UAIzBwB,KAAKgqF,GAAyB1rF,MAAM6nE,MAAQpmE,EAAYW,gBAAgBV,KAAK+mC,EAAK5mC,KAAMH,KAAK+mC,EAAK3mC,SAASa,YAE3GjB,KAAKumF,GAAoB4G,YAAY38E,EAAW+B,cAChDvS,KAAKymF,GAAuB0G,YAAY38E,EAAWvV,iBACnDkmF,GAAiBnhF,KAAK2mF,GAAuBn2E,EAAWtV,gBACxDimF,GAAiBnhF,KAAK8lF,GAAmBt1E,EAAW3V,YACpDsmF,GAAiBnhF,KAAKsmF,GAAgB91E,EAAW1V,SACjDqmF,GAAiBnhF,KAAK2nF,GAAgBn3E,EAAWpV,SACjD+lF,GAAiBnhF,KAAKooF,GAAoB53E,EAAWmC,aACrDwuE,GAAiBnhF,KAAKinF,GAAiBz2E,EAAWrV,UAClDgmF,GAAiBnhF,KAAKmnF,GAAc32E,EAAWzV,OAC/CiF,KAAKilF,GAAmBpzF,MAAQ2e,EAAWoC,IAAM,GACjD5S,KAAKwlF,GAAsB3zF,MAAQ2e,EAAW0C,OAAS,GACvDlT,KAAKykF,GAAwB0I,YAAY38E,EAAWxc,QACpDgM,KAAK0kF,GAAgC7yF,MAAQ,GAAM2e,EAAiB,OACpExQ,KAAK8nF,GAAoBqF,YAAYp+F,KAAKgb,MAAgC,GAA1ByG,EAAWgC,eAC3DxS,KAAKkoF,GAAoBiF,YAAY38E,EAAWkC,cAChD1S,KAAKgoF,GAAoBmF,YAAY38E,EAAWiC,cAChD0uE,GAAiBnhF,KAAKooF,GAAoB53E,EAAWmC,aACrD3S,KAAKsnF,GAAqB6F,YAAY38E,EAAWsC,eACjD9S,KAAKolF,GAAgB+H,YAAY38E,EAAWqC,UAC5C7S,KAAKkoF,GAAoBxoC,MAAM3jC,MAAQ,GAAKvL,EAAWkC,aACvD1S,KAAK8nF,GAAoBpoC,MAAM3jC,MAAQ,GAAKvL,EAAWgC,aACvDxS,KAAKgoF,GAAoBtoC,MAAM3jC,MAAQ,GAAKvL,EAAWiC,aACvDzS,KAAKolF,GAAgB1lC,MAAM3jC,MAAQ,GAAKvL,EAAWqC,SACnD7S,KAAKsnF,GAAqB5nC,MAAM3jC,MAAQ,IAAMtiB,EAAavL,EAAOoH,cAAckb,EAAWsC,gBAExE,GAAftC,EAAWvb,OACd+K,KAAKmpF,GAAsB7G,eAEvBtiF,KAAKmhD,kBAAkB+C,IAC1BlkD,KAAKmhD,OAAOiD,iBAAiBnB,UAibhC,GAFAjjD,KAAKwkF,GAAqBlmF,MAAM01D,QAAWh0D,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,EAAK,GAAK,OAC5F9b,KAAKwkF,GAAqBlmF,MAAM0sC,WAAyB,MAAX9uB,EAAmB,SAAW,GACxElc,KAAKukF,GAAkBtgC,SAAS11D,QAAUyR,KAAK+mC,EAAK5mC,KAAK2b,sBAAuB,CACnF,KAAO9b,KAAKukF,GAAkBjlF,YAAYU,KAAKukF,GAAkBx3E,YAAY/M,KAAKukF,GAAkBjlF,YACpG,MAAMyuF,EAA2B,GACjC,IAAK,IAAIz/F,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAK5mC,KAAK2b,sBAAuBxtB,IACjEy/F,EAAep/F,KAAKL,EAAI,GAEzBkyF,GAAaxgF,KAAKukF,GAAmBwJ,GAGtC/tF,KAAKgqF,GAAyB1rF,MAAM6nE,MAAQpmE,EAAYW,gBAAgBV,KAAK+mC,EAAK5mC,KAAMH,KAAK+mC,EAAK3mC,SAASa,YAE3GjB,KAAKumF,GAAoB4G,YAAY38E,EAAW+B,cAChDvS,KAAKymF,GAAuB0G,YAAY38E,EAAWvV,iBACnDkmF,GAAiBnhF,KAAK2mF,GAAuBn2E,EAAWtV,gBACxDimF,GAAiBnhF,KAAK8lF,GAAmBt1E,EAAW3V,YACpDsmF,GAAiBnhF,KAAKsmF,GAAgB91E,EAAW1V,SACjDqmF,GAAiBnhF,KAAK2nF,GAAgBn3E,EAAWpV,SACjD+lF,GAAiBnhF,KAAKooF,GAAoB53E,EAAWmC,aACrDwuE,GAAiBnhF,KAAKinF,GAAiBz2E,EAAWrV,UAClDgmF,GAAiBnhF,KAAKmnF,GAAc32E,EAAWzV,OAC/CiF,KAAKykF,GAAwB0I,YAAY38E,EAAWxc,QACpDgM,KAAK6kF,GAAWsI,YAAY38E,EAAWoC,KACvC5S,KAAKulF,GAAc4H,YAAY38E,EAAW0C,QAC1ClT,KAAKwnF,GAAex8B,UAAUx6C,EAAWuC,eACzC/S,KAAKimF,GAAsBj7B,UAAUx6C,EAAWwC,kBAChDhT,KAAKmmF,GAAwBn7B,UAAUx6C,EAAWyC,oBAClDkuE,GAAiBnhF,KAAKukF,GAAmBpnE,GAEzCnd,KAAKijF,GAAckK,YAAYntF,KAAK+mC,EAAK/yC,QAIrCi5F,GAA8B,MAAjBZ,GAAsD,GAA7BA,EAAcz/E,aACvD5M,KAAKwnE,eAGNxnE,KAAK2uF,GAAW3uF,KAAK+mC,EAAKoa,QAEtBnhD,KAAK+mC,EAAKu+B,aAAetlE,KAAK+mC,EAAKzN,MAAM7L,SAC5CztB,KAAK+mC,EAAKzN,MAAMs1D,QAAQ5uF,KAAK+mC,EAAK5qB,MAkB5Bnc,KAAA6uF,GAAc5lD,IACrBjpC,KAAK4iF,GAAYkM,QAAQ7lD,GACJ,IAAjBA,EAAM8X,QACT/gD,KAAKyiF,GAAe3Y,aAAc,EAET,IAAjB7gC,EAAM8X,UACd/gD,KAAKyiF,GAAe1Y,WAAY,IAI1B/pE,KAAA+uF,GAAkC9lD,IAGzC,OAAQA,EAAM8X,SACb,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACJ9X,EAAMia,oBAKDljD,KAAA6gD,GAAmB5X,IAC1B,GAAIjpC,KAAKmhD,OAQR,OAPInhD,KAAKmhD,kBAAkB+C,IAAoBlkD,KAAKmhD,kBAAkBkhB,KACrEriE,KAAKmhD,OAAOuD,eAAezb,QAEP,IAAjBA,EAAM8X,SAET/gD,KAAK+mC,EAAKqF,QAMZ,GAAIrvC,SAASsvF,eAAiBrsF,KAAKypF,GAAmB/pC,OAAS1/C,KAAKyiF,GAAenX,iBAAmBvuE,SAASsvF,eAAiBrsF,KAAK4iF,GAAYxc,GAAkB1mB,MAE7I,IAAjBzW,EAAM8X,SAAkC,IAAjB9X,EAAM8X,UAChC/gD,KAAK2qF,UAAUnpC,QACfxhD,KAAKyiF,GAAelR,oBAAqC,IAAjBtoC,EAAM8X,eAOhD,GAAIhkD,SAASsvF,eAAiBrsF,KAAKilF,IAAsBloF,SAASsvF,eAAiBrsF,KAAKwlF,IAAyBzoF,SAASsvF,eAAiBrsF,KAAK0kF,GAUhJ,OAAQz7C,EAAM8X,SACb,KAAK,GACJ,IAAIvG,GAAuBx6C,KAAK+mC,EAAM,EAAG,GACzC/mC,KAAK+mC,EAAK0T,UAAUC,oBACpB,MACD,KAAK,GACJ16C,KAAKyiF,GAAe1Y,WAAY,EAChC,MACD,KAAK,GACJ/pE,KAAKyiF,GAAe3Y,aAAc,EAClC,MACD,KAAK,GAEA7gC,EAAM+lD,SAAW/lD,EAAM6lC,UACrB9uE,KAAK+mC,EAAKzN,MAAM7L,SACpBztB,KAAKskD,KAENtkD,KAAK2iF,GAAasM,sBAClBjvF,KAAKyiF,GAAewM,uBAGpBjvF,KAAKskD,KAENrb,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,SACT9uE,KAAK+mC,EAAKoF,OAEVnsC,KAAK+mC,EAAKqF,OAEXnD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAKoF,OACVlD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAUoB,OACpB,IAAIrB,GAAuBx6C,KAAK+mC,EAAM,EAAG,GACzC/mC,KAAK+mC,EAAK0T,UAAUC,oBAEpBzR,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAU6jC,aACpBr1C,EAAMQ,iBACN,MACD,KAAK,EACJzpC,KAAK+mC,EAAK0T,UAAU+jC,aACpBx+E,KAAKu+E,GAAcz1C,kBACnBG,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,SACT9uE,KAAK+mC,EAAK0T,UAAUy0C,gBAEpBlvF,KAAK+mC,EAAK0T,UAAU00C,YAErBlmD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAU20C,oBACpBnmD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAKzN,MAAM+1D,WAChBrvF,KAAKu+E,GAAcz1C,kBACf9oC,KAAK+mC,EAAKu+B,YACb,IAAIjzB,GAAiBryC,KAAK+mC,EAAM/mC,KAAK+mC,EAAK3mC,QAASrR,KAAKmU,MAAMlD,KAAK+mC,EAAKzN,MAAMhyB,WAE/E2hC,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAKzN,MAAMg2D,iBAAiBtvF,KAAK+mC,EAAK5qB,KAC3Cnc,KAAKu+E,GAAcz1C,kBACnB,IAAIuJ,GAAiBryC,KAAK+mC,EAAM/mC,KAAK+mC,EAAK3mC,QAASrR,KAAKmU,MAAMlD,KAAK+mC,EAAKzN,MAAMhyB,WAC9E2hC,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,UACT9uE,KAAKskF,GAAY,mBAKlB,MACD,KAAK,GACAtkF,KAAK+mC,EAAK+gC,sBACb9nE,KAAK+mC,EAAK0T,UAAU80C,aAAatmD,EAAM6lC,UACvC7lC,EAAMQ,kBAEP,MACD,KAAK,GAIJ,MAAMwX,EAAqB,IAAIrV,GAE/B,GAAI3C,EAAM6lC,UAAY7lC,EAAM+lD,QAAS,CACpC,IAAIQ,EAAoB,EACxB,KAAOA,EAAYxvF,KAAK+mC,EAAK5mC,KAAKyb,oBAAsB5b,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASyX,SAAS23E,GAAWj/E,MAAMhiB,OAAS,GACrIihG,IAEDA,IAGIA,GAAathG,EAAOgF,cAEnBs8F,EAAYxvF,KAAK+mC,EAAK5mC,KAAKyb,oBAG9BqlC,EAAM/S,OAAO,IAAIoI,GAAyBt2C,KAAK+mC,EAAMyoD,IAItDvuC,EAAM/S,OAAO,IAAIyC,GAAqB3wC,KAAK+mC,EAAMyoD,EAAWxvF,KAAK+mC,EAAK5qB,IAAKnc,KAAK+mC,EAAK3mC,QAAS,EAAG,SAK9F,CACJ,IAAIqvF,EAAqB,EACzB,MAA+E,GAAxEzvF,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAAS0X,KAAKnD,QAAQ86E,IAC3DA,GAAczvF,KAAK+mC,EAAK5mC,KAAKyb,oBAChC6zE,IAGGA,GAAcvhG,EAAOgF,cAEpBu8F,EAAazvF,KAAK+mC,EAAK5mC,KAAKyb,oBAG/BqlC,EAAM/S,OAAO,IAAIoI,GAAyBt2C,KAAK+mC,EAAM0oD,IAItDxuC,EAAM/S,OAAO,IAAIyC,GAAqB3wC,KAAK+mC,EAAM0oD,EAAYzvF,KAAK+mC,EAAK5qB,IAAKnc,KAAK+mC,EAAK3mC,QAAS,EAAG,KAMpGJ,KAAK+mC,EAAKqa,OAAOH,GAEjBhY,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAKskF,GAAY,mBACjB,MACD,KAAK,GACAtkF,KAAK+mC,EAAK+gC,sBACT7+B,EAAM6lC,SACT9uE,KAAK+mC,EAAK0T,UAAU80C,cAAa,GAEjCvvF,KAAK+mC,EAAK0T,UAAUi1C,eAErBzmD,EAAMQ,kBAEP,MACD,KAAK,GACAR,EAAM6lC,SACT9uE,KAAK+mC,EAAK0T,UAAUk1C,eAEpB3vF,KAAK+mC,EAAK0T,UAAUm1C,aAErB3mD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAKskF,GAAY,qBACjB,MACD,KAAK,GACJ,GAAIr7C,EAAM6lC,SAAU,CACnB,MACM36D,EADyBnU,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBACvD7rB,sBAClCnP,EAAyB,cACzBA,EAAsB,WACtBA,EAAyB,OAChCnU,KAAK6vF,GAAqBrwE,KAAKmzC,UAAUx+C,IAE1C80B,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,SACT9uE,KAAK8vF,KAEL9vF,KAAK+vF,KAGN9mD,EAAMQ,iBAEN,MACD,KAAK,GACJzpC,KAAKskF,GAAY,gBACjB,MACD,KAAK,IACJtkF,KAAK+mC,EAAKzN,MAAM02D,UACZhwF,KAAK+mC,EAAKu+B,YACb,IAAIjzB,GAAiBryC,KAAK+mC,EAAM/mC,KAAK+mC,EAAK3mC,QAASrR,KAAKmU,MAAMlD,KAAK+mC,EAAKzN,MAAMhyB,WAE/EtH,KAAKu+E,GAAcz1C,kBACnBG,EAAMQ,iBACN,MACD,KAAK,IACJzpC,KAAK+mC,EAAKzN,MAAMozB,UACZ1sD,KAAK+mC,EAAKu+B,YACb,IAAIjzB,GAAiBryC,KAAK+mC,EAAM/mC,KAAK+mC,EAAK3mC,QAASrR,KAAKmU,MAAMlD,KAAK+mC,EAAKzN,MAAMhyB,WAE/EtH,KAAKu+E,GAAcz1C,kBACnBG,EAAMQ,iBACN,MACD,KAAK,IACL,KAAK,IACJzpC,KAAK+mC,EAAK0T,UAAU2C,WAAU,EAAOnU,EAAM6lC,UAAY7lC,EAAM+lD,SAC7D/lD,EAAMQ,iBACN,MACD,KAAK,IACL,KAAK,GACL,KAAK,IACJzpC,KAAK+mC,EAAK0T,UAAU2C,WAAU,EAAMnU,EAAM6lC,UAAY7lC,EAAM+lD,SAC5D/lD,EAAMQ,iBACN,MACD,KAAK,GACJ,GAAIR,EAAM+lD,QAAS,CAElB,GAAyB,GAArBhvF,KAAK+mC,EAAK3mC,SAAgBJ,KAAK+mC,EAAK3mC,SAAWJ,KAAK+mC,EAAK5mC,KAAKe,mBAAqBlB,KAAK+mC,EAAK3mC,SAAWJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAC7J,MAEDpB,KAAK+mC,EAAKqa,OAAO,IAAI/P,GAAmBrxC,KAAK+mC,EAAM/mC,KAAK+mC,EAAK3mC,QAAU,EAAGJ,KAAK+mC,EAAK3mC,UAAU,GAC9FJ,KAAK+mC,EAAK0T,UAAU0kC,cAAen/E,KAAK+mC,EAAK3mC,QAAU,EAAIJ,KAAK+mC,EAAK5qB,UAE7D8sB,EAAM6lC,UACd9uE,KAAK+mC,EAAK0T,UAAUqC,eAAiB/tD,KAAKmgB,IAAI,EAAGlP,KAAK+mC,EAAK0T,UAAUqC,eAAiB,GACtF98C,KAAK+mC,EAAK0T,UAAUykC,qBAEpBl/E,KAAK+mC,EAAK0T,UAAU0kC,eAAen/E,KAAK+mC,EAAK3mC,QAAU,EAAIJ,KAAK+mC,EAAK5mC,KAAK8b,mBAAqBjc,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBjc,KAAK+mC,EAAK5qB,KAC3Inc,KAAK+mC,EAAK0T,UAAUC,qBAErBzR,EAAMQ,iBACN,MACD,KAAK,GACJ,GAAIR,EAAM+lD,QAAS,CAElB,GAAIhvF,KAAK+mC,EAAK3mC,SAAWJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoB,GAAKlB,KAAK+mC,EAAK3mC,SAAWJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAoB,GAAKpB,KAAK+mC,EAAK3mC,SAAWJ,KAAK+mC,EAAK5mC,KAAK8b,kBAAoB,EACxN,MAEDjc,KAAK+mC,EAAKqa,OAAO,IAAI/P,GAAmBrxC,KAAK+mC,EAAM/mC,KAAK+mC,EAAK3mC,QAASJ,KAAK+mC,EAAK3mC,QAAU,IAAI,GAC9FJ,KAAK+mC,EAAK0T,UAAU0kC,cAAen/E,KAAK+mC,EAAK3mC,QAAU,EAAIJ,KAAK+mC,EAAK5qB,UAE7D8sB,EAAM6lC,UACd9uE,KAAK+mC,EAAK0T,UAAUqC,eAAiB/tD,KAAKyB,IAAIwP,KAAK+mC,EAAK5mC,KAAK8b,kBAAoB,EAAGjc,KAAK+mC,EAAK0T,UAAUqC,eAAiB,GACzH98C,KAAK+mC,EAAK0T,UAAUykC,qBAEpBl/E,KAAK+mC,EAAK0T,UAAU0kC,eAAen/E,KAAK+mC,EAAK3mC,QAAU,GAAKJ,KAAK+mC,EAAK5mC,KAAK8b,kBAAmBjc,KAAK+mC,EAAK5qB,KACxGnc,KAAK+mC,EAAK0T,UAAUC,qBAErBzR,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,UACT9uE,KAAK+mC,EAAK0T,UAAUmC,eAAiB7tD,KAAKmgB,IAAI,EAAGlP,KAAK+mC,EAAK0T,UAAUmC,eAAiB,GACtF58C,KAAK+mC,EAAK0T,UAAUw1C,oBACpBjwF,KAAK+mC,EAAK0T,UAAUykC,qBAEpBl/E,KAAK+mC,EAAK0T,UAAU0kC,cAAcn/E,KAAK+mC,EAAK3mC,SAAUJ,KAAK+mC,EAAK5qB,IAAMnc,KAAK+mC,EAAK5mC,KAAKwb,SAAW,GAAK3b,KAAK+mC,EAAK5mC,KAAKwb,UACpH3b,KAAK+mC,EAAK0T,UAAUC,qBAErBzR,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,UACT9uE,KAAK+mC,EAAK0T,UAAUmC,eAAiB7tD,KAAKyB,IAAIwP,KAAK+mC,EAAK5mC,KAAKwb,SAAW,EAAG3b,KAAK+mC,EAAK0T,UAAUmC,eAAiB,GAChH58C,KAAK+mC,EAAK0T,UAAUw1C,oBACpBjwF,KAAK+mC,EAAK0T,UAAUykC,qBAEpBl/E,KAAK+mC,EAAK0T,UAAU0kC,cAAcn/E,KAAK+mC,EAAK3mC,SAAUJ,KAAK+mC,EAAK5qB,IAAM,GAAKnc,KAAK+mC,EAAK5mC,KAAKwb,UAC1F3b,KAAK+mC,EAAK0T,UAAUC,qBAErBzR,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAUx7B,OAAS,GAC7Bjf,KAAK+mC,EAAK0T,UAAUy1C,UAAU,KAAK,GACnC,MACD,KAAK,GACJlwF,KAAK+mC,EAAK0T,UAAUy1C,UAAU,IAAKjnD,EAAM6lC,UAAY7lC,EAAM+lD,SAC3D/lD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAUy1C,UAAU,IAAKjnD,EAAM6lC,UAAY7lC,EAAM+lD,SAC3D/lD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAUy1C,UAAU,IAAKjnD,EAAM6lC,UAAY7lC,EAAM+lD,SAC3D/lD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAUy1C,UAAU,IAAKjnD,EAAM6lC,UAAY7lC,EAAM+lD,SAC3D/lD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAUy1C,UAAU,IAAKjnD,EAAM6lC,UAAY7lC,EAAM+lD,SAC3D/lD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAUy1C,UAAU,IAAKjnD,EAAM6lC,UAAY7lC,EAAM+lD,SAC3D/lD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAUy1C,UAAU,IAAKjnD,EAAM6lC,UAAY7lC,EAAM+lD,SAC3D/lD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAUy1C,UAAU,IAAKjnD,EAAM6lC,UAAY7lC,EAAM+lD,SAC3D/lD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAUy1C,UAAU,IAAKjnD,EAAM6lC,UAAY7lC,EAAM+lD,SAC3D/lD,EAAMQ,iBACN,MACD,KAAK,GACJzpC,KAAK+mC,EAAK0T,UAAUy1C,UAAU,IAAKjnD,EAAM6lC,UAAY7lC,EAAM+lD,SAC3D/lD,EAAMQ,iBACN,MACD,QACCzpC,KAAK+mC,EAAK0T,UAAUx7B,OAAS,GAC7Bjf,KAAK+mC,EAAK0T,UAAU01C,iBAAmB,QA9UnB,IAAjBlnD,EAAM8X,SAAkC,IAAjB9X,EAAM8X,SAChC/gD,KAAK2qF,UAAUnpC,SAuWVxhD,KAAAowF,GAAsB,KAC7BpwF,KAAK+mC,EAAKzN,MAAM02D,UAChBhwF,KAAKu+E,GAAcz1C,mBAGZ9oC,KAAAqwF,GAAsB,KAC7BrwF,KAAK+mC,EAAKzN,MAAMozB,UAChB1sD,KAAKu+E,GAAcz1C,mBAGZ9oC,KAAAskD,GAAc,KACjBtkD,KAAK+mC,EAAKzN,MAAM7L,QACnBztB,KAAKukD,MAELvkD,KAAK+mC,EAAKzN,MAAM5I,YAChB1wB,KAAKykD,OAyBAzkD,KAAAswF,GAAW,KAEjBtwF,KAAKuwF,KAEDvwF,KAAK+mC,EAAKwlD,kBACbvsF,KAAK+iE,KAGN/iE,KAAKu+E,GAAcz1C,kBAEnBjoB,OAAOoiD,sBAAsBjjE,KAAKswF,KAG5BtwF,KAAA+iE,GAAgB,KACtB/iE,KAAK4iE,yBACD5iE,KAAK4iE,wBAA0B,IAClC5iE,KAAK6iE,sBAAwB,KAE1B7iE,KAAK+mC,EAAK5mC,KAAKwY,aAAe3Y,KAAK6iE,uBACtC7iE,KAAK6iE,qBAAuB7iE,KAAK+mC,EAAK5mC,KAAKwY,aAC3C3Y,KAAK4iE,uBAAyB,IAG3B5iE,KAAK+mC,EAAK5mC,KAAKwY,cAAgB3Y,KAAKgsF,mBACvChsF,KAAKgsF,iBAAmBhsF,KAAK+mC,EAAK5mC,KAAKwY,aACvC3Y,KAAKwwF,GAAexwF,KAAK+mC,EAAK5mC,KAAKwY,aAAc3Y,KAAK6iE,wBAShD7iE,KAAAywF,GAAmB,KAC1BzwF,KAAK+mC,EAAK2pD,UAAU15D,OAAOh3B,KAAKijF,GAAcvjC,MAAM7tD,SAgC7CmO,KAAA2wF,GAAgB,KACvB3wF,KAAK+mC,EAAKqa,OAAO,IAAI1H,GAAY15C,KAAK+mC,GAAO,EAAwC,EAArCkpB,SAASjwD,KAAK8jF,GAAcjyF,UAGrEmO,KAAA4wF,GAAgB,KACvB,GAAIptC,MAAuBxjD,KAAKyjF,GAAa5xF,OAAQ,CACpD,OAAQmO,KAAKyjF,GAAa5xF,OACzB,IAAK,aACJmO,KAAK+mC,EAAK0T,UAAUo2C,aAGtB7wF,KAAK+mC,EAAKwD,SAASC,eAEnBxqC,KAAK+mC,EAAKqa,OAAO,IAAIzH,GAAY35C,KAAK+mC,EAAM/mC,KAAKyjF,GAAahc,iBAIxDznE,KAAA8wF,GAAc,KACrB,GAAIttC,MAAuBxjD,KAAK2jF,GAAW9xF,OAAQ,CAClD,OAAQmO,KAAK2jF,GAAW9xF,OACvB,IAAK,YACJmO,KAAK+mC,EAAKqa,OAAO,IAAIxH,GAAgB55C,KAAK+mC,IAG5C/mC,KAAK+mC,EAAKwD,SAASC,eAEnBxqC,KAAK+mC,EAAKqa,OAAO,IAAItM,GAAU90C,KAAK+mC,EAAM74C,EAAOsE,KAAKjE,OAAS,EAAIyR,KAAK2jF,GAAWlc,iBAI7EznE,KAAA+wF,GAAiB,KACxB,GAAIvtC,MAAuBxjD,KAAKgkF,GAAcnyF,OAAQ,CACrD,OAAQmO,KAAKgkF,GAAcnyF,OAC1B,IAAK,cACJmO,KAAK+mC,EAAK0T,UAAUu2C,cAGtBhxF,KAAK+mC,EAAKwD,SAASC,eAEnBxqC,KAAK+mC,EAAKqa,OAAO,IAAI/L,GAAar1C,KAAK+mC,EAAM/mC,KAAKgkF,GAAcvc,iBAI3DznE,KAAAixF,GAAW,KAEjB,IAAIC,EAAUlxF,KACduhD,YAAW,WAAc2vC,EAAQvG,UAAUnpC,UAAY,KAGjDxhD,KAAAmxF,GAAwB,KAC9BnxF,KAAKoxF,GAAW/P,EAAE,sBAAsBlyE,MAAQ,KAG1CnP,KAAAqxF,GAAqB,KAC3BrxF,KAAKoxF,GAAW/P,EAAE,qBAAqBlyE,MAAQ,KAyBxCnP,KAAAsxF,GAAuB,KAC9BtxF,KAAK+mC,EAAKqa,OAAO,IAAIlN,GAAmBl0C,KAAK+mC,EAAM/mC,KAAKwoF,GAAoB/gB,iBAGrEznE,KAAAuxF,GAA2B,KAClCvxF,KAAK+mC,EAAKqa,OAAO,IAAIjN,GAAuBn0C,KAAK+mC,EAAM/mC,KAAK2pF,GAAwBliB,iBAG7EznE,KAAAwxF,GAAoB,KAC3BxxF,KAAK+mC,EAAKqa,OAAO,IAAInN,GAAgBj0C,KAAK+mC,EAAM/mC,KAAKmkF,GAAiB1c,iBAG/DznE,KAAAyxF,GAAqB,KAC5BzxF,KAAK+mC,EAAK0T,UAAUi3C,cAAc1xF,KAAKukF,GAAkB9c,eAGrDznE,KAAK+mC,EAAK3mC,SAAWJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,mBAC1EpB,KAAKsoE,GAAOc,eAINppE,KAAA2xF,GAAsB99E,IAC7B7T,KAAK+mC,EAAK0T,UAAUm3C,cAAc/9E,EAAK7T,KAAK4tF,GAAiB/5E,GAAK4zD,eAGlEznE,KAAKsoE,GAAOc,eAGLppE,KAAA6xF,GAAyBh+E,IAChC7T,KAAK+mC,EAAK0T,UAAUq3C,iBAAiBj+E,EAAK7T,KAAK8tF,GAAoBj6E,GAAK4zD,eAGxEznE,KAAKsoE,GAAOc,eAGLppE,KAAAmuF,GAAsBt6E,IAG7B7T,KAAK+mC,EAAK0T,UAAUs3C,cAAcl+E,EAAK7T,KAAKguF,GAAan6E,GAAKowC,SAASjkD,KAAKguF,GAAan6E,GAAK4zD,eAAerhE,aAS7GpG,KAAKsoE,GAAOc,eAQLppE,KAAAgyF,GAAmB,KAC1BhyF,KAAK+mC,EAAKqa,OAAO,IAAI/B,GAAer/C,KAAK+mC,EAAM/mC,KAAK0lF,GAAgBje,iBAG7DznE,KAAAiyF,GAAoB,KAC3BjyF,KAAK+mC,EAAKqa,OAAO,IAAI9B,GAAgBt/C,KAAK+mC,EAAM/mC,KAAK2lF,GAAiBle,iBAG/DznE,KAAAkyF,GAAyB,KAChClyF,KAAK+mC,EAAKqa,OAAO,IAAIpN,GAAqBh0C,KAAK+mC,EAAM/mC,KAAK2mF,GAAsBlf,iBAGzEznE,KAAAmyF,GAAwB,KAC/BnyF,KAAK+mC,EAAKqa,OAAO,IAAIvN,GAAoB7zC,KAAK+mC,EAAM/mC,KAAK6mF,GAAqBpf,iBAGvEznE,KAAAoyF,GAAqB,KAC5BpyF,KAAK+mC,EAAKqa,OAAO,IAAI3Q,GAAiBzwC,KAAK+mC,EAAM/mC,KAAK8lF,GAAkBre,iBAGjEznE,KAAAqyF,GAAkB,KACzBryF,KAAK+mC,EAAKqa,OAAO,IAAI1Q,GAAc1wC,KAAK+mC,EAAM/mC,KAAKsmF,GAAe7e,iBAG3DznE,KAAAsyF,GAAkB,KACzBtyF,KAAK+mC,EAAKqa,OAAO,IAAI1O,GAAc1yC,KAAK+mC,EAAM/mC,KAAK2nF,GAAelgB,iBAG3DznE,KAAAuyF,GAAsB,KAC7BvyF,KAAK+mC,EAAKqa,OAAO,IAAInO,GAAkBjzC,KAAK+mC,EAAM/mC,KAAKooF,GAAmB3gB,iBAGnEznE,KAAAwyF,GAAmB,KAC1BxyF,KAAK+mC,EAAKqa,OAAO,IAAI5O,GAAexyC,KAAK+mC,EAAM/mC,KAAKinF,GAAgBxf,iBAG7DznE,KAAAyyF,GAAgB,KACvBzyF,KAAK+mC,EAAKqa,OAAO,IAAI3O,GAAYzyC,KAAK+mC,EAAM/mC,KAAKmnF,GAAa1f,iBAGvDznE,KAAA0yF,GAAoBzpD,IAC3B,OAAQjpC,KAAKqjF,GAAUxxF,OACtB,IAAK,MACJmO,KAAK+mC,EAAK6uB,gBACV,IAAK,MAAMx1D,KAAWJ,KAAK+mC,EAAK5mC,KAAK+X,SAAU9X,EAAQ2X,OAAQ,EAC/D/X,KAAK+mC,EAAKqa,OAAO,IAAI9G,GAAWt6C,KAAK+mC,EAAM,KAAK,GAAO,GACvD,MACD,IAAK,SACJ/mC,KAAKskF,GAAY,UACjB,MACD,IAAK,SACJtkF,KAAKskF,GAAY,UACjB,MACD,IAAK,UACJtkF,KAAK6vF,GAAqB,IAAIzmC,IAAI,IAAMppD,KAAK+mC,EAAK5mC,KAAKwyF,iBAAkBhpC,SAASJ,MAAMA,MACxF,MACD,IAAK,WACEhwD,UAAWq5F,MAAM,CAAEzpC,IAAK,IAAIC,IAAI,IAAMppD,KAAK+mC,EAAK5mC,KAAKwyF,iBAAkBhpC,SAASJ,MAAMA,OAC5F,MACD,IAAK,aACJ1oC,OAAO6oC,KAAK,0CAA4CltC,mBAAmB,IAAI4sC,IAAI,IAAMppD,KAAK+mC,EAAK5mC,KAAKwyF,iBAAkBhpC,SAASJ,MAAMA,OACzI,MACD,IAAK,aACJI,SAASJ,KAAO,gBAAkBvpD,KAAK+mC,EAAK5mC,KAAKwyF,iBACjD,MACD,IAAK,YACJ3yF,KAAK6vF,GAAqB,8DAA8D,IAAIzmC,IAAI,gBAAkBppD,KAAK+mC,EAAK5mC,KAAKwyF,iBAAkBhpC,SAASJ,MAAMA,mBAClK,MACD,IAAK,eACJvpD,KAAKskF,GAAY,gBAGnBtkF,KAAKqjF,GAAU5b,cAAgB,GAGxBznE,KAAA6yF,GAAoB5pD,IAC3B,OAAQjpC,KAAKujF,GAAU1xF,OACtB,IAAK,OACJmO,KAAK+mC,EAAKqF,OACV,MACD,IAAK,OACJpsC,KAAK+mC,EAAKoF,OACV,MACD,IAAK,OACJnsC,KAAK+mC,EAAK0T,UAAUoB,OACpB,MACD,IAAK,aACJ77C,KAAK+mC,EAAK0T,UAAU6jC,aACpB,MACD,IAAK,aACJt+E,KAAK+mC,EAAK0T,UAAU+jC,aACpB,MACD,IAAK,aACJx+E,KAAK+mC,EAAK0T,UAAUm1C,aACpB,MACD,IAAK,eACJ5vF,KAAK+mC,EAAK0T,UAAUk1C,eACpB,MACD,IAAK,cACJ3vF,KAAK+mC,EAAK0T,UAAU2C,WAAU,GAAM,GACpC,MACD,IAAK,gBACJp9C,KAAK+mC,EAAK0T,UAAU2C,WAAU,GAAO,GACrC,MACD,IAAK,YACJp9C,KAAK+mC,EAAK0T,UAAU00C,YACpB,MACD,IAAK,gBACJnvF,KAAK+mC,EAAK0T,UAAUy0C,gBACpB,MACD,IAAK,oBACJlvF,KAAK+mC,EAAK0T,UAAU20C,oBACpB,MACD,IAAK,eACJpvF,KAAKskF,GAAY,gBACjB,MAOD,IAAK,oBACJtkF,KAAKskF,GAAY,qBACjB,MACD,IAAK,kBACJtkF,KAAKskF,GAAY,mBACjB,MACD,IAAK,kBACJtkF,KAAKskF,GAAY,mBAGnBtkF,KAAKujF,GAAU9b,cAAgB,GAGxBznE,KAAA8yF,GAAuB7pD,IAC9B,OAAQjpC,KAAKwjF,GAAa3xF,OACzB,IAAK,WACJmO,KAAK+mC,EAAKgmD,UAAY/sF,KAAK+mC,EAAKgmD,SAChC,MACD,IAAK,aACJ/sF,KAAK+mC,EAAKu+B,YAActlE,KAAK+mC,EAAKu+B,WAClC,MACD,IAAK,oBACJtlE,KAAK+mC,EAAKmoC,mBAAqBlvE,KAAK+mC,EAAKmoC,kBACzC,MACD,IAAK,cACJlvE,KAAK+mC,EAAKgvC,aAAe/1E,KAAK+mC,EAAKgvC,YACnC,MACD,IAAK,YACJ/1E,KAAK+mC,EAAKgtB,WAAa/zD,KAAK+mC,EAAKgtB,UACjC,MACD,IAAK,eACJ/zD,KAAK+mC,EAAK4sC,cAAgB3zE,KAAK+mC,EAAK4sC,aACpC,MACD,IAAK,gBACJ3zE,KAAK+mC,EAAKulD,eAAiBtsF,KAAK+mC,EAAKulD,cACrC,MACD,IAAK,oBACJtsF,KAAK+mC,EAAKisC,mBAAqBhzE,KAAK+mC,EAAKisC,kBACzC,MACD,IAAK,sBACJhzE,KAAK+mC,EAAK+gC,qBAAuB9nE,KAAK+mC,EAAK+gC,oBAC3C,IAAK,MAAM1nE,KAAWJ,KAAK+mC,EAAK5mC,KAAK+X,SAAU9X,EAAQ2X,OAAQ,EAC/D,MACD,IAAK,oBACJ/X,KAAK+mC,EAAKgsD,0BACV,MACD,IAAK,mBACJ/yF,KAAK+mC,EAAKwlD,kBAAoBvsF,KAAK+mC,EAAKwlD,iBACxC,MACD,IAAK,aACJvsF,KAAKskF,GAAY,UACjB,MACD,IAAK,aACJtkF,KAAKskF,GAAY,SAGnBtkF,KAAKwjF,GAAa/b,cAAgB,EAClCznE,KAAK+mC,EAAKwD,SAASC,UACnBxqC,KAAK+mC,EAAKisD,mBAGHhzF,KAAAizF,GAA4BhqD,IAGnC,IAAIiqD,EAAgC,IAAItkG,aAAa,IACjDO,EAAgB6Q,KAAKopF,GAAsB3hB,cAAgB,EAC3D0rB,EAAmBn8D,OAAOo8D,UAC1BjlF,EAAmB6oB,OAAO0H,UAC1B20D,EAAqB,EACrBC,GAAqBplG,EAAO6F,UAAU5E,GAAOI,QAAQhB,OAAS,GAAK,GAEvE,IAAK,IAAID,EAAY,EAAGA,EAAI,GAAIA,IAE/B4kG,EAAgB5kG,IAAMJ,EAAO6F,UAAU5E,GAAOI,QAAQR,KAAKmU,MAAMmwF,IAAenlG,EAAO6F,UAAU5E,GAAOI,QAASR,KAAKmU,MAAMmwF,GAAc,IAAOC,EAE7IJ,EAAgB5kG,GAAK6f,IACxBA,EAAW+kF,EAAgB5kG,IAExB4kG,EAAgB5kG,GAAK6kG,IACxBA,EAAWD,EAAgB5kG,IAG5B+kG,GAAcC,EAGf,IAAK,IAAIhlG,EAAY,EAAGA,EAAI,GAAIA,IAE/B4kG,EAAgB5kG,IAAM6f,EAEtB+kF,EAAgB5kG,IAAO6kG,EAAWhlF,EAElC+kF,EAAgB5kG,IAAM,GAEtB4kG,EAAgB5kG,IAAM,GAEtB4kG,EAAgB5kG,GAAKS,KAAK+f,KAAKokF,EAAgB5kG,IAG/C0R,KAAKmpF,GAAsBl6C,SAAS3gD,GAAK4kG,EAAgB5kG,GAK1D0R,KAAK+mC,EAAKqa,OAAO,IAAIpS,GAAiBhvC,KAAK+mC,EAAMmsD,IACjDlzF,KAAK+mC,EAAKqa,OAAO,IAAI7C,GAAav+C,KAAK+mC,GAAO/mC,KAAKykF,GAAwB/kC,MAAM7tD,OAAQ3D,EAAO0H,YAAc,EAAI7G,KAAKgb,MAAMhb,KAAKe,KAAK5B,EAAO6F,UAAU5E,GAAO6E,QAAU9F,EAAO0H,YAAc,KAE9LoK,KAAKopF,GAAsB3hB,cAAgB,EAC3CznE,KAAK+mC,EAAKwD,SAASC,UACnBxqC,KAAK+mC,EAAKisD,mBAhqEVhzF,KAAK+mC,EAAKwD,SAAS06B,MAAMjlE,KAAKmsF,aAC9BtrE,OAAO6pB,iBAAiB,SAAU1qC,KAAKmsF,aAEjC,UAAW5yF,WAChByG,KAAKqjF,GAAUt2E,YAAY/M,KAAKqjF,GAAU98E,cAAc,uBAGzDvG,KAAKyjF,GAAa3mF,YAAYwjF,GAAS,CAAEzS,MAAO,QAC/ChuB,GAAO,CAAEhuD,MAAO,cAAgB,yBAEjCmO,KAAK2jF,GAAW7mF,YAAYwjF,GAAS,CAAEzS,MAAO,QAC7ChuB,GAAO,CAAEhuD,MAAO,aAAe,gBAEhCmO,KAAKgkF,GAAclnF,YAAYwjF,GAAS,CAAEzS,MAAO,QAChDhuB,GAAO,CAAEhuD,MAAO,eAAiB,0BAGlCmO,KAAK2nF,GAAe7qF,YAAY+iD,GAAO,CAAEyjC,QAAQ,EAAMzxF,MAAO,GAAK,WAGnEmO,KAAKqrF,GAAkB,IAAIpuF,MAAe+W,EAAWmG,aACrDna,KAAKurF,GAAmB,IAAItuF,MAAc+W,EAAWmG,aAErDna,KAAKuoF,GAAezrF,YAAY4M,GAAI,CAAE6+B,MAAO,cAAejqC,MAAO,wEAClEoL,GAAI,CAAEpL,MAAO,2CAA6C,MAC1DoL,GAAI,CAAEpL,MAAO,kCAAmCiqC,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,sBAAwB,SACtH56E,GAAI,CAAEpL,MAAO,yBAA0BiqC,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,mBAAqB,WAC1G56E,GAAI,CAAEpL,MAAO,iCAAkCiqC,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,qBAAuB,eAErH,IAAK,IAAIh2F,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IAAK,CACtD,MAAM+lD,EAAwB/lD,EACxBilG,EAAiC7pF,GAAI,CAAEpL,MAAO,8BAAgCyB,EAAYyH,cAAgB,KAAOlZ,EAAI,EAAI,KACzHklG,EAAqChT,GAAa5gC,GAAO,CAAEthD,MAAO,eAAgByd,MAAO,cAAgB7tB,EAAOgJ,oBAAoBwsF,KAAIxsE,GAAQA,EAAKplB,QACrJ2hG,EAA0B,IAAIj/B,GAAO9U,GAAM,CAAEphD,MAAO,yBAA0BrJ,KAAM,QAASzE,IAAK,IAAK0e,IAAKhhB,EAAO+I,qBAAsBpF,MAAO,IAAKmuD,KAAM,IAAKjkC,MAAO,WAAa/b,KAAK+mC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIiF,GAAwBv0C,KAAK+mC,EAAMsN,EAAezB,EAAUtD,KAAW,GAClTokD,EAAoClT,GAAa5gC,GAAO,CAAEthD,MAAO,eAAgByd,MAAO,aAAe7tB,EAAOoJ,UAAUosF,KAAI9nF,GAAYA,EAAS9J,QACjJ6hG,EAAsBjqF,GAAI,CAAE6+B,MAAO,eACxCgrD,EACA7pF,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,mCAAqCk1F,GAC5EC,EAAgBnrD,UAChB5+B,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,kCAAoCo1F,IAE5E1zF,KAAKuoF,GAAezrF,YAAY62F,GAChC3zF,KAAK+qF,GAAcz8F,GAAKqlG,EACxB3zF,KAAKgrF,GAA0B18F,GAAKmlG,EACpCzzF,KAAKirF,GAAyB38F,GAAKolG,EACnC1zF,KAAKkrF,GAA0B58F,GAAKklG,EAEpCE,EAAehpD,iBAAiB,UAAU,KACzC1qC,KAAK+mC,EAAKqa,OAAO,IAAIhN,GAAuBp0C,KAAK+mC,EAAMsN,EAAeq/C,EAAejsB,mBAEtF+rB,EAAgB9oD,iBAAiB,UAAU,KAC1C1qC,KAAK+mC,EAAKqa,OAAO,IAAI9M,GAAwBt0C,KAAK+mC,EAAMsN,EAAem/C,EAAgB/rB,mBAIzFznE,KAAK8oF,GAAchsF,YAClB4M,GAAI,CAAE6+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,oBAAsB,aAC3E9kC,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,oBAAsB,eAG7E,IAAK,IAAIh2F,EAAYJ,EAAOyK,UAAY,EAAGrK,GAAK,EAAGA,IAAK,CACvD,MAAMmlD,EAAoBnlD,EACpBslG,EAAiC,IAAIvY,GAAer7E,KAAK+mC,EAAM0M,GACrEmgD,EAAetrD,UAAUoC,iBAAiB,YAAa1qC,KAAKwnE,cAC5DxnE,KAAKmrF,GAAwB78F,GAAKslG,EAElC,MAAMF,EAAoClT,GAAa5gC,GAAO,CAAEthD,MAAO,eAAgByd,MAAO,oBAAsB7tB,EAAOoJ,UAAUosF,KAAI9nF,GAAYA,EAAS9J,QAC9JkO,KAAKorF,GAAwB98F,GAAKolG,EAClCA,EAAehpD,iBAAiB,UAAU,KACzC1qC,KAAK+mC,EAAKqa,OAAO,IAAI5N,GAAsBxzC,KAAK+mC,EAAM0M,EAAWigD,EAAejsB,mBAGjF,MAAMksB,EAAsBjqF,GAAI,CAAE6+B,MAAO,aACxC7+B,GAAI,CAAE6+B,MAAO,kBAAmBjqC,MAAO,mCAAqCo1F,GAC5E1zF,KAAKmrF,GAAwB78F,GAAGg6C,WAEjCtoC,KAAK8oF,GAAchsF,YAAY62F,GAGhC3zF,KAAK6zF,GAAe,GACpB7zF,KAAK4tF,GAAmB,GACxB5tF,KAAK8tF,GAAsB,GAC3B9tF,KAAK8zF,GAAc,GACnB9zF,KAAKguF,GAAe,GACpB,IAAK,IAAIn6E,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAAO,CAEvD,IAAIkgF,EAAmCn0C,GAAO,CAAEthD,MAAO,8DACnD01F,EAAsCp0C,GAAO,CAAEthD,MAAO,sCAEtD21F,EAA6BvqF,GAAI,CAAE6+B,MAAO,cAAejqC,MAAO,uCACnEoL,GAAI,CAAE6+B,MAAO,MAAOjqC,MAAO,kDAAmD4iE,GAAI,iBAAmBrtD,EAAKwwE,QAAS,IAAMrkF,KAAKskF,GAAY,eAAiB,OAC3J56E,GAAI,CAAE6+B,MAAO,mBAAqBwrD,GAClCrqF,GAAI,CAAE6+B,MAAO,MAAOjqC,MAAO,oCAAqC4iE,GAAI,oBAAsBrtD,EAAKwwE,QAAS,IAAMrkF,KAAKskF,GAAY,kBAAoB,QACnJ56E,GAAI,CAAE6+B,MAAO,mBAAqByrD,IAG/BE,EAA+Bt0C,KAC/Bu0C,EAA4BzqF,GAAI,CAAE6+B,MAAO,YAAa24B,GAAI,iBAAmBrtD,EAAKvV,MAAO,8CAAgDkhD,GAAK,CAAEjX,MAAO,MAAO87C,QAAS,IAAMrkF,KAAKskF,GAAY,WAAa,aAAc56E,GAAI,CAAE6+B,MAAO,mBAAqB2rD,IAE/Pl0F,KAAK6zF,GAAallG,KAAKslG,GACvBj0F,KAAK4tF,GAAiBj/F,KAAKolG,GAC3B/zF,KAAK8tF,GAAoBn/F,KAAKqlG,GAC9Bh0F,KAAK8zF,GAAYnlG,KAAKwlG,GACtBn0F,KAAKguF,GAAar/F,KAAKulG,GAEvBl0F,KAAK+oF,GAAgBjsF,YAAY4M,GAAI,CAAEpL,MAAO,sFAAwFyB,EAAYyH,cAAgB,iBAAmBzH,EAAY+H,mBAAqB,KAAO,cAAgB+L,EAAM,KACnP7T,KAAK+oF,GAAgBjsF,YAAYm3F,GACjCj0F,KAAK+oF,GAAgBjsF,YAAYq3F,GAIlCn0F,KAAKqjF,GAAU34C,iBAAiB,SAAU1qC,KAAK0yF,IAC/C1yF,KAAKujF,GAAU74C,iBAAiB,SAAU1qC,KAAK6yF,IAC/C7yF,KAAKwjF,GAAa94C,iBAAiB,SAAU1qC,KAAK8yF,IAClD9yF,KAAKopF,GAAsB1+C,iBAAiB,SAAU1qC,KAAKizF,IAC3DjzF,KAAK8jF,GAAcp5C,iBAAiB,SAAU1qC,KAAK2wF,IACnD3wF,KAAKyjF,GAAa/4C,iBAAiB,SAAU1qC,KAAK4wF,IAClD5wF,KAAK2jF,GAAWj5C,iBAAiB,SAAU1qC,KAAK8wF,IAChD9wF,KAAKgkF,GAAct5C,iBAAiB,SAAU1qC,KAAK+wF,IAGnD/wF,KAAKmkF,GAAiBz5C,iBAAiB,SAAU1qC,KAAKwxF,IACtDxxF,KAAKukF,GAAkB75C,iBAAiB,SAAU1qC,KAAKyxF,IAEvDzxF,KAAKwoF,GAAoB99C,iBAAiB,SAAU1qC,KAAKsxF,IACzDtxF,KAAK2pF,GAAwBj/C,iBAAiB,SAAU1qC,KAAKuxF,IAC7DvxF,KAAK0lF,GAAgBh7C,iBAAiB,SAAU1qC,KAAKgyF,IACrDhyF,KAAK2lF,GAAiBj7C,iBAAiB,SAAU1qC,KAAKiyF,IACtDjyF,KAAK8lF,GAAkBp7C,iBAAiB,SAAU1qC,KAAKoyF,IACvDpyF,KAAKsmF,GAAe57C,iBAAiB,SAAU1qC,KAAKqyF,IACpDryF,KAAK2mF,GAAsBj8C,iBAAiB,SAAU1qC,KAAKkyF,IAC3DlyF,KAAK6mF,GAAqBn8C,iBAAiB,SAAU1qC,KAAKmyF,IAC1DnyF,KAAKinF,GAAgBv8C,iBAAiB,SAAU1qC,KAAKwyF,IACrDxyF,KAAKmnF,GAAaz8C,iBAAiB,SAAU1qC,KAAKyyF,IAClDzyF,KAAK2nF,GAAej9C,iBAAiB,SAAU1qC,KAAKsyF,IACpDtyF,KAAKooF,GAAmB19C,iBAAiB,SAAU1qC,KAAKuyF,IACxDvyF,KAAKqkD,GAAY3Z,iBAAiB,QAAS1qC,KAAKskD,IAChDtkD,KAAK+iF,GAAer4C,iBAAiB,QAAS1qC,KAAKowF,IACnDpwF,KAAKgjF,GAAet4C,iBAAiB,QAAS1qC,KAAKqwF,IACnDrwF,KAAKijF,GAAcvjC,MAAMhV,iBAAiB,QAAS1qC,KAAKywF,IACxDzwF,KAAKsqF,GAAa5/C,iBAAiB,YAAa1qC,KAAKksF,IACrDlsF,KAAKwqF,GAAW9/C,iBAAiB,YAAa1qC,KAAKwnE,cAGnDxnE,KAAKijF,GAAc36C,UAAUhqC,MAAMC,YAAY,YAAa,KAC5DyB,KAAKijF,GAAc36C,UAAUhqC,MAAMC,YAAY,UAAW,QAE1DyB,KAAKmjF,GAAoB7kF,MAAMC,YAAY,YAAa,KACxDyB,KAAKmjF,GAAoB7kF,MAAMC,YAAY,UAAW,QAGtDyB,KAAKijF,GAAc36C,UAAUhqC,MAAMC,YAAY,cAAewB,EAAY6I,yBAC1E5I,KAAKijF,GAAc36C,UAAUhqC,MAAMC,YAAY,sBAAuB,OACtEyB,KAAKykF,GAAwBn8C,UAAUhqC,MAAMC,YAAY,cAAewB,EAAY6I,yBACpF5I,KAAKykF,GAAwBn8C,UAAUhqC,MAAMC,YAAY,sBAAuB,OAChFyB,KAAK0pF,GAAyBphD,UAAUhqC,MAAMC,YAAY,cAAewB,EAAY6I,yBACrF5I,KAAK0pF,GAAyBphD,UAAUhqC,MAAMC,YAAY,sBAAuB,OACjF,IAAK,IAAIjQ,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IACjD0R,KAAKgrF,GAA0B18F,GAAGg6C,UAAUhqC,MAAMC,YAAY,cAAewB,EAAY6I,yBACzF5I,KAAKgrF,GAA0B18F,GAAGg6C,UAAUhqC,MAAMC,YAAY,sBAAuB,OAItF,IAAK,IAAIsV,EAAc,EAAGA,EAAM3lB,EAAO0K,SAAUib,IAAO,CACvD,IAAIugF,EAAsBp0F,KAC1BA,KAAK4tF,GAAiB/5E,GAAK62B,iBAAiB,UAAU,WAAc0pD,EAAQzC,GAAmB99E,MAC/F7T,KAAK8tF,GAAoBj6E,GAAK62B,iBAAiB,UAAU,WAAc0pD,EAAQvC,GAAsBh+E,MACrG7T,KAAKguF,GAAan6E,GAAK62B,iBAAiB,UAAU,WAAc0pD,EAAQjG,GAAmBt6E,MA0B5F,GAvBA7T,KAAKsqF,GAAa5/C,iBAAiB,YAAa1qC,KAAKwnE,cACrDxnE,KAAK0oF,GAAgBpgD,UAAUoC,iBAAiB,YAAa1qC,KAAKwnE,cAClExnE,KAAK4oF,GAAiBtgD,UAAUoC,iBAAiB,YAAa1qC,KAAKwnE,cACnExnE,KAAK8jF,GAAcp5C,iBAAiB,UAAW1qC,KAAK+uF,IAAgC,GACpF/uF,KAAK2qF,UAAUjgD,iBAAiB,UAAW1qC,KAAK6gD,IAChD7gD,KAAK2qF,UAAUjgD,iBAAiB,QAAS1qC,KAAK6uF,IAC9C7uF,KAAKgpF,GAAsBt+C,iBAAiB,QAAS1qC,KAAKq0F,GAAgBC,KAAKt0F,OAC/EA,KAAKkpF,GAAuBx+C,iBAAiB,QAAS1qC,KAAKu0F,GAAiBD,KAAKt0F,OAEjFA,KAAK0kF,GAAgCh6C,iBAAiB,SAAS,KAAQ1qC,KAAK+mC,EAAKqa,OAAO,IAAI7C,GAAav+C,KAAK+mC,EAAM/mC,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAAwBn7C,OAAQjF,KAAKyB,IAAI,GAAMzB,KAAKmgB,KAAK,GAAMngB,KAAKgb,OAAO/J,KAAK0kF,GAAgC7yF,cACrSmO,KAAKilF,GAAmBv6C,iBAAiB,SAAS,KAAQ1qC,KAAK+mC,EAAKqa,OAAO,IAAIxC,GAAU5+C,KAAK+mC,EAAM/mC,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAAwBv8B,IAAK7jB,KAAKyB,IAAI,IAAOzB,KAAKmgB,IAAI,EAAKngB,KAAKgb,OAAO/J,KAAKilF,GAAmBpzF,cACpQmO,KAAKwlF,GAAsB96C,iBAAiB,SAAS,KAAQ1qC,KAAK+mC,EAAKqa,OAAO,IAAItC,GAAa9+C,KAAK+mC,EAAM/mC,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAAwBj8B,OAAQnkB,KAAKyB,IAAItC,EAAO+H,UAAWlH,KAAKmgB,IAAIhhB,EAAO8H,UAAWjH,KAAKgb,OAAO/J,KAAKwlF,GAAsB3zF,cACxSmO,KAAKwpF,GAAgB9+C,iBAAiB,SAAS,KAAQ1qC,KAAK+mC,EAAKqa,OAAO,IAAIpS,GAAiBhvC,KAAK+mC,EAAM/mC,KAAKmpF,GAAsBl6C,cACnIjvC,KAAKwnF,GAAe98C,iBAAiB,SAAS,KAAQ1qC,KAAK+mC,EAAKqa,OAAO,IAAIjO,GAAqBnzC,KAAK+mC,EAAM/mC,KAAKwnF,GAAex8B,aAC/HhrD,KAAKimF,GAAsBv7C,iBAAiB,SAAS,KAAQ1qC,KAAK+mC,EAAKqa,OAAO,IAAIhO,GAAwBpzC,KAAK+mC,EAAM/mC,KAAKimF,GAAsBj7B,aAChJhrD,KAAKmmF,GAAwBz7C,iBAAiB,SAAS,KAAQ1qC,KAAK+mC,EAAKqa,OAAO,IAAI/N,GAA0BrzC,KAAK+mC,EAAM/mC,KAAKmmF,GAAwBn7B,aAEtJhrD,KAAKoqF,GAAiB1/C,iBAAiB,SAAUzB,IAC5CA,EAAM6X,QAAU9gD,KAAKoqF,IACxBpqF,KAAK+mC,EAAKqF,UAIR/yC,EAAU,CACb,MAAMm7F,EAAuDx0F,KAAKwjF,GAAaj9E,cAAc,oBAC7FiuF,EAAevpC,UAAW,EAC1BupC,EAAe32F,aAAa,SAAU,IAIvC,GAAIgjB,OAAO4zE,OAAOC,WAAa,IAA4C,CAC1E,MAAMC,EAAyD30F,KAAKwjF,GAAaj9E,cAAc,sBAC/FouF,EAAiB1pC,UAAW,EAC5B0pC,EAAiB92F,aAAa,SAAU,KAIlChE,GAAoB+6F,GAC3B,IAAI9zC,EAA4B9gD,KAAK4nF,GACjC3mC,EAAqBjhD,KAAKsoF,GAC9B,OAAQsM,GACP,KAAK,EACJ9zC,EAAS9gD,KAAK4nF,GACd5nF,KAAK6rF,IAAuB7rF,KAAK6rF,GACjC5qC,EAAQjhD,KAAKsoF,GACb,MACD,KAAK,EACJxnC,EAAS9gD,KAAK+kF,GACd/kF,KAAK4rF,IAAmB5rF,KAAK4rF,GAC7B3qC,EAAQjhD,KAAKslF,GACb,MACD,KAAK,EACJxkC,EAAS9gD,KAAKonF,GACdpnF,KAAK8rF,IAAqB9rF,KAAK8rF,GAC/B7qC,EAAQjhD,KAAK0nF,GACb,MACD,KAAK,EACJ5mC,EAAS9gD,KAAK+lF,GACd/lF,KAAK+rF,IAA0B/rF,KAAK+rF,GACpC9qC,EAAQjhD,KAAKqmF,GAGW,KAAtBvlC,EAAO16C,aACV06C,EAAO16C,YAAc,KACjB66C,GAASjhD,KAAK0nF,IAGyF,GAAlG1nF,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SAASwX,YAAY5X,KAAK+mC,EAAKoI,wBAAwBp0C,SAFjGkmD,EAAM3iD,MAAM01D,QAAU,MAOvBlT,EAAO16C,YAAc,IACrB66C,EAAM3iD,MAAM01D,QAAU,QAIhBn6D,KAEP,GAAKmG,KAAK+mC,EAAKzN,MAAM7L,QAiBhB,CAEJ,IAAIjd,EAAqBxQ,KAAK+mC,EAAKoI,uBACnC,MAAM0lD,EAAwB70F,KAAK+mC,EAAKzN,MAAMw7D,eAAe90F,KAAK+mC,EAAK3mC,QAASoQ,GAGhF,GAAIqkF,EAAc,CAEjB,IAAIrkF,EAAqBxQ,KAAK+mC,EAAKoI,uBAEnC,SAAS4lD,EAAgBC,EAAoBC,EAAgBh6E,EAAqB7a,EAAiBoQ,GAClG,MAAMgf,EAAmBwlE,EAAOjuD,EAAKzN,MAAMn5B,KAAM+0F,iBAAiBj6E,GAClE,GAAI+5E,EAAOjuD,EAAKzN,MAAM7J,YAAYxU,EAASuU,EAASpvB,EAASoQ,GAAa,CACzE,IAAI2kF,EAAqBH,EAAOjuD,EAAKzN,MAAMn5B,KAAMua,eAAes6E,EAAOjuD,EAAKzN,MAAMzH,YAAY5W,EAASuU,EAASpvB,EAASoQ,GAAY,GAAQyK,GAAW+5E,EAAOjuD,EAAK5mC,KAAKyY,WAAWpX,IAAIyZ,GAKxL,OAJIk6E,GAAcH,EAAOzJ,GAAiBtwE,KACzC+5E,EAAOzJ,GAAiBtwE,GAAWk6E,EACnCF,EAAO3sD,UAAUhqC,MAAMC,YAAY,iBAAgC,GAAb42F,EAAoB,EAAO,OAE3E,EAER,OAAO,EAIR,IAAK,IAAIl6E,EAAkB,EAAGA,EAAUjH,EAAWmG,YAAac,IAAW,CAE1Ejb,KAAKsrF,GAAmBrwE,GAAWjb,KAAKqrF,GAAgBpwE,GAGxD,IAAIg6E,EAAwBj1F,KAAKo1F,GAAwBn6E,GAC3C,MAAVg6E,IACHj1F,KAAKsrF,GAAmBrwE,GAAW85E,EAAgB/0F,KAAMi1F,EAAQh6E,EAASjb,KAAK+mC,EAAK3mC,QAASoQ,UAK3F,GAAIxQ,KAAKwrF,GAEb,IAAK,IAAIvwE,EAAkB,EAAGA,EAAUjH,EAAWmG,YAAac,IAC/Djb,KAAKsrF,GAAmBrwE,IAAW,EAKrC,GAAI45E,GAAgB70F,KAAKwrF,GAAsB,CAE9C,IAAI6J,GAA2B,EAE/B,IAAK,IAAIp6E,EAAkB,EAAGA,EAAUjH,EAAWmG,YAAac,IAAW,CAC1E,GAAIjb,KAAKsrF,GAAmBrwE,IAAYjb,KAAKqrF,GAAgBpwE,GAAU,CACtEjb,KAAKqrF,GAAgBpwE,GAAWjb,KAAKsrF,GAAmBrwE,GACxD,IAAIg6E,EAAwBj1F,KAAKo1F,GAAwBn6E,GAE3C,MAAVg6E,IAEkC,GAAjCj1F,KAAKqrF,GAAgBpwE,GACxBg6E,EAAO3sD,UAAUz7B,UAAUC,IAAI,aAG/BmoF,EAAO3sD,UAAUz7B,UAAU+qB,OAAO,cAMG,GAApC53B,KAAKsrF,GAAmBrwE,KAC3Bo6E,GAAkB,GAGpBr1F,KAAKwrF,GAAuB6J,OAtFA,CAC7Br1F,KAAKwrF,IAAuB,EAE5B,IAAK,IAAIvwE,EAAkB,EAAGA,EAAUjH,EAAWmG,YAAac,IAC/D,GAAqC,GAAjCjb,KAAKqrF,GAAgBpwE,GAAkB,CAC1Cjb,KAAKqrF,GAAgBpwE,IAAW,EAChCjb,KAAKsrF,GAAmBrwE,IAAW,EACnC,IAAIg6E,EAAwBj1F,KAAKo1F,GAAwBn6E,GAE3C,MAAVg6E,GAEHA,EAAO3sD,UAAUz7B,UAAU+qB,OAAO,eAmF/B/9B,GAAwBohB,GAC/B,OAAQA,GACP,KAAKjH,EAAWkF,OACf,OAAOlZ,KAAK6kF,GACb,KAAK7wE,EAAW2F,UACf,OAAO3Z,KAAKulF,GACb,KAAKvxE,EAAWqF,aACf,OAAOrZ,KAAKgrF,GAA0B,GACvC,KAAKh3E,EAAWsF,aACf,OAAOtZ,KAAKgrF,GAA0B,GACvC,KAAKh3E,EAAWuF,aACf,OAAOvZ,KAAKgrF,GAA0B,GACvC,KAAKh3E,EAAWwF,aACf,OAAOxZ,KAAKgrF,GAA0B,GACvC,KAAKh3E,EAAWyF,cACf,OAAOzZ,KAAK0pF,GACb,KAAK11E,EAAW0F,cACf,OAAO1Z,KAAK+mF,GACb,KAAK/yE,EAAWoF,cACf,OAAOpZ,KAAKymF,GACb,KAAKzyE,EAAWmF,aACf,OAAOnZ,KAAKumF,GACb,KAAKvyE,EAAWiF,aACf,OAAOjZ,KAAKykF,GACb,KAAKzwE,EAAW4F,gBACf,OAAO5Z,KAAK8nF,GACb,KAAK9zE,EAAW8F,gBACf,OAAO9Z,KAAKgoF,GACb,KAAKh0E,EAAW+F,gBACf,OAAO/Z,KAAKkoF,GACb,KAAKl0E,EAAWgG,iBACf,OAAOha,KAAKsnF,GACb,KAAKtzE,EAAWiG,YACf,OAAOja,KAAKolF,GACb,KAAKpxE,EAAW8E,SACf,OAAO9Y,KAAK6jF,GACb,KAAK7vE,EAAW+E,UACf,OAAO/Y,KAAK+jF,GACb,KAAK/vE,EAAW6E,cACf,OAAO7Y,KAAKijF,GACb,QACC,OAAO,MAKHppF,iBAAiB1K,GACvB6Q,KAAKukF,GAAkB9c,cAAgBt4E,EACvC6Q,KAAKyxF,KAGE53F,GAAYy7F,GACnBt1F,KAAK+mC,EAAKwuD,WAAWD,GACrBt1F,KAAK2uF,GAAW2G,GAGTz7F,GAAWy7F,GAClB,GAAIt1F,KAAK8qF,IAAsBwK,IAC/Bt1F,KAAK8qF,GAAqBwK,EAEtBt1F,KAAKmhD,SACJnhD,KAAK6qF,MAAiB7qF,KAAKmhD,kBAAkB46B,IAAa/7E,KAAKmhD,kBAAkBkhB,IAAiBriE,KAAKmhD,kBAAkB+C,KAC5HlkD,KAAKykD,KAENzkD,KAAK6qF,IAAc,EACnB7qF,KAAKoqF,GAAiB9rF,MAAM01D,QAAU,OACtCh0D,KAAKoqF,GAAiBr9E,YAAY/M,KAAKmhD,OAAO7Y,WAC9CtoC,KAAKmhD,OAAOX,UACZxgD,KAAKmhD,OAAS,KACdnhD,KAAKwnE,gBAGF8tB,GAAY,CACf,OAAQA,GACP,IAAK,SACJt1F,KAAKmhD,OAAS,IAAIyI,GAAa5pD,KAAK+mC,GACpC,MACD,IAAK,SACJ/mC,KAAKmhD,OAAS,IAAI+T,GAAal1D,KAAK+mC,GACpC,MACD,IAAK,eACJ/mC,KAAKmhD,OAAS,IAAI25B,GAAmB96E,KAAK+mC,GAC1C,MACD,IAAK,eACJ/mC,KAAKmhD,OAAS,IAAIrB,GAAmB9/C,KAAK+mC,GAC1C,MAOD,IAAK,oBACJ/mC,KAAKmhD,OAAS,IAAI0kB,GAAwB7lE,KAAK+mC,GAC/C,MACD,IAAK,kBACJ/mC,KAAKmhD,OAAS,IAAIQ,GAAsB3hD,KAAK+mC,GAC7C,MACD,IAAK,kBACJ/mC,KAAKmhD,OAAS,IAAIkhB,GAAcriE,KAAK+mC,EAAM/mC,MAC3C,MACD,IAAK,qBACJA,KAAKmhD,OAAS,IAAI+C,GAAiBlkD,KAAK+mC,EAAM/mC,MAC9C,MACD,IAAK,QACJA,KAAKmhD,OAAS,IAAIq6B,GAAYx7E,KAAK+mC,GACnC,MACD,IAAK,SACJ/mC,KAAKmhD,OAAS,IAAIwd,GAAa3+D,KAAK+mC,GACpC,MACD,QACC/mC,KAAKmhD,OAAS,IAAI46B,GAAU/7E,KAAK+mC,EAAMuuD,GAIrCt1F,KAAKmhD,SACFnhD,KAAKmhD,kBAAkB46B,IAAa/7E,KAAKmhD,kBAAkBkhB,IAAiBriE,KAAKmhD,kBAAkB+C,KACxGlkD,KAAK6qF,GAAc7qF,KAAK+mC,EAAKzN,MAAM7L,QACnCztB,KAAKukD,MAENvkD,KAAKoqF,GAAiB9rF,MAAM01D,QAAU,GACtCh0D,KAAKoqF,GAAiBttF,YAAYkD,KAAKmhD,OAAO7Y,aAe1CzuC,mBAAmBpE,GACzBuK,KAAKu+E,GAAciX,UAAU//F,GAqzBvBoE,mBACFmG,KAAK+mC,EAAKzN,MAAM7L,SACnBztB,KAAKqkD,GAAYx3C,UAAU+qB,OAAO,cAClC53B,KAAKqkD,GAAYx3C,UAAUC,IAAI,eAC/B9M,KAAKqkD,GAAYtoC,MAAQ,gBACzB/b,KAAKqkD,GAAYM,UAAY,UAE7B3kD,KAAKqkD,GAAYx3C,UAAU+qB,OAAO,eAClC53B,KAAKqkD,GAAYx3C,UAAUC,IAAI,cAC/B9M,KAAKqkD,GAAYtoC,MAAQ,eACzB/b,KAAKqkD,GAAYM,UAAY,QAoZvB9qD,GAAqBw8C,GAE5B,IAAIo/C,EAGJ,GAFAA,EAAMl8F,UAEFk8F,EAAIC,WAAaD,EAAIC,UAAUC,UAIlC,YAHAF,EAAIC,UAAUC,UAAUt/C,GAAMu/C,OAAM,KACnC/0E,OAAOsgC,OAAO,qBAAsB9K,MAItC,MAAMw/C,EAAiC94F,SAAS0C,cAAc,YAC9Do2F,EAAUlxC,UAAYtO,EACtBt5C,SAAS0M,KAAK3M,YAAY+4F,GAC1BA,EAAUj2C,SACV,MAAMk2C,EAAqB/4F,SAASg5F,YAAY,QAChDF,EAAUj+D,SACV53B,KAAKwnE,eACAsuB,GAAWj1E,OAAOsgC,OAAO,aAAc9K,GAsBtCx8C,KACNmG,KAAK+mC,EAAKzN,MAAM08D,OAChBh2F,KAAKwkD,mBACL3jC,OAAOoiD,sBAAsBjjE,KAAKswF,IAG5Bz2F,KACNmG,KAAK+mC,EAAKzN,MAAMpI,QAChBlxB,KAAK+mC,EAAKzN,MAAMzB,eACZ73B,KAAK+mC,EAAKu+B,YACbtlE,KAAK+mC,EAAKzN,MAAMs1D,QAAQ5uF,KAAK+mC,EAAK5qB,KAEnCnc,KAAK+mC,EAAKzN,MAAM5I,YAChB1wB,KAAKwkD,mBACL3jC,OAAOo1E,cAAcj2F,KAAKyrF,IAC1B5qE,OAAOo1E,cAAcj2F,KAAK0rF,IAC1B7qE,OAAOo1E,cAAcj2F,KAAK2rF,IAC1B9qE,OAAOoiD,sBAAsBjjE,KAAKswF,IAClCtwF,KAAK6iE,qBAAuB,EAgCrBhpE,GAAe8e,EAAsB6oD,GAC5CxhE,KAAK0gE,GAAc7iE,aAAa,QAAS,GAAK9O,KAAKyB,IAAI,IAAoB,IAAfmoB,IAC5D3Y,KAAK2gE,GAAc9iE,aAAa,IAAK,IAAM,EAAI9O,KAAKyB,IAAI,IAAsB,IAAjBgxE,KAOtD3nE,KACP,MAEMi8C,EAFmB91C,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SACpBwX,YAAY5X,KAAK+mC,EAAKoI,wBACtB7rB,eACvCwyB,EAAuB,OAAI91C,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SACtEygB,OAAOC,aAAakgC,QAAQ,iBAAkBxhC,KAAKmzC,UAAU7c,IAC7D91C,KAAKwnE,eAGE3tE,KACP,MACM2W,EADmBxQ,KAAK+mC,EAAK5mC,KAAK+X,SAASlY,KAAK+mC,EAAK3mC,SACpBwX,YAAY5X,KAAK+mC,EAAKoI,wBACvD2G,EAAsBt2B,KAAKC,MAAMrB,OAAOyC,OAAOC,aAAaC,QAAQ,oBACpD,MAAlB+0B,GAA0BA,EAAuB,QAAK91C,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,UACpGJ,KAAK+mC,EAAKqa,OAAO,IAAIvL,GAAsB71C,KAAK+mC,EAAMv2B,EAAYslC,IAEnE91C,KAAKwnE,eAGE3tE,KACP,MAAMwB,EAAmB2E,KAAK+mC,EAAK5mC,KAAK8c,kBAAkBjd,KAAK+mC,EAAK3mC,SACpEJ,KAAK+mC,EAAKqa,OAAO,IAAI/R,GAAarvC,KAAK+mC,EAAMqL,GAAsB/2C,KAG5DxB,KACPmG,KAAK+mC,EAAKqa,OAAO,IAAIzR,GAAgC3vC,KAAK+mC,IA6DnDltC,GAAWQ,GAClB,GAAImpD,MAAuBnpD,GAAS,CACnC,OAAQA,GACP,IAAK,iBACJ2F,KAAKq0F,KACL,MACD,IAAK,kBACJr0F,KAAKu0F,KACL,MACD,IAAK,eACJv0F,KAAK+vF,KACL,MACD,IAAK,kBACJ/vF,KAAK8vF,KAGP9vF,KAAK+mC,EAAKwD,SAASC,eAEnBxqC,KAAK+mC,EAAKqa,OAAO,IAAI/R,GAAarvC,KAAK+mC,EAAMkpB,SAAS51D,YCziF5C67F,GAcZr8F,YAAoBktC,GAAA/mC,KAAA+mC,EAAAA,EAbb/mC,KAAA28C,eAAyB,EACzB38C,KAAA68C,eAAyB,EACzB78C,KAAA48C,eAAyB,EACzB58C,KAAA88C,eAAyB,EACzB98C,KAAAif,OAAiB,GACjBjf,KAAAmwF,iBAA2B,GAC3BnwF,KAAA+7C,sBAAgC,EAChC/7C,KAAAg8C,oBAA8B,EAC9Bh8C,KAAAq8C,wBAAkC,EAEjCr8C,KAAAm2F,GAAuC,KACvCn2F,KAAAo2F,GAAmC,KAIpCv8F,SACN,MAAO,CACNw8F,GAAMr2F,KAAK28C,eACX25C,GAAMt2F,KAAK48C,eACX25C,GAAMv2F,KAAK68C,eACX25C,GAAMx2F,KAAK88C,eACXvtC,MAASvP,KAAK+7C,sBACdvsC,IAAOxP,KAAKg8C,qBAIPniD,SAAS48F,GACH,MAARA,IACJz2F,KAAK28C,gBAAkB85C,EAAS,GAChCz2F,KAAK48C,gBAAkB65C,EAAS,GAChCz2F,KAAK68C,gBAAkB45C,EAAS,GAChCz2F,KAAK88C,gBAAkB25C,EAAS,GAChCz2F,KAAK+7C,uBAAyB06C,EAAY,MAC1Cz2F,KAAKg8C,qBAAuBy6C,EAAU,IACtCz2F,KAAKif,OAAS,GACdjf,KAAKmwF,iBAAmB,GACxBnwF,KAAKq8C,uBAAyBr8C,KAAK+7C,sBAAwB/7C,KAAKg8C,qBAG1DniD,mBACNmG,KAAK+mC,EAAKwD,SAASC,UACnBxqC,KAAKif,OAAS,GACdjf,KAAKmwF,iBAAmB,GAGzB/P,sBACC,OAAOrxF,KAAKyB,IAAIwP,KAAK28C,eAAgB38C,KAAK48C,gBAE3CyjC,0BACC,OAAOtxF,KAAKyB,IAAIwP,KAAK68C,eAAgB78C,KAAK88C,gBAE3CojC,wBACC,OAAOnxF,KAAKC,IAAIgR,KAAK28C,eAAiB38C,KAAK48C,gBAAkB,EAE9DujC,yBACC,OAAOpxF,KAAKC,IAAIgR,KAAK68C,eAAiB78C,KAAK88C,gBAAkB,EAEvDjjD,oBACNmG,KAAK+mC,EAAKmC,aAAen6C,KAAKyB,IAAIwP,KAAK+mC,EAAKmC,aAAclpC,KAAK48C,gBAC/D58C,KAAK+mC,EAAKmC,aAAen6C,KAAKmgB,IAAIlP,KAAK+mC,EAAKmC,aAAclpC,KAAK48C,gBAAkB58C,KAAK+mC,EAAKgD,iBAAmB,IAGxGlwC,cAAcuG,EAAiB+b,GAErCnc,KAAKo2F,GAAe,IAAIxqD,GACxB5rC,KAAKo2F,GAAaloD,OAAO,IAAImE,GAAiBryC,KAAK+mC,EAAM3mC,EAAS+b,IAClEnc,KAAK+mC,EAAKqa,OAAOphD,KAAKo2F,IAHgB,GAItCp2F,KAAKk/E,mBAGCrlF,WAAWqiB,GACjBlc,KAAK+mC,EAAKqa,OAAO,IAAIzQ,GAAqB3wC,KAAK+mC,EAAM7qB,EAASlc,KAAKogF,gBAAiBpgF,KAAKqgF,oBAAqBrgF,KAAKkgF,kBAAmBlgF,KAAKmgF,qBAGrItmF,UAAU68F,EAAeC,GAC/B,GAAIA,EAAe,CAClB32F,KAAKmwF,kBAAoBuG,EACzB,IAAIE,EAAS3mC,SAASjwD,KAAKmwF,kBACvBj0E,EAA0Blc,KAAK+mC,EAAK6qC,oBACxC,GAAc,GAAVglB,GAAeA,GAAU52F,KAAK+mC,EAAK5mC,KAAK2b,uBAAoC,MAAXI,EAEpE,YADAlc,KAAK0xF,cAAckF,EAAS,GAK7B,GAFA52F,KAAKmwF,iBAAmBuG,EAEV,IADdE,EAAS3mC,SAASjwD,KAAKmwF,oBACJyG,GAAU52F,KAAK+mC,EAAK5mC,KAAK2b,uBAAoC,MAAXI,EAEpE,YADAlc,KAAK0xF,cAAckF,EAAS,GAG7B52F,KAAKmwF,iBAAmB,OAEpB,CACJnwF,KAAKif,QAAUy3E,EACf,IAAIE,EAAiB3mC,SAASjwD,KAAKif,QACnC,GAAI23E,GAAU52F,KAAK+mC,EAAK5mC,KAAKyb,mBAI5B,YAFA5b,KAAK0+E,WAAWkY,GAOjB,GAFA52F,KAAKif,OAASy3E,EACdE,EAAS3mC,SAASjwD,KAAKif,QACnB23E,GAAU52F,KAAK+mC,EAAK5mC,KAAKyb,mBAI5B,YAFA5b,KAAK0+E,WAAWkY,GAKjB52F,KAAKif,OAAS,IAITplB,cAAcga,EAAa1kB,GACjC6Q,KAAK+mC,EAAKqa,OAAO,IAAIpL,GAAiBh2C,KAAK+mC,EAAMlzB,EAAK1kB,IAGhD0K,iBAAiBga,EAAarD,GACpCxQ,KAAK+mC,EAAKqa,OAAO,IAAIlL,GAAoBl2C,KAAK+mC,EAAMlzB,EAAKrD,IAGnD3W,cAAcga,EAAawiC,GACjCr2C,KAAK+mC,EAAKqa,OAAO,IAAIhL,GAAiBp2C,KAAK+mC,EAAMlzB,EAAKwiC,IAGhDx8C,aACNmG,KAAK+mC,EAAKqa,OAAO,IAAInQ,GAAiBjxC,KAAK+mC,EAAM/mC,KAAKogF,gBAAkBpgF,KAAKkgF,kBAAmBlgF,KAAKkgF,oBACrG,MAAM14C,EAAgBxnC,KAAKkgF,kBAC3BlgF,KAAK28C,gBAAkBnV,EACvBxnC,KAAK48C,gBAAkBpV,EAIjB3tC,aACN,MAAMonD,EAAqB,IAAIrV,GAC/B,GAAI5rC,KAAK+mC,EAAK0T,UAAU4B,uBAAwB,EAE3Cr8C,KAAKkgF,kBAAoB,GAAKlgF,KAAKmgF,mBAAqB,IAC3Dl/B,EAAM/S,OAAO,IAAIqP,GAAsCv9C,KAAK+mC,EAAM/mC,KAAKogF,gBAAiBpgF,KAAKkgF,kBAAmBlgF,KAAKqgF,oBAAqBrgF,KAAKmgF,qBAGhJ,IAAK,MAAM//E,KAAWJ,KAAK62F,KAC1B,IAAK,MAAM36E,KAAWlc,KAAK82F,GAAqB12F,GAC/C6gD,EAAM/S,OAAO,IAAIwH,GAAmB11C,KAAK+mC,EAAM7qB,EAASlc,KAAK+mC,EAAK0T,UAAUsB,sBAAuB/7C,KAAK+mC,EAAK0T,UAAUuB,sBAGzHiF,EAAM/S,OAAO,IAAIsM,GAAuBx6C,KAAK+mC,EAAM,EAAG,QAChD,CACNka,EAAM/S,OAAO,IAAIiD,GAAiBnxC,KAAK+mC,EAAM/mC,KAAKogF,gBAAiBpgF,KAAKkgF,oBACxE,MAAM14C,EAAgBxnC,KAAKkgF,kBAC3BlgF,KAAK28C,eAAiB5tD,KAAKmgB,IAAI,EAAGlP,KAAK28C,eAAiBnV,GACxDxnC,KAAK48C,eAAiB7tD,KAAKmgB,IAAI,EAAGlP,KAAK48C,eAAiBpV,GAEzDxnC,KAAK+mC,EAAKqa,OAAOH,GAIVpnD,MACP,IAAK,IAAIuG,EAAkBJ,KAAKqgF,oBAAqBjgF,EAAUJ,KAAKqgF,oBAAsBrgF,KAAKmgF,mBAAoB//E,UAC5GA,EAIAvG,MACP,IAAK,IAAIsiB,EAAcnc,KAAKogF,gBAAiBjkE,EAAMnc,KAAKogF,gBAAkBpgF,KAAKkgF,kBAAmB/jE,UAC3FA,EAIAtiB,IAAuBuG,GAC9B,MAAM22F,EAAuC,GAC7C,IAAK,MAAM56E,KAAOnc,KAAKg3F,KAAoB,CAC1C,MAAMn5C,EAA8B79C,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS0X,KAAKqE,GAC1E,GAA2B,GAAvB0hC,EAA0B,SAC9B,GAAIk5C,EAAgB34E,OAAOy/B,IAAuB,SAClDk5C,EAAgB34E,OAAOy/B,KAAwB,EAC/C,MAAM3hC,EAA0Blc,KAAK+mC,EAAK5mC,KAAK6lB,WAAW5lB,EAAS+b,GACnE,GAAe,MAAXD,EAAiB,MAAM,IAAInsB,YACzBmsB,GAIAriB,GAAsBuG,EAAiB2lB,GAC9C,IAAK,IAAIz3B,EAAY,EAAGA,EAAI0R,KAAK+mC,EAAK5mC,KAAKwb,SAAUrtB,IACpD,GAAI0R,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS0X,KAAKxpB,IAAMy3B,EAC/C,OAAO,EAGT,OAAO,EAGDlsB,OACN,MAAMqe,EAA0B,GAEhC,IAAK,MAAM9X,KAAWJ,KAAK62F,KAAwB,CAClD,MAAMh/E,EAAoC,GACpCC,EAAiB,GAEvB,IAAK,MAAMqE,KAAOnc,KAAKg3F,KAAoB,CAC1C,MAAMC,EAAwBj3F,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS0X,KAAKqE,GAEpE,GADArE,EAAKnpB,KAAKsoG,GAC6B9pF,MAAnC0K,EAASuG,OAAO64E,IAA8B,CACjD,MAAM/6E,EAA0Blc,KAAK+mC,EAAK5mC,KAAK6lB,WAAW5lB,EAAS+b,GACnE,IAAI3L,EAAqB,EACrBD,EAAgB,GACpB,GAAe,MAAX2L,EAGH,GAFA1L,EAAa0L,EAAQ1L,WAEjBxQ,KAAKq8C,uBACR,IAAK,MAAM5rC,KAAQyL,EAAQg7E,aACtBzmF,EAAKjB,KAAOxP,KAAK+7C,uBACjBtrC,EAAKlB,OAASvP,KAAKg8C,uBACnBvrC,EAAKlB,MAAQvP,KAAK+7C,uBAAyBtrC,EAAKjB,IAAMxP,KAAKg8C,sBAC9D,IAAIpG,GAAiB,KAAMnlC,EAAM1hB,KAAKmgB,IAAIuB,EAAKlB,MAAOvP,KAAK+7C,uBAAwBhtD,KAAKyB,IAAIwP,KAAKg8C,oBAAqBvrC,EAAKjB,MAE5HiB,EAAKlB,OAASvP,KAAK+7C,sBACnBtrC,EAAKjB,KAAOxP,KAAK+7C,sBACjBxrC,EAAM5hB,KAAK8hB,SAGZF,EAAQ2L,EAAQ3L,MAGlBsH,EAASuG,OAAO64E,IAAkB,CAAEzmF,WAAcA,EAAYD,MAASA,IAIzE,MAAM4mF,EAA2B,CAChC97F,QAAW2E,KAAK+mC,EAAK5mC,KAAK8c,kBAAkB7c,GAC5Cka,MAASta,KAAK+mC,EAAK5mC,KAAK+c,gBAAgB9c,GACxCyX,SAAYA,EACZC,KAAQA,GAETI,EAASvpB,KAAKwoG,GAGf,MAAMC,EAA+B,CACpCC,aAAgBr3F,KAAKq8C,uBAAyBr8C,KAAKg8C,oBAAsBh8C,KAAK+7C,sBAAwB/7C,KAAK+mC,EAAK5mC,KAAKub,YAAcxtB,EAAOqF,aAC1I2kB,SAAYA,GAEb2I,OAAOC,aAAakgC,QAAQ,gBAAiBxhC,KAAKmzC,UAAUykC,IAQtDv9F,aACN,MAAMu9F,EAAsC53E,KAAKC,MAAMrB,OAAOyC,OAAOC,aAAaC,QAAQ,mBAC1F,GAAqB,MAAjBq2E,EAAuB,OAC3B,MAAME,EAA+BF,EAAwB,UAAK,GAC5DG,EAA6BH,EAA4B,eAAM,EAE/Dn2C,EAAqB,IAAIrV,GACzB4rD,EAA0Bx3F,KAAKkgF,kBAAoB,GAAKlgF,KAAKmgF,mBAAqB,EAElFsX,EAAsBD,EAAgBx3F,KAAKmgF,mBAAqBpxF,KAAKyB,IAAI8mG,EAAc/oG,OAAQyR,KAAK+mC,EAAK5mC,KAAK8b,kBAAoBjc,KAAKqgF,qBAC7I,IAAK,IAAIqX,EAAuB,EAAGA,EAAeD,EAAaC,IAAgB,CAC9E,MAAMP,EAA2BG,EAAcI,EAAeJ,EAAc/oG,QACtE6R,EAAkBJ,KAAKqgF,oBAAsBqX,EAE7Cr8F,IAAqB87F,EAAqB,QAC1C78E,IAAmB68E,EAAmB,MACtCQ,EAAyCR,EAAsB,UAAK,GACpES,EAAuBT,EAAkB,MAAK,GACpD,GAAyB,GAArBS,EAAWrpG,OAAa,SAC5B,GAAI8M,GAAW2E,KAAK+mC,EAAK5mC,KAAK8c,kBAAkB7c,GAAU,SAC1D,GAAIka,GAASta,KAAK+mC,EAAK5mC,KAAK+c,gBAAgB9c,GAAU,SAEtD,MAAMy3F,EAAqBL,EAAgBx3F,KAAKkgF,kBAAoBnxF,KAAKyB,IAAIonG,EAAWrpG,OAAQyR,KAAK+mC,EAAK5mC,KAAKwb,SAAW3b,KAAKogF,iBAC/H,GAAKoX,GAAsC,GAArBI,EAAWrpG,QAAuC,GAAxB+oG,EAAc/oG,OA4BvD,GAAIyR,KAAKq8C,uBAAwB,CACvC,MAAMuB,EAAuC,GACvCk6C,EAAoC,GAE1C72C,EAAM/S,OAAO,IAAIqP,GAAsCv9C,KAAK+mC,EAAM/mC,KAAKogF,gBAAiByX,EAAY73F,KAAKqgF,oBAAqBoX,IAE9H,IAAK,IAAIM,EAAmB,EAAGA,EAAWF,EAAYE,IAAY,CACjE,MAAM57E,EAAcnc,KAAKogF,gBAAkB2X,EACrCC,EAA6BJ,EAAWG,EAAWH,EAAWrpG,UAAY,EAC1EsvD,EAA8B79C,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS0X,KAAKqE,GACpE87E,EAAsB,CAACD,EAAoBn6C,GAAqB//C,KAAK,KAC3E,GAA0B,GAAtBk6F,GAAkD,GAAvBn6C,EAA0B,SACzD,GAAqC1wC,MAAjCywC,EAAiBq6C,GAA2B,CAC/Ch3C,EAAM/S,OAAO,IAAIyC,GAAqB3wC,KAAK+mC,EAAM6W,EAAiBq6C,GAAc97E,EAAK/b,EAAS,EAAG,IACjG,SAGD,GAA2B,GAAvBy9C,EAA0B,CAC7BoD,EAAM/S,OAAO,IAAIuI,GAA0Bz2C,KAAK+mC,EAAM3mC,EAAS+b,IAC/D,MAAM+7E,EAA2BP,EAAcv5E,OAAO45E,IAChDliD,EAAyB/mD,KAAKyB,IAAI0nG,EAAwB,aAAM,EAAGl4F,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,GAC1GI,EAAmBlc,KAAK+mC,EAAK5mC,KAAK6lB,WAAW5lB,EAAS+b,GAC5D8kC,EAAM/S,OAAO,IAAI6H,GAAwB/1C,KAAK+mC,EAAM+O,EAAgB55B,QAC9D,CACN,MAAMA,EAA0Blc,KAAK+mC,EAAK5mC,KAAK6lB,WAAW5lB,EAAS+b,GACnE,GAAe,MAAXD,EAAiB,MAAM,IAAInsB,MAE/B,GAAK+nG,EAAa15E,OAAOy/B,IAElB,CAGNoD,EAAM/S,OAAO,IAAIyC,GAAqB3wC,KAAK+mC,EAAM,EAAG5qB,EAAK/b,EAAS,EAAG,IACrE6gD,EAAM/S,OAAO,IAAIuI,GAA0Bz2C,KAAK+mC,EAAM3mC,EAAS+b,IAC/D,MAAM6F,EAA6BhiB,KAAK+mC,EAAK5mC,KAAK6lB,WAAW5lB,EAAS+b,GACtE,GAAkB,MAAd6F,EAAoB,MAAM,IAAIjyB,MAClCkxD,EAAM/S,OAAO,IAAI6H,GAAwB/1C,KAAK+mC,EAAM7qB,EAAQ1L,WAAYwR,IACxE,IAAK,MAAMvR,KAAQyL,EAAQg7E,aAC1Bj2C,EAAM/S,OAAO,IAAI6K,GAAgB/4C,KAAK+mC,EAAM/kB,EAAYvR,EAAMuR,EAAWzR,MAAMhiB,QAAQ,SAVxFupG,EAAa15E,OAAOy/B,KAAwB,EAe9C,MAAM3hC,EAA0Blc,KAAK+mC,EAAK5mC,KAAK6lB,WAAW5lB,EAAS+b,GACnE,GAAe,MAAXD,EAAiB,MAAM,IAAInsB,MAC/B,GAA0B,GAAtBioG,EACH/2C,EAAM/S,OAAO,IAAIwH,GAAmB11C,KAAK+mC,EAAM7qB,EAASlc,KAAK+7C,sBAAuB/7C,KAAKg8C,0BACnF,CACN,MAAMk8C,EAA2BP,EAAcv5E,OAAO45E,IACtD/2C,EAAM/S,OAAO,IAAIoH,GAAYt1C,KAAK+mC,EAAM7qB,EAASg8E,EAAmB,MAAGl4F,KAAK+7C,sBAAuB/7C,KAAKg8C,oBAAqBu7C,IAG9H35C,EAAiBq6C,GAAej4F,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS0X,KAAKqE,QAEjE,CACN,IAAK,IAAI47E,EAAmB,EAAGA,EAAWF,EAAYE,IAAY,CACjE,MAAM57E,EAAcnc,KAAKogF,gBAAkB2X,EACrCI,EAAyBn4F,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS0X,KAAKqE,GAC/C,GAAlBg8E,IACHl3C,EAAM/S,OAAO,IAAIyC,GAAqB3wC,KAAK+mC,EAAM,EAAG5qB,EAAK/b,EAAS,EAAG,IACjEJ,KAAKo4F,GAAsBh4F,EAAS+3F,KAGvCn4F,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAASyX,SAASsgF,EAAiB,GAAG5nF,MAAMhiB,OAAS,IAKhF,MAAMqvD,EAAuC,GAC7C,IAAK,IAAIm6C,EAAmB,EAAGA,EAAWF,EAAYE,IAAY,CACjE,MAAM57E,EAAcnc,KAAKogF,gBAAkB2X,EACrCC,EAA6BJ,EAAWG,EAAWH,EAAWrpG,UAAY,EAC1E0pG,EAAsB75E,OAAO45E,GACnC,GAA0B,GAAtBA,EAAyB,SAC7B,GAAqC7qF,MAAjCywC,EAAiBq6C,GAA2B,CAC/Ch3C,EAAM/S,OAAO,IAAIyC,GAAqB3wC,KAAK+mC,EAAM6W,EAAiBq6C,GAAc97E,EAAK/b,EAAS,EAAG,IACjG,SAED,MAAM83F,EAA2BP,EAAcv5E,OAAO45E,IAChDliD,EAAyB/mD,KAAKyB,IAAI0nG,EAAwB,aAAM,EAAGl4F,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,GAC1Gu8E,EAAuCr4F,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAASyX,SAASmgF,EAAqB,GAE5G,GAAuB7qF,MAAnBkrF,GACHd,GAAsBrpG,EAAOqF,aAAeyM,KAAK+mC,EAAK5mC,KAAKub,aAC3Dw/B,GAAoBg9C,EAAmB,MAAGG,EAAgB9nF,QAC1DulC,GAAkBuiD,EAAgB7nF,WAClCywC,EAAM/S,OAAO,IAAIyC,GAAqB3wC,KAAK+mC,EAAMixD,EAAoB77E,EAAK/b,EAAS,EAAG,QAChF,CACiB+M,MAAnBkrF,GAAgCr4F,KAAKo4F,GAAsBh4F,EAAS43F,GACvE/2C,EAAM/S,OAAO,IAAIyC,GAAqB3wC,KAAK+mC,EAAMixD,EAAoB77E,EAAK/b,EAAS,EAAG,IAEtF6gD,EAAM/S,OAAO,IAAIuI,GAA0Bz2C,KAAK+mC,EAAM3mC,EAAS+b,IAEhE,MAAMD,EAA0Blc,KAAK+mC,EAAK5mC,KAAK6lB,WAAW5lB,EAAS+b,GACnE,GAAe,MAAXD,EAAiB,MAAM,IAAInsB,MAC/BkxD,EAAM/S,OAAO,IAAIoH,GAAYt1C,KAAK+mC,EAAM7qB,EAASg8E,EAAmB,MAAGl4F,KAAKq8C,uBAAyBr8C,KAAK+7C,sBAAwB,EAAG/7C,KAAKq8C,uBAAyBr8C,KAAKg8C,oBAAsB9tD,EAAOqF,aAAeyM,KAAK+mC,EAAK5mC,KAAKub,YAAa67E,IAChPt2C,EAAM/S,OAAO,IAAI6H,GAAwB/1C,KAAK+mC,EAAM+O,EAAgB55B,IAGrE0hC,EAAiBq6C,GAAej4F,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS0X,KAAKqE,QA/HG,CAG1E,MAAM67E,EAA6BJ,EAAW,KAAO,EAC/Cz7E,EAAcnc,KAAKogF,gBACnBviC,EAA8B79C,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS0X,KAAKqE,GAC1E,GAA0B,GAAtB67E,GAAkD,GAAvBn6C,EAA0B,SAEzD,MAAMq6C,EAA2BP,EAAcv5E,OAAO45E,IAEhDliD,EAAyB/mD,KAAKyB,IAAI0nG,EAAwB,aAAM,EAAGl4F,KAAK+mC,EAAK5mC,KAAK2b,sBAAwB,GAEhH,GAA2B,GAAvB+hC,EAA0B,CAC7B,MAAMw6C,EAAuCr4F,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAASyX,SAASmgF,EAAqB,GACrF7qF,MAAnBkrF,IACFr4F,KAAKq8C,yBACJnB,GAAoBg9C,EAAmB,MAAGG,EAAgB9nF,QAAUulC,GAAkBuiD,EAAgB7nF,YACvGxQ,KAAKo4F,GAAsBh4F,EAAS43F,IACrC/2C,EAAM/S,OAAO,IAAIyC,GAAqB3wC,KAAK+mC,EAAMixD,EAAoB77E,EAAK/b,EAAS,EAAG,IAEtF6gD,EAAM/S,OAAO,IAAIuI,GAA0Bz2C,KAAK+mC,EAAM3mC,EAAS+b,IAIjE,MAAMD,EAA0Blc,KAAK+mC,EAAK5mC,KAAK6lB,WAAW5lB,EAAS+b,GACnE,GAAe,MAAXD,EAAiB,MAAM,IAAInsB,MAC/BkxD,EAAM/S,OAAO,IAAIoH,GAAYt1C,KAAK+mC,EAAM7qB,EAASg8E,EAAmB,MAAGl4F,KAAKq8C,uBAAyBr8C,KAAK+7C,sBAAwB,EAAG/7C,KAAKq8C,uBAAyBr8C,KAAKg8C,oBAAsB9tD,EAAOqF,aAAeyM,KAAK+mC,EAAK5mC,KAAKub,YAAa67E,IAChPt2C,EAAM/S,OAAO,IAAI6H,GAAwB/1C,KAAK+mC,EAAM+O,EAAgB55B,KA0GtElc,KAAK+mC,EAAKqa,OAAOH,GAGXpnD,eACN,MAAMu9F,EAAsC53E,KAAKC,MAAMrB,OAAOyC,OAAOC,aAAaC,QAAQ,mBAC1F,GAAqB,MAAjBq2E,EAAuB,OAC3B,MAAME,EAA+BF,EAAwB,UAAK,GAE5Dn2C,EAAqB,IAAIrV,GACzB4rD,EAA0Bx3F,KAAKkgF,kBAAoB,GAAKlgF,KAAKmgF,mBAAqB,EAElFsX,EAAsBD,EAAgBx3F,KAAKmgF,mBAAqBpxF,KAAKyB,IAAI8mG,EAAc/oG,OAAQyR,KAAK+mC,EAAK5mC,KAAK8b,kBAAoBjc,KAAKqgF,qBAC7I,IAAK,IAAIqX,EAAuB,EAAGA,EAAeD,EAAaC,IAAgB,CAC9E,MAAMP,EAA2BG,EAAcI,EAAeJ,EAAc/oG,QACtE6R,EAAkBJ,KAAKqgF,oBAAsBqX,EAE7CE,EAAuBT,EAAkB,MAAK,GACpD,GAAyB,GAArBS,EAAWrpG,OAAa,SAE5B,MAAMspG,EAAqBL,EAAgBx3F,KAAKkgF,kBAAoBnxF,KAAKyB,IAAIonG,EAAWrpG,OAAQyR,KAAK+mC,EAAK5mC,KAAKwb,SAAW3b,KAAKogF,iBAC/H,IAAK,IAAI2X,EAAmB,EAAGA,EAAWF,EAAYE,IAAY,CACjE,MAAMC,EAA6BJ,EAAWG,EAAWH,EAAWrpG,UAAY,EAC1E4tB,EAAcnc,KAAKogF,gBAAkB2X,EAEvCC,EAAqBh4F,KAAK+mC,EAAK5mC,KAAKyb,oBACvCqlC,EAAM/S,OAAO,IAAIoI,GAAyBt2C,KAAK+mC,EAAMixD,IAGtD/2C,EAAM/S,OAAO,IAAIyC,GAAqB3wC,KAAK+mC,EAAMixD,EAAoB77E,EAAK/b,EAAS,EAAG,KAIxFJ,KAAK+mC,EAAKqa,OAAOH,GAGXpnD,YACN,IAAI2gD,GAAuBx6C,KAAK+mC,EAAM,EAAG,GACb,GAAxB/mC,KAAKogF,iBACoB,GAA5BpgF,KAAKqgF,qBACLrgF,KAAKkgF,mBAAqBlgF,KAAK+mC,EAAK5mC,KAAKwb,UACzC3b,KAAKmgF,oBAAsBngF,KAAK+mC,EAAK5mC,KAAK8b,kBAC1Cjc,KAAKi/E,kBAAkBj/E,KAAK+mC,EAAK5qB,IAAKnc,KAAK+mC,EAAK5qB,IAAKnc,KAAK+mC,EAAK3mC,QAASJ,KAAK+mC,EAAK3mC,SAElFJ,KAAKi/E,kBAAkB,EAAGj/E,KAAK+mC,EAAK5mC,KAAKwb,SAAW,EAAG,EAAG3b,KAAK+mC,EAAK5mC,KAAK8b,kBAAoB,GAE9Fjc,KAAKk/E,mBAGCrlF,gBACN,IAAI2gD,GAAuBx6C,KAAK+mC,EAAM,EAAG,GACb,GAAxB/mC,KAAKogF,iBAAwBpgF,KAAKkgF,mBAAqBlgF,KAAK+mC,EAAK5mC,KAAKwb,SACzE3b,KAAKi/E,kBAAkBj/E,KAAK+mC,EAAK5qB,IAAKnc,KAAK+mC,EAAK5qB,IAAKnc,KAAK68C,eAAgB78C,KAAK88C,gBAE/E98C,KAAKi/E,kBAAkB,EAAGj/E,KAAK+mC,EAAK5mC,KAAKwb,SAAW,EAAG3b,KAAK68C,eAAgB78C,KAAK88C,gBAElF98C,KAAKk/E,mBAGCrlF,oBACNmG,KAAK+mC,EAAKqa,OAAO,IAAI7D,GAAsCv9C,KAAK+mC,EAAM/mC,KAAKogF,gBAAiBpgF,KAAKkgF,kBAAmBlgF,KAAKqgF,oBAAqBrgF,KAAKmgF,qBAG7ItmF,aAAay+F,GACnB,GAAIA,EAAa,CAChB,IAAIC,GAAoB,EACxB,IAAK,IAAIn4F,EAAkB,EAAGA,EAAUJ,KAAK+mC,EAAK5mC,KAAK+X,SAAS3pB,OAAQ6R,IACvE,GAAIJ,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS2X,MAAO,CAC3CwgF,GAAW,EACX,MAGF,IAAK,IAAIn4F,EAAkB,EAAGA,EAAUJ,KAAK+mC,EAAK5mC,KAAK+X,SAAS3pB,OAAQ6R,IACvEJ,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS2X,OAASwgF,MAErC,CACN,IAAIC,GAAsB,EAC1B,IAAK,MAAMp4F,KAAWJ,KAAK62F,KAC1B,IAAK72F,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS2X,MAAO,CAC5CygF,GAAa,EACb,MAGF,IAAK,MAAMp4F,KAAWJ,KAAK62F,KAC1B72F,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS2X,MAAQygF,EAI3Cx4F,KAAK+mC,EAAKwD,SAASC,UAGb3wC,eACN,IAAI4+F,GAAyB,EAE7B,IAAK,IAAIr4F,EAAkB,EAAGA,EAAUJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmBhB,IAAW,CACvH,MAAMs4F,EAAyBt4F,EAAUJ,KAAKqgF,qBAAuBjgF,GAAWJ,KAAKqgF,oBAAsBrgF,KAAKmgF,mBAChH,GAAIngF,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS2X,OAAS2gF,EAAe,CAC5DD,GAAgB,EAChB,OAIF,GAAIA,EACH,IAAK,IAAIr4F,EAAkB,EAAGA,EAAUJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmBhB,IAC5GJ,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS2X,OAAQ,OAG1C,IAAK,IAAI3X,EAAkB,EAAGA,EAAUJ,KAAK+mC,EAAK5mC,KAAKe,kBAAoBlB,KAAK+mC,EAAK5mC,KAAKiB,kBAAmBhB,IAC5GJ,KAAK+mC,EAAK5mC,KAAK+X,SAAS9X,GAAS2X,MAAQ3X,EAAUJ,KAAKqgF,qBAAuBjgF,GAAWJ,KAAKqgF,oBAAsBrgF,KAAKmgF,mBAI5HngF,KAAK+mC,EAAKwD,SAASC,UAGb3wC,cACN,MAAMonD,EAAqB,IAAIrV,IAE3B5rC,KAAKkgF,kBAAoB,GAAKlgF,KAAKmgF,mBAAqB,IAC3Dl/B,EAAM/S,OAAO,IAAIqP,GAAsCv9C,KAAK+mC,EAAM/mC,KAAKogF,gBAAiBpgF,KAAKkgF,kBAAmBlgF,KAAKqgF,oBAAqBrgF,KAAKmgF,qBAGhJ,IAAK,MAAM//E,KAAWJ,KAAK62F,KAC1B,IAAK,MAAM36E,KAAWlc,KAAK82F,GAAqB12F,GAC/C6gD,EAAM/S,OAAO,IAAIqK,GAAoBv4C,KAAK+mC,EAAM7qB,IAIlDlc,KAAK+mC,EAAKqa,OAAOH,GAGXpnD,aACN,MAAMonD,EAAqB,IAAIrV,IAE3B5rC,KAAKkgF,kBAAoB,GAAKlgF,KAAKmgF,mBAAqB,IAC3Dl/B,EAAM/S,OAAO,IAAIqP,GAAsCv9C,KAAK+mC,EAAM/mC,KAAKogF,gBAAiBpgF,KAAKkgF,kBAAmBlgF,KAAKqgF,oBAAqBrgF,KAAKmgF,qBAGhJ,MAAMwY,EAAwB,EAAC,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC3G,IAAK,MAAMv4F,KAAWJ,KAAK62F,KAC1B,IAAI72F,KAAK+mC,EAAK5mC,KAAK8c,kBAAkB7c,KAAYJ,KAAK+mC,EAAK5mC,KAAK+c,gBAAgB9c,GAChF,IAAK,MAAM8b,KAAWlc,KAAK82F,GAAqB12F,GAC/CisC,GAAiBnwB,EAASy8E,GAI5B,MAAMz6C,W3BziByB06C,EAAuCC,GACvE,MAAMC,EAAwC5qG,EAAOmE,OAAOwmG,GAAetmG,MACrEwmG,EAAqB,GACrBC,EAAqB,GAC3B,IAAK,IAAI1qG,EAAY,EAAGA,EAAI,GAAIA,IAC3BsqG,EAActqG,IAAIyqG,EAASpqG,KAAKL,GAChCwqG,EAAcxqG,IAAI0qG,EAASrqG,KAAKL,GAErC,MAAM2qG,EAA2BF,EAASxqG,OAASyqG,EAASzqG,OACtD2qG,EAAyBD,EAAkBD,EAAWD,EACtDI,EAAwBF,EAAkBF,EAAWC,EAErDI,EAAkB,CAAC,OAAQ,SAAU,SAAU,QAAS,QAAS,SAAU,UAAW,QAAS,QAAS,QAAS,UAAW,UAAW,QAC7I,IAAIC,EAAoBriE,OAAO6iC,iBAC3By/B,EAAyB,GAC7B,MAAM5f,EAAoB,CAAC,CAAC,IAE5B,KAAOA,EAAMnrF,OAAS,GAAG,CACxB,MAAMgrG,EAAqB7f,EAAMh7D,MAEjC,GAAI66E,EAAShrG,QAAU2qG,EAAa3qG,OAAQ,CAE3C,IAAIirG,EAAgB,EACpB,IAAK,IAAIlrG,EAAY,EAAGA,EAAIirG,EAAShrG,OAAQD,IAC5CkrG,GAASzqG,KAAKC,IAAIkqG,EAAa5qG,GAAK6qG,EAAYI,EAASjrG,KACrD8qG,EAAMF,EAAa5qG,KAAO8qG,EAAMD,EAAYI,EAASjrG,OAExDkrG,GAAS,KAGPH,EAAYG,IACfH,EAAYG,EACZF,EAAeC,OAEV,CAEN,MAAMlpG,EAAmBkpG,EAASA,EAAShrG,OAAS,GAAK,EACnDgC,EAAoB4oG,EAAY5qG,OAAS2qG,EAAa3qG,OAASgrG,EAAShrG,OAC9E,IAAK,IAAID,EAAY+B,EAAU/B,GAAKiC,EAAWjC,IAC9CorF,EAAM/qF,KAAK4qG,EAASlpF,OAAO/hB,KAK9B,MAAMmrG,EAA6B,GACnC,IAAK,IAAInrG,EAAY,EAAGA,EAAIgrG,EAAa/qG,OAAQD,IAAK,CACrD,MAAMorG,EAAoBR,EAAa5qG,GACjCqrG,EAAmBR,EAAYG,EAAahrG,IAClDmrG,EAAenrG,GAAK2qG,EACjB,CAACU,EAAkBD,GACnB,CAACA,EAAmBC,GAIxBF,EAAe9qG,KAAK,CAAC,GAAI,KACzBqqG,EAASrqG,KAAK,IAEd,IAAIirG,EAAsB,EAC1B,MAAMC,EAAyB,GAC/B,IAAK,IAAIvrG,EAAY,EAAGA,EAAI,GAAIA,IAAK,CACpC,MAAMwrG,EAAiBL,EAAeG,GAAa,GAC7CG,EAAiBN,EAAeG,GAAa,GAC7CI,EAAkBP,EAAeG,EAAc,GAAG,GAClDK,EAAkBR,EAAeG,EAAc,GAAG,GACpDtrG,GAAK0rG,EAAU,GAAGJ,IAEtB,MAAMv7C,GAA4B/vD,EAAIwrG,IAAWG,EAAUF,IAAWC,EAAUF,GAAUC,EAE1F,IAAIl+B,EAAuB,EACvBq+B,EAA+BljE,OAAO6iC,iBAC1C,IAAK,MAAMsgC,KAAYnB,EAAU,CAChC,IAAIn8B,EAAmB9tE,KAAKC,IAAImrG,EAAW97C,GACvC+6C,EAAMe,IAAaf,EAAM9qG,KAE5BuuE,GAAY,IAETq9B,EAAuBr9B,IAC1Bq9B,EAAuBr9B,EACvBhB,EAAes+B,GAIjBN,EAAavrG,GAAKutE,EAGnB,OAAOg+B,E2BodqBO,CAAiBzB,EAAY34F,KAAK+mC,EAAK5mC,KAAKib,OAEvE,IAAK,MAAMhb,KAAWJ,KAAK62F,KAC1B,IAAI72F,KAAK+mC,EAAK5mC,KAAK8c,kBAAkB7c,KAAYJ,KAAK+mC,EAAK5mC,KAAK+c,gBAAgB9c,GAChF,IAAK,MAAM8b,KAAWlc,KAAK82F,GAAqB12F,GAC/C6gD,EAAM/S,OAAO,IAAI+P,GAAmBj+C,KAAK+mC,EAAM7qB,EAASgiC,IAI1Dl+C,KAAK+mC,EAAKqa,OAAOH,GAGXpnD,kBAAkB0iD,EAAeC,EAAeC,EAAeC,GAErE18C,KAAKo2F,GAAe,IAAIxqD,GACxB5rC,KAAKo2F,GAAaloD,OAAO,IAAIoO,GAAqBt8C,KAAK+mC,EAAMwV,EAAOC,EAAOC,EAAOC,IAClF18C,KAAK+mC,EAAKqa,OAAOphD,KAAKo2F,IAHgB,GAMhCv8F,UAAUqiD,EAAiBvkC,GACjC,MAAMqxD,EAAgChpE,KAAK+mC,EAAKutB,cAAct0D,KAAKm2F,IACnEn2F,KAAKm2F,GAAmB,IAAIvqD,IAExB5rC,KAAKkgF,kBAAoB,GAAKlgF,KAAKmgF,mBAAqB,IAC3DngF,KAAKm2F,GAAiBjoD,OAAO,IAAIqP,GAAsCv9C,KAAK+mC,EAAM/mC,KAAKogF,gBAAiBpgF,KAAKkgF,kBAAmBlgF,KAAKqgF,oBAAqBrgF,KAAKmgF,qBAGhK,IAAK,MAAM//E,KAAWJ,KAAK62F,KAC1B,IAAK,MAAM36E,KAAWlc,KAAK82F,GAAqB12F,GAC/CJ,KAAKm2F,GAAiBjoD,OAAO,IAAIgM,GAAgBl6C,KAAK+mC,EAAM3mC,EAAS8b,EAASggC,GAAQ,EAAOvkC,IAI/F3X,KAAK+mC,EAAKqa,OAAOphD,KAAKm2F,GAAkBntB,GAGlCnvE,cAAc2W,GACpB,MAAMywC,EAAqB,IAAIrV,IAE3B5rC,KAAKkgF,kBAAoB,GAAKlgF,KAAKmgF,mBAAqB,IAC3Dl/B,EAAM/S,OAAO,IAAIqP,GAAsCv9C,KAAK+mC,EAAM/mC,KAAKogF,gBAAiBpgF,KAAKkgF,kBAAmBlgF,KAAKqgF,oBAAqBrgF,KAAKmgF,qBAGhJ,IAAK,MAAM//E,KAAWJ,KAAK62F,KAC1B,IAAK,MAAM36E,KAAWlc,KAAK82F,GAAqB12F,GAC/C6gD,EAAM/S,OAAO,IAAI6H,GAAwB/1C,KAAK+mC,EAAMv2B,EAAY0L,IAIlElc,KAAK+mC,EAAKqa,OAAOH,GAGXpnD,oBACNmG,KAAK28C,eAAiB38C,KAAK48C,eAAiB58C,KAAK+mC,EAAK5qB,IACtDnc,KAAK68C,eAAiB78C,KAAK88C,eAAiB98C,KAAK+mC,EAAK3mC,eCpnB3Ci6F,GAAbxgG,cACSmG,KAAAs6F,GAA4B,GAC5Bt6F,KAAAu6F,IAAkB,EAEnB1gG,MAAM2gG,IAC4B,GAApCx6F,KAAKs6F,GAAU3lF,QAAQ6lF,IAC1Bx6F,KAAKs6F,GAAU3rG,KAAK6rG,GAIf3gG,QAAQ2gG,GACd,MAAMrrG,EAAgB6Q,KAAKs6F,GAAU3lF,QAAQ6lF,IAC/B,GAAVrrG,GACH6Q,KAAKs6F,GAAU97E,OAAOrvB,EAAO,GAIxB0K,UACNmG,KAAKu6F,IAAS,EAGR1gG,iBACN,GAAKmG,KAAKu6F,GAAV,CACAv6F,KAAKu6F,IAAS,EACd,IAAK,MAAMC,KAAWx6F,KAAKs6F,GAAUjqF,SACpCmqF,YCJUC,GAuCZ5gG,cApCOmG,KAAAuqC,SAA2B,IAAI8vD,GAC/Br6F,KAAAy6C,UAAuB,IAAIy7C,GAAUl2F,MACrCA,KAAAI,QAAkB,EAClBJ,KAAA0+C,kBAA4B,EAC5B1+C,KAAAmc,IAAc,EASdnc,KAAAgzE,mBAA6B,EAC7BhzE,KAAAwuF,oBAA8B,EAK9BxuF,KAAAusF,kBAA4B,EAC5BvsF,KAAAhM,OAAiB,GACjBgM,KAAA+pC,iBAA2B,GAC3B/pC,KAAAkpC,aAAuB,EACvBlpC,KAAAmhD,OAAwB,KACxBnhD,KAAAg/D,gBAA+Bn+C,OAAOC,aAAaC,QAAQ,iBAAmB,KAAtD,EACxB/gB,KAAAw9D,kBAA4BtvE,EAAO2K,aAAemH,KAAKg/D,cAGtDh/D,KAAA06F,GAA0B,IAAI5hB,GAE9B94E,KAAA26F,GAA+B,KAC/B36F,KAAA46F,GAA0B,EAC1B56F,KAAA66F,IAAgC,EAChC76F,KAAA86F,IAA4B,EAC7B96F,KAAA+6F,IAAiC,EAqJhC/6F,KAAAg7F,GAA2B,KAClC,GAA4B,MAAxBn6E,OAAOo6E,QAAQC,OAAyC,IAAxBr6E,OAAO8oC,SAASwxC,KAAY,CAE/Dn7F,KAAK46F,KACL56F,KAAKo7F,KACL,MAAMF,EAAsB,CAAEG,SAAS,EAAMC,eAAgBt7F,KAAK46F,GAAiBz+E,IAAKnc,KAAKmc,IAAK/b,QAASJ,KAAKI,QAASm7F,YAAav7F,KAAKw7F,GAAcr6C,OAAQ,KAAM1G,UAAWz6C,KAAKy6C,UAAUghD,UAUjM,OATA,IAAInhD,GAAWt6C,KAAM6gB,OAAO8oC,SAASwxC,MACrCn7F,KAAKmhD,OAAS+5C,EAAM/5C,OAChBnhD,KAAKgtF,kBACRhtF,KAAK07F,GAAcR,EAAOl7F,KAAKG,KAAKwyF,kBAEpC3yF,KAAK27F,GAAWT,EAAOl7F,KAAKG,KAAKwyF,kBAElC3yF,KAAK47F,wBACL57F,KAAKuqC,SAASokC,iBAIf,MAAMusB,EAA6Bl7F,KAAK67F,KACxC,GAAa,MAATX,EAAe,MAAM,IAAInrG,MAAM,0BAG/BmrG,EAAMI,gBAAkBt7F,KAAK46F,KAEjC56F,KAAKmc,IAAM++E,EAAM/+E,IACjBnc,KAAKI,QAAU86F,EAAM96F,QACrBJ,KAAK46F,GAAkBM,EAAMI,eAC7Bt7F,KAAKmhD,OAAS+5C,EAAM/5C,OACpB,IAAI7G,GAAWt6C,KAAMA,KAAK87F,MAE1B97F,KAAKw7F,GAAeN,EAAMK,YAC1Bv7F,KAAKy6C,UAAUshD,SAASb,EAAMzgD,WAI9Bz6C,KAAK47F,mBACL57F,KAAKuqC,SAASokC,mBAGP3uE,KAAAg8F,GAAiB,KACxBh8F,KAAKuqC,SAASokC,kBAGP3uE,KAAAi8F,GAAsB,OAIvBj8F,KAAKs5B,MAAM7L,UAAYztB,KAAKmc,IAAMnc,KAAKy6C,UAAU2lC,iBAAmBpgF,KAAKy6C,UAAU2lC,gBAAkBpgF,KAAKy6C,UAAUylC,mBAAqBlgF,KAAKmc,MACnJnc,KAAKI,QAAUJ,KAAKy6C,UAAU4lC,qBAC9BrgF,KAAKy6C,UAAU4lC,oBAAsBrgF,KAAKy6C,UAAU0lC,oBAAsBngF,KAAKI,SAC/EJ,KAAKG,KAAKwb,SAAW3b,KAAKy6C,UAAU2lC,gBAAkBpgF,KAAKy6C,UAAUylC,mBACrElgF,KAAKG,KAAK8b,kBAAoBjc,KAAKy6C,UAAU4lC,oBAAsBrgF,KAAKy6C,UAAU0lC,oBAC7C,GAApCngF,KAAKy6C,UAAUylC,mBAA+D,GAArClgF,KAAKy6C,UAAU0lC,qBACzDngF,KAAKy6C,UAAUC,qBAIT16C,KAAAk8F,GAAsB,KAC7Bl8F,KAAK+6F,IAAwB,EAC7B,MAAMI,EAAen7F,KAAKG,KAAKwyF,iBAC3B3yF,KAAK66F,IAAsB76F,KAAK46F,KAChC56F,KAAK86F,GACR96F,KAAKo7F,KAELp7F,KAAK06F,GAAUyB,YAAYn8F,KAAKw7F,GAAcx7F,KAAKG,KAAK4b,MAAOo/E,GAEhE,IAAID,EAAsB,CAAEG,SAAS,EAAMC,eAAgBt7F,KAAK46F,GAAiBz+E,IAAKnc,KAAKmc,IAAK/b,QAASJ,KAAKI,QAASm7F,YAAav7F,KAAKw7F,GAAcr6C,OAAQnhD,KAAKmhD,OAAQ1G,UAAWz6C,KAAKy6C,UAAUghD,UAClMz7F,KAAK66F,GACR76F,KAAK27F,GAAWT,EAAOC,GAEvBn7F,KAAK07F,GAAcR,EAAOC,GAE3Bn7F,KAAK66F,IAAuB,EAC5B76F,KAAK86F,IAAmB,GA3NxB96F,KAAKuqC,SAAS06B,MAAMjlE,KAAKi8F,IAEzBj8F,KAAK+sF,SAAsD,QAA3ClsE,OAAOC,aAAaC,QAAQ,YAC5C/gB,KAAKslE,WAA0D,QAA7CzkD,OAAOC,aAAaC,QAAQ,cAC9C/gB,KAAKkvE,kBAAwE,QAApDruD,OAAOC,aAAaC,QAAQ,qBACrD/gB,KAAK+zD,UAAwD,QAA5ClzC,OAAOC,aAAaC,QAAQ,aAC7C/gB,KAAK+1E,YAA4D,QAA9Cl1D,OAAOC,aAAaC,QAAQ,eAC/C/gB,KAAK2zE,aAA8D,QAA/C9yD,OAAOC,aAAaC,QAAQ,gBAChD/gB,KAAKssF,cAAgE,QAAhDzrE,OAAOC,aAAaC,QAAQ,iBACjD/gB,KAAKgzE,kBAAwE,QAApDnyD,OAAOC,aAAaC,QAAQ,qBACrD/gB,KAAK8nE,oBAA4E,QAAtDjnD,OAAOC,aAAaC,QAAQ,uBACvD/gB,KAAKgtF,kBAAwE,SAApDnsE,OAAOC,aAAaC,QAAQ,qBACrD/gB,KAAKusF,iBAAsE,SAAnD1rE,OAAOC,aAAaC,QAAQ,oBACpD/gB,KAAK8+D,WAAaj+C,OAAOC,aAAaC,QAAQ,eAAiB,SAC/D/gB,KAAK47E,WAAa/6D,OAAOC,aAAaC,QAAQ,eAAiB,mBAE/DhhB,EAAY47E,SAAS37E,KAAK47E,YAC1Btd,GAAOS,cAAc/+D,KAAK8+D,YAEmB,MAAzCj+C,OAAOC,aAAaC,QAAQ,YAC/B/gB,KAAKhM,OAASjF,KAAKyB,IAASqwB,OAAOC,aAAaC,QAAQ,YAAc,EAAG,KAGjB,MAArDF,OAAOu7E,eAAer7E,QAAQ,sBACjCF,OAAOu7E,eAAep7C,QAAQ,mBAAoB,KAClDngC,OAAOu7E,eAAep7C,QAAQ,kBAAmB,KACjDngC,OAAOu7E,eAAep7C,QAAQ,kBAAmB,MAGlD,IAAIq7C,EAAqBx7E,OAAO8oC,SAASwxC,KACvB,IAAdkB,IACHA,EAAar8F,KAAK87F,MAEnB97F,KAAKG,KAAO,IAAI6X,EAAKqkF,GACH,IAAdA,GAAkClvF,MAAdkvF,GAAyBjiD,GAAsBp6C,KAAKG,MAC5Ek8F,EAAar8F,KAAKG,KAAKwyF,iBACvB3yF,KAAKs5B,MAAQ,IAAInQ,GAAMnpB,KAAKG,MAC5BH,KAAKs5B,MAAMtlC,OAASgM,KAAKs8F,KAEzBt8F,KAAKi/D,iBAAmBj/D,KAAKg/D,cAAgBh/D,KAAKG,KAAKsX,IAAM,EAE7D,IAAIyjF,EAA6Bl7F,KAAK67F,KACzB,MAATX,IAEHA,EAAQ,CAAEG,SAAS,EAAOC,eAAgB,EAAGn/E,IAAK,EAAG/b,QAAS,EAAGm7F,YAAa9iB,KAAet3B,OAAQ,KAAM1G,UAAWz6C,KAAKy6C,UAAUghD,WAE7GtuF,MAArB+tF,EAAMK,cAA0BL,EAAMK,YAAc9iB,MACxDz4E,KAAK07F,GAAcR,EAAOmB,GAC1Bx7E,OAAO6pB,iBAAiB,aAAc1qC,KAAKg7F,IAC3Cn6E,OAAO6pB,iBAAiB,WAAY1qC,KAAKg7F,IAEzCh7F,KAAKmc,IAAM++E,EAAM/+E,IACjBnc,KAAKI,QAAU86F,EAAM96F,QACrBJ,KAAKw7F,GAAeN,EAAMK,YAC1Bv7F,KAAKkpC,aAAen6C,KAAKmgB,IAAI,EAAGlP,KAAKmc,KAAOnc,KAAK+pC,iBAAmB,IACpE/pC,KAAKmhD,OAAS+5C,EAAM/5C,OACpBnhD,KAAKy6C,UAAUshD,SAASb,EAAMzgD,WAM9B,IAAK,MAAM8hD,IAAa,CAAC,QAAS,SAAU,QAAS,QAAS,UAAW,YAAa,YAAa,UAAW,aAAc,YAAa,WAAY,eACpJ17E,OAAO6pB,iBAAiB6xD,EAAWv8F,KAAKg8F,IAInCniG,0BACN,MAAMqhG,EAAsBl7F,KAAK67F,KACjC77F,KAAKgtF,mBAAqBhtF,KAAKgtF,kBAC/BhtF,KAAK07F,GAAcR,EAAOl7F,KAAKG,KAAKwyF,kBAG7B94F,KACP,GAAImG,KAAKgtF,kBACR,OAAOnsE,OAAOo6E,QAAQC,MAChB,CACN,MAAMzE,EAAYj3E,KAAKC,MAAMoB,OAAOu7E,eAAer7E,QAAQF,OAAOu7E,eAAer7E,QAAQ,sBACzF,OAAe,MAAR01E,EAAe,KAAOA,EAAKyE,OAI5BrhG,KACP,GAAImG,KAAKgtF,kBACR,OAAOnsE,OAAO8oC,SAASwxC,KACjB,CACN,MAAM1E,EAAYj3E,KAAKC,MAAMoB,OAAOu7E,eAAer7E,QAAQF,OAAOu7E,eAAer7E,QAAQ,sBACzF,OAAe,MAAR01E,EAAe,GAAKA,EAAK0E,MAI1BthG,GAAcqhG,EAAqBC,GACtCn7F,KAAKgtF,kBACRnsE,OAAOo6E,QAAQuB,aAAatB,EAAO,GAAI,IAAMC,IAE7Ct6E,OAAOu7E,eAAep7C,QAAQngC,OAAOu7E,eAAer7E,QAAQ,qBAAuB,IAAKvB,KAAKmzC,UAAU,CAAEuoC,MAAAA,EAAOC,KAAAA,KAChHt6E,OAAOo6E,QAAQuB,aAAa,KAAM,GAAI7yC,SAAS8yC,WAIzC5iG,GAAWqhG,EAAqBC,GACvC,GAAIn7F,KAAKgtF,kBACRnsE,OAAOo6E,QAAQyB,UAAUxB,EAAO,GAAI,IAAMC,OACpC,CACN,IAAIwB,EAAuB3lE,OAAOnW,OAAOu7E,eAAer7E,QAAQ,qBAC5D67E,EAAsB5lE,OAAOnW,OAAOu7E,eAAer7E,QAAQ,oBAC/D47E,GAAgBA,EAAe,GAAKlC,GAAaoC,GACjDh8E,OAAOu7E,eAAep7C,QAAQ,mBAAoB5iC,OAAOu+E,IACzD97E,OAAOu7E,eAAep7C,QAAQ,kBAAmB5iC,OAAOu+E,IACpDA,GAAgBC,IACnBA,GAAeA,EAAc,GAAKnC,GAAaoC,GAC/Ch8E,OAAOu7E,eAAep7C,QAAQ,kBAAmB5iC,OAAOw+E,KAEzD/7E,OAAOu7E,eAAep7C,QAAQ5iC,OAAOu+E,GAAen9E,KAAKmzC,UAAU,CAAEuoC,MAAAA,EAAOC,KAAAA,KAC5Et6E,OAAOo6E,QAAQuB,aAAa,KAAM,GAAI7yC,SAAS8yC,WAIzC5iG,KACP,GAAImG,KAAKgtF,kBACRnsE,OAAOo6E,QAAQ6B,cACT,CACN,IAAIH,EAAuB3lE,OAAOnW,OAAOu7E,eAAer7E,QAAQ,qBAE5D47E,GADsB3lE,OAAOnW,OAAOu7E,eAAer7E,QAAQ,sBAE9D47E,GAAgBA,EAAe,GAAKlC,GAAaoC,GACjDh8E,OAAOu7E,eAAep7C,QAAQ,mBAAoB5iC,OAAOu+E,IACzDp7C,WAAWvhD,KAAKg7F,MAKXnhG,KACP,GAAImG,KAAKgtF,kBACRnsE,OAAOo6E,QAAQ8B,WACT,CACN,IAAIJ,EAAuB3lE,OAAOnW,OAAOu7E,eAAer7E,QAAQ,qBAE5D47E,GADsB3lE,OAAOnW,OAAOu7E,eAAer7E,QAAQ,sBAE9D47E,GAAgBA,EAAelC,GAAaoC,GAAsB,GAAKpC,GAAaoC,GACpFh8E,OAAOu7E,eAAep7C,QAAQ,mBAAoB5iC,OAAOu+E,IACzDp7C,WAAWvhD,KAAKg7F,MAiFZnhG,OAAOgyC,EAAgBlyC,GAAmB,EAAOqjG,GAAmB,GACtEnxD,EAAOC,UACV9rC,KAAK26F,GAAgB,KACjBhhG,GAASqG,KAAKi9F,OAElBpxD,EAAOqxD,SACPl9F,KAAK26F,GAAgB9uD,EACrB7rC,KAAK66F,GAAuB76F,KAAK66F,KAAyBlhG,EAC1DqG,KAAK86F,GAAmB96F,KAAK86F,IAAoBkC,EAC5Ch9F,KAAK+6F,KAITl6E,OAAOoiD,sBAAsBjjE,KAAKk8F,IAClCl8F,KAAK+6F,IAAwB,IAKxBlhG,KACPmG,KAAKw7F,GAAe/iB,KAGd5+E,WAAWsnD,GACjBnhD,KAAKmhD,OAASA,EACd,MAAMg6C,EAAen7F,KAAKG,KAAKwyF,iBAC/B3yF,KAAK46F,KACL,MAAMM,EAAQ,CAAEG,SAAS,EAAMC,eAAgBt7F,KAAK46F,GAAiBz+E,IAAKnc,KAAKmc,IAAK/b,QAASJ,KAAKI,QAASm7F,YAAav7F,KAAKw7F,GAAcr6C,OAAQnhD,KAAKmhD,OAAQ1G,UAAWz6C,KAAKy6C,UAAUghD,UAC1Lz7F,KAAK27F,GAAWT,EAAOC,GAGjBthG,OACsBmG,KAAK67F,KACvBR,SAASr7F,KAAKi9F,KAGlBpjG,OACNmG,KAAKm9F,KAGCtjG,qBAAqBgyC,GAC3B7rC,KAAK26F,GAAgB9uD,EAGfhyC,mBACNmG,KAAK26F,GAAgB,KAGf9gG,cAAcgyC,GACpB,OAAiB,MAAVA,GAAkBA,GAAU7rC,KAAK26F,GAGlC9gG,gBACNmG,KAAKI,QAAU,EACfJ,KAAKmc,IAAM,EACXnc,KAAKkpC,aAAe,EACpBlpC,KAAKuqC,SAASC,UACdxqC,KAAKs5B,MAAM8jE,cACXp9F,KAAKuqC,SAASC,UAGR3wC,kBACNgnB,OAAOC,aAAakgC,QAAQ,WAAYhhD,KAAK+sF,SAAW,OAAS,SACjElsE,OAAOC,aAAakgC,QAAQ,aAAchhD,KAAKslE,WAAa,OAAS,SACrEzkD,OAAOC,aAAakgC,QAAQ,oBAAqBhhD,KAAKkvE,kBAAoB,OAAS,SACnFruD,OAAOC,aAAakgC,QAAQ,YAAahhD,KAAK+zD,UAAY,OAAS,SACnElzC,OAAOC,aAAakgC,QAAQ,cAAehhD,KAAK+1E,YAAc,OAAS,SACvEl1D,OAAOC,aAAakgC,QAAQ,eAAgBhhD,KAAK2zE,aAAe,OAAS,SACzE9yD,OAAOC,aAAakgC,QAAQ,gBAAiBhhD,KAAKssF,cAAgB,OAAS,SAC3EzrE,OAAOC,aAAakgC,QAAQ,oBAAqBhhD,KAAKgzE,kBAAoB,OAAS,SACnFnyD,OAAOC,aAAakgC,QAAQ,sBAAuBhhD,KAAK8nE,oBAAsB,OAAS,SACvFjnD,OAAOC,aAAakgC,QAAQ,oBAAqBhhD,KAAKgtF,kBAAoB,OAAS,SACnFnsE,OAAOC,aAAakgC,QAAQ,mBAAoBhhD,KAAKusF,iBAAmB,OAAS,SACjF1rE,OAAOC,aAAakgC,QAAQ,aAAchhD,KAAK8+D,YAC/Cj+C,OAAOC,aAAakgC,QAAQ,aAAchhD,KAAK47E,YAC/C/6D,OAAOC,aAAakgC,QAAQ,SAAU5iC,OAAOpe,KAAKhM,SAG5C6F,UAAUsV,GAChBnP,KAAKhM,OAASmb,EACdnP,KAAKgzF,kBACLhzF,KAAKs5B,MAAMtlC,OAASgM,KAAKs8F,KAGlBziG,KACP,OAAO9K,KAAKyB,IAAI,EAAKzB,KAAKuB,IAAI0P,KAAKhM,OAAS,GAAM,KAAQjF,KAAKuB,IAAI,GAAM0P,KAAKhM,OAAS,IAAQ,IAGzF6F,kBAAkBwjG,EAAoB,GAC5C,OAAOr9F,KAAKG,KAAK6lB,WAAWhmB,KAAKI,QAASJ,KAAKmc,IAAMkhF,GAG/CxjG,qBAAqBwjG,EAAoB,GAC/C,MAAMnhF,EAA0Blc,KAAK4xE,kBAAkByrB,GACvD,OAAkB,MAAXnhF,EAAkB,EAAIA,EAAQ1L,WAG/B3W,kBACN,MAA2B,kBAAnBmG,KAAK8+D,WAAkCj+C,OAAOy8E,YAAc,IAAOz8E,OAAOy8E,YAAc,IAG1FzjG,cAEN,OAASmG,KAAKu9F,oBAAqBv9F,KAAK8nE,qBAAyB9nE,KAAKwsF,iBAAsC,kBAAnBxsF,KAAK8+D,WAAwC,GAAL,GAG3HjlE,mBACN,MAAM2jG,EAAoBx9F,KAAKu9F,mBAAqBv9F,KAAKG,KAAK8b,kBAAoB,GAAMjc,KAAKG,KAAKwb,SAAW3b,KAAK+pC,kBAAoB/pC,KAAKG,KAAK8b,kBAAoB,EAGpK,OAD+Bjc,KAAKu9F,oBAA2C,kBAAnBv9F,KAAK8+D,YAAmC9+D,KAAKG,KAAK8b,kBAAoB,IAAOjc,KAAKG,KAAK8b,kBAAoB,IACjJ,GAAMuhF,EAAW,GAAK,GAGtC3jG,gBACN,OAAQmG,KAAKu9F,mBAAyC,UAAnBv9F,KAAK8+D,YA1VjB27B,GAAAoC,GAA8B,ICvCvD,MAAMxvD,GAAoB,IAAIotD,GACxBzF,GAAqB,IAAIzS,GAAWl1C,IA6E1C,GA5E4CtwC,SAAS0gG,eAAe,0BAC7C3gG,YAAYk4F,GAAOrK,WAC1CqK,GAAO7I,cAGP6I,GAAOrK,UAAU+S,WAAa,QAC9B1I,GAAOrK,UAAUgT,uBAAuB,gBAAgB,GAAGD,WAAa,QACxE1I,GAAOrK,UAAUgT,uBAAuB,iBAAiB,GAAGD,WAAa,QACzE1I,GAAOrK,UAAUgT,uBAAuB,wBAAwB,GAAGD,WAAa,QAChF1I,GAAOrK,UAAUgT,uBAAuB,4BAA4B,GAAGD,WAAa,QACpF1I,GAAOrK,UAAUgT,uBAAuB,yBAAyB,GAAGD,WAAa,QACjF1I,GAAOrK,UAAUgT,uBAAuB,gBAAgB,GAAGD,WAAa,QAGxErc,EAAE,sBAAsBuc,QAAQ,CAAEC,mBAAmB,IACrDxc,EAAE,qBAAqBuc,QAAQ,CAAEC,mBAAmB,IAGpDxc,EAAE,QAAQnpB,GAAG,QAAS,oDAAoD,WACzEmpB,EAAErhF,MAAM89F,WAAWC,YAIpB1c,EAAE,sBAAsBnpB,GAAG,gBAAgB,WAC1CmpB,EAAE,4BAA4BiN,IAAI,UAAW,GAC7CjN,EAAE,qBAAqBiN,IAAI,UAAW,GACtCjN,EAAE,sBACF9/B,YAAW,KACV,IAAIy8C,EAAS3c,EAAE,oDACXja,EAAUia,EAAE,qDAEhBA,EAAE4c,KAAKD,GAAQ,CAAC7uG,EAAO+uG,KACtB7c,EAAE6c,GAAGJ,WAAWnQ,OAChBtM,EAAE6c,GAAG,GAAGrgG,aAAa,QAAS,UAAYkC,EAAYW,gBAAgB2sC,GAAIltC,KAAMktC,GAAIjtC,SAASa,YAAc,QAE5GogF,EAAE4c,KAAK72B,GAAS,CAACj4E,EAAO+uG,KACvB7c,EAAE6c,GAAG,GAAGrgG,aAAa,QAAS,UAAYkC,EAAYW,gBAAgB2sC,GAAIltC,KAAMktC,GAAIjtC,SAASa,YAAc,QAG5GogF,EAAE,4BAA4BiN,IAAI,UAAW,KAC3C,MAIJjN,EAAE,qBAAqBnpB,GAAG,gBAAgB,WACzCmpB,EAAE,4BAA4BiN,IAAI,UAAW,GAC7CjN,EAAE,qBAAqBiN,IAAI,UAAW,GACtCjN,EAAE,qBACF9/B,YAAW,KACV,IAAIy8C,EAAS3c,EAAE,oDACXja,EAAUia,EAAE,qDAEhBA,EAAE4c,KAAKD,GAAQ,CAAC7uG,EAAO+uG,KACtB7c,EAAE6c,GAAGJ,WAAWnQ,OAChBtM,EAAE6c,GAAG,GAAGrgG,aAAa,QAAS,UAAYkC,EAAYW,gBAAgB2sC,GAAIltC,KAAMktC,GAAIjtC,SAASa,YAAc,QAE5GogF,EAAE4c,KAAK72B,GAAS,CAACj4E,EAAO+uG,KACvB7c,EAAE6c,GAAG,GAAGrgG,aAAa,QAAS,UAAYkC,EAAYW,gBAAgB2sC,GAAIltC,KAAMktC,GAAIjtC,SAASa,YAAc,QAG5GogF,EAAE,4BAA4BiN,IAAI,UAAW,KAC3C,MAKJjN,EAAE,sBAAsBnpB,GAAG,SAAU88B,GAAO7D,IAC5C9P,EAAE,sBAAsBnpB,GAAG,gBAAiB88B,GAAO/D,IAEnD5P,EAAE,qBAAqBnpB,GAAG,SAAU88B,GAAO3D,IAC3ChQ,EAAE,qBAAqBnpB,GAAG,gBAAiB88B,GAAO/D,IAGlD+D,GAAOrK,UAAUnpC,SAGZnoD,GAAYg0C,GAAI0/C,SAAU,CAC9B,SAASoR,KACHphG,SAASumF,SACbj2C,GAAI/T,MAAM08D,OACVhB,GAAOxwC,mBACP3jC,OAAO4/B,oBAAoB,mBAAoB09C,KAG7CphG,SAASumF,OAEZziE,OAAO6pB,iBAAiB,mBAAoByzD,IAE5CA,WAOE,sBAAuBlD,UAASA,QAAQmD,kBAAoB,UAEhEpJ,GAAOxwC,mBAEH,kBAAmBjrD,WACtBA,UAAU8kG,cAAcC,SAAS,qBAAsB,CAAEC,eAAgB,MAAOC,MAAO,MAAO5I,OAAM","sourcesContent":["/*!\r\nCopyright (C) 2020 John Nesky\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n*/\r\n\r\n//namespace beepbox {\r\nexport interface Dictionary<T> {\r\n\t[K: string]: T;\r\n}\r\n\r\nexport interface DictionaryArray<T> extends ReadonlyArray<T> {\r\n\tdictionary: Dictionary<T>;\r\n}\r\n\r\nexport const enum EnvelopeType {\r\n\tcustom,\r\n\tsteady,\r\n\tpunch,\r\n\tflare,\r\n\ttwang,\r\n\tswell,\r\n\ttremolo,\r\n\ttremolo2,\r\n\tdecay,\r\n}\r\n\r\nexport const enum InstrumentType {\r\n\tchip = 0,\r\n\tfm = 1,\r\n\tnoise = 2,\r\n\tspectrum = 3,\r\n\tdrumset = 4,\r\n\tharmonics = 5,\r\n\tpwm = 6,\r\n\tcustomChipWave = 7,\r\n\tmod = 8,\r\n\tlength,\r\n}\r\n\r\nexport interface BeepBoxOption {\r\n\treadonly index: number;\r\n\treadonly name: string;\r\n}\r\n\r\nexport interface Scale extends BeepBoxOption {\r\n\treadonly flags: ReadonlyArray<boolean>;\r\n\treadonly realName: string;\r\n}\r\n\r\nexport interface Key extends BeepBoxOption {\r\n\treadonly isWhiteKey: boolean;\r\n\treadonly basePitch: number;\r\n}\r\n\r\nexport interface Rhythm extends BeepBoxOption {\r\n\treadonly stepsPerBeat: number;\r\n\t//readonly ticksPerArpeggio: number;\r\n\t//readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>>;\r\n\treadonly roundUpThresholds: number[] | null;\r\n}\r\n\r\nexport interface ChipWave extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly samples: Float64Array;\r\n}\r\n\r\nexport interface ChipNoise extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly basePitch: number;\r\n\treadonly pitchFilterMult: number;\r\n\treadonly isSoft: boolean;\r\n\tsamples: Float32Array | null;\r\n}\r\n\r\nexport interface Transition extends BeepBoxOption {\r\n\treadonly isSeamless: boolean;\r\n\treadonly attackSeconds: number;\r\n\treadonly releases: boolean;\r\n\treadonly releaseTicks: number;\r\n\treadonly slides: boolean;\r\n\treadonly slideTicks: number;\r\n}\r\n\r\nexport interface Vibrato extends BeepBoxOption {\r\n\treadonly amplitude: number;\r\n\treadonly type: number;\r\n\treadonly delayParts: number;\r\n}\r\n\r\nexport interface VibratoType extends BeepBoxOption {\r\n\treadonly periodsSeconds: number[];\r\n\treadonly period: number;\r\n}\r\n\r\nexport interface Interval extends BeepBoxOption {\r\n\treadonly spread: number;\r\n\treadonly offset: number;\r\n\treadonly volume: number;\r\n\treadonly sign: number;\r\n}\r\n\r\nexport interface Chord extends BeepBoxOption {\r\n\treadonly harmonizes: boolean;\r\n\treadonly customInterval: boolean;\r\n\treadonly arpeggiates: boolean;\r\n\treadonly isCustomInterval: boolean;\r\n\treadonly strumParts: number;\r\n}\r\n\r\nexport interface Algorithm extends BeepBoxOption {\r\n\treadonly carrierCount: number;\r\n\treadonly associatedCarrier: ReadonlyArray<number>;\r\n\treadonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface OperatorFrequency extends BeepBoxOption {\r\n\treadonly mult: number;\r\n\treadonly hzOffset: number;\r\n\treadonly amplitudeSign: number;\r\n}\r\n\r\nexport interface Envelope extends BeepBoxOption {\r\n\treadonly type: EnvelopeType;\r\n\treadonly speed: number;\r\n}\r\n\r\nexport interface Feedback extends BeepBoxOption {\r\n\treadonly indices: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport class Config {\r\n\t// Params for post-processing compressor\r\n\tpublic static thresholdVal: number = -10;\r\n\tpublic static kneeVal: number = 40;\r\n\tpublic static ratioVal: number = 12;\r\n\tpublic static attackVal: number = 0;\r\n\tpublic static releaseVal: number = 0.25;\r\n\r\n\tpublic static readonly scales: DictionaryArray<Scale> = toNameMap([\r\n\r\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\r\n\t\t{ name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n\t\t{ name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\r\n\t\t{ name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\r\n\t\t{ name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\r\n\t\t{ name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\r\n\t\t{ name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\r\n\t\t{ name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\r\n\t\t{ name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\r\n\t\t{ name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\r\n\t\t{ name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\r\n\t\t{ name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\r\n\t\t{ name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\r\n\t\t{ name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\r\n\t\t{ name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\r\n\t\t{ name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\r\n\t\t{ name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\r\n\t\t{ name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\r\n\t\t{ name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\r\n\t\t{ name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\r\n\t\t{ name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\r\n\r\n\r\n\t]);\r\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\r\n\t\t{ name: \"0\", isWhiteKey: true, basePitch: 0 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\r\n\t\t{ name: \"1\", isWhiteKey: false, basePitch: 1 }, // TODO: I lowered these by 12, idk if I still want to have midi import so I might have to adjust if I don't.\r\n\t\t{ name: \"2\", isWhiteKey: true, basePitch: 2 },\r\n\t\t{ name: \"3\", isWhiteKey: false, basePitch: 3 },\r\n\t\t{ name: \"4\", isWhiteKey: true, basePitch: 4 },\r\n\t\t{ name: \"5\", isWhiteKey: true, basePitch: 5 },\r\n\t\t{ name: \"6\", isWhiteKey: false, basePitch: 6 },\r\n\t\t{ name: \"7\", isWhiteKey: true, basePitch: 7 },\r\n\t\t{ name: \"8\", isWhiteKey: false, basePitch: 8 },\r\n\t\t{ name: \"9\", isWhiteKey: true, basePitch: 9 },\r\n\t\t{ name: \"A\", isWhiteKey: false, basePitch: 10 },\r\n\t\t{ name: \"B\", isWhiteKey: true, basePitch: 11 },\r\n\t]);\r\n\t// public static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1]; // key relic (TODO)\r\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\r\n\tpublic static readonly tempoMin: number = 16;\r\n\tpublic static readonly tempoMax: number = 512;\r\n\tpublic static readonly reverbRange: number = 32;\r\n\tpublic static readonly beatsPerBarMin: number = 1;\r\n\tpublic static readonly beatsPerBarMax: number = 32;\r\n\tpublic static readonly barCountMin: number = 1;\r\n\tpublic static readonly barCountMax: number = 512;\r\n\tpublic static readonly edoMin: number = 1;\r\n\tpublic static readonly edoMax: number = 72;\r\n\tpublic static readonly instrumentsPerChannelMin: number = 1;\r\n\tpublic static readonly instrumentsPerChannelMax: number = 16;\r\n\tpublic static readonly partsPerBeat: number = 48;\r\n\tpublic static readonly ticksPerPart: number = 2;\r\n\tpublic static readonly ticksPerArpeggio: number = 3;\r\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7]];\r\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\r\n\t\t{ name: \"÷1 (singlets '_')\", stepsPerBeat: 1, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷2 (duplets)\", stepsPerBeat: 2, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\r\n\t\t// { name: \"÷5\", stepsPerBeat: 5, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷6\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷8\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t// { name: \"÷9\", stepsPerBeat: 9, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷12\", stepsPerBeat: 12, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷16\", stepsPerBeat: 16, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷24 (freehand)\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t]);\r\n\r\n\tpublic static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"custom chip\", \"mod\"];\r\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, true];\r\n\tpublic static readonly chipWaves: DictionaryArray<ChipWave> = toNameMap([\r\n\t\t{ name: \"rounded\", volume: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\r\n\t\t{ name: \"triangle\", volume: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\r\n\t\t{ name: \"square\", volume: 0.5, samples: centerWave([1.0, -1.0]) },\r\n\t\t{ name: \"1/4 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"1/8 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"sawtooth\", volume: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n\t\t{ name: \"double saw\", volume: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n\t\t{ name: \"double pulse\", volume: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"spiky\", volume: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\r\n\t\t{ name: \"sine\", volume: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\r\n\t\t{ name: \"flute\", volume: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\r\n\t\t{ name: \"harp\", volume: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\r\n\t\t{ name: \"sharp clarinet\", volume: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\r\n\t\t{ name: \"soft clarinet\", volume: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n\t\t{ name: \"alto sax\", volume: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\r\n\t\t{ name: \"bassoon\", volume: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\r\n\t\t{ name: \"trumpet\", volume: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\r\n\t\t{ name: \"electric guitar\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\r\n\t\t{ name: \"organ\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\r\n\t\t{ name: \"pan flute\", volume: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\r\n\t\t{ name: \"glitch\", volume: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n\t]);\r\n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\r\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\r\n\t\t{ name: \"retro\", volume: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"white\", volume: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\r\n\t\t{ name: \"clang\", volume: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"buzz\", volume: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"hollow\", volume: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\r\n\t\t{ name: \"shine\", volume: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"deep\", volume: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\r\n\t\t{ name: \"cutter\", volume: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"metallic\", volume: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t]);\r\n\tpublic static readonly filterCutoffMaxHz: number = 8000; // This is carefully calculated to correspond to no change when filtering at 48000 samples per second.\r\n\tpublic static readonly filterCutoffMinHz: number = 1;\r\n\tpublic static readonly filterMax: number = 0.95;\r\n\tpublic static readonly filterMaxResonance: number = 0.95;\r\n\tpublic static readonly filterCutoffRange: number = 11;\r\n\tpublic static readonly filterResonanceRange: number = 8;\r\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\r\n\t\t{ name: \"seamless\", isSeamless: true, attackSeconds: 0.0, releases: false, releaseTicks: 1, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard\", isSeamless: false, attackSeconds: 0.0, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"soft\", isSeamless: false, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"slide\", isSeamless: true, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: true, slideTicks: 3 },\r\n\t\t{ name: \"cross fade\", isSeamless: false, attackSeconds: 0.04, releases: true, releaseTicks: 6, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard fade\", isSeamless: false, attackSeconds: 0.0, releases: true, releaseTicks: 48, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"medium fade\", isSeamless: false, attackSeconds: 0.0125, releases: true, releaseTicks: 72, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"soft fade\", isSeamless: false, attackSeconds: 0.06, releases: true, releaseTicks: 96, slides: false, slideTicks: 6 },\r\n\t]);\r\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\r\n\t\t{ name: \"none\", amplitude: 0.0, type: 0, delayParts: 0 },\r\n\t\t{ name: \"light\", amplitude: 0.15, type: 0, delayParts: 0 },\r\n\t\t{ name: \"delayed\", amplitude: 0.3, type: 0, delayParts: 18 },\r\n\t\t{ name: \"heavy\", amplitude: 0.45, type: 0, delayParts: 0 },\r\n\t\t{ name: \"shaky\", amplitude: 0.1, type: 1, delayParts: 0 },\r\n\t]);\r\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\r\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\r\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\r\n\t]);\r\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\r\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\r\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\r\n\tpublic static readonly intervals: DictionaryArray<Interval> = toNameMap([\r\n\t\t{ name: \"union\", spread: 0.0, offset: 0.0, volume: 0.7, sign: 1.0 },\r\n\t\t{ name: \"shimmer\", spread: 0.018, offset: 0.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"hum\", spread: 0.045, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"honky tonk\", spread: 0.09, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"dissonant\", spread: 0.25, offset: 0.0, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"fifth\", spread: 3.5, offset: 3.5, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"octave\", spread: 6.0, offset: 6.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"bowed\", spread: 0.02, offset: 0.0, volume: 1.0, sign: -1.0 },\r\n\t\t{ name: \"piano\", spread: 0.01, offset: 0.0, volume: 1.0, sign: 0.7 },\r\n\t]);\r\n\tpublic static readonly effectsNames: ReadonlyArray<string> = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\r\n\tpublic static readonly volumeRange: number = 50;\r\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\r\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\r\n\tpublic static readonly volumeLogScale: number = 0.1428;\r\n\tpublic static readonly panCenter: number = 50;\r\n\tpublic static readonly panMax: number = Config.panCenter * 2;\r\n\tpublic static readonly detuneMin: number = -50;\r\n\tpublic static readonly detuneMax: number = 50;\r\n\tpublic static readonly songDetuneMin: number = -250;\r\n\tpublic static readonly songDetuneMax: number = 250;\r\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\r\n\t\t{ name: \"harmony\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 0 },\r\n\t\t{ name: \"strum\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 1 },\r\n\t\t{ name: \"arpeggio\", harmonizes: false, customInterval: false, arpeggiates: true, isCustomInterval: false, strumParts: 0 },\r\n\t\t{ name: \"custom interval\", harmonizes: true, customInterval: true, arpeggiates: true, isCustomInterval: true, strumParts: 0 },\r\n\t]);\r\n\tpublic static readonly maxChordSize: number = 9; // Pandora's box... ?0_0\r\n\tpublic static readonly operatorCount: number = 4;\r\n\tpublic static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\r\n\t\t{ name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\r\n\t\t{ name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\r\n\t\t{ name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\r\n\t\t{ name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\r\n\t\t{ name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\r\n\t\t{ name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\r\n\t\t{ name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\r\n\t\t{ name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\r\n\t\t{ name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\r\n\t\t{ name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\r\n\t\t{ name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\r\n\t]);\r\n\tpublic static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091];\r\n\tpublic static readonly operatorAmplitudeMax: number = 15;\r\n\tpublic static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\r\n\t\t{ name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\r\n\t\t{ name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\r\n\t\t{ name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t]);\r\n\tpublic static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\r\n\t\t{ name: \"custom\", type: EnvelopeType.custom, speed: 0.0 },\r\n\t\t{ name: \"steady\", type: EnvelopeType.steady, speed: 0.0 },\r\n\t\t{ name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\r\n\t\t{ name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\r\n\t\t{ name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\r\n\t\t{ name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\r\n\t\t{ name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\r\n\t\t{ name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\r\n\t\t{ name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\r\n\t\t{ name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\r\n\t\t{ name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\r\n\t\t{ name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\r\n\t\t{ name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\r\n\t\t{ name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\r\n\t\t{ name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\r\n\t\t{ name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\r\n\t\t{ name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\r\n\t\t{ name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\r\n\t\t{ name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\r\n\t\t{ name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\r\n\t\t{ name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\r\n\t]);\r\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\r\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\r\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\r\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\r\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\r\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\r\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\r\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\r\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\r\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\r\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\r\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\r\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\r\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\r\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\r\n\t\t{ name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\r\n\t]);\r\n\tpublic static readonly chipNoiseLength: number = 1 << 15; // 32768\r\n\tpublic static readonly spectrumBasePitch: number = 24;\r\n\tpublic static readonly spectrumControlPoints: number = 30;\r\n\tpublic static readonly spectrumControlPointsPerOctave: number = 7;\r\n\tpublic static readonly spectrumControlPointBits: number = 3;\r\n\tpublic static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\r\n\tpublic static readonly harmonicsControlPoints: number = 28;\r\n\tpublic static readonly harmonicsRendered: number = 64;\r\n\tpublic static readonly harmonicsControlPointBits: number = 3;\r\n\tpublic static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\r\n\tpublic static readonly harmonicsWavelength: number = 1 << 11; // 2048\r\n\tpublic static readonly pulseWidthRange: number = 50;\r\n\tpublic static readonly pitchChannelCountMin: number = 1;\r\n\tpublic static readonly pitchChannelCountMax: number = 32;\r\n\tpublic static readonly noiseChannelCountMin: number = 0;\r\n\tpublic static readonly noiseChannelCountMax: number = 8;\r\n\tpublic static readonly modChannelCountMin: number = 0;\r\n\tpublic static readonly modChannelCountMax: number = 8;\r\n\tpublic static readonly noiseInterval: number = 6;\r\n\t// public static readonly centerFrequency = 425.85465642512778279\r\n\t// public static readonly pitchesPerOctave: number = 19;\r\n\tpublic static readonly drumCount: number = 12;\r\n\tpublic static readonly modCount: number = 6;\r\n\tpublic static readonly pitchOctaves: number = 9; // prev 8\r\n\tpublic static readonly maxScrollableOctaves: number = 5; // Largest number possible with any config setting\r\n\t// public static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\r\n\tpublic static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\r\n\tpublic static readonly sineWaveLength: number = 1 << 8; // 256\r\n\tpublic static readonly sineWaveMask: number = Config.sineWaveLength - 1;\r\n\tpublic static readonly sineWave: Float64Array = generateSineWave();\r\n\r\n\t// Height of the small editor column for inserting/deleting rows, in pixels.\r\n\tpublic static readonly barEditorHeight: number = 10;\r\n\r\n}\r\n\r\nfunction centerWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = wave[i] - average;\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\nfunction centerAndNormalizeWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tlet magn: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t\tmagn += Math.abs(wave[i]);\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\tconst magnAvg: number = magn / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = (wave[i] - average) / (magnAvg);\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\n\r\n// The function arguments will be defined in FFT.ts, but I want\r\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\r\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\r\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\r\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\r\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null = null, scaleElementsByFactor: Function | null = null): Float32Array {\r\n\tlet wave: Float32Array | null = Config.chipNoises[index].samples;\r\n\tif (wave == null) {\r\n\t\twave = new Float32Array(Config.chipNoiseLength + 1);\r\n\t\tConfig.chipNoises[index].samples = wave;\r\n\r\n\t\tif (index == 0) {\r\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 1 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 1) {\r\n\t\t\t// White noise is just random values for each sample.\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\r\n\t\t\t}\r\n\t\t} else if (index == 2) {\r\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 2 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 3) {\r\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 4) {\r\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\r\n\t\t\tdrawNoiseSpectrum(wave, 10, 11, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 11, 14, .6578, .6578, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 5) {\r\n\t\t\t// \"Shine\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 6) {\r\n\t\t\t// \"Deep\" drums from modbox!\r\n\t\t\tdrawNoiseSpectrum(wave, 1, 10, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 20, 14, -2, -2, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 7) {\r\n\t\t\t// \"Cutter\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1);\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 15 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 8) {\r\n\t\t\t// \"Metallic\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < 32768; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 + 0.5;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer -= 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\r\n\t\t}\r\n\r\n\t\twave[Config.chipNoiseLength] = wave[0];\r\n\t}\r\n\r\n\treturn wave;\r\n}\r\n\r\nexport function drawNoiseSpectrum(wave: Float32Array, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\r\n\tconst referenceOctave: number = 11;\r\n\tconst referenceIndex: number = 1 << referenceOctave;\r\n\tconst lowIndex: number = Math.pow(2, lowOctave) | 0;\r\n\tconst highIndex: number = Math.min(Config.chipNoiseLength >> 1, Math.pow(2, highOctave) | 0);\r\n\tconst retroWave: Float32Array = getDrumWave(0);\r\n\tlet combinedAmplitude: number = 0.0;\r\n\tfor (let i: number = lowIndex; i < highIndex; i++) {\r\n\r\n\t\tlet lerped: number = lowPower + (highPower - lowPower) * (Math.log(i) / Math.LN2 - lowOctave) / (highOctave - lowOctave);\r\n\t\t//let amplitude: number = Math.pow(2, lerped);\r\n\t\t//let amplitude: number = Math.pow((lerped + 5) / 7, 4);\r\n\t\tlet amplitude: number = Math.pow(2, (lerped - 1) * Config.spectrumMax + 1) * lerped;\r\n\r\n\t\tamplitude *= Math.pow(i / referenceIndex, overallSlope);\r\n\r\n\t\tcombinedAmplitude += amplitude;\r\n\r\n\t\t// Add two different sources of psuedo-randomness to the noise\r\n\t\t// (individually they aren't random enough) but in a deterministic\r\n\t\t// way so that live spectrum editing doesn't result in audible pops.\r\n\t\t// Multiple all the sine wave amplitudes by 1 or -1 based on the \r\n\t\t// LFSR retro wave (effectively random), and also rotate the phase\r\n\t\t// of each sine wave based on the golden angle to disrupt the symmetry.\r\n\t\tamplitude *= retroWave[i];\r\n\t\tconst radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\r\n\r\n\t\twave[i] = Math.cos(radians) * amplitude;\r\n\t\twave[Config.chipNoiseLength - i] = Math.sin(radians) * amplitude;\r\n\t}\r\n\r\n\treturn combinedAmplitude;\r\n}\r\n\r\nfunction generateSineWave(): Float64Array {\r\n\tconst wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n\tfor (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n\t\twave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n\t}\r\n\treturn wave;\r\n}\r\n\r\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\r\n\tlet arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\r\n\tif (arpeggioPattern != null) {\r\n\t\tif (pitchCount == 2 && useFastTwoNoteArp == false) {\r\n\t\t\tarpeggioPattern = [0, 0, 1, 1];\r\n\t\t}\r\n\t\treturn arpeggioPattern[arpeggio % arpeggioPattern.length];\r\n\t} else {\r\n\t\treturn arpeggio % pitchCount;\r\n\t}\r\n}\r\n\r\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\r\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\r\n\tconst dictionary: Dictionary<T> = {};\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tconst value: any = array[i];\r\n\t\tvalue.index = i;\r\n\t\tdictionary[value.name] = <T>value;\r\n\t}\r\n\tconst result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\r\n\tresult.dictionary = dictionary;\r\n\treturn result;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nexport interface PresetCategory extends BeepBoxOption {\r\n\treadonly presets: DictionaryArray<Preset>;\r\n}\r\n\r\nexport interface Preset extends BeepBoxOption {\r\n\treadonly isNoise?: boolean;\r\n\treadonly isMod?: boolean;\r\n\treadonly generalMidi?: boolean;\r\n\treadonly midiProgram?: number;\r\n\treadonly midiSubharmonicOctaves?: number;\r\n\treadonly customType?: InstrumentType;\r\n\treadonly settings?: any;\r\n}\r\n\r\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\nexport function prettyNumber(value: number): string {\r\n\treturn value.toFixed(2).replace(/\\.?0*$/, \"\");\r\n}\r\n\r\nexport class EditorConfig {\r\n\tpublic static readonly version: string = \"2.3\"; // Not using patch versions in display right now, maybe someday.\r\n\tpublic static readonly versionDisplayName: string = \"MicroBox Alpha \" + EditorConfig.version;\r\n\r\n\tpublic static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"chip wave\", customType: InstrumentType.chip },\r\n\t\t\t\t{ name: \"FM (expert)\", customType: InstrumentType.fm },\r\n\t\t\t\t{ name: \"basic noise\", customType: InstrumentType.noise },\r\n\t\t\t\t{ name: \"spectrum\", customType: InstrumentType.spectrum },\r\n\t\t\t\t{ name: \"drumset\", customType: InstrumentType.drumset },\r\n\t\t\t\t{ name: \"harmonics\", customType: InstrumentType.harmonics },\r\n\t\t\t\t{ name: \"pulse width\", customType: InstrumentType.pwm },\r\n\t\t\t\t{ name: \"custom chip\", customType: InstrumentType.customChipWave },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"triangle\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\r\n\t\t\t\t{ name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\r\n\t\t\t\t{ name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\r\n\t\t\t\t{ name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\r\n\t\t\t\t{ name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\r\n\t\t\t\t{ name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57] } },\r\n\t\t\t\t{ name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 86, 86, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"wave\": \"1/8 pulse\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"interval\": \"honky tonk\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 43, 43, 43, 43, 43, 29, 43, 43, 43, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"interval\": \"shimmer\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0] } },\r\n\t\t\t\t{ name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 14, 14, 14, 14, 14, 14, 43, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14] } },\r\n\t\t\t\t{ name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\r\n\t\t\t\t{ name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }, { \"frequency\": \"~2×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 2, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 1\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"pulseWidth\": 18, \"pulseEnvelope\": \"punch\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"distorted synth 2\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 3\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 4\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 50, \"pulseEnvelope\": \"swell 1\", \"vibrato\": \"delayed\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"transition\": \"slide\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t\t{ name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14] } },\r\n\t\t\t\t{ name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0] } },\r\n\t\t\t\t{ name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"flare 3\" }] } },\r\n\t\t\t\t{ name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"swell 2\" }, { \"frequency\": \"11×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 3\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"octave\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"tremolo1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 5, \"envelope\": \"twang 3\" }, { \"frequency\": \"11×\", \"amplitude\": 8, \"envelope\": \"tremolo5\" }] } },\r\n\t\t\t\t{ name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"tremolo1\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\r\n\t\t\t\t{ name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"flare 1\" }, { \"frequency\": \"3×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }] } },\r\n\t\t\t\t{ name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 3, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [0, 0, 0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0] } },\r\n\t\t\t\t{ name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 57, \"filterEnvelope\": \"swell 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\r\n\t\t\t\t{ name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"interval\": \"hum\", \"vibrato\": \"heavy\", \"harmonics\": [0, 0, 14, 100, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"tremolo1\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\r\n\t\t\t\t{ name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 4, \"pulseEnvelope\": \"tremolo6\", \"vibrato\": \"shaky\" } },\r\n\t\t\t\t{ name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\r\n\t\t\t\t{ name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\r\n\t\t\t\t{ name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"heavy\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static valueToPreset(presetValue: number): Preset | null {\r\n\t\tconst categoryIndex: number = presetValue >> 6;\r\n\t\tconst presetIndex: number = presetValue & 0x3F;\r\n\t\treturn EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\r\n\t}\r\n\tpublic static midiProgramToPresetValue(program: number): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static nameToPresetValue(presetName: string): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nexport interface ChannelColors extends BeepBoxOption {\r\n\treadonly secondaryChannel: string;\r\n\treadonly primaryChannel: string;\r\n\treadonly secondaryNote: string;\r\n\treadonly primaryNote: string;\r\n}\r\n\r\nexport class ColorConfig {\r\n\tpublic static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\r\n\r\n\tpublic static readonly themes: { [name: string]: string } = {\r\n\t\t\"dark classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t\t--tonic: #864;\r\n\t\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"dark competition\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #ddd;\r\n\t\t\t\t\t--playhead: #ddd;\r\n\t\t\t\t\t--primary-text: #ddd;\r\n\t\t\t\t\t--secondary-text: #8e695b;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\r\n\t\t\t\t\t--loop-accent: #bf15ba;\r\n\t\t\t\t\t--link-accent: #f888ff;\r\n\t\t\t\t\t--ui-widget-background: #443a3a;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #353333;\r\n\t\t\t\t\t--tonic: #884a44;\r\n\t\t\t\t\t--fifth-note: #415498;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"light classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t\t--editor-background: white;\r\n\t\t\t\t\t--hover-preview: black;\r\n\t\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t\t--primary-text: black;\r\n\t\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t\t--inverted-text: white;\r\n\t\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t\t--pitch7-secondary-channel: #CBE24B;\r\n\t\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t\t--noise4-secondary-note:    #AB87C8;\r\n\t\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"jummbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"forest\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #010c03;\r\n\t\t\t\t\t--editor-background: #010c03;\r\n\t\t\t\t\t--hover-preview: #efe;\r\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\r\n\t\t\t\t\t--primary-text: #efe;\r\n\t\t\t\t\t--secondary-text: #70A070;\r\n\t\t\t\t\t--inverted-text: #280228;\r\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\r\n\t\t\t\t\t--box-selection-fill: #267aa3;\r\n\t\t\t\t\t--loop-accent: #ffe845;\r\n\t\t\t\t\t--link-accent: #9f8;\r\n\t\t\t\t\t--ui-widget-background: #203829;\r\n\t\t\t\t\t--ui-widget-focus: #487860;\r\n\t\t\t\t\t--pitch-background: #203829;\r\n\t\t\t\t\t--tonic: #2b8d20;\r\n\t\t\t\t\t--fifth-note: #385840;\r\n\t\t\t\t\t--white-piano-key: #bda;\r\n\t\t\t\t\t--black-piano-key: #573;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\r\n\t\t\t\t\t--track-editor-bg-noise: #304050;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\r\n\t\t\t\t\t--track-editor-bg-mod: #506030;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\r\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\r\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\r\n\t\t\t\t\t--indicator-primary: #dcd866;\r\n\t\t\t\t\t--indicator-secondary: #203829;\r\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\r\n\t\t\t\t\t--input-box-outline: #242;\r\n\t\t\t\t\t--mute-button-normal: #49e980;\r\n\t\t\t\t\t--mute-button-mod: #c2e502;\r\n\t\t\t\t\t--mod-label-primary: #133613;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\r\n\t\t\t\t\t--mod-label-primary-text: #efe;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"canyon\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t\t--editor-background: #0a0000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t\t--secondary-text: #934050;\r\n\t\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t\t--ui-widget-background: #533137;\r\n\t\t\t\t\t--ui-widget-focus: #743e4b;\r\n\t\t\t\t\t--pitch-background: #4f3939;\r\n\t\t\t\t\t--tonic: #9e4145;\r\n\t\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t\t--white-piano-key: #d89898;\r\n\t\t\t\t\t--black-piano-key: #572b29;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\r\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"midnight\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #757575;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #acacac;\r\n\t\t\t--inverted-text: #290505;\r\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\r\n\t\t\t--box-selection-fill: #79797970;\r\n\t\t\t--loop-accent: #646464;\r\n\t\t\t--link-accent: #707070;\r\n\t\t\t--ui-widget-background: #353535;\r\n\t\t\t--ui-widget-focus: #464646;\r\n\t\t\t--pitch-background: #222121;\r\n\t\t\t--tonic: #1a1818;\r\n\t\t\t--fifth-note: #555955;\r\n\t\t\t--white-piano-key: #a89e9e;\r\n\t\t\t--black-piano-key: #2d2424;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #373737;\r\n\t\t\t--track-editor-bg-pitch-dim: #131313;\r\n\t\t\t--track-editor-bg-noise: #484848;\r\n\t\t\t--track-editor-bg-noise-dim: #131313;\r\n\t\t\t--track-editor-bg-mod: #373737;\r\n\t\t\t--track-editor-bg-mod-dim: #131313;\r\n\t\t\t--multiplicative-mod-slider: #555;\r\n\t\t\t--overwriting-mod-slider: #464545;\r\n\t\t\t--indicator-primary: #e0e0e0;\r\n\t\t\t--indicator-secondary: #404040;\r\n\t\t\t--select2-opt-group: #3c3b3b;\r\n\t\t\t--input-box-outline: #757575;\r\n\t\t\t--mute-button-normal: #8e8d8d;\r\n\t\t\t--mute-button-mod: #ddd;\r\n\t\t\t--mod-label-primary: #262526;\r\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\r\n\t\t\t--mod-label-primary-text: #b9b9b9;\r\n\t\t\t--pitch-secondary-channel-hue: 240;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\r\n\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 25;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 240;\r\n\t\t\t--pitch-primary-channel-hue-scale: 228;\r\n\t\t\t--pitch-primary-channel-sat: 80;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 60.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 240;\r\n\t\t\t--pitch-secondary-note-hue-scale: 228;\r\n\t\t\t--pitch-secondary-note-sat: 73.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 32;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 240;\r\n\t\t\t--pitch-primary-note-hue-scale: 228;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 80.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 160;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 160;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 160;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 62;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 30;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 62;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 62;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 34;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 62;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t}\r\n\t`,\r\n\t\t\"microbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000000;\r\n\t\t\t\t\t--editor-background: #000000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #93B6AD;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(47,255,250,0.99);\r\n\t\t\t\t\t--box-selection-fill: #03B068;\r\n\t\t\t\t\t--loop-accent: #FF0061;\r\n\t\t\t\t\t--link-accent: #FFC800;\r\n\t\t\t\t\t--ui-widget-background: #38554E;\r\n\t\t\t\t\t--ui-widget-focus: #2A7E69;\r\n\t\t\t\t\t--pitch-background: #281F23;\r\n\t\t\t\t\t--tonic: #004634;\r\n\t\t\t\t\t--fifth-note: #463400;\r\n\t\t\t\t\t--white-piano-key: #edc;\r\n\t\t\t\t\t--black-piano-key: #456;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #333333;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-noise: #463400;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-mod: #004634;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #000000;\r\n\t\t\t\t\t--multiplicative-mod-slider: #FFC800;\r\n\t\t\t\t\t--overwriting-mod-slider: #00ffc0;\r\n\t\t\t\t\t--indicator-primary: #333333;\r\n\t\t\t\t\t--indicator-secondary: #00ffc0;\r\n\t\t\t\t\t--select2-opt-group: #2B2B2B;\r\n\t\t\t\t\t--input-box-outline: #69BFC6;\r\n\t\t\t\t\t--mute-button-normal: #00ffc0;\r\n\t\t\t\t\t--mute-button-mod: #FFC800;\r\n\t\t\t\t\t--mod-label-primary: #38554E;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(0, 43, 45);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t`,\r\n\t\t\"jummbox light\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #fefdff;\r\n\t\t\t\t\t--editor-background: #fefdff;\r\n\t\t\t\t\t--hover-preview: #302880;\r\n\t\t\t\t\t--playhead: rgba(62, 32, 120, 0.9);\r\n\t\t\t\t\t--primary-text: #401890;\r\n\t\t\t\t\t--secondary-text: #8769af;\r\n\t\t\t\t\t--inverted-text: #fefdff;\r\n\t\t\t\t\t--text-selection: rgba(255,160,235,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\r\n\t\t\t\t\t--loop-accent: #4c35d4;\r\n\t\t\t\t\t--link-accent: #7af;\r\n\t\t\t\t\t--ui-widget-background: #bf9cec;\r\n\t\t\t\t\t--ui-widget-focus: #e9c4ff;\r\n\t\t\t\t\t--pitch-background: #e2d9f9;\r\n\t\t\t\t\t--tonic: #c288cc;\r\n\t\t\t\t\t--fifth-note: #d8c9fd;\r\n\t\t\t\t\t--white-piano-key: #e2e2ff;\r\n\t\t\t\t\t--black-piano-key: #66667a;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #d9e5ec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\r\n\t\t\t\t\t--track-editor-bg-noise: #ffc3ae;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\r\n\t\t\t\t\t--track-editor-bg-mod: #c9accc;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\r\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t\t\t--indicator-secondary: #bbd4ec;\r\n\t\t\t\t\t--select2-opt-group: #c1b7f1;\r\n\t\t\t\t\t--input-box-outline: #bbb;\r\n\t\t\t\t\t--mute-button-normal: #e9b752;\r\n\t\t\t\t\t--mute-button-mod: #9558ee;\r\n\t\t\t\t\t--mod-label-primary: #ececff;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\r\n\t\t\t\t\t--mod-label-primary-text: #302880;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 53.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 72;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 97;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 45.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 95;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 43.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 100;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t};\r\n\r\n\tpublic static readonly pageMargin: string = \"var(--page-margin)\";\r\n\tpublic static readonly editorBackground: string = \"var(--editor-background)\";\r\n\tpublic static readonly hoverPreview: string = \"var(--hover-preview)\";\r\n\tpublic static readonly playhead: string = \"var(--playhead)\";\r\n\tpublic static readonly primaryText: string = \"var(--primary-text)\";\r\n\tpublic static readonly secondaryText: string = \"var(--secondary-text)\";\r\n\tpublic static readonly invertedText: string = \"var(--inverted-text)\";\r\n\tpublic static readonly textSelection: string = \"var(--text-selection)\";\r\n\tpublic static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\r\n\tpublic static readonly loopAccent: string = \"var(--loop-accent)\";\r\n\tpublic static readonly linkAccent: string = \"var(--link-accent)\";\r\n\tpublic static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\r\n\tpublic static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\r\n\tpublic static readonly pitchBackground: string = \"var(--pitch-background)\";\r\n\tpublic static readonly tonic: string = \"var(--tonic)\";\r\n\tpublic static readonly fifthNote: string = \"var(--fifth-note)\";\r\n\tpublic static readonly whitePianoKey: string = \"var(--white-piano-key)\";\r\n\tpublic static readonly blackPianoKey: string = \"var(--black-piano-key)\";\r\n\tpublic static readonly useColorFormula: string = \"var(--use-color-formula)\";\r\n\tpublic static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\r\n\tpublic static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\r\n\tpublic static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\r\n\tpublic static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\r\n\tpublic static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\r\n\tpublic static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\r\n\tpublic static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\r\n\tpublic static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\r\n\tpublic static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\r\n\tpublic static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\r\n\tpublic static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\r\n\tpublic static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\r\n\tpublic static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\r\n\tpublic static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\r\n\tpublic static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\r\n\tpublic static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\r\n\tpublic static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\r\n\tpublic static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\r\n\tpublic static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\r\n\tpublic static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\r\n\tpublic static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\r\n\tpublic static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\r\n\tpublic static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\r\n\tpublic static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\r\n\tpublic static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\r\n\tpublic static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\r\n\tpublic static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\r\n\tpublic static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\r\n\tpublic static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\r\n\tpublic static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\r\n\tpublic static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\r\n\tpublic static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\r\n\tpublic static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\r\n\tpublic static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\r\n\tpublic static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\r\n\tpublic static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\r\n\tpublic static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\r\n\tpublic static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\r\n\tpublic static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\r\n\tpublic static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\r\n\tpublic static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\r\n\tpublic static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\r\n\tpublic static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\r\n\tpublic static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\r\n\tpublic static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\r\n\tpublic static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\r\n\tpublic static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\r\n\tpublic static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\r\n\tpublic static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\r\n\tpublic static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\r\n\tpublic static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\r\n\tpublic static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\r\n\tpublic static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\r\n\tpublic static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\r\n\tpublic static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\r\n\tpublic static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\r\n\tpublic static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\r\n\tpublic static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\r\n\tpublic static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\r\n\tpublic static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\r\n\tpublic static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\r\n\tpublic static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\r\n\tpublic static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\r\n\tpublic static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\r\n\tpublic static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\r\n\tpublic static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\r\n\tpublic static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\r\n\tpublic static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\r\n\tpublic static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\r\n\tpublic static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\r\n\tpublic static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\r\n\tpublic static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\r\n\r\n\tpublic static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"pitch1\", // cyan\r\n\t\t\tsecondaryChannel: \"var(--pitch1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch2\", // yellow\r\n\t\t\tsecondaryChannel: \"var(--pitch2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch3\", // orange\r\n\t\t\tsecondaryChannel: \"var(--pitch3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch4\", // green\r\n\t\t\tsecondaryChannel: \"var(--pitch4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch4-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch5\", // purple\r\n\t\t\tsecondaryChannel: \"var(--pitch5-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch5-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch5-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch5-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch6\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch6-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch6-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch6-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch6-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch7\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch7-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch7-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch7-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch7-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch8\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch8-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch8-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch8-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch8-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch9\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch9-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch9-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch9-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch9-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch10\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch10-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch10-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch10-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch10-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"noise1\", // gray\r\n\t\t\tsecondaryChannel: \"var(--noise1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise2\", // brown\r\n\t\t\tsecondaryChannel: \"var(--noise2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise3\", // azure\r\n\t\t\tsecondaryChannel: \"var(--noise3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise4\",\r\n\t\t\tsecondaryChannel: \"var(--noise4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"mod1\",\r\n\t\t\tsecondaryChannel: \"var(--mod1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod2\",\r\n\t\t\tsecondaryChannel: \"var(--mod2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod3\",\r\n\t\t\tsecondaryChannel: \"var(--mod3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod4\",\r\n\t\t\tsecondaryChannel: \"var(--mod4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static resetColors() {\r\n\t\tthis.colorLookup.clear();\r\n\t}\r\n\r\n\t// Same as below, but won't return var colors\r\n\tpublic static getComputedChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\tlet base: ChannelColors = ColorConfig.getChannelColor(song, channel);\r\n\t\t\t// Trim away \"var(...)\"\r\n\t\t\tvar regex = /\\(([^)]+)\\)/;\r\n\t\t\tlet newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\treturn <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ColorConfig.getChannelColor(song, channel);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic static getChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\t// Set colors, not defined by formula\r\n\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\treturn ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length];\r\n\t\t\t} else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\treturn ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length];\r\n\t\t\t} else {\r\n\t\t\t\treturn ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Determine if color is cached\r\n\t\t\tif (ColorConfig.colorLookup.has(channel)) {\r\n\t\t\t\treturn ColorConfig.colorLookup.get(channel) as ChannelColors;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Formulaic color definition\r\n\t\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\t\t// Pitch formula\r\n\t\t\t\t\tconst pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n\t\t\t\t\tconst pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\t\t// Noise formula\r\n\t\t\t\t\tconst noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n\t\t\t\t\tconst noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n\t\t\t\t\tconst noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n\t\t\t\t\tconst noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n\t\t\t\t\tconst noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n\t\t\t\t\tconst noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n\t\t\t\t\tconst noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n\t\t\t\t\tconst noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Mod formula\r\n\t\t\t\t\tconst modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n\t\t\t\t\tconst modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n\t\t\t\t\tconst modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n\t\t\t\t\tconst modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n\t\t\t\t\tconst modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n\t\t\t\t\tconst modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n\t\t\t\t\tconst modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n\t\t\t\t\tconst modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n\t\t\t\t\tconst modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n\t\t\t\t\tconst modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n\t\t\t\t\tconst modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n\t\t\t\t\tconst modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n\t\t\t\t\tconst modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setTheme(name: string): void {\r\n\t\tthis._styleElement.textContent = this.themes[name];\r\n\t\tconst themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\r\n\t\tif (themeColor != null) {\r\n\t\t\tthemeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\r\n\t\t}\r\n\r\n\t\tthis.resetColors();\r\n\t}\r\n\r\n\tpublic static getComputed(name: string): string {\r\n\t\treturn getComputedStyle(this._styleElement).getPropertyValue(name);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\n// Determine if the user's browser/OS adds scrollbars that occupy space.\r\n// See: https://www.filamentgroup.com/lab/scrollbars/\r\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({ style: \"width:30px; height:30px; overflow: auto;\" },\r\n\tHTML.div({ style: \"width:100%;height:40px\" }),\r\n));\r\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\r\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\r\n}\r\ndocument.body.removeChild(scrollBarTest);\r\n\r\n\r\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\r\n\r\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\r\n:root {\r\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -8 L -4 8 L 9 0 z\" fill=\"gray\"/></svg>');\r\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-4\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/><rect x=\"5\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/></svg>');\r\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\r\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\r\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\r\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\r\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\r\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\r\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\r\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\r\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\r\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t</g> \\\r\n\t\t</svg>');\r\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\r\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -6 L -6 -8 L 0 -2  L 6 -8 L 8 -6 L 2 0 L 8 6 L 6 8 L 0 2 L -6 8 L -8 6 L -2 0 z\"/></svg>');\r\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\r\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"membrane\"> \\\r\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\r\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\r\n\t\t</svg>');\r\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\r\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n  --mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\r\n\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n}\r\n\r\n\r\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\r\n\tscrollbar-width: thin;\r\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\r\n\twidth: 12px;\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\r\n\tbackground: ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\r\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\tborder: 3px solid ${ColorConfig.editorBackground};\r\n}\r\n\r\n@-moz-document url-prefix() {\r\n\t.muteButtonText {\r\n\t\ttransform: translate(3px, 1px) !important;\r\n\t}\r\n}\r\n\r\n.beepboxEditor {\r\n\tdisplay: grid;\r\n    grid-template-columns: minmax(0, 1fr) max-content;\r\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n    grid-template-areas: \"pattern-area settings-area\" \"track-area settings-area\";\r\n\tgrid-column-gap: 6px;\r\n\tgrid-row-gap: 6px;\r\n\tposition: relative;\r\n\ttouch-action: manipulation;\r\n\tcursor: default;\r\n\tfont-size: small;\r\n\toverflow: hidden;\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tbackground: ${ColorConfig.editorBackground};\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.2s ease-in;\r\n    -moz-transition: opacity 0.2s ease-in;\r\n    -o-transition: opacity 0.2s ease-in;\r\n    -ms-transition: opacity 0.2s ease-in;\r\n    transition: opacity 0.2s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.pattern-area {\r\n     opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.15s;\r\n}\r\n\r\n.editor-song-settings {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.35s;\r\n}\r\n\r\n.instrument-settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.45s;\r\n}\r\n\r\n.trackAndMuteContainer {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.4s;\r\n}\r\n\r\n.barScrollBar {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.5s;\r\n}\r\n\r\n\r\n\r\n.load {\r\n    opacity: 1;\r\n}\r\n\r\n.beepboxEditor .noSelection {\r\n\t-webkit-touch-callout: none;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n}\r\n\r\n.beepboxEditor div {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n.beepboxEditor .pattern-area {\r\n\tgrid-area: pattern-area;\r\n\theight: 481px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n}\r\n\r\n.beepboxEditor .track-area {\r\n\tgrid-area: track-area;\r\n}\r\n\r\n.beepboxEditor .settings-area {\r\n\tgrid-area: settings-area;\r\n\tdisplay: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: min-content min-content min-content min-content min-content;\r\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\r\n\tgrid-column-gap: 6px;\r\n}\r\n\r\n.beepboxEditor .version-area{ grid-area: version-area; }\r\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\r\n.beepboxEditor .menu-area{ grid-area: menu-area; }\r\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\r\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\r\n\r\n.beepboxEditor .tip {\r\n\tcursor: help;\r\n}\r\n\r\n.beepboxEditor .tip:hover {\r\n\tcolor: ${ColorConfig.linkAccent};\r\n\ttext-decoration: underline;\r\n}\r\n.beepboxEditor .tip:active {\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor .volume-speaker {\r\n\tflex-shrink: 0;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: ${ColorConfig.secondaryText};\r\n\t-webkit-mask-image: var(--volume-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--volume-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .drum-button {\r\n\tflex: 1;\r\n\tbackground-color: transparent;\r\n\tbackground-image: var(--drum-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n}\r\n\r\n.beepboxEditor .modulator-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .modulator-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--mod-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 102%;\r\n}\r\n\r\n.beepboxEditor .piano-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .piano-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--piano-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 115.38%;\r\n}\r\n.beepboxEditor .piano-button.disabled::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 0;\r\n\twidth: 70%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .customize-instrument {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .customize-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--customize-dial-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--customize-dial-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.file::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--file-page-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--file-page-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.edit::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--edit-pencil-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--edit-pencil-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.preferences::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--preferences-gear-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--preferences-gear-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .mute-button {\r\n\tbackground: transparent;\r\n\tborder: none;\r\n  padding-right: 0px;\r\n  padding-left: 0px;\r\n  box-shadow: none;\r\n}\r\n\r\n.beepboxEditor .mute-button:focus {\r\n  background: transparent;\r\n\tborder: none;\r\n}\r\n\r\n.beepboxEditor .mute-button::before {\r\n\tcontent: \"\";\r\n\tpointer-events: none;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: inline-block;\r\n  background: var(--mute-button-normal);\r\n\t-webkit-mask-image: var(--unmuted-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\t-webkit-mask-size: cover;\r\n  mask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\tmask-size: cover;\r\n  mask-image: var(--unmuted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute::before {\r\n  background: var(--mute-button-mod);\r\n}\r\n\r\n\r\n.beepboxEditor .promptContainer {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .promptContainer::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\topacity: 0.5;\r\n\tdisplay: flex;\r\n}\r\n\r\n.beepboxEditor .prompt {\r\n\tmargin: auto;\r\n\ttext-align: center;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\tborder-radius: 15px;\r\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tpadding: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\r\n}\r\n\r\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\r\n\tmargin-top: 1.5em;\r\n}\r\n\r\n.beepboxEditor .prompt h2 {\r\n\tfont-size: 2em;\r\n\tmargin: 0 16px;\r\n\tfont-weight: normal;\r\n}\r\n\r\n.beepboxEditor .prompt p {\r\n\ttext-align: left;\r\n\tmargin: 1em 0;\r\n}\r\n\r\n.beepboxEditor .selectContainer {\r\n\tposition: relative;\r\n}\r\n.beepboxEditor .selectContainer:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 1.1em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--select-arrows-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--select-arrows-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor .selectContainer.menu::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--menu-down-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--menu-down-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor select {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n  height: auto;\r\n}\r\n\r\n.select2-container {\r\n  width: -moz-available !important;\r\n  width: -webkit-fill-available !important;\r\n}\r\n\r\n.select2-container--default .select2-selection--single{\r\n  border-radius: 0px;\r\n  border: 0px;\r\n  background-color: transparent;\r\n  outline: none;\r\n}\r\n\r\n.select2-selection__rendered:not(.menu)::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\ttop: 0.4em;\r\n\tborder-bottom: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\tbottom: 0.4em;\r\n\tborder-top: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit !important;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.select2-selection__arrow b{\r\n    display:none !important;\r\n}\r\n\r\n.select2-selection__rendered--focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.select2-search__field {\r\n    background: ${ColorConfig.uiWidgetBackground};\r\n    color: inherit !important;\r\n    font-size: small;\r\n    font-family: inherit;\r\n    border: 0px !important;\r\n    padding: 1px !important;\r\n}\r\n.select2-dropdown {\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 0;\r\n    font-size: small;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    background-color: ${ColorConfig.uiWidgetFocus};\r\n}\r\n\r\n.select2-container--default .select2-results>.select2-results__options {\r\n    max-height: 430px;\r\n    overflow-x: hidden;\r\n}\r\n.select2-container--default .select2-results__group {\r\n    cursor: default;\r\n    display: block;\r\n    padding: 1px;\r\n    background: ${ColorConfig.select2OptGroup};\r\n}\r\n.select2-results__option {\r\n    padding: 2px;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n.select2-container--default .select2-results__option .select2-results__option {\r\n    padding-left: 0.1em;\r\n}\r\n.select2-container--default .select2-results__option[aria-selected=true] {\r\n  background-color: transparent !important;\r\n}\r\n\r\n.beepboxEditor .menu select {\r\n\tpadding: 0 2em;\r\n}\r\n.beepboxEditor select:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.beepboxEditor .menu select {\r\n\ttext-align: center;\r\n\ttext-align-last: center;\r\n}\r\n.beepboxEditor .settings-area select {\r\n       width: 100%;\r\n}\r\n\r\n/* This makes it look better in firefox on my computer... What about others?\r\n@-moz-document url-prefix() {\r\n\t.beepboxEditor select { padding: 0 2px; }\r\n}\r\n*/\r\n.beepboxEditor button {\r\n\tmargin: 0;\r\n\tposition: relative;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor button:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n\r\n.beepboxEditor button.cancelButton {\r\n\tfloat: right;\r\n\twidth: 2em;\r\n\tposition: absolute;\r\n\ttop: 8px;\r\n\tright: 8px;\r\n}\r\n\r\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\r\n\tpadding-left: 2em;\r\n}\r\n.beepboxEditor button.playButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--play-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--play-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.pauseButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--pause-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--pause-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.prevBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--prev-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--prev-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.nextBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--next-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--next-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.cancelButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor button.okayButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--checkmark-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--checkmark-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.exportButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--export-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--export-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n\tdisplay: block;\r\n  cursor: crosshair;\r\n}\r\n\r\n@keyframes dash-animation {\r\n  to {\r\n    stroke-dashoffset: -100;\r\n  }\r\n}\r\n\r\n.beepboxEditor .dash-move {\r\n  animation: dash-animation 20s infinite linear;\r\n}\r\n\r\n.beepboxEditor .trackContainer {\r\n\toverflow-x: hidden;\r\n\tflex-grow: 1;\r\n}\r\n\r\n.beepboxEditor .trackAndMuteContainer {\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n}\r\n\r\n.beepboxEditor .muteEditor {\r\n\theight: 128px;\r\n\twidth: 32px;\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n}\r\n\r\n.beepboxEditor .selectRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n}\r\n\r\n.beepboxEditor .tip {\r\n\tcolor: ${ColorConfig.secondaryText};\r\n}\r\n\r\n.beepboxEditor .selectRow > :nth-child(2) {\r\n\twidth: 61.5%;\r\n}\r\n\r\n.beepboxEditor .operatorRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .operatorRow > * {\r\n\tflex-grow: 1;\r\n\tflex-shrink: 1;\r\n}\r\n\r\n.beepboxEditor .menu-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n.beepboxEditor .menu-area > * {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .menu-area > button {\r\n\tpadding: 0 2em;\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.beepboxEditor .song-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-controls {\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .instrument-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\r\n\tfont-size: inherit;\r\n\tfont-weight: inherit;\r\n\tfont-family: inherit;\r\n\tbackground: transparent;\r\n\ttext-align: center;\r\n\tborder: 1px solid ${ColorConfig.inputBoxOutline};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\r\n\tbackground-color: ${ColorConfig.textSelection};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=checkbox] {\r\n  transform: scale(1.5);\r\n}\r\n\r\n.beepboxEditor input[type=range] {\r\n\t-webkit-appearance: none;\r\n\tcolor: inherit;\r\n\twidth: 100%;\r\n\theight: 2em;\r\n\tfont-size: inherit;\r\n\tmargin: 0;\r\n\tcursor: pointer;\r\n\tbackground-color: ${ColorConfig.editorBackground};\r\n\ttouch-action: pan-y;\r\n  position: relative;\r\n}\r\n.beepboxEditor input[type=range]:focus {\r\n\toutline: none;\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n\r\n.beepboxEditor span.midTick:after {\r\n    content: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: currentColor;\r\n    width: 2%;\r\n    left: 49%;\r\n    height: 0.5em;\r\n    top: 32%;\r\n    z-index: 1;\r\n\t\tpointer-events: none;\r\n}\r\n.beepboxEditor span.modSlider {\r\n\t--mod-position: 20%;\r\n\t--mod-color: ${ColorConfig.overwritingModSlider};\r\n  --mod-border-radius: 0%;\r\n}\r\n.beepboxEditor span.modSlider:before {\r\n\tcontent: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: var(--mod-color);\r\n    width: 4%;\r\n    left: var(--mod-position);\r\n    height: 0.8em;\r\n    top: 28%;\r\n    z-index: 2;\r\n\t\ttransform: translate(-50%, 0%);\r\n\t\tpointer-events: none;\r\n\t\tborder: 40%;\r\n\t\tborder-radius: var(--mod-border-radius);\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n\t-webkit-appearance: none;\r\n\tmargin-top: -0.75em;\r\n}\r\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n.beepboxEditor input[type=range]:focus::-moz-range-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tborder: none;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor input[type=range]::-ms-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tborder-color: transparent;\r\n}\r\n.beepboxEditor input[type=range]:focus::-ms-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-ms-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor .hintButton {\r\n\tborder: 1px solid currentColor;\r\n\tborder-radius: 50%;\r\n\ttext-decoration: none;\r\n\twidth: 1em;\r\n\theight: 1em;\r\n\ttext-align: center;\r\n\tmargin-left: auto;\r\n\tmargin-right: .4em;\r\n\tcursor: pointer;\r\n}\r\n\r\nli.select2-results__option[role=group] > strong:hover {\r\n  background-color: #516fbb;\r\n}\r\n\r\n/* wide screen */\r\n@media (min-width: 701px) {\r\n\t#beepboxEditorContainer {\r\n\t\tdisplay: table;\r\n\t}\r\n\t.beepboxEditor {\r\n\t\tflex-direction: row;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\t.beepboxEditor .trackAndMuteContainer {\r\n\t\twidth: 512px;\r\n\t}\r\n\t.beepboxEditor .trackSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n    .beepboxEditor .muteButtonSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t\talign-items: center;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton {\r\n\t\tflex-grow: 1;\r\n\t\tmargin-left: 10px;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\twidth: 14em;\r\n\t}\r\n}\r\n\r\n/* narrow screen */\r\n@media (max-width: 700px) {\r\n\t.beepboxEditor {\r\n\t\tgrid-template-columns: minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content 6px min-content min-content;\r\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\r\n\t\tgrid-row-gap: 0;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\r\n\t\tgrid-template-areas:\r\n\t\t\t\"play-pause-area play-pause-area\"\r\n\t\t\t\"menu-area instrument-settings-area\"\r\n\t\t\t\"song-settings-area instrument-settings-area\"\r\n\t\t\t\"version-area version-area\";\r\n\t\tgrid-column-gap: 8px;\r\n\t\tmargin: 0 4px;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: none;\r\n\t}\r\n\t.beepboxEditor .pattern-area {\r\n\t\tmax-height: 75vh;\r\n\t}\r\n\t.beepboxEditor .trackContainer {\r\n\t\toverflow-x: auto;\r\n\t}\r\n\t.beepboxEditor .barScrollBar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t\r\n\t.beepboxEditor .soundIcon {\r\n\t  background: ${ColorConfig.editorBackground};\r\n\t  display: inline-block;\r\n\t  height: 10px;\r\n\t  margin-left: 0px;\r\n\t  margin-top: 8px;\r\n\t\tposition: relative;\r\n\t\twidth: 10px;\r\n\t}\r\n\t.beepboxEditor .soundIcon:before {\r\n\t  border-bottom: 6px solid transparent;\r\n\t  border-top: 6px solid transparent;\r\n\t  border-right: 10px solid ${ColorConfig.editorBackground};\r\n\t  content: \"\";\r\n\t  height: 10px;\r\n\t  left: 6px;\r\n\t  position: absolute;\r\n\t  top: -6px;\r\n\t  width: 0;\r\n\t}\r\n}\r\n\r\n`));\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\r\ninterface NumberArray {\r\n\tlength: number;\r\n\t[index: number]: number;\r\n}\r\n\r\n// A basic FFT operation scales the overall magnitude of elements by the\r\n// square root of the length of the array, √N. Performing a forward FFT and\r\n// then an inverse FFT results in the original array, but multiplied by N.\r\n// This helper function can be used to compensate for that. \r\nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tarray[i] *= factor;\r\n\t}\r\n}\r\n\r\nfunction isPowerOf2(n: number): boolean {\r\n\treturn !!n && !(n & (n - 1));\r\n}\r\n\r\nfunction countBits(n: number): number {\r\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\treturn Math.round(Math.log(n) / Math.log(2));\r\n}\r\n\r\n// Rearranges the elements of the array, swapping the element at an index\r\n// with an element at an index that is the bitwise reverse of the first\r\n// index in base 2. Useful for computing the FFT.\r\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\r\n\tconst bitCount: number = countBits(fullArrayLength);\r\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\r\n\tconst finalShift: number = 16 - bitCount;\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\r\n\t\tlet j: number;\r\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\r\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\r\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\r\n\t\tj = ((j >> 8) | ((j & 0xff) << 8)) >> finalShift;\r\n\t\tif (j > i) {\r\n\t\t\tlet temp: number = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Provided for educational purposes. Easier to read than\r\n// fastFourierTransform(), but computes the same result.\r\n// Takes two parallel arrays representing the real and imaginary elements,\r\n// respectively, and returns an array containing two new arrays, which\r\n// contain the complex result of the transform.\r\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\tconst realOut: number[] = [];\r\n\tconst imagOut: number[] = [];\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\trealOut[i] = 0.0;\r\n\t\timagOut[i] = 0.0;\r\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\r\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\r\n\t\t\tconst c: number = Math.cos(radians);\r\n\t\t\tconst s: number = Math.sin(radians);\r\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\r\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\r\n\t\t}\r\n\t}\r\n\treturn [realOut, imagOut];\r\n}\r\n\r\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\r\n// input real and imaginary arrays. Can be used for both forward and inverse\r\n// transforms: swap the order of the arguments for the inverse.\r\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\r\n\treverseIndexBits(realArray, fullArrayLength);\r\n\treverseIndexBits(imagArray, fullArrayLength);\r\n\r\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\r\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\r\n\t\tconst startIndex1: number = startIndex + 1;\r\n\t\tconst startIndex2: number = startIndex + 2;\r\n\t\tconst startIndex3: number = startIndex + 3;\r\n\t\tconst real0: number = realArray[startIndex];\r\n\t\tconst real1: number = realArray[startIndex1];\r\n\t\tconst real2: number = realArray[startIndex2];\r\n\t\tconst real3: number = realArray[startIndex3];\r\n\t\tconst imag0: number = imagArray[startIndex];\r\n\t\tconst imag1: number = imagArray[startIndex1];\r\n\t\tconst imag2: number = imagArray[startIndex2];\r\n\t\tconst imag3: number = imagArray[startIndex3];\r\n\t\tconst realTemp0: number = real0 + real1;\r\n\t\tconst realTemp1: number = real0 - real1;\r\n\t\tconst realTemp2: number = real2 + real3;\r\n\t\tconst realTemp3: number = real2 - real3;\r\n\t\tconst imagTemp0: number = imag0 + imag1;\r\n\t\tconst imagTemp1: number = imag0 - imag1;\r\n\t\tconst imagTemp2: number = imag2 + imag3;\r\n\t\tconst imagTemp3: number = imag2 - imag3;\r\n\t\trealArray[startIndex] = realTemp0 + realTemp2;\r\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\r\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\r\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\r\n\t\timagArray[startIndex] = imagTemp0 + imagTemp2;\r\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\r\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\r\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\r\n\t}\r\n\r\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\r\n\t\tconst halfLength: number = stride >>> 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tlet c: number = 1.0;\r\n\t\t\tlet s: number = 0.0;\r\n\t\t\tlet cPrev: number = cosIncrement;\r\n\t\t\tlet sPrev: number = sinIncrement;\r\n\t\t\tconst secondHalf: number = startIndex + halfLength;\r\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\r\n\t\t\t\tconst j: number = i + halfLength;\r\n\t\t\t\tconst real0: number = realArray[i];\r\n\t\t\t\tconst imag0: number = imagArray[i];\r\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\r\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\r\n\t\t\t\trealArray[i] = real0 + real1;\r\n\t\t\t\timagArray[i] = imag0 + imag1;\r\n\t\t\t\trealArray[j] = real0 - real1;\r\n\t\t\t\timagArray[j] = imag0 - imag1;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the Fourier transform from an array of real-valued time-domain\r\n// samples. The output is specially formatted for space efficieny: elements\r\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\r\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\r\n// descending frequency. Overwrites the input array.\r\nexport function forwardRealFourierTransform(array: NumberArray): void {\r\n\tconst fullArrayLength: number = array.length;\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n\r\n\t// First and second pass.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\t// no imaginary elements yet since the input is fully real.\r\n\t\tconst tempA: number = real0 + real1;\r\n\t\tconst tempB: number = real2 + real3;\r\n\t\tarray[index] = tempA + tempB;\r\n\t\tarray[index1] = real0 - real1;\r\n\t\tarray[index2] = tempA - tempB;\r\n\t\tarray[index3] = real2 - real3;\r\n\t}\r\n\r\n\t// Third pass.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst imag3: number = array[index3];\r\n\t\tconst real4: number = array[index4];\r\n\t\tconst real5: number = array[index5];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\r\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\r\n\t\tarray[index] = real0 + real4;\r\n\t\tarray[index1] = real1 + tempA;\r\n\t\tarray[index3] = real1 - tempA;\r\n\t\tarray[index4] = real0 - real4;\r\n\t\tarray[index5] = tempB - imag3;\r\n\t\tarray[index7] = tempB + imag3;\r\n\t}\r\n\r\n\t// Handle remaining passes.\r\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst realStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + realStartB;\r\n\t\t\tarray[startIndexB] = realStartA - realStartB;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst imag0: number = array[indexA1];\r\n\t\t\t\tconst real1: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\r\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\r\n\t\t\t\tarray[indexA0] = real0 + tempA;\r\n\t\t\t\tarray[indexA1] = real0 - tempA;\r\n\t\t\t\tarray[indexB0] = -imag0 - tempB;\r\n\t\t\t\tarray[indexB1] = imag0 - tempB;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the inverse Fourier transform from a specially formatted array of\r\n// scalar values. Elements 0 through N/2 are expected to be the real values of\r\n// the corresponding complex elements, representing cosine wave amplitudes in\r\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\r\n// imaginary values, representing sine wave amplitudes in descending frequency.\r\n// Generates real-valued time-domain samples. Overwrites the input array.\r\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\t// Perform all but the last few passes in reverse.\r\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst imagStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\r\n\t\t\tarray[midIndexA] *= 2;\r\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\r\n\t\t\tarray[midIndexB] *= 2;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst real1: number = array[indexA1];\r\n\t\t\t\tconst imag0: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real0 - real1;\r\n\t\t\t\tconst tempB: number = imag0 + imag1;\r\n\t\t\t\tarray[indexA0] = real0 + real1;\r\n\t\t\t\tarray[indexA1] = imag1 - imag0;\r\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\r\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t// Commented out this block (and compensated with an extra pass above)\r\n\t// because it's slower in my testing so far.\r\n\t// Pass with stride 8.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index6: number = index + 6;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\tconst imag4: number = array[index4];\r\n\t\tconst imag5: number = array[index5];\r\n\t\tconst imag6: number = array[index6];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = real1 - real3;\r\n\t\tconst tempB: number = imag5 + imag7;\r\n\t\tarray[index ] = real0 + imag4;\r\n\t\tarray[index1] = real1 + real3;\r\n\t\tarray[index2] = real2 * 2;\r\n\t\tarray[index3] = imag7 - imag5;\r\n\t\tarray[index4] = real0 - imag4;\r\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\r\n\t\tarray[index6] = imag6 * 2;\r\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\r\n\t}\r\n\t*/\r\n\t// The final passes with strides 4 and 2, combined into one loop.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1] * 2;\r\n\t\tconst imag2: number = array[index2];\r\n\t\tconst imag3: number = array[index3] * 2;\r\n\t\tconst tempA: number = real0 + imag2;\r\n\t\tconst tempB: number = real0 - imag2;\r\n\t\tarray[index] = tempA + real1;\r\n\t\tarray[index1] = tempA - real1;\r\n\t\tarray[index2] = tempB + imag3;\r\n\t\tarray[index3] = tempB - imag3;\r\n\t}\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Deque<T> {\r\n\tprivate _capacity: number = 1;\r\n\tprivate _buffer: Array<T | undefined> = [undefined];\r\n\tprivate _mask: number = 0;\r\n\tprivate _offset: number = 0;\r\n\tprivate _count: number = 0;\r\n\r\n\tpublic pushFront(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._offset = (this._offset - 1) & this._mask;\r\n\t\tthis._buffer[this._offset] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic pushBack(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic popFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tconst element: T = <T>this._buffer[this._offset];\r\n\t\tthis._buffer[this._offset] = undefined;\r\n\t\tthis._offset = (this._offset + 1) & this._mask;\r\n\t\tthis._count--;\r\n\t\treturn element;\r\n\t}\r\n\tpublic popBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tthis._count--;\r\n\t\tconst index: number = (this._offset + this._count) & this._mask;\r\n\t\tconst element: T = <T>this._buffer[index];\r\n\t\tthis._buffer[index] = undefined;\r\n\t\treturn element;\r\n\t}\r\n\tpublic peakFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[this._offset];\r\n\t}\r\n\tpublic peakBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\r\n\t}\r\n\tpublic count(): number {\r\n\t\treturn this._count;\r\n\t}\r\n\tpublic set(index: number, element: T): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\r\n\t}\r\n\tpublic get(index: number): T {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\r\n\t}\r\n\tpublic remove(index: number): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tif (index <= (this._count >> 1)) {\r\n\t\t\twhile (index > 0) {\r\n\t\t\t\tthis.set(index, this.get(index - 1));\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t\tthis.popFront();\r\n\t\t} else {\r\n\t\t\tindex++;\r\n\t\t\twhile (index < this._count) {\r\n\t\t\t\tthis.set(index - 1, this.get(index));\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\tthis.popBack();\r\n\t\t}\r\n\t}\r\n\tprivate _expandCapacity(): void {\r\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\r\n\t\tthis._capacity = this._capacity << 1;\r\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\r\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\r\n\t\tconst size: number = this._count | 0;\r\n\t\tconst offset: number = this._offset | 0;\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\r\n\t\t}\r\n\t\tfor (let i = size; i < this._capacity; i++) {\r\n\t\t\tnewBuffer[i] = undefined;\r\n\t\t}\r\n\t\tthis._offset = 0;\r\n\t\tthis._buffer = newBuffer;\r\n\t\tthis._mask = this._capacity - 1;\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex } from \"./SynthConfig\";\r\nimport { EditorConfig } from \"../editor/EditorConfig\";\r\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\r\nimport { Deque } from \"./Deque\";\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tAudioContext: any;\r\n\t\twebkitAudioContext: any;\r\n\t}\r\n}\r\n\r\n//namespace beepbox {\r\n// For performance debugging:\r\n//let samplesAccumulated: number = 0;\r\n//let samplePerformance: number = 0;\r\n\r\nconst enum CharCode {\r\n\tSPACE = 32,\r\n\tHASH = 35,\r\n\tPERCENT = 37,\r\n\tAMPERSAND = 38,\r\n\tPLUS = 43,\r\n\tDASH = 45,\r\n\tDOT = 46,\r\n\tNUM_0 = 48,\r\n\tNUM_1 = 49,\r\n\tNUM_2 = 50,\r\n\tNUM_3 = 51,\r\n\tNUM_4 = 52,\r\n\tNUM_5 = 53,\r\n\tNUM_6 = 54,\r\n\tNUM_7 = 55,\r\n\tNUM_8 = 56,\r\n\tNUM_9 = 57,\r\n\tEQUALS = 61,\r\n\tA = 65,\r\n\tB = 66,\r\n\tC = 67,\r\n\tD = 68,\r\n\tE = 69,\r\n\tF = 70,\r\n\tG = 71,\r\n\tH = 72,\r\n\tI = 73,\r\n\tJ = 74,\r\n\tK = 75,\r\n\tL = 76,\r\n\tM = 77,\r\n\tN = 78,\r\n\tO = 79,\r\n\tP = 80,\r\n\tQ = 81,\r\n\tR = 82,\r\n\tS = 83,\r\n\tT = 84,\r\n\tU = 85,\r\n\tV = 86,\r\n\tW = 87,\r\n\tX = 88,\r\n\tY = 89,\r\n\tZ = 90,\r\n\tUNDERSCORE = 95,\r\n\ta = 97,\r\n\tb = 98,\r\n\tc = 99,\r\n\td = 100,\r\n\te = 101,\r\n\tf = 102,\r\n\tg = 103,\r\n\th = 104,\r\n\ti = 105,\r\n\tj = 106,\r\n\tk = 107,\r\n\tl = 108,\r\n\tm = 109,\r\n\tn = 110,\r\n\to = 111,\r\n\tp = 112,\r\n\tq = 113,\r\n\tr = 114,\r\n\ts = 115,\r\n\tt = 116,\r\n\tu = 117,\r\n\tv = 118,\r\n\tw = 119,\r\n\tx = 120,\r\n\ty = 121,\r\n\tz = 122,\r\n\tLEFT_CURLY_BRACE = 123,\r\n\tRIGHT_CURLY_BRACE = 125,\r\n}\r\n\r\nconst enum SongTagCode {\r\n\tbeatCount = CharCode.a,\r\n\tbars = CharCode.b,\r\n\tvibrato = CharCode.c,\r\n\ttransition = CharCode.d,\r\n\tloopEnd = CharCode.e,\r\n\tfilterCutoff = CharCode.f,\r\n\tbarCount = CharCode.g,\r\n\tinterval = CharCode.h,\r\n\tinstrumentCount = CharCode.i,\r\n\tpatternCount = CharCode.j,\r\n\tkey = CharCode.k,\r\n\tloopStart = CharCode.l,\r\n\treverb = CharCode.m,\r\n\tchannelCount = CharCode.n,\r\n\tchannelOctave = CharCode.o,\r\n\tpatterns = CharCode.p,\r\n\teffects = CharCode.q,\r\n\trhythm = CharCode.r,\r\n\tscale = CharCode.s,\r\n\ttempo = CharCode.t,\r\n\tpreset = CharCode.u,\r\n\tvolume = CharCode.v,\r\n\twave = CharCode.w,\r\n\r\n\tfilterResonance = CharCode.y,\r\n\tfilterEnvelope = CharCode.z,\r\n\talgorithm = CharCode.A,\r\n\tfeedbackAmplitude = CharCode.B,\r\n\tchord = CharCode.C,\r\n\tdetune = CharCode.D,\r\n\toperatorEnvelopes = CharCode.E,\r\n\tfeedbackType = CharCode.F,\r\n\tarpeggioSpeed = CharCode.G,\r\n\tharmonics = CharCode.H,\r\n\r\n\tsquareDuty = CharCode.K,\r\n\tpanning = CharCode.L,\r\n\tcustomChipWave = CharCode.M,\r\n\tsongTitle = CharCode.N,\r\n\tlimiterSettings = CharCode.O,\r\n\toperatorAmplitudes = CharCode.P,\r\n\toperatorFrequencies = CharCode.Q,\r\n\r\n\tspectrum = CharCode.S,\r\n\tstartInstrument = CharCode.T,\r\n\tchannelNames = CharCode.U,\r\n\tfeedbackEnvelope = CharCode.V,\r\n\tpulseWidth = CharCode.W,\r\n\tedo = CharCode.X,\r\n}\r\n\r\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\r\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\r\n\r\nclass BitFieldReader {\r\n\tprivate _bits: number[] = [];\r\n\tprivate _readIndex: number = 0;\r\n\r\n\tconstructor(source: string, startIndex: number, stopIndex: number) {\r\n\t\tfor (let i: number = startIndex; i < stopIndex; i++) {\r\n\t\t\tconst value: number = base64CharCodeToInt[source.charCodeAt(i)];\r\n\t\t\tthis._bits.push((value >> 5) & 0x1);\r\n\t\t\tthis._bits.push((value >> 4) & 0x1);\r\n\t\t\tthis._bits.push((value >> 3) & 0x1);\r\n\t\t\tthis._bits.push((value >> 2) & 0x1);\r\n\t\t\tthis._bits.push((value >> 1) & 0x1);\r\n\t\t\tthis._bits.push(value & 0x1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic read(bitCount: number): number {\r\n\t\tlet result: number = 0;\r\n\t\twhile (bitCount > 0) {\r\n\t\t\tresult = result << 1;\r\n\t\t\tresult += this._bits[this._readIndex++];\r\n\t\t\tbitCount--;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readLongTail(minValue: number, minBits: number): number {\r\n\t\tlet result: number = minValue;\r\n\t\tlet numBits: number = minBits;\r\n\t\twhile (this._bits[this._readIndex++]) {\r\n\t\t\tresult += 1 << numBits;\r\n\t\t\tnumBits++;\r\n\t\t}\r\n\t\twhile (numBits > 0) {\r\n\t\t\tnumBits--;\r\n\t\t\tif (this._bits[this._readIndex++]) {\r\n\t\t\t\tresult += 1 << numBits;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readPartDuration(): number {\r\n\t\treturn this.readLongTail(1, 3);\r\n\t}\r\n\r\n\tpublic readLegacyPartDuration(): number {\r\n\t\treturn this.readLongTail(1, 2);\r\n\t}\r\n\r\n\tpublic readPinCount(): number {\r\n\t\treturn this.readLongTail(1, 0);\r\n\t}\r\n\r\n\tpublic readPitchInterval(): number {\r\n\t\tif (this.read(1)) {\r\n\t\t\treturn -this.readLongTail(1, 3);\r\n\t\t} else {\r\n\t\t\treturn this.readLongTail(1, 3);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass BitFieldWriter {\r\n\tprivate _index: number = 0;\r\n\tprivate _bits: number[] = [];\r\n\r\n\tpublic clear() {\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic write(bitCount: number, value: number): void {\r\n\t\tbitCount--;\r\n\t\twhile (bitCount >= 0) {\r\n\t\t\tthis._bits[this._index++] = (value >>> bitCount) & 1;\r\n\t\t\tbitCount--;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeLongTail(minValue: number, minBits: number, value: number): void {\r\n\t\tif (value < minValue) throw new Error(\"value out of bounds\");\r\n\t\tvalue -= minValue;\r\n\t\tlet numBits: number = minBits;\r\n\t\twhile (value >= (1 << numBits)) {\r\n\t\t\tthis._bits[this._index++] = 1;\r\n\t\t\tvalue -= 1 << numBits;\r\n\t\t\tnumBits++;\r\n\t\t}\r\n\t\tthis._bits[this._index++] = 0;\r\n\t\twhile (numBits > 0) {\r\n\t\t\tnumBits--;\r\n\t\t\tthis._bits[this._index++] = (value >>> numBits) & 1;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writePartDuration(value: number): void {\r\n\t\tthis.writeLongTail(1, 3, value);\r\n\t}\r\n\r\n\tpublic writePinCount(value: number): void {\r\n\t\tthis.writeLongTail(1, 0, value);\r\n\t}\r\n\r\n\tpublic writePitchInterval(value: number): void {\r\n\t\tif (value < 0) {\r\n\t\t\tthis.write(1, 1); // sign\r\n\t\t\tthis.writeLongTail(1, 3, -value);\r\n\t\t} else {\r\n\t\t\tthis.write(1, 0); // sign\r\n\t\t\tthis.writeLongTail(1, 3, value);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic concat(other: BitFieldWriter): void {\r\n\t\tfor (let i: number = 0; i < other._index; i++) {\r\n\t\t\tthis._bits[this._index++] = other._bits[i];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic encodeBase64(buffer: number[]): number[] {\r\n\r\n\t\tfor (let i: number = 0; i < this._index; i += 6) {\r\n\t\t\tconst value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\r\n\t\t\tbuffer.push(base64IntToCharCode[value]);\r\n\t\t}\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic lengthBase64(): number {\r\n\t\treturn Math.ceil(this._index / 6);\r\n\t}\r\n}\r\n\r\nexport interface NotePin {\r\n\tinterval: number;\r\n\ttime: number;\r\n\tvolume: number;\r\n}\r\n\r\nexport function makeNotePin(interval: number, time: number, volume: number): NotePin {\r\n\treturn { interval: interval, time: time, volume: volume };\r\n}\r\n\r\nfunction clamp(min: number, max: number, val: number): number {\r\n\tmax = max - 1;\r\n\tif (val <= max) {\r\n\t\tif (val >= min) return val;\r\n\t\telse return min;\r\n\t} else {\r\n\t\treturn max;\r\n\t}\r\n}\r\n\r\nfunction validateRange(min: number, max: number, val: number): number {\r\n\tif (min <= val && val <= max) return val;\r\n\tthrow new Error(`Value ${val} not in range [${min}, ${max}]`);\r\n}\r\n\r\nexport class Note {\r\n\tpublic pitches: number[];\r\n\tpublic pins: NotePin[];\r\n\tpublic start: number;\r\n\tpublic end: number;\r\n\r\n\tpublic constructor(pitch: number, start: number, end: number, volume: number, fadeout: boolean = false) {\r\n\t\tthis.pitches = [pitch];\r\n\t\tthis.pins = [makeNotePin(0, 0, volume), makeNotePin(0, end - start, fadeout ? 0 : volume)];\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\t}\r\n\r\n\tpublic pickMainInterval(): number {\r\n\t\tlet longestFlatIntervalDuration: number = 0;\r\n\t\tlet mainInterval: number = 0;\r\n\t\tfor (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\r\n\t\t\tconst pinA: NotePin = this.pins[pinIndex - 1];\r\n\t\t\tconst pinB: NotePin = this.pins[pinIndex];\r\n\t\t\tif (pinA.interval == pinB.interval) {\r\n\t\t\t\tconst duration: number = pinB.time - pinA.time;\r\n\t\t\t\tif (longestFlatIntervalDuration < duration) {\r\n\t\t\t\t\tlongestFlatIntervalDuration = duration;\r\n\t\t\t\t\tmainInterval = pinA.interval;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (longestFlatIntervalDuration == 0) {\r\n\t\t\tlet loudestVolume: number = 0;\r\n\t\t\tfor (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\r\n\t\t\t\tconst pin: NotePin = this.pins[pinIndex];\r\n\t\t\t\tif (loudestVolume < pin.volume) {\r\n\t\t\t\t\tloudestVolume = pin.volume;\r\n\t\t\t\t\tmainInterval = pin.interval;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mainInterval;\r\n\t}\r\n\r\n\tpublic clone(): Note {\r\n\t\tconst newNote: Note = new Note(-1, this.start, this.end, 6);\r\n\t\tnewNote.pitches = this.pitches.concat();\r\n\t\tnewNote.pins = [];\r\n\t\tfor (const pin of this.pins) {\r\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n\t\t}\r\n\t\treturn newNote;\r\n\t}\r\n}\r\n\r\nexport class Pattern {\r\n\tpublic notes: Note[] = [];\r\n\tpublic instrument: number = 0;\r\n\r\n\tpublic cloneNotes(): Note[] {\r\n\t\tconst result: Note[] = [];\r\n\t\tfor (const note of this.notes) {\r\n\t\t\tresult.push(note.clone());\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic reset(): void {\r\n\t\tthis.notes.length = 0;\r\n\t\tthis.instrument = 0;\r\n\t}\r\n}\r\n\r\nexport class Operator {\r\n\tpublic frequency: number = 0;\r\n\tpublic amplitude: number = 0;\r\n\tpublic envelope: number = 0;\r\n\r\n\tconstructor(index: number) {\r\n\t\tthis.reset(index);\r\n\t}\r\n\r\n\tpublic reset(index: number): void {\r\n\t\tthis.frequency = 0;\r\n\t\tthis.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\r\n\t\tthis.envelope = (index == 0) ? 0 : 1;\r\n\t}\r\n\r\n\tpublic copy(other: Operator): void {\r\n\t\tthis.frequency = other.frequency;\r\n\t\tthis.amplitude = other.amplitude;\r\n\t\tthis.envelope = other.envelope;\r\n\t}\r\n}\r\n\r\nexport class SpectrumWave {\r\n\tpublic spectrum: number[] = [];\r\n\tprivate _wave: Float32Array | null = null;\r\n\tprivate _waveIsReady: boolean = false;\r\n\r\n\tconstructor(isNoiseChannel: boolean) {\r\n\t\tthis.reset(isNoiseChannel);\r\n\t}\r\n\r\n\tpublic reset(isNoiseChannel: boolean): void {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tthis.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\r\n\t\t\t} else {\r\n\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\r\n\t\t\t\tthis.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic markCustomWaveDirty(): void {\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic getCustomWave(lowestOctave: number): Float32Array {\r\n\t\tif (!this._waveIsReady || this._wave == null) {\r\n\t\t\tlet waveLength: number = Config.chipNoiseLength;\r\n\r\n\t\t\tif (this._wave == null || this._wave.length != waveLength + 1) {\r\n\t\t\t\tthis._wave = new Float32Array(waveLength + 1);\r\n\t\t\t}\r\n\t\t\tconst wave: Float32Array = this._wave;\r\n\r\n\t\t\tfor (let i: number = 0; i < waveLength; i++) {\r\n\t\t\t\twave[i] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst highestOctave: number = 14;\r\n\t\t\tconst falloffRatio: number = 0.25;\r\n\t\t\t// Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\r\n\t\t\tconst pitchTweak: number[] = [0, 1 / 7, Math.log(5 / 4) / Math.LN2, 3 / 7, Math.log(3 / 2) / Math.LN2, 5 / 7, 6 / 7];\r\n\t\t\tfunction controlPointToOctave(point: number): number {\r\n\t\t\t\treturn lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\r\n\t\t\t}\r\n\r\n\t\t\tlet combinedAmplitude: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\r\n\t\t\t\tconst value1: number = (i <= 0) ? 0 : this.spectrum[i - 1];\r\n\t\t\t\tconst value2: number = (i >= Config.spectrumControlPoints) ? this.spectrum[Config.spectrumControlPoints - 1] : this.spectrum[i];\r\n\t\t\t\tconst octave1: number = controlPointToOctave(i - 1);\r\n\t\t\t\tlet octave2: number = controlPointToOctave(i);\r\n\t\t\t\tif (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\r\n\t\t\t\tif (value1 == 0 && value2 == 0) continue;\r\n\r\n\t\t\t\tcombinedAmplitude += 0.02 * drawNoiseSpectrum(wave, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\r\n\t\t\t}\r\n\t\t\tif (this.spectrum[Config.spectrumControlPoints - 1] > 0) {\r\n\t\t\t\tcombinedAmplitude += 0.02 * drawNoiseSpectrum(wave, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, this.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\r\n\t\t\t}\r\n\r\n\t\t\tinverseRealFourierTransform(wave, waveLength);\r\n\t\t\tscaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\r\n\r\n\t\t\t// Duplicate the first sample at the end for easier wrap-around interpolation.\r\n\t\t\twave[waveLength] = wave[0];\r\n\r\n\t\t\tthis._waveIsReady = true;\r\n\t\t}\r\n\t\treturn this._wave;\r\n\t}\r\n}\r\n\r\nexport class HarmonicsWave {\r\n\tpublic harmonics: number[] = [];\r\n\tprivate _wave: Float32Array | null = null;\r\n\tprivate _waveIsReady: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tpublic reset(): void {\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\tthis.harmonics[i] = 0;\r\n\t\t}\r\n\t\tthis.harmonics[0] = Config.harmonicsMax;\r\n\t\tthis.harmonics[3] = Config.harmonicsMax;\r\n\t\tthis.harmonics[6] = Config.harmonicsMax;\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic markCustomWaveDirty(): void {\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic getCustomWave(): Float32Array {\r\n\t\tif (!this._waveIsReady || this._wave == null) {\r\n\t\t\tlet waveLength: number = Config.harmonicsWavelength;\r\n\t\t\tconst retroWave: Float32Array = getDrumWave(0);\r\n\r\n\t\t\tif (this._wave == null || this._wave.length != waveLength + 1) {\r\n\t\t\t\tthis._wave = new Float32Array(waveLength + 1);\r\n\t\t\t}\r\n\t\t\tconst wave: Float32Array = this._wave;\r\n\r\n\t\t\tfor (let i: number = 0; i < waveLength; i++) {\r\n\t\t\t\twave[i] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst overallSlope: number = -0.25;\r\n\t\t\tlet combinedControlPointAmplitude: number = 1;\r\n\r\n\t\t\tfor (let harmonicIndex: number = 0; harmonicIndex < Config.harmonicsRendered; harmonicIndex++) {\r\n\t\t\t\tconst harmonicFreq: number = harmonicIndex + 1;\r\n\t\t\t\tlet controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? this.harmonics[harmonicIndex] : this.harmonics[Config.harmonicsControlPoints - 1];\r\n\t\t\t\tif (harmonicIndex >= Config.harmonicsControlPoints) {\r\n\t\t\t\t\tcontrolValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (Config.harmonicsRendered - Config.harmonicsControlPoints);\r\n\t\t\t\t}\r\n\t\t\t\tconst normalizedValue: number = controlValue / Config.harmonicsMax;\r\n\t\t\t\tlet amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\r\n\t\t\t\tif (harmonicIndex < Config.harmonicsControlPoints) {\r\n\t\t\t\t\tcombinedControlPointAmplitude += amplitude;\r\n\t\t\t\t}\r\n\t\t\t\tamplitude *= Math.pow(harmonicFreq, overallSlope);\r\n\r\n\t\t\t\t// Multiple all the sine wave amplitudes by 1 or -1 based on the LFSR\r\n\t\t\t\t// retro wave (effectively random) to avoid egregiously tall spikes.\r\n\t\t\t\tamplitude *= retroWave[harmonicIndex + 589];\r\n\r\n\t\t\t\twave[waveLength - harmonicFreq] = amplitude;\r\n\t\t\t}\r\n\r\n\t\t\tinverseRealFourierTransform(wave, waveLength);\r\n\r\n\t\t\t// Limit the maximum wave amplitude.\r\n\t\t\tconst mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = wave[i] * mult;\r\n\t\t\t\twave[i] = cumulative;\r\n\t\t\t}\r\n\t\t\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\t\t\twave[waveLength] = wave[0];\r\n\r\n\t\t\tthis._waveIsReady = true;\r\n\t\t}\r\n\t\treturn this._wave;\r\n\t}\r\n}\r\n\r\nexport class Instrument {\r\n\tpublic type: InstrumentType = InstrumentType.chip;\r\n\tpublic preset: number = 0;\r\n\tpublic chipWave: number = 2;\r\n\tpublic chipNoise: number = 1;\r\n\tpublic filterCutoff: number = 12;\r\n\tpublic filterResonance: number = 0;\r\n\tpublic filterEnvelope: number = 1;\r\n\tpublic transition: number = 1;\r\n\tpublic vibrato: number = 0;\r\n\tpublic vibratoDepth: number = 0;\r\n\tpublic vibratoSpeed: number = 10;\r\n\tpublic vibratoDelay: number = 0;\r\n\tpublic vibratoType: number = 0;\r\n\tpublic interval: number = 0;\r\n\tpublic effects: number = 0;\r\n\tpublic chord: number = 1;\r\n\tpublic volume: number = 0;\r\n\tpublic pan: number = Config.panCenter;\r\n\tpublic panDelay: number = 10;\r\n\tpublic arpeggioSpeed: number = 12;\r\n\tpublic fastTwoNoteArp: boolean = false;\r\n\tpublic tieNoteTransition: boolean = false;\r\n\tpublic clicklessTransition: boolean = false;\r\n\tpublic detune: number = 0;\r\n\tpublic pulseWidth: number = Config.pulseWidthRange;\r\n\tpublic pulseEnvelope: number = 1;\r\n\tpublic algorithm: number = 0;\r\n\tpublic feedbackType: number = 0;\r\n\tpublic feedbackAmplitude: number = 0;\r\n\tpublic feedbackEnvelope: number = 1;\r\n\tpublic LFOtime: number = 0;\r\n\tpublic nextLFOtime: number = 0;\r\n\tpublic arpTime: number = 0;\r\n\tpublic customChipWave: Float64Array = new Float64Array(64);\r\n\tpublic customChipWaveIntegral: Float64Array = new Float64Array(65); // One extra element for wrap-around in chipSynth.\r\n\tpublic readonly operators: Operator[] = [];\r\n\tpublic readonly spectrumWave: SpectrumWave;\r\n\tpublic readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\r\n\tpublic readonly drumsetEnvelopes: number[] = [];\r\n\tpublic readonly drumsetSpectrumWaves: SpectrumWave[] = [];\r\n\tpublic modChannels: number[] = [];\r\n\tpublic modStatuses: ModStatus[] = [];\r\n\tpublic modInstruments: number[] = [];\r\n\tpublic modSettings: ModSetting[] = [];\r\n\r\n\tconstructor(isNoiseChannel: boolean, isModChannel: boolean) {\r\n\r\n\t\tif (isModChannel) {\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tthis.modChannels.push(0);\r\n\t\t\t\tthis.modStatuses.push(ModStatus.msNone);\r\n\t\t\t\tthis.modInstruments.push(0);\r\n\t\t\t\tthis.modSettings.push(ModSetting.mstNone);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.spectrumWave = new SpectrumWave(isNoiseChannel);\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis.operators[i] = new Operator(i);\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tthis.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\tthis.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < 64; i++) {\r\n\t\t\tthis.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\r\n\t\t}\r\n\r\n\t\tlet sum: number = 0.0;\r\n\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\tsum += this.customChipWave[i];\r\n\t\t}\r\n\t\tconst average: number = sum / this.customChipWave.length;\r\n\r\n\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\tlet cumulative: number = 0;\r\n\t\tlet wavePrev: number = 0;\r\n\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\tcumulative += wavePrev;\r\n\t\t\twavePrev = this.customChipWave[i] - average;\r\n\t\t\tthis.customChipWaveIntegral[i] = cumulative;\r\n\t\t}\r\n\r\n\t\t// 65th, last sample is for anti-aliasing\r\n\t\tthis.customChipWaveIntegral[64] = 0.0;\r\n\r\n\t}\r\n\r\n\tpublic setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n\t\t// Mod channels are forced to one type.\r\n\t\tif (isModChannel) type = InstrumentType.mod;\r\n\t\tthis.type = type;\r\n\t\tthis.preset = type;\r\n\t\tthis.volume = 0;\r\n\t\tthis.pan = Config.panCenter;\r\n\t\tthis.panDelay = 10;\r\n\t\tthis.arpeggioSpeed = 12;\r\n\t\tthis.detune = 0;\r\n\t\tthis.tieNoteTransition = false;\r\n\t\tthis.clicklessTransition = false;\r\n\t\tswitch (type) {\r\n\t\t\tcase InstrumentType.chip:\r\n\t\t\t\tthis.chipWave = 2;\r\n\t\t\t\tthis.filterCutoff = 6;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.customChipWave:\r\n\t\t\t\tthis.chipWave = 2;\r\n\t\t\t\tthis.filterCutoff = 6;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t\t\tthis.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet sum: number = 0.0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tsum += this.customChipWave[i];\r\n\t\t\t\t}\r\n\t\t\t\tconst average: number = sum / this.customChipWave.length;\r\n\r\n\t\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\t\tlet cumulative: number = 0;\r\n\t\t\t\tlet wavePrev: number = 0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\t\twavePrev = this.customChipWave[i] - average;\r\n\t\t\t\t\tthis.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.customChipWaveIntegral[64] = 0.0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.fm:\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 3;\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = 1;\r\n\t\t\t\tthis.algorithm = 0;\r\n\t\t\t\tthis.feedbackType = 0;\r\n\t\t\t\tthis.feedbackAmplitude = 0;\r\n\t\t\t\tthis.feedbackEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tfor (let i: number = 0; i < this.operators.length; i++) {\r\n\t\t\t\t\tthis.operators[i].reset(i);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.noise:\r\n\t\t\t\tthis.chipNoise = 1;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.effects = 0;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.spectrum:\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 0;\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.spectrumWave.reset(isNoiseChannel);\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.drumset:\r\n\t\t\t\tthis.effects = 0;\r\n\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\tthis.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\t\t\tif (this.drumsetSpectrumWaves[i] == undefined) {\r\n\t\t\t\t\t\tthis.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.drumsetSpectrumWaves[i].reset(isNoiseChannel);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.harmonics:\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 0;\r\n\t\t\t\tthis.harmonicsWave.reset();\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.pwm:\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange;\r\n\t\t\t\tthis.pulseEnvelope = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.mod:\r\n\t\t\t\tthis.transition = 0;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 0;\r\n\t\t\t\tthis.chord = 0;\r\n\t\t\t\tthis.modChannels = [];\r\n\t\t\t\tthis.modStatuses = [];\r\n\t\t\t\tthis.modInstruments = [];\r\n\t\t\t\tthis.modSettings = [];\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tthis.modChannels.push(0);\r\n\t\t\t\t\tthis.modStatuses.push(ModStatus.msNone);\r\n\t\t\t\t\tthis.modInstruments.push(0);\r\n\t\t\t\t\tthis.modSettings.push(ModSetting.mstNone);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unrecognized instrument type: \" + type);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toJsonObject(): Object {\r\n\t\tconst instrumentObject: any = {\r\n\t\t\t\"type\": Config.instrumentTypeNames[this.type],\r\n\t\t\t\"volume\": this.volume,\r\n\t\t\t\"pan\": (this.pan - Config.panCenter) * 100 / Config.panCenter,\r\n\t\t\t\"panDelay\": this.panDelay,\r\n\t\t\t\"arpeggioSpeed\": this.arpeggioSpeed,\r\n\t\t\t\"fastTwoNoteArp\": this.fastTwoNoteArp,\r\n\t\t\t\"tieNoteTransition\": this.tieNoteTransition,\r\n\t\t\t\"clicklessTransition\": this.clicklessTransition,\r\n\t\t\t\"vibrato\": this.vibrato,\r\n\t\t\t\"vibratoDepth\": this.vibratoDepth,\r\n\t\t\t\"vibratoDelay\": this.vibratoDelay,\r\n\t\t\t\"vibratoSpeed\": this.vibratoSpeed,\r\n\t\t\t\"vibratoType\": this.vibratoType,\r\n\t\t\t\"detune\": this.detune,\r\n\t\t\t\"effects\": Config.effectsNames[this.effects],\r\n\t\t};\r\n\r\n\t\tif (this.preset != this.type) {\r\n\t\t\tinstrumentObject[\"preset\"] = this.preset;\r\n\t\t}\r\n\r\n\t\tif (this.type != InstrumentType.drumset) {\r\n\t\t\tinstrumentObject[\"transition\"] = Config.transitions[this.transition].name;\r\n\t\t\tinstrumentObject[\"chord\"] = this.getChord().name;\r\n\t\t\tinstrumentObject[\"filterCutoffHz\"] = Math.round(Config.filterCutoffMaxHz * Math.pow(2.0, this.getFilterCutoffOctaves()));\r\n\t\t\tinstrumentObject[\"filterResonance\"] = Math.round(100 * this.filterResonance / (Config.filterResonanceRange - 1));\r\n\t\t\tinstrumentObject[\"filterEnvelope\"] = this.getFilterEnvelope().name;\r\n\t\t}\r\n\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\tinstrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\tinstrumentObject[\"spectrum\"] = [];\r\n\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\tinstrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.drumset) {\r\n\t\t\tinstrumentObject[\"drums\"] = [];\r\n\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\tspectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\r\n\t\t\t\t}\r\n\t\t\t\tinstrumentObject[\"drums\"][j] = {\r\n\t\t\t\t\t\"filterEnvelope\": this.getDrumsetEnvelope(j).name,\r\n\t\t\t\t\t\"spectrum\": spectrum,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.chip) {\r\n\t\t\tinstrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n\t\t\tinstrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.customChipWave) {\r\n\t\t\tinstrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n\t\t\tinstrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t\tinstrumentObject[\"customChipWave\"] = new Float64Array(64);\r\n\t\t\tinstrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\r\n\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\tinstrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\r\n\t\t\t\t// Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\r\n\t\t\t\t//instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\r\n\t\t\t}\r\n\r\n\t\t\tinstrumentObject[\"customChipWaveIntegral\"][64] = 0;\r\n\t\t} else if (this.type == InstrumentType.pwm) {\r\n\t\t\tinstrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n\t\t\tinstrumentObject[\"pulseEnvelope\"] = Config.envelopes[this.pulseEnvelope].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.harmonics) {\r\n\t\t\tinstrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t\tinstrumentObject[\"harmonics\"] = [];\r\n\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\tinstrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.fm) {\r\n\t\t\tconst operatorArray: Object[] = [];\r\n\t\t\tfor (const operator of this.operators) {\r\n\t\t\t\toperatorArray.push({\r\n\t\t\t\t\t\"frequency\": Config.operatorFrequencies[operator.frequency].name,\r\n\t\t\t\t\t\"amplitude\": operator.amplitude,\r\n\t\t\t\t\t\"envelope\": Config.envelopes[operator.envelope].name,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t\tinstrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\r\n\t\t\tinstrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\r\n\t\t\tinstrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n\t\t\tinstrumentObject[\"feedbackEnvelope\"] = Config.envelopes[this.feedbackEnvelope].name;\r\n\t\t\tinstrumentObject[\"operators\"] = operatorArray;\r\n\t\t} else if (this.type == InstrumentType.mod) {\r\n\t\t\tinstrumentObject[\"modChannels\"] = [];\r\n\t\t\tinstrumentObject[\"modInstruments\"] = [];\r\n\t\t\tinstrumentObject[\"modSettings\"] = [];\r\n\t\t\tinstrumentObject[\"modStatuses\"] = [];\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tinstrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\r\n\t\t\t\tinstrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\r\n\t\t\t\tinstrumentObject[\"modSettings\"][mod] = this.modSettings[mod];\r\n\t\t\t\tinstrumentObject[\"modStatuses\"][mod] = this.modStatuses[mod];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized instrument type\");\r\n\t\t}\r\n\t\treturn instrumentObject;\r\n\t}\r\n\r\n\tpublic fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean): void {\r\n\t\tif (instrumentObject == undefined) instrumentObject = {};\r\n\r\n\t\tlet type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\r\n\t\tif (type.valueOf() == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\r\n\t\tthis.setTypeAndReset(type, isNoiseChannel, isModChannel);\r\n\r\n\t\tif (instrumentObject[\"preset\"] != undefined) {\r\n\t\t\tthis.preset = instrumentObject[\"preset\"] >>> 0;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"volume\"] != undefined) {\r\n\t\t\tthis.volume = clamp(-Config.volumeRange / 2, Config.volumeRange / 2, instrumentObject[\"volume\"] | 0);\r\n\t\t} else {\r\n\t\t\tthis.volume = 0;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"pan\"] != undefined) {\r\n\t\t\tthis.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\r\n\t\t} else {\r\n\t\t\tthis.pan = Config.panCenter;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"panDelay\"] != undefined) {\r\n\t\t\tthis.panDelay = (instrumentObject[\"panDelay\"] | 0);\r\n\t\t} else {\r\n\t\t\tthis.panDelay = 10;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"detune\"] != undefined) {\r\n\t\t\tthis.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.detune = 0;\r\n\t\t}\r\n\r\n\t\tconst oldTransitionNames: Dictionary<number> = { \"binary\": 0, \"sudden\": 1, \"smooth\": 2 };\r\n\t\tconst transitionObject = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so try that too.\r\n\t\tthis.transition = oldTransitionNames[transitionObject] != undefined ? oldTransitionNames[transitionObject] : Config.transitions.findIndex(transition => transition.name == transitionObject);\r\n\t\tif (this.transition == -1) this.transition = 1;\r\n\r\n\t\tthis.effects = Config.effectsNames.indexOf(instrumentObject[\"effects\"]);\r\n\t\tif (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\r\n\r\n\t\tif (instrumentObject[\"filterCutoffHz\"] != undefined) {\r\n\t\t\tthis.filterCutoff = clamp(0, Config.filterCutoffRange, Math.round((Config.filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / Config.filterCutoffMaxHz) / Math.LN2));\r\n\t\t} else {\r\n\t\t\tthis.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\r\n\t\t}\r\n\t\tif (instrumentObject[\"filterResonance\"] != undefined) {\r\n\t\t\tthis.filterResonance = clamp(0, Config.filterResonanceRange, Math.round((Config.filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.filterResonance = 0;\r\n\t\t}\r\n\t\tthis.filterEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"filterEnvelope\"]);\r\n\t\tif (this.filterEnvelope == -1) this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\r\n\t\tif (instrumentObject[\"filter\"] != undefined) {\r\n\t\t\tconst legacyToCutoff: number[] = [20, 12, 6, 0, 16, 10, 4];\r\n\t\t\tconst legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n\t\t\tconst filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n\t\t\tconst oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\r\n\t\t\tlet legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\r\n\t\t\tif (legacyFilter == -1) legacyFilter = 0;\r\n\t\t\tthis.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\tthis.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\tthis.filterResonance = 0;\r\n\t\t}\r\n\r\n\t\tconst legacyEffectNames: ReadonlyArray<string> = [\"none\", \"vibrato light\", \"vibrato delayed\", \"vibrato heavy\"];\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\tthis.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n\t\t\tif (this.chipNoise == -1) this.chipNoise = 1;\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 2;\r\n\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\tif (instrumentObject[\"spectrum\"] != undefined) {\r\n\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\tthis.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 0;\r\n\r\n\t\t} else if (this.type == InstrumentType.drumset) {\r\n\t\t\tif (instrumentObject[\"drums\"] != undefined) {\r\n\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\tconst drum: any = instrumentObject[\"drums\"][j];\r\n\t\t\t\t\tif (drum == undefined) continue;\r\n\r\n\t\t\t\t\tif (drum[\"filterEnvelope\"] != undefined) {\r\n\t\t\t\t\t\tthis.drumsetEnvelopes[j] = Config.envelopes.findIndex(envelope => envelope.name == drum[\"filterEnvelope\"]);\r\n\t\t\t\t\t\tif (this.drumsetEnvelopes[j] == -1) this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (drum[\"spectrum\"] != undefined) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\tthis.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.harmonics) {\r\n\t\t\tif (instrumentObject[\"harmonics\"] != undefined) {\r\n\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\tthis.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"interval\"] != undefined) {\r\n\t\t\t\tthis.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 0;\r\n\t\t} else if (this.type == InstrumentType.pwm) {\r\n\t\t\tif (instrumentObject[\"pulseWidth\"] != undefined) {\r\n\t\t\t\tthis.pulseWidth = clamp(0, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\r\n\t\t\t} else {\r\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"pulseEnvelope\"] != undefined) {\r\n\t\t\t\tthis.pulseEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"pulseEnvelope\"]);\r\n\t\t\t\tif (this.pulseEnvelope == -1) this.pulseEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 0;\r\n\t\t} else if (this.type == InstrumentType.chip) {\r\n\t\t\tconst legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\r\n\t\t\tthis.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n\t\t\tif (this.chipWave == -1) this.chipWave = 1;\r\n\r\n\t\t\tif (instrumentObject[\"interval\"] != undefined) {\r\n\t\t\t\tthis.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t} else if (instrumentObject[\"chorus\"] != undefined) {\r\n\t\t\t\tconst legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n\t\t\t\tthis.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t} else if (instrumentObject[\"effect\"] != undefined) {\r\n\t\t\t\tthis.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 2;\r\n\r\n\t\t\t// The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n\t\t\tif (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.chord = 3;\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.fm) {\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t} else if (instrumentObject[\"effect\"] != undefined) {\r\n\t\t\t\tthis.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 3;\r\n\r\n\t\t\tthis.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\r\n\t\t\tif (this.algorithm == -1) this.algorithm = 0;\r\n\t\t\tthis.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\r\n\t\t\tif (this.feedbackType == -1) this.feedbackType = 0;\r\n\t\t\tif (instrumentObject[\"feedbackAmplitude\"] != undefined) {\r\n\t\t\t\tthis.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\r\n\t\t\t} else {\r\n\t\t\t\tthis.feedbackAmplitude = 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst legacyEnvelopeNames: Dictionary<number> = { \"pluck 1\": 6, \"pluck 2\": 7, \"pluck 3\": 8 };\r\n\t\t\tthis.feedbackEnvelope = legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] != undefined ? legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"feedbackEnvelope\"]);\r\n\t\t\tif (this.feedbackEnvelope == -1) this.feedbackEnvelope = 0;\r\n\r\n\t\t\tfor (let j: number = 0; j < Config.operatorCount; j++) {\r\n\t\t\t\tconst operator: Operator = this.operators[j];\r\n\t\t\t\tlet operatorObject: any = undefined;\r\n\t\t\t\tif (instrumentObject[\"operators\"]) operatorObject = instrumentObject[\"operators\"][j];\r\n\t\t\t\tif (operatorObject == undefined) operatorObject = {};\r\n\r\n\t\t\t\toperator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\r\n\t\t\t\tif (operator.frequency == -1) operator.frequency = 0;\r\n\t\t\t\tif (operatorObject[\"amplitude\"] != undefined) {\r\n\t\t\t\t\toperator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\toperator.amplitude = 0;\r\n\t\t\t\t}\r\n\t\t\t\toperator.envelope = legacyEnvelopeNames[operatorObject[\"envelope\"]] != undefined ? legacyEnvelopeNames[operatorObject[\"envelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == operatorObject[\"envelope\"]);\r\n\t\t\t\tif (operator.envelope == -1) operator.envelope = 0;\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.customChipWave) {\r\n\t\t\tif (instrumentObject[\"interval\"] != undefined) {\r\n\t\t\t\tthis.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t} else if (instrumentObject[\"chorus\"] != undefined) {\r\n\t\t\t\tconst legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n\t\t\t\tthis.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t} else if (instrumentObject[\"effect\"] != undefined) {\r\n\t\t\t\tthis.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 2;\r\n\r\n\t\t\t// The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n\t\t\tif (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.chord = 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"customChipWave\"]) {\r\n\r\n\t\t\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t\t\tthis.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tlet sum: number = 0.0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tsum += this.customChipWave[i];\r\n\t\t\t\t}\r\n\t\t\t\tconst average: number = sum / this.customChipWave.length;\r\n\r\n\t\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\t\tlet cumulative: number = 0;\r\n\t\t\t\tlet wavePrev: number = 0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\t\twavePrev = this.customChipWave[i] - average;\r\n\t\t\t\t\tthis.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 65th, last sample is for anti-aliasing\r\n\t\t\t\tthis.customChipWaveIntegral[64] = 0.0;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.type == InstrumentType.mod) {\r\n\t\t\tif (instrumentObject[\"modChannels\"] != undefined) {\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tthis.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\r\n\t\t\t\t\tthis.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\r\n\t\t\t\t\tthis.modSettings[mod] = instrumentObject[\"modSettings\"][mod];\r\n\t\t\t\t\tthis.modStatuses[mod] = instrumentObject[\"modStatuses\"][mod];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized instrument type.\");\r\n\t\t}\r\n\r\n\t\tif (this.type != InstrumentType.mod) {\r\n\t\t\t// Arpeggio speed\r\n\t\t\tif (this.chord == 2 && instrumentObject[\"arpeggioSpeed\"] != undefined) {\r\n\t\t\t\tthis.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\r\n\t\t\t\tthis.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.fastTwoNoteArp = useFastTwoNoteArp;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"tieNoteTransition\"] != undefined) {\r\n\t\t\t\tthis.tieNoteTransition = instrumentObject[\"tieNoteTransition\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.tieNoteTransition = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"clicklessTransition\"] != undefined) {\r\n\t\t\t\tthis.clicklessTransition = instrumentObject[\"clicklessTransition\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.clicklessTransition = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static frequencyFromPitch(pitch: number, _centerFeq: number, _edo: number): number {\r\n\t\t// the pitch relative to 1, then offset by half number of octaves, so that center frequency is in the center.\r\n\t\treturn _centerFeq * Math.pow(2.0, pitch / _edo - Math.round(Config.pitchOctaves/2) );\r\n\t}\r\n\r\n\tpublic static drumsetIndexReferenceDelta(index: number): number { // this pretends that the song is 440hz 12edo for now\r\n\t\t// 44100 is common sampling frequency, 6 is the drum spacing interval needed to span from the spectrum Base Pitch to the max pitch (I think at least)\r\n\t\t// return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * (Config.pitchOctaves * _edo - Config.spectrumBasePitch) / Config.drumCount, 440, 12) / 44100;\r\n\t\treturn Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * (8 * 12 - Config.spectrumBasePitch) / Config.drumCount, 440, 12) / 44100;\r\n\t}\r\n\r\n\tprivate static _drumsetIndexToSpectrumOctave(index: number) { // this pretends that the song is 440hz 12edo for now\r\n\t\t// 15 + (a negative (drumsetIndexReferenceDelta is less than 2^0)), I have no idea what 15 means here.\r\n\t\treturn 15 + Math.log(Instrument.drumsetIndexReferenceDelta(index)) / Math.LN2;\r\n\t}\r\n\r\n\tpublic warmUp(): void {\r\n\t\tthis.LFOtime = 0;\r\n\t\tthis.nextLFOtime = 0;\r\n\t\tthis.arpTime = 0;\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\tgetDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n\t\t} else if (this.type == InstrumentType.harmonics) {\r\n\t\t\tthis.harmonicsWave.getCustomWave();\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\tthis.spectrumWave.getCustomWave(8);\r\n\t\t} else if (this.type == InstrumentType.drumset) {\r\n\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\tthis.drumsetSpectrumWaves[i].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getDrumWave(): Float32Array {\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\treturn getDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\treturn this.spectrumWave.getCustomWave(8);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unhandled instrument type in getDrumWave\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getDrumsetWave(pitch: number, edo: number): Float32Array {\r\n\t\tif (this.type == InstrumentType.drumset) {\r\n\t\t\treturn this.drumsetSpectrumWaves[pitch].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(pitch));\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unhandled instrument type in getDrumWave\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getTransition(): Transition {\r\n\t\treturn this.type == InstrumentType.drumset ? Config.transitions.dictionary[\"hard fade\"] :\r\n\t\t\tthis.type == InstrumentType.mod ? Config.transitions.dictionary[\"seamless\"] : Config.transitions[this.transition];\r\n\t}\r\n\tpublic getChord(): Chord {\r\n\t\treturn this.type == InstrumentType.drumset ? Config.chords.dictionary[\"harmony\"] : Config.chords[this.chord];\r\n\t}\r\n\tpublic getFilterCutoffOctaves(): number {\r\n\t\treturn this.type == InstrumentType.drumset ? 0 : (this.filterCutoff - (Config.filterCutoffRange - 1)) * 0.5;\r\n\t}\r\n\tpublic getFilterIsFirstOrder(): boolean {\r\n\t\treturn this.type == InstrumentType.drumset ? false : this.filterResonance == 0;\r\n\t}\r\n\tpublic getFilterResonance(): number {\r\n\t\treturn this.type == InstrumentType.drumset ? 1 : this.filterResonance;\r\n\t}\r\n\tpublic getFilterEnvelope(): Envelope {\r\n\t\tif (this.type == InstrumentType.drumset) throw new Error(\"Can't getFilterEnvelope() for drumset.\");\r\n\t\treturn Config.envelopes[this.filterEnvelope];\r\n\t}\r\n\tpublic getDrumsetEnvelope(pitch: number): Envelope {\r\n\t\tif (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\r\n\t\treturn Config.envelopes[this.drumsetEnvelopes[pitch]];\r\n\t}\r\n}\r\n\r\nexport enum ModStatus {\r\n\tmsForPitch = 0,\r\n\tmsForNoise = 1,\r\n\tmsForSong = 2,\r\n\tmsNone = 3,\r\n}\r\n\r\nexport enum ModSetting {\r\n\tmstNone = 0,\r\n\tmstSongVolume = 1,\r\n\tmstTempo = 2,\r\n\tmstReverb = 3,\r\n\tmstNextBar = 4,\r\n\tmstInsVolume = 5,\r\n\tmstPan = 6,\r\n\tmstFilterCut = 7,\r\n\tmstFilterPeak = 8,\r\n\tmstFMSlider1 = 9,\r\n\tmstFMSlider2 = 10,\r\n\tmstFMSlider3 = 11,\r\n\tmstFMSlider4 = 12,\r\n\tmstFMFeedback = 13,\r\n\tmstPulseWidth = 14,\r\n\tmstDetune = 15,\r\n\tmstVibratoDepth = 16,\r\n\tmstSongDetune = 17,\r\n\tmstVibratoSpeed = 18,\r\n\tmstVibratoDelay = 19,\r\n\tmstArpeggioSpeed = 20,\r\n\tmstPanDelay = 21,\r\n\tmstResetArpeggio = 22,\r\n\tmstMaxValue = 23,\r\n}\r\n\r\nexport class Channel {\r\n\tpublic octave: number = 0;\r\n\tpublic readonly instruments: Instrument[] = [];\r\n\tpublic readonly patterns: Pattern[] = [];\r\n\tpublic readonly bars: number[] = [];\r\n\tpublic muted: boolean = false;\r\n\tpublic name: string = \"\";\r\n}\r\n\r\nexport class Song {\r\n\tprivate static readonly _format: string = \"BeepBox\";\r\n\tprivate static readonly _oldestBeepboxVersion: number = 2;\r\n\tprivate static readonly _latestBeepboxVersion: number = 8;\r\n\tprivate static readonly _oldestJummBoxVersion: number = 1;\r\n\tprivate static readonly _latestJummBoxVersion: number = 4;\r\n\t// private static readonly _oldestMicroBoxVersion: number = 0;\r\n\t// private static readonly _latestMicroBoxVersion: number = 0;\r\n\t// One-character variant detection at the start of URL to distinguish variants such as JummBox.\r\n\tprivate static readonly _variant = 0x6A; // \"j\" ~ jummbox\r\n\t// private static readonly _variant = 0x6D; // \"m\" ~ microbox\r\n\r\n\tpublic title: string;\r\n\tpublic scale: number;\r\n\tpublic key: number; // this is fequency offset for different edos\r\n\tpublic tempo: number;\r\n\tpublic reverb: number;\r\n\tpublic centerFrequency: number;\r\n\tpublic edo: number;\r\n\tpublic maxPitch: number;\r\n\tpublic beatsPerBar: number;\r\n\tpublic barCount: number;\r\n\tpublic patternsPerChannel: number;\r\n\tpublic rhythm: number;\r\n\tpublic instrumentsPerChannel: number;\r\n\tpublic loopStart: number;\r\n\tpublic loopLength: number;\r\n\tpublic pitchChannelCount: number;\r\n\tpublic noiseChannelCount: number;\r\n\tpublic modChannelCount: number;\r\n\tpublic readonly channels: Channel[] = [];\r\n\tpublic limitDecay: number = 4.0;\r\n\tpublic limitRise: number = 4000.0;\r\n\tpublic compressionThreshold: number = 1.0;\r\n\tpublic limitThreshold: number = 1.0;\r\n\tpublic compressionRatio: number = 1.0;\r\n\tpublic limitRatio: number = 1.0;\r\n\tpublic masterGain: number = 1.0;\r\n\tpublic inVolumeCap: number = 0.0;\r\n\tpublic outVolumeCap: number = 0.0;\r\n\r\n\t// Maximum value possible for the mod (total number of possible positions)\r\n\tpublic mstMaxVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n\t\t[ModSetting.mstNone, 6],\r\n\t\t[ModSetting.mstSongVolume, 100],\r\n\t\t[ModSetting.mstTempo, Config.tempoMax - Config.tempoMin],\r\n\t\t[ModSetting.mstReverb, Config.reverbRange - 1],\r\n\t\t[ModSetting.mstNextBar, 1],\r\n\t\t[ModSetting.mstInsVolume, Config.volumeRange],\r\n\t\t[ModSetting.mstPan, Config.panMax],\r\n\t\t[ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n\t\t[ModSetting.mstFilterPeak, Config.filterResonanceRange - 1],\r\n\t\t[ModSetting.mstFMSlider1, 15],\r\n\t\t[ModSetting.mstFMSlider2, 15],\r\n\t\t[ModSetting.mstFMSlider3, 15],\r\n\t\t[ModSetting.mstFMSlider4, 15],\r\n\t\t[ModSetting.mstFMFeedback, 15],\r\n\t\t[ModSetting.mstPulseWidth, Config.pulseWidthRange],\r\n\t\t[ModSetting.mstDetune, Config.detuneMax - Config.detuneMin],\r\n\t\t[ModSetting.mstVibratoDepth, 50],\r\n\t\t[ModSetting.mstSongDetune, Config.songDetuneMax - Config.songDetuneMin],\r\n\t\t[ModSetting.mstVibratoSpeed, 30],\r\n\t\t[ModSetting.mstVibratoDelay, 50],\r\n\t\t[ModSetting.mstArpeggioSpeed, 50],\r\n\t\t[ModSetting.mstPanDelay, 20],\r\n\t\t[ModSetting.mstResetArpeggio, 1],\r\n\t\t[ModSetting.mstMaxValue, 6],\r\n\t]\r\n\t);\r\n\r\n\t// When creating a new note, this is the value to set a mod note to (generally the most \"neutral\" value possible)\r\n\tpublic mstNewNoteVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n\t\t[ModSetting.mstNone, 6],\r\n\t\t[ModSetting.mstSongVolume, 100],\r\n\t\t[ModSetting.mstTempo, Math.ceil((Config.tempoMax - Config.tempoMin) / 2)],\r\n\t\t[ModSetting.mstReverb, 0],\r\n\t\t[ModSetting.mstNextBar, 1],\r\n\t\t[ModSetting.mstInsVolume, Math.ceil(Config.volumeRange / 2)],\r\n\t\t[ModSetting.mstPan, Math.ceil(Config.panMax / 2)],\r\n\t\t[ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n\t\t[ModSetting.mstFilterPeak, 0],\r\n\t\t[ModSetting.mstFMSlider1, 15],\r\n\t\t[ModSetting.mstFMSlider2, 15],\r\n\t\t[ModSetting.mstFMSlider3, 15],\r\n\t\t[ModSetting.mstFMSlider4, 15],\r\n\t\t[ModSetting.mstFMFeedback, 15],\r\n\t\t[ModSetting.mstPulseWidth, Math.ceil(Config.pulseWidthRange)],\r\n\t\t[ModSetting.mstDetune, Math.ceil((Config.detuneMax - Config.detuneMin) / 2)],\r\n\t\t[ModSetting.mstVibratoDepth, 0],\r\n\t\t[ModSetting.mstSongDetune, Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2)],\r\n\t\t[ModSetting.mstVibratoSpeed, 0],\r\n\t\t[ModSetting.mstVibratoDelay, 0],\r\n\t\t[ModSetting.mstArpeggioSpeed, 10],\r\n\t\t[ModSetting.mstPanDelay, 10],\r\n\t\t[ModSetting.mstResetArpeggio, 1],\r\n\t\t[ModSetting.mstMaxValue, 6],\r\n\t])\r\n\r\n\tconstructor(string?: string) {\r\n\t\tif (string != undefined) {\r\n\t\t\tthis.fromBase64String(string);\r\n\t\t} else {\r\n\t\t\tthis.initToDefault(true);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic modValueToReal(value: number, setting: ModSetting): number {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\tvalue += Config.tempoMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\tvalue -= Config.volumeRange / 2.0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\tvalue += Config.detuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\tvalue += Config.songDetuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\tcase ModSetting.mstNone:\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic isSettingForSong(setting: ModSetting): boolean {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\treturn true;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic realToModValue(value: number, setting: ModSetting): number {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\tvalue -= Config.tempoMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\tvalue += Config.volumeRange / 2.0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\tvalue -= Config.detuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\tvalue -= Config.songDetuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\tcase ModSetting.mstNone:\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t// Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\r\n\tpublic getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n\t\tif (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n\t\t\treturn 6;\r\n\t\telse {\r\n\t\t\t// Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n\t\t\tmodCount = Config.modCount - modCount - 1;\r\n\r\n\t\t\tlet cap: number | undefined = this.mstNewNoteVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n\r\n\t\t\t// For tempo, actually use user defined tempo\r\n\t\t\tif (this.channels[modChannel].instruments[modInstrument].modSettings[modCount] == ModSetting.mstTempo) {\r\n\t\t\t\tcap = this.realToModValue(this.tempo, ModSetting.mstTempo);\r\n\t\t\t}\r\n\r\n\t\t\tif (cap != undefined)\r\n\t\t\t\treturn cap;\r\n\t\t\telse\r\n\t\t\t\treturn 6;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n\t\tif (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n\t\t\treturn 6;\r\n\t\telse {\r\n\t\t\t// Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n\t\t\tmodCount = Config.modCount - modCount - 1;\r\n\r\n\t\t\tlet cap: number | undefined = this.mstMaxVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n\t\t\tif (cap != undefined)\r\n\t\t\t\treturn cap;\r\n\t\t\telse\r\n\t\t\t\treturn 6;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getVolumeCapForSetting = (isMod: boolean, modSetting: ModSetting): number => {\r\n\t\tif (!isMod)\r\n\t\t\treturn 6;\r\n\t\telse {\r\n\t\t\tlet cap: number | undefined = this.mstMaxVols.get(modSetting);\r\n\t\t\tif (cap != undefined)\r\n\t\t\t\treturn cap;\r\n\t\t\telse\r\n\t\t\t\treturn 6;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getChannelCount(): number {\r\n\t\treturn this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\r\n\t}\r\n\r\n\tpublic getChannelIsNoise(channel: number): boolean {\r\n\t\treturn (channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount);\r\n\t}\r\n\r\n\tpublic getChannelIsMod(channel: number): boolean {\r\n\t\treturn (channel >= this.pitchChannelCount + this.noiseChannelCount);\r\n\t}\r\n\r\n\tpublic initToDefault(andResetChannels: boolean = true): void {\r\n\t\tthis.scale = 0;\r\n\t\tthis.key = 0;\r\n\t\tthis.loopStart = 0;\r\n\t\tthis.loopLength = 4;\r\n\t\tthis.tempo = 100;\r\n\t\tthis.reverb = 0;\r\n\t\tthis.centerFrequency = 425.85465642512778279; // very specific :}\r\n\t\tthis.edo = 12;\r\n\t\tthis.maxPitch = this.edo * Config.pitchOctaves;\r\n\t\tthis.beatsPerBar = 6;\r\n\t\tthis.barCount = 16;\r\n\t\tthis.patternsPerChannel = 16;\r\n\t\tthis.rhythm = 3; // div4 standard\r\n\t\tthis.instrumentsPerChannel = 2;\r\n\r\n\t\tthis.title = \"Name Me!\";\r\n\t\tdocument.title = EditorConfig.versionDisplayName;\r\n\r\n\t\tif (andResetChannels) {\r\n\t\t\tthis.pitchChannelCount = 3;\r\n\t\t\tthis.noiseChannelCount = 1;\r\n\t\t\tthis.modChannelCount = 0;\r\n\t\t\tfor (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n\t\t\t\tif (this.channels.length <= channelIndex) {\r\n\t\t\t\t\tthis.channels[channelIndex] = new Channel();\r\n\t\t\t\t}\r\n\t\t\t\tconst channel: Channel = this.channels[channelIndex];\r\n\t\t\t\tchannel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0, 0, ...]; Descending octaves with drums at zero in last channel and onward.\r\n\r\n\t\t\t\tfor (let pattern = 0; pattern < this.patternsPerChannel; pattern++) {\r\n\t\t\t\t\tif (channel.patterns.length <= pattern) {\r\n\t\t\t\t\t\tchannel.patterns[pattern] = new Pattern();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchannel.patterns[pattern].reset();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchannel.patterns.length = this.patternsPerChannel;\r\n\r\n\t\t\t\tconst isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\tconst isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\tfor (let instrument = 0; instrument < this.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\tif (channel.instruments.length <= instrument) {\r\n\t\t\t\t\t\tchannel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchannel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.length = this.instrumentsPerChannel;\r\n\r\n\t\t\t\tfor (let bar = 0; bar < this.barCount; bar++) {\r\n\t\t\t\t\tchannel.bars[bar] = bar < 4 ? 1 : 0;\r\n\t\t\t\t}\r\n\t\t\t\tchannel.bars.length = this.barCount;\r\n\t\t\t}\r\n\t\t\tthis.channels.length = this.getChannelCount();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toBase64String(): string {\r\n\t\tlet bits: BitFieldWriter;\r\n\t\tlet buffer: number[] = [];\r\n\r\n\t\tbuffer.push(Song._variant); // TODO: Replace _variant Jummbox with variant Microbox\r\n\t\tbuffer.push(base64IntToCharCode[Song._latestJummBoxVersion]);\r\n\t\t// buffer.push(base64IntToCharCode[Song._latestMicroBoxVersion]);\r\n\r\n\t\tbuffer.push(SongTagCode.songTitle);\r\n\r\n\t\t// Length of the song name string\r\n\t\tvar encodedSongTitle: string = encodeURIComponent(this.title);\r\n\t\tbuffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\r\n\r\n\t\t// Actual encoded string follows\r\n\t\tfor (let i: number = 0; i < encodedSongTitle.length; i++) {\r\n\t\t\tbuffer.push(encodedSongTitle.charCodeAt(i));\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\r\n\t\tbuffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\r\n\t\t// buffer.push(SongTagCode.key, base64IntToCharCode[this.key]); // key relic (TODO)\r\n\t\tbuffer.push(SongTagCode.key, base64IntToCharCode[0]);\r\n\t\tbuffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\r\n\t\tbuffer.push(SongTagCode.reverb, base64IntToCharCode[this.reverb]);\r\n\t\tbuffer.push(SongTagCode.edo, base64IntToCharCode[this.edo]);\r\n\t\tbuffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\r\n\t\tbuffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.instrumentCount, base64IntToCharCode[this.instrumentsPerChannel - 1]);\r\n\t\tbuffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\r\n\r\n\t\t// Push limiter settings, but only if they aren't the default!\r\n\t\tbuffer.push(SongTagCode.limiterSettings);\r\n\t\tif (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\r\n\t\t\tbuffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbuffer.push(base64IntToCharCode[0x3f]); // Not using limiter\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.channelNames);\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t// Length of the channel name string\r\n\t\t\tvar encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\r\n\t\t\tbuffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\r\n\r\n\t\t\t// Actual encoded string follows\r\n\t\t\tfor (let i: number = 0; i < encodedChannelName.length; i++) {\r\n\t\t\t\tbuffer.push(encodedChannelName.charCodeAt(i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.channelOctave);\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tbuffer.push(base64IntToCharCode[this.channels[channel].octave]);\r\n\t\t}\r\n\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\tbuffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\r\n\t\t\t\tbuffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\r\n\t\t\t\tbuffer.push(SongTagCode.panning, base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\r\n\t\t\t\tbuffer.push(base64IntToCharCode[instrument.panDelay]); // Piggybacks after panning to reduce song tag code usage :P\r\n\t\t\t\tbuffer.push(SongTagCode.detune, base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3f]);\r\n\t\t\t\tbuffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\r\n\t\t\t\tbuffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects]);\r\n\r\n\r\n\t\t\t\tif (instrument.type != InstrumentType.drumset) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.transition, base64IntToCharCode[instrument.transition]);\r\n\t\t\t\t\t// Transition info follows transition song tag\r\n\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.tieNoteTransition]);\r\n\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterCutoff, base64IntToCharCode[instrument.filterCutoff]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterResonance, base64IntToCharCode[instrument.filterResonance]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterEnvelope, base64IntToCharCode[instrument.filterEnvelope]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.chord, base64IntToCharCode[instrument.chord]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.feedbackEnvelope, base64IntToCharCode[instrument.feedbackEnvelope]);\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.operatorFrequencies);\r\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.operatorAmplitudes);\r\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.operatorEnvelopes);\r\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.operators[o].envelope]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.customChipWave);\r\n\t\t\t\t\t// Push custom wave values\r\n\t\t\t\t\tfor (let j: number = 0; j < 64; j++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.spectrum);\r\n\t\t\t\t\tconst spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tspectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tspectrumBits.encodeBase64(buffer);\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterEnvelope);\r\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.spectrum);\r\n\t\t\t\t\tconst spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\tspectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tspectrumBits.encodeBase64(buffer);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.harmonics);\r\n\t\t\t\t\tconst harmonicsBits: BitFieldWriter = new BitFieldWriter();\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\tharmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tharmonicsBits.encodeBase64(buffer);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth], base64IntToCharCode[instrument.pulseEnvelope]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\t\t\t// Handled down below. Could be moved, but meh.\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error(\"Unknown instrument type.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.bars);\r\n\t\tbits = new BitFieldWriter();\r\n\t\tlet neededBits: number = 0;\r\n\t\twhile ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) for (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\tbits.write(neededBits, this.channels[channel].bars[i]);\r\n\t\t}\r\n\t\tbits.encodeBase64(buffer);\r\n\r\n\t\tbuffer.push(SongTagCode.patterns);\r\n\t\tbits = new BitFieldWriter();\r\n\t\tconst shapeBits: BitFieldWriter = new BitFieldWriter();\r\n\t\tlet neededInstrumentBits: number = 0;\r\n\t\twhile ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\r\n\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n\t\t\tconst isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n\t\t\t// Some info about modulator settings immediately follows in mod channels.\r\n\t\t\tif (isModChannel) {\r\n\t\t\t\tfor (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n\t\t\t\t\tlet instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\tconst modStatus: ModStatus = instrument.modStatuses[mod];\r\n\t\t\t\t\t\tconst modChannel: number = instrument.modChannels[mod];\r\n\t\t\t\t\t\tconst modInstrument: number = instrument.modInstruments[mod];\r\n\t\t\t\t\t\tconst modSetting: number = instrument.modSettings[mod];\r\n\r\n\t\t\t\t\t\tbits.write(2, modStatus);\r\n\r\n\t\t\t\t\t\t// Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) {\r\n\t\t\t\t\t\t\tbits.write(8, modChannel);\r\n\t\t\t\t\t\t\tbits.write(neededInstrumentBits, modInstrument);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Mod setting is only used if the status isn't \"none\".\r\n\t\t\t\t\t\tif (modStatus != ModStatus.msNone) {\r\n\t\t\t\t\t\t\tbits.write(6, modSetting);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * this.edo;\r\n\t\t\tlet lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : this.edo) + octaveOffset;\r\n\t\t\tconst recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n\t\t\tconst recentShapes: any[] = [];\r\n\r\n\t\t\tfor (let i: number = 0; i < recentPitches.length; i++) {\r\n\t\t\t\trecentPitches[i] += octaveOffset;\r\n\t\t\t}\r\n\t\t\tfor (const pattern of this.channels[channel].patterns) {\r\n\t\t\t\tbits.write(neededInstrumentBits, pattern.instrument);\r\n\r\n\t\t\t\tif (pattern.notes.length > 0) {\r\n\t\t\t\t\tbits.write(1, 1);\r\n\r\n\t\t\t\t\tlet curPart: number = 0;\r\n\t\t\t\t\tfor (const note of pattern.notes) {\r\n\r\n\t\t\t\t\t\t// For mod channels, a negative offset may be necessary.\r\n\t\t\t\t\t\tif (note.start < curPart && isModChannel) {\r\n\t\t\t\t\t\t\tbits.write(2, 0); // rest, then...\r\n\t\t\t\t\t\t\tbits.write(1, 1); // negative offset\r\n\t\t\t\t\t\t\tbits.writePartDuration(curPart - note.start);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (note.start > curPart) {\r\n\t\t\t\t\t\t\tbits.write(2, 0); // rest, then...\r\n\t\t\t\t\t\t\tif (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\r\n\t\t\t\t\t\t\tbits.writePartDuration(note.start - curPart);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tshapeBits.clear();\r\n\r\n\t\t\t\t\t\t// Old format was:\r\n\t\t\t\t\t\t// 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\r\n\t\t\t\t\t\t// New format is:\r\n\t\t\t\t\t\t//\t  0: 1 pitch\r\n\t\t\t\t\t\t// 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n\t\t\t\t\t\tif (note.pitches.length == 1) {\r\n\t\t\t\t\t\t\tshapeBits.write(1, 0);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tshapeBits.write(1, 1);\r\n\t\t\t\t\t\t\tshapeBits.write(3, note.pitches.length - 2);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tshapeBits.writePinCount(note.pins.length - 1);\r\n\r\n\t\t\t\t\t\tif (!isModChannel) {\r\n\t\t\t\t\t\t\tshapeBits.write(3, note.pins[0].volume); // volume\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tshapeBits.write(9, note.pins[0].volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet shapePart: number = 0;\r\n\t\t\t\t\t\tlet startPitch: number = note.pitches[0];\r\n\t\t\t\t\t\tlet currentPitch: number = startPitch;\r\n\t\t\t\t\t\tconst pitchBends: number[] = [];\r\n\t\t\t\t\t\tfor (let i: number = 1; i < note.pins.length; i++) {\r\n\t\t\t\t\t\t\tconst pin: NotePin = note.pins[i];\r\n\t\t\t\t\t\t\tconst nextPitch: number = startPitch + pin.interval;\r\n\t\t\t\t\t\t\tif (currentPitch != nextPitch) {\r\n\t\t\t\t\t\t\t\tshapeBits.write(1, 1);\r\n\t\t\t\t\t\t\t\tpitchBends.push(nextPitch);\r\n\t\t\t\t\t\t\t\tcurrentPitch = nextPitch;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tshapeBits.write(1, 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tshapeBits.writePartDuration(pin.time - shapePart);\r\n\t\t\t\t\t\t\tshapePart = pin.time;\r\n\r\n\t\t\t\t\t\t\tif (!isModChannel) {\r\n\t\t\t\t\t\t\t\tshapeBits.write(3, pin.volume); // volume\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tshapeBits.write(9, pin.volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\r\n\t\t\t\t\t\tconst shapeIndex: number = recentShapes.indexOf(shapeString);\r\n\t\t\t\t\t\tif (shapeIndex == -1) {\r\n\t\t\t\t\t\t\tbits.write(2, 1); // new shape\r\n\t\t\t\t\t\t\tbits.concat(shapeBits);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbits.write(1, 1); // old shape\r\n\t\t\t\t\t\t\tbits.writeLongTail(0, 0, shapeIndex);\r\n\t\t\t\t\t\t\trecentShapes.splice(shapeIndex, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trecentShapes.unshift(shapeString);\r\n\t\t\t\t\t\tif (recentShapes.length > 10) recentShapes.pop();\r\n\r\n\t\t\t\t\t\tconst allPitches: number[] = note.pitches.concat(pitchBends);\r\n\t\t\t\t\t\tfor (let i: number = 0; i < allPitches.length; i++) {\r\n\t\t\t\t\t\t\tconst pitch: number = allPitches[i];\r\n\t\t\t\t\t\t\tconst pitchIndex: number = recentPitches.indexOf(pitch);\r\n\t\t\t\t\t\t\tif (pitchIndex == -1) {\r\n\t\t\t\t\t\t\t\tlet interval: number = 0;\r\n\t\t\t\t\t\t\t\tlet pitchIter: number = lastPitch;\r\n\t\t\t\t\t\t\t\tif (pitchIter < pitch) {\r\n\t\t\t\t\t\t\t\t\twhile (pitchIter != pitch) {\r\n\t\t\t\t\t\t\t\t\t\tpitchIter++;\r\n\t\t\t\t\t\t\t\t\t\tif (recentPitches.indexOf(pitchIter) == -1) interval++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\twhile (pitchIter != pitch) {\r\n\t\t\t\t\t\t\t\t\t\tpitchIter--;\r\n\t\t\t\t\t\t\t\t\t\tif (recentPitches.indexOf(pitchIter) == -1) interval--;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbits.write(1, 0);\r\n\t\t\t\t\t\t\t\tbits.writePitchInterval(interval);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbits.write(1, 1);\r\n\t\t\t\t\t\t\t\tbits.write(4, pitchIndex);\r\n\t\t\t\t\t\t\t\trecentPitches.splice(pitchIndex, 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trecentPitches.unshift(pitch);\r\n\t\t\t\t\t\t\tif (recentPitches.length > 16) recentPitches.pop();\r\n\r\n\t\t\t\t\t\t\tif (i == note.pitches.length - 1) {\r\n\t\t\t\t\t\t\t\tlastPitch = note.pitches[0];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlastPitch = pitch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurPart = note.end;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\t\t\t\t\t\tbits.write(2, 0); // rest, then...\r\n\t\t\t\t\t\tif (isModChannel) bits.write(1, 0); // positive offset\r\n\t\t\t\t\t\tbits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbits.write(1, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet stringLength: number = bits.lengthBase64();\r\n\t\tlet digits: number[] = [];\r\n\t\twhile (stringLength > 0) {\r\n\t\t\tdigits.unshift(base64IntToCharCode[stringLength & 0x3f]);\r\n\t\t\tstringLength = stringLength >> 6;\r\n\t\t}\r\n\t\tbuffer.push(base64IntToCharCode[digits.length]);\r\n\t\tArray.prototype.push.apply(buffer, digits); // append digits to buffer.\r\n\t\tbits.encodeBase64(buffer);\r\n\r\n\t\tconst maxApplyArgs: number = 64000;\r\n\t\tif (buffer.length < maxApplyArgs) {\r\n\t\t\t// Note: Function.apply may break for long argument lists.\r\n\t\t\treturn String.fromCharCode.apply(null, buffer);\r\n\t\t} else {\r\n\t\t\tlet result: string = \"\";\r\n\t\t\tfor (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\r\n\t\t\t\tresult += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic fromBase64String(compressed: string): void {\r\n\t\tif (compressed == null || compressed == \"\") {\r\n\t\t\tthis.initToDefault(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet charIndex: number = 0;\r\n\t\t// skip whitespace.\r\n\t\twhile (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\r\n\t\t// skip hash mark.\r\n\t\tif (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\r\n\t\t// if it starts with curly brace, treat it as JSON.\r\n\t\tif (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\r\n\t\t\tthis.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst variantTest: number = compressed.charCodeAt(charIndex);\r\n\t\tvar variant: string = \"beepbox\";\r\n\r\n\t\t// Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\r\n\t\tif (variantTest == 0x6A) { //\"j\"\r\n\t\t\tvariant = \"jummbox\";\r\n\t\t\tcharIndex++;\r\n\t\t}\r\n\t\t// if (variantTest == 0x6D) { //\"m\"\r\n\t\t// \tvariant = \"microbox\";\r\n\t\t// \tcharIndex++;\r\n\t\t// }\r\n\r\n\t\tconst version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\tif (variant == \"beepbox\" && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\r\n\t\tif (variant == \"jummbox\" && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\r\n\t\t// if (variant == \"microbox\" && (version == -1 || version > Song._latestMicroBoxVersion || version < Song._oldestMicroBoxVersion)) return;\r\n\r\n\r\n\t\tconst beforeTwo: boolean = version < 2;\r\n\t\tconst beforeThree: boolean = version < 3;\r\n\t\tconst beforeFour: boolean = version < 4;\r\n\t\tconst beforeFive: boolean = version < 5;\r\n\t\tconst beforeSix: boolean = version < 6;\r\n\t\tconst beforeSeven: boolean = version < 7;\r\n\t\tconst beforeEight: boolean = version < 8;\r\n\t\tthis.initToDefault(variant == \"beepbox\" && beforeSix);\r\n\r\n\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t// Originally, the only instrument transition was \"seamless\" and the only drum wave was \"retro\".\r\n\t\t\tfor (const channel of this.channels) channel.instruments[0].transition = 0;\r\n\t\t\tthis.channels[3].instruments[0].chipNoise = 0;\r\n\t\t}\r\n\r\n\t\tlet instrumentChannelIterator: number = 0;\r\n\t\tlet instrumentIndexIterator: number = -1;\r\n\t\tlet toSetOctaves: number[] = [];\r\n\t\tlet command: number;\r\n\t\tlet channel: number;\r\n\t\tlet useSlowerArpSpeed: boolean = false;\r\n\t\tlet useFastTwoNoteArp: boolean = false;\r\n\t\twhile (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\r\n\t\t\tcase SongTagCode.songTitle: {\r\n\t\t\t\t// Length of song name string\r\n\t\t\t\tvar songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tthis.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\r\n\t\t\t\tdocument.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n\r\n\t\t\t\tcharIndex += songNameLength;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.channelCount: {\r\n\t\t\t\tthis.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tthis.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tif (variant == \"beepbox\" || beforeTwo) {\r\n\t\t\t\t\t// No mod channel support before jummbox v2\r\n\t\t\t\t\tthis.modChannelCount = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t}\r\n\t\t\t\tthis.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\r\n\t\t\t\tthis.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\r\n\t\t\t\tthis.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\r\n\r\n\t\t\t\tfor (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\r\n\t\t\t\t\tthis.channels[channelIndex] = new Channel();\r\n\t\t\t\t}\r\n\t\t\t\tthis.channels.length = this.getChannelCount();\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.scale: {\r\n\t\t\t\tthis.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t// All the scales were jumbled around by Jummbox. Just convert to free.\r\n\t\t\t\tif (variant == \"beepbox\") this.scale = 0;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.key: {\r\n\t\t\t\t// if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t// \tthis.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \tthis.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t// } // key relic (TODO)\r\n\t\t\t\tcharIndex++;\r\n\t\t\t\tthis.key = 0;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.loopStart: {\r\n\t\t\t\tif (beforeFive && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.loopEnd: {\r\n\t\t\t\tif (beforeFive && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.tempo: {\r\n\t\t\t\tif (beforeFour && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.reverb: {\r\n\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\tthis.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 8;\r\n\t\t\t\t\tthis.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.edo: {\r\n\t\t\t\tif (beforeEight && ( variant == \"beepbox\" || variant == \"jummbox\")) {\r\n\t\t\t\t\tthis.edo = 12;\r\n\t\t\t\t\tcharIndex++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.edo = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.beatCount: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.barCount: {\r\n\t\t\t\tconst barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\tthis.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\r\n\t\t\t\tfor (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\tfor (let bar = this.channels[channel].bars.length; bar < this.barCount; bar++) {\r\n\t\t\t\t\t\tthis.channels[channel].bars[bar] = (bar < 4) ? 1 : 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[channel].bars.length = this.barCount;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.patternCount: {\r\n\t\t\t\tif (variant == \"beepbox\" && beforeEight) {\r\n\t\t\t\t\tthis.patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.patternsPerChannel = validateRange(1, Config.barCountMax, this.patternsPerChannel);\r\n\t\t\t\tfor (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\tfor (let pattern = this.channels[channel].patterns.length; pattern < this.patternsPerChannel; pattern++) {\r\n\t\t\t\t\t\tthis.channels[channel].patterns[pattern] = new Pattern();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[channel].patterns.length = this.patternsPerChannel;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.instrumentCount: {\r\n\t\t\t\tconst instrumentsPerChannel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\tthis.instrumentsPerChannel = validateRange(Config.instrumentsPerChannelMin, Config.instrumentsPerChannelMax, instrumentsPerChannel);\r\n\t\t\t\tfor (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\tconst isNoiseChannel: boolean = channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\t\tconst isModChannel: boolean = channel >= this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\t\tfor (let instrumentIndex = this.channels[channel].instruments.length; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\t\t\t\t\t\tthis.channels[channel].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[channel].instruments.length = this.instrumentsPerChannel;\r\n\t\t\t\t\tif (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\t\tfor (let instrumentIndex = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.rhythm: {\r\n\t\t\t\tthis.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t// Port all arpeggio speeds over to match what they were, before arpeggio speed was decoupled from rhythm.\r\n\t\t\t\tif (variant == \"jummbox\" && beforeThree || variant == \"beepbox\") {\r\n\t\t\t\t\t// These are all the rhythms that had 4 ticks/arpeggio instead of 3.\r\n\t\t\t\t\tif (this.rhythm == 0 || this.rhythm == 2) {\r\n\t\t\t\t\t\tuseSlowerArpSpeed = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Use faster two note arp on these rhythms\r\n\t\t\t\t\tif (this.rhythm >= 2) {\r\n\t\t\t\t\t\tuseFastTwoNoteArp = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.channelOctave: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t// Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n\t\t\t\t\tthis.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\ttoSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\t// Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n\t\t\t\t\t\tthis.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\ttoSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.startInstrument: {\r\n\t\t\t\tinstrumentIndexIterator++;\r\n\t\t\t\tif (instrumentIndexIterator >= this.instrumentsPerChannel) {\r\n\t\t\t\t\tinstrumentChannelIterator++;\r\n\t\t\t\t\tinstrumentIndexIterator = 0;\r\n\t\t\t\t}\r\n\t\t\t\tvalidateRange(0, this.channels.length - 1, instrumentChannelIterator);\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tconst instrumentType: number = clamp(0, InstrumentType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\tinstrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\r\n\t\t\t\tif (useSlowerArpSpeed) {\r\n\t\t\t\t\tinstrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\r\n\t\t\t\t}\r\n\t\t\t\tif (useFastTwoNoteArp) {\r\n\t\t\t\t\tinstrument.fastTwoNoteArp = true;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.preset: {\r\n\t\t\t\tconst presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.wave: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n\t\t\t\t\tconst channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.channels[channel].instruments[0].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tif (channel >= this.pitchChannelCount) {\r\n\t\t\t\t\t\t\t\tthis.channels[channel].instruments[i].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.channels[channel].instruments[i].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n\t\t\t\t\tif (instrumentChannelIterator >= this.pitchChannelCount) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (instrumentChannelIterator >= this.pitchChannelCount) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.filterCutoff: {\r\n\t\t\t\tif (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n\t\t\t\t\tconst legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n\t\t\t\t\tconst filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n\r\n\t\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[0];\r\n\t\t\t\t\t\tconst legacyFilter: number = [1, 3, 4, 5][clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n\t\t\t\t\t\tinstrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\t\t\t\t\tconst legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n\t\t\t\t\t\t\t\tif (channel < this.pitchChannelCount) {\r\n\t\t\t\t\t\t\t\t\tinstrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\t\t\t\t\t\t\tinstrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\t\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tinstrument.filterCutoff = 10;\r\n\t\t\t\t\t\t\t\t\tinstrument.filterEnvelope = 1;\r\n\t\t\t\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\t\tinstrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.filterCutoff = clamp(0, Config.filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.filterResonance: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].filterResonance = clamp(0, Config.filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.filterEnvelope: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\t\tinstrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstrument.filterEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.pulseWidth: {\r\n\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t// Convert back from beepbox's weird pulse width storage formula, rounding. The \"7\" in there is the old\r\n\t\t\t\t\t// piece of the formula \"beepbox.Config.pulseWidthRange - 1\".\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.pulseWidth = Math.round(clamp(0, Config.pulseWidthRange + 1, Math.pow(0.5, (7 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 0.5) * 50));\r\n\t\t\t\t\tinstrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.pulseWidth = clamp(0, Config.pulseWidthRange + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tinstrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.transition: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.channels[channel].instruments[0].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].instruments[i].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeFour || variant == \"beepbox\") {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].tieNoteTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.vibrato: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyEffects: number[] = [0, 3, 2, 0];\r\n\t\t\t\t\tconst legacyEnvelopes: number[] = [1, 1, 1, 13];\r\n\t\t\t\t\tconst channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[0];\r\n\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\r\n\t\t\t\t\tinstrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n\t\t\t\t\t\t? legacyEnvelopes[effect]\r\n\t\t\t\t\t\t: instrument.filterEnvelope;\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n\t\t\t\t\tconst legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\r\n\t\t\t\t\t\t\tinstrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n\t\t\t\t\t\t\t\t? legacyEnvelopes[effect]\r\n\t\t\t\t\t\t\t\t: instrument.filterEnvelope;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n\t\t\t\t\tconst legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\r\n\t\t\t\t\tinstrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n\t\t\t\t\t\t? legacyEnvelopes[effect]\r\n\t\t\t\t\t\t: instrument.filterEnvelope;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.vibrato = vibrato;\r\n\t\t\t\t\t// Custom vibrato\r\n\t\t\t\t\tif (vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tinstrument.vibratoDepth = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDepth)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\r\n\t\t\t\t\t\tinstrument.vibratoSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\tinstrument.vibratoDelay = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDelay)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\tinstrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Enforce standard vibrato settings\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinstrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n\t\t\t\t\t\tinstrument.vibratoSpeed = 10; // Normal speed\r\n\t\t\t\t\t\tinstrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\t\t\t\tinstrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.arpeggioSpeed: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tinstrument.arpeggioSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstArpeggioSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\tinstrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.interval: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.channels[channel].instruments[0].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tconst originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t\t\tlet interval: number = clamp(0, Config.intervals.length, originalValue);\r\n\t\t\t\t\t\t\tif (originalValue == 8) {\r\n\t\t\t\t\t\t\t\t// original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n\t\t\t\t\t\t\t\tinterval = 2;\r\n\t\t\t\t\t\t\t\tthis.channels[channel].instruments[i].chord = 3;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.channels[channel].instruments[i].interval = interval;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tlet interval: number = clamp(0, Config.intervals.length, originalValue);\r\n\t\t\t\t\tif (originalValue == 8) {\r\n\t\t\t\t\t\t// original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n\t\t\t\t\t\tinterval = 2;\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = interval;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.chord: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.effects: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].effects = clamp(0, Config.effectsNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.volume: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[0];\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n\t\t\t\t} else if (variant == \"beepbox\") {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\t// Beepbox v7's volume range is 0-7 (0 is max, 7 is mute)\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\t// Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.panning: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t// Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n\t\t\t\t\tinstrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tinstrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Now, pan delay follows on new versions of jummbox.\r\n\t\t\t\tif (variant == \"jummbox\" && !beforeThree)\r\n\t\t\t\t\tinstrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.detune: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n\t\t\t\tinstrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) + Config.detuneMin);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.customChipWave: {\r\n\t\t\t\tlet instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t// Pop custom wave values\r\n\t\t\t\tfor (let j: number = 0; j < 64; j++) {\r\n\t\t\t\t\tinstrument.customChipWave[j]\r\n\t\t\t\t\t\t= clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet sum: number = 0.0;\r\n\t\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\t\tsum += instrument.customChipWave[i];\r\n\t\t\t\t}\r\n\t\t\t\tconst average: number = sum / instrument.customChipWave.length;\r\n\r\n\t\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\t\tlet cumulative: number = 0;\r\n\t\t\t\tlet wavePrev: number = 0;\r\n\t\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\t\twavePrev = instrument.customChipWave[i] - average;\r\n\t\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 65th, last sample is for anti-aliasing\r\n\t\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.limiterSettings: {\r\n\t\t\t\tlet nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\t\t\t// Check if limiter settings are used... if not, restore to default\r\n\t\t\t\tif (nextValue == 0x3f) {\r\n\t\t\t\t\t// Limiter isn't used\r\n\t\t\t\t\tthis.compressionRatio = 1.0;\r\n\t\t\t\t\tthis.limitRatio = 1.0;\r\n\t\t\t\t\tthis.limitRise = 4000.0;\r\n\t\t\t\t\tthis.limitDecay = 4.0;\r\n\t\t\t\t\tthis.limitThreshold = 1.0;\r\n\t\t\t\t\tthis.compressionThreshold = 1.0;\r\n\t\t\t\t\tthis.masterGain = 1.0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Limiter is used, grab values\r\n\t\t\t\t\tthis.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\r\n\t\t\t\t\tnextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\r\n\t\t\t\t\tthis.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\r\n\t\t\t\t\tthis.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n\t\t\t\t\tthis.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n\t\t\t\t\tthis.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.channelNames: {\r\n\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t// Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\r\n\t\t\t\t\tvar channelNameLength;\r\n\t\t\t\t\tif (beforeFour)\r\n\t\t\t\t\t\tchannelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tchannelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tthis.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\r\n\r\n\t\t\t\t\tcharIndex += channelNameLength;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.algorithm: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.feedbackType: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.feedbackAmplitude: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.feedbackEnvelope: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.operatorFrequencies: {\r\n\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.operatorAmplitudes: {\r\n\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.operatorEnvelopes: {\r\n\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].envelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.spectrum: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tconst byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t\tcharIndex += byteCount;\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tconst byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\tinstrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tinstrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcharIndex += byteCount;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"Unhandled instrument type for spectrum song tag code.\");\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.harmonics: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tconst byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\r\n\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\r\n\t\t\t\t}\r\n\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\r\n\t\t\t\tcharIndex += byteCount;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.bars: {\r\n\t\t\t\tlet subStringLength: number;\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tconst barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tsubStringLength = Math.ceil(barCount * 0.5);\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n\t\t\t\t\tfor (let i: number = 0; i < barCount; i++) {\r\n\t\t\t\t\t\tthis.channels[channel].bars[i] = bits.read(3) + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeFive && variant == \"beepbox\") {\r\n\t\t\t\t\tlet neededBits: number = 0;\r\n\t\t\t\t\twhile ((1 << neededBits) < this.patternsPerChannel) neededBits++;\r\n\t\t\t\t\tsubStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].bars[i] = bits.read(neededBits) + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet neededBits: number = 0;\r\n\t\t\t\t\twhile ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n\t\t\t\t\tsubStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].bars[i] = bits.read(neededBits);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcharIndex += subStringLength;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.patterns: {\r\n\t\t\t\tlet bitStringLength: number = 0;\r\n\t\t\t\tlet channel: number;\r\n\t\t\t\tlet largerChords: boolean = !((beforeFour && variant == \"jummbox\") || variant == \"beepbox\");\r\n\t\t\t\tlet recentPitchBitLength: number = (largerChords ? 4 : 3);\r\n\t\t\t\tlet recentPitchLength: number = (largerChords ? 16 : 8);\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\t\t\t\t// The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default.\r\n\t\t\t\t\tcharIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\t\t\t\tbitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tbitStringLength = bitStringLength << 6;\r\n\t\t\t\t\tbitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchannel = 0;\r\n\t\t\t\t\tlet bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\twhile (bitStringLengthLength > 0) {\r\n\t\t\t\t\t\tbitStringLength = bitStringLength << 6;\r\n\t\t\t\t\t\tbitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t\tbitStringLengthLength--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\r\n\t\t\t\tcharIndex += bitStringLength;\r\n\r\n\t\t\t\tlet neededInstrumentBits: number = 0;\r\n\t\t\t\twhile ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n\t\t\t\t\tconst isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n\t\t\t\t\t// Some info about modulator settings immediately follows in mod channels.\r\n\t\t\t\t\tif (isModChannel) {\r\n\t\t\t\t\t\tfor (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n\t\t\t\t\t\t\tlet instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n\t\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\t\tinstrument.modStatuses[mod] = bits.read(2);\r\n\r\n\t\t\t\t\t\t\t\t// Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msForPitch || instrument.modStatuses[mod] == ModStatus.msForNoise) {\r\n\r\n\t\t\t\t\t\t\t\t\t// Clamp to pitch/noise max\r\n\t\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n\t\t\t\t\t\t\t\t\t\tinstrument.modChannels[mod] = clamp(0, this.pitchChannelCount + 1, bits.read(8));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tinstrument.modChannels[mod] = clamp(0, this.noiseChannelCount + 1, bits.read(8));\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tinstrument.modInstruments[mod] = clamp(0, this.instrumentsPerChannel + 1, bits.read(neededInstrumentBits));\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Mod setting is only used if the status isn't \"none\".\r\n\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] != ModStatus.msNone) {\r\n\t\t\t\t\t\t\t\t\tinstrument.modSettings[mod] = bits.read(6);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * this.edo;\r\n\t\t\t\t\tlet note: Note | null = null;\r\n\t\t\t\t\tlet pin: NotePin | null = null;\r\n\t\t\t\t\tlet lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : this.edo) + octaveOffset;\r\n\t\t\t\t\tconst recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n\t\t\t\t\tconst recentShapes: any[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < recentPitches.length; i++) {\r\n\t\t\t\t\t\trecentPitches[i] += octaveOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n\t\t\t\t\t\tconst newPattern: Pattern = this.channels[channel].patterns[i];\r\n\t\t\t\t\t\tnewPattern.reset();\r\n\t\t\t\t\t\tnewPattern.instrument = bits.read(neededInstrumentBits);\r\n\r\n\t\t\t\t\t\tif (!(variant == \"beepbox\" && beforeThree) && bits.read(1) == 0) continue;\r\n\r\n\t\t\t\t\t\tlet curPart: number = 0;\r\n\t\t\t\t\t\tconst newNotes: Note[] = newPattern.notes;\r\n\t\t\t\t\t\t// Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\r\n\t\t\t\t\t\twhile (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\r\n\t\t\t\t\t\t\tconst useOldShape: boolean = bits.read(1) == 1;\r\n\t\t\t\t\t\t\tlet newNote: boolean = false;\r\n\t\t\t\t\t\t\tlet shapeIndex: number = 0;\r\n\t\t\t\t\t\t\tif (useOldShape) {\r\n\t\t\t\t\t\t\t\tshapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnewNote = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (!useOldShape && !newNote) {\r\n\t\t\t\t\t\t\t\t// For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\r\n\t\t\t\t\t\t\t\tif (isModChannel) {\r\n\t\t\t\t\t\t\t\t\tconst isBackwards: boolean = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t\t\tconst restLength: number = bits.readPartDuration();\r\n\t\t\t\t\t\t\t\t\tif (isBackwards) {\r\n\t\t\t\t\t\t\t\t\t\tcurPart -= restLength;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcurPart += restLength;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconst restLength: number = (beforeSeven && variant == \"beepbox\")\r\n\t\t\t\t\t\t\t\t\t\t? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n\t\t\t\t\t\t\t\t\t\t: bits.readPartDuration();\r\n\t\t\t\t\t\t\t\t\tcurPart += restLength;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlet shape: any;\r\n\t\t\t\t\t\t\t\tlet pinObj: any;\r\n\t\t\t\t\t\t\t\tlet pitch: number;\r\n\t\t\t\t\t\t\t\tif (useOldShape) {\r\n\t\t\t\t\t\t\t\t\tshape = recentShapes[shapeIndex];\r\n\t\t\t\t\t\t\t\t\trecentShapes.splice(shapeIndex, 1);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tshape = {};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!largerChords) {\r\n\t\t\t\t\t\t\t\t\t\t// Old format: X 1's followed by a 0 => X+1 pitches, up to 4\r\n\t\t\t\t\t\t\t\t\t\tshape.pitchCount = 1;\r\n\t\t\t\t\t\t\t\t\t\twhile (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t// New format is:\r\n\t\t\t\t\t\t\t\t\t\t//\t  0: 1 pitch\r\n\t\t\t\t\t\t\t\t\t\t// 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n\t\t\t\t\t\t\t\t\t\tif (bits.read(1) == 1) {\r\n\t\t\t\t\t\t\t\t\t\t\tshape.pitchCount = bits.read(3) + 2;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tshape.pitchCount = 1;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tshape.pinCount = bits.readPinCount();\r\n\r\n\t\t\t\t\t\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t\t\t\t\t\tshape.initialVolume = bits.read(2) * 2;\r\n\t\t\t\t\t\t\t\t\t} else if (!isModChannel) {\r\n\t\t\t\t\t\t\t\t\t\tshape.initialVolume = bits.read(3);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tshape.initialVolume = bits.read(9);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tshape.pins = [];\r\n\t\t\t\t\t\t\t\t\tshape.length = 0;\r\n\t\t\t\t\t\t\t\t\tshape.bendCount = 0;\r\n\t\t\t\t\t\t\t\t\tfor (let j: number = 0; j < shape.pinCount; j++) {\r\n\t\t\t\t\t\t\t\t\t\tpinObj = {};\r\n\t\t\t\t\t\t\t\t\t\tpinObj.pitchBend = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t\t\t\tif (pinObj.pitchBend) shape.bendCount++;\r\n\t\t\t\t\t\t\t\t\t\tshape.length += (beforeSeven && variant == \"beepbox\")\r\n\t\t\t\t\t\t\t\t\t\t\t? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n\t\t\t\t\t\t\t\t\t\t\t: bits.readPartDuration();\r\n\t\t\t\t\t\t\t\t\t\tpinObj.time = shape.length;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t\t\t\t\t\t\tpinObj.volume = bits.read(2) * 2;\r\n\t\t\t\t\t\t\t\t\t\t} else if (!isModChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\tpinObj.volume = bits.read(3);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tpinObj.volume = bits.read(9);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tshape.pins.push(pinObj);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\trecentShapes.unshift(shape);\r\n\t\t\t\t\t\t\t\tif (recentShapes.length > 10) recentShapes.pop();\r\n\r\n\t\t\t\t\t\t\t\tnote = new Note(0, curPart, curPart + shape.length, shape.initialVolume);\r\n\t\t\t\t\t\t\t\tnote.pitches = [];\r\n\t\t\t\t\t\t\t\tnote.pins.length = 1;\r\n\t\t\t\t\t\t\t\tconst pitchBends: number[] = [];\r\n\t\t\t\t\t\t\t\tfor (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\r\n\t\t\t\t\t\t\t\t\tconst useOldPitch: boolean = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t\t\tif (!useOldPitch) {\r\n\t\t\t\t\t\t\t\t\t\tconst interval: number = bits.readPitchInterval();\r\n\t\t\t\t\t\t\t\t\t\tpitch = lastPitch;\r\n\t\t\t\t\t\t\t\t\t\tlet intervalIter: number = interval;\r\n\t\t\t\t\t\t\t\t\t\twhile (intervalIter > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpitch++;\r\n\t\t\t\t\t\t\t\t\t\t\twhile (recentPitches.indexOf(pitch) != -1) pitch++;\r\n\t\t\t\t\t\t\t\t\t\t\tintervalIter--;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\twhile (intervalIter < 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpitch--;\r\n\t\t\t\t\t\t\t\t\t\t\twhile (recentPitches.indexOf(pitch) != -1) pitch--;\r\n\t\t\t\t\t\t\t\t\t\t\tintervalIter++;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tconst pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\r\n\t\t\t\t\t\t\t\t\t\tpitch = recentPitches[pitchIndex];\r\n\t\t\t\t\t\t\t\t\t\trecentPitches.splice(pitchIndex, 1);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\trecentPitches.unshift(pitch);\r\n\t\t\t\t\t\t\t\t\tif (recentPitches.length > recentPitchLength) recentPitches.pop();\r\n\r\n\t\t\t\t\t\t\t\t\tif (j < shape.pitchCount) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tpitchBends.push(pitch);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (j == shape.pitchCount - 1) {\r\n\t\t\t\t\t\t\t\t\t\tlastPitch = note.pitches[0];\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tlastPitch = pitch;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tpitchBends.unshift(note.pitches[0]);\r\n\r\n\t\t\t\t\t\t\t\tfor (const pinObj of shape.pins) {\r\n\t\t\t\t\t\t\t\t\tif (pinObj.pitchBend) pitchBends.shift();\r\n\t\t\t\t\t\t\t\t\tpin = makeNotePin(pitchBends[0] - note.pitches[0], pinObj.time, pinObj.volume);\r\n\t\t\t\t\t\t\t\t\tnote.pins.push(pin);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcurPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\r\n\t\t\t\t\t\t\t\tnewNotes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchannel++;\r\n\t\t\t\t\t\tif (channel >= this.getChannelCount()) break;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // while (true)\r\n\t\t\t} break;\r\n\t\t\tdefault: {\r\n\t\t\t\tthrow new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1));\r\n\t\t\t} break;\r\n\t\t}\r\n\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tif (toSetOctaves[channel] != null) {\r\n\t\t\t\tthis.channels[channel].octave = toSetOctaves[channel];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\r\n\t\tconst channelArray: Object[] = [];\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tconst instrumentArray: Object[] = [];\r\n\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n\t\t\tconst isModChannel: boolean = this.getChannelIsMod(channel);\r\n\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\tinstrumentArray.push(this.channels[channel].instruments[i].toJsonObject());\r\n\t\t\t}\r\n\r\n\t\t\tconst patternArray: Object[] = [];\r\n\t\t\tfor (const pattern of this.channels[channel].patterns) {\r\n\t\t\t\tconst noteArray: Object[] = [];\r\n\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\tlet volumeCap: number = this.getVolumeCapForSetting(isModChannel, this.channels[channel].instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n\t\t\t\t\tconst pointArray: Object[] = [];\r\n\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\tlet useVol: number = isModChannel ? Math.round(pin.volume) : Math.round(pin.volume * 100 / volumeCap);\r\n\t\t\t\t\t\tpointArray.push({\r\n\t\t\t\t\t\t\t\"tick\": (pin.time + note.start) * Config.rhythms[this.rhythm].stepsPerBeat / Config.partsPerBeat,\r\n\t\t\t\t\t\t\t\"pitchBend\": pin.interval,\r\n\t\t\t\t\t\t\t\"volume\": useVol,\r\n\t\t\t\t\t\t\t\"forMod\": isModChannel,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnoteArray.push({\r\n\t\t\t\t\t\t\"pitches\": note.pitches,\r\n\t\t\t\t\t\t\"points\": pointArray,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpatternArray.push({\r\n\t\t\t\t\t\"instrument\": pattern.instrument + 1,\r\n\t\t\t\t\t\"notes\": noteArray,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst sequenceArray: number[] = [];\r\n\t\t\tif (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\r\n\t\t\t\tsequenceArray.push(this.channels[channel].bars[i]);\r\n\t\t\t}\r\n\t\t\tfor (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\r\n\t\t\t\tsequenceArray.push(this.channels[channel].bars[i]);\r\n\t\t\t}\r\n\t\t\tif (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\r\n\t\t\t\tsequenceArray.push(this.channels[channel].bars[i]);\r\n\t\t\t}\r\n\r\n\t\t\tchannelArray.push({\r\n\t\t\t\t\"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\r\n\t\t\t\t\"octaveScrollBar\": this.channels[channel].octave,\r\n\t\t\t\t\"instruments\": instrumentArray,\r\n\t\t\t\t\"patterns\": patternArray,\r\n\t\t\t\t\"sequence\": sequenceArray,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t\"name\": this.title,\r\n\t\t\t\"format\": Song._format,\r\n\t\t\t\"version\": Song._latestJummBoxVersion,\r\n\t\t\t\"scale\": Config.scales[this.scale].name,\r\n\t\t\t// \"key\": Config.keys[this.key].name, // key relic (TODO)\r\n\t\t\t\"introBars\": this.loopStart,\r\n\t\t\t\"loopBars\": this.loopLength,\r\n\t\t\t\"beatsPerBar\": this.beatsPerBar,\r\n\t\t\t\"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\r\n\t\t\t\"beatsPerMinute\": this.tempo,\r\n\t\t\t\"reverb\": this.reverb,\r\n\t\t\t//\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\r\n\t\t\t//\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\r\n\t\t\t//\"instrumentsPerChannel\": this.instrumentsPerChannel, //derive this from instrument arrays?\r\n\t\t\t\"channels\": channelArray,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic fromJsonObject(jsonObject: any): void { //TODO: edo decoding\r\n\t\tthis.initToDefault(true);\r\n\t\tif (!jsonObject) return;\r\n\r\n\t\t//const version: number = jsonObject[\"version\"] | 0;\r\n\t\t//if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\r\n\r\n\t\tif (jsonObject[\"name\"] != undefined) {\r\n\t\t\tthis.title = jsonObject[\"name\"];\r\n\t\t}\r\n\r\n\t\tthis.scale = 0; // default to free.\r\n\t\tif (jsonObject[\"scale\"] != undefined) {\r\n\t\t\tconst oldScaleNames: Dictionary<string> = {\r\n\t\t\t\t\"romani :)\": \"dbl harmonic :)\",\r\n\t\t\t\t\"romani :(\": \"dbl harmonic :(\",\r\n\t\t\t\t\"enigma\": \"strange\",\r\n\t\t\t};\r\n\t\t\tconst scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\r\n\t\t\tconst scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\r\n\t\t\tif (scale != -1) this.scale = scale;\r\n\t\t}\r\n\r\n\t\t// if (jsonObject[\"key\"] != undefined) {\r\n\t\t// \tif (typeof (jsonObject[\"key\"]) == \"number\") {\r\n\t\t// \t\tthis.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\r\n\t\t// \t} else if (typeof (jsonObject[\"key\"]) == \"string\") {\r\n\t\t// \t\tconst key: string = jsonObject[\"key\"];\r\n\t\t// \t\tconst letter: string = key.charAt(0).toUpperCase();\r\n\t\t// \t\tconst symbol: string = key.charAt(1).toLowerCase();\r\n\t\t// \t\tconst letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\r\n\t\t// \t\tconst accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\r\n\t\t// \t\tlet index: number | undefined = letterMap[letter];\r\n\t\t// \t\tconst offset: number | undefined = accidentalMap[symbol];\r\n\t\t// \t\tif (index != undefined) {\r\n\t\t// \t\t\tif (offset != undefined) index += offset;\r\n\t\t// \t\t\tif (index < 0) index += 12;\r\n\t\t// \t\t\tindex = index % 12;\r\n\t\t// \t\t\tthis.key = index;\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// }\r\n\t\tthis.key = 0; // key relic (TODO)\r\n\r\n\t\tif (jsonObject[\"beatsPerMinute\"] != undefined) {\r\n\t\t\tthis.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\r\n\t\t}\r\n\r\n\t\tif (jsonObject[\"reverb\"] != undefined) {\r\n\t\t\tthis.reverb = clamp(0, Config.reverbRange, jsonObject[\"reverb\"] | 0);\r\n\t\t}\r\n\r\n\t\tif (jsonObject[\"beatsPerBar\"] != undefined) {\r\n\t\t\tthis.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\r\n\t\t}\r\n\r\n\t\tlet importedPartsPerBeat: number = 4;\r\n\t\tif (jsonObject[\"ticksPerBeat\"] != undefined) {\r\n\t\t\timportedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\r\n\t\t\tthis.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\r\n\t\t\tif (this.rhythm == -1) {\r\n\t\t\t\tthis.rhythm = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet maxInstruments: number = 1;\r\n\t\tlet maxPatterns: number = 1;\r\n\t\tlet maxBars: number = 1;\r\n\t\tif (jsonObject[\"channels\"]) {\r\n\t\t\tfor (const channelObject of jsonObject[\"channels\"]) {\r\n\t\t\t\tif (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\r\n\t\t\t\tif (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\r\n\t\t\t\tif (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.instrumentsPerChannel = Math.min(maxInstruments, Config.instrumentsPerChannelMax);\r\n\t\tthis.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\r\n\t\tthis.barCount = Math.min(maxBars, Config.barCountMax);\r\n\r\n\t\tif (jsonObject[\"introBars\"] != undefined) {\r\n\t\t\tthis.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\r\n\t\t}\r\n\t\tif (jsonObject[\"loopBars\"] != undefined) {\r\n\t\t\tthis.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\r\n\t\t}\r\n\r\n\t\tconst newPitchChannels: Channel[] = [];\r\n\t\tconst newNoiseChannels: Channel[] = [];\r\n\t\tconst newModChannels: Channel[] = [];\r\n\t\tif (jsonObject[\"channels\"]) {\r\n\t\t\tfor (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n\t\t\t\tlet channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n\r\n\t\t\t\tconst channel: Channel = new Channel();\r\n\r\n\t\t\t\tlet isNoiseChannel: boolean = false;\r\n\t\t\t\tlet isModChannel: boolean = false;\r\n\t\t\t\tif (channelObject[\"type\"] != undefined) {\r\n\t\t\t\t\tisNoiseChannel = (channelObject[\"type\"] == \"drum\");\r\n\t\t\t\t\tisModChannel = (channelObject[\"type\"] == \"mod\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// for older files, assume drums are channel 3.\r\n\t\t\t\t\tisNoiseChannel = (channelIndex >= 3);\r\n\t\t\t\t}\r\n\t\t\t\tif (isNoiseChannel) {\r\n\t\t\t\t\tnewNoiseChannels.push(channel);\r\n\t\t\t\t} else if (isModChannel) {\r\n\t\t\t\t\tnewModChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewPitchChannels.push(channel);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (channelObject[\"octaveScrollBar\"] != undefined) {\r\n\t\t\t\t\tchannel.octave = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, channelObject[\"octaveScrollBar\"] | 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = channel.instruments.length; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\tchannel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.length = this.instrumentsPerChannel;\r\n\r\n\t\t\t\tfor (let i: number = channel.patterns.length; i < this.patternsPerChannel; i++) {\r\n\t\t\t\t\tchannel.patterns[i] = new Pattern();\r\n\t\t\t\t}\r\n\t\t\t\tchannel.patterns.length = this.patternsPerChannel;\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\tchannel.bars[i] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tchannel.bars.length = this.barCount;\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\tconst instrument: Instrument = channel.instruments[i];\r\n\t\t\t\t\tinstrument.fromJsonObject(channelObject[\"instruments\"][i], isNoiseChannel, isModChannel, this.rhythm == 0 || this.rhythm == 2, this.rhythm >= 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n\t\t\t\t\tconst pattern: Pattern = channel.patterns[i];\r\n\r\n\t\t\t\t\tlet patternObject: any = undefined;\r\n\t\t\t\t\tif (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\r\n\t\t\t\t\tif (patternObject == undefined) continue;\r\n\r\n\t\t\t\t\tpattern.instrument = clamp(0, this.instrumentsPerChannel, (patternObject[\"instrument\"] | 0) - 1);\r\n\r\n\t\t\t\t\tif (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\r\n\t\t\t\t\t\tconst maxNoteCount: number = Math.min(this.beatsPerBar * Config.partsPerBeat, patternObject[\"notes\"].length >>> 0);\r\n\r\n\t\t\t\t\t\t//let tickClock: number = 0;\r\n\t\t\t\t\t\tfor (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\r\n\t\t\t\t\t\t\tif (j >= maxNoteCount) break;\r\n\r\n\t\t\t\t\t\t\tconst noteObject = patternObject[\"notes\"][j];\r\n\t\t\t\t\t\t\tif (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst note: Note = new Note(0, 0, 0, 0);\r\n\t\t\t\t\t\t\tnote.pitches = [];\r\n\t\t\t\t\t\t\tnote.pins = [];\r\n\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\r\n\t\t\t\t\t\t\t\tconst pitch: number = noteObject[\"pitches\"][k] | 0;\r\n\t\t\t\t\t\t\t\tif (note.pitches.indexOf(pitch) != -1) continue;\r\n\t\t\t\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t\t\t\t\tif (note.pitches.length >= Config.maxChordSize) break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (note.pitches.length < 1) continue;\r\n\r\n\t\t\t\t\t\t\t//let noteClock: number = tickClock;\r\n\t\t\t\t\t\t\tlet startInterval: number = 0;\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < noteObject[\"points\"].length; k++) {\r\n\t\t\t\t\t\t\t\tconst pointObject: any = noteObject[\"points\"][k];\r\n\t\t\t\t\t\t\t\tif (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\r\n\t\t\t\t\t\t\t\tconst interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\r\n\r\n\t\t\t\t\t\t\t\tconst time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\r\n\r\n\t\t\t\t\t\t\t\tlet volumeCap: number = this.getVolumeCapForSetting(isModChannel, channel.instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n\r\n\t\t\t\t\t\t\t\t// The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\r\n\t\t\t\t\t\t\t\t// A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\r\n\t\t\t\t\t\t\t\tlet volume: number;\r\n\t\t\t\t\t\t\t\tif (pointObject[\"volume\"] == undefined) {\r\n\t\t\t\t\t\t\t\t\tvolume = volumeCap;\r\n\t\t\t\t\t\t\t\t} else if (pointObject[\"forMod\"] == undefined) {\r\n\t\t\t\t\t\t\t\t\tvolume = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tvolume = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (time > this.beatsPerBar * Config.partsPerBeat) continue;\r\n\t\t\t\t\t\t\t\tif (note.pins.length == 0) {\r\n\t\t\t\t\t\t\t\t\t//if (time < noteClock) continue;\r\n\t\t\t\t\t\t\t\t\tnote.start = time;\r\n\t\t\t\t\t\t\t\t\tstartInterval = interval;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//if (time <= noteClock) continue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//noteClock = time;\r\n\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(interval - startInterval, time - note.start, volume));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (note.pins.length < 2) continue;\r\n\r\n\t\t\t\t\t\t\tnote.end = note.pins[note.pins.length - 1].time + note.start;\r\n\r\n\t\t\t\t\t\t\tconst maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : this.maxPitch;\r\n\t\t\t\t\t\t\tlet lowestPitch: number = maxPitch;\r\n\t\t\t\t\t\t\tlet highestPitch: number = 0;\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pitches.length; k++) {\r\n\t\t\t\t\t\t\t\tnote.pitches[k] += startInterval;\r\n\t\t\t\t\t\t\t\tif (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\r\n\t\t\t\t\t\t\t\t\tnote.pitches.splice(k, 1);\r\n\t\t\t\t\t\t\t\t\tk--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\r\n\t\t\t\t\t\t\t\tif (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (note.pitches.length < 1) continue;\r\n\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pins.length; k++) {\r\n\t\t\t\t\t\t\t\tconst pin: NotePin = note.pins[k];\r\n\t\t\t\t\t\t\t\tif (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\r\n\t\t\t\t\t\t\t\tif (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\r\n\t\t\t\t\t\t\t\tif (k >= 2) {\r\n\t\t\t\t\t\t\t\t\tif (pin.interval == note.pins[k - 1].interval &&\r\n\t\t\t\t\t\t\t\t\t\tpin.interval == note.pins[k - 2].interval &&\r\n\t\t\t\t\t\t\t\t\t\tpin.volume == note.pins[k - 1].volume &&\r\n\t\t\t\t\t\t\t\t\t\tpin.volume == note.pins[k - 2].volume) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pins.splice(k - 1, 1);\r\n\t\t\t\t\t\t\t\t\t\tk--;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t//tickClock = note.end;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\tchannel.bars[i] = channelObject[\"sequence\"] ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\r\n\t\tif (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\r\n\t\tif (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\r\n\t\tthis.pitchChannelCount = newPitchChannels.length;\r\n\t\tthis.noiseChannelCount = newNoiseChannels.length;\r\n\t\tthis.modChannelCount = newModChannels.length;\r\n\t\tthis.channels.length = 0;\r\n\t\tArray.prototype.push.apply(this.channels, newPitchChannels);\r\n\t\tArray.prototype.push.apply(this.channels, newNoiseChannels);\r\n\t\tArray.prototype.push.apply(this.channels, newModChannels);\r\n\t}\r\n\r\n\tpublic getPattern(channel: number, bar: number): Pattern | null {\r\n\t\tif (bar < 0 || bar >= this.barCount) return null;\r\n\t\tconst patternIndex: number = this.channels[channel].bars[bar];\r\n\t\tif (patternIndex == 0) return null;\r\n\t\treturn this.channels[channel].patterns[patternIndex - 1];\r\n\t}\r\n\r\n\tpublic getPatternInstrument(channel: number, bar: number): number {\r\n\t\tconst pattern: Pattern | null = this.getPattern(channel, bar);\r\n\t\treturn pattern == null ? 0 : pattern.instrument;\r\n\t}\r\n\r\n\tpublic getBeatsPerMinute(): number {\r\n\t\treturn this.tempo;\r\n\t}\r\n\r\n}\r\n\r\nclass Tone {\r\n\tpublic instrument: Instrument;\r\n\tpublic readonly pitches: number[] = [0, 0, 0, 0];\r\n\tpublic pitchCount: number = 0;\r\n\tpublic chordSize: number = 0;\r\n\tpublic drumsetPitch: number = 0;\r\n\tpublic note: Note | null = null;\r\n\tpublic prevNote: Note | null = null;\r\n\tpublic nextNote: Note | null = null;\r\n\tpublic prevNotePitchIndex: number = 0;\r\n\tpublic nextNotePitchIndex: number = 0;\r\n\tpublic active: boolean = false;\r\n\tpublic noteStart: number = 0;\r\n\tpublic noteEnd: number = 0;\r\n\tpublic noteLengthTicks: number = 0;\r\n\tpublic ticksSinceReleased: number = 0;\r\n\tpublic liveInputSamplesHeld: number = 0;\r\n\tpublic lastInterval: number = 0;\r\n\tpublic lastVolume: number = 0;\r\n\tpublic stereoVolume1: number = 0.0;\r\n\tpublic stereoVolume2: number = 0.0;\r\n\tpublic stereoOffset: number = 0.0;\r\n\tpublic stereoDelay: number = 0.0;\r\n\tpublic sample: number = 0.0;\r\n\tpublic readonly phases: number[] = [];\r\n\tpublic readonly phaseDeltas: number[] = [];\r\n\tpublic readonly volumeStarts: number[] = [];\r\n\tpublic readonly volumeDeltas: number[] = [];\r\n\tpublic volumeStart: number = 0.0;\r\n\tpublic volumeDelta: number = 0.0;\r\n\tpublic phaseDeltaScale: number = 0.0;\r\n\tpublic pulseWidth: number = 0.0;\r\n\tpublic pulseWidthDelta: number = 0.0;\r\n\tpublic filter: number = 0.0;\r\n\tpublic filterScale: number = 0.0;\r\n\tpublic filterSample0: number = 0.0;\r\n\tpublic filterSample1: number = 0.0;\r\n\tpublic vibratoScale: number = 0.0;\r\n\tpublic intervalMult: number = 0.0;\r\n\tpublic intervalVolumeMult: number = 1.0;\r\n\tpublic feedbackOutputs: number[] = [];\r\n\tpublic feedbackMult: number = 0.0;\r\n\tpublic feedbackDelta: number = 0.0;\r\n\tpublic stereoVolumeLStart: number = 0.0;\r\n\tpublic stereoVolumeRStart: number = 0.0;\r\n\tpublic stereoVolumeLDelta: number = 0.0;\r\n\tpublic stereoVolumeRDelta: number = 0.0;\r\n\tpublic stereoDelayStart: number = 0.0;\r\n\tpublic stereoDelayEnd: number = 0.0;\r\n\tpublic stereoDelayDelta: number = 0.0;\r\n\tpublic customVolumeStart: number = 0.0;\r\n\tpublic customVolumeEnd: number = 0.0;\r\n\tpublic filterResonanceStart: number = 0.0;\r\n\tpublic filterResonanceDelta: number = 0.0;\r\n\tpublic isFirstOrder: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tpublic reset(): void {\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis.phases[i] = 0.0;\r\n\t\t\tthis.feedbackOutputs[i] = 0.0;\r\n\t\t}\r\n\t\tthis.sample = 0.0;\r\n\t\tthis.filterSample0 = 0.0;\r\n\t\tthis.filterSample1 = 0.0;\r\n\t\tthis.liveInputSamplesHeld = 0.0;\r\n\t}\r\n\r\n}\r\n\r\nexport class Synth {\r\n\r\n\tpublic warmUpSynthesizer(song: Song | null): void {\r\n\t\t// Don't bother to generate the drum waves unless the song actually\r\n\t\t// uses them, since they may require a lot of computation.\r\n\t\tif (song != null) {\r\n\t\t\tfor (let channel: number = 0; channel < song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrument: number = 0; instrument < song.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\tSynth.getInstrumentSynthFunction(song.channels[channel].instruments[instrument]);\r\n\t\t\t\t\tsong.channels[channel].instruments[instrument].warmUp();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic computeLatestModValues(): void {\r\n\r\n\t\tif (this.song != null && this.song.modChannelCount > 0) {\r\n\r\n\t\t\t// Clear all mod values, and set up temp variables for the time a mod would be set at.\r\n\t\t\tlet latestModTimes: (number | null)[] = [];\r\n\t\t\tlet latestModInsTimes: (number | null)[][][] = [];\r\n\t\t\tthis.modValues = [];\r\n\t\t\tthis.nextModValues = [];\r\n\t\t\tthis.modInsValues = [];\r\n\t\t\tthis.nextModInsValues = [];\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\tlatestModInsTimes[channel] = [];\r\n\t\t\t\tthis.modInsValues[channel] = [];\r\n\t\t\t\tthis.nextModInsValues[channel] = [];\r\n\t\t\t\tfor (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\tthis.modInsValues[channel][instrument] = [];\r\n\t\t\t\t\tthis.nextModInsValues[channel][instrument] = [];\r\n\t\t\t\t\tlatestModInsTimes[channel][instrument] = [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Find out where we're at in the fraction of the current bar.\r\n\t\t\tlet currentPart: number = this.beat * Config.partsPerBeat + this.part;\r\n\r\n\t\t\t// For mod channels, calculate last set value for each mod\r\n\t\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\t\tif (!(this.song.channels[channel].muted)) {\r\n\r\n\t\t\t\t\tlet pattern: Pattern | null;\r\n\r\n\t\t\t\t\tfor (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\r\n\t\t\t\t\t\tpattern = this.song.getPattern(channel, currentBar);\r\n\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tlet instrumentIdx: number = this.song.getPatternInstrument(channel, currentBar);\r\n\t\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\t\tlet latestPinParts: number[] = [];\r\n\t\t\t\t\t\t\tlet latestPinValues: number[] = [];\r\n\r\n\t\t\t\t\t\t\tlet partsInBar: number = (currentBar == this.bar)\r\n\t\t\t\t\t\t\t\t? currentPart\r\n\t\t\t\t\t\t\t\t: this.findPartsInBar(currentBar);\r\n\r\n\t\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\t\tif (note.start < partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\r\n\t\t\t\t\t\t\t\t\tif (note.end <= partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\tlatestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\r\n\t\t\t\t\t\t\t\t\t\tlatestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].volume;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tlatestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\r\n\t\t\t\t\t\t\t\t\t\t// Find the pin where bar change happens, and compute where pin volume would be at that time\r\n\t\t\t\t\t\t\t\t\t\tfor (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx].time + note.start > partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tlatestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n\t\t\t\t\t\t\t\t\t\t\t\tpinIdx = note.pins.length;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Set modulator value, if it wasn't set in another pattern already scanned\r\n\t\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\t\tif (latestPinParts[mod] != null) {\r\n\t\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\t\t\t\tif (latestModTimes[instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modSettings[mod]] as number)) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n\t\t\t\t\t\t\t\t\t\t\tlatestModTimes[instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] as number)) {\r\n\t\t\t\t\t\t\t\t\t\tthis.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n\t\t\t\t\t\t\t\t\t\tlatestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static operatorAmplitudeCurve(amplitude: number): number {\r\n\t\treturn (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\r\n\t}\r\n\r\n\tpublic samplesPerSecond: number = 44100;\r\n\r\n\tpublic song: Song | null = null;\r\n\tpublic liveInputDuration: number = 0;\r\n\tpublic liveInputStarted: boolean = false;\r\n\tpublic liveInputPitches: number[] = [];\r\n\tpublic liveInputChannel: number = 0;\r\n\tpublic loopRepeatCount: number = -1;\r\n\tpublic volume: number = 1.0;\r\n\r\n\tprivate wantToSkip: boolean = false;\r\n\tprivate playheadInternal: number = 0.0;\r\n\tprivate bar: number = 0;\r\n\tprivate beat: number = 0;\r\n\tprivate part: number = 0;\r\n\tprivate tick: number = 0;\r\n\tprivate tickSampleCountdown: number = 0;\r\n\tprivate modValues: (number | null)[];\r\n\tprivate modInsValues: (number | null)[][][];\r\n\tprivate nextModValues: (number | null)[];\r\n\tprivate nextModInsValues: (number | null)[][][];\r\n\tprivate isPlayingSong: boolean = false;\r\n\tprivate liveInputEndTime: number = 0.0;\r\n\tprivate readonly tonePool: Deque<Tone> = new Deque<Tone>();\r\n\tprivate readonly activeTones: Array<Deque<Tone>> = [];\r\n\tprivate tyingOver: number[] = [];\r\n\tprivate readonly activeModTones: Array<Array<Deque<Tone>>> = [];\r\n\t//private readonly releasedModTones: Array<Array<Deque<Tone>>> = [];\r\n\tprivate readonly releasedTones: Array<Deque<Tone>> = [];\r\n\tprivate readonly liveInputTones: Deque<Tone> = new Deque<Tone>();\r\n\r\n\t//private highpassInput: number = 0.0;\r\n\t//private highpassOutput: number = 0.0;\r\n\tprivate limit: number = 0.0;\r\n\r\n\tprivate stereoBufferIndex: number = 0;\r\n\tprivate samplesForNone: Float32Array | null = null;\r\n\tprivate samplesForReverb: Float32Array | null = null;\r\n\tprivate samplesForChorus: Float32Array | null = null;\r\n\tprivate samplesForChorusReverb: Float32Array | null = null;\r\n\r\n\tprivate chorusDelayLine: Float32Array = new Float32Array(2048);\r\n\tprivate chorusDelayPos: number = 0;\r\n\tprivate chorusPhase: number = 0;\r\n\r\n\tprivate reverbDelayLine: Float32Array = new Float32Array(16384);\r\n\tprivate reverbDelayPos: number = 0;\r\n\tprivate reverbFeedback0: number = 0.0;\r\n\tprivate reverbFeedback1: number = 0.0;\r\n\tprivate reverbFeedback2: number = 0.0;\r\n\tprivate reverbFeedback3: number = 0.0;\r\n\r\n\tprivate audioCtx: any | null = null;\r\n\tprivate scriptNode: any | null = null;\r\n\r\n\tpublic get playing(): boolean {\r\n\t\treturn this.isPlayingSong;\r\n\t}\r\n\r\n\tpublic get playhead(): number {\r\n\t\treturn this.playheadInternal;\r\n\t}\r\n\r\n\tpublic set playhead(value: number) {\r\n\t\tif (this.song != null) {\r\n\t\t\tthis.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\r\n\t\t\tlet remainder: number = this.playheadInternal;\r\n\t\t\tthis.bar = Math.floor(remainder);\r\n\t\t\tremainder = this.song.beatsPerBar * (remainder - this.bar);\r\n\t\t\tthis.beat = Math.floor(remainder);\r\n\t\t\tremainder = Config.partsPerBeat * (remainder - this.beat);\r\n\t\t\tthis.part = Math.floor(remainder);\r\n\t\t\tremainder = Config.ticksPerPart * (remainder - this.part);\r\n\t\t\tthis.tick = Math.floor(remainder);\r\n\t\t\tconst samplesPerTick: number = this.getSamplesPerTick();\r\n\t\t\tremainder = samplesPerTick * (remainder - this.tick);\r\n\t\t\tthis.tickSampleCountdown = samplesPerTick - remainder;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getSamplesPerBar(): number {\r\n\t\tif (this.song == null) throw new Error();\r\n\t\treturn this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\r\n\t}\r\n\r\n\t// Calculate the total number of parts that will be played in the current bar before any next bar mods trigger.\r\n\tprivate findPartsInBar(bar: number): number {\r\n\t\tif (this.song == null) return 0;\r\n\t\tlet partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\tlet pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n\t\t\tif (pattern != null) {\r\n\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tif (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\tif (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n\t\t\t\t\t\t\t\t// Find the earliest next bar note.\r\n\t\t\t\t\t\t\t\tif (partsInBar > note.start)\r\n\t\t\t\t\t\t\t\t\tpartsInBar = note.start;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn partsInBar;\r\n\t}\r\n\r\n\t// Returns the total samples in the song\r\n\tpublic getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\r\n\t\tif (this.song == null)\r\n\t\t\treturn -1;\r\n\r\n\t\t// Compute the window to be checked (start bar to end bar)\r\n\t\tlet startBar: number = enableIntro ? 0 : this.song.loopStart;\r\n\t\tlet endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\r\n\t\tlet hasTempoMods: boolean = false;\r\n\t\tlet hasNextBarMods: boolean = false;\r\n\t\tlet prevTempo: number = this.song.tempo;\r\n\r\n\t\t// Determine if any tempo or next bar mods happen anywhere in the window\r\n\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\tlet pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\tif (instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\thasTempoMods = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\thasNextBarMods = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\r\n\t\tif (startBar > 0) {\r\n\t\t\tlet latestTempoPin: number | null = null;\r\n\t\t\tlet latestTempoValue: number = 0;\r\n\r\n\t\t\tfor (let bar: number = startBar - 1; bar >= 0; bar--) {\r\n\t\t\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\t\t\tlet pattern = this.song.getPattern(channel, bar);\r\n\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tlet instrumentIdx: number = this.song.getPatternInstrument(channel, bar);\r\n\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\r\n\t\t\t\t\t\tlet partsInBar: number = this.findPartsInBar(bar);\r\n\r\n\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\tif (instrument.modSettings[Config.modCount - 1 - note.pitches[0]] == ModSetting.mstTempo && instrument.modStatuses[Config.modCount - 1 - note.pitches[0]] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\t\tif (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\r\n\t\t\t\t\t\t\t\t\tif (note.end <= partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\tlatestTempoPin = note.end;\r\n\t\t\t\t\t\t\t\t\t\tlatestTempoValue = note.pins[note.pins.length - 1].volume;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tlatestTempoPin = partsInBar;\r\n\t\t\t\t\t\t\t\t\t\t// Find the pin where bar change happens, and compute where pin volume would be at that time\r\n\t\t\t\t\t\t\t\t\t\tfor (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx].time + note.start > partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tlatestTempoValue = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n\t\t\t\t\t\t\t\t\t\t\t\tpinIdx = note.pins.length;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Done once you process a pattern where tempo mods happened, since the search happens backward\r\n\t\t\t\tif (latestTempoPin != null) {\r\n\t\t\t\t\tprevTempo = this.song.modValueToReal(latestTempoValue, ModSetting.mstTempo);\r\n\t\t\t\t\tbar = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (hasTempoMods || hasNextBarMods) {\r\n\t\t\t// Run from start bar to end bar and observe looping, computing average tempo across each bar\r\n\t\t\tlet bar: number = startBar;\r\n\t\t\tlet ended: boolean = false;\r\n\t\t\tlet totalSamples: number = 0;\r\n\r\n\t\t\twhile (!ended) {\r\n\t\t\t\t// Compute the subsection of the pattern that will play\r\n\t\t\t\tlet partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n\t\t\t\tlet currentPart: number = 0;\r\n\r\n\t\t\t\tif (hasNextBarMods) {\r\n\t\t\t\t\tpartsInBar = this.findPartsInBar(bar);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Compute average tempo in this tick window, or use last tempo if nothing happened\r\n\t\t\t\tif (hasTempoMods) {\r\n\t\t\t\t\tlet foundMod: boolean = false;\r\n\t\t\t\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tif (foundMod == false) {\r\n\t\t\t\t\t\t\tlet pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n\t\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n\t\t\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\t\t\tif (foundMod == false && instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong\r\n\t\t\t\t\t\t\t\t\t\t&& pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\r\n\t\t\t\t\t\t\t\t\t\t// Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\r\n\t\t\t\t\t\t\t\t\t\tfoundMod = true;\r\n\t\t\t\t\t\t\t\t\t\t// Need to re-sort the notes by start time to make the next part much less painful.\r\n\t\t\t\t\t\t\t\t\t\tpattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t\t\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Compute samples up to this note\r\n\t\t\t\t\t\t\t\t\t\t\t\ttotalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (note.start < partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Compute samples up to this pin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst prevPinTempo: number = this.song.modValueToReal(note.pins[pinIdx - 1].volume, ModSetting.mstTempo);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet currPinTempo: number = this.song.modValueToReal(note.pins[pinIdx].volume, ModSetting.mstTempo);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx].time + note.start > partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrPinTempo = this.song.modValueToReal(note.pins[pinIdx - 1].volume + (note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time), ModSetting.mstTempo);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (currPinTempo != prevPinTempo) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The starting formula is\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Substituting BPM for a step variable that moves with respect to the current tick, we get\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// No tempo change between the two pins.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprevTempo = currPinTempo;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Compute samples for the rest of the bar\r\n\t\t\t\ttotalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n\t\t\t\tbar++;\r\n\t\t\t\tif (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\t\t\tbar = this.song.loopStart;\r\n\t\t\t\t\tif (loop > 0) loop--;\r\n\t\t\t\t}\r\n\t\t\t\tif (bar >= endBar) {\r\n\t\t\t\t\tended = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn Math.ceil(totalSamples);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// No tempo or next bar mods... phew! Just calculate normally.\r\n\t\t\treturn this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\r\n\t\tif (this.song == null) throw new Error();\r\n\t\tlet bars: number = this.song.loopLength * (useLoopCount + 1);\r\n\t\tif (enableIntro) bars += this.song.loopStart;\r\n\t\tif (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\r\n\t\treturn bars;\r\n\t}\r\n\r\n\tconstructor(song: Song | string | null = null) {\r\n\t\tif (song != null) this.setSong(song);\r\n\t}\r\n\r\n\tpublic setSong(song: Song | string): void {\r\n\t\tif (typeof (song) == \"string\") {\r\n\t\t\tthis.song = new Song(song);\r\n\t\t} else if (song instanceof Song) {\r\n\t\t\tthis.song = song;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setModValue(volumeStart: number, volumeEnd: number, mod: number, instrument: Instrument, setting: ModSetting): number {\r\n\t\tlet val: number;\r\n\t\tlet nextVal: number;\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\tval = (this.song as Song).modValueToReal(volumeStart, setting);\r\n\t\t\t\tnextVal = (this.song as Song).modValueToReal(volumeEnd, setting);\r\n\t\t\t\tif (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\r\n\t\t\t\t\tthis.modValues[setting] = val;\r\n\t\t\t\t\tthis.nextModValues[setting] = nextVal;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\tval = this.song!.modValueToReal(volumeStart, setting);\r\n\t\t\t\tnextVal = this.song!.modValueToReal(volumeEnd, setting);\r\n\t\t\t\tlet channelAdjust: number = instrument.modChannels[mod] + ((instrument.modStatuses[mod] == ModStatus.msForNoise) ? this.song!.pitchChannelCount : 0);\r\n\r\n\t\t\t\tif (this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] == null\r\n\t\t\t\t\t|| this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != val\r\n\t\t\t\t\t|| this.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != nextVal) {\r\n\t\t\t\t\tthis.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = val;\r\n\t\t\t\t\tthis.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = nextVal;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\tval = (this.song as Song).modValueToReal(volumeStart, setting);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstNone:\r\n\t\t\tdefault:\r\n\t\t\t\tval = -1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn val;\r\n\t}\r\n\r\n\tpublic getModValue(setting: ModSetting, forSong: boolean, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\r\n\t\tif (forSong) {\r\n\t\t\tif (this.modValues[setting] != null && this.nextModValues[setting] != null) {\r\n\t\t\t\treturn nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\r\n\t\t\t}\r\n\t\t} else if (channel != undefined && instrument != undefined) {\r\n\t\t\tif (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n\t\t\t\treturn nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t// Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\r\n\tpublic isAnyModActive(channel: number, instrument: number): boolean {\r\n\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\tif ((this.modValues != undefined && this.modValues[setting] != null)\r\n\t\t\t\t|| (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic unsetMod(setting: ModSetting, channel?: number, instrument?: number) {\r\n\t\tif (this.isModActive(setting, true) || (channel != undefined && instrument != undefined && this.isModActive(setting, false, channel, instrument))) {\r\n\t\t\tthis.modValues[setting] = null;\r\n\t\t\tthis.nextModValues[setting] = null;\r\n\t\t\tif (channel != undefined && instrument != undefined) {\r\n\t\t\t\tthis.modInsValues[channel][instrument][setting] = null;\r\n\t\t\t\tthis.nextModInsValues[channel][instrument][setting] = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic isModActive(setting: ModSetting, forSong: boolean, channel?: number, instrument?: number): boolean {\r\n\t\tif (forSong) {\r\n\t\t\treturn (this.modValues != undefined && this.modValues[setting] != null);\r\n\t\t} else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null && this.modInsValues[channel][instrument][setting] != null) {\r\n\t\t\treturn (this.modInsValues[channel][instrument][setting] != null);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate activateAudio(): void {\r\n\t\tif (this.audioCtx == null || this.scriptNode == null) {\r\n\t\t\tthis.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)();\r\n\t\t\tthis.samplesPerSecond = this.audioCtx.sampleRate;\r\n\t\t\tthis.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(2048, 0, 2) : this.audioCtx.createJavaScriptNode(2048, 0, 2); // 2048, 0 input channels, 2 output channels\r\n\t\t\tthis.scriptNode.onaudioprocess = this.audioProcessCallback;\r\n\t\t\tthis.scriptNode.channelCountMode = 'explicit';\r\n\t\t\tthis.scriptNode.channelInterpretation = 'speakers';\r\n\t\t\tthis.scriptNode.connect(this.audioCtx.destination);\r\n\t\t}\r\n\t\tthis.audioCtx.resume();\r\n\t}\r\n\r\n\tprivate deactivateAudio(): void {\r\n\t\tif (this.audioCtx != null && this.scriptNode != null) {\r\n\t\t\tthis.scriptNode.disconnect(this.audioCtx.destination);\r\n\t\t\tthis.scriptNode = null;\r\n\t\t\tif (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\r\n\t\t\tthis.audioCtx = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic maintainLiveInput(): void {\r\n\t\tthis.activateAudio();\r\n\t\tthis.liveInputEndTime = performance.now() + 10000.0;\r\n\t}\r\n\r\n\tpublic play(): void {\r\n\t\tif (this.isPlayingSong) return;\r\n\t\tthis.isPlayingSong = true;\r\n\t\tthis.warmUpSynthesizer(this.song);\r\n\t\tthis.computeLatestModValues();\r\n\t\tthis.activateAudio();\r\n\t}\r\n\r\n\tpublic pause(): void {\r\n\t\tif (!this.isPlayingSong) return;\r\n\t\tthis.isPlayingSong = false;\r\n\t\tif (this.song != null) {\r\n\t\t\tthis.song.inVolumeCap = 0.0;\r\n\t\t\tthis.song.outVolumeCap = 0.0;\r\n\t\t}\r\n\t\tthis.modValues = [];\r\n\t\tthis.modInsValues = [];\r\n\t\tthis.nextModValues = [];\r\n\t\tthis.nextModInsValues = [];\r\n\t\tthis.tyingOver = [];\r\n\t}\r\n\r\n\tpublic snapToStart(): void {\r\n\t\tthis.bar = 0;\r\n\t\tthis.snapToBar();\r\n\t}\r\n\r\n\tpublic goToBar(bar: number): void {\r\n\t\tthis.bar = bar;\r\n\t\tthis.playheadInternal = this.bar;\r\n\t}\r\n\r\n\tpublic snapToBar(): void {\r\n\t\tthis.playheadInternal = this.bar;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\t\tthis.tick = 0;\r\n\t\tthis.tickSampleCountdown = 0;\r\n\t}\r\n\r\n\tpublic resetEffects(): void {\r\n\t\tthis.reverbDelayPos = 0;\r\n\t\tthis.reverbFeedback0 = 0.0;\r\n\t\tthis.reverbFeedback1 = 0.0;\r\n\t\tthis.reverbFeedback2 = 0.0;\r\n\t\tthis.reverbFeedback3 = 0.0;\r\n\t\t//this.highpassInput = 0.0;\r\n\t\t//this.highpassOutput = 0.0;\r\n\t\tthis.freeAllTones();\r\n\t\tfor (let i: number = 0; i < this.reverbDelayLine.length; i++) this.reverbDelayLine[i] = 0.0;\r\n\t\tfor (let i: number = 0; i < this.chorusDelayLine.length; i++) this.chorusDelayLine[i] = 0.0;\r\n\t\tif (this.samplesForNone != null) for (let i: number = 0; i < this.samplesForNone.length; i++) this.samplesForNone[i] = 0.0;\r\n\t\tif (this.samplesForReverb != null) for (let i: number = 0; i < this.samplesForReverb.length; i++) this.samplesForReverb[i] = 0.0;\r\n\t\tif (this.samplesForChorus != null) for (let i: number = 0; i < this.samplesForChorus.length; i++) this.samplesForChorus[i] = 0.0;\r\n\t\tif (this.samplesForChorusReverb != null) for (let i: number = 0; i < this.samplesForChorusReverb.length; i++) this.samplesForChorusReverb[i] = 0.0;\r\n\t}\r\n\r\n\tpublic jumpIntoLoop(): void {\r\n\t\tif (!this.song) return;\r\n\t\tif (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\r\n\t\t\tconst oldBar: number = this.bar;\r\n\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\tthis.playheadInternal += this.bar - oldBar;\r\n\r\n\t\t\tif (this.playing)\r\n\t\t\t\tthis.computeLatestModValues();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic nextBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tconst oldBar: number = this.bar;\r\n\t\tthis.bar++;\r\n\t\tif (this.bar >= this.song.barCount) {\r\n\t\t\tthis.bar = 0;\r\n\t\t}\r\n\t\tthis.playheadInternal += this.bar - oldBar;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tpublic skipBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tconst samplesPerTick: number = this.getSamplesPerTick();\r\n\t\tthis.bar++;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\t\tthis.tick = 0;\r\n\t\tthis.tickSampleCountdown = samplesPerTick;\r\n\r\n\t\tif (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\tif (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic firstBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tthis.bar = 0;\r\n\t\tthis.playheadInternal = 0;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tpublic jumpToEditingBar(bar: number): void {\r\n\t\tif (!this.song) return;\r\n\r\n\t\tthis.bar = bar;\r\n\r\n\t\tthis.playheadInternal = bar;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tpublic prevBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tconst oldBar: number = this.bar;\r\n\t\tthis.bar--;\r\n\t\tif (this.bar < 0 || this.bar >= this.song.barCount) {\r\n\t\t\tthis.bar = this.song.barCount - 1;\r\n\t\t}\r\n\t\tthis.playheadInternal += this.bar - oldBar;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tprivate audioProcessCallback = (audioProcessingEvent: any): void => {\r\n\t\tconst outputBuffer = audioProcessingEvent.outputBuffer;\r\n\t\tconst outputDataL: Float32Array = outputBuffer.getChannelData(0);\r\n\t\tconst outputDataR: Float32Array = outputBuffer.getChannelData(1);\r\n\r\n\t\tconst isPlayingLiveTones = performance.now() < this.liveInputEndTime;\r\n\t\tif (!isPlayingLiveTones && !this.isPlayingSong) {\r\n\t\t\tfor (let i: number = 0; i < outputBuffer.length; i++) {\r\n\t\t\t\toutputDataL[i] = 0.0;\r\n\t\t\t\toutputDataR[i] = 0.0;\r\n\t\t\t}\r\n\t\t\tthis.deactivateAudio();\r\n\t\t} else {\r\n\t\t\tthis.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\r\n\t\tif (this.song == null) {\r\n\t\t\tfor (let i: number = 0; i < outputBufferLength; i++) {\r\n\t\t\t\toutputDataL[i] = 0.0;\r\n\t\t\t\toutputDataR[i] = 0.0;\r\n\t\t\t}\r\n\t\t\tthis.deactivateAudio();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.song.inVolumeCap = 0.0; // Reset volume cap for this run\r\n\t\tthis.song.outVolumeCap = 0.0;\r\n\r\n\t\tconst channelCount: number = this.song.pitchChannelCount + this.song.noiseChannelCount;\r\n\r\n\t\tfor (let i: number = this.activeTones.length; i < channelCount; i++) {\r\n\t\t\tthis.activeTones[i] = new Deque<Tone>();\r\n\t\t\tthis.releasedTones[i] = new Deque<Tone>();\r\n\t\t}\r\n\t\tthis.activeTones.length = channelCount;\r\n\t\tthis.releasedTones.length = channelCount;\r\n\t\tif (channelCount != this.tyingOver.length) {\r\n\t\t\tlet idx: number = this.tyingOver.length;\r\n\t\t\tthis.tyingOver.length = channelCount;\r\n\t\t\twhile (idx < this.tyingOver.length) {\r\n\t\t\t\tthis.tyingOver[idx++] = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = this.activeModTones.length; i < this.song.modChannelCount; i++) {\r\n\t\t\tthis.activeModTones[i] = [];\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tthis.activeModTones[i][mod] = new Deque<Tone>();\r\n\t\t\t}\r\n\t\t\tthis.activeModTones[i].length = Config.modCount;\r\n\t\t}\r\n\t\tthis.activeModTones.length = this.song.modChannelCount;\r\n\r\n\t\tlet samplesPerTick: number = this.getSamplesPerTick();\r\n\t\tlet bufferIndex: number = 0;\r\n\t\tlet ended: boolean = false;\r\n\r\n\t\t// Check the bounds of the playhead:\r\n\t\twhile (this.tickSampleCountdown <= 0) this.tickSampleCountdown += samplesPerTick;\r\n\t\tif (this.tickSampleCountdown > samplesPerTick) this.tickSampleCountdown = samplesPerTick;\r\n\t\tif (playSong) {\r\n\t\t\tif (this.beat >= this.song.beatsPerBar) {\r\n\t\t\t\tthis.bar++;\r\n\t\t\t\tthis.beat = 0;\r\n\t\t\t\tthis.part = 0;\r\n\t\t\t\tthis.tick = 0;\r\n\t\t\t\tthis.tickSampleCountdown = samplesPerTick;\r\n\r\n\t\t\t\tif (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\t\t\tif (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.bar >= this.song.barCount) {\r\n\t\t\t\tthis.bar = 0;\r\n\t\t\t\tif (this.loopRepeatCount != -1) {\r\n\t\t\t\t\tended = true;\r\n\t\t\t\t\tthis.pause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//const synthStartTime: number = performance.now();\r\n\r\n\t\tconst stereoBufferLength: number = outputBufferLength * 4;\r\n\t\tif (this.samplesForNone == null || this.samplesForNone.length != stereoBufferLength ||\r\n\t\t\tthis.samplesForReverb == null || this.samplesForReverb.length != stereoBufferLength ||\r\n\t\t\tthis.samplesForChorus == null || this.samplesForChorus.length != stereoBufferLength ||\r\n\t\t\tthis.samplesForChorusReverb == null || this.samplesForChorusReverb.length != stereoBufferLength) {\r\n\t\t\tthis.samplesForNone = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.samplesForReverb = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.samplesForChorus = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.samplesForChorusReverb = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.stereoBufferIndex = 0;\r\n\t\t}\r\n\t\tlet stereoBufferIndex: number = this.stereoBufferIndex;\r\n\t\tconst samplesForNone: Float32Array = this.samplesForNone;\r\n\t\tconst samplesForReverb: Float32Array = this.samplesForReverb;\r\n\t\tconst samplesForChorus: Float32Array = this.samplesForChorus;\r\n\t\tconst samplesForChorusReverb: Float32Array = this.samplesForChorusReverb;\r\n\r\n\t\t// Post processing parameters:\r\n\t\tconst volume: number = +this.volume;\r\n\t\tconst chorusDelayLine: Float32Array = this.chorusDelayLine;\r\n\t\tconst reverbDelayLine: Float32Array = this.reverbDelayLine;\r\n\t\tconst chorusDuration: number = 2.0;\r\n\t\tconst chorusAngle: number = Math.PI * 2.0 / (chorusDuration * this.samplesPerSecond);\r\n\t\tconst chorusRange: number = 150 * this.samplesPerSecond / 44100;\r\n\t\tconst chorusOffset0: number = 0x800 - 1.51 * chorusRange;\r\n\t\tconst chorusOffset1: number = 0x800 - 2.10 * chorusRange;\r\n\t\tconst chorusOffset2: number = 0x800 - 3.35 * chorusRange;\r\n\t\tconst chorusOffset3: number = 0x800 - 1.47 * chorusRange;\r\n\t\tconst chorusOffset4: number = 0x800 - 2.15 * chorusRange;\r\n\t\tconst chorusOffset5: number = 0x800 - 3.25 * chorusRange;\r\n\t\tlet chorusPhase: number = this.chorusPhase % (Math.PI * 2.0);\r\n\t\tlet chorusDelayPos: number = this.chorusDelayPos & 0x7FF;\r\n\t\tlet reverbDelayPos: number = this.reverbDelayPos & 0x3FFF;\r\n\t\tlet reverbFeedback0: number = +this.reverbFeedback0;\r\n\t\tlet reverbFeedback1: number = +this.reverbFeedback1;\r\n\t\tlet reverbFeedback2: number = +this.reverbFeedback2;\r\n\t\tlet reverbFeedback3: number = +this.reverbFeedback3;\r\n\t\tlet useReverb: number = this.song.reverb;\r\n\t\tif (this.isModActive(ModSetting.mstReverb, true)) {\r\n\t\t\tuseReverb = this.getModValue(ModSetting.mstReverb, true);\r\n\t\t}\r\n\t\tlet reverb: number = Math.pow(useReverb / Config.reverbRange, 0.667) * 0.425;\r\n\t\t//const highpassFilter: number = Math.pow(0.5, 400 / this.samplesPerSecond);\r\n\t\tconst limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond); // Default 4.0\r\n\t\tconst limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond); // Default 4000.0;\r\n\t\tconst compressionThreshold: number = this.song.compressionThreshold; // Default 1\r\n\t\tconst limitThreshold: number = this.song.limitThreshold; // Default 1\r\n\t\tconst compressionRatio: number = this.song.compressionRatio; // Default 1\r\n\t\tconst limitRatio: number = this.song.limitRatio; // Default 1\r\n\t\tconst masterGain: number = this.song.masterGain; // Default 1\r\n\t\t//let highpassInput: number = +this.highpassInput;\r\n\t\t//let highpassOutput: number = +this.highpassOutput;\r\n\t\tlet limit: number = +this.limit;\r\n\r\n\t\twhile (bufferIndex < outputBufferLength && !ended) {\r\n\r\n\t\t\tconst samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\r\n\t\t\tconst runLength: number = Math.min(Math.ceil(this.tickSampleCountdown), samplesLeftInBuffer);\r\n\r\n\t\t\tfor (let modChannel: number = 0, channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; modChannel < this.song.modChannelCount; modChannel++, channel++) {\r\n\t\t\t\t// Also determines mod tones.\r\n\t\t\t\tthis.determineCurrentActiveTones(this.song, channel, playSong);\r\n\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tfor (let i: number = 0; i < this.activeModTones[modChannel][mod].count(); i++) {\r\n\t\t\t\t\t\tconst tone: Tone = this.activeModTones[modChannel][mod].get(i);\r\n\r\n\t\t\t\t\t\tif (this.song.channels[channel].muted == false)\r\n\t\t\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Handle next bar mods if they were set\r\n\t\t\tif (this.wantToSkip) {\r\n\t\t\t\tthis.wantToSkip = false;\r\n\t\t\t\tthis.skipBar();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isModActive(ModSetting.mstReverb, true)) {\r\n\t\t\t\treverb = Math.pow(this.getModValue(ModSetting.mstReverb, true) / Config.reverbRange, 0.667) * 0.425;\r\n\t\t\t}\r\n\r\n\t\t\t// Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\r\n\r\n\t\t\tconst tickSampleCountdown: number = this.tickSampleCountdown;\r\n\t\t\tconst startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n\t\t\tconst endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n\t\t\tconst ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n\t\t\tconst partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n\t\t\tconst partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n\t\t\tconst partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n\t\t\tconst partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < this.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\tlet useVibratoSpeed: number = instrument.vibratoSpeed;\r\n\r\n\t\t\t\t\tinstrument.LFOtime = instrument.nextLFOtime;\r\n\r\n\t\t\t\t\tif (this.isModActive(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx)) {\r\n\t\t\t\t\t\tuseVibratoSpeed = this.getModValue(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx, false);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (useVibratoSpeed == 0) {\r\n\t\t\t\t\t\tinstrument.LFOtime = 0;\r\n\t\t\t\t\t\tinstrument.nextLFOtime = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinstrument.nextLFOtime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\r\n\t\t\t\tif (channel == this.liveInputChannel) {\r\n\t\t\t\t\tthis.determineLiveInputTones(this.song);\r\n\r\n\t\t\t\t\tfor (let i: number = 0; i < this.liveInputTones.count(); i++) {\r\n\t\t\t\t\t\tconst tone: Tone = this.liveInputTones.get(i);\r\n\t\t\t\t\t\t// Hmm. Will allow active input from a muted channel for now.\r\n\t\t\t\t\t\t//if (this.song.channels[channel].muted == false)\r\n\t\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.determineCurrentActiveTones(this.song, channel, playSong);\r\n\t\t\t\tfor (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n\t\t\t\t\tconst tone: Tone = this.activeTones[channel].get(i);\r\n\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n\t\t\t\t\tconst tone: Tone = this.releasedTones[channel].get(i);\r\n\t\t\t\t\tif (tone.ticksSinceReleased >= tone.instrument.getTransition().releaseTicks) {\r\n\t\t\t\t\t\tthis.freeReleasedTone(channel, i);\r\n\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n\r\n\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, true, shouldFadeOutFast);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Post processing:\r\n\t\t\tlet chorusTap0Index: number = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n\t\t\tlet chorusTap1Index: number = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n\t\t\tlet chorusTap2Index: number = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n\t\t\tlet chorusTap3Index: number = chorusDelayPos + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n\t\t\tlet chorusTap4Index: number = chorusDelayPos + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n\t\t\tlet chorusTap5Index: number = chorusDelayPos + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n\t\t\tchorusPhase += chorusAngle * runLength;\r\n\t\t\tconst chorusTap0End: number = chorusDelayPos + runLength + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n\t\t\tconst chorusTap1End: number = chorusDelayPos + runLength + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n\t\t\tconst chorusTap2End: number = chorusDelayPos + runLength + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n\t\t\tconst chorusTap3End: number = chorusDelayPos + runLength + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n\t\t\tconst chorusTap4End: number = chorusDelayPos + runLength + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n\t\t\tconst chorusTap5End: number = chorusDelayPos + runLength + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n\t\t\tconst chorusTap0Delta: number = (chorusTap0End - chorusTap0Index) / runLength;\r\n\t\t\tconst chorusTap1Delta: number = (chorusTap1End - chorusTap1Index) / runLength;\r\n\t\t\tconst chorusTap2Delta: number = (chorusTap2End - chorusTap2Index) / runLength;\r\n\t\t\tconst chorusTap3Delta: number = (chorusTap3End - chorusTap3Index) / runLength;\r\n\t\t\tconst chorusTap4Delta: number = (chorusTap4End - chorusTap4Index) / runLength;\r\n\t\t\tconst chorusTap5Delta: number = (chorusTap5End - chorusTap5Index) / runLength;\r\n\t\t\tconst runEnd: number = bufferIndex + runLength;\r\n\t\t\tfor (let i: number = bufferIndex; i < runEnd; i++) {\r\n\t\t\t\tconst bufferIndexL: number = stereoBufferIndex;\r\n\t\t\t\tconst bufferIndexR: number = stereoBufferIndex + 1;\r\n\t\t\t\tconst sampleForNoneL: number = samplesForNone[bufferIndexL]; samplesForNone[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForNoneR: number = samplesForNone[bufferIndexR]; samplesForNone[bufferIndexR] = 0.0;\r\n\t\t\t\tconst sampleForReverbL: number = samplesForReverb[bufferIndexL]; samplesForReverb[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForReverbR: number = samplesForReverb[bufferIndexR]; samplesForReverb[bufferIndexR] = 0.0;\r\n\t\t\t\tconst sampleForChorusL: number = samplesForChorus[bufferIndexL]; samplesForChorus[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForChorusR: number = samplesForChorus[bufferIndexR]; samplesForChorus[bufferIndexR] = 0.0;\r\n\t\t\t\tconst sampleForChorusReverbL: number = samplesForChorusReverb[bufferIndexL]; samplesForChorusReverb[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForChorusReverbR: number = samplesForChorusReverb[bufferIndexR]; samplesForChorusReverb[bufferIndexR] = 0.0;\r\n\t\t\t\tstereoBufferIndex += 2;\r\n\r\n\t\t\t\tconst combinedChorusL: number = sampleForChorusL + sampleForChorusReverbL;\r\n\t\t\t\tconst combinedChorusR: number = sampleForChorusR + sampleForChorusReverbR;\r\n\r\n\t\t\t\tconst chorusTap0Ratio: number = chorusTap0Index % 1;\r\n\t\t\t\tconst chorusTap1Ratio: number = chorusTap1Index % 1;\r\n\t\t\t\tconst chorusTap2Ratio: number = chorusTap2Index % 1;\r\n\t\t\t\tconst chorusTap3Ratio: number = chorusTap3Index % 1;\r\n\t\t\t\tconst chorusTap4Ratio: number = chorusTap4Index % 1;\r\n\t\t\t\tconst chorusTap5Ratio: number = chorusTap5Index % 1;\r\n\t\t\t\tconst chorusTap0A: number = chorusDelayLine[(chorusTap0Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap0B: number = chorusDelayLine[(chorusTap0Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap1A: number = chorusDelayLine[(chorusTap1Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap1B: number = chorusDelayLine[(chorusTap1Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap2A: number = chorusDelayLine[(chorusTap2Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap2B: number = chorusDelayLine[(chorusTap2Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap3A: number = chorusDelayLine[(chorusTap3Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap3B: number = chorusDelayLine[(chorusTap3Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap4A: number = chorusDelayLine[(chorusTap4Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap4B: number = chorusDelayLine[(chorusTap4Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap5A: number = chorusDelayLine[(chorusTap5Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap5B: number = chorusDelayLine[(chorusTap5Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap0: number = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\r\n\t\t\t\tconst chorusTap1: number = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\r\n\t\t\t\tconst chorusTap2: number = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\r\n\t\t\t\tconst chorusTap3: number = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\r\n\t\t\t\tconst chorusTap4: number = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\r\n\t\t\t\tconst chorusTap5: number = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\r\n\t\t\t\tconst chorusSampleL = 0.5 * (combinedChorusL - chorusTap0 + chorusTap1 - chorusTap2);\r\n\t\t\t\tconst chorusSampleR = 0.5 * (combinedChorusR - chorusTap3 + chorusTap4 - chorusTap5);\r\n\t\t\t\tchorusDelayLine[chorusDelayPos] = combinedChorusL;\r\n\t\t\t\tchorusDelayLine[(chorusDelayPos + 0x400) & 0x7FF] = combinedChorusR;\r\n\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & 0x7FF;\r\n\t\t\t\tchorusTap0Index += chorusTap0Delta;\r\n\t\t\t\tchorusTap1Index += chorusTap1Delta;\r\n\t\t\t\tchorusTap2Index += chorusTap2Delta;\r\n\t\t\t\tchorusTap3Index += chorusTap3Delta;\r\n\t\t\t\tchorusTap4Index += chorusTap4Delta;\r\n\t\t\t\tchorusTap5Index += chorusTap5Delta;\r\n\r\n\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\r\n\t\t\t\t// good ratios:\t\t0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\r\n\t\t\t\t// Delay lengths:\t3041\t + 3385\t\t+ 4481\t+  5477 = 16384 = 2^14\r\n\t\t\t\t// Buffer offsets:\t3041\t-> 6426\t   -> 10907 -> 16384\r\n\t\t\t\tconst reverbDelayPos1: number = (reverbDelayPos + 3041) & 0x3FFF;\r\n\t\t\t\tconst reverbDelayPos2: number = (reverbDelayPos + 6426) & 0x3FFF;\r\n\t\t\t\tconst reverbDelayPos3: number = (reverbDelayPos + 10907) & 0x3FFF;\r\n\t\t\t\tconst reverbSample0: number = (reverbDelayLine[reverbDelayPos]);\r\n\t\t\t\tconst reverbSample1: number = reverbDelayLine[reverbDelayPos1];\r\n\t\t\t\tconst reverbSample2: number = reverbDelayLine[reverbDelayPos2];\r\n\t\t\t\tconst reverbSample3: number = reverbDelayLine[reverbDelayPos3];\r\n\t\t\t\tconst reverbTemp0: number = -(reverbSample0 + sampleForChorusReverbL + sampleForReverbL) + reverbSample1;\r\n\t\t\t\tconst reverbTemp1: number = -(reverbSample0 + sampleForChorusReverbR + sampleForReverbR) - reverbSample1;\r\n\t\t\t\tconst reverbTemp2: number = -reverbSample2 + reverbSample3;\r\n\t\t\t\tconst reverbTemp3: number = -reverbSample2 - reverbSample3;\r\n\t\t\t\treverbFeedback0 += ((reverbTemp0 + reverbTemp2) * reverb - reverbFeedback0) * 0.5;\r\n\t\t\t\treverbFeedback1 += ((reverbTemp1 + reverbTemp3) * reverb - reverbFeedback1) * 0.5;\r\n\t\t\t\treverbFeedback2 += ((reverbTemp0 - reverbTemp2) * reverb - reverbFeedback2) * 0.5;\r\n\t\t\t\treverbFeedback3 += ((reverbTemp1 - reverbTemp3) * reverb - reverbFeedback3) * 0.5;\r\n\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbFeedback0;\r\n\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbFeedback1;\r\n\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbFeedback2;\r\n\t\t\t\treverbDelayLine[reverbDelayPos] = reverbFeedback3;\r\n\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & 0x3FFF;\r\n\r\n\t\t\t\t// Apply master pre-gain to the sound, before limiting. Master gain slider is 0-5, but it's squared for more range (0-25).\r\n\t\t\t\tconst sampleL = masterGain * masterGain * (sampleForNoneL + chorusSampleL + sampleForReverbL + reverbSample1 + reverbSample2 + reverbSample3);\r\n\t\t\t\tconst sampleR = masterGain * masterGain * (sampleForNoneR + chorusSampleR + sampleForReverbR + reverbSample0 + reverbSample2 - reverbSample3);\r\n\r\n\t\t\t\t/*\r\n\t\t\t\thighpassOutput = highpassOutput * highpassFilter + sample - highpassInput;\r\n\t\t\t\thighpassInput = sample;\r\n\t\t\t\t// use highpassOutput instead of sample below?\r\n\t\t\t\t*/\r\n\r\n\t\t\t\t// A compressor/limiter.\r\n\t\t\t\tconst absL: number = sampleL < 0.0 ? -sampleL : sampleL;\r\n\t\t\t\tconst absR: number = sampleR < 0.0 ? -sampleR : sampleR;\r\n\t\t\t\tconst abs: number = absL > absR ? absL : absR;\r\n\t\t\t\tthis.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\r\n\t\t\t\t// Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\r\n\t\t\t\tconst limitRange: number = (+(abs > compressionThreshold)) + (+(abs > limitThreshold));\r\n\t\t\t\t// Determine the target amplification based on the range of the curve\r\n\t\t\t\tconst limitTarget: number =\r\n\t\t\t\t\t(+(limitRange == 0)) * (((abs + 1 - compressionThreshold) * 0.8 + 0.25) * compressionRatio + 1.05 * (1 - compressionRatio))\r\n\t\t\t\t\t+ (+(limitRange == 1)) * (1.05)\r\n\t\t\t\t\t+ (+(limitRange == 2)) * (1.05 * ((abs + 1 - limitThreshold) * limitRatio + (1 - limitThreshold)));\r\n\t\t\t\t// Move the limit towards the target\r\n\t\t\t\tlimit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\r\n\t\t\t\tconst limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\r\n\t\t\t\toutputDataL[i] = sampleL * limitedVolume;\r\n\t\t\t\toutputDataR[i] = sampleR * limitedVolume;\r\n\r\n\t\t\t\tthis.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\r\n\t\t\t}\r\n\r\n\t\t\tbufferIndex += runLength;\r\n\r\n\t\t\tthis.tickSampleCountdown -= runLength;\r\n\t\t\tif (this.tickSampleCountdown <= 0) {\r\n\r\n\t\t\t\t// Track how long tones have been released, and free them if there are too many.\r\n\t\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tfor (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n\t\t\t\t\t\tconst tone: Tone = this.releasedTones[channel].get(i);\r\n\t\t\t\t\t\ttone.ticksSinceReleased++;\r\n\r\n\t\t\t\t\t\tconst shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n\t\t\t\t\t\tif (shouldFadeOutFast) {\r\n\t\t\t\t\t\t\tthis.freeReleasedTone(channel, i);\r\n\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update arpeggio time, which is used to calculate arpeggio position\r\n\t\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet useArpeggioSpeed: number = instrument.arpeggioSpeed;\r\n\t\t\t\t\t\tif (this.isModActive(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx)) {\r\n\t\t\t\t\t\t\tuseArpeggioSpeed = this.getModValue(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx, false);\r\n\t\t\t\t\t\t\tif (Number.isInteger(useArpeggioSpeed)) {\r\n\t\t\t\t\t\t\t\tinstrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Linear interpolate arpeggio values\r\n\t\t\t\t\t\t\t\tinstrument.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tinstrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.tick++;\r\n\t\t\t\tthis.tickSampleCountdown += samplesPerTick;\r\n\t\t\t\tif (this.tick == Config.ticksPerPart) {\r\n\t\t\t\t\tthis.tick = 0;\r\n\t\t\t\t\tthis.part++;\r\n\t\t\t\t\tthis.liveInputDuration--;\r\n\t\t\t\t\tvar atEnd = this.part + this.beat * Config.partsPerBeat >= this.findPartsInBar(this.bar) - 1;\r\n\t\t\t\t\t// Check if any active tones should be released.\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\t// Check if we're at the end of the bar and have a tie-over transition. If so, do not free tone\r\n\t\t\t\t\t\tvar carryOver = false;\r\n\t\t\t\t\t\tvar toneCount = this.activeTones[channel].count();\r\n\t\t\t\t\t\tvar pattern = this.song.getPattern(channel, this.bar);\r\n\t\t\t\t\t\tif (pattern != null && atEnd) {\r\n\t\t\t\t\t\t\tvar instrument = pattern.instrument;\r\n\t\t\t\t\t\t\tif (this.song.channels[channel].instruments[instrument].tieNoteTransition && toneCount > 0) {\r\n\t\t\t\t\t\t\t\t// Verify that all tie conditions are met\r\n\t\t\t\t\t\t\t\t// 1. Check for a note in this channel at the start of the next bar\r\n\t\t\t\t\t\t\t\t// 2. Check that the note's volume start matches the current volume\r\n\t\t\t\t\t\t\t\t// 3. Check that the shape (pitches, chord size) is a match\r\n\t\t\t\t\t\t\t\t// 4. Check that the instruments are the same\r\n\t\t\t\t\t\t\t\tvar targetBar = this.bar + 1;\r\n\t\t\t\t\t\t\t\tif (targetBar >= this.song.barCount || (targetBar >= this.song.loopStart + this.song.loopLength && this.loopRepeatCount != 0)) {\r\n\t\t\t\t\t\t\t\t\ttargetBar = this.song.loopStart;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar nextPattern = this.song.getPattern(channel, targetBar);\r\n\t\t\t\t\t\t\t\tvar currNote = this.activeTones[channel].get(0).note;\r\n\t\t\t\t\t\t\t\tif (currNote != null) {\r\n\t\t\t\t\t\t\t\t\tvar pin = 0;\r\n\t\t\t\t\t\t\t\t\twhile (currNote.pins[pin].time + currNote.start < this.part + this.beat * Config.partsPerBeat && pin < currNote.pins.length - 1)\r\n\t\t\t\t\t\t\t\t\t\tpin++;\r\n\t\t\t\t\t\t\t\t\tvar currVolume = currNote.pins[pin].volume;\r\n\t\t\t\t\t\t\t\t\tvar lastInterval = currNote.pins[pin].interval;\r\n\r\n\t\t\t\t\t\t\t\t\tif (nextPattern != null && nextPattern.instrument == instrument) {\r\n\t\t\t\t\t\t\t\t\t\tfor (let i: number = 0; i < nextPattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (nextPattern.notes[i].start == 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t&& nextPattern.notes[i].pins[0].volume == currVolume\r\n\t\t\t\t\t\t\t\t\t\t\t\t&& nextPattern.notes[i].pitches.length == currNote.pitches.length) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tcarryOver = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let j: number = 0; j < currNote.pitches.length; j++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Allow any pitch order\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (nextPattern.notes[i].pitches.findIndex((p) => p == currNote!.pitches[j] + lastInterval) == -1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcarryOver = false;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tj = currNote.pitches.length;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\ti = nextPattern.notes.length;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (carryOver) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Prior to an actual tie, all releasing for hard transitions also needs to be\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// cancelled. So, this check is ran a few parts before the end of a bar too.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// In those cases, just set tyingOver to 0 for that duration to cancel release\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// handling, but not affect note start time calculations.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.part + this.beat * Config.partsPerBeat < this.findPartsInBar(this.bar)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Only does this if it is needed, so if we're long tying (next else-if below) then don't ruin the math.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.tyingOver[channel] < 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Special case: tying over a whole bar, just add the length.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse if (currNote.start == 0 && this.tyingOver[channel] >= 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] += this.part + this.beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Set tyingOver to a number >= 0 representing how many parts back the tie note started.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] = this.part + this.beat * Config.partsPerBeat - currNote.start;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n\t\t\t\t\t\t\tconst tone: Tone = this.activeTones[channel].get(i);\r\n\t\t\t\t\t\t\tconst transition: Transition = tone.instrument.getTransition();\r\n\r\n\t\t\t\t\t\t\tif (tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n\t\t\t\t\t\t\t\t// Free tone if the transition allows\r\n\t\t\t\t\t\t\t\tif (!(transition.isSeamless || tone.instrument.clicklessTransition || this.tyingOver[channel] >= 0)) {\r\n\t\t\t\t\t\t\t\t\tif (transition.releases) {\r\n\t\t\t\t\t\t\t\t\t\tthis.releaseTone(channel, tone);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis.freeTone(tone);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.activeTones[channel].remove(i);\r\n\t\t\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// End of note: if not actively trying to carry over, kill note tie\r\n\t\t\t\t\t\t\t\tif (!carryOver) {\r\n\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.song.modChannelCount; channel++) {\r\n\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < this.activeModTones[channel][mod].count(); i++) {\r\n\t\t\t\t\t\t\t\tconst tone: Tone = this.activeModTones[channel][mod].get(i);\r\n\t\t\t\t\t\t\t\tconst transition: Transition = tone.instrument.getTransition();\r\n\t\t\t\t\t\t\t\tif (!transition.isSeamless && tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n\t\t\t\t\t\t\t\t\tthis.freeTone(tone);\r\n\t\t\t\t\t\t\t\t\tthis.activeModTones[channel][mod].remove(i);\r\n\t\t\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.part == Config.partsPerBeat) {\r\n\t\t\t\t\t\tthis.part = 0;\r\n\r\n\t\t\t\t\t\tif (playSong) {\r\n\t\t\t\t\t\t\tthis.beat++;\r\n\t\t\t\t\t\t\tif (this.beat == this.song.beatsPerBar) {\r\n\t\t\t\t\t\t\t\t// bar changed, reset for next bar:\r\n\t\t\t\t\t\t\t\tthis.beat = 0;\r\n\t\t\t\t\t\t\t\tthis.bar++;\r\n\t\t\t\t\t\t\t\tif (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\t\t\t\t\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\t\t\t\t\t\t\tif (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.bar >= this.song.barCount) {\r\n\t\t\t\t\t\t\t\t\tthis.bar = 0;\r\n\t\t\t\t\t\t\t\t\tif (this.loopRepeatCount != -1) {\r\n\t\t\t\t\t\t\t\t\t\tended = true;\r\n\t\t\t\t\t\t\t\t\t\tthis.resetEffects();\r\n\t\t\t\t\t\t\t\t\t\tthis.pause();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Update mod values so that next values copy to current values\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tif (this.nextModValues != null && this.nextModValues[setting] != null)\r\n\t\t\t\t\tthis.modValues[setting] = this.nextModValues[setting];\r\n\t\t\t}\r\n\r\n\t\t\t// Set samples per tick if song tempo mods changed it\r\n\t\t\tif (this.isModActive(ModSetting.mstTempo, true)) {\r\n\t\t\t\tsamplesPerTick = this.getSamplesPerTick();\r\n\t\t\t\tthis.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\r\n\t\t\t}\r\n\r\n\t\t\t// Bound LFO times to be within their period (to keep values from getting large)\r\n\t\t\t// I figured this modulo math probably doesn't have to happen every LFO tick.\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount; channel++) {\r\n\t\t\t\tfor (let instrument of this.song.channels[channel].instruments) {\r\n\t\t\t\t\tinstrument.nextLFOtime = (instrument.nextLFOtime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\r\n\t\t\t\t\tinstrument.arpTime = (instrument.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tfor (let channel: number = 0; channel < channelCount; channel++) {\r\n\t\t\t\t\tfor (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\t\tif (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n\t\t\t\t\t\t\tthis.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Optimization: Avoid persistent reverb values in the float denormal range.\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < reverbFeedback0 && reverbFeedback0 < epsilon) reverbFeedback0 = 0.0;\r\n\t\tif (-epsilon < reverbFeedback1 && reverbFeedback1 < epsilon) reverbFeedback1 = 0.0;\r\n\t\tif (-epsilon < reverbFeedback2 && reverbFeedback2 < epsilon) reverbFeedback2 = 0.0;\r\n\t\tif (-epsilon < reverbFeedback3 && reverbFeedback3 < epsilon) reverbFeedback3 = 0.0;\r\n\t\t//if (-epsilon < highpassInput && highpassInput < epsilon) highpassInput = 0.0;\r\n\t\t//if (-epsilon < highpassOutput && highpassOutput < epsilon) highpassOutput = 0.0;\r\n\t\tif (-epsilon < limit && limit < epsilon) limit = 0.0;\r\n\r\n\t\tthis.stereoBufferIndex = (this.stereoBufferIndex + outputBufferLength * 2) % stereoBufferLength;\r\n\t\tthis.chorusPhase = chorusPhase;\r\n\t\tthis.chorusDelayPos = chorusDelayPos;\r\n\t\tthis.reverbDelayPos = reverbDelayPos;\r\n\t\tthis.reverbFeedback0 = reverbFeedback0;\r\n\t\tthis.reverbFeedback1 = reverbFeedback1;\r\n\t\tthis.reverbFeedback2 = reverbFeedback2;\r\n\t\tthis.reverbFeedback3 = reverbFeedback3;\r\n\t\t//this.highpassInput = highpassInput;\r\n\t\t//this.highpassOutput = highpassOutput;\r\n\t\tthis.limit = limit;\r\n\r\n\t\tif (playSong) {\r\n\t\t\tthis.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / this.song.beatsPerBar + this.bar;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tconst synthDuration: number = performance.now() - synthStartTime;\r\n\t\t// Performance measurements:\r\n\t\tsamplesAccumulated += outputBufferLength;\r\n\t\tsamplePerformance += synthDuration;\r\n\t\t\r\n\t\tif (samplesAccumulated >= 44100 * 4) {\r\n\t\tconst secondsGenerated = samplesAccumulated / 44100;\r\n\t\tconst secondsRequired = samplePerformance / 1000;\r\n\t\tconst ratio = secondsRequired / secondsGenerated;\r\n\t\tconsole.log(ratio);\r\n\t\tsamplePerformance = 0;\r\n\t\tsamplesAccumulated = 0;\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tprivate freeTone(tone: Tone): void {\r\n\t\tthis.tonePool.pushBack(tone);\r\n\t}\r\n\r\n\tprivate newTone(): Tone {\r\n\t\tif (this.tonePool.count() > 0) {\r\n\t\t\tconst tone: Tone = this.tonePool.popBack();\r\n\t\t\ttone.reset();\r\n\t\t\ttone.active = false;\r\n\t\t\treturn tone;\r\n\t\t}\r\n\t\treturn new Tone();\r\n\t}\r\n\r\n\tprivate releaseTone(channel: number, tone: Tone): void {\r\n\t\tif (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n\t\t\tthis.releasedTones[channel].pushFront(tone);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t/*\r\n\t\t\tfor (let mod = 0; mod < Config.modCount; mod++) {\r\n\t\t\tthis.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].pushFront(tone);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t}\r\n\t}\r\n\r\n\tprivate freeReleasedTone(channel: number, toneIndex: number): void {\r\n\t\tif (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n\t\t\tthis.freeTone(this.releasedTones[channel].get(toneIndex));\r\n\t\t\tthis.releasedTones[channel].remove(toneIndex);\r\n\t\t} else {\r\n\t\t\t/*\r\n\t\t\tfor (let mod = 0; mod < Config.modCount; mod++) {\r\n\t\t\tthis.freeTone(this.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].get(toneIndex));\r\n\t\t\tthis.releasedModTones[channel][mod].remove(toneIndex);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t}\r\n\t}\r\n\r\n\tpublic freeAllTones(): void {\r\n\t\twhile (this.liveInputTones.count() > 0) {\r\n\t\t\tthis.freeTone(this.liveInputTones.popBack());\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this.activeTones.length; i++) {\r\n\t\t\twhile (this.activeTones[i].count() > 0) {\r\n\t\t\t\tthis.freeTone(this.activeTones[i].popBack());\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this.releasedTones.length; i++) {\r\n\t\t\twhile (this.releasedTones[i].count() > 0) {\r\n\t\t\t\tthis.freeTone(this.releasedTones[i].popBack());\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.activeModTones.length; i++) {\r\n\t\t\tfor (let mod = 0; mod < this.activeModTones[i].length; mod++) {\r\n\t\t\t\twhile (this.activeModTones[i][mod].count() > 0) {\r\n\t\t\t\t\tthis.freeTone(this.activeModTones[i][mod].popBack());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*\r\n\t\tfor (let i = 0; i < this.releasedModTones.length; i++) {\r\n\t\tfor (let mod = 0; mod < this.releasedModTones[i].length; mod++) {\r\n\t\twhile (this.releasedModTones[i][mod].count() > 0) {\r\n\t\tthis.freeTone(this.releasedModTones[i][mod].popBack());\r\n\t\t}\r\n\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tprivate determineLiveInputTones(song: Song): void {\r\n\t\tconst toneList: Deque<Tone> = this.liveInputTones;\r\n\t\tconst pitches: number[] = this.liveInputPitches;\r\n\t\tlet toneCount: number = 0;\r\n\t\tif (this.liveInputDuration > 0) {\r\n\t\t\tconst instrument: Instrument = song.channels[this.liveInputChannel].instruments[song.getPatternInstrument(this.liveInputChannel, this.bar)];\r\n\r\n\t\t\tif (instrument.getChord().arpeggiates) {\r\n\t\t\t\tlet tone: Tone;\r\n\t\t\t\tif (toneList.count() == 0) {\r\n\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t} else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n\t\t\t\t\tthis.releaseTone(this.liveInputChannel, toneList.popFront());\r\n\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttone = toneList.get(0);\r\n\t\t\t\t}\r\n\t\t\t\ttoneCount = 1;\r\n\r\n\t\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\t\t\ttone.pitches[i] = pitches[i];\r\n\t\t\t\t}\r\n\t\t\t\ttone.pitchCount = pitches.length;\r\n\t\t\t\ttone.chordSize = 1;\r\n\t\t\t\ttone.instrument = instrument;\r\n\t\t\t\ttone.note = tone.prevNote = tone.nextNote = null;\r\n\t\t\t} else {\r\n\t\t\t\t//const transition: Transition = instrument.getTransition();\r\n\t\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\t\t\t//const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n\t\t\t\t\tlet tone: Tone;\r\n\t\t\t\t\tif (toneList.count() <= i) {\r\n\t\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t\t} else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n\t\t\t\t\t\tthis.releaseTone(this.liveInputChannel, toneList.get(i));\r\n\t\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\t\ttoneList.set(i, tone);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttone = toneList.get(i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoneCount++;\r\n\r\n\t\t\t\t\ttone.pitches[0] = pitches[i];\r\n\t\t\t\t\ttone.pitchCount = 1;\r\n\t\t\t\t\ttone.chordSize = pitches.length;\r\n\t\t\t\t\ttone.instrument = instrument;\r\n\t\t\t\t\ttone.note = tone.prevNote = tone.nextNote = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile (toneList.count() > toneCount) {\r\n\t\t\tthis.releaseTone(this.liveInputChannel, toneList.popBack());\r\n\t\t}\r\n\r\n\t\tthis.liveInputStarted = false;\r\n\t}\r\n\r\n\tprivate determineCurrentActiveTones(song: Song, channel: number, playSong: boolean): void {\r\n\t\tconst instrument: Instrument = song.channels[channel].instruments[song.getPatternInstrument(channel, this.bar)];\r\n\t\tconst pattern: Pattern | null = song.getPattern(channel, this.bar);\r\n\t\tconst time: number = this.part + this.beat * Config.partsPerBeat;\r\n\r\n\t\tif (playSong && song.getChannelIsMod(channel) && !song.channels[channel].muted) {\r\n\t\t\t// Offset channel (first mod channel is 0 index in mod tone array)\r\n\t\t\tlet modChannelIdx = channel - (song.pitchChannelCount + song.noiseChannelCount);\r\n\r\n\t\t\t// For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\r\n\t\t\t// The same transition logic should apply though, even though it isn't really used by mod channels.\r\n\t\t\tlet notes: (Note | null)[] = [];\r\n\t\t\tlet prevNotes: (Note | null)[] = [];\r\n\t\t\tlet nextNotes: (Note | null)[] = [];\r\n\t\t\tlet fillCount: number = Config.modCount;\r\n\t\t\twhile (fillCount--) {\r\n\t\t\t\tnotes.push(null);\r\n\t\t\t\tprevNotes.push(null);\r\n\t\t\t\tnextNotes.push(null);\r\n\t\t\t}\r\n\r\n\t\t\tif (pattern != null) {\r\n\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\tif (pattern.notes[i].end <= time) {\r\n\t\t\t\t\t\t// Actually need to check which note starts closer to the start of this note.\r\n\t\t\t\t\t\tif (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n\t\t\t\t\t\t\tprevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n\t\t\t\t\t\tnotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pattern.notes[i].start > time) {\r\n\t\t\t\t\t\t// Actually need to check which note starts closer to the end of this note.\r\n\t\t\t\t\t\tif (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n\t\t\t\t\t\t\tnextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tconst toneList: Deque<Tone> = this.activeModTones[modChannelIdx][mod];\r\n\t\t\t\tif (notes[mod] != null) {\r\n\t\t\t\t\tif (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\r\n\t\t\t\t\tif (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\r\n\t\t\t\t\tthis.syncTones(channel, toneList, instrument, (notes[mod] as Note).pitches, (notes[mod] as Note), (prevNotes[mod] as Note), (nextNotes[mod] as Note), time);\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (toneList.count() > 0) {\r\n\t\t\t\t\t\tthis.freeTone(toneList.popBack());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (!song.getChannelIsMod(channel)) {\r\n\r\n\t\t\tlet note: Note | null = null;\r\n\t\t\tlet prevNote: Note | null = null;\r\n\t\t\tlet nextNote: Note | null = null;\r\n\r\n\t\t\tif (playSong && pattern != null && !song.channels[channel].muted) {\r\n\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\tif (pattern.notes[i].end <= time) {\r\n\t\t\t\t\t\tprevNote = pattern.notes[i];\r\n\t\t\t\t\t} else if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n\t\t\t\t\t\tnote = pattern.notes[i];\r\n\t\t\t\t\t} else if (pattern.notes[i].start > time) {\r\n\t\t\t\t\t\tnextNote = pattern.notes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst toneList: Deque<Tone> = this.activeTones[channel];\r\n\t\t\tif (note != null) {\r\n\t\t\t\tif (prevNote != null && prevNote.end != note.start) prevNote = null;\r\n\t\t\t\tif (nextNote != null && nextNote.start != note.end) nextNote = null;\r\n\t\t\t\tthis.syncTones(channel, toneList, instrument, note.pitches, note, prevNote, nextNote, time);\r\n\t\t\t} else {\r\n\t\t\t\twhile (toneList.count() > 0) {\r\n\t\t\t\t\t// Automatically free or release seamless tones if there's no new note to take over.\r\n\t\t\t\t\tif (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n\t\t\t\t\t\tthis.releaseTone(channel, toneList.popBack());\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.freeTone(toneList.popBack());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate syncTones(channel: number, toneList: Deque<Tone>, instrument: Instrument, pitches: number[], note: Note, prevNote: Note | null, nextNote: Note | null, currentPart: number): void {\r\n\t\tlet toneCount: number = 0;\r\n\t\t// Mod channels don't ever tie over, so the real start point is always simply the note's start.\r\n\t\tlet noteStartAdjust = (channel < this.song!.pitchChannelCount + this.song!.noiseChannelCount)\r\n\t\t\t? Math.max(0, this.tyingOver[channel])\r\n\t\t\t: 0;\r\n\t\tif (instrument.getChord().arpeggiates) {\r\n\t\t\tlet tone: Tone;\r\n\t\t\tif (toneList.count() == 0) {\r\n\t\t\t\ttone = this.newTone();\r\n\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t} else {\r\n\t\t\t\ttone = toneList.get(0);\r\n\t\t\t}\r\n\t\t\ttoneCount = 1;\r\n\r\n\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\t\ttone.pitches[i] = pitches[i];\r\n\t\t\t}\r\n\t\t\ttone.pitchCount = pitches.length;\r\n\t\t\ttone.chordSize = 1;\r\n\t\t\ttone.instrument = instrument;\r\n\t\t\ttone.note = note;\r\n\t\t\ttone.noteStart = note.start - noteStartAdjust;\r\n\t\t\ttone.noteEnd = note.end;\r\n\t\t\ttone.prevNote = prevNote;\r\n\t\t\ttone.nextNote = nextNote;\r\n\t\t\ttone.prevNotePitchIndex = 0;\r\n\t\t\ttone.nextNotePitchIndex = 0;\r\n\t\t} else {\r\n\t\t\tconst transition: Transition = instrument.getTransition();\r\n\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\r\n\t\t\t\tconst strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\t\t\t\tlet prevNoteForThisTone: Note | null = (prevNote && prevNote.pitches.length > i) ? prevNote : null;\r\n\t\t\t\tlet noteForThisTone: Note = note;\r\n\t\t\t\tlet nextNoteForThisTone: Note | null = (nextNote && nextNote.pitches.length > i) ? nextNote : null;\r\n\t\t\t\tlet noteStart: number = noteForThisTone.start + strumOffsetParts - noteStartAdjust;\r\n\r\n\t\t\t\tif (noteStart > currentPart) {\r\n\t\t\t\t\tif (toneList.count() > i && (transition.isSeamless || this.tyingOver[channel] >= 0) && prevNoteForThisTone != null) {\r\n\t\t\t\t\t\tnextNoteForThisTone = noteForThisTone;\r\n\t\t\t\t\t\tnoteForThisTone = prevNoteForThisTone;\r\n\t\t\t\t\t\tprevNoteForThisTone = null;\r\n\t\t\t\t\t\tnoteStart = noteForThisTone.start + strumOffsetParts - noteStartAdjust;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet noteEnd: number = noteForThisTone.end;\r\n\t\t\t\tif ((transition.isSeamless || this.tyingOver[channel] >= 0) && nextNoteForThisTone != null) {\r\n\t\t\t\t\tnoteEnd = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEnd + strumOffsetParts);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tlet tone: Tone;\r\n\t\t\t\tif (toneList.count() <= i) {\r\n\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttone = toneList.get(i);\r\n\t\t\t\t}\r\n\t\t\t\ttoneCount++;\r\n\r\n\t\t\t\ttone.pitches[0] = noteForThisTone.pitches[i];\r\n\t\t\t\ttone.pitchCount = 1;\r\n\t\t\t\ttone.chordSize = noteForThisTone.pitches.length;\r\n\t\t\t\ttone.instrument = instrument;\r\n\t\t\t\ttone.note = noteForThisTone;\r\n\t\t\t\ttone.noteStart = noteStart;\r\n\t\t\t\ttone.noteEnd = noteEnd;\r\n\t\t\t\ttone.prevNote = prevNoteForThisTone;\r\n\t\t\t\ttone.nextNote = nextNoteForThisTone;\r\n\t\t\t\ttone.prevNotePitchIndex = i;\r\n\t\t\t\ttone.nextNotePitchIndex = i;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile (toneList.count() > toneCount) {\r\n\t\t\t// Automatically free or release seamless tones if there's no new note to take over.\r\n\t\t\tif (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n\t\t\t\tthis.releaseTone(channel, toneList.popBack());\r\n\t\t\t} else {\r\n\t\t\t\tthis.freeTone(toneList.popBack());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate playTone(song: Song, stereoBufferIndex: number, stereoBufferLength: number, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n\t\tSynth.computeTone(this, song, channel, samplesPerTick, runLength, tone, released, shouldFadeOutFast);\r\n\t\tlet synthBuffer: Float32Array;\r\n\t\tswitch (tone.instrument.effects) {\r\n\t\t\tcase 0: synthBuffer = this.samplesForNone!; break;\r\n\t\t\tcase 1: synthBuffer = this.samplesForReverb!; break;\r\n\t\t\tcase 2: synthBuffer = this.samplesForChorus!; break;\r\n\t\t\tcase 3: synthBuffer = this.samplesForChorusReverb!; break;\r\n\t\t\tdefault: throw new Error();\r\n\t\t}\r\n\t\tconst synthesizer: Function = Synth.getInstrumentSynthFunction(tone.instrument);\r\n\t\tsynthesizer(this, synthBuffer, stereoBufferIndex, stereoBufferLength, runLength * 2, tone, tone.instrument);\r\n\t}\r\n\r\n\tprivate static computeEnvelope(envelope: Envelope, time: number, beats: number, customVolume: number): number {\r\n\t\tswitch (envelope.type) {\r\n\t\t\tcase EnvelopeType.custom: return customVolume;\r\n\t\t\tcase EnvelopeType.steady: return 1.0;\r\n\t\t\tcase EnvelopeType.twang:\r\n\t\t\t\treturn 1.0 / (1.0 + time * envelope.speed);\r\n\t\t\tcase EnvelopeType.swell:\r\n\t\t\t\treturn 1.0 - 1.0 / (1.0 + time * envelope.speed);\r\n\t\t\tcase EnvelopeType.tremolo:\r\n\t\t\t\treturn 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\r\n\t\t\tcase EnvelopeType.tremolo2:\r\n\t\t\t\treturn 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\r\n\t\t\tcase EnvelopeType.punch:\r\n\t\t\t\treturn Math.max(1.0, 2.0 - time * 10.0);\r\n\t\t\tcase EnvelopeType.flare:\r\n\t\t\t\tconst speed: number = envelope.speed;\r\n\t\t\t\tconst attack: number = 0.25 / Math.sqrt(speed);\r\n\t\t\t\treturn time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * speed);\r\n\t\t\tcase EnvelopeType.decay:\r\n\t\t\t\treturn Math.pow(2, -envelope.speed * time);\r\n\t\t\tdefault: throw new Error(\"Unrecognized operator envelope type.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static computeChordVolume(chordSize: number): number {\r\n\t\treturn 1.0 / ((chordSize - 1) * 0.25 + 1.0);\r\n\t}\r\n\r\n\tprivate static computeTone(synth: Synth, song: Song, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n\t\tconst instrument: Instrument = tone.instrument;\r\n\t\tconst transition: Transition = instrument.getTransition();\r\n\t\tconst chord: Chord = instrument.getChord();\r\n\t\tconst chordVolume: number = chord.arpeggiates ? 1 : Synth.computeChordVolume(tone.chordSize);\r\n\t\tconst isNoiseChannel: boolean = song.getChannelIsNoise(channel);\r\n\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\tconst secondsPerPart: number = Config.ticksPerPart * samplesPerTick / synth.samplesPerSecond;\r\n\t\tconst beatsPerPart: number = 1.0 / Config.partsPerBeat;\r\n\t\tconst toneWasActive: boolean = tone.active;\r\n\t\tconst tickSampleCountdown: number = synth.tickSampleCountdown;\r\n\t\tconst startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n\t\tconst endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n\t\tconst ticksIntoBar: number = (synth.beat * Config.partsPerBeat + synth.part) * Config.ticksPerPart + synth.tick;\r\n\t\tconst partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n\t\tconst partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n\t\tconst partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n\t\tconst partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n\t\tconst instrumentIdx: number = (synth.song as Song).channels[channel].instruments.findIndex(i => i == instrument);\r\n\t\tconst treatAsSeamless: boolean = transition.isSeamless || synth.tyingOver[channel] >= 0;\r\n\r\n\t\ttone.phaseDeltaScale = 0.0;\r\n\t\ttone.filter = 1.0;\r\n\t\ttone.filterScale = 1.0;\r\n\t\ttone.vibratoScale = 0.0;\r\n\t\ttone.intervalMult = 1.0;\r\n\t\ttone.intervalVolumeMult = 1.0;\r\n\t\ttone.active = false;\r\n\r\n\t\tlet startPan: number = instrument.pan;\r\n\t\tlet endPan: number = instrument.pan;\r\n\t\tif (synth.isModActive(ModSetting.mstPan, false, channel, instrumentIdx)) {\r\n\t\t\tstartPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\r\n\t\t\tendPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\r\n\t\t}\r\n\r\n\t\tlet startPanDelay: number = instrument.panDelay;\r\n\t\tlet endPanDelay: number = instrument.panDelay;\r\n\t\tif (synth.isModActive(ModSetting.mstPanDelay, false, channel, instrumentIdx)) {\r\n\t\t\tstartPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, false);\r\n\t\t\tendPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, true);\r\n\t\t}\r\n\r\n\t\tconst useStartPan: number = (startPan - Config.panCenter) / Config.panCenter;\r\n\t\tconst useEndPan: number = (endPan - Config.panCenter) / Config.panCenter;\r\n\t\t// 10 pan delay is the same amount as vanilla beepbox.\r\n\t\tconst maxDelayStart: number = startPanDelay * 0.00013 * synth.samplesPerSecond;\r\n\t\tconst maxDelayEnd: number = endPanDelay * 0.00013 * synth.samplesPerSecond;\r\n\t\ttone.stereoDelayStart = -useStartPan * maxDelayStart;\r\n\t\tconst delayEnd: number = -useEndPan * maxDelayEnd;\r\n\t\ttone.stereoDelayDelta = (delayEnd - tone.stereoDelayStart) / runLength;\r\n\t\ttone.stereoVolumeLStart = Math.cos((1 + useStartPan) * Math.PI * 0.25) * 1.414;\r\n\t\ttone.stereoVolumeRStart = Math.cos((1 - useStartPan) * Math.PI * 0.25) * 1.414;\r\n\t\tconst stereoVolumeLEnd: number = Math.cos((1 + useEndPan) * Math.PI * 0.25) * 1.414;\r\n\t\tconst stereoVolumeREnd: number = Math.cos((1 - useEndPan) * Math.PI * 0.25) * 1.414;\r\n\t\ttone.stereoVolumeLDelta = (stereoVolumeLEnd - tone.stereoVolumeLStart) / runLength;\r\n\t\ttone.stereoVolumeRDelta = (stereoVolumeREnd - tone.stereoVolumeRStart) / runLength;\r\n\r\n\t\tlet resetPhases: boolean = true;\r\n\t\tlet partsSinceStart: number = 0.0;\r\n\t\tlet intervalStart: number = 0.0;\r\n\t\tlet intervalEnd: number = 0.0;\r\n\t\tlet transitionVolumeStart: number = 1.0;\r\n\t\tlet transitionVolumeEnd: number = 1.0;\r\n\t\tlet chordVolumeStart: number = chordVolume;\r\n\t\tlet chordVolumeEnd: number = chordVolume;\r\n\t\tlet customVolumeStart: number = 0.0;\r\n\t\tlet customVolumeEnd: number = 0.0;\r\n\t\tlet decayTimeStart: number = 0.0;\r\n\t\tlet decayTimeEnd: number = 0.0;\r\n\r\n\t\tlet volumeReferencePitch: number;\r\n\t\tlet basePitch: number;\r\n\t\tlet baseVolume: number;\r\n\t\tlet pitchDamping: number;\r\n\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tbasePitch = Config.spectrumBasePitch;\r\n\t\t\t\tbaseVolume = 0.6; // Note: spectrum is louder for drum channels than pitch channels!\r\n\t\t\t} else {\r\n\t\t\t\t// basePitch = Config.keys[song.key].basePitch; // key relic (TODO), more following\r\n\t\t\t\tbasePitch = 0;\r\n\t\t\t\tbaseVolume = 0.3;\r\n\t\t\t}\r\n\t\t\tvolumeReferencePitch = Config.spectrumBasePitch;\r\n\t\t\tpitchDamping = 28;\r\n\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\tbasePitch = Config.spectrumBasePitch;\r\n\t\t\tbaseVolume = 0.45;\r\n\t\t\tvolumeReferencePitch = basePitch;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.noise) {\r\n\t\t\tbasePitch = Config.chipNoises[instrument.chipNoise].basePitch;\r\n\t\t\tbaseVolume = 0.19;\r\n\t\t\tvolumeReferencePitch = basePitch;\r\n\t\t\tpitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\r\n\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t// basePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbasePitch = 0;\r\n\t\t\tbaseVolume = 0.03;\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t// basePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbasePitch = 0;\r\n\t\t\tbaseVolume = 0.03375; // looks low compared to drums, but it's doubled for chorus and drums tend to be loud anyway.\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t// basePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbasePitch = 0;\r\n\t\t\tbaseVolume = 0.025;\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t// basePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbasePitch = 0;\r\n\t\t\tbaseVolume = 0.04725;\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\tbaseVolume = 1.0;\r\n\t\t\tvolumeReferencePitch = 0;\r\n\t\t\tpitchDamping = 1.0;\r\n\t\t\tbasePitch = 0;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unknown instrument type in computeTone.\");\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\ttone.phaseDeltas[i] = 0.0;\r\n\t\t\ttone.volumeStarts[i] = 0.0;\r\n\t\t\ttone.volumeDeltas[i] = 0.0;\r\n\t\t}\r\n\r\n\t\tif (released) {\r\n\t\t\tconst ticksSoFar: number = tone.noteLengthTicks + tone.ticksSinceReleased;\r\n\t\t\tconst startTicksSinceReleased: number = tone.ticksSinceReleased + startRatio;\r\n\t\t\tconst endTicksSinceReleased: number = tone.ticksSinceReleased + endRatio;\r\n\t\t\tconst startTick: number = tone.noteLengthTicks + startTicksSinceReleased;\r\n\t\t\tconst endTick: number = tone.noteLengthTicks + endTicksSinceReleased;\r\n\t\t\tconst toneTransition: Transition = tone.instrument.getTransition();\r\n\t\t\tresetPhases = false;\r\n\t\t\tpartsSinceStart = Math.floor(ticksSoFar / Config.ticksPerPart);\r\n\t\t\tintervalStart = intervalEnd = tone.lastInterval;\r\n\t\t\tcustomVolumeStart = customVolumeEnd = Synth.expressionToVolumeMult(tone.lastVolume);\r\n\t\t\ttransitionVolumeStart = Synth.expressionToVolumeMult((1.0 - startTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n\t\t\ttransitionVolumeEnd = Synth.expressionToVolumeMult((1.0 - endTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n\t\t\tdecayTimeStart = startTick / Config.ticksPerPart;\r\n\t\t\tdecayTimeEnd = endTick / Config.ticksPerPart;\r\n\r\n\t\t\tif (shouldFadeOutFast) {\r\n\t\t\t\ttransitionVolumeStart *= 1.0 - startRatio;\r\n\t\t\t\ttransitionVolumeEnd *= 1.0 - endRatio;\r\n\t\t\t}\r\n\t\t} else if (tone.note == null) {\r\n\t\t\ttransitionVolumeStart = transitionVolumeEnd = 1;\r\n\t\t\tcustomVolumeStart = customVolumeEnd = 1;\r\n\t\t\ttone.lastInterval = 0;\r\n\t\t\ttone.lastVolume = 6;\r\n\t\t\ttone.ticksSinceReleased = 0;\r\n\t\t\tresetPhases = false;\r\n\r\n\t\t\tconst heldTicksStart: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n\t\t\ttone.liveInputSamplesHeld += runLength;\r\n\t\t\tconst heldTicksEnd: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n\t\t\ttone.noteLengthTicks = heldTicksEnd;\r\n\t\t\tconst heldPartsStart: number = heldTicksStart / Config.ticksPerPart;\r\n\t\t\tconst heldPartsEnd: number = heldTicksEnd / Config.ticksPerPart;\r\n\t\t\tpartsSinceStart = Math.floor(heldPartsStart);\r\n\t\t\tdecayTimeStart = heldPartsStart;\r\n\t\t\tdecayTimeEnd = heldPartsEnd;\r\n\t\t} else {\r\n\t\t\tconst note: Note = tone.note;\r\n\t\t\tconst prevNote: Note | null = tone.prevNote;\r\n\t\t\tconst nextNote: Note | null = tone.nextNote;\r\n\r\n\t\t\tconst time: number = synth.part + synth.beat * Config.partsPerBeat;\r\n\t\t\tconst partsPerBar: number = Config.partsPerBeat * song.beatsPerBar;\r\n\t\t\tconst noteStart: number = tone.noteStart;// - Math.max(0, synth.tyingOver[channel] || 0);\r\n\t\t\tconst noteEnd: number = tone.noteEnd;\r\n\r\n\t\t\tpartsSinceStart = time - noteStart;\r\n\r\n\t\t\tlet endPinIndex: number;\r\n\t\t\tfor (endPinIndex = 1; endPinIndex < note.pins.length - 1; endPinIndex++) {\r\n\t\t\t\tif (note.pins[endPinIndex].time + note.start > time) break;\r\n\t\t\t}\r\n\t\t\tconst startPin: NotePin = note.pins[endPinIndex - 1];\r\n\t\t\tconst endPin: NotePin = note.pins[endPinIndex];\r\n\t\t\tconst noteStartTick: number = noteStart * Config.ticksPerPart;\r\n\t\t\tconst noteEndTick: number = noteEnd * Config.ticksPerPart;\r\n\t\t\tconst noteLengthTicks: number = noteEndTick - noteStartTick;\r\n\t\t\tconst pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\r\n\t\t\tconst pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\r\n\r\n\t\t\ttone.lastInterval = note.pins[note.pins.length - 1].interval;\r\n\t\t\ttone.lastVolume = note.pins[note.pins.length - 1].volume;\r\n\t\t\ttone.ticksSinceReleased = 0;\r\n\t\t\ttone.noteLengthTicks = noteLengthTicks;\r\n\r\n\t\t\tconst tickTimeStart: number = time * Config.ticksPerPart + synth.tick;\r\n\t\t\tconst tickTimeEnd: number = time * Config.ticksPerPart + synth.tick + 1;\r\n\t\t\tconst noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\r\n\t\t\tconst noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\r\n\t\t\tconst pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\r\n\t\t\tconst pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\r\n\t\t\tlet customVolumeTickStart: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioStart;\r\n\t\t\tlet customVolumeTickEnd: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioEnd;\r\n\t\t\tlet transitionVolumeTickStart: number = 1.0;\r\n\t\t\tlet transitionVolumeTickEnd: number = 1.0;\r\n\t\t\tlet chordVolumeTickStart: number = chordVolume;\r\n\t\t\tlet chordVolumeTickEnd: number = chordVolume;\r\n\t\t\tlet intervalTickStart: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\r\n\t\t\tlet intervalTickEnd: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\r\n\t\t\tlet decayTimeTickStart: number = partTimeTickStart - noteStart;\r\n\t\t\tlet decayTimeTickEnd: number = partTimeTickEnd - noteStart;\r\n\t\t\tresetPhases = (tickTimeStart + startRatio - noteStartTick == 0.0) || !toneWasActive;\r\n\r\n\t\t\t// if seamless, don't reset phases at start. (it's probably not necessary to constantly reset phases if there are no notes? Just do it once when note starts? But make sure that reset phases doesn't also reset stuff that this function did to set up the tone. Remember when the first run length was lost!\r\n\t\t\t// if slide, average the interval, decayTime, and custom volume at the endpoints and interpolate between over slide duration.\r\n\t\t\t// note that currently seamless and slide make different assumptions about whether a note at the end of a bar will connect with the next bar!\r\n\t\t\tconst maximumSlideTicks: number = noteLengthTicks * 0.5;\r\n\t\t\tif (treatAsSeamless && !transition.slides && note.start == 0) {\r\n\t\t\t\t// Special case for seamless, no-slide transition: assume the previous bar ends with another seamless note, don't reset tone history.\r\n\t\t\t\tresetPhases = !toneWasActive;\r\n\t\t\t} else if (treatAsSeamless && prevNote != null) {\r\n\t\t\t\tresetPhases = !toneWasActive;\r\n\t\t\t\tif (transition.slides) {\r\n\t\t\t\t\tconst slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n\t\t\t\t\tconst slideRatioStartTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickStart / slideTicks);\r\n\t\t\t\t\tconst slideRatioEndTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickEnd / slideTicks);\r\n\t\t\t\t\tconst intervalDiff: number = ((prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval) - tone.pitches[0]) * 0.5;\r\n\t\t\t\t\tconst volumeDiff: number = (prevNote.pins[prevNote.pins.length - 1].volume - note.pins[0].volume) * 0.5;\r\n\t\t\t\t\tconst decayTimeDiff: number = (prevNote.end - prevNote.start) * 0.5;\r\n\t\t\t\t\tintervalTickStart += slideRatioStartTick * intervalDiff;\r\n\t\t\t\t\tintervalTickEnd += slideRatioEndTick * intervalDiff;\r\n\t\t\t\t\tcustomVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n\t\t\t\t\tcustomVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n\t\t\t\t\tdecayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n\t\t\t\t\tdecayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n\t\t\t\t\tif (!chord.arpeggiates) {\r\n\t\t\t\t\t\tconst chordSizeDiff: number = (prevNote.pitches.length - tone.chordSize) * 0.5;\r\n\t\t\t\t\t\tchordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n\t\t\t\t\t\tchordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (treatAsSeamless && !transition.slides && note.end == partsPerBar) {\r\n\t\t\t\t// Special case for seamless, no-slide transition: assume the next bar starts with another seamless note, don't fade out.\r\n\t\t\t} else if (treatAsSeamless && nextNote != null) {\r\n\t\t\t\tif (transition.slides) {\r\n\t\t\t\t\tconst slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n\t\t\t\t\tconst slideRatioStartTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickStart) / slideTicks);\r\n\t\t\t\t\tconst slideRatioEndTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickEnd) / slideTicks);\r\n\t\t\t\t\tconst intervalDiff: number = (nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + note.pins[note.pins.length - 1].interval)) * 0.5;\r\n\t\t\t\t\tconst volumeDiff: number = (nextNote.pins[0].volume - note.pins[note.pins.length - 1].volume) * 0.5;\r\n\t\t\t\t\tconst decayTimeDiff: number = -(noteEnd - noteStart) * 0.5;\r\n\t\t\t\t\tintervalTickStart += slideRatioStartTick * intervalDiff;\r\n\t\t\t\t\tintervalTickEnd += slideRatioEndTick * intervalDiff;\r\n\t\t\t\t\tcustomVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n\t\t\t\t\tcustomVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n\t\t\t\t\tdecayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n\t\t\t\t\tdecayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n\t\t\t\t\tif (!chord.arpeggiates) {\r\n\t\t\t\t\t\tconst chordSizeDiff: number = (nextNote.pitches.length - tone.chordSize) * 0.5;\r\n\t\t\t\t\t\tchordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n\t\t\t\t\t\tchordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (!(transition.releases && synth.tyingOver[channel] < 0)) {\r\n\t\t\t\tconst releaseTicks: number = transition.releaseTicks;\r\n\t\t\t\tif (releaseTicks > 0.0) {\r\n\t\t\t\t\ttransitionVolumeTickStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / releaseTicks);\r\n\t\t\t\t\ttransitionVolumeTickEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / releaseTicks);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tintervalStart = intervalTickStart + (intervalTickEnd - intervalTickStart) * startRatio;\r\n\t\t\tintervalEnd = intervalTickStart + (intervalTickEnd - intervalTickStart) * endRatio;\r\n\t\t\tif (instrument.type != InstrumentType.mod) {\r\n\t\t\t\tcustomVolumeStart = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * startRatio);\r\n\t\t\t\tcustomVolumeEnd = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * endRatio);\r\n\t\t\t} else {\r\n\t\t\t\tcustomVolumeStart = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.max(0.0, startRatio);\r\n\t\t\t\tcustomVolumeEnd = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.min(1.0, endRatio);\r\n\t\t\t\ttone.customVolumeStart = customVolumeStart;\r\n\t\t\t\ttone.customVolumeEnd = customVolumeEnd;\r\n\t\t\t}\r\n\t\t\ttransitionVolumeStart = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * startRatio;\r\n\t\t\ttransitionVolumeEnd = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * endRatio;\r\n\t\t\tchordVolumeStart = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * startRatio;\r\n\t\t\tchordVolumeEnd = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * endRatio;\r\n\t\t\tdecayTimeStart = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * startRatio;\r\n\t\t\tdecayTimeEnd = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * endRatio;\r\n\t\t}\r\n\r\n\t\tconst sampleTime: number = 1.0 / synth.samplesPerSecond;\r\n\t\ttone.active = true;\r\n\r\n\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.spectrum) {\r\n\r\n\t\t\tconst lfoEffectStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.LFOtime);\r\n\t\t\tconst lfoEffectEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.nextLFOtime);\r\n\r\n\t\t\tlet useVibratoStart: number = instrument.vibratoDepth;\r\n\t\t\tlet useVibratoEnd: number = instrument.vibratoDepth;\r\n\r\n\t\t\tif (synth.isModActive(ModSetting.mstVibratoDepth, false, channel, instrumentIdx)) {\r\n\t\t\t\tuseVibratoStart = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, false) / 25;\r\n\t\t\t\tuseVibratoEnd = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\t// Only use vibrato properties if the instrument's vibrato is custom or mods are applied to it\r\n\t\t\tlet partsStart: number;\r\n\t\t\tlet partsEnd: number;\r\n\t\t\tconst activeVibratoDelayMods: boolean = synth.isModActive(ModSetting.mstVibratoDelay, false, channel, instrumentIdx);\r\n\t\t\tif (instrument.vibrato != Config.vibratos.length && !activeVibratoDelayMods) {\r\n\t\t\t\tpartsStart = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\t\tpartsEnd = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet vibratoDelayStart: number = instrument.vibratoDelay;\r\n\t\t\t\tlet vibratoDelayEnd: number = instrument.vibratoDelay;\r\n\r\n\t\t\t\tif (activeVibratoDelayMods) {\r\n\t\t\t\t\tvibratoDelayStart = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, false);\r\n\t\t\t\t\tvibratoDelayEnd = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, true);\r\n\r\n\t\t\t\t\t// Special case - max vibrato delay means neeeeeever vibrato.\r\n\t\t\t\t\tif (vibratoDelayStart == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n\t\t\t\t\t\tvibratoDelayStart = Number.MAX_VALUE;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (vibratoDelayEnd == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n\t\t\t\t\t\tvibratoDelayEnd = Number.MAX_VALUE;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpartsStart = vibratoDelayStart;\r\n\t\t\t\tpartsEnd = vibratoDelayEnd;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst vibratoScaleStart: number = (partsSinceStart < partsStart) ? 0.0 : useVibratoStart;\r\n\t\t\tconst vibratoScaleEnd: number = (partsSinceStart < partsEnd) ? 0.0 : useVibratoEnd;\r\n\r\n\t\t\tconst vibratoStart: number = vibratoScaleStart * lfoEffectStart;\r\n\t\t\tconst vibratoEnd: number = vibratoScaleEnd * lfoEffectEnd;\r\n\t\t\tintervalStart += vibratoStart;\r\n\t\t\tintervalEnd += vibratoEnd;\r\n\t\t}\r\n\r\n\t\tif (!treatAsSeamless || (!(!transition.slides && tone.note != null && tone.note.start == 0) && !(tone.prevNote != null))) {\r\n\t\t\tconst attackSeconds: number = transition.attackSeconds;\r\n\t\t\tif (attackSeconds > 0.0) {\r\n\t\t\t\ttransitionVolumeStart *= Math.min(1.0, secondsPerPart * decayTimeStart / attackSeconds);\r\n\t\t\t\ttransitionVolumeEnd *= Math.min(1.0, secondsPerPart * decayTimeEnd / attackSeconds);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst instrumentVolumeMult: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\r\n\r\n\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t// It's possible that the note will change while the user is editing it,\r\n\t\t\t// but the tone's pitches don't get updated because the tone has already\r\n\t\t\t// ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\r\n\t\t\ttone.drumsetPitch = tone.pitches[0];\r\n\t\t\tif (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\r\n\t\t\ttone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\r\n\t\t}\r\n\r\n\t\tlet filterCutModStart: number = instrument.filterCutoff;\r\n\t\tlet filterCutModEnd: number = instrument.filterCutoff;\r\n\t\tif (synth.isModActive(ModSetting.mstFilterCut, false, channel, instrumentIdx)) {\r\n\t\t\tfilterCutModStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, false), ModSetting.mstFilterCut);\r\n\t\t\tfilterCutModEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, true), ModSetting.mstFilterCut);\r\n\t\t}\r\n\r\n\t\tlet cutoffOctavesModStart: number;\r\n\t\tlet cutoffOctavesModEnd: number;\r\n\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\tcutoffOctavesModStart = 0;\r\n\t\t\tcutoffOctavesModEnd = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcutoffOctavesModStart = (filterCutModStart - (Config.filterCutoffRange - 1)) * 0.5;\r\n\t\t\tcutoffOctavesModEnd = (filterCutModEnd - (Config.filterCutoffRange - 1)) * 0.5;\r\n\t\t}\r\n\r\n\t\tconst filterEnvelope: Envelope = (instrument.type == InstrumentType.drumset) ? instrument.getDrumsetEnvelope(tone.drumsetPitch) : instrument.getFilterEnvelope();\r\n\t\tconst filterCutoffHzStart: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModStart);\r\n\t\tconst filterCutoffHzEnd: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModEnd);\r\n\t\tconst filterBaseStart: number = 2.0 * Math.sin(Math.PI * filterCutoffHzStart / synth.samplesPerSecond);\r\n\t\tconst filterBaseEnd: number = 2.0 * Math.sin(Math.PI * filterCutoffHzEnd / synth.samplesPerSecond);\r\n\t\tconst filterMin: number = 2.0 * Math.sin(Math.PI * Config.filterCutoffMinHz / synth.samplesPerSecond);\r\n\t\ttone.filter = filterBaseStart * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\tlet endFilter: number = filterBaseEnd * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\t\ttone.filter = Math.min(Config.filterMax, Math.max(filterMin, tone.filter));\r\n\t\tendFilter = Math.min(Config.filterMax, Math.max(filterMin, endFilter));\r\n\t\ttone.filterScale = Math.pow(endFilter / tone.filter, 1.0 / runLength);\r\n\r\n\t\tlet filterVolumeStart: number = Math.pow(0.5, cutoffOctavesModStart * 0.35);\r\n\t\tlet filterVolumeEnd: number = Math.pow(0.5, cutoffOctavesModEnd * 0.35);\r\n\r\n\t\ttone.filterResonanceStart = instrument.getFilterResonance();\r\n\t\ttone.filterResonanceDelta = 0.0;\r\n\r\n\t\tlet useFilterResonanceStart: number = instrument.filterResonance;\r\n\t\tlet useFilterResonanceEnd: number = instrument.filterResonance;\r\n\r\n\t\ttone.isFirstOrder = (instrument.type == InstrumentType.drumset) ? false : (useFilterResonanceStart == 0);\r\n\r\n\t\tif (synth.isModActive(ModSetting.mstFilterPeak, false, channel, instrumentIdx)) {\r\n\t\t\t// This flag is used to avoid the special casing when filter resonance == 0 without mods. So, it will sound a bit different,\r\n\t\t\t// but the effect and ability to smoothly modulate will be preserved.\r\n\t\t\ttone.isFirstOrder = false;\r\n\r\n\t\t\tuseFilterResonanceStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, false), ModSetting.mstFilterPeak);\r\n\t\t\tuseFilterResonanceEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, true), ModSetting.mstFilterPeak);\r\n\r\n\t\t\t// Also set cut in the tone.\r\n\t\t\ttone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\t\t\tconst filterResonanceEnd: number = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceEnd - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\r\n\t\t\t// Just a linear delta. Could get messy since it's not an amazing approximation of sqrt?\r\n\t\t\ttone.filterResonanceDelta = (filterResonanceEnd - tone.filterResonanceStart) / runLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Still need to compute this, mods or no. This calc is delegated to the tone level instead of the synth level, a notable difference from beepbox.\r\n\t\t\t// No functional difference though.\r\n\t\t\ttone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\t\t}\r\n\r\n\t\tif (tone.isFirstOrder == false) {\r\n\t\t\tfilterVolumeStart = Math.pow(filterVolumeStart, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceStart - 1));\r\n\t\t\tfilterVolumeEnd = Math.pow(filterVolumeEnd, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceEnd - 1));\r\n\t\t}\r\n\t\tif (filterEnvelope.type == EnvelopeType.decay) {\r\n\t\t\tfilterVolumeStart *= (1.25 + .025 * filterEnvelope.speed);\r\n\t\t\tfilterVolumeEnd *= (1.25 + .025 * filterEnvelope.speed);\r\n\t\t} else if (filterEnvelope.type == EnvelopeType.twang) {\r\n\t\t\tfilterVolumeStart *= (1 + .02 * filterEnvelope.speed);\r\n\t\t\tfilterVolumeEnd *= (1 + .02 * filterEnvelope.speed);\r\n\t\t}\r\n\r\n\t\tif (resetPhases) {\r\n\t\t\ttone.reset();\r\n\t\t}\r\n\r\n\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\t// phase modulation!\r\n\r\n\t\t\tlet sineVolumeBoostStart: number = 1.0;\r\n\t\t\tlet sineVolumeBoostEnd: number = 1.0;\r\n\t\t\tlet totalCarrierVolumeStart: number = 0.0;\r\n\t\t\tlet totalCarrierVolumeEnd: number = 0.0;\r\n\r\n\t\t\tlet arpeggioInterval: number = 0;\r\n\t\t\tif (tone.pitchCount > 1 && !chord.harmonizes) {\r\n\t\t\t\tconst arpeggio: number = Math.floor((instrument.arpTime) / Config.ticksPerArpeggio);\r\n\t\t\t\tarpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n\t\t\t}\r\n\r\n\t\t\tlet detuneStart: number = instrument.detune / 25;\r\n\t\t\tlet detuneEnd: number = instrument.detune / 25;\r\n\t\t\tif (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n\t\t\t\tdetuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n\t\t\t\tdetuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tif (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n\t\t\t\tdetuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n\t\t\t\tdetuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tconst carrierCount: number = Config.algorithms[instrument.algorithm].carrierCount;\r\n\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\r\n\t\t\t\tconst associatedCarrierIndex: number = Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1;\r\n\t\t\t\tconst pitch: number = tone.pitches[!chord.harmonizes ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\r\n\t\t\t\tconst freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\r\n\t\t\t\tconst interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\r\n\t\t\t\tconst startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale + interval;\r\n\t\t\t\tconst startFreq: number = freqMult * (Instrument.frequencyFromPitch(startPitch, song.centerFrequency, song.edo)) + Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\r\n\r\n\t\t\t\ttone.phaseDeltas[i] = startFreq * sampleTime * Config.sineWaveLength;\r\n\r\n\t\t\t\tlet amplitudeStart: number = instrument.operators[i].amplitude;\r\n\t\t\t\tlet amplitudeEnd: number = instrument.operators[i].amplitude;\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx)) {\r\n\t\t\t\t\tamplitudeStart *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, false) / 15.0;\r\n\t\t\t\t\tamplitudeEnd *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, true) / 15.0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\r\n\t\t\t\tconst amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\r\n\t\t\t\tconst amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n\t\t\t\tconst amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n\t\t\t\tlet volumeStart: number = amplitudeMultStart;\r\n\t\t\t\tlet volumeEnd: number = amplitudeMultEnd;\r\n\r\n\t\t\t\t// Check for mod-related volume delta\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n\t\t\t\t\t// Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n\t\t\t\t\tconst startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n\t\t\t\t\tconst endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n\t\t\t\t\tvolumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n\t\t\t\t\tvolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check for SONG mod-related volume delta\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n\t\t\t\t\tvolumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n\t\t\t\t\tvolumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i < carrierCount) {\r\n\t\t\t\t\t// carrier\r\n\t\t\t\t\tconst endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale + interval;\r\n\t\t\t\t\tconst pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\t\t\tconst pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\t\t\tvolumeStart *= pitchVolumeStart;\r\n\t\t\t\t\tvolumeEnd *= pitchVolumeEnd;\r\n\r\n\t\t\t\t\ttotalCarrierVolumeStart += amplitudeCurveStart;\r\n\t\t\t\t\ttotalCarrierVolumeEnd += amplitudeCurveEnd;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// modulator\r\n\t\t\t\t\tvolumeStart *= Config.sineWaveLength * 1.5;\r\n\t\t\t\t\tvolumeEnd *= Config.sineWaveLength * 1.5;\r\n\r\n\t\t\t\t\tsineVolumeBoostStart *= 1.0 - Math.min(1.0, amplitudeStart / 15);\r\n\t\t\t\t\tsineVolumeBoostEnd *= 1.0 - Math.min(1.0, amplitudeEnd / 15);\r\n\t\t\t\t}\r\n\t\t\t\tconst operatorEnvelope: Envelope = Config.envelopes[instrument.operators[i].envelope];\r\n\r\n\t\t\t\tvolumeStart *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\t\t\tvolumeEnd *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n\t\t\t\ttone.volumeStarts[i] = volumeStart;\r\n\t\t\t\ttone.volumeDeltas[i] = (volumeEnd - volumeStart) / runLength;\r\n\t\t\t}\r\n\r\n\t\t\tlet useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\r\n\t\t\tlet useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\r\n\t\t\tif (synth.isModActive(ModSetting.mstFMFeedback, false, channel, instrumentIdx)) {\r\n\t\t\t\tuseFeedbackAmplitudeStart *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, false) / 15.0;\r\n\t\t\t\tuseFeedbackAmplitudeEnd *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, true) / 15.0;\r\n\t\t\t}\r\n\r\n\t\t\tconst feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\r\n\t\t\tconst feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\r\n\t\t\tconst feedbackEnvelope: Envelope = Config.envelopes[instrument.feedbackEnvelope];\r\n\t\t\tlet feedbackStart: number = feedbackAmplitudeStart * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\t\tlet feedbackEnd: number = feedbackAmplitudeEnd * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\t\t\ttone.feedbackMult = feedbackStart;\r\n\t\t\ttone.feedbackDelta = (feedbackEnd - tone.feedbackMult) / runLength;\r\n\r\n\t\t\tconst volumeMult: number = baseVolume * instrumentVolumeMult;\r\n\t\t\ttone.volumeStart = filterVolumeStart * volumeMult * transitionVolumeStart * chordVolumeStart;\r\n\t\t\tconst volumeEnd: number = filterVolumeEnd * volumeMult * transitionVolumeEnd * chordVolumeEnd;\r\n\t\t\ttone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n\t\t\tsineVolumeBoostStart *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeStart / 15.0)) - 1.0) / 3.0;\r\n\t\t\tsineVolumeBoostEnd *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeEnd / 15.0)) - 1.0) / 3.0;\r\n\t\t\tsineVolumeBoostStart *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeStart - 1) / 2.0);\r\n\t\t\tsineVolumeBoostEnd *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeEnd - 1) / 2.0);\r\n\t\t\ttone.volumeStart *= 1.0 + sineVolumeBoostStart * 3.0;\r\n\t\t\ttone.volumeDelta *= 1.0 + (sineVolumeBoostStart + sineVolumeBoostEnd) * 1.5; // Volume boosts are averaged such that delta brings you to next target start boost.\r\n\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\t// Modulator value is used for data, so don't actually compute audio nonsense for it.\r\n\t\t\ttone.volumeStart = transitionVolumeStart;\r\n\t\t\tlet volumeEnd: number = transitionVolumeEnd;\r\n\r\n\t\t\ttone.volumeStart *= customVolumeStart;\r\n\t\t\tvolumeEnd *= customVolumeEnd;\r\n\r\n\t\t\ttone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n\t\t} else {\r\n\t\t\tlet detuneStart: number = instrument.detune / 25;\r\n\t\t\tlet detuneEnd: number = instrument.detune / 25;\r\n\t\t\tif (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n\t\t\t\tdetuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n\t\t\t\tdetuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tif (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n\t\t\t\tdetuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n\t\t\t\tdetuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tlet pitch: number = tone.pitches[0];\r\n\r\n\t\t\tif (tone.pitchCount > 1) {\r\n\t\t\t\tconst arpeggio: number = Math.floor(instrument.arpTime / Config.ticksPerArpeggio);\r\n\t\t\t\tif (chord.harmonizes) {\r\n\t\t\t\t\tconst intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n\t\t\t\t\ttone.intervalMult = Math.pow(2.0, intervalOffset / song.edo);\r\n\t\t\t\t\ttone.intervalVolumeMult = Math.pow(2.0, -intervalOffset / pitchDamping);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale;\r\n\t\t\tconst endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale;\r\n\t\t\tconst startFreq: number = Instrument.frequencyFromPitch(startPitch, song.centerFrequency, song.edo);\r\n\t\t\tconst pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\tconst pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\tlet settingsVolumeMultStart: number = baseVolume * filterVolumeStart;\r\n\t\t\tlet settingsVolumeMultEnd: number = baseVolume * filterVolumeEnd;\r\n\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\tsettingsVolumeMultStart *= Config.chipNoises[instrument.chipNoise].volume;\r\n\t\t\t\tsettingsVolumeMultEnd *= Config.chipNoises[instrument.chipNoise].volume;\r\n\t\t\t}\r\n\t\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tsettingsVolumeMultStart *= Config.chipWaves[instrument.chipWave].volume;\r\n\t\t\t\tsettingsVolumeMultEnd *= Config.chipWaves[instrument.chipWave].volume;\r\n\t\t\t}\r\n\t\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tsettingsVolumeMultStart *= Config.intervals[instrument.interval].volume;\r\n\t\t\t\tsettingsVolumeMultEnd *= Config.intervals[instrument.interval].volume;\r\n\t\t\t}\r\n\t\t\tif (instrument.type == InstrumentType.pwm) {\r\n\r\n\t\t\t\t// Check for PWM mods to this instrument\r\n\t\t\t\tlet pulseWidthModStart: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n\t\t\t\tlet pulseWidthModEnd: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstPulseWidth, false, channel, instrumentIdx)) {\r\n\t\t\t\t\tpulseWidthModStart = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, false)) / (Config.pulseWidthRange * 2);\r\n\t\t\t\t\tpulseWidthModEnd = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, true)) / (Config.pulseWidthRange * 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pulseEnvelope: Envelope = Config.envelopes[instrument.pulseEnvelope];\r\n\t\t\t\tconst pulseWidthStart: number = pulseWidthModStart * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\t\t\tconst pulseWidthEnd: number = pulseWidthModEnd * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n\t\t\t\ttone.pulseWidth = pulseWidthStart;\r\n\t\t\t\ttone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / runLength;\r\n\t\t\t}\r\n\r\n\t\t\ttone.phaseDeltas[0] = startFreq * sampleTime;\r\n\r\n\t\t\ttone.volumeStart = transitionVolumeStart * chordVolumeStart * pitchVolumeStart * settingsVolumeMultStart * instrumentVolumeMult;\r\n\t\t\tlet volumeEnd: number = transitionVolumeEnd * chordVolumeEnd * pitchVolumeEnd * settingsVolumeMultEnd * instrumentVolumeMult;\r\n\r\n\t\t\tif (filterEnvelope.type != EnvelopeType.custom && (instrument.type != InstrumentType.pwm || Config.envelopes[instrument.pulseEnvelope].type != EnvelopeType.custom)) {\r\n\t\t\t\ttone.volumeStart *= customVolumeStart;\r\n\t\t\t\tvolumeEnd *= customVolumeEnd;\r\n\t\t\t}\r\n\r\n\t\t\t// Check for mod-related volume delta\r\n\t\t\tif (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n\t\t\t\t// Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n\t\t\t\tconst startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n\t\t\t\tconst endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n\t\t\t\ttone.volumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n\t\t\t\tvolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n\t\t\t}\r\n\t\t\t// Check for SONG mod-related volume delta\r\n\t\t\tif (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n\t\t\t\ttone.volumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n\t\t\t\tvolumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n\t\t\t}\r\n\r\n\t\t\ttone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\t\t}\r\n\r\n\t\ttone.phaseDeltaScale = Math.pow(2.0, ((intervalEnd - intervalStart) * intervalScale / song.edo) / runLength);\r\n\t}\r\n\r\n\tpublic static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\r\n\t\tlet effect: number = 0;\r\n\t\tfor (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\r\n\t\t\teffect += Math.sin(Math.PI * 2 * secondsIntoBar / vibratoPeriodSeconds);\r\n\t\t}\r\n\t\treturn effect;\r\n\t}\r\n\r\n\tprivate static readonly fmSynthFunctionCache: Dictionary<Function> = {};\r\n\r\n\tprivate static getInstrumentSynthFunction(instrument: Instrument): Function {\r\n\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\tconst fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\r\n\t\t\tif (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\r\n\t\t\t\tconst synthSource: string[] = [];\r\n\r\n\t\t\t\tfor (const line of Synth.fmSourceTemplate) {\r\n\t\t\t\t\tif (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n\t\t\t\t\t\tconst outputs: string[] = [];\r\n\t\t\t\t\t\tfor (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\r\n\t\t\t\t\t\t\toutputs.push(\"operator\" + j + \"Scaled\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsynthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n\t\t\t\t\t} else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n\t\t\t\t\t\tfor (let j: number = Config.operatorCount - 1; j >= 0; j--) {\r\n\t\t\t\t\t\t\tfor (const operatorLine of Synth.operatorSourceTemplate) {\r\n\t\t\t\t\t\t\t\tif (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n\t\t\t\t\t\t\t\t\tlet modulators = \"\";\r\n\t\t\t\t\t\t\t\t\tfor (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\r\n\t\t\t\t\t\t\t\t\t\tmodulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\r\n\t\t\t\t\t\t\t\t\tif (feedbackIndices.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\tmodulators += \" + feedbackMult * (\";\r\n\t\t\t\t\t\t\t\t\t\tconst feedbacks: string[] = [];\r\n\t\t\t\t\t\t\t\t\t\tfor (const modulatorNumber of feedbackIndices) {\r\n\t\t\t\t\t\t\t\t\t\t\tfeedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tmodulators += feedbacks.join(\" + \") + \")\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tsynthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsynthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (line.indexOf(\"#\") != -1) {\r\n\t\t\t\t\t\tfor (let j = 0; j < Config.operatorCount; j++) {\r\n\t\t\t\t\t\t\tsynthSource.push(line.replace(/\\#/g, j + \"\"));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsynthSource.push(line);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log(synthSource.join(\"\\n\"));\r\n\r\n\t\t\t\tSynth.fmSynthFunctionCache[fingerprint] = new Function(\"synth\", \"data\", \"stereoBufferIndex\", \"stereoBufferLength\", \"runLength\", \"tone\", \"instrument\", synthSource.join(\"\\n\"));\r\n\t\t\t}\r\n\t\t\treturn Synth.fmSynthFunctionCache[fingerprint];\r\n\t\t} else if (instrument.type == InstrumentType.chip) {\r\n\t\t\treturn Synth.chipSynth;\r\n\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\treturn Synth.chipSynth;\r\n\t\t} else if (instrument.type == InstrumentType.harmonics) {\r\n\t\t\treturn Synth.harmonicsSynth;\r\n\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\treturn Synth.pulseWidthSynth;\r\n\t\t} else if (instrument.type == InstrumentType.noise) {\r\n\t\t\treturn Synth.noiseSynth;\r\n\t\t} else if (instrument.type == InstrumentType.spectrum) {\r\n\t\t\treturn Synth.spectrumSynth;\r\n\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\treturn Synth.drumsetSynth;\r\n\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\treturn Synth.modSynth;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized instrument type: \" + instrument.type);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static chipSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument, edo: number): void {\r\n\t\tvar wave: Float64Array;\r\n\t\tvar volumeScale: number;\r\n\r\n\t\tconst isCustomWave: boolean = (instrument.type == InstrumentType.customChipWave);\r\n\r\n\t\tif (!isCustomWave) {\r\n\t\t\twave = Config.chipWaves[instrument.chipWave].samples;\r\n\t\t\tvolumeScale = 1.0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\twave = instrument.customChipWaveIntegral;\r\n\t\t\t// Integrals for custom chip wave can get rather big. This \"zero point\" can be config'ed later.\r\n\t\t\tvolumeScale = 0.1;\r\n\t\t}\r\n\r\n\t\tconst waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n\t\tconst intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / edo);\r\n\t\tconst intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / edo) * tone.intervalMult;\r\n\t\tconst intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n\t\tif (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n\t\tconst deltaRatio: number = intervalB / intervalA;\r\n\t\tlet phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n\t\tlet phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n\t\tlet phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\tlet prevWaveIntegralA: number = wave[indexA];\r\n\t\tlet prevWaveIntegralB: number = wave[indexB];\r\n\t\tprevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n\t\tprevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\r\n\t\t//console.log(\"S: \" + stereoBufferIndex + \" P: \" + stopIndex);\r\n\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\r\n\t\t\tphaseA += phaseDeltaA;\r\n\t\t\tphaseB += phaseDeltaB;\r\n\r\n\t\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\t\tlet nextWaveIntegralA: number = wave[indexA];\r\n\t\t\tlet nextWaveIntegralB: number = wave[indexB];\r\n\t\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\t\tnextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n\t\t\tnextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n\t\t\tlet waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n\t\t\tlet waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n\t\t\tprevWaveIntegralA = nextWaveIntegralA;\r\n\t\t\tprevWaveIntegralB = nextWaveIntegralB;\r\n\r\n\t\t\tconst combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDeltaA *= phaseDeltaScale;\r\n\t\t\tphaseDeltaB *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume * volumeScale;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\t//debugString += \",\" + data.subarray(stereoBufferIndex - runLength, stereoBufferIndex).toString();\r\n\t\t//console.log(stereoBufferIndex);\r\n\r\n\t\ttone.phases[0] = phaseA / waveLength;\r\n\t\ttone.phases[1] = phaseB / waveLength;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\r\n\t}\r\n\r\n\r\n\tprivate static harmonicsSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument, edo: number): void {\r\n\t\tconst wave: Float32Array = instrument.harmonicsWave.getCustomWave();\r\n\t\tconst waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n\t\tconst intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / edo);\r\n\t\tconst intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / edo) * tone.intervalMult;\r\n\t\tconst intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n\t\tif (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n\t\tconst deltaRatio: number = intervalB / intervalA;\r\n\t\tlet phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n\t\tlet phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n\t\tlet phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\tlet prevWaveIntegralA: number = wave[indexA];\r\n\t\tlet prevWaveIntegralB: number = wave[indexB];\r\n\t\tprevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n\t\tprevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\r\n\t\t\tphaseA += phaseDeltaA;\r\n\t\t\tphaseB += phaseDeltaB;\r\n\r\n\t\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\t\tlet nextWaveIntegralA: number = wave[indexA];\r\n\t\t\tlet nextWaveIntegralB: number = wave[indexB];\r\n\t\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\t\tnextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n\t\t\tnextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n\t\t\tlet waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n\t\t\tlet waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n\r\n\t\t\tprevWaveIntegralA = nextWaveIntegralA;\r\n\t\t\tprevWaveIntegralB = nextWaveIntegralB;\r\n\r\n\t\t\tconst combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDeltaA *= phaseDeltaScale;\r\n\t\t\tphaseDeltaB *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phaseA / waveLength;\r\n\t\ttone.phases[1] = phaseB / waveLength;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static pulseWidthSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0];\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phase: number = (tone.phases[0] % 1);\r\n\r\n\t\tlet pulseWidth: number = tone.pulseWidth;\r\n\t\tconst pulseWidthDelta: number = tone.pulseWidthDelta;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\r\n\t\t\tconst sawPhaseA: number = phase % 1;\r\n\t\t\tconst sawPhaseB: number = (phase + pulseWidth) % 1;\r\n\r\n\t\t\tlet pulseWave: number = sawPhaseB - sawPhaseA;\r\n\r\n\t\t\t// This a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing.\r\n\t\t\tif (sawPhaseA < phaseDelta) {\r\n\t\t\t\tvar t = sawPhaseA / phaseDelta;\r\n\t\t\t\tpulseWave += (t + t - t * t - 1) * 0.5;\r\n\t\t\t} else if (sawPhaseA > 1.0 - phaseDelta) {\r\n\t\t\t\tvar t = (sawPhaseA - 1.0) / phaseDelta;\r\n\t\t\t\tpulseWave += (t + t + t * t + 1) * 0.5;\r\n\t\t\t}\r\n\t\t\tif (sawPhaseB < phaseDelta) {\r\n\t\t\t\tvar t = sawPhaseB / phaseDelta;\r\n\t\t\t\tpulseWave -= (t + t - t * t - 1) * 0.5;\r\n\t\t\t} else if (sawPhaseB > 1.0 - phaseDelta) {\r\n\t\t\t\tvar t = (sawPhaseB - 1.0) / phaseDelta;\r\n\t\t\t\tpulseWave -= (t + t + t * t + 1) * 0.5;\r\n\t\t\t}\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (pulseWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tpulseWidth += pulseWidthDelta;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phase;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static fmSourceTemplate: string[] = (`\r\nconst sineWave = beepbox.Config.sineWave;\r\n\r\nlet phaseDeltaScale = +tone.phaseDeltaScale;\r\n// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\r\nlet operator#Phase\t   = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\r\nlet operator#PhaseDelta  = +tone.phaseDeltas[#];\r\nlet operator#OutputMult  = +tone.volumeStarts[#];\r\nconst operator#OutputDelta = +tone.volumeDeltas[#];\r\nlet operator#Output\t  = +tone.feedbackOutputs[#];\r\nlet feedbackMult\t\t = +tone.feedbackMult;\r\nconst feedbackDelta\t\t= +tone.feedbackDelta;\r\nlet volume = +tone.volumeStart;\r\nconst volumeDelta = +tone.volumeDelta;\r\n\r\nconst isFirstOrder = tone.isFirstOrder;\r\nlet filter1 = +tone.filter;\r\nlet filter2 = isFirstOrder ? 1.0 : filter1;\r\nconst filterScale1 = +tone.filterScale;\r\nconst filterScale2 = isFirstOrder ? 1.0 : filterScale1;\r\nlet filterResonance = tone.filterResonanceStart;\r\nlet filterResonanceDelta = tone.filterResonanceDelta;\r\nlet filterSample0 = +tone.filterSample0;\r\nlet filterSample1 = +tone.filterSample1;\r\n\r\nconst stopIndex = stereoBufferIndex + runLength;\r\nstereoBufferIndex += tone.stereoOffset;\r\nlet stereoVolumeL = tone.stereoVolumeLStart;\r\nlet stereoVolumeLDelta = tone.stereoVolumeLDelta;\r\nlet stereoVolumeR = tone.stereoVolumeRStart;\r\nlet stereoVolumeRDelta = tone.stereoVolumeRDelta;\r\nlet stereoDelay = tone.stereoDelayStart;\r\nlet stereoDelayDelta = tone.stereoDelayDelta;\r\nlet delays = [];\r\nwhile (stereoBufferIndex < stopIndex) {\r\n// INSERT OPERATOR COMPUTATION HERE\r\nconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\r\n\r\nconst feedback = filterResonance + filterResonance / (1.0 - filter1);\r\nfilterSample0 += filter1 * (fmOutput - filterSample0 + feedback * (filterSample0 - filterSample1));\r\nfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\nfeedbackMult += feedbackDelta;\r\noperator#OutputMult += operator#OutputDelta;\r\noperator#Phase += operator#PhaseDelta;\r\noperator#PhaseDelta *= phaseDeltaScale;\r\nfilter1 *= filterScale1;\r\nfilter2 *= filterScale2;\r\nfilterResonance += filterResonanceDelta;\r\n\r\nconst output = filterSample1 * volume;\r\nvolume += volumeDelta;\r\n\r\n//const absStereoDelay: number = Math.abs(stereoDelay);\r\n//const fracStereoDelay: number = absStereoDelay % 1;\r\n//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\ndelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\ndata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\ndata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\ndata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\ndata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\nstereoVolumeL += stereoVolumeLDelta;\r\nstereoVolumeR += stereoVolumeRDelta;\r\nstereoDelay += stereoDelayDelta;\r\n\r\nstereoBufferIndex += 2;\r\n}\r\n\r\ntone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\r\ntone.feedbackOutputs[#] = operator#Output;\r\n\r\nconst epsilon = (1.0e-24);\r\nif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\nif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\ntone.filterSample0 = filterSample0;\r\ntone.filterSample1 = filterSample1;\r\n`).split(\"\\n\");\r\n\r\n\tprivate static operatorSourceTemplate: string[] = (`\r\nconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\r\nconst operator#PhaseInt = operator#PhaseMix|0;\r\nconst operator#Index\t= operator#PhaseInt & ` + Config.sineWaveMask + `;\r\nconst operator#Sample   = sineWave[operator#Index];\r\noperator#Output\t   = operator#Sample + (sineWave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\r\nconst operator#Scaled   = operator#OutputMult * operator#Output;\r\n`).split(\"\\n\");\r\n\r\n\tprivate static noiseSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tlet wave: Float32Array = instrument.getDrumWave();\r\n\t\tlet phaseDelta: number = +tone.phaseDeltas[0];\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n\t\tif (tone.phases[0] == 0) {\r\n\t\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\r\n\t\t\tphase = Math.random() * Config.chipNoiseLength;\r\n\t\t}\r\n\t\tlet sample: number = +tone.sample;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst pitchRelativefilter: number = Math.min(1.0, tone.phaseDeltas[0] * Config.chipNoises[instrument.chipNoise].pitchFilterMult);\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\t\t\tconst waveSample: number = wave[phase & 0x7fff];\r\n\r\n\t\t\tsample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phase / Config.chipNoiseLength;\r\n\t\ttone.sample = sample;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static spectrumSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tlet wave: Float32Array = instrument.getDrumWave();\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0] * (1 << 7);\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet sample: number = +tone.sample;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\r\n\t\tif (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n\t\tconst pitchRelativefilter: number = Math.min(1.0, phaseDelta);\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\t\t\tconst phaseInt: number = phase | 0;\r\n\t\t\tconst index: number = phaseInt & 0x7fff;\r\n\t\t\tlet waveSample: number = wave[index];\r\n\t\t\tconst phaseRatio: number = phase - phaseInt;\r\n\t\t\twaveSample += (wave[index + 1] - waveSample) * phaseRatio;\r\n\r\n\t\t\tsample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phase / Config.chipNoiseLength;\r\n\t\ttone.sample = sample;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static drumsetSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument, edo: number): void {\r\n\t\tlet wave: Float32Array = instrument.getDrumsetWave(tone.drumsetPitch, edo);\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0] / Instrument.drumsetIndexReferenceDelta(tone.drumsetPitch);\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet sample: number = +tone.sample;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\r\n\t\tif (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\t\t\tconst phaseInt: number = phase | 0;\r\n\t\t\tconst index: number = phaseInt & 0x7fff;\r\n\t\t\tsample = wave[index];\r\n\t\t\tconst phaseRatio: number = phase - phaseInt;\r\n\t\t\tsample += (wave[index + 1] - sample) * phaseRatio;\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\t\ttone.phases[0] = phase / Config.chipNoiseLength;\r\n\t\ttone.sample = sample;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static modSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\t// Note: present modulator value is tone.volumeStart.\r\n\r\n\t\tif (!synth.song) return;\r\n\r\n\t\tlet mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\t\tlet setting: ModSetting = instrument.modSettings[mod];\r\n\r\n\t\tsynth.setModValue(tone.customVolumeStart, tone.customVolumeEnd, mod, instrument, setting);\r\n\r\n\t\t// Reset arps, but only at the start of the note\r\n\t\tif (setting == ModSetting.mstResetArpeggio && synth.tick == 0 && tone.noteStart == synth.beat * Config.partsPerBeat + synth.part) {\r\n\t\t\tsynth.song.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].arpTime = 0;\r\n\t\t}\r\n\t\telse if (setting == ModSetting.mstNextBar) {\r\n\t\t\tsynth.wantToSkip = true;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static findRandomZeroCrossing(wave: Float32Array): number {\r\n\t\tlet phase: number = Math.random() * Config.chipNoiseLength;\r\n\r\n\t\t// Spectrum and drumset waves sounds best when they start at a zero crossing,\r\n\t\t// otherwise they pop. Try to find a zero crossing.\r\n\t\tlet indexPrev: number = phase & 0x7fff;\r\n\t\tlet wavePrev: number = wave[indexPrev];\r\n\t\tconst stride: number = 16;\r\n\t\tfor (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\r\n\t\t\tconst indexNext: number = (indexPrev + stride) & 0x7fff;\r\n\t\t\tconst waveNext: number = wave[indexNext];\r\n\t\t\tif (wavePrev * waveNext <= 0.0) {\r\n\t\t\t\t// Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\r\n\t\t\t\tfor (let i: number = 0; i < 16; i++) {\r\n\t\t\t\t\tconst innerIndexNext: number = (indexPrev + 1) & 0x7fff;\r\n\t\t\t\t\tconst innerWaveNext: number = wave[innerIndexNext];\r\n\t\t\t\t\tif (wavePrev * innerWaveNext <= 0.0) {\r\n\t\t\t\t\t\t// Found the zero crossing again! Now let's find the exact intersection.\r\n\t\t\t\t\t\tconst slope: number = innerWaveNext - wavePrev;\r\n\t\t\t\t\t\tphase = indexPrev;\r\n\t\t\t\t\t\tif (Math.abs(slope) > 0.00000001) {\r\n\t\t\t\t\t\t\tphase += -wavePrev / slope;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tphase = Math.max(0, phase) % Config.chipNoiseLength;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tindexPrev = innerIndexNext;\r\n\t\t\t\t\t\twavePrev = innerWaveNext;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tindexPrev = indexNext;\r\n\t\t\t\twavePrev = waveNext;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn phase;\r\n\t}\r\n\r\n\tpublic static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\r\n\t\treturn (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\r\n\t}\r\n\tpublic static volumeMultToInstrumentVolume(volumeMult: number): number {\r\n\t\treturn (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\r\n\t}\r\n\tpublic static expressionToVolumeMult(expression: number): number {\r\n\t\treturn Math.pow(Math.max(0.0, expression) / 6.0, 1.5);\r\n\t}\r\n\tpublic static volumeMultToExpression(volumeMult: number): number {\r\n\t\treturn Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * 6.0;\r\n\t}\r\n\r\n\tprivate getSamplesPerTick(): number {\r\n\t\tif (this.song == null) return 0;\r\n\t\tlet beatsPerMinute: number = this.song.getBeatsPerMinute();\r\n\t\tif (this.isModActive(ModSetting.mstTempo, true)) {\r\n\t\t\tbeatsPerMinute = this.getModValue(ModSetting.mstTempo, true);\r\n\t\t}\r\n\t\treturn this.getSamplesPerTickSpecificBPM(beatsPerMinute);\r\n\t}\r\n\r\n\tprivate getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\r\n\t\tconst beatsPerSecond: number = beatsPerMinute / 60.0;\r\n\t\tconst partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\r\n\t\tconst tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\r\n\t\treturn this.samplesPerSecond / tickPerSecond;\r\n\t}\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class BarScrollBar {\r\n\tprivate readonly _editorWidth: number = 512;\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect(\"rect\", { fill: ColorConfig.playhead, x: 0, y: 0, width: 2, height: this._editorHeight });\r\n\tprivate readonly _notches: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4 });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2 });\r\n\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate _renderedPlayhead: number = -1;\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight },\r\n\t\tthis._notches,\r\n\t\tthis._handle,\r\n\t\tthis._handleHighlight,\r\n\t\tthis._leftHighlight,\r\n\t\tthis._rightHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _notchSpace: number;\r\n\tprivate _renderedNotchCount: number = -1;\r\n\tprivate _renderedBarPos: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _trackContainer: HTMLDivElement) {\r\n\t\tconst center: number = this._editorHeight * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowHeight: number = 6;\r\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\r\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t// Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\r\n\t\t//this._trackContainer.addEventListener(\"scroll\", this._onScroll, {capture: false, passive: true});\r\n\t\t(<Function>this._trackContainer.addEventListener)(\"scroll\", this._onScroll, { capture: false, passive: true });\r\n\t}\r\n\r\n\tpublic animatePlayhead = (): void => {\r\n\t\tconst playhead = Math.min(512, Math.max(0, (this._notchSpace * this._doc.synth.playhead - 2)));\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onScroll = (event: Event): void => {\r\n\t\tthis._doc.barScrollPos = (this._trackContainer.scrollLeft / this._doc.getBarWidth());\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._dragging) {\r\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tpublic changePos(offset: number) {\r\n\t\twhile (Math.abs(offset) >= 1) {\r\n\r\n\t\t\tif (offset < 0) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toffset += (offset > 0) ? -1 : 1;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._dragging && this._mouseDown) {\r\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t} else {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showleftHighlight: boolean = false;\r\n\t\tlet showRightHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\r\n\t\t\t\tshowleftHighlight = true;\r\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\t\tshowRightHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tthis._notchSpace = (this._editorWidth - 1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\r\n\r\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\r\n\t\tif (resized) {\r\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\r\n\r\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\r\n\r\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\r\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\r\n\t\t\t\tthis._notches.appendChild(SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2 }));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (resized || this._renderedBarPos != this._doc.barScrollPos) {\r\n\t\t\tthis._renderedBarPos = this._doc.barScrollPos;\r\n\t\t\tthis._handle.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handle.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t\tthis._handleHighlight.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handleHighlight.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t\tthis._trackContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Change {\r\n\tprivate _noop: boolean = true;\r\n\r\n\tprotected _didSomething(): void {\r\n\t\tthis._noop = false;\r\n\t}\r\n\r\n\tpublic isNoop(): boolean {\r\n\t\treturn this._noop;\r\n\t}\r\n\r\n\tpublic commit(): void { }\r\n}\r\n\r\nexport class UndoableChange extends Change {\r\n\tprivate _reversed: boolean;\r\n\tprivate _doneForwards: boolean;\r\n\tconstructor(reversed: boolean) {\r\n\t\tsuper();\r\n\t\tthis._reversed = reversed;\r\n\t\tthis._doneForwards = !reversed;\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t} else {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t} else {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t}\r\n\t}\r\n\r\n\t// isDoneForwards() returns whether or not the Change was most recently \r\n\t// performed forwards or backwards. If the change created something, do not \r\n\t// delete it in the change destructor unless the Change was performed \r\n\t// backwards: \r\n\tprotected _isDoneForwards(): boolean {\r\n\t\treturn this._doneForwards;\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\r\n\t}\r\n}\r\n\r\nexport class ChangeGroup extends Change {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic append(change: Change): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSequence extends UndoableChange {\r\n\tprivate _changes: UndoableChange[];\r\n\tconstructor(changes?: UndoableChange[]) {\r\n\t\tsuper(false);\r\n\t\tif (changes == undefined) {\r\n\t\t\tthis._changes = [];\r\n\t\t} else {\r\n\t\t\tthis._changes = changes.concat();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic append(change: UndoableChange): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._changes[this._changes.length] = change;\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\r\n\t\t\tthis._changes[i].redo();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tfor (let i: number = this._changes.length - 1; i >= 0; i--) {\r\n\t\t\tthis._changes[i].undo();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Algorithm, Dictionary, InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, ModStatus, ModSetting } from \"../synth/synth\";\r\nimport { Preset, PresetCategory, EditorConfig } from \"./EditorConfig\";\r\nimport { Change, ChangeGroup, ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\r\n\tfor (const note of pattern.notes) {\r\n\t\tfor (const pitch of note.pitches) {\r\n\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\tconst key: number = (pitch + pin.interval) % 12;\r\n\t\t\t\tif (!flags[key]) {\r\n\t\t\t\t\tflags[key] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number): number[] {\r\n\tconst newScaleFlags: ReadonlyArray<boolean> = Config.scales[newScaleValue].flags;\r\n\tconst oldScale: number[] = [];\r\n\tconst newScale: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tif (oldScaleFlags[i]) oldScale.push(i);\r\n\t\tif (newScaleFlags[i]) newScale.push(i);\r\n\t}\r\n\tconst largerToSmaller: boolean = oldScale.length > newScale.length;\r\n\tconst smallerScale: number[] = largerToSmaller ? newScale : oldScale;\r\n\tconst largerScale: number[] = largerToSmaller ? oldScale : newScale;\r\n\r\n\tconst roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\r\n\tlet bestScore: number = Number.MAX_SAFE_INTEGER;\r\n\tlet bestIndexMap: number[] = [];\r\n\tconst stack: number[][] = [[0]]; // Root always maps to root.\r\n\r\n\twhile (stack.length > 0) {\r\n\t\tconst indexMap: number[] = stack.pop()!;\r\n\r\n\t\tif (indexMap.length == smallerScale.length) {\r\n\t\t\t// Score this mapping.\r\n\t\t\tlet score: number = 0;\r\n\t\t\tfor (let i: number = 0; i < indexMap.length; i++) {\r\n\t\t\t\tscore += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\r\n\t\t\t\tif (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\r\n\t\t\t\t\t// Penalize changing roles.\r\n\t\t\t\t\tscore += 0.75;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (bestScore > score) {\r\n\t\t\t\tbestScore = score;\r\n\t\t\t\tbestIndexMap = indexMap;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Recursively choose next indices for mapping.\r\n\t\t\tconst lowIndex: number = indexMap[indexMap.length - 1] + 1;\r\n\t\t\tconst highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\r\n\t\t\tfor (let i: number = lowIndex; i <= highIndex; i++) {\r\n\t\t\t\tstack.push(indexMap.concat(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst sparsePitchMap: number[][] = [];\r\n\tfor (let i: number = 0; i < bestIndexMap.length; i++) {\r\n\t\tconst smallerScalePitch = smallerScale[i];\r\n\t\tconst largerScalePitch = largerScale[bestIndexMap[i]];\r\n\t\tsparsePitchMap[i] = largerToSmaller\r\n\t\t\t? [largerScalePitch, smallerScalePitch]\r\n\t\t\t: [smallerScalePitch, largerScalePitch];\r\n\t}\r\n\r\n\t// To make it easier to wrap around.\r\n\tsparsePitchMap.push([12, 12]);\r\n\tnewScale.push(12);\r\n\r\n\tlet sparseIndex: number = 0;\r\n\tconst fullPitchMap: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tconst oldLow: number = sparsePitchMap[sparseIndex][0];\r\n\t\tconst newLow: number = sparsePitchMap[sparseIndex][1];\r\n\t\tconst oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\r\n\t\tconst newHigh: number = sparsePitchMap[sparseIndex + 1][1];\r\n\t\tif (i == oldHigh - 1) sparseIndex++;\r\n\r\n\t\tconst transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\r\n\r\n\t\tlet nearestPitch: number = 0;\r\n\t\tlet nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\r\n\t\tfor (const newPitch of newScale) {\r\n\t\t\tlet distance: number = Math.abs(newPitch - transformedPitch);\r\n\t\t\tif (roles[newPitch] != roles[i]) {\r\n\t\t\t\t// Again, penalize changing roles.\r\n\t\t\t\tdistance += 0.1;\r\n\t\t\t}\r\n\t\t\tif (nearestPitchDistance > distance) {\r\n\t\t\t\tnearestPitchDistance = distance;\r\n\t\t\t\tnearestPitch = newPitch;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfullPitchMap[i] = nearestPitch;\r\n\t}\r\n\r\n\treturn fullPitchMap;\r\n}\r\n\r\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\r\n\t// Create a new note, and interpret the pitch bend and expression events\r\n\t// to determine where we need to insert pins to control interval and volume.\r\n\tconst newNote: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\tnewNotes.push(newNote);\r\n\tnewNote.pins.length = 0;\r\n\tnewNote.pitches.length = 0;\r\n\tconst newNoteLength: number = noteEndPart - noteStartPart;\r\n\r\n\tfor (const pitch of oldNote.pitches) {\r\n\t\tnewNote.pitches.push(pitch);\r\n\t}\r\n\r\n\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\tconst pin: NotePin = oldNote.pins[pinIndex];\r\n\t\tconst newPinTime: number = pin.time + timeOffset;\r\n\t\tif (newPinTime < 0) {\r\n\t\t\tif (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst nextPin: NotePin = oldNote.pins[pinIndex + 1];\r\n\t\t\tconst nextPinTime: number = nextPin.time + timeOffset;\r\n\t\t\tif (nextPinTime > 0) {\r\n\t\t\t\t// Insert an interpolated pin at the start of the new note.\r\n\t\t\t\tconst ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.volume + ratio * (nextPin.volume - pin.volume))));\r\n\r\n\t\t\t}\r\n\t\t} else if (newPinTime <= newNoteLength) {\r\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.volume));\r\n\t\t} else {\r\n\t\t\tif (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst prevPin: NotePin = oldNote.pins[pinIndex - 1];\r\n\t\t\tconst prevPinTime: number = prevPin.time + timeOffset;\r\n\t\t\tif (prevPinTime < newNoteLength) {\r\n\t\t\t\t// Insert an interpolated pin at the end of the new note.\r\n\t\t\t\tconst ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.volume + ratio * (pin.volume - prevPin.volume))));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\r\n\tconst offsetInterval: number = newNote.pins[0].interval;\r\n\tfor (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\r\n\t\tnewNote.pitches[pitchIdx] += offsetInterval;\r\n\t}\r\n\tfor (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\r\n\t\tnewNote.pins[pinIdx].interval -= offsetInterval;\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = []\r\n\r\n\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\tconst oldChannel: Channel = doc.song.channels[channelIndex];\r\n\t\t\tconst newChannel: Channel = new Channel();\r\n\r\n\t\t\tif (channelIndex < doc.song.pitchChannelCount) {\r\n\t\t\t\tpitchChannels.push(newChannel);\r\n\t\t\t} else if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n\t\t\t\tnoiseChannels.push(newChannel);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmodChannels.push(newChannel);\r\n\t\t\t}\r\n\r\n\t\t\tnewChannel.muted = oldChannel.muted;\r\n\t\t\tnewChannel.octave = oldChannel.octave;\r\n\t\t\tnewChannel.name = oldChannel.name;\r\n\r\n\t\t\tfor (const instrument of oldChannel.instruments) {\r\n\t\t\t\tnewChannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tconst oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\tconst newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\r\n\t\t\tlet currentBar: number = -1;\r\n\t\t\tlet pattern: Pattern | null = null;\r\n\r\n\t\t\tfor (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\r\n\t\t\t\tconst oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\r\n\t\t\t\tif (oldPattern != null) {\r\n\t\t\t\t\tconst oldBarStart: number = oldBar * oldPartsPerBar;\r\n\t\t\t\t\tfor (const oldNote of oldPattern.notes) {\r\n\r\n\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\r\n\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\r\n\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * newPartsPerBar;\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar < bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tnewChannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = newChannel.patterns.length;\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = oldPattern.instrument;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// This is a consideration to allow arbitrary note sequencing, e.g. for mod channels (so the pattern being used can jump around)\r\n\t\t\t\t\t\t\t\tpattern = newChannel.patterns[newChannel.bars[bar] - 1];\r\n\r\n\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\tremoveDuplicatePatterns(modChannels);\r\n\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t}\r\n}\r\n\r\nexport class ChangePins extends UndoableChange {\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(protected _doc: SongDocument | null, protected _note: Note) {\r\n\t\tsuper(false);\r\n\t\tthis._oldStart = this._note.start;\r\n\t\tthis._oldEnd = this._note.end;\r\n\t\tthis._newStart = this._note.start;\r\n\t\tthis._newEnd = this._note.end;\r\n\t\tthis._oldPins = this._note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = this._note.pitches;\r\n\t\tthis._newPitches = [];\r\n\t}\r\n\r\n\tprotected _finishSetup(): void {\r\n\t\tfor (let i: number = 0; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i].time >= this._newPins[i + 1].time) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst firstInterval: number = this._newPins[0].interval;\r\n\t\tconst firstTime: number = this._newPins[0].time;\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tthis._newPitches[i] = this._oldPitches[i] + firstInterval;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this._newPins.length; i++) {\r\n\t\t\tthis._newPins[i].interval -= firstInterval;\r\n\t\t\tthis._newPins[i].time -= firstTime;\r\n\t\t}\r\n\t\tthis._newStart = this._oldStart + firstTime;\r\n\t\tthis._newEnd = this._newStart + this._newPins[this._newPins.length - 1].time;\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._note.start = this._newStart;\r\n\t\tthis._note.end = this._newEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._note.start = this._oldStart;\r\n\t\tthis._note.end = this._oldEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomizeInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.preset != instrument.type) {\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomWave extends Change {\r\n\tconstructor(doc: SongDocument, newArray: Float64Array) {\r\n\t\tsuper();\r\n\t\tconst oldArray: Float64Array = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customChipWave;\r\n\t\tvar comparisonResult: boolean = true;\r\n\t\tfor (let i: number = 0; i < oldArray.length; i++) {\r\n\t\t\tif (oldArray[i] != newArray[i]) {\r\n\t\t\t\tcomparisonResult = false;\r\n\t\t\t\ti = oldArray.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (comparisonResult == false) {\r\n\t\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\t\tfor (let i: number = 0; i < newArray.length; i++) {\r\n\t\t\t\tinstrument.customChipWave[i] = newArray[i];\r\n\t\t\t}\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tsum += instrument.customChipWave[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / instrument.customChipWave.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = instrument.customChipWave[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePreset extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.preset;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(newValue);\r\n\t\t\tif (preset != null) {\r\n\t\t\t\tif (preset.customType != undefined) {\r\n\t\t\t\t\tinstrument.type = preset.customType;\r\n\t\t\t\t\tif (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].isCustomInterval) {\r\n\t\t\t\t\t\tinstrument.chord = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (preset.settings != undefined) {\r\n\t\t\t\t\tconst tempVolume: number = instrument.volume;\r\n\t\t\t\t\tconst tempPan: number = instrument.pan;\r\n\t\t\t\t\tconst tempPanDelay: number = instrument.panDelay;\r\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), doc.song.getChannelIsMod(doc.channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\tinstrument.volume = tempVolume;\r\n\t\t\t\t\tinstrument.pan = tempPan;\r\n\t\t\t\t\tinstrument.panDelay = tempPanDelay;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinstrument.preset = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeRandomGeneratedInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\r\n\t\tinterface ItemWeight<T> {\r\n\t\t\treadonly item: T;\r\n\t\t\treadonly weight: number;\r\n\t\t}\r\n\t\tfunction selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\r\n\t\t\tlet total: number = 0;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\ttotal += entry.weight;\r\n\t\t\t}\r\n\t\t\tlet random: number = Math.random() * total;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\trandom -= entry.weight;\r\n\t\t\t\tif (random <= 0.0) return entry.item;\r\n\t\t\t}\r\n\t\t\treturn entries[(Math.random() * entries.length) | 0].item;\r\n\t\t}\r\n\t\tfunction selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\r\n\t\t\tconst entries: Array<ItemWeight<number>> = [];\r\n\t\t\tfor (let i: number = min; i <= max; i++) {\r\n\t\t\t\tentries.push({ item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0) });\r\n\t\t\t}\r\n\t\t\treturn selectWeightedRandom(entries);\r\n\t\t}\r\n\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (isNoise) {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.noise, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 3 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(4, Config.filterCutoffRange - 1, Config.filterCutoffRange - 2, 2);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 2 },\r\n\t\t\t\t{ item: \"punch\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 8 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 3\", weight: 4 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 2 },\r\n\t\t\t\t{ item: \"slide\", weight: 1 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 2 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 8 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n\t\t\t\t{ item: \"soft fade\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 3 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 4 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.noise: {\r\n\t\t\t\t\tinstrument.chipNoise = (Math.random() * Config.chipNoises.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrumGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tspectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = spectrumGenerators[(Math.random() * spectrumGenerators.length) | 0];\r\n\t\t\t\t\tconst spectrum: number[] = generator();\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled noise instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.chip, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.pwm, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.harmonics, weight: 6 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.fm, weight: 4 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(2, Config.filterCutoffRange - 1, 7, 1.5);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n\t\t\t\t{ item: \"decay 3\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 4 },\r\n\t\t\t\t{ item: \"slide\", weight: 2 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 4 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 4 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n\t\t\t\t{ item: \"soft fade\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 10 },\r\n\t\t\t\t{ item: \"chorus\", weight: 2 },\r\n\t\t\t\t{ item: \"chorus & reverb\", weight: 2 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 7 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tif (type != InstrumentType.spectrum) {\r\n\t\t\t\tinstrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"none\", weight: 6 },\r\n\t\t\t\t\t{ item: \"light\", weight: 2 },\r\n\t\t\t\t\t{ item: \"delayed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"heavy\", weight: 1 },\r\n\t\t\t\t\t{ item: \"shaky\", weight: 2 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tif (type == InstrumentType.chip || type == InstrumentType.harmonics) {\r\n\t\t\t\tinstrument.interval = Config.intervals.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"union\", weight: 10 },\r\n\t\t\t\t\t{ item: \"shimmer\", weight: 5 },\r\n\t\t\t\t\t{ item: \"hum\", weight: 4 },\r\n\t\t\t\t\t{ item: \"honky tonk\", weight: 3 },\r\n\t\t\t\t\t{ item: \"dissonant\", weight: 1 },\r\n\t\t\t\t\t{ item: \"fifth\", weight: 1 },\r\n\t\t\t\t\t{ item: \"octave\", weight: 2 },\r\n\t\t\t\t\t{ item: \"bowed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"piano\", weight: 5 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.chip: {\r\n\t\t\t\t\tinstrument.chipWave = (Math.random() * Config.chipWaves.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.pwm: {\r\n\t\t\t\t\tinstrument.pulseEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 3\", weight: 2 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t\tinstrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.harmonics: {\r\n\t\t\t\t\tconst harmonicGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tharmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tharmonics[(Math.random() * 8) | 0] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = harmonicGenerators[(Math.random() * harmonicGenerators.length) | 0];\r\n\t\t\t\t\tconst harmonics: number[] = generator();\r\n\t\t\t\t\tnormalize(harmonics);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21;\r\n\t\t\t\t\t\tif (isHarmonic) {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 3) * 0.5;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.fm: {\r\n\t\t\t\t\tinstrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\r\n\t\t\t\t\tinstrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\r\n\t\t\t\t\tconst algorithm: Algorithm = Config.algorithms[instrument.algorithm];\r\n\t\t\t\t\tfor (let i: number = 0; i < algorithm.carrierCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(0, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[\"custom\"].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = algorithm.carrierCount; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(3, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t\t{ item: \"steady\", weight: 6 },\r\n\t\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 3\", weight: 1 },\r\n\t\t\t\t\t\t])].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\tinstrument.feedbackEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 3\", weight: 1 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled pitched instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.transition;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.transition = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEffects extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.effects;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.effects = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternNumbers extends Change {\r\n\tconstructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\r\n\t\tsuper();\r\n\t\tif (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\r\n\r\n\t\tfor (let bar: number = startBar; bar < startBar + width; bar++) {\r\n\t\t\tfor (let channel: number = startChannel; channel < startChannel + height; channel++) {\r\n\t\t\t\tif (doc.song.channels[channel].bars[bar] != value) {\r\n\t\t\t\t\tdoc.song.channels[channel].bars[bar] = value;\r\n\t\t\t\t\tthis._didSomething();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeEdo extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.edo != newValue) {\r\n\t\t\tdoc.song.edo = newValue;\r\n\t\t\tdoc.song.maxPitch = newValue * Config.pitchOctaves;\r\n\t\t\t\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeBarCount extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\r\n\t\tsuper();\r\n\t\tif (doc.song.barCount != newValue) {\r\n\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\tif (atBeginning) {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.unshift(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (doc.song.barCount > newValue) {\r\n\t\t\t\t\t\tchannel.bars.splice(0, doc.song.barCount - newValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchannel.bars.length = newValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (atBeginning) {\r\n\t\t\t\tconst diff: number = newValue - doc.song.barCount;\r\n\t\t\t\tdoc.bar = Math.max(0, doc.bar + diff);\r\n\t\t\t\tif (diff < 0 || doc.barScrollPos > 0) {\r\n\t\t\t\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\r\n\t\t\t}\r\n\t\t\tdoc.bar = Math.min(doc.bar, newValue - 1);\r\n\t\t\tdoc.barScrollPos = Math.max(0, Math.min(newValue - doc.trackVisibleBars, doc.barScrollPos));\r\n\t\t\tdoc.song.loopLength = Math.min(newValue, doc.song.loopLength);\r\n\t\t\tdoc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\r\n\t\t\tdoc.song.barCount = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInsertBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\r\n\t\tcount = newLength - doc.song.barCount;\r\n\t\tif (count == 0) return;\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\twhile (channel.bars.length < newLength) {\r\n\t\t\t\tchannel.bars.splice(start, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdoc.song.barCount = newLength;\r\n\r\n\t\tdoc.bar += count;\r\n\t\tdoc.barScrollPos = Math.min(newLength - doc.trackVisibleBars, doc.barScrollPos + count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart += count;\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength >= start) {\r\n\t\t\tdoc.song.loopLength += count;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDeleteBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\tchannel.bars.splice(start, count);\r\n\t\t\tif (channel.bars.length == 0) channel.bars.push(0);\r\n\t\t}\r\n\t\tdoc.song.barCount = Math.max(1, doc.song.barCount - count);\r\n\r\n\t\tdoc.bar = Math.max(0, doc.bar - count);\r\n\r\n\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos - count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart - count);\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength > start) {\r\n\t\t\tdoc.song.loopLength -= count;\r\n\t\t}\r\n\t\tdoc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeLimiterSettings extends Change {\r\n\tconstructor(doc: SongDocument, limitRatio: number, compressionRatio: number, limitThreshold: number, compressionThreshold: number, limitRise: number, limitDecay: number, masterGain: number) {\r\n\t\tsuper();\r\n\r\n\t\t// This check causes issues with the state change handler because it gets superceded by whenupdated when the limiter prompt closes for some reason, causing the state to revert. I think it's because the notifier change needs to happen right as the prompt closes.\r\n\t\t//if (limitRatio != doc.song.limitRatio || compressionRatio != doc.song.compressionRatio || limitThreshold != doc.song.limitThreshold || compressionThreshold != doc.song.compressionThreshold || limitRise != doc.song.limitRise || limitDecay != doc.song.limitDecay) {\r\n\r\n\t\tdoc.song.limitRatio = limitRatio;\r\n\t\tdoc.song.compressionRatio = compressionRatio;\r\n\t\tdoc.song.limitThreshold = limitThreshold;\r\n\t\tdoc.song.compressionThreshold = compressionThreshold;\r\n\t\tdoc.song.limitRise = limitRise;\r\n\t\tdoc.song.limitDecay = limitDecay;\r\n\t\tdoc.song.masterGain = masterGain;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelOrder extends Change {\r\n\tconstructor(doc: SongDocument, firstChannelIdx: number, secondChannelIdx: number) {\r\n\t\tsuper();\r\n\t\t// Change the order of two channels by swapping.\r\n\t\tlet toSwap = doc.song.channels[firstChannelIdx];\r\n\t\tdoc.song.channels[firstChannelIdx] = doc.song.channels[secondChannelIdx];\r\n\t\tdoc.song.channels[secondChannelIdx] = toSwap;\r\n\r\n\t\t// Update mods for each channel\r\n\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\t\t\t\t\tlet channelOffset: number = (instrument.modStatuses[i] == ModStatus.msForNoise ? doc.song.pitchChannelCount : 0);\r\n\t\t\t\t\tif (instrument.modChannels[i] + channelOffset == firstChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = secondChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (instrument.modChannels[i] + channelOffset == secondChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = firstChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelCount extends Change {\r\n\tconstructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number, newModChannelCount: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount || doc.song.modChannelCount != newModChannelCount) {\r\n\t\t\tconst newChannels: Channel[] = [];\r\n\r\n\t\t\tfunction changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean, isMod: boolean): void {\r\n\t\t\t\tfor (let i: number = 0; i < newCount; i++) {\r\n\t\t\t\t\tconst channel = i + newStart;\r\n\t\t\t\t\tconst oldChannel = i + oldStart;\r\n\t\t\t\t\tif (i < oldCount) {\r\n\t\t\t\t\t\tnewChannels[channel] = doc.song.channels[oldChannel];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewChannels[channel] = new Channel();\r\n\t\t\t\t\t\tnewChannels[channel].octave = octave;\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.instrumentsPerChannel; j++) {\r\n\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoise, isMod);\r\n\t\t\t\t\t\t\tconst presetValue: number = pickRandomPresetValue(isNoise);\r\n\t\t\t\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\tnewChannels[channel].instruments[j] = instrument;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].patterns[j] = new Pattern();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.barCount; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].bars[j] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tchangeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 2, false, false);\r\n\t\t\tchangeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true, false);\r\n\t\t\tchangeGroup(newModChannelCount, doc.song.modChannelCount, newNoiseChannelCount + newPitchChannelCount, doc.song.pitchChannelCount + doc.song.noiseChannelCount, 0, false, true);\r\n\r\n\t\t\tdoc.song.pitchChannelCount = newPitchChannelCount;\r\n\t\t\tdoc.song.noiseChannelCount = newNoiseChannelCount;\r\n\t\t\tdoc.song.modChannelCount = newModChannelCount;\r\n\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tdoc.song.channels[channel] = newChannels[channel];\r\n\t\t\t}\r\n\t\t\tdoc.song.channels.length = doc.song.getChannelCount();\r\n\r\n\t\t\tdoc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount + newModChannelCount - 1);\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid channel. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? doc.song.pitchChannelCount : 0);\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tColorConfig.resetColors();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelBar extends Change {\r\n\tconstructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\r\n\t\tsuper();\r\n\t\tconst oldChannel: number = doc.channel;\r\n\t\tconst oldBar: number = doc.bar;\r\n\t\tdoc.channel = newChannel;\r\n\t\tdoc.bar = newBar;\r\n\t\tif (!silently) {\r\n\t\t\tdoc.barScrollPos = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), doc.barScrollPos));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldChannel != newChannel || oldBar != newBar) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInterval extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.interval;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.interval = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChord extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.chord;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.chord = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibrato extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibrato;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.vibrato = newValue;\r\n\t\t\tinstrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n\t\t\tinstrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\tinstrument.vibratoSpeed = 10; // default\r\n\t\t\tinstrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDepth extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDepth, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDepth = newValue / 25;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoSpeed = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDelay, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDelay = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibratoType;\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoType = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeArpeggioSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tinstrument.arpeggioSpeed = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstArpeggioSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFastTwoNoteArp extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.fastTwoNoteArp;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.fastTwoNoteArp = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTieNoteTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.tieNoteTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.tieNoteTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeClicklessTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.clicklessTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.clicklessTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSpectrum extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\r\n\t\tsuper();\r\n\t\tspectrumWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeHarmonics extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\r\n\t\tsuper();\r\n\t\tharmonicsWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDrumsetEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, drumIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.drumsetEnvelopes[drumIndex];\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.drumsetEnvelopes[drumIndex] = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeInstrumentSlider extends Change {\r\n\tprotected _instrument: Instrument;\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tthis._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t}\r\n\r\n\tpublic commit(): void {\r\n\t\tif (!this.isNoop()) {\r\n\t\t\tthis._instrument.preset = this._instrument.type;\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.pulseWidth = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPulseWidth, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePulseEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.pulseEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.pulseEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterCutoff extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterCutoff = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterCut, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterResonance extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterResonance = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterPeak, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.filterEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.filterEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeAlgorithm extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.algorithm;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.algorithm = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackType;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackType = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].envelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].envelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorFrequency extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].frequency;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].frequency = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.operators[operatorIndex].amplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMSlider1 + operatorIndex, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.feedbackAmplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMFeedback, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeInstrumentsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newInstrumentsPerChannel: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.instrumentsPerChannel != newInstrumentsPerChannel) {\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tconst sampleInstrument: Instrument = doc.song.channels[channel].instruments[doc.song.instrumentsPerChannel - 1];\r\n\t\t\t\tconst sampleInstrumentJson: any = sampleInstrument.toJsonObject();\r\n\t\t\t\tfor (let j: number = doc.song.instrumentsPerChannel; j < newInstrumentsPerChannel; j++) {\r\n\t\t\t\t\tconst newInstrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel));\r\n\t\t\t\t\tif (sampleInstrument.type == InstrumentType.mod) {\r\n\t\t\t\t\t\t// Doesn't really make sense to have two mod instruments with the same settings. Better to zero them out.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t\t} else if (sampleInstrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t// Drumsets are kinda expensive in terms of url length, so don't just copy them willy-nilly.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.spectrum, true, false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewInstrument.fromJsonObject(sampleInstrumentJson, doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.channels[channel].instruments[j] = newInstrument;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.channels[channel].instruments.length = newInstrumentsPerChannel;\r\n\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\tif (doc.song.channels[channel].patterns[j].instrument >= newInstrumentsPerChannel) {\r\n\t\t\t\t\t\tdoc.song.channels[channel].patterns[j].instrument = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.instrumentsPerChannel = newInstrumentsPerChannel;\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid instrument number. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modInstrument >= doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeKey extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.key != newValue) {\r\n\t\t\tdoc.song.key = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeLoop extends Change {\r\n\tconstructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\r\n\t\tsuper();\r\n\t\tthis._doc.song.loopStart = this.newStart;\r\n\t\tthis._doc.song.loopLength = this.newLength;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tif (this.oldStart != this.newStart || this.oldLength != this.newLength) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePitchAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _pitch: number;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._pitch = pitch;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 0, this._pitch);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeOctave extends Change {\r\n\tconstructor(doc: SongDocument, public oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].octave = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeRhythm extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (doc.song.rhythm != newValue) {\r\n\t\t\tdoc.song.rhythm = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePaste extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\r\n\t\tsuper();\r\n\r\n\t\t// Erase the current contents of the selection:\r\n\t\tthis.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd, null, true));\r\n\r\n\t\t// Mods don't follow this sequence, so skipping for now.\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\tif (pattern.notes[i].start < selectionStart) {\r\n\t\t\t\t\tif (pattern.notes[i].end > selectionStart) throw new Error();\r\n\r\n\t\t\t\t\tnoteInsertionIndex = i + 1;\r\n\t\t\t\t} else if (pattern.notes[i].start < selectionEnd) {\r\n\t\t\t\t\tthrow new Error();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnoteInsertionIndex = pattern.notes.length;\r\n\t\t}\r\n\r\n\t\twhile (selectionStart < selectionEnd) {\r\n\t\t\tfor (const noteObject of notes) {\r\n\t\t\t\tconst noteStart: number = noteObject[\"start\"] + selectionStart;\r\n\t\t\t\tconst noteEnd: number = noteObject[\"end\"] + selectionStart;\r\n\t\t\t\tif (noteStart >= selectionEnd) break;\r\n\t\t\t\tconst note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"volume\"], false);\r\n\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\tfor (const pitch of noteObject[\"pitches\"]) {\r\n\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t}\r\n\t\t\t\tnote.pins.length = 0;\r\n\t\t\t\tfor (const pin of noteObject[\"pins\"]) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tpattern.notes.splice(noteInsertionIndex++, 0, note);\r\n\t\t\t\tif (note.end > selectionEnd) {\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tselectionStart += oldPartDuration;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePasteInstrument extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\r\n\t\tsuper();\r\n\t\tinstrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"], instrumentCopy[\"isMod\"], false, false);\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternInstrument extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tif (pattern.instrument != newValue) {\r\n\t\t\tpattern.instrument = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModChannel extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, index: number) {\r\n\t\tsuper();\r\n\t\t// Figure out if this is a pitch or noise mod, or \"song\" or \"none\"\r\n\t\tlet stat: ModStatus = ModStatus.msNone;\r\n\t\tlet channel: number = 0;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (index == 1) { // song\r\n\t\t\tstat = ModStatus.msForSong;\r\n\t\t}\r\n\t\telse if (index == 0) { // none\r\n\t\t\tstat = ModStatus.msNone;\r\n\t\t}\r\n\t\telse if (index < 2 + doc.song.pitchChannelCount) {\r\n\t\t\tstat = ModStatus.msForPitch;\r\n\t\t\tchannel = index - 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstat = ModStatus.msForNoise;\r\n\t\t\tchannel = index - doc.song.pitchChannelCount - 2;\r\n\t\t}\r\n\r\n\t\tif (instrument.modStatuses[mod] != stat || instrument.modChannels[mod] != channel) {\r\n\r\n\t\t\tinstrument.modStatuses[mod] = stat;\r\n\t\t\tinstrument.modChannels[mod] = channel;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModInstrument extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, tgtInstrument: number) {\r\n\t\tsuper();\r\n\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (instrument.modInstruments[mod] != tgtInstrument) {\r\n\t\t\tinstrument.modInstruments[mod] = tgtInstrument;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModSetting extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, text: string) {\r\n\t\tsuper();\r\n\r\n\t\tlet setting: ModSetting = ModSetting.mstNone;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tswitch (text) {\r\n\t\t\tcase \"song volume\":\r\n\t\t\t\tsetting = ModSetting.mstSongVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tempo\":\r\n\t\t\t\tsetting = ModSetting.mstTempo;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reverb\":\r\n\t\t\t\tsetting = ModSetting.mstReverb;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"next bar\":\r\n\t\t\t\tsetting = ModSetting.mstNextBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"volume\":\r\n\t\t\t\tsetting = ModSetting.mstInsVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan\":\r\n\t\t\t\tsetting = ModSetting.mstPan;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter cut\":\r\n\t\t\t\tsetting = ModSetting.mstFilterCut;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter peak\":\r\n\t\t\t\tsetting = ModSetting.mstFilterPeak;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 1\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 2\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 3\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 4\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider4;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm feedback\":\r\n\t\t\t\tsetting = ModSetting.mstFMFeedback;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pulse width\":\r\n\t\t\t\tsetting = ModSetting.mstPulseWidth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\":\r\n\t\t\t\tsetting = ModSetting.mstDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato depth\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDepth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato speed\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato delay\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan delay\":\r\n\t\t\t\tsetting = ModSetting.mstPanDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggio speed\":\r\n\t\t\t\tsetting = ModSetting.mstArpeggioSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reset arpeggio\":\r\n\t\t\t\tsetting = ModSetting.mstResetArpeggio;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"song detune\":\r\n\t\t\t\tsetting = ModSetting.mstSongDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"none\":\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (instrument.modSettings[mod] != setting) {\r\n\r\n\t\t\tinstrument.modSettings[mod] = setting;\r\n\r\n\t\t\t// Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\r\n\t\t\tlet cap: number = doc.song.mstMaxVols.get(setting)!;\r\n\r\n\t\t\tfor (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\r\n\t\t\t\tconst pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\r\n\t\t\t\tif (pattern.instrument == doc.getCurrentInstrument()) {\r\n\t\t\t\t\tfor (let j: number = 0; j < pattern.notes.length; j++) {\r\n\t\t\t\t\t\tconst note: Note = pattern.notes[j];\r\n\t\t\t\t\t\tif (note.pitches[0] == Config.modCount - mod - 1) {\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pins.length; k++) {\r\n\t\t\t\t\t\t\t\tconst pin: NotePin = note.pins[k];\r\n\t\t\t\t\t\t\t\tif (pin.volume > cap)\r\n\t\t\t\t\t\t\t\t\tpin.volume = cap;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.patternsPerChannel != newValue) {\r\n\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\tconst channelBars: number[] = doc.song.channels[i].bars;\r\n\t\t\t\tconst channelPatterns: Pattern[] = doc.song.channels[i].patterns;\r\n\t\t\t\tfor (let j: number = 0; j < channelBars.length; j++) {\r\n\t\t\t\t\tif (channelBars[j] > newValue) channelBars[j] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let j: number = channelPatterns.length; j < newValue; j++) {\r\n\t\t\t\t\tchannelPatterns[j] = new Pattern();\r\n\t\t\t\t}\r\n\t\t\t\tchannelPatterns.length = newValue;\r\n\t\t\t}\r\n\t\t\tdoc.song.patternsPerChannel = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEnsurePatternExists extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _bar: number;\r\n\tprivate _channel: number;\r\n\tprivate _patternIndex: number;\r\n\tprivate _patternOldNotes: Note[] | null = null;\r\n\tprivate _oldPatternCount: number;\r\n\tprivate _newPatternCount: number;\r\n\r\n\tconstructor(doc: SongDocument, channel: number, bar: number) {\r\n\t\tsuper(false);\r\n\t\tconst song: Song = doc.song;\r\n\t\tif (song.channels[channel].bars[bar] != 0) return;\r\n\r\n\t\tthis._doc = doc;\r\n\t\tthis._bar = bar;\r\n\t\tthis._channel = channel;\r\n\t\tthis._oldPatternCount = song.patternsPerChannel;\r\n\t\tthis._newPatternCount = song.patternsPerChannel;\r\n\r\n\t\tlet firstEmptyUnusedIndex: number | null = null;\r\n\t\tlet firstUnusedIndex: number | null = null;\r\n\t\tfor (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\r\n\t\t\tlet used = false;\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tif (song.channels[channel].bars[barIndex] == patternIndex) {\r\n\t\t\t\t\tused = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (used) continue;\r\n\t\t\tif (firstUnusedIndex == null) {\r\n\t\t\t\tfirstUnusedIndex = patternIndex;\r\n\t\t\t}\r\n\t\t\tconst pattern: Pattern = song.channels[channel].patterns[patternIndex - 1];\r\n\t\t\tif (pattern.notes.length == 0) {\r\n\t\t\t\tfirstEmptyUnusedIndex = patternIndex;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstEmptyUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstEmptyUnusedIndex;\r\n\t\t} else if (song.patternsPerChannel < song.barCount) {\r\n\t\t\tthis._newPatternCount = song.patternsPerChannel + 1;\r\n\t\t\tthis._patternIndex = song.patternsPerChannel + 1;\r\n\t\t} else if (firstUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstUnusedIndex;\r\n\t\t\tthis._patternOldNotes = song.channels[channel].patterns[firstUnusedIndex - 1].notes;\r\n\t\t} else {\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\r\n\t\tthis._didSomething();\r\n\t\tthis._doForwards();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tfor (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\r\n\t\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\t\tsong.channels[i].patterns[j] = new Pattern();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._newPatternCount;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tpattern.notes = [];\r\n\t\tsong.channels[this._channel].bars[this._bar] = this._patternIndex;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tif (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\r\n\t\tsong.channels[this._channel].bars[this._bar] = 0;\r\n\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\tsong.channels[i].patterns.length = this._oldPatternCount;\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._oldPatternCount;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangePinTime extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tshiftedTime -= this._oldStart;\r\n\t\tconst originalTime: number = this._oldPins[pinIndex].time;\r\n\t\tconst skipStart: number = Math.min(originalTime, shiftedTime);\r\n\t\tconst skipEnd: number = Math.max(originalTime, shiftedTime);\r\n\t\tlet setPin: boolean = false;\r\n\t\tfor (let i: number = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tif (time < skipStart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t} else if (time > skipEnd) {\r\n\t\t\t\tif (!setPin) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t\t\t\tsetPin = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setPin) {\r\n\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePitchBend extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tbendStart -= this._oldStart;\r\n\t\tbendEnd -= this._oldStart;\r\n\t\tbendTo -= note.pitches[pitchIndex];\r\n\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet setEnd: boolean = false;\r\n\t\tlet prevInterval: number = 0;\r\n\t\tlet prevVolume: number = 3;\r\n\t\tlet persist: boolean = true;\r\n\t\tlet i: number;\r\n\t\tlet direction: number;\r\n\t\tlet stop: number;\r\n\t\tlet push: (item: NotePin) => void;\r\n\t\tif (bendEnd > bendStart) {\r\n\t\t\ti = 0;\r\n\t\t\tdirection = 1;\r\n\t\t\tstop = note.pins.length;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.push(item); };\r\n\t\t} else {\r\n\t\t\ti = note.pins.length - 1;\r\n\t\t\tdirection = -1;\r\n\t\t\tstop = -1;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.unshift(item); };\r\n\t\t}\r\n\t\tfor (; i != stop; i += direction) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tfor (; ;) {\r\n\t\t\t\tif (!setStart) {\r\n\t\t\t\t\tif (time * direction <= bendStart * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendStart * direction) {\r\n\t\t\t\t\t\tpush(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(prevInterval, bendStart, prevVolume));\r\n\t\t\t\t\t\tsetStart = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!setEnd) {\r\n\t\t\t\t\tif (time * direction <= bendEnd * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t\t\t\t\tsetEnd = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (time * direction == bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (oldPin.interval != prevInterval) persist = false;\r\n\t\t\t\t\t\tpush(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setEnd) {\r\n\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternRhythm extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tconst minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\r\n\r\n\t\tconst changeRhythm: (oldTime: number) => number = function (oldTime: number): number {\r\n\t\t\tlet thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\r\n\t\t\tif (thresholds != null) {\r\n\t\t\t\tconst beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\r\n\t\t\t\tconst remainder: number = oldTime - beatStart;\r\n\t\t\t\tlet newTime: number = beatStart;\r\n\t\t\t\tfor (const threshold of thresholds) {\r\n\t\t\t\t\tif (remainder >= threshold) {\r\n\t\t\t\t\t\tnewTime += minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newTime;\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.round(oldTime / minDivision) * minDivision;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t} else {\r\n\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeRhythmNote extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime: number) => number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveNotesSideways extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, beatsToMove: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tlet partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\r\n\t\tif (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tif (partsToMove == 0.0) return;\r\n\r\n\t\tswitch (strategy) {\r\n\t\t\tcase \"wrapAround\": {\r\n\t\t\t\tconst partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\t\t\tconst newNotes: Note[] = [];\r\n\r\n\t\t\t\t\t\tfor (let bar: number = 1; bar >= 0; bar--) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\r\n\t\t\t\t\t\t\tfor (const oldNote of pattern.notes) {\r\n\t\t\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + partsToMove;\r\n\t\t\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + partsToMove;\r\n\t\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpattern.notes = newNotes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase \"overflow\": {\r\n\t\t\t\tlet originalBarCount: number = doc.song.barCount;\r\n\t\t\t\tlet originalLoopStart: number = doc.song.loopStart;\r\n\t\t\t\tlet originalLoopLength: number = doc.song.loopLength;\r\n\r\n\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\r\n\r\n\t\t\t\tif (beatsToMove < 0) {\r\n\t\t\t\t\tlet firstBarIsEmpty: boolean = true;\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tif (channel.bars[0] != 0) firstBarIsEmpty = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (firstBarIsEmpty) {\r\n\t\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\t\tchannel.bars.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdoc.song.barCount--;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toriginalBarCount++;\r\n\t\t\t\t\t\toriginalLoopStart++;\r\n\t\t\t\t\t\tdoc.bar++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile (doc.song.barCount < originalBarCount) {\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.barCount++;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = originalLoopStart;\r\n\t\t\t\tdoc.song.loopLength = originalLoopLength;\r\n\t\t\t} break;\r\n\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeBeatsPerBar extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tif (doc.song.beatsPerBar != newValue) {\r\n\t\t\tswitch (strategy) {\r\n\t\t\t\tcase \"splice\": {\r\n\t\t\t\t\tif (doc.song.beatsPerBar > newValue) {\r\n\t\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\r\n\t\t\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat, null, true));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"stretch\": {\r\n\t\t\t\t\tconst changeRhythm = function (oldTime: number): number {\r\n\t\t\t\t\t\treturn Math.round(oldTime * newValue / doc.song.beatsPerBar);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\t\t\t\tfor (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\r\n\t\t\t\t\t\t\tconst pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex];\r\n\t\t\t\t\t\t\tlet noteIndex: number = 0;\r\n\t\t\t\t\t\t\twhile (noteIndex < pattern.notes.length) {\r\n\t\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\t\t\t\t\t\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\t\t\t\t\t\tnoteIndex++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"overflow\": {\r\n\t\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\r\n\t\t\t\t\tdoc.song.loopStart = 0;\r\n\t\t\t\t\tdoc.song.loopLength = doc.song.barCount;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.beatsPerBar = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeScale extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.scale != newValue) {\r\n\t\t\tdoc.song.scale = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDetectKey extends ChangeGroup {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst song: Song = doc.song;\r\n\t\tconst basePitch: number = Config.keys[song.key].basePitch;\r\n\t\tconst keyWeights: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tconst pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\tconst prevPin: NotePin = note.pins[0];\r\n\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\tconst nextPin: NotePin = note.pins[pinIndex];\r\n\t\t\t\t\t\t\tif (prevPin.interval == nextPin.interval) {\r\n\t\t\t\t\t\t\t\tlet weight: number = nextPin.time - prevPin.time;\r\n\t\t\t\t\t\t\t\tweight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\r\n\t\t\t\t\t\t\t\tweight *= nextPin.volume + prevPin.volume;\r\n\t\t\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\t\t\tconst key = (basePitch + prevPin.interval + pitch) % 12;\r\n\t\t\t\t\t\t\t\t\tkeyWeights[key] += weight;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet bestKey: number = 0;\r\n\t\tlet bestKeyWeight: number = 0;\r\n\t\tfor (let key: number = 0; key < 12; key++) {\r\n\t\t\t// Look for the root of the most prominent major or minor chord.\r\n\t\t\tconst keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\r\n\t\t\tif (bestKeyWeight < keyWeight) {\r\n\t\t\t\tbestKeyWeight = keyWeight;\r\n\t\t\t\tbestKey = key;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (bestKey != song.key) {\r\n\t\t\tconst diff: number = song.key - bestKey;\r\n\t\t\tconst absoluteDiff: number = Math.abs(diff);\r\n\r\n\t\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\t\tfor (const pattern of song.channels[channelIndex].patterns) {\r\n\t\t\t\t\tfor (let i: number = 0; i < absoluteDiff; i++) {\r\n\t\t\t\t\t\tthis.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsong.key = bestKey;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function pickRandomPresetValue(isNoise: boolean): number {\r\n\tconst eligiblePresetValues: number[] = [];\r\n\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tif (category.name == \"Novelty Presets\") continue;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\r\n\t\t\t\teligiblePresetValues.push((categoryIndex << 6) + presetIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn eligiblePresetValues[(Math.random() * eligiblePresetValues.length) | 0];\r\n}\r\n\r\nexport function setDefaultInstruments(song: Song): void {\r\n\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\tfor (const instrument of song.channels[channelIndex].instruments) {\r\n\t\t\tconst isNoise: boolean = song.getChannelIsNoise(channelIndex);\r\n\t\t\tconst isMod: boolean = song.getChannelIsMod(channelIndex);\r\n\t\t\tconst presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\r\n\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, song.rhythm == 0 || song.rhythm == 2, song.rhythm >= 2);\r\n\t\t\tinstrument.preset = presetValue;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSong extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newHash: string) {\r\n\t\tsuper();\r\n\t\tlet pitchChannelCount = doc.song.pitchChannelCount;\r\n\t\tlet noiseChannelCount = doc.song.noiseChannelCount;\r\n\t\tlet modChannelCount = doc.song.modChannelCount;\r\n\t\tdoc.song.fromBase64String(newHash);\r\n\t\tif (pitchChannelCount != doc.song.pitchChannelCount || noiseChannelCount != doc.song.noiseChannelCount || modChannelCount != doc.song.modChannelCount) {\r\n\t\t\tColorConfig.resetColors();\r\n\t\t}\r\n\t\tif (newHash == \"\") {\r\n\t\t\tthis.append(new ChangePatternSelection(doc, 0, 0));\r\n\t\t\tdoc.selection.resetBoxSelection();\r\n\t\t\tsetDefaultInstruments(doc.song);\r\n\t\t} else {\r\n\t\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeValidateTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst channel: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\r\n\t\tconst bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\r\n\t\tconst barScrollPos: number = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), Math.max(0, Math.min(doc.song.barCount - doc.trackVisibleBars, doc.barScrollPos))));\r\n\t\tif (doc.channel != channel || doc.bar != bar || doc.barScrollPos != barScrollPos) {\r\n\t\t\tdoc.channel = channel;\r\n\t\t\tdoc.bar = bar;\r\n\t\t\tdoc.barScrollPos = barScrollPos;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeReplacePatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[], modChannels: Channel[]) {\r\n\t\tsuper();\r\n\r\n\t\tconst song: Song = doc.song;\r\n\r\n\t\tfunction removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet sparsestIndex: number = channels.length - 1;\r\n\t\t\t\tlet mostZeroes: number = 0;\r\n\t\t\t\tfor (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\r\n\t\t\t\t\tlet zeroes: number = 0;\r\n\t\t\t\t\tfor (const bar of channels[channelIndex].bars) {\r\n\t\t\t\t\t\tif (bar == 0) zeroes++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (zeroes >= mostZeroes) {\r\n\t\t\t\t\t\tsparsestIndex = channelIndex;\r\n\t\t\t\t\t\tmostZeroes = zeroes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchannels.splice(sparsestIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tremoveExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tremoveExtraSparseChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\twhile (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\r\n\t\twhile (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\r\n\t\twhile (modChannels.length < Config.modChannelCountMin) modChannels.push(new Channel());\r\n\r\n\t\t// Set minimum counts.\r\n\t\tsong.barCount = 1;\r\n\t\tsong.instrumentsPerChannel = 1;\r\n\t\tsong.patternsPerChannel = 8;\r\n\t\tconst combinedChannels: Channel[] = pitchChannels.concat(noiseChannels.concat(modChannels));\r\n\t\tfor (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = combinedChannels[channelIndex];\r\n\t\t\tsong.barCount = Math.max(song.barCount, channel.bars.length);\r\n\t\t\tsong.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\r\n\t\t\tsong.instrumentsPerChannel = Math.max(song.instrumentsPerChannel, channel.instruments.length);\r\n\t\t\tsong.channels[channelIndex] = channel;\r\n\t\t}\r\n\t\tsong.channels.length = combinedChannels.length;\r\n\t\tsong.pitchChannelCount = pitchChannels.length;\r\n\t\tsong.noiseChannelCount = noiseChannels.length;\r\n\t\tsong.modChannelCount = modChannels.length;\r\n\r\n\t\tsong.barCount = Math.min(Config.barCountMax, song.barCount);\r\n\t\tsong.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\r\n\t\tsong.instrumentsPerChannel = Math.min(Config.instrumentsPerChannelMax, song.instrumentsPerChannel);\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = song.channels[channelIndex];\r\n\t\t\tfor (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\r\n\t\t\t\tif (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\r\n\t\t\t\t\tchannel.bars[barIndex] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\tif (pattern.instrument >= song.instrumentsPerChannel || pattern.instrument < 0) {\r\n\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (channel.bars.length < song.barCount) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t\twhile (channel.patterns.length < song.patternsPerChannel) {\r\n\t\t\t\tchannel.patterns.push(new Pattern());\r\n\t\t\t}\r\n\t\t\twhile (channel.instruments.length < song.instrumentsPerChannel) {\r\n\t\t\t\tconst instrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channelIndex), doc.song.getChannelIsMod(channelIndex));\r\n\t\t\t\tif (song.getChannelIsNoise(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.noise, true, false);\r\n\t\t\t\t} else if (song.getChannelIsMod(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.chip, false, false);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tchannel.instruments.length = song.instrumentsPerChannel;\r\n\t\t\tchannel.bars.length = song.barCount;\r\n\t\t\tchannel.patterns.length = song.patternsPerChannel;\r\n\t\t}\r\n\r\n\t\tsong.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\r\n\t\tsong.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\r\n\r\n\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t\tColorConfig.resetColors();\r\n\t}\r\n}\r\n\r\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\r\n\tif (a.length != b.length) return false;\r\n\r\n\tfor (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\r\n\t\tconst oldNote: Note = a[noteIndex];\r\n\t\tconst newNote: Note = b[noteIndex];\r\n\t\tif (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\r\n\t\t\tif (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\t\tif (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].volume != oldNote.pins[pinIndex].volume) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function removeDuplicatePatterns(channels: Channel[]): void {\r\n\tfor (const channel of channels) {\r\n\t\tconst newPatterns: Pattern[] = [];\r\n\t\tfor (let bar: number = 0; bar < channel.bars.length; bar++) {\r\n\t\t\tif (channel.bars[bar] == 0) continue;\r\n\r\n\t\t\tconst oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\r\n\r\n\t\t\tlet foundMatchingPattern: boolean = false;\r\n\t\t\tfor (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\r\n\t\t\t\tconst newPattern: Pattern = newPatterns[newPatternIndex];\r\n\t\t\t\tif (newPattern.instrument != oldPattern.instrument || newPattern.notes.length != oldPattern.notes.length) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\r\n\t\t\t\t\tfoundMatchingPattern = true;\r\n\t\t\t\t\tchannel.bars[bar] = newPatternIndex + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!foundMatchingPattern) {\r\n\t\t\t\tnewPatterns.push(oldPattern);\r\n\t\t\t\tchannel.bars[bar] = newPatterns.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\r\n\t\t\tchannel.patterns[patternIndex] = newPatterns[patternIndex];\r\n\t\t}\r\n\t\tchannel.patterns.length = newPatterns.length;\r\n\t}\r\n}\r\n\r\nexport class ChangeTempo extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\r\n\t\tdoc.synth.unsetMod(ModSetting.mstTempo);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeReverb extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.reverb = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstReverb);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _pattern: Pattern;\r\n\tprivate _note: Note;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._pattern = pattern;\r\n\t\tthis._note = note;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 0, this._note);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteLength extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\ttruncStart -= this._oldStart;\r\n\t\ttruncEnd -= this._oldStart;\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet prevVolume: number = this._oldPins[0].volume;\r\n\t\tlet prevInterval: number = this._oldPins[0].interval;\r\n\t\tlet pushLastPin: boolean = true;\r\n\t\tlet i: number;\r\n\t\tfor (i = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = this._oldPins[i];\r\n\t\t\tif (oldPin.time < truncStart) {\r\n\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t} else if (oldPin.time <= truncEnd) {\r\n\t\t\t\tif (oldPin.time > truncStart && !setStart) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(prevInterval, truncStart, prevVolume));\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.volume));\r\n\t\t\t\tsetStart = true;\r\n\t\t\t\tif (oldPin.time == truncEnd) {\r\n\t\t\t\t\tpushLastPin = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].volume));\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteTruncate extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote: Note | null = null, force: boolean = false) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note == skipNote && skipNote != null) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end <= start) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start >= end) {\r\n\t\t\t\t// Allow out-of-order notes for mods so that all get checked.\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t} else if (note.start < start && note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0])) {\r\n\t\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, end, copy.end));\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start < start) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, end, note.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t\telse\r\n\t\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\r\n\t\t\t\t// i++; // The second note might be split again at the end of the selection. Check it again.\r\n\t\t\t} else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeTransposeNote extends UndoableChange {\r\n\tprotected _doc: SongDocument;\r\n\tprotected _note: Note;\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(doc: SongDocument, channel: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = note.pitches;\r\n\t\tthis._newPitches = [];\r\n\r\n\t\t// I'm disabling pitch transposing for noise channels to avoid\r\n\t\t// accidentally messing up noise channels when pitch shifting all\r\n\t\t// channels at once.\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(channel);\r\n\t\tif (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\r\n\r\n\t\t// Can't transpose mods\r\n\t\tif (doc.song.getChannelIsMod(doc.channel)) return;\r\n\r\n\t\tconst maxPitch: number = (isNoise ? Config.drumCount - 1 : doc.song.maxPitch);\r\n\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tlet pitch: number = this._oldPitches[i];\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tpitch = Math.min(maxPitch, pitch + doc.song.edo);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpitch = Math.max(0, pitch - doc.song.edo);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let j: number = pitch + 1; j <= maxPitch; j++) {\r\n\t\t\t\t\t\t// if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) { // TODO: Scales\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || true) { // yes, I made the condition true\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let j: number = pitch - 1; j >= 0; j--) {\r\n\t\t\t\t\t\t// if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || true) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet foundMatch: boolean = false;\r\n\t\t\tfor (let j: number = 0; j < this._newPitches.length; j++) {\r\n\t\t\t\tif (this._newPitches[j] == pitch) {\r\n\t\t\t\t\tfoundMatch = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!foundMatch) this._newPitches.push(pitch);\r\n\t\t}\r\n\r\n\t\tlet min: number = 0;\r\n\t\tlet max: number = maxPitch;\r\n\r\n\t\tfor (let i: number = 1; i < this._newPitches.length; i++) {\r\n\t\t\tconst diff: number = this._newPitches[0] - this._newPitches[i];\r\n\t\t\tif (min < diff) min = diff;\r\n\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t}\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tlet interval: number = oldPin.interval + this._oldPitches[0];\r\n\r\n\t\t\tif (interval < min) interval = min;\r\n\t\t\tif (interval > max) interval = max;\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tinterval = Math.min(max, interval + doc.song.edo);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinterval = Math.max(min, interval - doc.song.edo);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let i: number = interval + 1; i <= max; i++) {\r\n\t\t\t\t\t\t// if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) { \r\n\t\t\t\t\t\tif (isNoise || ignoreScale || true) { // TODO: Scales\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i: number = interval - 1; i >= min; i--) {\r\n\t\t\t\t\t\t// if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) { \r\n\t\t\t\t\t\tif (isNoise || ignoreScale || true) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinterval -= this._newPitches[0];\r\n\t\t\tthis._newPins.push(makeNotePin(interval, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tif (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeTranspose extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, upward, ignoreScale, octave));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\r\n\t\tsuper();\r\n\t\tdoc.selection.boxSelectionX0 = newX0;\r\n\t\tdoc.selection.boxSelectionX1 = newX1;\r\n\t\tdoc.selection.boxSelectionY0 = newY0;\r\n\t\tdoc.selection.boxSelectionY1 = newY1;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternSelection extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _oldStart: number;\r\n\tprivate _oldEnd: number;\r\n\tprivate _oldActive: boolean;\r\n\tprivate _newStart: number;\r\n\tprivate _newEnd: number;\r\n\tprivate _newActive: boolean;\r\n\r\n\tconstructor(doc: SongDocument, newStart: number, newEnd: number) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._oldStart = doc.selection.patternSelectionStart;\r\n\t\tthis._oldEnd = doc.selection.patternSelectionEnd;\r\n\t\tthis._oldActive = doc.selection.patternSelectionActive;\r\n\t\tthis._newStart = newStart;\r\n\t\tthis._newEnd = newEnd;\r\n\t\tthis._newActive = newStart < newEnd;\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._newStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._newEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._newActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._oldStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._oldEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._oldActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeDragSelectedNotes extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, parts: number, transpose: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (parts == 0 && transpose == 0) return;\r\n\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\r\n\t\tconst oldStart: number = doc.selection.patternSelectionStart;\r\n\t\tconst oldEnd: number = doc.selection.patternSelectionEnd;\r\n\t\tconst newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\r\n\t\tconst newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\r\n\t\tif (newStart == newEnd) {\r\n\t\t\t// Just erase the current contents of the selection:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd, null, true));\r\n\t\t} else if (parts < 0) {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd), null, true));\r\n\t\t\tif (oldStart < -parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, -parts, null, true));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd, null, true));\r\n\t\t\tif (oldEnd > doc.song.beatsPerBar * Config.partsPerBeat - parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, doc.song.beatsPerBar * Config.partsPerBeat - parts, oldEnd, null, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.append(new ChangePatternSelection(doc, newStart, newEnd));\r\n\t\tconst draggedNotes = [];\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.end <= oldStart || note.start >= oldEnd) {\r\n\t\t\t\ti++;\r\n\t\t\t\tif (note.end <= newStart) noteInsertionIndex = i;\r\n\t\t\t} else {\r\n\t\t\t\tdraggedNotes.push(note.clone());\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const note of draggedNotes) {\r\n\t\t\tnote.start += parts;\r\n\t\t\tnote.end += parts;\r\n\r\n\t\t\tfor (let i: number = 0; i < Math.abs(transpose); i++) {\r\n\t\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, transpose > 0));\r\n\t\t\t}\r\n\r\n\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\r\n\t\tsuper();\r\n\t\tfor (let channel: number = channelStart; channel < channelStart + channelHeight; channel++) {\r\n\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\r\n\t\t\tfor (let bar: number = barStart; bar < barStart + barWidth; bar++) {\r\n\t\t\t\tconst currentPatternIndex: number = doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tif (reusablePatterns[String(currentPatternIndex)] == undefined) {\r\n\t\t\t\t\tlet isUsedElsewhere = false;\r\n\t\t\t\t\tfor (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\r\n\t\t\t\t\t\tif (bar2 < barStart || bar2 >= barStart + barWidth) {\r\n\t\t\t\t\t\t\tif (doc.song.channels[channel].bars[bar2] == currentPatternIndex) {\r\n\t\t\t\t\t\t\t\tisUsedElsewhere = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isUsedElsewhere) {\r\n\t\t\t\t\t\t// Need to duplicate the pattern.\r\n\t\t\t\t\t\tconst copiedPattern: Pattern = doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tthis.append(new ChangePatternNumbers(doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tthis.append(new ChangeEnsurePatternExists(doc, channel, bar));\r\n\t\t\t\t\t\tconst newPattern: Pattern | null = doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\tthis.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\r\n\t\t\t\t\t\tthis.append(new ChangePatternInstrument(doc, copiedPattern.instrument, newPattern));\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternScale extends Change {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tnew ChangeSplitNotesAtSelection(doc, pattern);\r\n\t\t}\r\n\t\tconst maxPitch: number = doc.song.maxPitch;\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst newPitches: number[] = [];\r\n\t\t\tconst newPins: NotePin[] = [];\r\n\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\tconst transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\r\n\t\t\t\tif (newPitches.indexOf(transformedPitch) == -1) {\r\n\t\t\t\t\tnewPitches.push(transformedPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet min: number = 0;\r\n\t\t\tlet max: number = maxPitch;\r\n\r\n\t\t\tfor (let i: number = 1; i < newPitches.length; i++) {\r\n\t\t\t\tconst diff: number = newPitches[0] - newPitches[i];\r\n\t\t\t\tif (min < diff) min = diff;\r\n\t\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t\t}\r\n\r\n\t\t\tfor (const oldPin of note.pins) {\r\n\t\t\t\tlet interval: number = oldPin.interval + note.pitches[0];\r\n\t\t\t\tif (interval < min) interval = min;\r\n\t\t\t\tif (interval > max) interval = max;\r\n\t\t\t\tconst transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\r\n\t\t\t\tnewPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.volume));\r\n\t\t\t}\r\n\r\n\t\t\tif (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\t\tfor (let i: number = 1; i < newPins.length - 1;) {\r\n\t\t\t\tif (newPins[i - 1].interval == newPins[i].interval &&\r\n\t\t\t\t\tnewPins[i].interval == newPins[i + 1].interval &&\r\n\t\t\t\t\tnewPins[i - 1].volume == newPins[i].volume &&\r\n\t\t\t\t\tnewPins[i].volume == newPins[i + 1].volume) {\r\n\t\t\t\t\tnewPins.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnote.pitches = newPitches;\r\n\t\t\tnote.pins = newPins;\r\n\t\t}\r\n\t\tthis._didSomething();\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolume extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative.\r\n\t\t//doc.synth.unsetMod(ModSetting.mstInsVolume, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSongTitle extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 30) {\r\n\t\t\tnewValue = newValue.substring(0, 30);\r\n\t\t}\r\n\r\n\t\tdoc.song.title = newValue;\r\n\t\tdocument.title = newValue + \" - \" + EditorConfig.versionDisplayName;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelName extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tnewValue = newValue.substring(0, 15);\r\n\t\t}\r\n\r\n\t\tdoc.song.channels[doc.muteEditorChannel].name = newValue;\r\n\t\tdoc.recalcChannelNames = true;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePan extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPan, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePanDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].panDelay = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDetune extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].detune = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstDetune, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolumeBend extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _oldPins: NotePin[];\r\n\tprivate _newPins: NotePin[];\r\n\tconstructor(doc: SongDocument, note: Note, bendPart: number, bendVolume: number, bendInterval: number, uniformVolume: boolean) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\r\n\t\tlet inserted: boolean = false;\r\n\r\n\t\tfor (const pin of note.pins) {\r\n\t\t\tif (pin.time < bendPart) {\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t} else if (pin.time == bendPart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\tinserted = true;\r\n\t\t\t} else {\r\n\t\t\t\tif (!inserted) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\t\tinserted = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeChipWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipWave != newValue) {\r\n\t\t\tinstrument.chipWave = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeNoiseWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipNoise != newValue) {\r\n\t\t\tinstrument.chipNoise = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeBeatsPerBar, ChangeBarCount, ChangeEdo } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class SongSettingsPrompt implements Prompt {\r\n\tprivate readonly _edoStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"splice\" }, \"Splice beats at end of bars.\"),\r\n\t\toption({ value: \"stretch\" }, \"Stretch notes to fit in bars.\"),\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t);\r\n\tprivate readonly _barsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _positionSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"end\" }, \"Apply change at end of song.\"),\r\n\t\toption({ value: \"beginning\" }, \"Apply change at beginning of song.\"),\r\n\t);\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Song Settings\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Pitch Divisions per Octave:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: #888888;\" }, \"(Equal Temperament)\"),\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: #aa3000;\" }, \"Warning: This skews pitches and can delete existing notes!\"),\r\n\t\t\t\tbr(),\r\n\t\t\t\t),\r\n\t\t\tthis._edoStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"display: inline-block; text-align: right;\" },\r\n\t\t\t\t\"Bars per song:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Multiples of 4 are recommended)\"),\r\n\r\n\t\t\t),\r\n\t\t\tthis._barsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._positionSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats per bar:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: #888888;\" }, \"(Multiples of 3 or 4 are recommended)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\r\n\t\tthis._edoStepper.value = this._doc.song.edo + \"\";\r\n\t\tthis._edoStepper.min = Config.edoMin + \"\";\r\n\t\tthis._edoStepper.max = Config.edoMax + \"\";\r\n\r\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\r\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\r\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\r\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\r\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\r\n\r\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\r\n\t\tif (lastPosition != null) {\r\n\t\t\tthis._positionSelect.value = lastPosition;\r\n\t\t}\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._edoStepper.select();\r\n\t\tsetTimeout(() => this._edoStepper.focus());\r\n\r\n\t\tthis._barsStepper.select();\r\n\t\tsetTimeout(() => this._barsStepper.focus());\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\r\n\t\tthis._edoStepper.addEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._edoStepper.addEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\r\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._barsStepper.addEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\r\n\t\tthis._beatsStepper.addEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._edoStepper.removeEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._edoStepper.removeEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(SongSettingsPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\r\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangeEdo(this._doc, SongSettingsPrompt._validate(this._edoStepper)));\r\n\t\tgroup.append(new ChangeBarCount(this._doc, SongSettingsPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\r\n\t\tgroup.append(new ChangeBeatsPerBar(this._doc, SongSettingsPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangePatternsPerChannel, ChangeInstrumentsPerChannel, ChangeChannelCount } from \"./changes\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class ChannelSettingsPrompt implements Prompt {\r\n\tprivate readonly _patternsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _instrumentsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _drumChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _modChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Channel Settings\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Pitch channels:\",\r\n\t\t\tthis._pitchChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Drum channels:\",\r\n\t\t\tthis._drumChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Mod channels:\",\r\n\t\t\tthis._modChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Patterns per channel:\",\r\n\t\t\tthis._patternsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Instruments per channel:\",\r\n\t\t\tthis._instrumentsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\r\n\t\tthis._patternsStepper.min = \"1\";\r\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tthis._instrumentsStepper.value = this._doc.song.instrumentsPerChannel + \"\";\r\n\t\tthis._instrumentsStepper.min = Config.instrumentsPerChannelMin + \"\";\r\n\t\tthis._instrumentsStepper.max = Config.instrumentsPerChannelMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\r\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\r\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\r\n\r\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\r\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\r\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\r\n\r\n\t\tthis._modChannelStepper.value = this._doc.song.modChannelCount + \"\";\r\n\t\tthis._modChannelStepper.min = Config.modChannelCountMin + \"\";\r\n\t\tthis._modChannelStepper.max = Config.modChannelCountMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.select();\r\n\t\tsetTimeout(() => this._pitchChannelStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\r\n\t\tgroup.append(new ChangeInstrumentsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._instrumentsStepper)));\r\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper), ChannelSettingsPrompt._validate(this._modChannelStepper)));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeCustomWave } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2 } = HTML;\r\n\r\nexport class CustomChipPromptCanvas {\r\n\tprivate readonly _doc: SongDocument;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _lastIndex: number = 0;\r\n\tprivate _lastAmp: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tpublic chipData: Float64Array = new Float64Array(64);\r\n\tpublic startingChipData: Float64Array = new Float64Array(64);\r\n\tprivate _undoHistoryState: number = 0;\r\n\tprivate _changeQueue: Float64Array[] = [];\r\n\tprivate readonly _editorWidth: number = 768; // 64*12\r\n\tprivate readonly _editorHeight: number = 294; // 49*6\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _blocks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._blocks,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 294px; width: 768px; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tconstructor(doc: SongDocument) {\r\n\r\n\t\tthis._doc = doc;\r\n\r\n\t\tfor (let i: number = 0; i <= 4; i += 2) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 4) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 8; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 8) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\t// Horiz. ticks\r\n\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: (this._editorHeight / 2) - 1, width: this._editorWidth, height: 2 }));\r\n\t\tfor (let i: number = 0; i < 3; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: this._editorHeight - 1 - i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t}\r\n\r\n\r\n\t\tlet col: string = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let i: number = 0; i <= 64; i++) {\r\n\t\t\tlet val: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[i];\r\n\t\t\tthis.chipData[i] = val;\r\n\t\t\tthis.startingChipData[i] = val;\r\n\t\t\tthis._blocks.appendChild(SVG.rect({ fill: col, x: (i * this._editorWidth / 64), y: (val + 24) * (this._editorHeight / 49), width: this._editorWidth / 64, height: this._editorHeight / 49 }));\r\n\t\t}\r\n\r\n\t\t// Record initial state of the chip data queue\r\n\t\tthis._storeChange();\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\tthis._svg.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t}\r\n\r\n\tprivate _storeChange = (): void => {\r\n\t\t// Check if change is unique compared to the current history state\r\n\t\tvar sameCheck = true;\r\n\t\tif (this._changeQueue.length > 0) {\r\n\t\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\t\tif (this._changeQueue[this._undoHistoryState][i] != this.chipData[i]) {\r\n\t\t\t\t\tsameCheck = false; i = 64;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (sameCheck == false || this._changeQueue.length == 0) {\r\n\r\n\t\t\t// Create new branch in history, removing all after this in time\r\n\t\t\tthis._changeQueue.splice(0, this._undoHistoryState);\r\n\r\n\t\t\tthis._undoHistoryState = 0;\r\n\r\n\t\t\tthis._changeQueue.unshift(this.chipData.slice());\r\n\r\n\t\t\t// 32 undo max\r\n\t\t\tif (this._changeQueue.length > 32) {\r\n\t\t\t\tthis._changeQueue.pop();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic undo = (): void => {\r\n\t\t// Go backward, if there is a change to go back to\r\n\t\tif (this._undoHistoryState < this._changeQueue.length - 1) {\r\n\t\t\tthis._undoHistoryState++;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic redo = (): void => {\r\n\t\t// Go forward, if there is a change to go to\r\n\t\tif (this._undoHistoryState > 0) {\r\n\t\t\tthis._undoHistoryState--;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst index: number = Math.min(63, Math.max(0, Math.floor(this._mouseX * 64 / this._editorWidth)));\r\n\t\t\tconst amp: number = Math.min(48, Math.max(0, Math.floor(this._mouseY * 49 / this._editorHeight)));\r\n\r\n\t\t\t// Paint between mouse drag indices unless a click just happened.\r\n\t\t\tif (this._lastIndex != -1 && this._lastIndex != index) {\r\n\t\t\t\tvar lowest = index;\r\n\t\t\t\tvar highest = this._lastIndex;\r\n\t\t\t\tvar startingAmp = amp;\r\n\t\t\t\tvar endingAmp = this._lastAmp;\r\n\t\t\t\tif (this._lastIndex < index) {\r\n\t\t\t\t\tlowest = this._lastIndex;\r\n\t\t\t\t\thighest = index;\r\n\t\t\t\t\tstartingAmp = this._lastAmp;\r\n\t\t\t\t\tendingAmp = amp;\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = lowest; i <= highest; i++) {\r\n\t\t\t\t\tconst medAmp: number = Math.round(startingAmp + (endingAmp - startingAmp) * ((i - lowest) / (highest - lowest)));\r\n\t\t\t\t\tthis.chipData[i] = medAmp - 24;\r\n\t\t\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + (medAmp * (this._editorHeight / 49)));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.chipData[index] = amp - 24;\r\n\t\t\t\tthis._blocks.children[index].setAttribute(\"y\", \"\" + (amp * (this._editorHeight / 49)));\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Make a change to the data but don't record it, since this prompt uses its own undo/redo queue\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\r\n\t\t\tthis._lastIndex = index;\r\n\t\t\tthis._lastAmp = amp;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\t// Add current data into queue, if it is unique from last data\r\n\t\tthis._storeChange();\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + ((this.chipData[i] + 24) * (this._editorHeight / 49)));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class CustomChipPrompt implements Prompt {\r\n\r\n\tpublic customChipCanvas: CustomChipPromptCanvas = new CustomChipPromptCanvas(this._doc);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\th2(\"Edit Custom Chip Instrument\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.customChipCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\r\n\t\tthis.customChipCanvas.render();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.customChipCanvas.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.customChipCanvas.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\t// Restore custom chip to starting values\r\n\t\tnew ChangeCustomWave(this._doc, this.customChipCanvas.startingChipData);\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, this.customChipCanvas.chipData), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\r\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\r\n\tlet nextOffset = 0;\r\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\r\n\tconst wordSizes = [8, 4, 2, 1];\r\n\tfor (const wordSize of wordSizes) {\r\n\t\tif (leftBytes >= wordSize) {\r\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\r\n\t\t\tnextOffset = done.nextOffset;\r\n\t\t\tleftBytes = done.leftBytes;\r\n\t\t}\r\n\t}\r\n\treturn dest;\r\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\r\n\t\tlet ViewClass: any = Uint8Array;\r\n\t\tswitch (wordSize) {\r\n\t\t\tcase 8:\r\n\t\t\t\tViewClass = Float64Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tViewClass = Float32Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tViewClass = Uint16Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\r\n\t\t\tview_dest[i] = view_source[i];\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tnextOffset: view_source.byteOffset + view_source.byteLength,\r\n\t\t\tleftBytes: leftBytes - view_dest.length * wordSize,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferWriter {\r\n\tprivate _writeIndex: number = 0;\r\n\tprivate _fileSize: number = 0;\r\n\tprivate _arrayBuffer: ArrayBuffer;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(initialCapacity: number) {\r\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\r\n\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t}\r\n\r\n\tprivate _addBytes(numBytes: number): void {\r\n\t\tthis._fileSize += numBytes;\r\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\r\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\r\n\t\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getWriteIndex(): number {\r\n\t\treturn this._writeIndex;\r\n\t}\r\n\r\n\tpublic rewriteUint32(index: number, value: number): void {\r\n\t\tthis._data.setUint32(index, value >>> 0, false);\r\n\t}\r\n\r\n\tpublic writeUint32(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(4);\r\n\t\tthis._data.setUint32(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint24(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(3);\r\n\t\tthis._data.setUint8(this._writeIndex, (value >> 16) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 1, (value >> 8) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 2, (value) & 0xff);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint16(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(2);\r\n\t\tthis._data.setUint16(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint8(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeInt8(value: number): void {\r\n\t\tvalue = value | 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setInt8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidi7Bits(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidiVariableLength(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\r\n\t\tlet startWriting: boolean = false;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst shift: number = 21 - i * 7;\r\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\r\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \r\n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeMidiAscii(string: string): void {\r\n\t\tthis.writeMidiVariableLength(string.length);\r\n\t\tfor (let i: number = 0; i < string.length; i++) {\r\n\t\t\tconst charCode: number = string.charCodeAt(i);\r\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\r\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\r\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport const defaultMidiExpression: number = 0x7F;\r\nexport const defaultMidiPitchBend: number = 0x2000;\r\n\r\nexport const enum MidiChunkType {\r\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\r\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\r\n}\r\n\r\nexport const enum MidiFileFormat {\r\n\tsingleTrack = 0x0000,\r\n\tsimultaneousTracks = 0x0001,\r\n\tindependentTracks = 0x0002,\r\n}\r\n\r\n// Lower 4 bits indicate channel, except for meta and sysex events.\r\nexport const enum MidiEventType {\r\n\t//channelMode = 0x70,\r\n\tnoteOff = 0x80,\r\n\tnoteOn = 0x90,\r\n\tkeyPressure = 0xA0,\r\n\tcontrolChange = 0xB0,\r\n\tprogramChange = 0xC0,\r\n\tchannelPressure = 0xD0,\r\n\tpitchBend = 0xE0,\r\n\tmetaAndSysex = 0xF0,\r\n\r\n\t// These events are identified by all 8 bits.\r\n\tmeta = 0xFF,\r\n\t// sysexStart = 0xF0,\r\n\t// sysexEscape = 0xF7,\r\n}\r\n\r\nexport const enum MidiControlEventMessage {\r\n\r\n\tsetParameterMSB = 0x06,\r\n\tvolumeMSB = 0x07,\r\n\tpanMSB = 0x0A,\r\n\texpressionMSB = 0x0B,\r\n\r\n\tsetParameterLSB = 0x26,\r\n\t//volumeLSB = 0x27,\r\n\t//expressionLSB = 0x2B,\r\n\r\n\t//nonRegisteredParameterNumberLSB = 0x62,\r\n\t//nonRegisteredParameterNumberMSB = 0x63,\r\n\tregisteredParameterNumberLSB = 0x64,\r\n\tregisteredParameterNumberMSB = 0x65,\r\n\r\n\t// Channel mode messages:\r\n\t/*\r\n\tallSoundOff = 0x78,\r\n\tresetControllers = 0x79,\r\n\tlocalControl = 0x7A,\r\n\tallNotesOff = 0x7B,\r\n\tomniModeOff = 0x7C,\r\n\tomniModeOn = 0x7D,\r\n\tmonoMode = 0x7E,\r\n\tpolyphonicMode = 0x7F,\r\n\t*/\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberMSB {\r\n\tpitchBendRange = 0x00, // semitones\r\n\tfineTuning = 0x00,\r\n\tcoarseTuning = 0x00,\r\n\ttuningProgramSelect = 0x00,\r\n\ttuningBankSelect = 0x00,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberLSB {\r\n\tpitchBendRange = 0x00, // cents\r\n\tfineTuning = 0x01,\r\n\tcoarseTuning = 0x02,\r\n\ttuningProgramSelect = 0x03,\r\n\ttuningBankSelect = 0x04,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiMetaEventMessage {\r\n\tsequenceNumber = 0x00,\r\n\ttext = 0x01,\r\n\tcopyrightNotice = 0x02,\r\n\ttrackName = 0x03,\r\n\tinstrumentName = 0x04,\r\n\tlyricText = 0x05,\r\n\tmarker = 0x06,\r\n\tcuePoint = 0x07,\r\n\tchannelPrefix = 0x20,\r\n\tendOfTrack = 0x2F,\r\n\ttempo = 0x51,\r\n\tsmpteOffset = 0x54,\r\n\ttimeSignature = 0x58,\r\n\tkeySignature = 0x59,\r\n\tsequencerSpecificEvent = 0x7F,\r\n}\r\n\r\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\r\nexport interface AnalogousDrum {\r\n\tfrequency: number;\r\n\tduration: number;\r\n\tvolume: number;\r\n}\r\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\r\n\t35: { frequency: 0, duration: 2, volume: 3 }, // Acoustic Bass Drum\r\n\t36: { frequency: 0, duration: 2, volume: 3 }, // Bass Drum 1\r\n\t37: { frequency: 5, duration: 1, volume: 3 }, // Side Stick\r\n\t38: { frequency: 4, duration: 2, volume: 3 }, // Acoustic Snare\r\n\t39: { frequency: 5, duration: 2, volume: 3 }, // Hand Clap\r\n\t40: { frequency: 4, duration: 2, volume: 3 }, // Electric Snare\r\n\t41: { frequency: 1, duration: 2, volume: 3 }, // Low Floor Tom\r\n\t42: { frequency: 8, duration: 1, volume: 3 }, // Closed Hi Hat\r\n\t43: { frequency: 1, duration: 2, volume: 3 }, // High Floor Tom\r\n\t44: { frequency: 8, duration: 1, volume: 2 }, // Pedal Hi-Hat\r\n\t45: { frequency: 2, duration: 2, volume: 3 }, // Low Tom\r\n\t46: { frequency: 8, duration: 4, volume: 3 }, // Open Hi-Hat\r\n\t47: { frequency: 2, duration: 2, volume: 3 }, // Low-Mid Tom\r\n\t48: { frequency: 3, duration: 2, volume: 3 }, // Hi-Mid Tom\r\n\t49: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 1\r\n\t50: { frequency: 3, duration: 2, volume: 3 }, // High Tom\r\n\t51: { frequency: 6, duration: 4, volume: 2 }, // Ride Cymbal 1\r\n\t52: { frequency: 7, duration: 4, volume: 3 }, // Chinese Cymbal\r\n\t53: { frequency: 6, duration: 2, volume: 3 }, // Ride Bell\r\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\r\n\t55: { frequency: 9, duration: 4, volume: 3 }, // Splash Cymbal\r\n\t56: { frequency: 7, duration: 1, volume: 2 }, // Cowbell\r\n\t57: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 2\r\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\r\n\t59: { frequency: 6, duration: 4, volume: 3 }, // Ride Cymbal 2\r\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\r\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\r\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\r\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\r\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\r\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\r\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\r\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\r\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\r\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\r\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\r\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\r\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\r\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\r\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\r\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\r\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\r\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\r\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\r\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\r\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\r\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\r\n};\r\n\r\nexport function midiVolumeToVolumeMult(volume: number): number {\r\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\r\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\r\n}\r\nexport function volumeMultToMidiVolume(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\r\n}\r\nexport function midiExpressionToVolumeMult(expression: number): number {\r\n\treturn Math.pow(expression / 127, 4.0);\r\n}\r\nexport function volumeMultToMidiExpression(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult, 0.25) * 127;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, EnvelopeType, Config, getArpeggioPitchIndex } from \"../synth/SynthConfig\";\r\nimport { Instrument, Pattern, Note, Song, Synth } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ArrayBufferWriter } from \"./ArrayBufferWriter\";\r\nimport { MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression } from \"./Midi\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nfunction lerp(low: number, high: number, t: number): number {\r\n\treturn low + t * (high - low);\r\n}\r\n\r\nfunction save(blob: Blob, name: string): void {\r\n\tif (navigator.msSaveOrOpenBlob) {\r\n\t\tnavigator.msSaveOrOpenBlob(blob, name);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst anchor: HTMLAnchorElement = document.createElement(\"a\");\r\n\tif (anchor.download != undefined) {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tanchor.href = url;\r\n\t\tanchor.download = name;\r\n\t\t// Chrome bug regression: We need to delay dispatching the click\r\n\t\t// event. Seems to be related to going back in the browser history.\r\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=825100\r\n\t\tsetTimeout(function () { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\r\n\t} else {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tif (!window.open(url, \"_blank\")) window.location.href = url;\r\n\t}\r\n}\r\n\r\nexport class ExportPrompt implements Prompt {\r\n\tprivate synth: Synth;\r\n\tprivate thenExportTo: string;\r\n\tprivate recordedSamplesL: Float32Array;\r\n\tprivate recordedSamplesR: Float32Array;\r\n\tprivate sampleFrames: number;\r\n\tprivate totalChunks: number;\r\n\tprivate currentChunk: number;\r\n\tprivate outputStarted: boolean = false;\r\n\tprivate readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\" });\r\n\tprivate readonly _computedSamplesLabel: HTMLDivElement = div({ style: \"width: 10em;\" }, new Text(\"0:00\"));\r\n\tprivate readonly _enableIntro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _loopDropDown: HTMLInputElement = input({ style: \"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\" });\r\n\tprivate readonly _enableOutro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _formatSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"wav\" }, \"Export to .wav file.\"),\r\n\t\toption({ value: \"mp3\" }, \"Export to .mp3 file.\"),\r\n\t\toption({ value: \"midi\" }, \"Export to .mid file.\"),\r\n\t\toption({ value: \"json\" }, \"Export to .json file.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\r\n\tprivate readonly _outputProgressBar: HTMLDivElement = div({ style: `width: 0%; background: ${ColorConfig.loopAccent}; height: 100%; position: absolute; z-index: 2;` });\r\n\tprivate readonly _outputProgressLabel: HTMLDivElement = div({ style: `position: relative; top: -1px; z-index: 3;` }, \"0%\");\r\n\tprivate readonly _outputProgressContainer: HTMLDivElement = div({ style: `height: 12px; background: ${ColorConfig.uiWidgetBackground}; display: block; position: relative; z-index: 1;` },\r\n\t\tthis._outputProgressBar,\r\n\t\tthis._outputProgressLabel,\r\n\t);\r\n\tprivate static readonly midiSustainInstruments: number[] = [\r\n\t\t0x4A, // rounded -> recorder\r\n\t\t0x47, // triangle -> clarinet\r\n\t\t0x50, // square -> square wave\r\n\t\t0x46, // ¹/₃ pulse -> bassoon\r\n\t\t0x46, // ¹/₄ pulse -> bassoon\r\n\t\t0x44, // ¹/₆ pulse -> oboe\r\n\t\t0x44, // ¹/₈ pulse -> oboe\r\n\t\t0x51, // ¹/₁₂ pulse -> sawtooth wave\r\n\t\t0x51, // ¹/₁₆ pulse -> sawtooth wave\r\n\t\t0x51, // sawtooth -> sawtooth wave\r\n\t\t0x51, // double saw -> sawtooth wave\r\n\t\t0x51, // double pulse -> sawtooth wave\r\n\t\t0x51, // spiky -> sawtooth wave\r\n\t];\r\n\tprivate static readonly midiDecayInstruments: number[] = [\r\n\t\t0x21, // rounded -> fingered bass\r\n\t\t0x2E, // triangle -> harp\r\n\t\t0x2E, // square -> harp\r\n\t\t0x06, // ¹/₃ pulse -> harpsichord\r\n\t\t0x06, // ¹/₄ pulse -> harpsichord\r\n\t\t0x18, // ¹/₆ pulse -> nylon guitar\r\n\t\t0x18, // ¹/₈ pulse -> nylon guitar\r\n\t\t0x19, // ¹/₁₂ pulse -> steel guitar\r\n\t\t0x19, // ¹/₁₆ pulse -> steel guitar\r\n\t\t0x19, // sawtooth -> steel guitar\r\n\t\t0x19, // double saw -> steel guitar\r\n\t\t0x6A, // double pulse -> shamisen\r\n\t\t0x6A, // spiky -> shamisen\r\n\t];\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\r\n\t\th2(\"Export Options\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"File name:\",\r\n\t\t\tthis._fileName,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"Length:\",\r\n\t\t\tthis._computedSamplesLabel,\r\n\t\t),\r\n\t\tdiv({ style: \"display: table; width: 100%;\" },\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Intro:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Loop Count:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Outro:\"),\r\n\t\t\t),\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableIntro),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._loopDropDown),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableOutro),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._formatSelect),\r\n\t\tdiv({ style: \"text-align: left;\" }, \"Exporting can be slow. Reloading the page or clicking the X will cancel it. Please be patient.\"),\r\n\t\tthis._outputProgressContainer,\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._exportButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._loopDropDown.value = \"1\";\r\n\r\n\t\tif (this._doc.song.loopStart == 0) {\r\n\t\t\tthis._enableIntro.checked = false;\r\n\t\t\tthis._enableIntro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableIntro.checked = true;\r\n\t\t\tthis._enableIntro.disabled = false;\r\n\t\t}\r\n\t\tif (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\r\n\t\t\tthis._enableOutro.checked = false;\r\n\t\t\tthis._enableOutro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableOutro.checked = true;\r\n\t\t\tthis._enableOutro.disabled = false;\r\n\t\t}\r\n\r\n\t\tconst lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\r\n\t\tif (lastExportFormat != null) {\r\n\t\t\tthis._formatSelect.value = lastExportFormat;\r\n\t\t}\r\n\r\n\t\tthis._fileName.select();\r\n\t\tsetTimeout(() => this._fileName.focus());\r\n\r\n\t\tthis._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.addEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._enableOutro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._enableIntro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._loopDropDown.addEventListener(\"change\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t\tthis._fileName.value = _doc.song.title;\r\n\t\tExportPrompt._validateFileName(null, this._fileName);\r\n\r\n\t\t(this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1));\r\n\t}\r\n\r\n\t// Could probably be moved to doc or synth. Fine here for now until needed by something else.\r\n\tprivate samplesToTime(samples: number): string {\r\n\t\tconst rawSeconds: number = Math.round(samples / this._doc.synth.samplesPerSecond);\r\n\t\tconst seconds: number = rawSeconds % 60;\r\n\t\tconst minutes: number = Math.floor(rawSeconds / 60);\r\n\t\treturn minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis.outputStarted = false;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic changeFileName(newValue: string) {\r\n\t\tthis._fileName.value = newValue;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.removeEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._export();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\r\n\r\n\t\tlet input: HTMLInputElement;\r\n\t\tif (event != null) {\r\n\t\t\tinput = <HTMLInputElement>event.target;\r\n\t\t} else if (use != undefined) {\r\n\t\t\tinput = use;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\r\n\t\tif (deleteChars.test(input.value)) {\r\n\t\t\tlet cursorPos: number = <number>input.selectionStart;\r\n\t\t\tinput.value = input.value.replace(deleteChars, \"\");\r\n\t\t\tcursorPos--;\r\n\t\t\tinput.setSelectionRange(cursorPos, cursorPos);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\r\n\t}\r\n\r\n\tprivate _export = (): void => {\r\n\t\tif (this.outputStarted == true)\r\n\t\t\treturn;\r\n\t\twindow.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\r\n\t\tswitch (this._formatSelect.value) {\r\n\t\t\tcase \"wav\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"wav\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mp3\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"mp3\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"midi\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToMidi();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToJson();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unhandled file export type.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _synthesize(): void {\r\n\t\t//const timer: number = performance.now();\r\n\r\n\t\t// If output was stopped e.g. user clicked the close button, abort.\r\n\t\tif (this.outputStarted == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Update progress bar UI once per 5 sec of exported data\r\n\t\tconst samplesPerChunk: number = this.synth.samplesPerSecond * 5; //e.g. 44100 * 5\r\n\t\tconst currentFrame: number = this.currentChunk * samplesPerChunk;\r\n\r\n\t\tconst samplesInChunk: number = Math.min(samplesPerChunk, this.sampleFrames - currentFrame);\r\n\t\tconst tempSamplesL = new Float32Array(samplesInChunk);\r\n\t\tconst tempSamplesR = new Float32Array(samplesInChunk);\r\n\r\n\t\tthis.synth.synthesize(tempSamplesL, tempSamplesR, samplesInChunk);\r\n\r\n\t\t// Concatenate chunk data into final array\r\n\t\tthis.recordedSamplesL.set(tempSamplesL, currentFrame);\r\n\t\tthis.recordedSamplesR.set(tempSamplesR, currentFrame);\r\n\r\n\t\t// Update UI\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\");\r\n\t\tthis._outputProgressLabel.innerText = Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\";\r\n\r\n\t\t// Next call, synthesize the next chunk.\r\n\t\tthis.currentChunk++;\r\n\r\n\t\tif (this.currentChunk >= this.totalChunks) {\r\n\t\t\t// Done, call final function\r\n\t\t\tthis._outputProgressLabel.innerText = \"Encoding...\";\r\n\t\t\tif (this.thenExportTo == \"wav\") {\r\n\t\t\t\tthis._exportToWavFinish();\r\n\t\t\t}\r\n\t\t\telse if (this.thenExportTo == \"mp3\") {\r\n\t\t\t\tthis._exportToMp3Finish();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Continue batch export\r\n\t\t\tsetTimeout(() => { this._synthesize(); });\r\n\t\t}\r\n\r\n\t\t//console.log(\"export timer\", (performance.now() - timer) / 1000.0);\r\n\t}\r\n\r\n\tprivate _exportTo(type: string): void {\r\n\t\t// Batch the export operation\r\n\t\tthis.thenExportTo = type;\r\n\t\tthis.currentChunk = 0;\r\n\t\tthis.synth = new Synth(this._doc.song);\r\n\t\tif (type == \"wav\") {\r\n\t\t\tthis.synth.samplesPerSecond = 48000; // Use professional video editing standard sample rate for .wav file export.\r\n\t\t}\r\n\t\telse if (type == \"mp3\") {\r\n\t\t\tthis.synth.samplesPerSecond = 44100; // Use consumer CD standard sample rate for .mp3 export.\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t}\r\n\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", \"0%\");\r\n\t\tthis._outputProgressLabel.innerText = \"0%\";\r\n\r\n\t\tthis.synth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\r\n\t\tif (!this._enableIntro.checked) {\r\n\t\t\tfor (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\r\n\t\t\t\tthis.synth.nextBar();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.synth.warmUpSynthesizer(this._doc.song);\r\n\t\tthis.synth.computeLatestModValues();\r\n\r\n\t\tthis.sampleFrames = this.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, this.synth.loopRepeatCount);\r\n\t\t// Compute how many UI updates will need to run to determine how many \r\n\t\tthis.totalChunks = Math.ceil(this.sampleFrames / (this.synth.samplesPerSecond * 5));\r\n\t\tthis.recordedSamplesL = new Float32Array(this.sampleFrames);\r\n\t\tthis.recordedSamplesR = new Float32Array(this.sampleFrames);\r\n\r\n\t\t// Batch the actual export\r\n\t\tsetTimeout(() => { this._synthesize(); });\r\n\t}\r\n\r\n\tprivate _exportToWavFinish(): void {\r\n\t\tconst sampleFrames: number = this.recordedSamplesL.length;\r\n\t\tconst sampleRate: number = this.synth.samplesPerSecond;\r\n\r\n\t\tconst wavChannelCount: number = 2;\r\n\t\tconst bytesPerSample: number = 2;\r\n\t\tconst bitsPerSample: number = 8 * bytesPerSample;\r\n\t\tconst sampleCount: number = wavChannelCount * sampleFrames;\r\n\r\n\t\tconst totalFileSize: number = 44 + sampleCount * bytesPerSample;\r\n\r\n\t\tlet index: number = 0;\r\n\t\tconst arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\r\n\t\tconst data: DataView = new DataView(arrayBuffer);\r\n\t\tdata.setUint32(index, 0x52494646, false); index += 4;\r\n\t\tdata.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\r\n\t\tdata.setUint32(index, 0x57415645, false); index += 4;\r\n\t\tdata.setUint32(index, 0x666D7420, false); index += 4;\r\n\t\tdata.setUint32(index, 0x00000010, true); index += 4; // size of following header\r\n\t\tdata.setUint16(index, 0x0001, true); index += 2; // not compressed\r\n\t\tdata.setUint16(index, wavChannelCount, true); index += 2; // channel count\r\n\t\tdata.setUint32(index, sampleRate, true); index += 4; // sample rate\r\n\t\tdata.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\r\n\t\tdata.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\r\n\t\tdata.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\r\n\t\tdata.setUint32(index, 0x64617461, false); index += 4;\r\n\t\tdata.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\r\n\r\n\t\tif (bytesPerSample > 1) {\r\n\t\t\t// usually samples are signed. \r\n\t\t\tconst range: number = (1 << (bitsPerSample - 1)) - 1;\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t\tif (bytesPerSample == 2) {\r\n\t\t\t\t\tdata.setInt16(index, valL, true); index += 2;\r\n\t\t\t\t\tdata.setInt16(index, valR, true); index += 2;\r\n\t\t\t\t} else if (bytesPerSample == 4) {\r\n\t\t\t\t\tdata.setInt32(index, valL, true); index += 4;\r\n\t\t\t\t\tdata.setInt32(index, valR, true); index += 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"unsupported sample size\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 8 bit samples are a special case: they are unsigned.\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * 127 + 128);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * 127 + 128);\r\n\t\t\t\tdata.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\r\n\t\t\t\tdata.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([arrayBuffer], { type: \"audio/wav\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".wav\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToMp3Finish(): void {\r\n\t\tconst whenEncoderIsAvailable = (): void => {\r\n\t\t\tconst lamejs: any = (<any>window)[\"lamejs\"];\r\n\t\t\tconst channelCount: number = 2;\r\n\t\t\tconst kbps: number = 192;\r\n\t\t\tconst sampleBlockSize: number = 1152;\r\n\t\t\tconst mp3encoder: any = new lamejs.Mp3Encoder(channelCount, this.synth.samplesPerSecond, kbps);\r\n\t\t\tconst mp3Data: any[] = [];\r\n\r\n\t\t\tconst left: Int16Array = new Int16Array(this.recordedSamplesL.length);\r\n\t\t\tconst right: Int16Array = new Int16Array(this.recordedSamplesR.length);\r\n\t\t\tconst range: number = (1 << 15) - 1;\r\n\t\t\tfor (let i: number = 0; i < this.recordedSamplesL.length; i++) {\r\n\t\t\t\tleft[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tright[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < left.length; i += sampleBlockSize) {\r\n\t\t\t\tconst leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\r\n\t\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\t\t\t}\r\n\r\n\t\t\tconst mp3buf: any = mp3encoder.flush();\r\n\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\r\n\t\t\tconst blob: Blob = new Blob(mp3Data, { type: \"audio/mp3\" });\r\n\t\t\tsave(blob, this._fileName.value.trim() + \".mp3\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\r\n\t\tif (\"lamejs\" in window) {\r\n\t\t\twhenEncoderIsAvailable();\r\n\t\t} else {\r\n\t\t\tvar script = document.createElement(\"script\");\r\n\t\t\tscript.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\r\n\t\t\tscript.onload = whenEncoderIsAvailable;\r\n\t\t\tdocument.head.appendChild(script);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _exportToMidi(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst midiTicksPerBeepBoxTick: number = 2;\r\n\t\tconst midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\r\n\t\tconst secondsPerMinute: number = 60;\r\n\t\tconst microsecondsPerMinute: number = secondsPerMinute * 1000000;\r\n\t\tconst beatsPerMinute: number = song.getBeatsPerMinute();\r\n\t\tconst microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\r\n\t\t//const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\r\n\t\tconst midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\r\n\t\tconst pitchBendRange: number = 24;\r\n\t\tconst defaultNoteVelocity: number = 90;\r\n\r\n\t\tconst unrolledBars: number[] = [];\r\n\t\tif (this._enableIntro.checked) {\r\n\t\t\tfor (let bar: number = 0; bar < song.loopStart; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\r\n\t\t\tfor (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._enableOutro.checked) {\r\n\t\t\tfor (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst tracks = [{ isMeta: true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false }];\r\n\t\tlet midiChannelCounter: number = 0;\r\n\t\tlet foundADrumset: boolean = false;\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tif (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true });\r\n\t\t\t\tfoundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\r\n\t\t\t} else {\r\n\t\t\t\tif (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false });\r\n\t\t\t\tif (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\r\n\t\twriter.writeUint32(MidiChunkType.header);\r\n\t\twriter.writeUint32(6); // length of headers is 6 bytes\r\n\t\twriter.writeUint16(MidiFileFormat.simultaneousTracks);\r\n\t\twriter.writeUint16(tracks.length);\r\n\t\twriter.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\r\n\r\n\t\tfor (const track of tracks) {\r\n\t\t\twriter.writeUint32(MidiChunkType.track);\r\n\r\n\t\t\tconst { isMeta, channel, midiChannel, isNoise, isDrumset } = track;\r\n\r\n\t\t\t// We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\r\n\t\t\tconst trackStartIndex: number = writer.getWriteIndex();\r\n\t\t\twriter.writeUint32(0); // placeholder for track size\r\n\r\n\t\t\tlet prevTime: number = 0;\r\n\t\t\tlet barStartTime: number = 0;\r\n\t\t\tconst writeEventTime = function (time: number): void {\r\n\t\t\t\tif (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\r\n\t\t\t\twriter.writeMidiVariableLength(time - prevTime);\r\n\t\t\t\tprevTime = time;\r\n\t\t\t}\r\n\r\n\t\t\tconst writeControlEvent = function (message: MidiControlEventMessage, value: number): void {\r\n\t\t\t\tif (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\r\n\t\t\t\twriter.writeUint8(MidiEventType.controlChange | midiChannel);\r\n\t\t\t\twriter.writeMidi7Bits(message);\r\n\t\t\t\twriter.writeMidi7Bits(value | 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (isMeta) {\r\n\t\t\t\t// for first midi track, include tempo, time signature, and key signature information.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.text);\r\n\t\t\t\twriter.writeMidiAscii(\"Composed with jummbus.bitbucket.io\");\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.tempo);\r\n\t\t\t\twriter.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\r\n\t\t\t\twriter.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\r\n\t\t\t\twriter.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\r\n\t\t\t\twriter.writeUint8(song.beatsPerBar); // numerator.\r\n\t\t\t\twriter.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\r\n\t\t\t\twriter.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\r\n\t\t\t\twriter.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\r\n\r\n\t\t\t\tconst isMinor: boolean = Config.scales[song.scale].flags[3] && !Config.scales[song.scale].flags[4];\r\n\t\t\t\tconst key: number = song.key; // C=0, C#=1, counting up to B=11\r\n\t\t\t\tlet numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\r\n\t\t\t\tif ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\r\n\t\t\t\tif (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\r\n\t\t\t\twhile (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.keySignature);\r\n\t\t\t\twriter.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\r\n\t\t\t\twriter.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\r\n\t\t\t\twriter.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\r\n\r\n\t\t\t\tif (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\r\n\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\twriter.writeMidiAscii(\"Loop Start\");\r\n\r\n\t\t\t\tfor (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar * song.loopLength;\r\n\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\t\twriter.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\r\n\t\t\t\tif (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// For remaining tracks, set up the instruments and write the notes:\r\n\r\n\t\t\t\tlet channelName: string = isNoise\r\n\t\t\t\t\t? \"noise channel \" + channel\r\n\t\t\t\t\t: \"pitch channel \" + channel;\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.trackName);\r\n\t\t\t\twriter.writeMidiAscii(channelName);\r\n\r\n\t\t\t\t// This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\r\n\r\n\t\t\t\tlet prevInstrumentIndex: number = -1;\r\n\t\t\t\tfunction writeInstrumentSettings(instrumentIndex: number): void {\r\n\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\r\n\t\t\t\t\tif (prevInstrumentIndex != instrumentIndex) {\r\n\t\t\t\t\t\tprevInstrumentIndex = instrumentIndex;\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\r\n\t\t\t\t\t\twriter.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\r\n\r\n\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\tlet instrumentProgram: number = 81; // default to sawtooth wave. \r\n\r\n\t\t\t\t\t\t\tif (preset != null && preset.midiProgram != undefined) {\r\n\t\t\t\t\t\t\t\tinstrumentProgram = preset.midiProgram;\r\n\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t\t\t// The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\r\n\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst envelopeType: EnvelopeType = instrument.getFilterEnvelope().type;\r\n\t\t\t\t\t\t\t\tconst instrumentDecays: boolean = envelopeType == EnvelopeType.decay || envelopeType == EnvelopeType.twang;\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\t\t\t\t\tif (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 47 : 75; // timpani : pan flute\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tconst filterInstruments: number[] = instrumentDecays\r\n\t\t\t\t\t\t\t\t\t\t? ExportPrompt.midiDecayInstruments\r\n\t\t\t\t\t\t\t\t\t\t: ExportPrompt.midiSustainInstruments;\r\n\t\t\t\t\t\t\t\t\tif (filterInstruments.length > instrument.chipWave) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = filterInstruments[instrument.chipWave];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 2 : 81; // electric grand : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Unrecognized instrument type.\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Program (instrument) change event:\r\n\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.programChange | midiChannel);\r\n\t\t\t\t\t\t\twriter.writeMidi7Bits(instrumentProgram);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Instrument volume:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\r\n\r\n\t\t\t\t\t\t// Instrument pan:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (song.getPattern(channel, 0) == null) {\r\n\t\t\t\t\t// Go ahead and apply the instrument settings at the beginning of the channel\r\n\t\t\t\t\t// even if a bar doesn't kick in until later.\r\n\t\t\t\t\twriteInstrumentSettings(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet prevPitchBend: number = defaultMidiPitchBend;\r\n\t\t\t\tlet prevExpression: number = defaultMidiExpression;\r\n\t\t\t\tlet shouldResetExpressionAndPitchBend: boolean = false;\r\n\t\t\t\t//let prevTremolo: number = -1;\r\n\t\t\t\tconst channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\r\n\t\t\t\tconst intervalScale: number = isNoise ? Config.noiseInterval : 1;\r\n\r\n\t\t\t\tfor (const bar of unrolledBars) {\r\n\t\t\t\t\tconst pattern: Pattern | null = song.getPattern(channel, bar);\r\n\r\n\t\t\t\t\tif (pattern != null) {\r\n\r\n\t\t\t\t\t\tconst instrumentIndex: number = pattern.instrument;\r\n\t\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\t\t\t\t\t\twriteInstrumentSettings(instrumentIndex);\r\n\r\n\t\t\t\t\t\tlet chordHarmonizes: boolean = false;\r\n\t\t\t\t\t\tlet usesArpeggio: boolean = true;\r\n\t\t\t\t\t\tlet polyphony: number = 1;\r\n\t\t\t\t\t\tchordHarmonizes = instrument.getChord().harmonizes;\r\n\t\t\t\t\t\tusesArpeggio = instrument.getChord().arpeggiates;\r\n\t\t\t\t\t\tif (usesArpeggio) {\r\n\t\t\t\t\t\t\tif (chordHarmonizes) {\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = 2;\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = Config.operatorCount;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpolyphony = Config.maxChordSize;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\r\n\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\r\n\t\t\t\t\t\t\tconst noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\r\n\t\t\t\t\t\t\tlet pinTime: number = noteStartTime;\r\n\t\t\t\t\t\t\tlet pinVolume: number = note.pins[0].volume;\r\n\t\t\t\t\t\t\tlet pinInterval: number = note.pins[0].interval;\r\n\t\t\t\t\t\t\tconst prevPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst nextPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst toneCount: number = Math.min(polyphony, note.pitches.length);\r\n\t\t\t\t\t\t\tconst velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].volume / 6)) : defaultNoteVelocity;\r\n\r\n\t\t\t\t\t\t\t// The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \r\n\t\t\t\t\t\t\t// To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\r\n\t\t\t\t\t\t\t// This may involve offsetting this base pitch from BeepBox's note pitch.\r\n\t\t\t\t\t\t\tlet mainInterval: number = note.pickMainInterval();\r\n\t\t\t\t\t\t\tlet pitchOffset: number = mainInterval * intervalScale;\r\n\t\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\t\tlet maxPitchOffset: number = pitchBendRange;\r\n\t\t\t\t\t\t\t\tlet minPitchOffset: number = -pitchBendRange;\r\n\t\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\t\tconst interval = note.pins[pinIndex].interval * intervalScale;\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\r\n\t\t\t\t\t\t\t\t\tminPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t// I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\r\n\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > polyphony) {\r\n\t\t\t\t\t\t\t\t\tlet lowestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tlet highestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tconst basePitch: number = note.pitches[toneCount - 1];\r\n\t\t\t\t\t\t\t\t\tfor (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t\thighestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset -= lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t\tminPitchOffset += lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\t\tpitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\tconst nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\r\n\t\t\t\t\t\t\t\tconst nextPinVolume: number = note.pins[pinIndex].volume;\r\n\t\t\t\t\t\t\t\tconst nextPinInterval: number = note.pins[pinIndex].interval;\r\n\r\n\t\t\t\t\t\t\t\tconst length: number = nextPinTime - pinTime;\r\n\t\t\t\t\t\t\t\tfor (let midiTick: number = 0; midiTick < length; midiTick++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTickTime: number = pinTime + midiTick;\r\n\t\t\t\t\t\t\t\t\tconst linearVolume: number = lerp(pinVolume, nextPinVolume, midiTick / length);\r\n\t\t\t\t\t\t\t\t\tconst linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\r\n\r\n\t\t\t\t\t\t\t\t\tconst interval: number = linearInterval * intervalScale - pitchOffset;\r\n\t\t\t\t\t\t\t\t\tconst pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\r\n\r\n\t\t\t\t\t\t\t\t\tconst expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.expressionToVolumeMult(linearVolume))));\r\n\r\n\t\t\t\t\t\t\t\t\tif (pitchBend != prevPitchBend) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t\t\t\tprevPitchBend = pitchBend;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (expression != prevExpression && !isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, expression);\r\n\t\t\t\t\t\t\t\t\t\tprevExpression = expression;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst noteStarting: boolean = midiTickTime == noteStartTime;\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlet nextPitch: number = note.pitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\tif (isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch += mainInterval;\r\n\t\t\t\t\t\t\t\t\t\t\tconst drumsetMap: number[] = [\r\n\t\t\t\t\t\t\t\t\t\t\t\t36, // Bass Drum 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t41, // Low Floor Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t45, // Low Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t48, // Hi-Mid Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t40, // Electric Snare\r\n\t\t\t\t\t\t\t\t\t\t\t\t39, // Hand Clap\r\n\t\t\t\t\t\t\t\t\t\t\t\t59, // Ride Cymbal 2\r\n\t\t\t\t\t\t\t\t\t\t\t\t49, // Crash Cymbal 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t46, // Open Hi-Hat\r\n\t\t\t\t\t\t\t\t\t\t\t\t55, // Splash Cymbal\r\n\t\t\t\t\t\t\t\t\t\t\t\t69, // Cabasa\r\n\t\t\t\t\t\t\t\t\t\t\t\t54, // Tambourine\r\n\t\t\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\t\t\t\tif (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = drumsetMap[nextPitch];\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksPerArpeggio = Config.ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, instrument.fastTwoNoteArp, arpeggio)];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\r\n\t\t\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (isNoise) nextPitch *= 2;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tnextPitch = Math.max(0, Math.min(127, nextPitch));\r\n\t\t\t\t\t\t\t\t\t\tnextPitches[toneIndex] = nextPitch;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tif (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOn | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t\tprevPitches[toneIndex] = nextPitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tpinTime = nextPinTime;\r\n\t\t\t\t\t\t\t\tpinVolume = nextPinVolume;\r\n\t\t\t\t\t\t\t\tpinInterval = nextPinInterval;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\r\n\r\n\t\t\t\t\t\t\t// End all tones.\r\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\r\n\r\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\r\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\r\n\t\t\t\t\t\t\t\t// Reset expression\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\r\n\t\t\t\t\t\t\t\t// Reset pitch bend\r\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twriteEventTime(barStartTime);\r\n\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\r\n\t\t\twriter.writeMidiVariableLength(0x00);\r\n\r\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\r\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], { type: \"audio/midi\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToJson(): void {\r\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\r\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\r\n\t\tconst blob: Blob = new Blob([jsonString], { type: \"application/json\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\r\n\t\tthis._close();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HarmonicsWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeHarmonics } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class HarmonicsEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\r\n\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;\", width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._lastControlPointContainer,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"harmonics\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeHarmonics | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = SVG.rect({ fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight });\r\n\t\t\tthis._lastControlPoints.push(rect);\r\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\r\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\r\n\t\t}\r\n\r\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\r\n\t\tlet path: string = \"\";\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\r\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\r\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\r\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\r\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\r\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\r\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n// A few wrapper classes that add functionality onto existing HTML elements, namely binding some events to an implementation-specified change class\r\n\r\nimport { Change } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nconst { span } = HTML;\r\n\r\nexport class InputBox {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: string = \"\";\r\n\tprivate _oldValue: string = \"\";\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: string, newValue: string) => Change) {\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: string): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tthis._change = this._getChange(this._oldValue, this.input.value);\r\n\t\tthis._doc.setProspectiveChange(this._change);\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._doc.record(this._change!);\r\n\t\tthis._change = null;\r\n\t};\r\n}\r\n\r\nexport class Slider {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: number = 0;\r\n\tprivate _oldValue: number = 0;\r\n\tpublic container: HTMLSpanElement;\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: ((oldValue: number, newValue: number) => Change) | null, midTick: boolean) {\r\n\t\t// A container is created around the input to allow for spec-compliant pseudo css classes (e.g ::before and ::after, which must be added to containers, not the input itself)\r\n\t\tthis.container = (midTick) ? span({ class: \"midTick\", style: \"position: sticky; width: 61.5%;\" }, input) : span({ style: \"position: sticky;\" }, input);\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: number): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t};\r\n}","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferReader {\r\n\tprivate _readIndex: number = 0;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(data: DataView) {\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\tpublic getReadIndex(): number {\r\n\t\treturn this._readIndex;\r\n\t}\r\n\r\n\tpublic readUint32(): number {\r\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\r\n\t\tthis._readIndex += 4;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint24(): number {\r\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\r\n\t}\r\n\r\n\tpublic readUint16(): number {\r\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\r\n\t\tthis._readIndex += 2;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readInt8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getInt8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic peakUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\treturn this._data.getUint8(this._readIndex);\r\n\t}\r\n\r\n\tpublic readMidi7Bits(): number {\r\n\t\tconst result: number = this.readUint8();\r\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\r\n\t\treturn result & 0x7f;\r\n\t}\r\n\r\n\tpublic readMidiVariableLength(): number {\r\n\t\tlet result: number = 0;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst nextByte: number = this.readUint8();\r\n\t\t\tresult += nextByte & 0x7f;\r\n\t\t\tif (nextByte & 0x80) {\r\n\t\t\t\tresult = result << 7;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic skipBytes(length: number): void {\r\n\t\tthis._readIndex += length;\r\n\t}\r\n\r\n\tpublic hasMore(): boolean {\r\n\t\treturn this._data.byteLength > this._readIndex;\r\n\t}\r\n\r\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\r\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\r\n\t\tthis.skipBytes(length);\r\n\t\treturn result;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth } from \"../synth/synth\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns } from \"./changes\";\r\nimport { AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult } from \"./Midi\";\r\nimport { ArrayBufferReader } from \"./ArrayBufferReader\";\r\n\r\n//namespace beepbox {\r\nconst { button, p, div, h2, input } = HTML;\r\n\r\nexport class ImportPrompt implements Prompt {\r\n\tprivate readonly _fileInput: HTMLInputElement = input({ type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\" });\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 300px;\" },\r\n\t\th2(\"Import\"),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\r\n\t\t),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\r\n\t\t),\r\n\t\tthis._fileInput,\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._fileInput.select();\r\n\t\tsetTimeout(() => this._fileInput.focus());\r\n\r\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _whenFileSelected = (): void => {\r\n\t\tconst file: File = this._fileInput.files![0];\r\n\t\tif (!file) return;\r\n\r\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n\t\tif (extension == \"json\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\r\n\t\t\t});\r\n\t\t\treader.readAsText(file);\r\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\r\n\t\t\t});\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"Unrecognized file extension.\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\r\n\r\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\r\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\r\n\t\tlet headerReader: ArrayBufferReader | null = null;\r\n\t\tinterface Track {\r\n\t\t\treader: ArrayBufferReader;\r\n\t\t\tnextEventMidiTick: number;\r\n\t\t\tended: boolean;\r\n\t\t\trunningStatus: number;\r\n\t\t}\r\n\t\tconst tracks: Track[] = [];\r\n\t\twhile (reader.hasMore()) {\r\n\t\t\tconst chunkType: number = reader.readUint32();\r\n\t\t\tconst chunkLength: number = reader.readUint32();\r\n\t\t\tif (chunkType == MidiChunkType.header) {\r\n\t\t\t\tif (headerReader == null) {\r\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\r\n\t\t\t\t}\r\n\t\t\t} else if (chunkType == MidiChunkType.track) {\r\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\tif (trackReader.hasMore()) {\r\n\t\t\t\t\ttracks.push({\r\n\t\t\t\t\t\treader: trackReader,\r\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\r\n\t\t\t\t\t\tended: false,\r\n\t\t\t\t\t\trunningStatus: -1,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Unknown chunk type. Skip it.\r\n\t\t\t\treader.skipBytes(chunkLength);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (headerReader == null) {\r\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\r\n\t\t\tthis._close();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fileFormat: number = headerReader.readUint16();\r\n\t\t\t/*const trackCount: number =*/ headerReader.readUint16();\r\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\r\n\r\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\r\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\r\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\r\n\t\tlet currentIndependentTrackIndex: number = 0;\r\n\t\tconst currentTrackIndices: number[] = [];\r\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\r\n\t\tif (independentTracks) {\r\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\r\n\t\t} else {\r\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\r\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinterface NoteEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tpitch: number;\r\n\t\t\tvelocity: number;\r\n\t\t\tprogram: number;\r\n\t\t\tinstrumentVolume: number;\r\n\t\t\tinstrumentPan: number;\r\n\t\t\ton: boolean;\r\n\t\t}\r\n\t\tinterface PitchBendEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tinterval: number;\r\n\t\t}\r\n\t\tinterface ExpressionEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tvolume: number;\r\n\t\t}\r\n\r\n\t\t// To read a MIDI file we have to simulate state changing over time.\r\n\t\t// Keep a record of various parameters for each channel that may\r\n\t\t// change over time, initialized to default values.\r\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\r\n\t\tconst channelRPNMSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst channelRPNLSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst pitchBendRangeMSB: number[] = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]; // pitch bend range defaults to 2 semitones.\r\n\t\tconst pitchBendRangeLSB: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // and 0 cents.\r\n\t\tconst currentInstrumentProgram: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tconst currentInstrumentVolumes: number[] = [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100];\r\n\t\tconst currentInstrumentPans: number[] = [64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64];\r\n\t\tconst noteEvents: NoteEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst pitchBendEvents: PitchBendEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst expressionEvents: ExpressionEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\r\n\t\tlet beatsPerBar: number = 8;\r\n\t\tlet numSharps: number = 0;\r\n\t\tlet isMinor: boolean = false;\r\n\r\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\r\n\t\tlet currentMidiTick: number = 0;\r\n\t\twhile (true) {\r\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\r\n\t\t\tlet anyTrackHasMore: boolean = false;\r\n\t\t\tfor (const trackIndex of currentTrackIndices) {\r\n\r\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\r\n\t\t\t\tconst track: Track = tracks[trackIndex];\r\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\r\n\r\n\t\t\t\t\t// If the most significant bit is set in the first byte\r\n\t\t\t\t\t// of the event, it's a new event status, otherwise\r\n\t\t\t\t\t// reuse the running status and save the next byte for\r\n\t\t\t\t\t// the content of the event. I'm assuming running status\r\n\t\t\t\t\t// is separate for each track.\r\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\r\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\r\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\r\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\r\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\r\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\r\n\r\n\t\t\t\t\tswitch (eventType) {\r\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tif (velocity == 0) {\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\r\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\r\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\r\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\r\n\t\t\t\t\t\t\t\t\tpitch: pitch,\r\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\r\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\r\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\r\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\r\n\t\t\t\t\t\t\t\t\ton: true,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\r\n\t\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\r\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\r\n\r\n\t\t\t\t\t\t\tswitch (message) {\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\r\n\t\t\t\t\t\t\t\t\texpressionEvents[eventChannel].push({ midiTick: currentMidiTick, volume: Synth.volumeMultToExpression(midiExpressionToVolumeMult(value)) });\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.programChange: {\r\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\r\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\r\n\r\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\r\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\r\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\r\n\r\n\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({ midiTick: currentMidiTick, interval: interval });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\r\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\r\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\r\n\r\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\r\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\r\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 3);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\r\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\r\n\r\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \r\n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\r\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\r\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\r\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\r\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\r\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\r\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\r\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\r\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\r\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\r\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\r\n\t\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\r\n\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\r\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttrack.ended = true;\r\n\r\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\r\n\t\t\t\t\t\tif (independentTracks) {\r\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\r\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\r\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\r\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\r\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\r\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!track.ended) {\r\n\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (anyTrackHasMore) {\r\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\r\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\r\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\r\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\r\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\r\n\r\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\r\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\r\n\t\t}\r\n\r\n\t\tlet key: number = numSharps;\r\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\r\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\r\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\r\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\r\n\r\n\t\t// Convert each midi channel into a BeepBox channel.\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = [];\r\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\r\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\r\n\r\n\t\t\tconst channel: Channel = new Channel();\r\n\r\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\r\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\r\n\r\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\r\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\r\n\t\t\tconst isModChannel: boolean = (channelPreset != null && channelPreset.isMod == true);\r\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\r\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\r\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : 12 * Config.pitchOctaves; // hardcoded 12edo for midi\r\n\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\t\tnoiseChannels.unshift(channel);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnoiseChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t} else if (isModChannel) {\r\n\t\t\t\tmodChannels.push(channel);\r\n\t\t\t} else {\r\n\t\t\t\tpitchChannels.push(channel);\r\n\t\t\t}\r\n\r\n\t\t\tlet currentVelocity: number = 1.0;\r\n\t\t\tlet currentProgram: number = 0;\r\n\t\t\tlet currentInstrumentVolume: number = 0;\r\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\r\n\r\n\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet setInstrumentVolume: boolean = false;\r\n\r\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\r\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\tconst instrument: Instrument = new Instrument(false, false);\r\n\t\t\t\tinstrument.fromJsonObject(preset.settings, false, false, false, false);\r\n\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\r\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\r\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\r\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\r\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\r\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\t\t\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\r\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\r\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\r\n\t\t\t\t\t\tlet maxDuration: number = 0;\r\n\t\t\t\t\t\tlet expression: number = 1;\r\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\r\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\r\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\r\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\texpression = Math.max(expression, Math.round(drum.volume * currentVelocity));\r\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\r\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\r\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\r\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\r\n\r\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, expression, true);\r\n\r\n\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\r\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\r\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\r\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpattern.notes.push(note);\r\n\r\n\t\t\t\t\t\theldPitches.length = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\r\n\r\n\t\t\t\t// Advance the pitch bend and expression timelines to the given midiTick, \r\n\t\t\t\t// changing the value of currentMidiInterval or currentMidiExpression.\r\n\t\t\t\t// IMPORTANT: These functions can't rewind!\r\n\t\t\t\tlet currentMidiInterval: number = 0.0;\r\n\t\t\t\tlet currentMidiExpression: number = 3.0;\r\n\t\t\t\tlet pitchBendEventIndex: number = 0;\r\n\t\t\t\tlet expressionEventIndex: number = 0;\r\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\r\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\r\n\t\t\t\t\t\tpitchBendEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction updateCurrentMidiExpression(midiTick: number) {\r\n\t\t\t\t\twhile (expressionEventIndex < expressionEvents[midiChannel].length && expressionEvents[midiChannel][expressionEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiExpression = expressionEvents[midiChannel][expressionEventIndex].volume;\r\n\t\t\t\t\t\texpressionEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventMidiTick: number = 0;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet pitchSum: number = 0;\r\n\t\t\t\tlet pitchCount: number = 0;\r\n\r\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\r\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\r\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\r\n\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\r\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\r\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\r\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\r\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\r\n\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\r\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\r\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\r\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\r\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\r\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, isModChannel, false, false);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and expression events\r\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and expression.\r\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\r\n\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\r\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\r\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\r\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiExpression));\r\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\r\n\r\n\t\t\t\t\t\t\t\tinterface PotentialPin {\r\n\t\t\t\t\t\t\t\t\tpart: number;\r\n\t\t\t\t\t\t\t\t\tpitch: number;\r\n\t\t\t\t\t\t\t\t\tvolume: number;\r\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\r\n\t\t\t\t\t\t\t\t\tkeyVolume: boolean;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\r\n\t\t\t\t\t\t\t\t\t{ part: 0, pitch: initialBeepBoxPitch, volume: firstPin.volume, keyPitch: false, keyVolume: false }\r\n\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\r\n\r\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\r\n\t\t\t\t\t\t\t\tlet prevPartExpression: number = currentVelocity * currentMidiExpression;\r\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\r\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\r\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\r\n\r\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and expressions. Detect places where\r\n\t\t\t\t\t\t\t\t\t// the interval or expression are at or cross whole numbers, and add these to the list of\r\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(midiTick);\r\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\r\n\t\t\t\t\t\t\t\t\tconst partExpression: number = currentVelocity * currentMidiExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\r\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\r\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestExpression: number = Math.round(partExpression);\r\n\t\t\t\t\t\t\t\t\tconst expressionIsNearInteger: boolean = Math.abs(partExpression - nearestExpression) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst expressionCrossedInteger: boolean = (Math.abs(prevPartExpression - Math.round(prevPartExpression)))\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partExpression - prevPartExpression) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partExpression) != Math.floor(prevPartExpression);\r\n\t\t\t\t\t\t\t\t\tconst keyExpression: boolean = expressionIsNearInteger || expressionCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\r\n\t\t\t\t\t\t\t\t\tprevPartExpression = partExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tif (keyPitch || keyExpression || lastPart) {\r\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = { part: noteRelativePart, pitch: nearestPitch, volume: nearestExpression, keyPitch: keyPitch || lastPart, keyVolume: keyExpression || lastPart };\r\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\r\n\r\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\r\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\r\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\r\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.volume - prevPin.volume) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestVolumeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedVolume: number = prevPin.volume + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedVolume - potentialPin.volume);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestVolumeDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestVolumeDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addVolumePin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addVolumePinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\r\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.volume));\r\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\r\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.volume));\r\n\r\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\r\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\r\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\r\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\r\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\r\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\r\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\r\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\r\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\r\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\r\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\r\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\r\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (noteEvent.on) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\r\n\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\r\n\t\t\t\tchannel.octave = (isNoiseChannel || isModChannel) ? 0 : Math.max(0, Math.min(this._doc.scrollableOctaves, Math.round((averagePitch / 12) - 1.5)));\r\n\t\t\t}\r\n\r\n\t\t\twhile (channel.bars.length < songTotalBars) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\r\n\t\t// To compensate, try to merge non-overlapping channels.\r\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\r\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\r\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\r\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\r\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\r\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\r\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\r\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\r\n\t\t\t\t\t\tlet conflicts: number = 0;\r\n\t\t\t\t\t\tlet gaps: number = 0;\r\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\r\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\r\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\r\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\r\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\r\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\r\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\r\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\r\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\r\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\r\n\t\t\t\tfor (const instrument of channelB.instruments) {\r\n\t\t\t\t\tchannelA.instruments.push(instrument);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pattern of channelB.patterns) {\r\n\t\t\t\t\tpattern.instrument += channelAInstrumentCount;\r\n\t\t\t\t\tchannelA.patterns.push(pattern);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\r\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove channelB.\r\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tcompactChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\tclass ChangeImportMidi extends ChangeGroup {\r\n\t\t\tconstructor(doc: SongDocument) {\r\n\t\t\t\tsuper();\r\n\t\t\t\tconst song: Song = doc.song;\r\n\t\t\t\tsong.tempo = beatsPerMinute;\r\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\r\n\t\t\t\tsong.key = key;\r\n\t\t\t\tsong.scale = 11;\r\n\t\t\t\tsong.reverb = 1;\r\n\t\t\t\tsong.rhythm = 1;\r\n\r\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\t\t\tremoveDuplicatePatterns(modChannels);\r\n\r\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t\t\t\tsong.loopStart = 0;\r\n\t\t\t\tsong.loopLength = song.barCount;\r\n\t\t\t\tthis._didSomething();\r\n\t\t\t\tdoc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._doc.goBackToStart();\r\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class Layout {\r\n\tprivate static readonly _normalLayout: string = `\r\n\t\t`;\r\n\r\n\tprivate static readonly _wideFullScreenLayout: string = `\r\n\t\t\t/* wide full screen (jummbox) */\r\n\t\t\t@media (min-width: 1001px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: 512px minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmax-height: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: calc( 100vh - 20px );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tposition: absolute !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _fullScreenLayout: string = `\r\n\t\t\t/* full screen (beepbox) */\r\n\t\t\t@media (min-width: 701px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"pattern-area settings-area\" \"track-area track-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor.selectRow {\r\n\t\t\t\t\theight: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .operatorRow {\r\n\t\t\t\t\theiht: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: 446px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow-x: auto;\r\n\t\t\t\t\tscrollbar-width: auto;\r\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar {\r\n\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-track {\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-thumb {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setFullScreen(layout: string): void {\r\n\t\tswitch (layout) {\r\n\t\t\tcase \"normal\":\r\n\t\t\t\tthis._styleElement.textContent = this._normalLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._fullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"widefullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._wideFullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nexport class LayoutPrompt implements Prompt {\r\n\tprivate readonly _octaveStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\", value: \"0\" });\r\n\tprivate readonly _layoutSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"normal\" }, \"Normal Layout\"),\r\n\t\toption({ value: \"fullscreen\" }, \"Full-screen Layout\"),\r\n\t\toption({ value: \"widefullscreen\" }, \"Wide Full-screen Layout\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Set Layout\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Extra View Octaves:\",\r\n\t\t\t),\r\n\t\t\tthis._octaveStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._layoutSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._octaveStepper.min = \"0\";\r\n\t\tthis._octaveStepper.max = \"2\";\r\n\t\tconst lastOctaves: string | null = window.localStorage.getItem(\"extraOctaves\");\r\n\t\tif (lastOctaves != null) {\r\n\t\t\tthis._octaveStepper.value = lastOctaves;\r\n\t\t}\r\n\r\n\t\tconst lastLayout: string | null = window.localStorage.getItem(\"fullScreen\");\r\n\t\tif (lastLayout != null) {\r\n\t\t\tthis._layoutSelect.value = lastLayout;\r\n\t\t}\r\n\r\n\t\tthis._octaveStepper.select();\r\n\t\tsetTimeout(() => this._octaveStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.addEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.removeEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this._layoutSelect.value);\r\n\t\twindow.localStorage.setItem(\"extraOctaves\", this._octaveStepper.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.fullScreen = this._layoutSelect.value;\r\n\t\tLayout.setFullScreen(this._doc.fullScreen);\r\n\t\tthis._doc.windowOctaves = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\t\tthis._doc.scrollableOctaves = Config.pitchOctaves - this._doc.windowOctaves;\r\n\t\tthis._doc.windowPitchCount = this._doc.windowOctaves * this._doc.song.edo + 1;\r\n\t\tthis._doc.undo();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeLimiterSettings } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class LimiterCanvas {\r\n\tprivate readonly _editorWidth: number = 200; // 112\r\n\tprivate readonly _editorHeight: number = 52; // 26\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.textSelection, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.textSelection, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _midCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.primaryText, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.linkAccent, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.linkAccent, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _label0: SVGTextElement = SVG.text({ x: \"-1.5%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"0\");\r\n\tprivate readonly _label1: SVGTextElement = SVG.text({ x: \"48.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"1\");\r\n\tprivate readonly _label2: SVGTextElement = SVG.text({ x: \"98.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"2\");\r\n\tprivate readonly _inLabel: SVGTextElement = SVG.text({ x: \"-5%\", y: \"113.5%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"In\");\r\n\tprivate readonly _outLabel: SVGTextElement = SVG.text({ x: \"-9%\", y: \"131%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"Out\");\r\n\tprivate readonly _xAxisLabel: SVGTextElement = SVG.text({ x: \"42%\", y: \"172%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--primary-text)\" }, \"Volume\");\r\n\tprivate readonly _yAxisLabel: SVGTextElement = SVG.text({ x: \"55.2%\", y: \"160%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", transform: \"rotate(-90 30,120)\", fill: \"var(--primary-text)\" }, \"Gain\");\r\n\tprivate readonly _inVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"105%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"120%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _inVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"105%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _inVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"105%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"120%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"120%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"30%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"45%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"50%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._defs,\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._boostCurve,\r\n\t\tthis._midCurve,\r\n\t\tthis._limitCurve,\r\n\t\tthis._boostDot,\r\n\t\tthis._limitDot,\r\n\t\tthis._label0,\r\n\t\tthis._label1,\r\n\t\tthis._label2,\r\n\t\tthis._inLabel,\r\n\t\tthis._outLabel,\r\n\t\tthis._xAxisLabel,\r\n\t\tthis._yAxisLabel,\r\n\t\tthis._inVolumeBg,\r\n\t\tthis._outVolumeBg,\r\n\t\tthis._inVolumeBar,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._inVolumeCap,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 4em; width: 80%; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tprivate _limiterPrompt: LimiterPrompt;\r\n\r\n\tconstructor(lim: LimiterPrompt) {\r\n\t\tfor (let i: number = 0; i <= 2; i++) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 3; i += 2) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 4) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis._limiterPrompt = lim;\r\n\r\n\t}\r\n\r\n\tpublic animateVolume(inVolumeCap: number, historicInCap: number, outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._inVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, inVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._inVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicInCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, outVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicOutCap * (this._editorWidth / 2.0)));\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn Math.max(0, (1 - (point / 5)) * (this._editorHeight - 1) + 1);\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet currentSubpathIdx: number = 0;\r\n\t\tlet lastSubpathIdx: number = -1;\r\n\t\tlet path: string = \"\";\r\n\t\tlet subPaths: string[] = [\"\", \"\", \"\"];\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Calculate next value based on limiter settings\r\n\t\t\tlet limiterRatio: number = +this._limiterPrompt.limitRatioSlider.value;\r\n\t\t\tlimiterRatio = (limiterRatio < 10 ? limiterRatio / 10 : (limiterRatio - 9));\r\n\t\t\tlet compressorRatio: number = +this._limiterPrompt.compressionRatioSlider.value;\r\n\t\t\tcompressorRatio = (compressorRatio < 10 ? compressorRatio / 10 : (1 + (compressorRatio - 10) / 60));\r\n\t\t\tlet limiterThreshold: number = +this._limiterPrompt.limitThresholdSlider.value;\r\n\t\t\tlet compressorThreshold: number = +this._limiterPrompt.compressionThresholdSlider.value;\r\n\t\t\tlet useVol: number = i * 2.0 / 64.0; // Scale from 0~2\r\n\t\t\tlet nextValue: number = 1 / 1.05;\r\n\t\t\tif (useVol >= limiterThreshold) {\r\n\t\t\t\t// Limiter falloff\r\n\t\t\t\tnextValue = 1 / (1.05 * (useVol + 1 - limiterThreshold) * limiterRatio + (1 - limiterRatio));\r\n\t\t\t}\r\n\t\t\telse if (useVol < compressorThreshold) {\r\n\t\t\t\t// Compressor boost\r\n\t\t\t\tnextValue = 1 / (((useVol + 1 - compressorThreshold) * 0.8 + 0.25) * compressorRatio + 1.05 * (1 - compressorRatio));\r\n\t\t\t}\r\n\r\n\t\t\t// first point in entire path\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tpath += \"M 0 \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t}\r\n\r\n\t\t\t// first point in a specific subpath\r\n\t\t\tif (currentSubpathIdx > lastSubpathIdx) {\r\n\t\t\t\tif (lastSubpathIdx >= 0) {\r\n\t\t\t\t\tsubPaths[lastSubpathIdx] += \"L \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t\t}\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\r\n\t\t\t\tif (currentSubpathIdx == 1 || (lastSubpathIdx == 0 && currentSubpathIdx == 2)) {\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\t\t\t\tif (currentSubpathIdx == 2) {\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastSubpathIdx = currentSubpathIdx;\r\n\t\t\t}\r\n\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\r\n\t\t\t// Move to next subpath\r\n\t\t\tif (currentSubpathIdx == 0 && (i >= compressorThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t\tif (currentSubpathIdx == 1 && (i >= limiterThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tthis._boostCurve.setAttribute(\"d\", subPaths[0]);\r\n\t\tthis._midCurve.setAttribute(\"d\", subPaths[1]);\r\n\t\tthis._limitCurve.setAttribute(\"d\", subPaths[2]);\r\n\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\t}\r\n}\r\n\r\nexport class LimiterPrompt implements Prompt {\r\n\r\n\tprivate limiterCanvas: LimiterCanvas = new LimiterCanvas(this);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tpublic readonly limitDecaySlider: HTMLInputElement = input({ title: \"limit decay\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"1\", max: \"30\", value: \"4\", step: \"1\" });\r\n\tpublic readonly limitRiseSlider: HTMLInputElement = input({ title: \"limit rise\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"2000\", max: \"10000\", value: \"4000\", step: \"250\" });\r\n\tpublic readonly compressionThresholdSlider: HTMLInputElement = input({ title: \"compressor threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"1.1\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly limitThresholdSlider: HTMLInputElement = input({ title: \"limiter threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"2\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly compressionRatioSlider: HTMLInputElement = input({ title: \"compressor ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly limitRatioSlider: HTMLInputElement = input({ title: \"limiter ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly masterGainSlider: HTMLInputElement = input({ title: \"master gain\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"5\", value: \"1\", step: \"0.02\" });\r\n\r\n\tprivate startingLimitDecay: number;\r\n\tprivate startingLimitRise: number;\r\n\tprivate startingCompressionThreshold: number;\r\n\tprivate startingLimitThreshold: number;\r\n\tprivate startingCompressionRatio: number;\r\n\tprivate startingLimitRatio: number;\r\n\tprivate startingMasterGain: number;\r\n\r\n\tprivate inVolumeHistoricTimer: number = 0.0;\r\n\tprivate inVolumeHistoricCap: number = 0.0;\r\n\tprivate outVolumeHistoricTimer: number = 0.0;\r\n\tprivate outVolumeHistoricCap: number = 0.0;\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"width:45%;\" }, \"Reset\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Limiter Options\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.limiterCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 1.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 4.5%; color: ${ColorConfig.textSelection};` },\r\n\t\t\t\t\"Boost\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 0%; color: ${ColorConfig.linkAccent};` },\r\n\t\t\t\t\"Cutoff\"\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 0.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Threshold:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionThresholdSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitThresholdSlider,\r\n\t\t\t),\r\n\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Ratio:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionRatioSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitRatioSlider,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Decay:\"\r\n\t\t\t),\r\n\t\t\tthis.limitDecaySlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Rise:\"\r\n\t\t\t),\r\n\t\t\tthis.limitRiseSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Master Gain:\"\r\n\t\t\t),\r\n\t\t\tthis.masterGainSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t\tthis._resetButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.addEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis.limitRatioSlider.value = \"\" + (this._doc.song.limitRatio < 1 ? this._doc.song.limitRatio * 10 : 9 + this._doc.song.limitRatio);\r\n\t\tthis.compressionRatioSlider.value = \"\" + (this._doc.song.compressionRatio < 1 ? this._doc.song.compressionRatio * 10 : 10 + (this._doc.song.compressionRatio - 1) * 60);\r\n\t\tthis.limitThresholdSlider.value = \"\" + this._doc.song.limitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this._doc.song.compressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this._doc.song.limitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this._doc.song.limitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this._doc.song.masterGain;\r\n\r\n\t\tthis.startingLimitRatio = +this.limitRatioSlider.value;\r\n\t\tthis.startingCompressionRatio = +this.compressionRatioSlider.value;\r\n\t\tthis.startingLimitThreshold = +this.limitThresholdSlider.value;\r\n\t\tthis.startingCompressionThreshold = +this.compressionThresholdSlider.value;\r\n\t\tthis.startingLimitDecay = +this.limitDecaySlider.value;\r\n\t\tthis.startingLimitRise = +this.limitRiseSlider.value;\r\n\t\tthis.startingMasterGain = +this.masterGainSlider.value;\r\n\r\n\t\tthis.limitDecaySlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.compressionRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.addEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tthis.limiterCanvas.render();\r\n\t}\r\n\r\n\tprivate _volumeUpdate = (): void => {\r\n\t\tthis.inVolumeHistoricTimer--;\r\n\t\tif (this.inVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.inVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.inVolumeCap > this.inVolumeHistoricCap) {\r\n\t\t\tthis.inVolumeHistoricCap = this._doc.song.inVolumeCap;\r\n\t\t\tthis.inVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.limiterCanvas.animateVolume(this._doc.song.inVolumeCap, this.inVolumeHistoricCap, this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t//console.log(this._doc.song.volumeCap);\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t\tthis.limitThresholdSlider.value = this.compressionThresholdSlider.value;\r\n\t\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\t// Same as above, but for conflicts between limiter threshold and compressor threshold, favor the limiter\r\n\tprivate _whenInputFavorLimitThreshold = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\t\tthis.compressionThresholdSlider.value = this.limitThresholdSlider.value;\r\n\t\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\t// Reset all sliders to starting values\r\n\t\tthis.limitRatioSlider.value = \"\" + this.startingLimitRatio;\r\n\t\tthis.compressionRatioSlider.value = \"\" + this.startingCompressionRatio;\r\n\t\tthis.limitThresholdSlider.value = \"\" + this.startingLimitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this.startingCompressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this.startingLimitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this.startingLimitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this.startingMasterGain;\r\n\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.removeEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis.limitDecaySlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.limitRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.removeEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetDefaults = (): void => {\r\n\t\t// Set song limiter settings to their default\r\n\t\tif (this.limitRatioSlider.value != \"10\" || this.limitRiseSlider.value != \"4000\" || this.limitDecaySlider.value != \"4\" || this.limitThresholdSlider.value != \"1\" || this.compressionRatioSlider.value != \"10\" || this.compressionThresholdSlider.value != \"1\" || this.masterGainSlider.value != \"1\") {\r\n\r\n\t\t\tthis.limitRatioSlider.value = \"10\";\r\n\t\t\tthis.limitRiseSlider.value = \"4000\";\r\n\t\t\tthis.limitDecaySlider.value = \"4\";\r\n\t\t\tthis.limitThresholdSlider.value = \"1\";\r\n\t\t\tthis.compressionRatioSlider.value = \"10\";\r\n\t\t\tthis.compressionThresholdSlider.value = \"1\";\r\n\t\t\tthis.masterGainSlider.value = \"1\";\r\n\r\n\t\t\tthis._whenInput();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateLimiter = (): void => {\r\n\t\t// Save slider values to song\r\n\t\tthis._doc.record(new ChangeLimiterSettings(this._doc,\r\n\t\t\t(+this.limitRatioSlider.value < 10 ? +this.limitRatioSlider.value / 10 : (+this.limitRatioSlider.value - 9)),\r\n\t\t\t(+this.compressionRatioSlider.value < 10 ? +this.compressionRatioSlider.value / 10 : (1 + (+this.compressionRatioSlider.value - 10) / 60)),\r\n\t\t\t+this.limitThresholdSlider.value,\r\n\t\t\t+this.compressionThresholdSlider.value,\r\n\t\t\t+this.limitRiseSlider.value,\r\n\t\t\t+this.limitDecaySlider.value,\r\n\t\t\t+this.masterGainSlider.value,\r\n\t\t), true);\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeLoop, ChangeChannelBar } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\ninterface Cursor {\r\n\tstartBar: number;\r\n\tmode: number;\r\n}\r\n\r\ninterface Endpoints {\r\n\tstart: number;\r\n\tlength: number;\r\n}\r\n\r\nexport class LoopEditor {\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _startMode: number = 0;\r\n\tprivate readonly _endMode: number = 1;\r\n\tprivate readonly _bothMode: number = 2;\r\n\r\n\tprivate readonly _loop: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4 });\r\n\tprivate readonly _highlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, height: this._editorHeight },\r\n\t\tthis._loop,\r\n\t\tthis._highlight,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ style: \"height: 20px; position: relative; margin: 5px 0;\" }, this._svg);\r\n\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _change: ChangeLoop | null = null;\r\n\tprivate _cursor: Cursor = { startBar: -1, mode: -1 };\r\n\tprivate _mouseX: number = 0;\r\n\t//private _mouseY: number = 0;\r\n\tprivate _clientStartX: number = 0;\r\n\tprivate _clientStartY: number = 0;\r\n\tprivate _startedScrolling: boolean = false;\r\n\tprivate _draggingHorizontally: boolean = false;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _renderedLoopStart: number = -1;\r\n\tprivate _renderedLoopStop: number = -1;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\tthis._cursor.startBar = bar;\r\n\r\n\t\tif (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\r\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\r\n\t\t\t\tthis._cursor.mode = this._startMode;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.mode = this._endMode;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._cursor.mode = this._bothMode;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _findEndPoints(middle: number): Endpoints {\r\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\r\n\t\tlet end: number = start + this._doc.song.loopLength;\r\n\t\tif (start < 0) {\r\n\t\t\tend -= start;\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tif (end > this._doc.song.barCount) {\r\n\t\t\tstart -= end - this._doc.song.barCount;\r\n\t\t\tend = this._doc.song.barCount;\r\n\t\t}\r\n\t\treturn { start: start, length: end - start };\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\tthis._whenMouseMoved(event);\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\t//event.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\t//this._whenTouchMoved(event);\r\n\t\tthis._clientStartX = event.touches[0].clientX;\r\n\t\tthis._clientStartY = event.touches[0].clientY;\r\n\t\tthis._draggingHorizontally = false;\r\n\t\tthis._startedScrolling = false;\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\r\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\r\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\r\n\t\t\t\tthis._startedScrolling = true;\r\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\r\n\t\t\t\tthis._draggingHorizontally = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._draggingHorizontally) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\r\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\r\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\r\n\t\t\t\toldStart = this._change.oldStart;\r\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\r\n\t\t\t}\r\n\r\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\t\tlet start: number;\r\n\t\t\tlet end: number;\r\n\t\t\tlet temp: number;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tend = oldEnd;\r\n\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\r\n\t\t\t\tif (start == end) {\r\n\t\t\t\t\tstart = end - 1;\r\n\t\t\t\t} else if (start > end) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\tstart = oldStart;\r\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tif (end < 0) end = 0;\r\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\r\n\t\t\t\tif (end == start) {\r\n\t\t\t\t\tend = start + 1;\r\n\t\t\t\t} else if (end < start) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\r\n\t\t\t}\r\n\t\t\tthis._doc.synth.jumpIntoLoop();\r\n\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\r\n\t\t\t}\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t} else {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!this._startedScrolling) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tthis._mouseOver = false;\r\n\t\t\tthis._whenCursorReleased(event);\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\tthis._change = null;\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tconst radius: number = this._editorHeight / 2;\r\n\r\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\r\n\t\t\t} else {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\r\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\r\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis._highlight.setAttribute(\"d\",\r\n\t\t\t\t`M ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`L ${highlightStop - radius} ${4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\r\n\t\tconst radius: number = this._editorHeight / 2;\r\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t}\r\n\r\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\r\n\t\t\tthis._renderedLoopStart = loopStart;\r\n\t\t\tthis._renderedLoopStop = loopStop;\r\n\t\t\tthis._loop.setAttribute(\"d\",\r\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeMoveNotesSideways } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class MoveNotesSidewaysPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t\toption({ value: \"wrapAround\" }, \"Wrap notes around within bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Move Notes Sideways\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats to move:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Negative is left, positive is right)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\r\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus(), 100); // Add 100ms because the key macro (W) gets captured by the stepper...\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\r\n\t\tvalue = Math.round(value * 100) / 100;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { InputBox } from \"./HTMLWrapper\";\r\nimport { ChangeChannelOrder, ChangeChannelName, ChangeChannelCount } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nexport class MuteEditor {\r\n\tprivate readonly _buttons: HTMLDivElement[] = [];\r\n\tprivate readonly _channelCounts: HTMLDivElement[] = [];\r\n\tprivate readonly _channelNameDisplay: HTMLDivElement = HTML.div({ style: `background-color: ${ColorConfig.uiWidgetFocus}; white-space:nowrap; display: none; transform:translate(20px); width: auto; pointer-events: none; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\");\r\n\tpublic readonly _channelNameInput: InputBox = new InputBox(HTML.input({ style: `color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.uiWidgetFocus}; margin-top: -2px; display: none; width: 6em; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\"), this._doc, (oldValue: string, newValue: string) => new ChangeChannelName(this._doc, oldValue, newValue));\r\n\r\n\tprivate readonly _channelDropDown: HTMLSelectElement = HTML.select({ style: \"width: 0px; left: 19px; height: 19px; position:absolute; opacity:0\" },\r\n\r\n\t\tHTML.option({ value: \"rename\" }, \"Rename...\"),\r\n\t\tHTML.option({ value: \"chnUp\" }, \"Move Channel Up\"),\r\n\t\tHTML.option({ value: \"chnDown\" }, \"Move Channel Down\"),\r\n\t\tHTML.option({ value: \"chnMute\" }, \"Mute Channel\"),\r\n\t\tHTML.option({ value: \"chnSolo\" }, \"Solo Channel\"),\r\n\t\tHTML.option({ value: \"chnInsert\" }, \"Insert Channel Below\"),\r\n\t\tHTML.option({ value: \"chnDelete\" }, \"Delete This Channel\"),\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"muteEditor\", style: \"position: relative; margin-top: \" + Config.barEditorHeight + \"px;\" }, this._channelNameDisplay, this._channelNameInput.input, this._channelDropDown);\r\n\r\n\tprivate _editorHeight: number = 128;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedPitchChannels: number = 0;\r\n\tprivate _renderedNoiseChannels: number = 0;\r\n\tprivate _renderedModChannels: number = 0;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _channelDropDownChannel: number = 0;\r\n\tprivate _channelDropDownOpen: boolean = false;\r\n\tprivate _channelDropDownLastState: boolean = false;\r\n\r\n\tconstructor(private _doc: SongDocument, private _editor: SongEditor) {\r\n\t\tthis.container.addEventListener(\"click\", this._onClick);\r\n\t\tthis.container.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tthis.container.addEventListener(\"mouseleave\", this._onMouseLeave);\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t\tthis._channelDropDown.addEventListener(\"change\", this._channelDropDownHandler);\r\n\t\tthis._channelDropDown.addEventListener(\"mousedown\", this._channelDropDownGetOpenedPosition);\r\n\t\tthis._channelDropDown.addEventListener(\"blur\", this._channelDropDownBlur);\r\n\t\tthis._channelDropDown.addEventListener(\"click\", this._channelDropDownClick);\r\n\r\n\t\tthis._channelNameInput.input.addEventListener(\"change\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"blur\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"mousedown\", this._channelNameInputClicked);\r\n\t\tthis._channelNameInput.input.addEventListener(\"input\", this._channelNameInputWhenInput);\r\n\t}\r\n\r\n\tprivate _channelNameInputWhenInput = (): void => {\r\n\t\tlet newValue = this._channelNameInput.input.value;\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tthis._channelNameInput.input.value = newValue.substring(0, 15);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelNameInputClicked = (event: MouseEvent): void => {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\tprivate _channelNameInputHide = (): void => {\r\n\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t}\r\n\r\n\tprivate _channelDropDownClick = (event: MouseEvent): void => {\r\n\t\tthis._channelDropDownOpen = !this._channelDropDownLastState;\r\n\t\tthis._channelDropDownGetOpenedPosition(event);\r\n\t\t//console.log(\"click \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownBlur = (): void => {\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t//console.log(\"blur \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\r\n\t\tthis._channelDropDownLastState = this._channelDropDownOpen;\r\n\r\n\t\tthis._channelDropDownChannel = Math.floor(Math.min(this._renderedChannelCount, Math.max(0, parseInt(this._channelDropDown.style.getPropertyValue(\"top\")) / this._renderedChannelHeight)));\r\n\t\tthis._doc.muteEditorChannel = this._channelDropDownChannel;\r\n\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\r\n\t\t// Check if channel is at limit, in which case another can't be inserted\r\n\t\tif ((this._channelDropDownChannel < this._doc.song.pitchChannelCount && this._doc.song.pitchChannelCount == Config.pitchChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.noiseChannelCount == Config.noiseChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.modChannelCount == Config.modChannelCountMax)) {\r\n\t\t\tthis._channelDropDown.options[5].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[5].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also check if a channel is eligible to move up or down based on the song's channel settings.\r\n\t\tif (this._channelDropDownChannel == 0 || this._channelDropDownChannel == this._doc.song.pitchChannelCount || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._channelDropDown.options[1].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[1].disabled = false;\r\n\t\t}\r\n\t\tif (this._channelDropDownChannel == this._doc.song.pitchChannelCount - 1 || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._channelDropDownChannel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\tthis._channelDropDown.options[2].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[2].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also, can't delete the last pitch channel.\r\n\t\tif (this._doc.song.pitchChannelCount == 1 && this._channelDropDownChannel == 0) {\r\n\t\t\tthis._channelDropDown.options[6].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[6].disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelDropDownHandler = (event: Event): void => {\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tevent.stopPropagation();\r\n\t\t//console.log(\"handler \" + this._channelDropDownOpen);\r\n\r\n\t\tswitch (this._channelDropDown.value) {\r\n\t\t\tcase \"rename\":\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"transform\", this._channelNameDisplay.style.getPropertyValue(\"transform\"));\r\n\t\t\t\tif (this._channelNameDisplay.textContent != null) {\r\n\t\t\t\t\tthis._channelNameInput.input.value = this._channelNameDisplay.textContent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._channelNameInput.input.value = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tthis._channelNameInput.input.select();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnUp\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel - 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnDown\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel + 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnMute\":\r\n\t\t\t\tthis._doc.song.channels[this._channelDropDownChannel].muted = !this._doc.song.channels[this._channelDropDownChannel].muted;\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnSolo\": {\r\n\t\t\t\t// Check for any channel not matching solo pattern\r\n\t\t\t\tlet shouldSolo: boolean = false;\r\n\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tif (this._doc.song.channels[channel].muted == (channel == this._channelDropDownChannel)) {\r\n\t\t\t\t\t\tshouldSolo = true;\r\n\t\t\t\t\t\tchannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (shouldSolo) {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = (channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnInsert\": {\r\n\t\t\t\t// Add a channel at the end, then swap it in.\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tlet swapIndex: number;\r\n\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tnewPitchChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tnewNoiseChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewModChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount + newModChannelCount;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount));\r\n\r\n\t\t\t\tfor (let channel: number = swapIndex - 1; channel > this._channelDropDownChannel + 1; channel--) {\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel - 1, channel), true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnDelete\": {\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t// Removing pitch channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewPitchChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t// Removing noise channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewNoiseChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Removing mod channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewModChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount + newModChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount), true);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._channelDropDown.value != \"rename\")\r\n\t\t\tthis._editor.refocusStage();\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _onClick = (event: MouseEvent): void => {\r\n\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) return;\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos < 21.0) {\r\n\t\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\r\n\t\t}\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) {\r\n\t\t\tif (!this._channelDropDownOpen && event.target != this._channelNameDisplay && event.target != this._channelDropDown) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos >= 21.0) {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\t// Mouse over chn. number\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"\");\r\n\t\t\t\tvar height = this._doc.getChannelHeight();\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"transform\", \"translate(20px, \" + (height / 4 + height * index) + \"px)\");\r\n\r\n\t\t\t\tif (this._doc.song.channels[index].name != \"\") {\r\n\t\t\t\t\tthis._channelNameDisplay.textContent = this._doc.song.channels[index].name;\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (index < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Pitch \" + (index + 1);\r\n\t\t\t\t\t} else if (index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Noise \" + (index - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Mod \" + (index - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// The name set will only show up when this becomes visible, e.g. when the dropdown is opened.\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._channelDropDown.style.top = (Config.barEditorHeight - 2 + index * this._renderedChannelHeight) + \"px\";\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"15px\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseLeave = (event: MouseEvent): void => {\r\n\t\tif (!this._channelDropDownOpen) {\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onKeyUp(event: KeyboardEvent): void {\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // esc\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tif (!this._doc.enableChannelMuting) return;\r\n\r\n\t\tconst channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\r\n\t\t\t\tconst channelCountText: HTMLDivElement = HTML.div({ class: \"noSelection muteButtonText\", style: \"display: table-cell; vertical-align: middle; text-align: center; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; pointer-events: none; width: 12px; height: 20px; transform: translate(0px, 1px);\" });\r\n\t\t\t\tconst muteButton: HTMLDivElement = HTML.div({ class: \"mute-button\", style: `display: block; pointer-events: none; width: 16px; height: 20px; transform: translate(2px, 1px);` });\r\n\r\n\t\t\t\tconst muteContainer: HTMLDivElement = HTML.div({ style: \"align-items: center; height: 20px; margin: 0px; display: table; flex-direction: row; justify-content: space-between;\" }, [\r\n\t\t\t\t\tmuteButton,\r\n\t\t\t\t\tchannelCountText,\r\n\t\t\t\t]);\r\n\t\t\t\tthis.container.appendChild(muteContainer);\r\n\t\t\t\tthis._buttons[y] = muteContainer;\r\n\t\t\t\tthis._channelCounts[y] = channelCountText;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\r\n\t\t\t}\r\n\r\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\r\n\t\t}\r\n\r\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\tif (this._doc.song.channels[y].muted) {\r\n\t\t\t\tthis._buttons[y].children[0].classList.add(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitchDim;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoiseDim;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgModDim;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._buttons[y].children[0].classList.remove(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitch;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoise;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgMod;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._buttons[y].style.marginTop = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t\tthis._buttons[y].style.marginBottom = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.remove(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.add(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedPitchChannels != this._doc.song.pitchChannelCount || this._renderedNoiseChannels != this._doc.song.noiseChannelCount) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tlet val: number = (y + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._renderedPitchChannels = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannels = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannels = this._doc.song.modChannelCount;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tthis._editorHeight = Config.barEditorHeight + this._doc.song.getChannelCount() * channelHeight;\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.container.style.height = this._editorHeight + \"px\";\r\n\r\n\t\t\tif (this._renderedChannelHeight < 27) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-4px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-4px\");\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._renderedChannelHeight < 30) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-1px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeOctave } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Piano } from \"./Piano\";\r\n\r\n//namespace beepbox {\r\nexport class OctaveScrollBar {\r\n\tprivate readonly _editorWidth: number = 20;\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _notchHeight: number = 4.0;\r\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\r\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\r\n\tprivate _barHeight: number = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4, height: this._barHeight });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2, height: this._barHeight });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;\", width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 \" + this._editorHeight, preserveAspectRatio: \"none\" });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\" }, this._svg);\r\n\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _barBottom: number;\r\n\tprivate _renderedBarBottom: number = -1;\r\n\tprivate _renderedBarHeight: number = -1;\r\n\tprivate _change: ChangeOctave | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument, private _piano: Piano) {\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\r\n\t\tthis._svg.appendChild(this._handle);\r\n\r\n\t\t// notches:\r\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\r\n\t\t\tthis._svg.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight }));\r\n\t\t}\r\n\r\n\t\tthis._svg.appendChild(this._handleHighlight);\r\n\t\tthis._svg.appendChild(this._upHighlight);\r\n\t\tthis._svg.appendChild(this._downHighlight);\r\n\r\n\t\tconst center: number = this._editorWidth * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowWidth: number = 6;\r\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\r\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tif (this._dragging) {\r\n\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : currentOctave;\r\n\r\n\t\t\tlet octave: number = currentOctave;\r\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\toctave++;\r\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave > 0) {\r\n\t\t\t\t\toctave--;\r\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, octave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDown) {\r\n\t\t\tif (this._dragging) {\r\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\t\t} else {\r\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\r\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\r\n\t\t\t\t\tif (currentOctave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave + 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (currentOctave > 0) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave - 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showUpHighlight: boolean = false;\r\n\t\tlet showDownHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\r\n\t\t\t\tshowUpHighlight = true;\r\n\t\t\t} else if (this._mouseY > this._barBottom) {\r\n\t\t\t\tshowDownHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.song.channels[this._doc.channel].octave);\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\t// Re-calculate bar height\r\n\t\tthis._barHeight = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\r\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) ? \"hidden\" : \"visible\";\r\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedBarHeight != this._barHeight) {\r\n\t\t\tthis._renderedBarBottom = this._barBottom;\r\n\t\t\tthis._renderedBarHeight = this._barHeight;\r\n\t\t\tthis._handle.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handleHighlight.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handle.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\t\t\tthis._handleHighlight.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Chord, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, ModSetting } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeVolumeBend, ChangePitchBend, ChangePitchAdded } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\r\n\tconst clone: T = <T>node.cloneNode(false);\r\n\tnode.parentNode!.replaceChild(clone, node);\r\n\treturn clone;\r\n}\r\n\r\nclass PatternCursor {\r\n\tpublic valid: boolean = false;\r\n\tpublic prevNote: Note | null = null;\r\n\tpublic curNote: Note | null = null;\r\n\tpublic nextNote: Note | null = null;\r\n\tpublic pitch: number = 0;\r\n\tpublic pitchIndex: number = -1;\r\n\tpublic curIndex: number = 0;\r\n\tpublic start: number = 0;\r\n\tpublic end: number = 0;\r\n\tpublic part: number = 0;\r\n\tpublic exactPart: number = 0;\r\n\tpublic nearPinIndex: number = 0;\r\n\tpublic pins: NotePin[] = [];\r\n}\r\n\r\nexport class PatternEditor {\r\n\tpublic controlMode: boolean = false;\r\n\tpublic shiftMode: boolean = false;\r\n\tprivate readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgModBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorModBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgBackground: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\" });\r\n\tprivate _svgNoteContainer: SVGSVGElement = SVG.svg();\r\n\tprivate readonly _svgPlayhead: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\" });\r\n\tprivate readonly _svgPreview: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\" });\r\n\tpublic modDragValueLabel: HTMLDivElement = HTML.div({ width: \"90\", \"text-anchor\": \"start\", contenteditable: \"true\", style: \"display: flex, justify-content: center; align-items:center; position:absolute; pointer-events: none;\", \"dominant-baseline\": \"central\", });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\" },\r\n\t\tSVG.defs(\r\n\t\t\tthis._svgNoteBackground,\r\n\t\t\tthis._svgDrumBackground,\r\n\t\t\tthis._svgModBackground,\r\n\t\t),\r\n\t\tthis._svgBackground,\r\n\t\tthis._selectionRect,\r\n\t\tthis._svgNoteContainer,\r\n\t\tthis._svgPreview,\r\n\t\tthis._svgPlayhead,\r\n\t);\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\" }, this._svg, this.modDragValueLabel);\r\n\r\n\tprivate readonly _defaultModBorder: number = 34;\r\n\tprivate readonly _backgroundPitchRows: SVGRectElement[] = [];\r\n\tprivate readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\r\n\tprivate readonly _backgroundModRow: SVGRectElement = SVG.rect();\r\n\r\n\tprivate _editorWidth: number;\r\n\r\n\tprivate _modDragValueLabelLeft: number = 0;\r\n\tprivate _modDragValueLabelTop: number = 0;\r\n\tprivate _modDragValueLabelWidth: number = 0;\r\n\tpublic editingModLabel: boolean = false;\r\n\tprivate _modDragStartValue: number = 0;\r\n\tprivate _modDragPin: NotePin;\r\n\tprivate _modDragNote: Note;\r\n\tprivate _modDragSetting: ModSetting;\r\n\tprivate _modDragLowerBound: number = 0;\r\n\tprivate _modDragUpperBound: number = 6;\r\n\r\n\tprivate _editorHeight: number;\r\n\tprivate _partWidth: number;\r\n\tprivate _pitchHeight: number = -1;\r\n\tprivate _pitchBorder: number;\r\n\tprivate _pitchCount: number;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mouseDragging: boolean = false;\r\n\tprivate _mouseHorizontal: boolean = false;\r\n\tprivate _usingTouch: boolean = false;\r\n\tprivate _copiedPinChannels: NotePin[][] = [];\r\n\tprivate _copiedPins: NotePin[];\r\n\tprivate _mouseXStart: number = 0;\r\n\tprivate _mouseYStart: number = 0;\r\n\tprivate _touchTime: number = 0;\r\n\tprivate _shiftHeld: boolean = false;\r\n\tprivate _dragConfirmed: boolean = false;\r\n\tprivate _draggingStartOfSelection: boolean = false;\r\n\tprivate _draggingEndOfSelection: boolean = false;\r\n\tprivate _draggingSelectionContents: boolean = false;\r\n\tprivate _dragTime: number = 0;\r\n\tprivate _dragPitch: number = 0;\r\n\tprivate _dragVolume: number = 0;\r\n\tprivate _dragVisible: boolean = false;\r\n\tprivate _dragChange: UndoableChange | null = null;\r\n\tprivate _changePatternSelection: UndoableChange | null = null;\r\n\tprivate _lastChangeWasPatternSelection: boolean = false;\r\n\tprivate _cursor: PatternCursor = new PatternCursor();\r\n\tprivate _stashCursorPinVols: number[][] = [];\r\n\tprivate _pattern: Pattern | null = null;\r\n\tprivate _playheadX: number = 0.0;\r\n\tprivate _octaveOffset: number = 0;\r\n\tprivate _renderedWidth: number = -1;\r\n\tprivate _renderedHeight: number = -1;\r\n\tprivate _renderedBeatWidth: number = -1;\r\n\tprivate _renderedPitchHeight: number = -1;\r\n\tprivate _renderedFifths: boolean = false;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedRhythm: number = -1;\r\n\tprivate _renderedPitchChannelCount: number = -1;\r\n\tprivate _renderedNoiseChannelCount: number = -1;\r\n\tprivate _renderedModChannelCount: number = -1;\r\n\tprivate _followPlayheadBar: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\r\n\t\tfor (let i: number = 0; i < this._doc.song.edo; i++) {\r\n\t\t\tconst rectangle: SVGRectElement = SVG.rect();\r\n\t\t\trectangle.setAttribute(\"x\", \"1\");\r\n\t\t\trectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\r\n\t\t\tthis._svgNoteBackground.appendChild(rectangle);\r\n\t\t\tthis._backgroundPitchRows[i] = rectangle;\r\n\t\t}\r\n\r\n\t\tthis._backgroundDrumRow.setAttribute(\"x\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"y\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgDrumBackground.appendChild(this._backgroundDrumRow);\r\n\t\tthis._backgroundModRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgModBackground.appendChild(this._backgroundModRow);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\t\tthis._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\t\tthis._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\t\tthis._svg.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t\tthis.modDragValueLabel.addEventListener(\"input\", this._validateModDragLabelInput);\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.style.display = \"none\";\r\n\t\t\tthis._svg.appendChild(SVG.rect({ x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\" }));\r\n\t\t}\r\n\r\n\t\tthis.resetCopiedPins();\r\n\t}\r\n\r\n\tprivate _validateModDragLabelInput = (event: Event): void => {\r\n\t\tconst label: HTMLDivElement = <HTMLDivElement>event.target;\r\n\r\n\t\t// Special case - when user is typing a number between zero and min, allow it (the alternative is quite annoying, when min is nonzero)\r\n\t\tlet converted: number = Number(label.innerText);\r\n\t\tif (!isNaN(converted) && converted >= 0 && converted < this._modDragLowerBound)\r\n\t\t\treturn;\r\n\r\n\t\t// Another special case - allow \"\" e.g. the empty string and a single negative sign, but don't do anything about it.\r\n\t\tif (label.innerText != \"\" && label.innerText != \"-\") {\r\n\t\t\t// Force NaN results to be 0\r\n\t\t\tif (isNaN(converted)) {\r\n\t\t\t\tconverted = this._modDragLowerBound;\r\n\t\t\t\tlabel.innerText = \"\" + this._modDragLowerBound;\r\n\t\t\t}\r\n\r\n\t\t\tlet presValue: number = Math.floor(Math.max(Number(this._modDragLowerBound), Math.min(Number(this._modDragUpperBound), converted)));\r\n\t\t\tif (label.innerText != presValue + \"\")\r\n\t\t\t\tlabel.innerText = presValue + \"\";\r\n\r\n\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._doc.song.realToModValue(presValue, this._modDragSetting), this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getMaxDivision(): number {\r\n\t\tconst rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t\tif (rhythmStepsPerBeat % 4 == 0) {\r\n\t\t\t// Beat is divisible by 2 (and 4).\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t} else if (rhythmStepsPerBeat % 3 == 0) {\r\n\t\t\t// Beat is divisible by 3.\r\n\t\t\treturn Config.partsPerBeat / 3;\r\n\t\t} else if (rhythmStepsPerBeat % 2 == 0) {\r\n\t\t\t// Beat is divisible by 2.\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t}\r\n\t\treturn Config.partsPerBeat;\r\n\t}\r\n\r\n\tprivate _getMinDivision(): number {\r\n\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t}\r\n\r\n\tprivate _snapToMinDivision(input: number): number {\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\treturn Math.floor(input / minDivision) * minDivision;\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tthis._cursor = new PatternCursor();\r\n\t\tif (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\r\n\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\tthis._cursor.exactPart = this._mouseX / this._partWidth;\r\n\t\tthis._cursor.part =\r\n\t\t\tMath.floor(\r\n\t\t\t\tMath.max(0,\r\n\t\t\t\t\tMath.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\r\n\t\t\t\t)\r\n\t\t\t\t/ minDivision) * minDivision;\r\n\r\n\t\tlet foundNote: boolean = false;\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tif (note.end <= this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!foundNote)\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t\t\tfoundNote = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Only increment index if the sought note has been found... or if this note truly starts before the other\r\n\t\t\t\t\t\telse if (!foundNote || (this._cursor.curNote != null && note.start < this._cursor.curNote.start))\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && !this.editingModLabel) {\r\n\r\n\t\t\t\tif (this._pattern.notes[this._cursor.curIndex] != null && this._cursor.curNote != null) {\r\n\r\n\t\t\t\t\tlet pinIdx: number = 0;\r\n\r\n\t\t\t\t\twhile (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time < this._cursor.exactPart && pinIdx < this._cursor.curNote.pins.length) {\r\n\t\t\t\t\t\tpinIdx++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Decide if the previous pin is closer\r\n\t\t\t\t\tif (pinIdx > 0) {\r\n\t\t\t\t\t\tif (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time - this._cursor.exactPart > this._cursor.exactPart - (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx - 1].time)) {\r\n\t\t\t\t\t\t\tpinIdx--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#666688\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\r\n\t\t\t\t\tlet setting: ModSetting = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - this._cursor.curNote.pitches[0]];\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._cursor.curNote.pins[pinIdx].volume, setting);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time) - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(this._cursor.curNote.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis._modDragStartValue = this._cursor.curNote.pins[pinIdx].volume;\r\n\t\t\t\t\tthis._modDragNote = this._cursor.curNote;\r\n\t\t\t\t\tthis._modDragPin = this._cursor.curNote.pins[pinIdx];\r\n\t\t\t\t\tthis._modDragLowerBound = this._doc.song.modValueToReal(0, setting);\r\n\t\t\t\t\tthis._modDragUpperBound = this._doc.song.modValueToReal(this._doc.song.mstMaxVols.get(setting) as number, setting);\r\n\t\t\t\t\tthis._modDragSetting = setting;\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!this.editingModLabel) {\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t}\r\n\r\n\t\tlet mousePitch: number = this._findMousePitch(this._mouseY);\r\n\r\n\t\tif (this._cursor.curNote != null) {\r\n\r\n\t\t\tthis._cursor.start = this._cursor.curNote.start;\r\n\t\t\tthis._cursor.end = this._cursor.curNote.end;\r\n\t\t\tthis._cursor.pins = this._cursor.curNote.pins;\r\n\r\n\t\t\tlet interval: number = 0;\r\n\t\t\tlet error: number = 0;\r\n\t\t\tlet prevPin: NotePin;\r\n\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\tfor (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\r\n\t\t\t\tprevPin = nextPin;\r\n\t\t\t\tnextPin = this._cursor.curNote.pins[j];\r\n\t\t\t\tconst leftSide: number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\r\n\t\t\t\tconst rightSide: number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\r\n\t\t\t\tif (this._mouseX > rightSide) continue;\r\n\t\t\t\tif (this._mouseX < leftSide) throw new Error();\r\n\t\t\t\tconst intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\r\n\t\t\t\tconst arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\r\n\t\t\t\tconst bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\r\n\t\t\t\tinterval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\r\n\t\t\t\terror = arc * bendHeight + 0.95;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet minInterval: number = Number.MAX_VALUE;\r\n\t\t\tlet maxInterval: number = -Number.MAX_VALUE;\r\n\t\t\tlet bestDistance: number = Number.MAX_VALUE;\r\n\t\t\tfor (const pin of this._cursor.curNote.pins) {\r\n\t\t\t\tif (minInterval > pin.interval) minInterval = pin.interval;\r\n\t\t\t\tif (maxInterval < pin.interval) maxInterval = pin.interval;\r\n\t\t\t\tconst pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\r\n\t\t\t\tif (bestDistance > pinDistance) {\r\n\t\t\t\t\tbestDistance = pinDistance;\r\n\t\t\t\t\tthis._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmousePitch -= interval;\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : this._doc.song.maxPitch) - maxInterval);\r\n\r\n\t\t\t// Snap to nearby existing note if present.\r\n\t\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tlet nearest: number = error;\r\n\t\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\t\tconst distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\r\n\t\t\t\t\tif (distance > nearest) continue;\r\n\t\t\t\t\tnearest = distance;\r\n\t\t\t\t\tthis._cursor.pitch = this._cursor.curNote.pitches[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\tif (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\r\n\t\t\t\t\tthis._cursor.pitchIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//console.log(\"default\");\r\n\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, 0, this._doc.song.maxPitch);\r\n\t\t\tconst defaultLength: number = this._copiedPins[this._copiedPins.length - 1].time;\r\n\t\t\tconst fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\r\n\t\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\t\tconst modMouse: number = this._cursor.part % Config.partsPerBeat;\r\n\t\t\tif (defaultLength == 1) {\r\n\t\t\t\tthis._cursor.start = this._cursor.part;\r\n\t\t\t} else if (defaultLength > Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t} else if (defaultLength == Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tif (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\r\n\t\t\t\t\tthis._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tlet division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\r\n\t\t\t\twhile (division < maxDivision && Config.partsPerBeat % division != 0) {\r\n\t\t\t\t\tdivision++;\r\n\t\t\t\t}\r\n\t\t\t\tthis._cursor.start += Math.floor(modMouse / division) * division;\r\n\t\t\t}\r\n\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\tlet forceStart: number = 0;\r\n\t\t\tlet forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\tif (this._cursor.prevNote != null) {\r\n\t\t\t\tforceStart = this._cursor.prevNote.end;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.nextNote != null) {\r\n\t\t\t\tforceEnd = this._cursor.nextNote.start;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\t\tif (this._cursor.end > forceEnd) {\r\n\t\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursor.end > forceEnd) {\r\n\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\tthis._cursor.start = this._cursor.end - defaultLength;\r\n\t\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._cursor.end - this._cursor.start == defaultLength) {\r\n\t\t\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\t\t\t\tthis._cursor.pins = this._copiedPins;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.pins = [];\r\n\t\t\t\tfor (const oldPin of this._copiedPins) {\r\n\t\t\t\t\tif (oldPin.time <= this._cursor.end - this._cursor.start) {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t\t\tif (oldPin.time == this._cursor.end - this._cursor.start) break;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t// Return cursor to stashed cursor volumes (so pins aren't destroyed by moving the preview around several volume scales.)\r\n\t\t\t\tif (this._stashCursorPinVols != null && this._stashCursorPinVols[this._doc.channel] != null) {\r\n\t\t\t\t\tfor (let pin: number = 0; pin < this._cursor.pins.length; pin++) {\r\n\t\t\t\t\t\tthis._cursor.pins[pin].volume = this._stashCursorPinVols[this._doc.channel][pin];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Scale volume of copied pin to cap for this row\r\n\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._cursor.valid = true;\r\n\r\n\t}\r\n\r\n\tprivate _cursorIsInSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\r\n\t}\r\n\r\n\tprivate _cursorAtStartOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\r\n\t}\r\n\r\n\tprivate _cursorAtEndOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\r\n\t}\r\n\r\n\tprivate _findMousePitch(pixelY: number): number {\r\n\t\treturn Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\r\n\t}\r\n\r\n\tprivate _snapToPitch(guess: number, min: number, max: number): number {\r\n\t\tif (guess < min) guess = min;\r\n\t\tif (guess > max) guess = max;\r\n\r\n\t\t// TODO: Figure out how scales should be implemented, and figure this logic out\r\n\r\n\t\treturn Math.floor(guess);\r\n\r\n\t\t// const scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\t// if (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t// \treturn Math.floor(guess);\r\n\t\t// } else {\r\n\t\t\t// let topPitch: number = Math.floor(guess) + 1;\r\n\t\t\t// let bottomPitch: number = Math.floor(guess) - 1;\r\n\t\t\t\r\n\t\t\t// while (!scale[topPitch % Config.pitchesPerOctave]) {\r\n\t\t\t// \ttopPitch++;\r\n\t\t\t// }\r\n\t\t\t// while (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\r\n\t\t\t// \tbottomPitch--;\r\n\t\t\t// }\r\n\t\t\t// if (topPitch > max) {\r\n\t\t\t// \tif (bottomPitch < min) {\r\n\t\t\t// \t\treturn min;\r\n\t\t\t// \t} else {\r\n\t\t\t// \t\treturn bottomPitch;\r\n\t\t\t// \t}\r\n\t\t\t// } else if (bottomPitch < min) {\r\n\t\t\t// \treturn topPitch;\r\n\t\t\t// }\r\n\t\t\t// let topRange: number = topPitch;\r\n\t\t\t// let bottomRange: number = bottomPitch + 1;\r\n\t\t\t// if (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t// \ttopRange -= 0.5;\r\n\t\t\t// }\r\n\t\t\t// if (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t// \tbottomRange += 0.5;\r\n\t\t\t// }\r\n\t\t\t// return guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\r\n\t\t// }\r\n\t}\r\n\r\n\tprivate _copyPins(note: Note): void {\r\n\t\tthis._copiedPins = [];\r\n\t\tfor (const oldPin of note.pins) {\r\n\t\t\tthis._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i < this._copiedPins.length - 1;) {\r\n\t\t\tif (this._copiedPins[i - 1].volume == this._copiedPins[i].volume &&\r\n\t\t\t\tthis._copiedPins[i].volume == this._copiedPins[i + 1].volume) {\r\n\t\t\t\tthis._copiedPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._copiedPinChannels[this._doc.channel] = this._copiedPins;\r\n\r\n\t\tthis._stashCursorPinVols[this._doc.channel] = [];\r\n\t\tfor (let pin: number = 0; pin < this._copiedPins.length; pin++) {\r\n\t\t\tthis._stashCursorPinVols[this._doc.channel].push(this._copiedPins[pin].volume);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic resetCopiedPins = (): void => {\r\n\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\tlet cap: number = this._doc.song.getVolumeCap(false);\r\n\t\tthis._copiedPinChannels.length = this._doc.song.getChannelCount();\r\n\t\tthis._stashCursorPinVols.length = this._doc.song.getChannelCount();\r\n\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, cap];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.getChannelCount(); i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\r\n\t\tif (this._usingTouch && !this.shiftMode && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tthis._shiftHeld = true;\r\n\t\t\tthis._dragConfirmed = false;\r\n\t\t\tthis._whenCursorPressed();\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\r\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\r\n\r\n\t\tif (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tconst modPlayhead: number = this._doc.synth.playhead - playheadBar;\r\n\t\t\tif (Math.abs(modPlayhead - this._playheadX) > 0.1) {\r\n\t\t\t\tthis._playheadX = modPlayhead;\r\n\t\t\t} else {\r\n\t\t\t\tthis._playheadX += (modPlayhead - this._playheadX) * 0.2;\r\n\t\t\t}\r\n\t\t\tthis._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tif (this._doc.synth.playing && this._doc.autoFollow && this._followPlayheadBar != playheadBar) {\r\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\t\tthis._followPlayheadBar = playheadBar;\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._usingTouch = false;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = true;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._touchTime = performance.now();\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tpublic stopEditingModLabel(discardChanges: boolean) {\r\n\t\tif (this.editingModLabel) {\r\n\t\t\tthis.editingModLabel = false;\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t}\r\n\t\t\t// Return pin to its state before text editing\r\n\t\t\tif (discardChanges) {\r\n\t\t\t\tthis._modDragPin.volume = this._modDragStartValue;\r\n\r\n\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._modDragStartValue, this._modDragSetting);\r\n\r\n\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._modDragStartValue, this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t}\r\n\r\n\t\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\t\tif (continuousState) {\r\n\t\t\t\tif (this._dragChange != null) {\r\n\t\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorPressed(): void {\r\n\t\t// Check for click on mod value label\r\n\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this.modDragValueLabel.style.getPropertyValue(\"display\") != \"none\" &&\r\n\t\t\tthis._mouseX > +this._modDragValueLabelLeft - 6 &&\r\n\t\t\tthis._mouseX < +this._modDragValueLabelLeft + this._modDragValueLabelWidth + 6 &&\r\n\t\t\tthis._mouseY > +this._modDragValueLabelTop - 8 &&\r\n\t\t\tthis._mouseY < +this._modDragValueLabelTop + 11) {\r\n\t\t\t// Mod value label clicked, select it\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"fill\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"true\");\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.selectAllChildren(this.modDragValueLabel);\r\n\t\t\t}\r\n\r\n\t\t\twindow.setTimeout(() => { this.modDragValueLabel.focus(); });\r\n\t\t\tthis.editingModLabel = true;\r\n\t\t} else {\r\n\t\t\tthis.stopEditingModLabel(false);\r\n\t\t\tif (this._doc.enableNotePreview) this._doc.synth.maintainLiveInput();\r\n\t\t\tthis._mouseDown = true;\r\n\t\t\tthis._mouseXStart = this._mouseX;\r\n\t\t\tthis._mouseYStart = this._mouseY;\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\tthis._draggingStartOfSelection = true;\r\n\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\tthis._draggingEndOfSelection = true;\r\n\t\t\t} else if (this._shiftHeld) {\r\n\t\t\t\tif ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\t\tconst end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\tthis._draggingSelectionContents = true;\r\n\t\t\t} else if (this._cursor.valid && this._cursor.curNote == null) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t// If clicking in empty space, the result will be adding a note,\r\n\t\t\t\t// so we can safely add it immediately. Note that if clicking on\r\n\t\t\t\t// or near an existing note, the result will depend on whether\r\n\t\t\t\t// a drag follows, so we couldn't add the note yet without being\r\n\t\t\t\t// confusing.\r\n\r\n\t\t\t\tconst note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, 3, this._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\tnote.pins = [];\r\n\t\t\t\tfor (const oldPin of this._cursor.pins) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\r\n\r\n\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t// Play the new note out loud if enabled.\r\n\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\tthis._doc.synth.liveInputPitches = [this._cursor.pitch];\r\n\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\r\n\t\t// HACK: Undoable pattern changes rely on persistent instance\r\n\t\t// references. Loading song from hash via undo/redo breaks that,\r\n\t\t// so changes are no longer undoable and the cursor status may be\r\n\t\t// invalid. Abort further drag changes until the mouse is released.\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\r\n\t\tif (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tconst dx: number = this._mouseX - this._mouseXStart;\r\n\t\t\tconst dy: number = this._mouseY - this._mouseYStart;\r\n\t\t\tif (Math.sqrt(dx * dx + dy * dy) > 5) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._shiftHeld && this._mouseHorizontal && Math.abs(this._mouseXStart - this._mouseX) > 5) {\r\n\t\t\tthis._dragConfirmed = true;\r\n\t\t}\r\n\r\n\t\tif (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tconst minDivision: number = this._getMinDivision();\r\n\t\t\tconst currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\r\n\t\t\tif (this._draggingStartOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingEndOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingSelectionContents) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (this._mouseDragging && pattern != null) {\r\n\t\t\t\t\tthis._dragChange!.undo();\r\n\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\t\tconst notesInScale: number = Config.scales[this._doc.song.scale].flags.filter(x => x).length;\r\n\t\t\t\t\tconst pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : this._doc.song.edo / notesInScale;\r\n\t\t\t\t\tconst draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\r\n\t\t\t\t\tconst draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\r\n\t\t\t\t\tsequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (this._shiftHeld && this._dragConfirmed) {\r\n\r\n\t\t\t\tif (this._mouseDragging) {\r\n\t\t\t\t\tlet start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\tlet end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tstart = Math.max(start, this._cursor.curNote.start);\r\n\t\t\t\t\t\tend = Math.min(end, this._cursor.curNote.end);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Todo: The following two conditional blocks could maybe be refactored.\r\n\t\t\t\t\tif (currentPart < start) {\r\n\t\t\t\t\t\tstart = 0;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (start <= part && part <= currentPart) {\r\n\t\t\t\t\t\t\t\tstart = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPart > end) {\r\n\t\t\t\t\t\tend = Config.partsPerBeat * this._doc.song.beatsPerBar;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (currentPart < part && part < end) {\r\n\t\t\t\t\t\t\t\tend = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\tthis._updateSelection();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._cursor.curNote == null) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\r\n\t\t\t\t\tlet backwards: boolean;\r\n\t\t\t\t\tlet directLength: number;\r\n\t\t\t\t\tif (currentPart < this._cursor.start) {\r\n\t\t\t\t\t\tbackwards = true;\r\n\t\t\t\t\t\tdirectLength = this._cursor.start - currentPart;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbackwards = false;\r\n\t\t\t\t\t\tdirectLength = currentPart - this._cursor.start + minDivision;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet defaultLength: number = minDivision;\r\n\t\t\t\t\tfor (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\r\n\t\t\t\t\t\tif (minDivision == 1) {\r\n\t\t\t\t\t\t\tif (i < 5) {\r\n\t\t\t\t\t\t\t\t// Allow small lengths.\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat / 2.0) {\r\n\t\t\t\t\t\t\t\tif (i % 3 != 0 && i % 4 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat * 1.5) {\r\n\t\t\t\t\t\t\t\tif (i % 6 != 0 && i % 8 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i % Config.partsPerBeat != 0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (i >= 5 * minDivision &&\r\n\t\t\t\t\t\t\t\ti % Config.partsPerBeat != 0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 4.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 2.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 4.0 / 3.0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst blessedLength: number = i;\r\n\t\t\t\t\t\tif (blessedLength == directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (blessedLength < directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (blessedLength > directLength) {\r\n\t\t\t\t\t\t\tif (defaultLength < directLength - minDivision) {\r\n\t\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet start: number;\r\n\t\t\t\t\tlet end: number;\r\n\r\n\t\t\t\t\tif (backwards) {\r\n\t\t\t\t\t\tend = this._cursor.start;\r\n\t\t\t\t\t\tstart = end - defaultLength;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstart = this._cursor.start;\r\n\t\t\t\t\t\tend = start + defaultLength;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\t\tif (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (start < end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\t// Using parameter skipNote to force proper \"collision\" checking vis-a-vis pitch for mod channels.\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end, new Note(this._cursor.pitch, 0, 0, 0)));\r\n\t\t\t\t\t\tlet i: number;\r\n\t\t\t\t\t\tfor (i = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\tif (pattern.notes[i].start >= end) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst theNote: Note = new Note(this._cursor.pitch, start, end,\r\n\t\t\t\t\t\t\tthis._doc.song.getNewNoteVolume(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch),\r\n\t\t\t\t\t\t\tthis._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\r\n\t\t\t\t\t\tthis._copyPins(theNote);\r\n\r\n\t\t\t\t\t\tthis._dragTime = backwards ? start : end;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.pitch;\r\n\t\t\t\t\t\tthis._dragVolume = theNote.pins[backwards ? 0 : 1].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet prevPattern: Pattern | null = this._pattern;\r\n\r\n\t\t\t\t\tthis._pattern = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && prevPattern != this._pattern) {\r\n\t\t\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\t\t\tthis._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (this._mouseHorizontal) {\r\n\r\n\t\t\t\t\t//console.log(\"this._mouseHorizontal\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\r\n\r\n\t\t\t\t\tconst shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\r\n\t\t\t\t\tlet shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\r\n\t\t\t\t\tif (shiftedTime < 0) shiftedTime = 0;\r\n\t\t\t\t\tif (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tif (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\r\n\t\t\t\t\t\tshiftedTime >= this._cursor.curNote.end && this._cursor.nearPinIndex == 0) {\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\r\n\t\t\t\t\t\tthis._dragVisible = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.min(this._cursor.curNote.start, shiftedTime);\r\n\t\t\t\t\t\tconst end: number = Math.max(this._cursor.curNote.end, shiftedTime);\r\n\r\n\t\t\t\t\t\tthis._dragTime = shiftedTime;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\r\n\t\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\r\n\t\t\t\t\t\tsequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime));\r\n\t\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this._cursor.pitchIndex == -1 || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\t\t\t//console.log(\"this._cursor.pitchIndex == -1\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst bendPart: number =\r\n\t\t\t\t\t\tMath.max(this._cursor.curNote.start,\r\n\t\t\t\t\t\t\tMath.min(this._cursor.curNote.end,\r\n\t\t\t\t\t\t\t\tMath.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) - this._cursor.curNote.start;\r\n\r\n\t\t\t\t\tlet prevPin: NotePin;\r\n\t\t\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\t\t\tlet bendVolume: number = 0;\r\n\t\t\t\t\tlet bendInterval: number = 0;\r\n\t\t\t\t\tlet cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\r\n\t\t\t\t\t// Dragging gets a bit faster after difference in drag counts is >8.\r\n\t\t\t\t\tlet dragFactorSlow: number = 25.0 / Math.pow(cap, 0.4);\r\n\t\t\t\t\tlet dragFactorFast: number = 22.0 / Math.pow(cap, 0.5);\r\n\t\t\t\t\tlet dragSign: number = (this._mouseYStart > this._mouseY ? 1 : -1);\r\n\t\t\t\t\tlet dragCounts: number = Math.min(Math.abs(this._mouseYStart - this._mouseY) / dragFactorSlow, 8) + Math.max(0, Math.abs(this._mouseYStart - this._mouseY) / dragFactorFast - 8);\r\n\r\n\t\t\t\t\t// Note volume drag overrides attempts to make a pattern selection\r\n\t\t\t\t\tif (dragCounts > 0) {\r\n\t\t\t\t\t\tthis._shiftHeld = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\r\n\t\t\t\t\t\tprevPin = nextPin;\r\n\t\t\t\t\t\tnextPin = this._cursor.curNote.pins[i];\r\n\t\t\t\t\t\tif (bendPart > nextPin.time) continue;\r\n\t\t\t\t\t\tif (bendPart < prevPin.time) throw new Error();\r\n\t\t\t\t\t\tconst volumeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\r\n\t\t\t\t\t\tbendVolume = Math.round(prevPin.volume * (1.0 - volumeRatio) + nextPin.volume * volumeRatio + dragSign * dragCounts);\r\n\t\t\t\t\t\t// If not in fine control mode, round to 0~2~4~6 (normal 4 settings)\r\n\t\t\t\t\t\tif (this.controlMode == false && this._doc.alwaysFineNoteVol == false && !this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\t\tbendVolume = Math.floor(bendVolume / 2) * 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bendVolume < 0) bendVolume = 0;\r\n\t\t\t\t\t\tif (bendVolume > cap) bendVolume = cap;\r\n\t\t\t\t\t\tbendInterval = this._snapToPitch(prevPin.interval * (1.0 - volumeRatio) + nextPin.interval * volumeRatio + this._cursor.curNote.pitches[0], 0, this._doc.song.maxPitch) - this._cursor.curNote.pitches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._dragTime = this._cursor.curNote.start + bendPart;\r\n\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\r\n\t\t\t\t\tthis._dragVolume = bendVolume;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._cursor.curNote, bendPart, bendVolume, bendInterval, this.shiftMode));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log(\"final else\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tlet bendStart: number;\r\n\t\t\t\t\tlet bendEnd: number;\r\n\t\t\t\t\tif (this._mouseX >= this._mouseXStart) {\r\n\t\t\t\t\t\tbendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\r\n\t\t\t\t\t\tbendEnd = currentPart + minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\r\n\t\t\t\t\t\tbendEnd = currentPart;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < 0) bendEnd = 0;\r\n\t\t\t\t\tif (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\t\t\tif (bendEnd > this._cursor.curNote.end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < this._cursor.curNote.start) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet minPitch: number = Number.MAX_VALUE;\r\n\t\t\t\t\tlet maxPitch: number = -Number.MAX_VALUE;\r\n\t\t\t\t\tfor (const pitch of this._cursor.curNote.pitches) {\r\n\t\t\t\t\t\tif (minPitch > pitch) minPitch = pitch;\r\n\t\t\t\t\t\tif (maxPitch < pitch) maxPitch = pitch;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tminPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\t\t\t\t\tmaxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\r\n\t\t\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : this._doc.song.maxPitch) - maxPitch);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._dragPitch, -minPitch, Config.modCount - 1);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tthis._dragTime = bendEnd;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!(this._mouseDown && this._cursor.valid && continuousState)) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event | null): void => {\r\n\t\tif (!this._cursor.valid) return;\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\tif (this._mouseDown && continuousState && this._dragChange != null) {\r\n\t\t\tif (this._draggingSelectionContents) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\r\n\t\t\t\tthis._setPatternSelection(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t} else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\tif (this._cursor.pitchIndex == -1) {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == Config.maxChordSize) {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\t\tthis._doc.synth.liveInputPitches = this._cursor.curNote.pitches.concat();\r\n\t\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == 1) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(sequence);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._draggingStartOfSelection = false;\r\n\t\tthis._draggingEndOfSelection = false;\r\n\t\tthis._draggingSelectionContents = false;\r\n\t\tthis._lastChangeWasPatternSelection = false;\r\n\t\tthis.modDragValueLabel.setAttribute(\"fill\", ColorConfig.secondaryText);\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _setPatternSelection(change: UndoableChange): void {\r\n\t\tthis._changePatternSelection = change;\r\n\t\tthis._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tif (this._usingTouch) {\r\n\t\t\tif (!this._mouseDown || !this._cursor.valid || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tconst x: number = this._partWidth * this._dragTime;\r\n\t\t\t\tconst y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\r\n\t\t\t\tconst radius: number = (this._pitchHeight - this._pitchBorder) / 2;\r\n\t\t\t\tconst width: number = 80;\r\n\t\t\t\tconst height: number = 60;\r\n\t\t\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\t//this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\r\n\r\n\t\t\t\tlet pathString: string = \"\";\r\n\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap) - height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap) + height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\r\n\t\t\t\tthis._svgPreview.setAttribute(\"d\", pathString);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionStart;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\t\tconst left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\r\n\t\t\t\t\tconst right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateSelection(): void {\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\tif (this._pattern != nextPattern && this._pattern != null) {\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && nextPattern != null) {\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tnextPattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t}\r\n\t\t\tthis._dragChange = null;\r\n\t\t\tthis._whenCursorReleased(null);\r\n\t\t}\r\n\t\tthis._pattern = nextPattern;\r\n\r\n\t\tthis._editorWidth = this.container.clientWidth;\r\n\t\tthis._editorHeight = this.container.clientHeight;\r\n\t\tthis._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\r\n\t\tthis._octaveOffset = this._doc.song.channels[this._doc.channel].octave * this._doc.song.edo;\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = this._defaultModBorder;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\r\n\t\t\tif (this._pattern != null) {\r\n\t\t\t\t// Force max height of mod channels to conform to settings.\r\n\t\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\t\tlet pitch = note.pitches[0]; // No pitch bend possible in mod channels.\r\n\t\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(true, this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\t\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\r\n\r\n\t\tif (this._renderedRhythm != this._doc.song.rhythm ||\r\n\t\t\tthis._renderedPitchChannelCount != this._doc.song.pitchChannelCount ||\r\n\t\t\tthis._renderedNoiseChannelCount != this._doc.song.noiseChannelCount ||\r\n\t\t\tthis._renderedModChannelCount != this._doc.song.modChannelCount) {\r\n\t\t\tthis._renderedRhythm = this._doc.song.rhythm;\r\n\t\t\tthis._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannelCount = this._doc.song.modChannelCount;\r\n\t\t\tthis.resetCopiedPins();\r\n\t\t}\r\n\r\n\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\r\n\t\tif (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\r\n\t\t\tthis._renderedWidth = this._editorWidth;\r\n\t\t\tthis._renderedHeight = this._editorHeight;\r\n\t\t\tthis._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\r\n\t\t\tthis._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", \"0\");\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t}\r\n\r\n\t\tconst beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\r\n\t\tif (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight) {\r\n\t\t\tthis._renderedBeatWidth = beatWidth;\r\n\t\t\tthis._renderedPitchHeight = this._pitchHeight;\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * this._doc.song.edo));\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\r\n\t\t\tthis._svgModBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgModBackground.setAttribute(\"height\", \"\" + (this._pitchHeight));\r\n\t\t\tthis._svgModBackground.setAttribute(\"y\", \"\" + (this._pitchBorder / 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\tif (this._pitchHeight > this._pitchBorder) {\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"height\", \"\" + (this._pitchHeight - this._pitchBorder));\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tfor (let j: number = 0; j < this._doc.song.edo; j++) {\r\n\t\t\t\tconst rectangle: SVGRectElement = this._backgroundPitchRows[j];\r\n\t\t\t\tconst y: number = (this._doc.song.edo - j) % this._doc.song.edo;\r\n\t\t\t\trectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\trectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\r\n\t\t\t\trectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tif (!this._mouseDown) this._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._backgroundPitchRows[Math.round(this._doc.song.edo * Math.log2(3 / 2))].setAttribute(\"fill\", this._doc.showFifth ? ColorConfig.fifthNote : ColorConfig.pitchBackground);\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < this._doc.song.edo; j++) {\r\n\r\n\t\t\t// this._backgroundPitchRows[j].style.visibility = Config.scales[this._doc.song.scale].flags[j] ? \"visible\" : \"hidden\";\r\n\t\t\tthis._backgroundPitchRows[j].style.visibility = \"visible\";\r\n\t\t\t// TODO: Since the scales are all hardcoded for 12edo, I am disabling scales because above 12edo the notes above the first 12 are hidden by default.\r\n\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tif (!this._renderedDrums) {\r\n\t\t\t\tthis._renderedDrums = true;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tif (!this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = true;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorModBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._renderedDrums || this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._doc.showChannels) {\r\n\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\tfor (let channel: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1; channel >= 0; channel--) {\r\n\t\t\t\t\tif (channel == this._doc.channel) continue;\r\n\t\t\t\t\tif (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\r\n\r\n\t\t\t\t\tconst pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\r\n\t\t\t\t\tif (pattern2 == null) continue;\r\n\t\t\t\t\tfor (const note of pattern2.notes) {\r\n\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\tconst notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, this._doc.song.channels[channel].octave * this._doc.song.edo);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\t\tlet notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, false, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\tnotePath = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\r\n\t\t\t\t\tif (note.pitches.length > 1) {\r\n\t\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)];\r\n\t\t\t\t\t\tconst chord: Chord = instrument.getChord();\r\n\t\t\t\t\t\tif (!chord.harmonizes || chord.arpeggiates || chord.strumParts > 0) {\r\n\t\t\t\t\t\t\tlet oscillatorLabel: SVGTextElement = SVG.text();\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + 2));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"width\", \"30\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"text-anchor\", \"start\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\toscillatorLabel.textContent = \"\" + (i + 1);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(oscillatorLabel);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDragging && !this._mouseHorizontal && note == this._cursor.curNote) {\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#FFFFFF\");\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._dragVolume, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - note.pitches[0]]);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * this._dragTime - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(note.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showVolume: boolean, offset: number): void {\r\n\t\tconst totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\r\n\t\tconst endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\r\n\r\n\t\tlet nextPin: NotePin = pins[0];\r\n\r\n\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\r\n\t\tlet pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showVolume ? nextPin.volume / cap : 1.0)) + \" \";\r\n\r\n\t\tfor (let i: number = 1; i < pins.length; i++) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tfor (let i: number = pins.length - 2; i >= 0; i--) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tpathString += \"z\";\r\n\r\n\t\tsvgElement.setAttribute(\"d\", pathString);\r\n\t}\r\n\r\n\tprivate _pitchToPixelHeight(pitch: number): number {\r\n\t\treturn this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Instrument, ModSetting, ModStatus } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\nexport class Piano {\r\n\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _modContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _preview: HTMLDivElement = HTML.div({ style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;` });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\" },\r\n\t\tthis._pianoContainer,\r\n\t\tthis._drumContainer,\r\n\t\tthis._modContainer,\r\n\t\tthis._preview,\r\n\t);\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\r\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\r\n\tprivate readonly _modFirstLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modSecondLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountRects: SVGRectElement[] = [];\r\n\r\n\tprivate _pitchHeight: number;\r\n\tprivate _pitchCount: number;\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _cursorPitch: number;\r\n\tprivate _playedPitch: number = -1;\r\n\tprivate _renderedScale: number = -1;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedKey: number = -1;\r\n\tprivate _renderedPitchCount: number = -1;\r\n\r\n\tpublic forceRender(): void {\r\n\t\tthis._renderedScale = -1;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 0; i < this._doc.windowPitchCount; i++) {\r\n\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t}\r\n\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\r\n\t\t\tconst brightness: number = 1.0 + ((i - Config.drumCount / 2.0) / Config.drumCount) * 0.5;\r\n\t\t\tthis._drumContainer.appendChild(HTML.div({ class: \"drum-button\", style: `background-size: ${scale}% ${scale}%; filter: brightness(${brightness})` }));\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\r\n\r\n\t\t\tconst firstRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(-19px, 39px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst secondRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-end; transform-origin: center; transform: rotate(-90deg) translate(-26px, 42px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countText: SVGTextElement = SVG.text({ class: \"modulator-inverse-label\", fill: ColorConfig.modLabelPrimary, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(4px, 13px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countRect: SVGRectElement = SVG.rect({ width: \"12px\", height: \"9px\", fill: ColorConfig.indicatorPrimary, style: \"pointer-events: none; transform: translate(4px, 4px);\" });\r\n\r\n\t\t\tconst firstRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 66\", width: \"16px\", style: \"pointer-events: none; flex-grow: 1;\" }, [\r\n\t\t\t\tfirstRowText,\r\n\t\t\t]);\r\n\t\t\tconst countSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 14\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tcountRect,\r\n\t\t\t\tcountText,\r\n\t\t\t]);\r\n\t\t\tconst secondRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 80\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowText,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexRow1: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tcountSVG,\r\n\t\t\t\tfirstRowSVG,\r\n\t\t\t]);\r\n\t\t\tconst flexRow2: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column-reverse; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowSVG,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexContainer: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: row; justify-content: space-between; padding: 0px; width: 32px; height: 100%; overflow: hidden; pointer-events: none;\" }, [\r\n\t\t\t\tflexRow1,\r\n\t\t\t\tflexRow2,\r\n\t\t\t]);\r\n\r\n\t\t\tconst modKey: HTMLDivElement = HTML.div({ class: \"modulator-button\", style: \"background: \" + ColorConfig.modLabelPrimary + \";\" }, flexContainer);\r\n\t\t\tthis._modContainer.appendChild(modKey);\r\n\t\t\tthis._modFirstLabels.push(firstRowText);\r\n\t\t\tthis._modSecondLabels.push(secondRowText);\r\n\t\t\tthis._modCountLabels.push(countText);\r\n\t\t\tthis._modCountRects.push(countRect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t}\r\n\r\n\tprivate _updateCursorPitch(): void {\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (this._mouseY / this._pitchHeight)));\r\n\t\tif (scale[Math.floor(mousePitch) % 12] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\r\n\t\t\twhile (!scale[topPitch % 12]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % 12]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % 12 == 0 || topPitch % 12 == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % 12 == 0 || bottomPitch % 12 == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _playLiveInput(): void {\r\n\t\tconst currentPitch: number = this._cursorPitch + this._doc.song.channels[this._doc.channel].octave * 12;\r\n\t\tif (this._playedPitch == currentPitch) return;\r\n\t\tthis._playedPitch = currentPitch;\r\n\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\r\n\t\tthis._doc.synth.liveInputPitches = [this._playedPitch];\r\n\t\tthis._doc.synth.liveInputStarted = true;\r\n\t}\r\n\r\n\tprivate _releaseLiveInput(): void {\r\n\t\tthis._playedPitch = -1;\r\n\t\tthis._doc.synth.liveInputDuration = 0;\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown) this._releaseLiveInput();\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tthis._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._releaseLiveInput();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\r\n\t\tif (!this._mouseOver || this._mouseDown) return;\r\n\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\r\n\r\n\t\tthis._preview.style.left = \"0px\";\r\n\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\r\n\t\tthis._preview.style.height = pitchHeight + \"px\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod: boolean = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\t\tif (isDrum) {\r\n\t\t\tthis._pitchHeight = 40;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tthis._pitchHeight = 80;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchHeight = (this._editorHeight / this._doc.windowPitchCount);\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i < this._doc.windowPitchCount; i++) {\r\n\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t\t\tthis._renderedPitchCount++;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i > this._doc.windowPitchCount; i--) {\r\n\t\t\t\tthis._pianoContainer.removeChild(this._pianoContainer.lastChild as Node);\r\n\t\t\t\tthis._pianoLabels.pop();\r\n\t\t\t\tthis._pianoKeys.pop();\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render = (): void => {\r\n\t\tif (!this._doc.showLetters) return;\r\n\r\n\t\tconst isDrum = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\r\n\t\tif (this._renderedScale == this._doc.song.scale && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedMod == isMod) return;\r\n\t\tthis._renderedScale = this._doc.song.scale;\r\n\t\tthis._renderedKey = this._doc.song.key;\r\n\t\tthis._renderedDrums = isDrum;\r\n\t\tthis._renderedMod = isMod;\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\tthis._pianoContainer.style.display = (isDrum || isMod) ? \"none\" : \"flex\";\r\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\r\n\t\tthis._modContainer.style.display = isMod ? \"flex\" : \"none\";\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\r\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % 12;\r\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\r\n\t\t\t\tthis._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\r\n\t\t\t\tif (!Config.scales[this._doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\r\n\r\n\t\t\t\t\tlet text: string;\r\n\r\n\t\t\t\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\r\n\t\t\t\t\t\ttext = Config.keys[pitchNameIndex].name;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst shiftDir: number = Config.blackKeyNameParents[j % 12];\r\n\t\t\t\t\t\ttext = Config.keys[(pitchNameIndex + 12 + shiftDir) % 12].name;\r\n\t\t\t\t\t\tif (shiftDir == 1) {\r\n\t\t\t\t\t\t\ttext += \"♭\";\r\n\t\t\t\t\t\t} else if (shiftDir == -1) {\r\n\t\t\t\t\t\t\ttext += \"♯\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\r\n\r\n\t\t\t\t\tif ((j % 12) == 0) {\r\n\t\t\t\t\t\ttext += Math.floor(j / 12) + this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(-5px, 0px)\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(0px, 0px)\";\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? \"black\" : \"white\";\r\n\t\t\t\t\tlabel.textContent = text;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tlet firstRow: string = \"\";\r\n\t\t\tlet secondRow: string = \"\";\r\n\t\t\tlet useFirstColor: string = ColorConfig.modLabelPrimaryText;\r\n\t\t\tlet useSecondColor: string = ColorConfig.modLabelSecondaryText;\r\n\t\t\tlet channelVal: number;\r\n\t\t\tfor (let j: number = 0; j < Config.modCount; j++) {\r\n\r\n\t\t\t\tlet usingSecondRow: boolean = true;\r\n\t\t\t\tlet usingMod: boolean = true;\r\n\t\t\t\tlet instrumentVal: number = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\tswitch (instrument.modStatuses[Config.modCount - j - 1]) {\r\n\t\t\t\t\tcase ModStatus.msNone:\r\n\t\t\t\t\t\tfirstRow = \"Mod\"\r\n\t\t\t\t\t\tusingSecondRow = false;\r\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForPitch:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Pitch\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Pitch \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForNoise:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Noise\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Noise \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForSong:\r\n\t\t\t\t\t\tfirstRow = \"Song\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When unused, show name of mod on second row\r\n\t\t\t\tif (usingSecondRow) {\r\n\t\t\t\t\tswitch (instrument.modSettings[Config.modCount - j - 1]) {\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\t\tsecondRow = \"None\";\r\n\t\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Cut\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Peak\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tsecondRow = \"FM Feedback\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 1\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 2\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 3\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 4\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tsecondRow = \"Next Bar\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Depth\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Arp Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tsecondRow = \"Reset Arp\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tsecondRow = \"Pulse Width\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tsecondRow = \"Reverb\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tsecondRow = \"Tempo\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst firstLabel: SVGTextElement = this._modFirstLabels[j];\r\n\t\t\t\tconst secondLabel: SVGTextElement = this._modSecondLabels[j];\r\n\t\t\t\tconst modCountLabel: SVGTextElement = this._modCountLabels[j];\r\n\t\t\t\tconst modCountRect: SVGRectElement = this._modCountRects[j];\r\n\t\t\t\tfirstLabel.style.fill = useFirstColor;\r\n\t\t\t\tfirstLabel.textContent = firstRow;\r\n\t\t\t\tsecondLabel.style.fill = useSecondColor;\r\n\t\t\t\tsecondLabel.textContent = usingSecondRow ? secondRow : \"Not set\";\r\n\t\t\t\tmodCountLabel.textContent = \"\" + (Config.modCount - j);\r\n\t\t\t\tmodCountRect.style.fill = usingMod ? ColorConfig.indicatorPrimary : ColorConfig.modLabelSecondaryText;\r\n\r\n\t\t\t\t// Check if text is too long, if name is set\r\n\t\t\t\tif (this._doc.song.channels[instrument.modChannels[Config.modCount - j - 1]].name != \"\") {\r\n\t\t\t\t\tlet scaleFactor: string = \"1\";\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tlet length: number = firstLabel.getComputedTextLength();\r\n\t\t\t\t\tlet squeeze: number = 0;\r\n\t\t\t\t\tif (length > height - 8) {\r\n\t\t\t\t\t\tscaleFactor = \"0.65\";\r\n\t\t\t\t\t\tsqueeze = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (length > height - 24) {\r\n\t\t\t\t\t\tscaleFactor = \"0.8\";\r\n\t\t\t\t\t\tsqueeze = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - squeeze - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(\" + scaleFactor + \", 1)\";\r\n\t\t\t\t\t// Truncate end of string if it's too long, but keep instrument num\r\n\t\t\t\t\twhile (scaleFactor == \"0.65\" && firstLabel.getComputedTextLength() > height + 8) {\r\n\t\t\t\t\t\tvar offset = 4 + (instrumentVal >= 10 ? 1 : 0);\r\n\t\t\t\t\t\tfirstLabel.textContent = firstLabel.textContent.substr(0, firstLabel.textContent.length - offset) + firstLabel.textContent.substr(firstLabel.textContent.length - offset + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(1, 1)\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\n\r\nexport interface RecoveredVersion {\r\n\tuid: string;\r\n\ttime: number;\r\n\tname: string;\r\n\twork: number;\r\n}\r\n\r\nexport interface RecoveredSong {\r\n\tversions: RecoveredVersion[];\r\n}\r\n\r\nconst versionPrefix = \"songVersion: \";\r\nconst maximumSongCount = 8;\r\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\r\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\r\n\r\nfunction keyIsVersion(key: string): boolean {\r\n\treturn key.indexOf(versionPrefix) == 0;\r\n}\r\n\r\nfunction keyToVersion(key: string): RecoveredVersion {\r\n\treturn JSON.parse(key.substring(versionPrefix.length));\r\n}\r\n\r\nexport function versionToKey(version: RecoveredVersion): string {\r\n\treturn versionPrefix + JSON.stringify(version);\r\n}\r\n\r\nexport function generateUid(): string {\r\n\t// Not especially robust, but simple and effective!\r\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\r\n}\r\n\r\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\r\n\treturn b.versions[0].time - a.versions[0].time;\r\n}\r\n\r\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\r\n\treturn b.time - a.time;\r\n}\r\n\r\nexport class SongRecovery {\r\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\r\n\r\n\tprivate _song: Song = new Song();\r\n\r\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\r\n\t\tconst songs: RecoveredSong[] = [];\r\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\r\n\t\tfor (let i = 0; i < localStorage.length; i++) {\r\n\t\t\tconst itemKey: string = localStorage.key(i)!;\r\n\t\t\tif (keyIsVersion(itemKey)) {\r\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\r\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\r\n\t\t\t\tif (song == undefined) {\r\n\t\t\t\t\tsong = { versions: [] };\r\n\t\t\t\t\tsongsByUid[version.uid] = song;\r\n\t\t\t\t\tsongs.push(song);\r\n\t\t\t\t}\r\n\t\t\t\tsong.versions.push(version);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const song of songs) {\r\n\t\t\tsong.versions.sort(compareVersions);\r\n\t\t}\r\n\t\tsongs.sort(compareSongs);\r\n\t\treturn songs;\r\n\t}\r\n\r\n\tpublic saveVersion(uid: string, name: string, songData: string): void {\r\n\t\tconst newName: string = name;\r\n\t\tconst newTime: number = Math.round(Date.now());\r\n\r\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\r\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\r\n\t\t\ttry {\r\n\t\t\t\t// Ensure that the song is not corrupted before saving it.\r\n\t\t\t\tthis._song.fromBase64String(songData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\\n\" + error + \"\\n\" + error.stack);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\t\t\tlet currentSong: RecoveredSong | null = null;\r\n\t\t\tfor (const song of songs) {\r\n\t\t\t\tif (song.versions[0].uid == uid) {\r\n\t\t\t\t\tcurrentSong = song;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentSong == null) {\r\n\t\t\t\tcurrentSong = { versions: [] };\r\n\t\t\t\tsongs.unshift(currentSong);\r\n\t\t\t}\r\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\r\n\r\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\r\n\t\t\tif (versions.length > 0) {\r\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\r\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\r\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\r\n\t\t\t}\r\n\r\n\t\t\tconst newVersion: RecoveredVersion = { uid: uid, name: newName, time: newTime, work: newWork };\r\n\t\t\tconst newKey: string = versionToKey(newVersion);\r\n\t\t\tversions.unshift(newVersion);\r\n\t\t\tlocalStorage.setItem(newKey, songData);\r\n\r\n\t\t\t// Consider deleting an old version to free up space.\r\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\r\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\r\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\r\n\t\t\t\tconst currentWork: number = versions[i].work;\r\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\r\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\r\n\t\t\t\tif (currentWork - olderWork < minSpan) {\r\n\t\t\t\t\tlet indexToDiscard: number = i;\r\n\t\t\t\t\tif (i < versions.length - 1) {\r\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\r\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\r\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\r\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\r\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\r\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\r\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\r\n\t\t\t\t\t\t// thus more memorable.\r\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\r\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tminSpan *= spanMult;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are too many songs, discard the least important ones.\r\n\t\t\t// Songs that are older, or have less work, are less important.\r\n\t\t\twhile (songs.length > maximumSongCount) {\r\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\r\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\r\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\r\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\r\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\r\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\r\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\r\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\r\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\r\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\r\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\r\n\t\t\t\t\tif (leastImportance > weight) {\r\n\t\t\t\t\t\tleastImportance = weight;\r\n\t\t\t\t\t\tleastImportantSong = song;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\r\n\t\t\t\t}\r\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\r\n\t\t\t}\r\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { RecoveredSong, RecoveredVersion, SongRecovery, versionToKey } from \"./SongRecovery\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, p, select, option, iframe } = HTML;\r\n\r\nexport class SongRecoveryPrompt implements Prompt {\r\n\tprivate readonly _songContainer: HTMLDivElement = div();\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt\", style: \"width: 300px;\" },\r\n\t\th2(\"Song Recovery\"),\r\n\t\tdiv({ style: \"max-height: 385px; overflow-y: auto;\" },\r\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about!\"),\r\n\t\t\tthis._songContainer,\r\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\r\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\r\n\t\tif (songs.length == 0) {\r\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\r\n\t\t}\r\n\r\n\t\tfor (const song of songs) {\r\n\t\t\tconst versionMenu: HTMLSelectElement = select({ style: \"width: 100%;\" });\r\n\r\n\t\t\tfor (const version of song.versions) {\r\n\t\t\t\tversionMenu.appendChild(option({ value: version.time }, version.name + \": \" + new Date(version.time).toLocaleString()));\r\n\t\t\t}\r\n\r\n\t\t\tconst player: HTMLIFrameElement = iframe({ style: \"width: 100%; height: 60px; border: none; display: block;\" });\r\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\r\n\t\t\tconst container: HTMLDivElement = div({ style: \"margin: 4px 0;\" }, div({ class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\" }, versionMenu), player);\r\n\t\t\tthis._songContainer.appendChild(container);\r\n\r\n\t\t\tversionMenu.addEventListener(\"change\", () => {\r\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\r\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\r\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SpectrumWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeSpectrum } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class SpectrumEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _arrow: SVGPathElement = SVG.path({ fill: \"currentColor\", \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._arrow,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"spectrum\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeSpectrum | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\r\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\r\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\r\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, select, option } = HTML;\r\n\r\nexport class ThemePrompt implements Prompt {\r\n\tprivate readonly _themeSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"dark classic\" }, \"BeepBox Dark\"),\r\n\t\toption({ value: \"light classic\" }, \"BeepBox Light\"),\r\n\t\toption({ value: \"dark competition\" }, \"BeepBox Competition Dark\"),\r\n\t\toption({ value: \"jummbox classic\" }, \"JummBox Dark\"),\r\n\t\toption({ value: \"jummbox light\" }, \"JummBox Light\"), // It's not ready to see the world yet...\r\n\t\toption({ value: \"microbox classic\" }, \"MicroBox Dark\"),\r\n\t\toption({ value: \"forest\" }, \"Forest\"),\r\n\t\toption({ value: \"canyon\" }, \"Canyon\"),\r\n\t\toption({ value: \"midnight\" }, \"Midnight\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 220px;\" },\r\n\t\th2(\"Set Theme\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._themeSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\tprivate readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tthis._themeSelect.value = this.lastTheme;\r\n\t\t}\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._themeSelect.addEventListener(\"change\", this._previewTheme);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tColorConfig.setTheme(this.lastTheme);\r\n\t\t} else {\r\n\t\t\tColorConfig.setTheme(\"dark classic\");\r\n\t\t}\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this._themeSelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.colorTheme = this._themeSelect.value;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tprivate _previewTheme = (): void => {\r\n\t\tColorConfig.setTheme(this._themeSelect.value);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, p, h2, h3 } = HTML;\r\n\r\nexport class TipPrompt implements Prompt {\r\n\tprivate readonly _closeButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement;\r\n\r\n\tconstructor(private _doc: SongDocument, type: string) {\r\n\t\tlet message: HTMLDivElement;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"scale\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Scale\"),\r\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available notes of a scale to get a sense for how it sounds.\"),\r\n\t\t\t\t\tp(\"The most common scales are major and minor. Major scales tend to sound more playful or optimistic if you emphasize \\\"tonic\\\" notes (the brown rows in the pattern editor) at various points in your melody, whereas minor scales sound more serious or sad if you emphasize \\\"tonic\\\" notes.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"key\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Key\"),\r\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down to align the tonic notes (the brown rows) with the selected \\\"key\\\" pitch.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"tempo\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Tempo\"),\r\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"reverb\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Reverb\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use this slider to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"rhythm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Rhythm\"),\r\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentIndex\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Number\"),\r\n\t\t\t\t\tp(\"MicroBox can have multiple instruments per channel, but it can only play one instrument at a time in each channel. This setting determines which of the instruments should be used to play the currently selected pattern. Different patterns in the channel can use different instruments.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\r\n\t\t\t\t\tp(\"Please be careful when using volume settings above 0. This indicates amplification and too much of that can trip the audio limiter built into this tool. This can lead to your song sounding muffled if overused. But when used carefully, amplification can be a powerful tool!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pan\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Panning\"),\r\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\r\n\t\t\t\t\tp(\"As a rule of thumb, composers typically put lead melodies, drums, and basses in the center, and spread any other instruments to either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"panDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Stereo Delay\"),\r\n\t\t\t\t\t\tp(\"When panning, a slight delay is often added between the left and right ear to help make a sound feel more 'directional'. For example, in the real world your left ear will hear a sound coming from the left just slightly before the right ear.\"),\r\n\t\t\t\t\t\tp(\"This setting controls how much delay is added. When this is set to minimum, panning only affects the volume of the left/right ear without changing the delay. This can help to get a more 'uniform' feeling sound, which can be desirable for making 8-bit music.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggioSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Arpeggio Speed\"),\r\n\t\t\t\t\t\tp(\"This setting affects how fast your chord will 'arpeggiate', or cycle between notes. With a fast arpeggio speed it will sound rapid-fire, with a slow speed you can hear each note one after another.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"twoNoteArpeggio\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Faster Two-Note Arpeggio\"),\r\n\t\t\t\t\t\tp(\"This setting makes arpeggios with only two notes in them happen twice as fast. Arpeggios with more notes in them are unaffected.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Detune\"),\r\n\t\t\t\t\tp(\"This setting can be used to finely control the pitch of your instrument.\"),\r\n\t\t\t\t\tp(\"Careful - you can quickly get very dissonant sounding songs by using this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Type\"),\r\n\t\t\t\t\tp(\"MicroBox comes with many instrument presets. You can also create your own custom instruments!\"),\r\n\t\t\t\t\tp(\"There are also options for copying and pasting instrument settings and for generating random instruments at the top of the instrument type menu.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterCutoff\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Cutoff Frequency\"),\r\n\t\t\t\t\tp(\"The lowest setting feels \\\"muffled\\\" or \\\"dark\\\", and the highest setting feels \\\"harsh\\\" or \\\"bright\\\".\"),\r\n\t\t\t\t\tp(\"Most sounds include a range of frequencies from low to high. JummBox instruments have a filter that allows the lowest frequencies to pass through at full volume, but can reduce the volume of the higher frequencies that are above a cutoff frequency. This setting controls the cutoff frequency and thus the range of higher frequencies that are reduced.\"),\r\n\t\t\t\t\tp(\"This cutoff setting also determines which frequency resonates when the resonance peak setting is used.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterResonance\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Resonance Peak\"),\r\n\t\t\t\t\tp(\"Increasing this setting emphasizes a narrow range of frequencies, based on the position of the filter cutoff setting. This can be used to imitate the resonant bodies of acoustic instruments and other interesting effects.\"),\r\n\t\t\t\t\tp(\"The filter preserves the volume of frequencies that are below the cutoff frequency, and reduces the volume of frequencies that are above the cutoff. If this setting is used, the filter also increases the volume of frequencies that are near the cutoff.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Transition\"),\r\n\t\t\t\t\tp(\"This setting controls how quickly notes begin and end.\"),\r\n\t\t\t\t\tp(\"Hard transitions start suddenly and sound like instruments that are played by hitting or plucking, whereas soft transitions start gradually and sound like instruments that are played by blowing air. Some transitions also stop suddenly, whereas others fade out slowly after the end of the note.\"),\r\n\t\t\t\t\tp(\"The \\\"seamless\\\" and \\\"slide\\\" transitions connect the end of a note with the start of the next note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipWave\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chip Wave\"),\r\n\t\t\t\t\tp(\"MicroBox comes with some sound waves based on classic electronic sound chips, as well as several unique waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipNoise\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Noise\"),\r\n\t\t\t\t\tp(\"MicroBox comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the pulse width over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the pulse width envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseWidth\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Width\"),\r\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"interval\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Interval\"),\r\n\t\t\t\t\tp(\"Some JummBox instrument types can play two waves at slightly different frequencies. The difference between the frequencies is called an \\\"interval\\\", and this setting controls how large it is.\"),\r\n\t\t\t\t\tp(\"When two similar waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\r\n\t\t\t\t\tp(\"If the interval is large, then the waves can sound out-of-tune and \\\"dissonant\\\". If the interval is even larger, then the two frequencies can even be distinct pitches.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chords\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chords\"),\r\n\t\t\t\t\tp(\"When multiple notes occur at the same time, this is called a chord. Chords can be created in JummBox's pattern editor by adding notes above or below another note.\"),\r\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"harmony\\\" which plays all of the notes out loud simultaneously. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\r\n\t\t\t\t\tp(\"Some JummBox instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibrato\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Vibrato\"),\r\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibratoDepth\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Depth\"),\r\n\t\t\t\t\t\tp(\"This setting affects the depth of your instrument's vibrato, making the wobbling effect sound stronger or weaker.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Delay\"),\r\n\t\t\t\t\t\tp(\"This setting changes when vibrato starts to kick in after a note is played. Vibrato is most common for long held notes and less common in short notes, so this can help you achieve that effect.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Speed\"),\r\n\t\t\t\t\t\tp(\"This setting determines how fast the vibrato's up-and-down wobble effect will happen for your instrument.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibratoType\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Type\"),\r\n\t\t\t\t\t\tp(\"This determines the way vibrato causes your instrument's pitch to wobble. The normal type is smooth up and down, the shaky type is chaotic.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"algorithm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"FM Algorithm\"),\r\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\r\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency, volume, and volume envelope to control its effect over time.'),\r\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"feedbackType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Feedback\"),\r\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorFrequency\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Frequency\"),\r\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave. The fundamental frequency (1×) is determined by the pitch of the note, and the frequency (2×) is an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\r\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the FM wave volume over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the FM wave envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"spectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds when combined with a hard transition and a falling filter cutoff envelope.\"),\r\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft transition, it's also possible to make howling wind sounds or even musical blown bottle sounds.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"harmonics\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Harmonics\"),\r\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\r\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"effects\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Effects\"),\r\n\t\t\t\t\tp(\"MicroBox has two special effects you can add to instruments. You can turn on either effect, or both at once.\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use the \\\"reverb\\\" slider in the \\\"Song Settings\\\" section above to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Each row in the pattern editor gets its own envelope.\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the drumset cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetSpectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this instrument used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the instrument you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the instrument before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedPattern\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this pattern used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the pattern you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the pattern before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modChannel\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Channel\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which channel the modulators will take effect for. If you choose 'Song', you can change song-wide settings too!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Instrument\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which instrument your modulator will apply to within the given channel you've chosen.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modSet\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Setting\"),\r\n\t\t\t\t\tp(\"This is the parameter that you want to change with this modulator. For example, if you set this to 'Tempo', you can speed up or slow down your song by laying notes in the pattern editor.\"),\r\n\t\t\t\t\tp(\"Note that you'll see different options if your channel is set to 'Song' versus a channel number. With 'Song', you'll see song-wide settings such as tempo. With a channel, you'll see specific instrument settings.\"),\r\n\t\t\t\t\tp(\"Most modulators behave as you'd expect and work just as if you were moving their associated slider. But with the special setting 'Next Bar', the first note you lay will cause the playhead to skip the rest of the bar and jump right to the next one.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transitionBar\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Tie Notes Over Bars\"),\r\n\t\t\t\t\tp(\"With this option ticked, notes won't transition across bars if you put notes with the same pitches at the start of the next bar. Instead they will 'tie over' and sound like one long note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"clicklessTransition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Clickless Transition\"),\r\n\t\t\t\t\tp(\"Sometimes, seamless and other transition types can make audible 'clicks' when changing between notes. Ticking this option will cause those clicks to be silenced as much as possible.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\r\n\t\t\tdefault: throw new Error(\"Unhandled TipPrompt type: \" + type);\r\n\t\t}\r\n\r\n\t\tthis.container = div({ class: \"prompt\", style: \"width: 250px;\" },\r\n\t\t\tmessage,\r\n\t\t\tthis._closeButton,\r\n\t\t);\r\n\r\n\t\tsetTimeout(() => this._closeButton.focus());\r\n\r\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern } from \"../synth/synth\";\r\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { isMobile } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\n\r\nclass Box {\r\n\tprivate readonly _text: Text = document.createTextNode(\"1\");\r\n\tprivate readonly _label: SVGTextElement = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": 20, \"text-anchor\": \"middle\", \"font-weight\": \"bold\", fill: \"red\" }, this._text);\r\n\tprivate readonly _rect: SVGRectElement = SVG.rect({ x: 1, y: 1 });\r\n\tpublic readonly container: SVGSVGElement = SVG.svg(this._rect, this._label);\r\n\tprivate _renderedIndex: number = 1;\r\n\tprivate _renderedDim: boolean = true;\r\n\tprivate _renderedSelected: boolean = false;\r\n\tprivate _renderedColor: string = \"\";\r\n\r\n\tconstructor(channel: number, private readonly _x: number, private readonly _y: number, color: string) {\r\n\t\tthis._rect.setAttribute(\"fill\", ColorConfig.uiWidgetBackground);\r\n\t\tthis._label.setAttribute(\"fill\", color);\r\n\t}\r\n\r\n\tpublic setSize(width: number, height: number): void {\r\n\t\tthis.container.setAttribute(\"x\", \"\" + (this._x * width));\r\n\t\tthis.container.setAttribute(\"y\", \"\" + (Config.barEditorHeight + this._y * height));\r\n\t\tthis._rect.setAttribute(\"width\", \"\" + (width - 2));\r\n\t\tthis._rect.setAttribute(\"height\", \"\" + (height - 2));\r\n\t\tthis._label.setAttribute(\"x\", \"\" + (width / 2));\r\n\t\tthis._label.setAttribute(\"y\", \"\" + Math.round(height / 2 + 7));\r\n\t}\r\n\r\n\tpublic setIndex(index: number, dim: boolean, selected: boolean, color: string, isNoise: boolean, isMod: boolean): void {\r\n\t\tif (this._renderedIndex != index) {\r\n\t\t\tif (!this._renderedSelected && ((index == 0) != (this._renderedIndex == 0))) {\r\n\t\t\t\tif (index == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", \"none\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (index >= 100) {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"16\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, -1.5px);\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"20\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, 0px);\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedIndex = index;\r\n\t\t\tthis._text.data = \"\" + index;\r\n\t\t}\r\n\r\n\t\tif (this._renderedDim != dim || this._renderedColor != color) {\r\n\t\t\tthis._renderedDim = dim;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedSelected != selected || this._renderedColor != color) {\r\n\t\t\tthis._renderedSelected = selected;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._rect.setAttribute(\"fill\", color);\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._renderedColor = color;\r\n\t}\r\n}\r\n\r\nexport class TrackEditor {\r\n\tpublic readonly _barDropDown: HTMLSelectElement = HTML.select({ style: \"width: 32px; height: \" + Config.barEditorHeight + \"px; top: 0px; position: absolute; opacity: 0\" },\r\n\r\n\t\tHTML.option({ value: \"barBefore\" }, \"Insert Bar Before\"),\r\n\t\tHTML.option({ value: \"barAfter\" }, \"Insert Bar After\"),\r\n\t\tHTML.option({ value: \"deleteBar\" }, \"Delete This Bar\"),\r\n\t);\r\n\tprivate readonly _boxContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _barNumberContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect({ fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128 });\r\n\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30 });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _barEditorPath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, stroke: ColorConfig.uiWidgetBackground, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62 });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; position: absolute;`, height: 128 },\r\n\t\tthis._boxContainer,\r\n\t\tthis._barEditorPath,\r\n\t\tthis._selectionRect,\r\n\t\tthis._barNumberContainer,\r\n\t\tthis._boxHighlight,\r\n\t\tthis._upHighlight,\r\n\t\tthis._downHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\tprivate readonly _select: HTMLSelectElement = HTML.select({ class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\" });\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"noSelection\", style: \"height: 128px; position: relative; overflow:hidden;\" }, this._svg, this._select, this._barDropDown);\r\n\r\n\tprivate readonly _grid: Box[][] = [];\r\n\tprivate readonly _barNumbers: SVGTextElement[] = [];\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\t//private _lastScrollTime: number = 0;\r\n\t//private _selecting: boolean = false;\r\n\t//private _selectionStartBar: number = 0;\r\n\t//private _selectionStartChannel: number = 0;\r\n\t//private _pattern: Pattern | null = null;\r\n\tprivate _mouseStartBar: number = 0;\r\n\tprivate _mouseStartChannel: number = 0;\r\n\tprivate _mouseBar: number = 0;\r\n\tprivate _mouseChannel: number = 0;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mousePressed: boolean = false;\r\n\tprivate _mouseDragging = false;\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _channelHeight: number = 32;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedPatternCount: number = 0;\r\n\tprivate _renderedPlayhead: number = -1;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _touchMode: boolean = isMobile;\r\n\tprivate _barDropDownBar: number = 0;\r\n\tprivate _lastScrollTime: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\r\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\r\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\r\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\r\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\r\n\r\n\t\tlet determinedCursorType: boolean = false;\r\n\t\tdocument.addEventListener(\"mousedown\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = false;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\t\tdocument.addEventListener(\"touchstart\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = true;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t\tthis._barDropDown.addEventListener(\"change\", this._barDropDownHandler);\r\n\t\tthis._barDropDown.addEventListener(\"mousedown\", this._barDropDownGetOpenedPosition);\r\n\r\n\t}\r\n\r\n\tprivate _barDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\t\tthis._barDropDownBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t}\r\n\r\n\tprivate _barDropDownHandler = (event: Event): void => {\r\n\r\n\t\tvar moveBarOffset = (this._barDropDown.value == \"barBefore\") ? 0 : 1;\r\n\r\n\t\tif (this._barDropDown.value == \"barBefore\" || this._barDropDown.value == \"barAfter\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar - 1 + moveBarOffset;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.insertBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the inserted zone, though.\r\n\t\t\t// this._doc.bar = prevBar + ((prevBar < this._barDropDownBar + moveBarOffset) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead >= this._barDropDownBar + moveBarOffset) {\r\n\t\t\t\tthis._doc.synth.playhead++;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse if (this._barDropDown.value == \"deleteBar\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.deleteBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the deleted zone, though.\r\n\t\t\t// this._doc.bar = prevBar - ((prevBar <= this._barDropDownBar) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead > this._barDropDownBar) {\r\n\t\t\t\tthis._doc.synth.playhead--;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _whenSelectChanged = (): void => {\r\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _dragBoxSelection(): void {\r\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\tthis._doc.selection.selectionUpdated();\r\n\t}\r\n\r\n\tprivate _updateSelectPos(event: TouchEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._mouseDragging = true;\r\n\t\tthis._updateSelectPos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\t}\r\n\r\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\r\n\t\tthis._updateSelectPos(event);\r\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (this._mousePressed) this._dragBoxSelection();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _updateMousePos(event: MouseEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._updateMousePos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\r\n\t\t// Act on track portion\r\n\t\tif (this._mouseY >= Config.barEditorHeight) {\r\n\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t} else {\r\n\t\t\t\tthis._mouseDragging = false;\r\n\t\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\r\n\t\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tthis._updateMousePos(event);\r\n\t\tif (this._mousePressed) {\r\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\tthis._dragBoxSelection();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mousePressed && !this._mouseDragging) {\r\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\r\n\t\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\r\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tlet channel: number = this._mouseChannel;\r\n\t\tlet bar: number = this._mouseBar;\r\n\r\n\t\tif (this._touchMode) {\r\n\t\t\tbar = this._doc.bar;\r\n\t\t\tchannel = this._doc.channel;\r\n\t\t}\r\n\r\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\r\n\t\tconst overTrackEditor: boolean = (this._mouseY >= Config.barEditorHeight);\r\n\r\n\t\tif (this._mouseDragging && this._mouseStartBar != this._mouseBar) {\r\n\r\n\t\t\t// Handle auto-scroll in selection. Only @50ms or slower.\r\n\t\t\tvar timestamp: number = Date.now();\r\n\r\n\t\t\tif (timestamp - this._lastScrollTime >= 50) {\r\n\r\n\t\t\t\tif (bar > this._doc.barScrollPos + this._doc.trackVisibleBars - 1 && this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(1);\r\n\t\t\t\t}\r\n\t\t\t\tif (bar < this._doc.barScrollPos && this._doc.barScrollPos > 0) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lastScrollTime = timestamp;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver && !this._mousePressed && !selected && overTrackEditor) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + Config.barEditorHeight + (this._channelHeight * channel)));\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (this._channelHeight - 2));\r\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else if ((this._mouseOver || ((this._mouseX >= bar * this._barWidth) && (this._mouseX < bar * this._barWidth + this._barWidth) && (this._mouseY > 0))) && (!overTrackEditor)) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"1\"); // The y is set to 1 instead of 0 due to the thickness of the box causing it to go slightly outside the frame at y=0.\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (Config.barEditorHeight - 3));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tif ((this._mouseOver || this._touchMode) && selected && overTrackEditor) {\r\n\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\r\n\t\t\tconst middle: number = Config.barEditorHeight + this._channelHeight * (channel + 0.5);\r\n\t\t\tconst base: number = this._channelHeight * 0.1;\r\n\t\t\tconst tip: number = this._channelHeight * 0.4;\r\n\t\t\tconst width: number = this._channelHeight * 0.175;\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\r\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\r\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tthis._selectionRect.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\t\tthis._selectionRect.style.top = (Config.barEditorHeight + (this._channelHeight * this._doc.channel)) + \"px\";\r\n\r\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\r\n\t\tthis._select.style.width = this._barWidth + \"px\";\r\n\t\tthis._select.style.top = (Config.barEditorHeight + this._channelHeight * this._doc.channel) + \"px\";\r\n\t\tthis._select.style.height = this._channelHeight + \"px\";\r\n\r\n\t\tthis._barDropDown.style.left = (this._barWidth * bar) + \"px\";\r\n\r\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\r\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\r\n\t\t\tthis._select.appendChild(HTML.option({ value: i }, i));\r\n\t\t}\r\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\r\n\t\t\tthis._select.removeChild(<Node>this._select.lastChild);\r\n\t\t}\r\n\t\tthis._renderedPatternCount = patternCount;\r\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\r\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\t\tthis._channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\r\n\t\t\t// Add new channel boxes if needed\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._grid[y] = [];\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove old channel boxes\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._grid.length = this._doc.song.getChannelCount();\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = this._renderedBarCount; x < this._doc.song.barCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let x: number = this._doc.song.barCount; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t\tthis._grid[y].length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update bar editor's SVG\r\n\t\t\t// this._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\t//this._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tvar pathString = \"\";\r\n\r\n\t\t\tfor (let x: number = 0; x < this._doc.song.barCount; x++) {\r\n\t\t\t\tvar pathLeft = x * this._barWidth + 2;\r\n\t\t\t\tvar pathTop = 1;\r\n\t\t\t\tvar pathRight = x * this._barWidth + this._barWidth - 2;\r\n\t\t\t\tvar pathBottom = Config.barEditorHeight - 3;\r\n\r\n\t\t\t\tpathString += `M ${pathLeft} ${pathTop} H ${pathRight} V ${pathBottom} H ${pathLeft} V ${pathTop} Z `;\r\n\t\t\t}\r\n\r\n\t\t\tthis._barEditorPath.setAttribute(\"d\", pathString);\r\n\r\n\t\t\tif (this._renderedBarCount < this._doc.song.barCount) {\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t\tfor (var pos = this._renderedBarCount; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos] = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": \"8px\", \"text-anchor\": \"middle\", \"font-weight\": \"bold\", \"x\": (pos * this._barWidth + this._barWidth / 2) + \"px\", \"y\": \"7px\", fill: ColorConfig.secondaryText }, \"\" + (pos + 1));\r\n\t\t\t\t\tif (pos % 4 == 0) {\r\n\t\t\t\t\t\t// Highlighting every 4 bars\r\n\t\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"fill\", ColorConfig.primaryText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._barNumberContainer.appendChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this._renderedBarCount > this._doc.song.barCount) {\r\n\t\t\t\tfor (var pos = this._renderedBarCount - 1; pos >= this._doc.song.barCount; pos--) {\r\n\t\t\t\t\tthis._barNumberContainer.removeChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update x of bar editor numbers\r\n\t\t\tif (this._renderedBarWidth != this._barWidth) {\r\n\t\t\t\tfor (var pos = 0; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"x\", (pos * this._barWidth + this._barWidth / 2) + \"px\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._grid[y][x].setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = this._channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tconst editorHeight: number = Config.barEditorHeight + this._doc.song.getChannelCount() * this._channelHeight;\r\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis.container.style.height = editorHeight + \"px\";\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\r\n\t\t\tfor (let i: number = 0; i < this._renderedBarCount; i++) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(j, i);\r\n\t\t\t\tconst selected: boolean = (i == this._doc.bar && j == this._doc.channel);\r\n\t\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\r\n\r\n\t\t\t\tconst box: Box = this._grid[j][i];\r\n\t\t\t\tif (i < this._doc.song.barCount) {\r\n\t\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, j);\r\n\t\t\t\t\tbox.setIndex(this._doc.song.channels[j].bars[i], dim, selected, dim && !selected ? colors.secondaryChannel : colors.primaryChannel, j >= this._doc.song.pitchChannelCount && j < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount, j >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n\t\t\t\t\tbox.container.style.visibility = \"visible\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbox.container.style.visibility = \"hidden\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.selection.boxSelectionWidth > 1 || this._doc.selection.boxSelectionHeight > 1) {\r\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\r\n\t\t\t// editor renders and the selection is visible. Check if anything changed\r\n\t\t\t// before overwriting the attributes?\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(Config.barEditorHeight + this._channelHeight * this._doc.selection.boxSelectionChannel + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(this._channelHeight * this._doc.selection.boxSelectionHeight - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//import {Layout} from \"./Layout\";\r\nimport { Channel, Instrument, ModSetting, ModStatus, Pattern } from \"../synth/synth\";\r\nimport { Config, InstrumentType } from \"../synth/SynthConfig\";\r\nimport { BarScrollBar } from \"./BarScrollBar\";\r\nimport { SongSettingsPrompt } from \"./SongSettingsPrompt\";\r\n// import { BeatsPerBarPrompt } from \"./BeatsPerBarPrompt\";\r\nimport { Change, ChangeGroup } from \"./Change\";\r\nimport { ChangeAlgorithm, ChangeChannelBar, ChangeChipWave, ChangeChannelOrder, ChangeChord, ChangeCustomWave, ChangeDetectKey, ChangeDetune, ChangeDrumsetEnvelope, ChangeEffects, ChangeFeedbackAmplitude, ChangeFeedbackEnvelope, ChangeFeedbackType, ChangeFilterCutoff, ChangeFilterEnvelope, ChangeFilterResonance, ChangeInterval, ChangeKey, ChangeNoiseWave, ChangeOperatorAmplitude, ChangeOperatorEnvelope, ChangeOperatorFrequency, ChangePan, ChangePasteInstrument, ChangePatternNumbers, ChangePatternsPerChannel, ChangePreset, ChangePulseEnvelope, ChangePulseWidth, ChangeRandomGeneratedInstrument, ChangeReverb, ChangeRhythm, ChangeScale, ChangeSong, ChangeSongTitle, ChangeTempo, ChangeTransition, ChangeVibrato, ChangeVibratoType, ChangeVolume, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangePanDelay, ChangeArpeggioSpeed, pickRandomPresetValue, ChangeFastTwoNoteArp, ChangeClicklessTransition, ChangeTieNoteTransition, ChangePatternSelection } from \"./changes\";\r\nimport { ChannelSettingsPrompt } from \"./ChannelSettingsPrompt\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { CustomChipPrompt } from \"./CustomChipPrompt\";\r\nimport { EditorConfig, isMobile, prettyNumber, Preset, PresetCategory } from \"./EditorConfig\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { HarmonicsEditor } from \"./HarmonicsEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { InputBox, Slider } from \"./HTMLWrapper\";\r\nimport { ImportPrompt } from \"./ImportPrompt\";\r\nimport { LayoutPrompt } from \"./LayoutPrompt\";\r\nimport { LimiterPrompt } from \"./LimiterPrompt\";\r\nimport { LoopEditor } from \"./LoopEditor\";\r\nimport { MoveNotesSidewaysPrompt } from \"./MoveNotesSidewaysPrompt\";\r\nimport { MuteEditor } from \"./MuteEditor\";\r\nimport { OctaveScrollBar } from \"./OctaveScrollBar\";\r\nimport { PatternEditor } from \"./PatternEditor\";\r\nimport { Piano } from \"./Piano\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n// import { SongDurationPrompt } from \"./SongDurationPrompt\";\r\nimport { SongRecoveryPrompt } from \"./SongRecoveryPrompt\";\r\nimport { SpectrumEditor } from \"./SpectrumEditor\";\r\nimport { ThemePrompt } from \"./ThemePrompt\";\r\nimport { TipPrompt } from \"./TipPrompt\";\r\nimport { TrackEditor } from \"./TrackEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, input, select, span, optgroup, option, canvas } = HTML;\r\n\r\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tfor (let index: number = 0; index < items.length; index++) {\r\n\t\tmenu.appendChild(option({ value: index }, items[index]));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\n// Similar to the above, but adds a non-interactive header to the list.\r\n// @jummbus: Honestly not necessary with new HTML options interface, but not exactly necessary to change either!\r\n\r\nfunction buildHeaderedOptions(header: string, menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tmenu.appendChild(option({ selected: true, disabled: true, value: header }, header));\r\n\r\n\tfor (const item of items) {\r\n\t\tmenu.appendChild(option({ value: item }, item));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\nfunction buildPresetOptions(isNoise: boolean, idSet: string): HTMLSelectElement {\r\n\tconst menu: HTMLSelectElement = select({ id: idSet });\r\n\r\n\t// Show the \"spectrum\" custom type in both pitched and noise channels.\r\n\t//const customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\r\n\tif (isNoise) {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.drumset }, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\r\n\t} else {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.chip }, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.pwm }, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.harmonics }, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.customChipWave }, EditorConfig.valueToPreset(InstrumentType.customChipWave)!.name));\r\n\t}\r\n\r\n\tconst randomGroup: HTMLElement = optgroup({ label: \"Randomize ▾\" });\r\n\trandomGroup.appendChild(option({ value: \"randomPreset\" }, \"Random Preset\"));\r\n\trandomGroup.appendChild(option({ value: \"randomGenerated\" }, \"Random Generated\"));\r\n\tmenu.appendChild(randomGroup);\r\n\r\n\r\n\tfor (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tconst group: HTMLElement = optgroup({ label: category.name + \" ▾\" });\r\n\t\tlet foundAny: boolean = false;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif ((preset.isNoise == true) == isNoise) {\r\n\t\t\t\tgroup.appendChild(option({ value: (categoryIndex << 6) + presetIndex }, preset.name));\r\n\t\t\t\tfoundAny = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Need to re-sort some elements for readability. Can't just do this in the menu, because indices are saved in URLs and would get broken if the ordering actually changed.\r\n\t\tif (category.name == \"String Presets\" && foundAny) {\r\n\r\n\t\t\t// Put violin 2 after violin 1\r\n\t\t\tlet moveViolin2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveViolin2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Flute Presets\" && foundAny) {\r\n\r\n\t\t\t// Put flute 2 after flute 1\r\n\t\t\tlet moveFlute2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveFlute2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Keyboard Presets\" && foundAny) {\r\n\r\n\t\t\t// Put grand piano 2 after grand piano 1\r\n\t\t\tlet moveGrandPiano2 = group.removeChild(group.children[9]);\r\n\t\t\tgroup.insertBefore(moveGrandPiano2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (foundAny) menu.appendChild(group);\r\n\t}\r\n\r\n\treturn menu;\r\n}\r\n\r\nfunction setSelectedValue(menu: HTMLSelectElement, value: number): void {\r\n\tconst stringValue = value.toString();\r\n\tif (menu.value != stringValue) menu.value = stringValue;\r\n\r\n\t// Change select2 value, if this select is a member of that class.\r\n\tif ($(menu).data('select2')) {\r\n\t\t$(menu).val(value).trigger('change.select2');\r\n\t}\r\n}\r\n\r\nclass CustomChipCanvas {\r\n\tprivate mouseDown: boolean;\r\n\tprivate continuousEdit: boolean;\r\n\tprivate lastX: number;\r\n\tprivate lastY: number;\r\n\tpublic newArray: Float64Array;\r\n\r\n\tprivate _change: Change | null = null;\r\n\r\n\tconstructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: Float64Array) => Change) {\r\n\t\t//canvas.addEventListener(\"input\", this._whenInput);\r\n\t\t//canvas.addEventListener(\"change\", this._whenChange);\r\n\t\tcanvas.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tcanvas.addEventListener(\"mousedown\", this._onMouseDown);\r\n\t\tcanvas.addEventListener(\"mouseup\", this._onMouseUp);\r\n\t\tcanvas.addEventListener(\"mouseleave\", this._onMouseUp);\r\n\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\t\tthis.lastX = 0;\r\n\t\tthis.lastY = 0;\r\n\r\n\t\tthis.newArray = new Float64Array(64);\r\n\r\n\t\t// Init waveform\r\n\t\tthis.redrawCanvas();\r\n\r\n\t}\r\n\r\n\tpublic redrawCanvas(): void {\r\n\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t// Black BG\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\tctx.fillRect(0, 0, 128, 52);\r\n\r\n\t\t// Mid-bar\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\tctx.fillRect(0, 25, 128, 2);\r\n\r\n\t\t// 25-75 bars\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\tctx.fillRect(0, 13, 128, 1);\r\n\t\tctx.fillRect(0, 39, 128, 1);\r\n\r\n\t\t// Waveform\r\n\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let x: number = 0; x < 64; x++) {\r\n\t\t\tvar y: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[x] + 26;\r\n\t\t\tctx.fillRect(x * 2, y - 2, 2, 4);\r\n\r\n\t\t\tthis.newArray[x] = y - 26;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tif (this.mouseDown) {\r\n\r\n\t\t\tvar x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\r\n\t\t\tvar y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\r\n\r\n\t\t\tif (y < 2) y = 2;\r\n\t\t\tif (y > 50) y = 50;\r\n\r\n\t\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t\tif (this.continuousEdit == true && Math.abs(this.lastX - x) < 40) {\r\n\r\n\t\t\t\tvar lowerBound = (x < this.lastX) ? x : this.lastX;\r\n\t\t\t\tvar upperBound = (x < this.lastX) ? this.lastX : x;\r\n\r\n\t\t\t\tfor (let i = lowerBound; i <= upperBound; i += 2) {\r\n\r\n\t\t\t\t\tvar progress = (Math.abs(x - this.lastX) > 2.0) ? ((x > this.lastX) ?\r\n\t\t\t\t\t\t1.0 - ((i - lowerBound) / (upperBound - lowerBound))\r\n\t\t\t\t\t\t: ((i - lowerBound) / (upperBound - lowerBound))) : 0.0;\r\n\t\t\t\t\tvar j = Math.round(y + (this.lastY - y) * progress);\r\n\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 0, 2, 53);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 25, 2, 2);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 13, 2, 1);\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 39, 2, 1);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, j - 2, 2, 4);\r\n\r\n\t\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\t\tthis.newArray[Math.floor(i / 2)] = (j - 26);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 0, 2, 52);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 25, 2, 2);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 13, 2, 1);\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 39, 2, 1);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, y - 2, 2, 4);\r\n\r\n\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\tthis.newArray[Math.floor(x / 2)] = (y - 26);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.continuousEdit = true;\r\n\t\t\tthis.lastX = x;\r\n\t\t\tthis.lastY = y;\r\n\r\n\t\t\t// Preview - update integral used for sound synthesis based on new array, not actual stored array. When mouse is released, real update will happen.\r\n\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tsum += this.newArray[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / this.newArray.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = this.newArray[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _onMouseDown = (event: MouseEvent): void => {\r\n\t\tthis.mouseDown = true;\r\n\r\n\t\t// Allow single-click edit\r\n\t\tthis._onMouseMove(event);\r\n\t}\r\n\tprivate _onMouseUp = (): void => {\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\r\n\t\tthis._whenChange();\r\n\t}\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._change = this._getChange(this.newArray);\r\n\r\n\t\tthis._doc.record(this._change!);\r\n\r\n\t\tthis._change = null;\r\n\t};\r\n\r\n}\r\n\r\nexport class SongEditor {\r\n\tpublic prompt: Prompt | null = null;\r\n\r\n\tprivate readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\r\n\tprivate readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\r\n\tprivate readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\r\n\tprivate readonly _trackEditor: TrackEditor = new TrackEditor(this._doc, this);\r\n\tprivate readonly _muteEditor: MuteEditor = new MuteEditor(this._doc, this);\r\n\tprivate readonly _loopEditor: LoopEditor = new LoopEditor(this._doc);\r\n\tprivate readonly _piano: Piano = new Piano(this._doc);\r\n\tprivate readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc, this._piano);\r\n\tprivate readonly _playButton: HTMLButtonElement = button({ style: \"width: 80px;\", type: \"button\" });\r\n\tprivate readonly _prevBarButton: HTMLButtonElement = button({ class: \"prevBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Previous Bar (left bracket)\" });\r\n\tprivate readonly _nextBarButton: HTMLButtonElement = button({ class: \"nextBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Next Bar (right bracket)\" });\r\n\tprivate readonly _volumeSlider: Slider = new Slider(input({ title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\" }), this._doc, null, false);\r\n\tprivate readonly _outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: visible; margin: auto; max-width: 20vw;`, width: \"160px\", height: \"100%\", preserveAspectRatio: \"none\", viewBox: \"0 0 160 12\" },\r\n\t\tthis._defs,\r\n\t\tthis._outVolumeBarBg,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\tprivate readonly _volumeBarBox: HTMLDivElement = div({ class: \"playback-volume-bar\", style: \"height: 12px; align-self: center;\" },\r\n\t\tthis._volumeBarContainer,\r\n\t);\r\n\tprivate readonly _fileMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"new\" }, \"+ New Blank Song\"),\r\n\t\toption({ value: \"import\" }, \"↑ Import Song...\"),\r\n\t\toption({ value: \"export\" }, \"↓ Export Song...\"),\r\n\t\toption({ value: \"copyUrl\" }, \"⎘ Copy Song URL\"),\r\n\t\toption({ value: \"shareUrl\" }, \"⤳ Share Song URL\"),\r\n\t\toption({ value: \"shortenUrl\" }, \"… Shorten Song URL\"),\r\n\t\toption({ value: \"viewPlayer\" }, \"▶ View in Song Player\"),\r\n\t\toption({ value: \"copyEmbed\" }, \"⎘ Copy HTML Embed Code\"),\r\n\t\toption({ value: \"songRecovery\" }, \"⚠ Recover Recent Song...\"),\r\n\t);\r\n\tprivate readonly _editMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"undo\" }, \"Undo (Z)\"),\r\n\t\toption({ value: \"redo\" }, \"Redo (Y)\"),\r\n\t\toption({ value: \"copy\" }, \"Copy Pattern (C)\"),\r\n\t\toption({ value: \"pasteNotes\" }, \"Paste Pattern Notes (V)\"),\r\n\t\toption({ value: \"pasteNumbers\" }, \"Paste Pattern Numbers (⇧V)\"),\r\n\t\toption({ value: \"insertBars\" }, \"Insert Bar After Selection (⏎)\"),\r\n\t\toption({ value: \"deleteBars\" }, \"Delete Selected Bar (⌫)\"),\r\n\t\toption({ value: \"selectAll\" }, \"Select All (A)\"),\r\n\t\toption({ value: \"selectChannel\" }, \"Select Channel (⇧A)\"),\r\n\t\toption({ value: \"duplicatePatterns\" }, \"Duplicate Reused Patterns (D)\"),\r\n\t\toption({ value: \"transposeUp\" }, \"Move Notes Up (+)\"),\r\n\t\toption({ value: \"transposeDown\" }, \"Move Notes Down (-)\"),\r\n\t\toption({ value: \"moveNotesSideways\" }, \"Move All Notes Sideways... (W)\"),\r\n\t\toption({ value: \"songSettings\" }, \"Song Settings... (O)\"),\r\n\t\t// option({ value: \"beatsPerBar\" }, \"Change Beats Per Bar...\"),\r\n\t\t// option({ value: \"barCount\" }, \"Change Song Length... (L)\"),\r\n\t\toption({ value: \"channelSettings\" }, \"Channel Settings... (Q)\"),\r\n\t\toption({ value: \"limiterSettings\" }, \"Limiter Settings... (⇧L)\"),\r\n\t);\r\n\tprivate readonly _optionsMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"autoPlay\" }, \"Auto Play On Load\"),\r\n\t\toption({ value: \"autoFollow\" }, \"Auto Follow Track\"),\r\n\t\toption({ value: \"enableNotePreview\" }, \"Preview Added Notes\"),\r\n\t\toption({ value: \"showLetters\" }, \"Show Piano Keys\"),\r\n\t\toption({ value: \"showFifth\" }, 'Highlight \"Fifth\" Notes'),\r\n\t\toption({ value: \"showChannels\" }, \"Show All Channels\"),\r\n\t\toption({ value: \"showScrollBar\" }, \"Octave Scroll Bar\"),\r\n\t\toption({ value: \"alwaysFineNoteVol\" }, \"Always Fine Note Vol.\"),\r\n\t\toption({ value: \"enableChannelMuting\" }, \"Enable Channel Muting\"),\r\n\t\toption({ value: \"displayBrowserUrl\" }, \"Display Song Data in URL\"),\r\n\t\toption({ value: \"displayVolumeBar\" }, \"Show Playback Volume\"),\r\n\t\toption({ value: \"fullScreen\" }, \"Set Layout...\"),\r\n\t\toption({ value: \"colorTheme\" }, \"Set Theme...\"),\r\n\t\t//option({value: \"alwaysShowSettings\"}, \"Customize All Instruments\"),\r\n\t);\r\n\tprivate readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale => scale.name));\r\n\tprivate readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key => key.name).reverse());\r\n\tprivate readonly _tempoSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"30\", max: \"320\", value: \"160\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _tempoStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _reverbSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm => rhythm.name));\r\n\tprivate readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false, \"pitchPresetSelect\");\r\n\tprivate readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true, \"drumPresetSelect\");\r\n\tprivate readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm => algorithm.name));\r\n\tprivate readonly _algorithmSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithmSelect));\r\n\tprivate readonly _instrumentSelect: HTMLSelectElement = select();\r\n\tprivate readonly _instrumentSelectRow: HTMLDivElement = div({ class: \"selectRow\", style: \"display: none;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentIndex\") }, \"Instrument: \"), div({ class: \"selectContainer\" }, this._instrumentSelect));\r\n\tprivate readonly _instrumentVolumeSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _instrumentVolumeSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%\", id: \"volumeSliderInputBox\", type: \"number\", step: \"1\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\" });\r\n\tprivate readonly _instrumentVolumeSliderTip: HTMLDivElement = div({ class: \"selectRow\", style: \"height: 1em\" }, span({ class: \"tip\", style: \"font-size: smaller;\", onclick: () => this._openPrompt(\"instrumentVolume\") }, \"Volume: \"));\r\n\tprivate readonly _instrumentVolumeSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \";\" }, span({ class: \"tip\" }, this._instrumentVolumeSliderTip)),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._instrumentVolumeSliderInputBox),\r\n\t), this._instrumentVolumeSlider.container);\r\n\tprivate readonly _panSlider: Slider = new Slider(input({ style: \"margin: 0;\", position: \"sticky;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _panDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(1) }, \"▼\");\r\n\tprivate readonly _panSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"panSliderInputBox\", type: \"number\", step: \"1\", min: \"0\", max: \"100\", value: \"0\" });\r\n\tprivate readonly _panSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pan\") }, \"Pan: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._panSliderInputBox),\r\n\t), this._panDropdown, this._panSlider.container);\r\n\tprivate readonly _panDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstPanDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePanDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _panDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"panDelay\") }, \"Delay:\"), this._panDelaySlider.container);\r\n\tprivate readonly _panDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._panDelayRow);\r\n\tprivate readonly _detuneSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: Config.detuneMin, max: Config.detuneMax, value: 0, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _detuneSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"detuneSliderInputBox\", type: \"number\", step: \"1\", min: \"\" + Config.detuneMin, max: \"\" + Config.detuneMax, value: \"0\" });\r\n\tprivate readonly _detuneSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"detune\") }, \"Detune: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._detuneSliderInputBox),\r\n\t), this._detuneSlider.container);\r\n\tprivate readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave => wave.name));\r\n\tprivate readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave => wave.name));\r\n\tprivate readonly _chipWaveSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipWave\") }, \"Wave: \"), div({ class: \"selectContainer\" }, this._chipWaveSelect));\r\n\tprivate readonly _chipNoiseSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipNoise\") }, \"Noise: \"), div({ class: \"selectContainer\" }, this._chipNoiseSelect));\r\n\tprivate readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition => transition.name));\r\n\tprivate readonly _transitionDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(3) }, \"▼\");\r\n\tprivate readonly _transitionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"transition\") }, \"Transition:\"), this._transitionDropdown, div({ class: \"selectContainer\" }, this._transitionSelect));\r\n\tprivate readonly _tieNoteTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _tieNoteTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"transitionBar\") }, \"Tie Over Bars:\"), this._tieNoteTransitionBox);\r\n\tprivate readonly _clicklessTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _clicklessTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"clicklessTransition\") }, \"Clickless:\"), this._clicklessTransitionBox);\r\n\tprivate readonly _transitionDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._tieNoteTransitionRow, this._clicklessTransitionRow);\r\n\tprivate readonly _effectsSelect: HTMLSelectElement = buildOptions(select(), Config.effectsNames);\r\n\tprivate readonly _filterCutoffSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterCutoffRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterCutoff(this._doc, oldValue, newValue), false);\r\n\tprivate _filterCutoffRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._filterCutoffSlider.container);\r\n\tprivate readonly _filterResonanceSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterResonanceRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterResonance(this._doc, oldValue, newValue), false);\r\n\tprivate _filterResonanceRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._filterResonanceSlider.container);\r\n\tprivate readonly _filterEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _filterEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterEnvelope\") }, \"Filter Env:\"), div({ class: \"selectContainer\" }, this._filterEnvelopeSelect));\r\n\tprivate readonly _pulseEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _pulseEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Pulse Width Modulator Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseEnvelope\") }, \"Pulse Env:\"), div({ class: \"selectContainer\" }, this._pulseEnvelopeSelect));\r\n\tprivate readonly _pulseWidthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"1\", max: Config.pulseWidthRange, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue), false);\r\n\tprivate _pulseWidthRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseWidth\") }, \"Pulse Width:\"), this._pulseWidthSlider.container);\r\n\tprivate readonly _intervalSelect: HTMLSelectElement = buildOptions(select(), Config.intervals.map(interval => interval.name));\r\n\tprivate readonly _intervalSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"interval\") }, \"Interval:\"), div({ class: \"selectContainer\" }, this._intervalSelect));\r\n\tprivate readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord => chord.name));\r\n\tprivate readonly _chordDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(2) }, \"▼\");\r\n\tprivate readonly _chordSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chords\") }, \"Chords:\"), this._chordDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._chordSelect));\r\n\tprivate readonly _arpeggioSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstArpeggioSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeArpeggioSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _arpeggioSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"arpeggioSpeed\") }, \"Speed:\"), this._arpeggioSpeedSlider.container);\r\n\tprivate readonly _twoNoteArpBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _twoNoteArpRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"twoNoteArpeggio\") }, \"Fast Two-Note:\"), this._twoNoteArpBox);\r\n\tprivate readonly _chordDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._arpeggioSpeedRow, this._twoNoteArpRow);\r\n\tprivate readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(0) }, \"▼\");\r\n\tprivate readonly _vibratoSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"vibrato\") }, \"Vibrato:\"), this._vibratoDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoSelect));\r\n\tprivate readonly _vibratoDepthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDepth), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDepth(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDepthRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDepth\") }, \"Depth:\"), this._vibratoDepthSlider.container);\r\n\tprivate readonly _vibratoSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoSpeed\") }, \"Speed:\"), this._vibratoSpeedSlider.container);\r\n\tprivate readonly _vibratoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDelay\") }, \"Delay:\"), this._vibratoDelaySlider.container);\r\n\tprivate readonly _vibratoTypeSelect: HTMLSelectElement = buildOptions(select(), Config.vibratoTypes.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoTypeSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoType\") }, \"Type:\"), div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoTypeSelect));\r\n\tprivate readonly _vibratoDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._vibratoDepthRow, this._vibratoSpeedRow, this._vibratoDelayRow, this._vibratoTypeSelectRow);\r\n\tprivate readonly _phaseModGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback => feedback.name));\r\n\tprivate readonly _feedbackRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedbackTypeSelect));\r\n\tprivate readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\r\n\tprivate readonly _spectrumRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"spectrum\") }, \"Spectrum:\"), this._spectrumEditor.container);\r\n\tprivate readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\r\n\tprivate readonly _harmonicsRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"harmonics\") }, \"Harmonics:\"), this._harmonicsEditor.container);\r\n\tprivate readonly _drumsetGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modulatorGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modNameRows: HTMLElement[];\r\n\tprivate readonly _modChannelBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modInstrumentBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modSetRows: HTMLElement[];\r\n\tprivate readonly _modSetBoxes: HTMLSelectElement[];\r\n\r\n\tprivate readonly _instrumentCopyButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"copyButton\" }, [\r\n\t\t\"Copy\",\r\n\t\t// Copy icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\r\n\t\t]),\r\n\t]);\r\n\tprivate readonly _instrumentPasteButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"pasteButton\" }, [\r\n\t\t\"Paste\",\r\n\t\t// Paste icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\r\n\t\t\tSVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\r\n\t\t]),\r\n\t]);\r\n\r\n\tprivate readonly _customWaveDrawCanvas: CustomChipCanvas = new CustomChipCanvas(canvas({ width: 128, height: 52, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customWaveDrawCanvas\" }), this._doc, (newArray: Float64Array) => new ChangeCustomWave(this._doc, newArray));\r\n\tprivate readonly _customWavePresetDrop: HTMLSelectElement = buildHeaderedOptions(\"Load Preset\", select({ style: \"width: 50%; height:1.5em; text-align: center; text-align-last: center;\" }),\r\n\t\tConfig.chipWaves.map(wave => wave.name)\r\n\t);\r\n\tprivate readonly _customWaveZoom: HTMLButtonElement = button({ style: \"margin-left:0.5em; height:1.5em; max-width: 20px;\", onclick: () => this._openPrompt(\"customChipSettings\") }, \"+\");\r\n\r\n\tprivate readonly _customWaveDraw: HTMLDivElement = div({ style: \"height:80px; margin-top:10px; margin-bottom:5px\" }, [\r\n\t\tdiv({ style: \"height:54px; display:flex; justify-content:center;\" }, [this._customWaveDrawCanvas.canvas]),\r\n\t\tdiv({ style: \"margin-top:5px; display:flex; justify-content:center;\" }, [this._customWavePresetDrop, this._customWaveZoom]),\r\n\t]);\r\n\r\n\tprivate readonly _songTitleInputBox: InputBox = new InputBox(input({ style: \"font-weight:bold; border:none; width: 100%; background-color:${ColorConfig.editorBackground}; color:${ColorConfig.primaryText}; text-align:center\", maxlength: \"30\", type: \"text\", value: EditorConfig.versionDisplayName }), this._doc, (oldValue: string, newValue: string) => new ChangeSongTitle(this._doc, oldValue, newValue));\r\n\r\n\r\n\tprivate readonly _feedbackAmplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _feedbackEnvelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Feedback Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate readonly _feedbackRow2: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\tdiv({ style: \"width: 3em; margin-right: .3em;\" }),\r\n\t\tthis._feedbackAmplitudeSlider.container,\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, this._feedbackEnvelopeSelect),\r\n\t);\r\n\t/*\r\n\t\t\t* @jummbus - my very real, valid reason for cutting this button: I don't like it.\r\n\t\t\t* \r\n\tprivate readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", style: \"margin: 2px 0\"},\r\n\r\n\t\t\"Customize Instrument\",\r\n\t);\r\n\t\t*/\r\n\tprivate readonly _customInstrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._chipWaveSelectRow,\r\n\t\tthis._chipNoiseSelectRow,\r\n\t\tthis._detuneSliderRow,\r\n\t\tthis._customWaveDraw,\r\n\t\tthis._filterCutoffRow,\r\n\t\tthis._filterResonanceRow,\r\n\t\tthis._filterEnvelopeRow,\r\n\t\tthis._transitionRow,\r\n\t\tthis._transitionDropdownGroup,\r\n\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"effects\") }, \"Effects:\"),\r\n\t\t\tdiv({ class: \"selectContainer\" }, this._effectsSelect),\r\n\t\t),\r\n\t\tthis._chordSelectRow,\r\n\t\tthis._chordDropdownGroup,\r\n\t\tthis._vibratoSelectRow,\r\n\t\tthis._vibratoDropdownGroup,\r\n\t\tthis._intervalSelectRow,\r\n\t\tthis._algorithmSelectRow,\r\n\t\tthis._phaseModGroup,\r\n\t\tthis._feedbackRow1,\r\n\t\tthis._feedbackRow2,\r\n\t\tthis._spectrumRow,\r\n\t\tthis._harmonicsRow,\r\n\t\tthis._drumsetGroup,\r\n\t\tthis._pulseEnvelopeRow,\r\n\t\tthis._pulseWidthRow,\r\n\t);\r\n\tprivate readonly _instrumentCopyGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tthis._instrumentCopyButton,\r\n\t\t\tthis._instrumentPasteButton,\r\n\t\t),\r\n\t);\r\n\tprivate readonly _instrumentSettingsTextRow: HTMLDivElement = div({ id: \"instrumentSettingsText\", style: `margin: 3px 0; max-width: 15em; text-align: center; color: ${ColorConfig.secondaryText};` },\r\n\t\t\"Instrument Settings\"\r\n\t);\r\n\tprivate readonly _instrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._instrumentSettingsTextRow,\r\n\t\tthis._instrumentSelectRow,\r\n\t\tdiv({ class: \"selectRow\", id: \"typeSelectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentType\") }, \"Type: \"),\r\n\t\t\tdiv(\r\n\t\t\t\tdiv({ class: \"pitchSelect\" }, this._pitchedPresetSelect),\r\n\t\t\t\tdiv({ class: \"drumSelect\" }, this._drumPresetSelect)\r\n\t\t\t),\r\n\t\t),\r\n\t\tthis._instrumentVolumeSliderRow,\r\n\t\tthis._panSliderRow,\r\n\t\tthis._panDropdownGroup,\r\n\t\t//this._customizeInstrumentButton,\r\n\t\tthis._customInstrumentSettingsGroup,\r\n\t);\r\n\tprivate readonly _usedPatternIndicator: SVGElement = SVG.path({ d: \"M -6 -6 H 6 V 6 H -6 V -6 M -2 -3 L -2 -3 L -1 -4 H 1 V 4 H -1 V -1.2 L -1.2 -1 H -2 V -3 z\", fill: ColorConfig.indicatorSecondary, \"fill-rule\": \"evenodd\" });\r\n\tprivate readonly _usedInstrumentIndicator: SVGElement = SVG.path({ d: \"M -6 -0.8 H -3.8 V -6 H 0.8 V 4.4 H 2.2 V -0.8 H 6 V 0.8 H 3.8 V 6 H -0.8 V -4.4 H -2.2 V 0.8 H -6 z\", fill: ColorConfig.indicatorSecondary });\r\n\r\n\tprivate readonly _promptContainer: HTMLDivElement = div({ class: \"promptContainer\", style: \"display: none;\" });\r\n\tprivate readonly _patternEditorRow: HTMLDivElement = div({ style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\" },\r\n\t\tthis._patternEditorPrev.container,\r\n\t\tthis._patternEditor.container,\r\n\t\tthis._patternEditorNext.container,\r\n\t);\r\n\tprivate readonly _patternArea: HTMLDivElement = div({ class: \"pattern-area\" },\r\n\t\tthis._piano.container,\r\n\t\tthis._patternEditorRow,\r\n\t\tthis._octaveScrollBar.container,\r\n\t);\r\n\tprivate readonly _trackContainer: HTMLDivElement = div({ class: \"trackContainer\" },\r\n\t\tthis._trackEditor.container,\r\n\t\tthis._loopEditor.container,\r\n\t);\r\n\tprivate readonly _trackAndMuteContainer: HTMLDivElement = div({ class: \"trackAndMuteContainer\" },\r\n\t\tthis._muteEditor.container,\r\n\t\tthis._trackContainer,\r\n\t);\r\n\tpublic readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc, this._trackContainer);\r\n\tprivate readonly _trackArea: HTMLDivElement = div({ class: \"track-area\" },\r\n\t\tthis._trackAndMuteContainer,\r\n\t\tthis._barScrollBar.container,\r\n\t);\r\n\r\n\tpublic readonly _settingsArea: HTMLDivElement = div({ class: \"settings-area noSelection\" },\r\n\t\tdiv({ class: \"version-area\" },\r\n\t\t\tdiv({ style: \"text-align: center; color: ${ColorConfig.secondaryText};\" }, [this._songTitleInputBox.input]),\r\n\t\t),\r\n\t\tdiv({ class: \"play-pause-area\" },\r\n\t\t\tthis._volumeBarBox,\r\n\t\t\tdiv({ class: \"playback-bar-controls\" },\r\n\t\t\t\tthis._playButton,\r\n\t\t\t\tthis._prevBarButton,\r\n\t\t\t\tthis._nextBarButton,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"playback-volume-controls\" },\r\n\t\t\t\tspan({ class: \"volume-speaker\" }),\r\n\t\t\t\tthis._volumeSlider.container,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"menu-area\" },\r\n\t\t\tdiv({ class: \"selectContainer menu file\" },\r\n\t\t\t\tthis._fileMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu edit\" },\r\n\t\t\t\tthis._editMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu preferences\" },\r\n\t\t\t\tthis._optionsMenu,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"song-settings-area\" },\r\n\t\t\tdiv({ class: \"editor-controls\" },\r\n\t\t\t\tdiv({ class: \"editor-song-settings\" },\r\n\t\t\t\t\tdiv({ style: \"margin: 3px 0; position: relative; text-align: center; color: ${ColorConfig.secondaryText};\" },\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position:absolute; left: 0; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedPattern\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"0.5em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedPatternIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position: absolute; left: 14px; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedInstrument\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"1em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedInstrumentIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\"General Settings\"\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\t// div({ class: \"selectRow\" },\r\n\t\t\t\t// \tspan({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\r\n\t\t\t\t// \tdiv({ class: \"selectContainer\" }, this._scaleSelect),\r\n\t\t\t\t// ),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"key\") }, \"Key: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._keySelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"tempo\") }, \"Tempo: \"),\r\n\t\t\t\t\tspan({ style: \"display: flex;\" },\r\n\t\t\t\t\t\tthis._tempoSlider.container,\r\n\t\t\t\t\t\tthis._tempoStepper,\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"reverb\") }, \"Reverb: \"),\r\n\t\t\t\t\tthis._reverbSlider.container,\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"rhythm\") }, \"Rhythm: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._rhythmSelect),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"instrument-settings-area\" },\r\n\t\t\tthis._instrumentSettingsGroup,\r\n\t\t\tthis._modulatorGroup,\r\n\t\t),\r\n\t);\r\n\r\n\tpublic readonly mainLayer: HTMLDivElement = div({ class: \"beepboxEditor\", tabIndex: \"0\" },\r\n\t\tthis._patternArea,\r\n\t\tthis._trackArea,\r\n\t\tthis._settingsArea,\r\n\t\tthis._promptContainer,\r\n\t);\r\n\r\n\tprivate _wasPlaying: boolean = false;\r\n\tprivate _currentPromptName: string | null = null;\r\n\tprivate readonly _operatorRows: HTMLDivElement[] = []\r\n\tprivate readonly _operatorAmplitudeSliders: Slider[] = []\r\n\tprivate readonly _operatorEnvelopeSelects: HTMLSelectElement[] = []\r\n\tprivate readonly _operatorFrequencySelects: HTMLSelectElement[] = []\r\n\tprivate readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\r\n\tprivate readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\r\n\tprivate _showModSliders: boolean[] = [];\r\n\tprivate _newShowModSliders: boolean[] = [];\r\n\tprivate _modSliderValues: number[] = [];\r\n\tprivate _hasActiveModSliders: boolean = false;\r\n\tprivate _modSliderHandle: number = 0;\r\n\tprivate _volumeHandle: number = 0;\r\n\tprivate _barScrollbarHandle: number = 0;\r\n\r\n\tprivate _openPanDropdown: boolean = false;\r\n\tprivate _openVibratoDropdown: boolean = false;\r\n\tprivate _openChordDropdown: boolean = false;\r\n\tprivate _openTransitionDropdown: boolean = false;\r\n\r\n\tprivate outVolumeHistoricTimer: number = 0;\r\n\tprivate outVolumeHistoricCap: number = 0;\r\n\tprivate lastOutVolumeCap: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._doc.notifier.watch(this.whenUpdated);\r\n\t\twindow.addEventListener(\"resize\", this.whenUpdated);\r\n\r\n\t\tif (!(\"share\" in navigator)) {\r\n\t\t\tthis._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\r\n\t\t}\r\n\r\n\t\tthis._scaleSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceScale\" }, \"Snap Notes To Scale\"),\r\n\t\t));\r\n\t\tthis._keySelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"detectKey\" }, \"Detect Key\"),\r\n\t\t));\r\n\t\tthis._rhythmSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceRhythm\" }, \"Snap Notes To Rhythm\"),\r\n\t\t));\r\n\r\n\t\tthis._vibratoSelect.appendChild(option({ hidden: true, value: 5 }, \"custom\"));\r\n\r\n\r\n\t\tthis._showModSliders = new Array<boolean>(ModSetting.mstMaxValue);\r\n\t\tthis._modSliderValues = new Array<number>(ModSetting.mstMaxValue);\r\n\r\n\t\tthis._phaseModGroup.appendChild(div({ class: \"operatorRow\", style: \"color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;\" },\r\n\t\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\t\tdiv({ style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorFrequency\") }, \"Freq:\"),\r\n\t\t\tdiv({ style: \"width: 4em; margin: 0;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorVolume\") }, \"Volume:\"),\r\n\t\t\tdiv({ style: \"width: 5em; margin-left: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorEnvelope\") }, \"Envelope:\"),\r\n\t\t));\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tconst operatorIndex: number = i;\r\n\t\t\tconst operatorNumber: HTMLDivElement = div({ style: \"margin-right: .1em; color: \" + ColorConfig.secondaryText + \";\" }, i + 1 + \".\");\r\n\t\t\tconst frequencySelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Frequency\" }), Config.operatorFrequencies.map(freq => freq.name));\r\n\t\t\tconst amplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue), false);\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\t\t\toperatorNumber,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\" }, frequencySelect),\r\n\t\t\t\tamplitudeSlider.container,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, envelopeSelect),\r\n\t\t\t);\r\n\t\t\tthis._phaseModGroup.appendChild(row);\r\n\t\t\tthis._operatorRows[i] = row;\r\n\t\t\tthis._operatorAmplitudeSliders[i] = amplitudeSlider;\r\n\t\t\tthis._operatorEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tthis._operatorFrequencySelects[i] = frequencySelect;\r\n\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorEnvelope(this._doc, operatorIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\t\t\tfrequencySelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, frequencySelect.selectedIndex));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._drumsetGroup.appendChild(\r\n\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetEnvelope\") }, \"Envelope:\"),\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetSpectrum\") }, \"Spectrum:\"),\r\n\t\t\t),\r\n\t\t);\r\n\t\tfor (let i: number = Config.drumCount - 1; i >= 0; i--) {\r\n\t\t\tconst drumIndex: number = i;\r\n\t\t\tconst spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\r\n\t\t\tspectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\t\tthis._drumsetSpectrumEditors[i] = spectrumEditor;\r\n\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Filter Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tthis._drumsetEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"selectRow\" },\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\" }, envelopeSelect),\r\n\t\t\t\tthis._drumsetSpectrumEditors[i].container,\r\n\t\t\t);\r\n\t\t\tthis._drumsetGroup.appendChild(row);\r\n\t\t}\r\n\r\n\t\tthis._modNameRows = [];\r\n\t\tthis._modChannelBoxes = [];\r\n\t\tthis._modInstrumentBoxes = [];\r\n\t\tthis._modSetRows = [];\r\n\t\tthis._modSetBoxes = [];\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\tlet modChannelBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor; text-overflow:ellipsis;\" });\r\n\t\t\tlet modInstrumentBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor;\" });\r\n\r\n\t\t\tlet modNameRow: HTMLDivElement = div({ class: \"operatorRow\", style: \"height: 1em; margin-bottom: 0.65em;\" },\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1em; max-width: 5.4em; min-width: 5.4em;\", id: \"modChannelText\" + mod, onclick: () => this._openPrompt(\"modChannel\") }, \"Ch:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modChannelBox),\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1.2em; margin-left: 0.8em;\", id: \"modInstrumentText\" + mod, onclick: () => this._openPrompt(\"modInstrument\") }, \"Ins:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modInstrumentBox),\r\n\t\t\t);\r\n\r\n\t\t\tlet modSetBox: HTMLSelectElement = select();\r\n\t\t\tlet modSetRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modSettingText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modSet\") }, \"Setting: \"), div({ class: \"selectContainer\" }, modSetBox));\r\n\r\n\t\t\tthis._modNameRows.push(modNameRow);\r\n\t\t\tthis._modChannelBoxes.push(modChannelBox);\r\n\t\t\tthis._modInstrumentBoxes.push(modInstrumentBox);\r\n\t\t\tthis._modSetRows.push(modSetRow);\r\n\t\t\tthis._modSetBoxes.push(modSetBox);\r\n\r\n\t\t\tthis._modulatorGroup.appendChild(div({ style: \"margin: 3px 0; font-weight: bold; margin-bottom: 0.7em; text-align: center; color: \" + ColorConfig.secondaryText + \"; background: \" + ColorConfig.uiWidgetBackground + \";\" }, \"Modulator \" + (mod + 1)));\r\n\t\t\tthis._modulatorGroup.appendChild(modNameRow);\r\n\t\t\tthis._modulatorGroup.appendChild(modSetRow);\r\n\r\n\t\t}\r\n\r\n\t\tthis._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\r\n\t\tthis._editMenu.addEventListener(\"change\", this._editMenuHandler);\r\n\t\tthis._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\r\n\t\tthis._customWavePresetDrop.addEventListener(\"change\", this._customWavePresetHandler);\r\n\t\tthis._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\r\n\t\tthis._scaleSelect.addEventListener(\"change\", this._whenSetScale);\r\n\t\tthis._keySelect.addEventListener(\"change\", this._whenSetKey);\r\n\t\tthis._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\r\n\t\t//this._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\r\n\t\t//this._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\r\n\t\tthis._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\r\n\t\tthis._instrumentSelect.addEventListener(\"change\", this._whenSetInstrument);\r\n\t\t//this._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\r\n\t\tthis._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\r\n\t\tthis._feedbackEnvelopeSelect.addEventListener(\"change\", this._whenSetFeedbackEnvelope);\r\n\t\tthis._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\r\n\t\tthis._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\r\n\t\tthis._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\r\n\t\tthis._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\r\n\t\tthis._filterEnvelopeSelect.addEventListener(\"change\", this._whenSetFilterEnvelope);\r\n\t\tthis._pulseEnvelopeSelect.addEventListener(\"change\", this._whenSetPulseEnvelope);\r\n\t\tthis._intervalSelect.addEventListener(\"change\", this._whenSetInterval);\r\n\t\tthis._chordSelect.addEventListener(\"change\", this._whenSetChord);\r\n\t\tthis._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\r\n\t\tthis._vibratoTypeSelect.addEventListener(\"change\", this._whenSetVibratoType);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\r\n\t\tthis._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\r\n\t\tthis._volumeSlider.input.addEventListener(\"input\", this._setVolumeSlider);\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this._refocusStageNotEditing);\r\n\t\tthis._trackArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\r\n\t\t// The song volume slider is styled slightly different than the class' default.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeSlider.container.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\tthis._volumeBarContainer.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeBarContainer.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\t// Also, any slider with a multiplicative effect instead of a replacement effect gets a different mod color, and a round slider.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\t}\r\n\r\n\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\tlet thisRef: SongEditor = this;\r\n\t\t\tthis._modChannelBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModChannel(mod); });\r\n\t\t\tthis._modInstrumentBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModInstrument(mod); });\r\n\t\t\tthis._modSetBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModSetting(mod); });\r\n\t\t}\r\n\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._harmonicsEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\r\n\t\tthis.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.mainLayer.addEventListener(\"keyup\", this._whenKeyUp);\r\n\t\tthis._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument.bind(this));\r\n\t\tthis._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument.bind(this));\r\n\r\n\t\tthis._instrumentVolumeSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeVolume(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].volume, Math.min(25.0, Math.max(-25.0, Math.round(+this._instrumentVolumeSliderInputBox.value))))) });\r\n\t\tthis._panSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePan(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pan, Math.min(100.0, Math.max(0.0, Math.round(+this._panSliderInputBox.value))))) });\r\n\t\tthis._detuneSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDetune(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].detune, Math.min(Config.detuneMax, Math.max(Config.detuneMin, Math.round(+this._detuneSliderInputBox.value))))) });\r\n\t\tthis._customWaveDraw.addEventListener(\"input\", () => { this._doc.record(new ChangeCustomWave(this._doc, this._customWaveDrawCanvas.newArray)) });\r\n\t\tthis._twoNoteArpBox.addEventListener(\"input\", () => { this._doc.record(new ChangeFastTwoNoteArp(this._doc, this._twoNoteArpBox.checked)) });\r\n\t\tthis._tieNoteTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeTieNoteTransition(this._doc, this._tieNoteTransitionBox.checked)) });\r\n\t\tthis._clicklessTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeClicklessTransition(this._doc, this._clicklessTransitionBox.checked)) });\r\n\r\n\t\tthis._promptContainer.addEventListener(\"click\", (event) => {\r\n\t\t\tif (event.target == this._promptContainer) {\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (isMobile) {\r\n\t\t\tconst autoPlayOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=autoPlay]\");\r\n\t\t\tautoPlayOption.disabled = true;\r\n\t\t\tautoPlayOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\r\n\t\t// Beepbox uses availHeight too, but I have a display that fails the check even when one of the other layouts would look better on it. -jummbus\r\n\t\tif (window.screen.availWidth < 700 /*|| window.screen.availHeight < 700*/) {\r\n\t\t\tconst fullScreenOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=fullScreen]\");\r\n\t\t\tfullScreenOption.disabled = true;\r\n\t\t\tfullScreenOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _toggleDropdownMenu(dropdown: number): void {\r\n\t\tlet target: HTMLButtonElement = this._vibratoDropdown;\r\n\t\tlet group: HTMLElement = this._vibratoDropdownGroup;\r\n\t\tswitch (dropdown) {\r\n\t\t\tcase 0:\r\n\t\t\t\ttarget = this._vibratoDropdown;\r\n\t\t\t\tthis._openVibratoDropdown = this._openVibratoDropdown ? false : true;\r\n\t\t\t\tgroup = this._vibratoDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\ttarget = this._panDropdown;\r\n\t\t\t\tthis._openPanDropdown = this._openPanDropdown ? false : true;\r\n\t\t\t\tgroup = this._panDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\ttarget = this._chordDropdown;\r\n\t\t\t\tthis._openChordDropdown = this._openChordDropdown ? false : true;\r\n\t\t\t\tgroup = this._chordDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\ttarget = this._transitionDropdown;\r\n\t\t\t\tthis._openTransitionDropdown = this._openTransitionDropdown ? false : true;\r\n\t\t\t\tgroup = this._transitionDropdownGroup;\r\n\t\t}\r\n\r\n\t\tif (target.textContent == \"▼\") {\r\n\t\t\ttarget.textContent = \"▲\";\r\n\t\t\tif (group != this._chordDropdownGroup) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t} // Only show arpeggio dropdown if chord arpeggiates\r\n\t\t\telse if (this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].chord == 2) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.textContent = \"▼\";\r\n\t\t\tgroup.style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _modSliderUpdate(): void {\r\n\r\n\t\tif (!this._doc.synth.playing) {\r\n\t\t\tthis._hasActiveModSliders = false;\r\n\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\tthis._showModSliders[setting] = false;\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\t\t\tconst anyModActive: boolean = this._doc.synth.isAnyModActive(this._doc.channel, instrument);\r\n\r\n\t\t\t// Check and update mod values on sliders\r\n\t\t\tif (anyModActive) {\r\n\r\n\t\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\r\n\t\t\t\tfunction updateModSlider(editor: SongEditor, slider: Slider, setting: ModSetting, channel: number, instrument: number): boolean {\r\n\t\t\t\t\tconst forSong: boolean = editor._doc.synth.song!.isSettingForSong(setting);\r\n\t\t\t\t\tif (editor._doc.synth.isModActive(setting, forSong, channel, instrument)) {\r\n\t\t\t\t\t\tlet currentVal: number = editor._doc.synth.song!.realToModValue(editor._doc.synth.getModValue(setting, forSong, channel, instrument, false), setting) / editor._doc.song.mstMaxVols.get(setting)!;\r\n\t\t\t\t\t\tif (currentVal != editor._modSliderValues[setting]) {\r\n\t\t\t\t\t\t\teditor._modSliderValues[setting] = currentVal;\r\n\t\t\t\t\t\t\tslider.container.style.setProperty(\"--mod-position\", (currentVal * 96.0 + 2.0) + \"%\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set mod sliders to present values\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\t// Set to last value\r\n\t\t\t\t\tthis._newShowModSliders[setting] = this._showModSliders[setting];\r\n\r\n\t\t\t\t\t// Check for newer value\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\t\t\t\t\tif (slider != null) {\r\n\t\t\t\t\t\tthis._newShowModSliders[setting] = updateModSlider(this, slider, setting, this._doc.channel, instrument);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._hasActiveModSliders) {\r\n\t\t\t\t// Zero out show-mod-slider settings (since none are active) to kill active mod slider flag\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Class or unclass mod sliders based on present status\r\n\t\t\tif (anyModActive || this._hasActiveModSliders) {\r\n\r\n\t\t\t\tlet anySliderActive: boolean = false;\r\n\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tif (this._newShowModSliders[setting] != this._showModSliders[setting]) {\r\n\t\t\t\t\t\tthis._showModSliders[setting] = this._newShowModSliders[setting];\r\n\t\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\t\t\t\tslider.container.classList.add(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this._newShowModSliders[setting] == true)\r\n\t\t\t\t\t\tanySliderActive = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._hasActiveModSliders = anySliderActive;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _getSliderForModSetting(setting: ModSetting): Slider | null {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\treturn this._panSlider;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\treturn this._detuneSlider;\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[0];\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[1];\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[2];\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[3];\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\treturn this._feedbackAmplitudeSlider;\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\treturn this._pulseWidthSlider;\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\treturn this._filterResonanceSlider;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\treturn this._filterCutoffSlider;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\treturn this._instrumentVolumeSlider;\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\treturn this._vibratoDepthSlider;\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\treturn this._vibratoSpeedSlider;\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\treturn this._vibratoDelaySlider;\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\treturn this._arpeggioSpeedSlider;\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\treturn this._panDelaySlider;\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\treturn this._tempoSlider;\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\treturn this._reverbSlider;\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\treturn this._volumeSlider;\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic changeInstrument(index: number): void {\r\n\t\tthis._instrumentSelect.selectedIndex = index;\r\n\t\tthis._whenSetInstrument();\r\n\t}\r\n\r\n\tprivate _openPrompt(promptName: string): void {\r\n\t\tthis._doc.openPrompt(promptName);\r\n\t\tthis._setPrompt(promptName);\r\n\t}\r\n\r\n\tprivate _setPrompt(promptName: string | null): void {\r\n\t\tif (this._currentPromptName == promptName) return;\r\n\t\tthis._currentPromptName = promptName;\r\n\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\tthis._play();\r\n\t\t\t}\r\n\t\t\tthis._wasPlaying = false;\r\n\t\t\tthis._promptContainer.style.display = \"none\";\r\n\t\t\tthis._promptContainer.removeChild(this.prompt.container);\r\n\t\t\tthis.prompt.cleanUp();\r\n\t\t\tthis.prompt = null;\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tif (promptName) {\r\n\t\t\tswitch (promptName) {\r\n\t\t\t\tcase \"export\":\r\n\t\t\t\t\tthis.prompt = new ExportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"import\":\r\n\t\t\t\t\tthis.prompt = new ImportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"songRecovery\":\r\n\t\t\t\t\tthis.prompt = new SongRecoveryPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"songSettings\":\r\n\t\t\t\t\tthis.prompt = new SongSettingsPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// case \"barCount\":\r\n\t\t\t\t// \tthis.prompt = new SongDurationPrompt(this._doc);\r\n\t\t\t\t// \tbreak;\r\n\t\t\t\t// case \"beatsPerBar\":\r\n\t\t\t\t// \tthis.prompt = new BeatsPerBarPrompt(this._doc);\r\n\t\t\t\t// \tbreak;\r\n\t\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\t\tthis.prompt = new MoveNotesSidewaysPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"channelSettings\":\r\n\t\t\t\t\tthis.prompt = new ChannelSettingsPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"limiterSettings\":\r\n\t\t\t\t\tthis.prompt = new LimiterPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"customChipSettings\":\r\n\t\t\t\t\tthis.prompt = new CustomChipPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"theme\":\r\n\t\t\t\t\tthis.prompt = new ThemePrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"layout\":\r\n\t\t\t\t\tthis.prompt = new LayoutPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.prompt = new TipPrompt(this._doc, promptName);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.prompt) {\r\n\t\t\t\tif (!(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\t\tthis._wasPlaying = this._doc.synth.playing;\r\n\t\t\t\t\tthis._pause();\r\n\t\t\t\t}\r\n\t\t\t\tthis._promptContainer.style.display = \"\";\r\n\t\t\t\tthis._promptContainer.appendChild(this.prompt.container);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic refocusStage = (): void => {\r\n\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\t// Refocus stage if a sub-element that needs focus isn't being edited.\r\n\tprivate _refocusStageNotEditing = (): void => {\r\n\t\tif (!this._patternEditor.editingModLabel)\r\n\t\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\tpublic changeBarScrollPos(offset: number) {\r\n\t\tthis._barScrollBar.changePos(offset);\r\n\t}\r\n\r\n\tpublic whenUpdated = (): void => {\r\n\t\tthis._muteEditor.container.style.display = this._doc.enableChannelMuting ? \"\" : \"none\";\r\n\t\tconst trackBounds = this._trackContainer.getBoundingClientRect();\r\n\t\tthis._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left) / this._doc.getBarWidth());\r\n\t\tthis._barScrollBar.render();\r\n\t\tthis._muteEditor.render();\r\n\t\tthis._trackEditor.render();\r\n\r\n\t\tif (document.activeElement != this._patternEditor.modDragValueLabel && this._patternEditor.editingModLabel) {\r\n\t\t\tthis._patternEditor.stopEditingModLabel(false);\r\n\t\t}\r\n\r\n\t\tthis._piano.container.style.display = this._doc.showLetters ? \"\" : \"none\";\r\n\t\tthis._octaveScrollBar.container.style.display = this._doc.showScrollBar ? \"\" : \"none\";\r\n\t\tthis._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\r\n\t\tthis._volumeBarBox.style.display = this._doc.displayVolumeBar ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.getFullScreen()) {\r\n\t\t\tconst semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.windowPitchCount;\r\n\t\t\tconst targetBeatWidth: number = semitoneHeight * this._doc.song.edo * 5/12;\r\n\t\t\tconst minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\r\n\t\t\tconst maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\r\n\t\t\tconst beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\r\n\t\t\tconst patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\r\n\r\n\t\t\tthis._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditor.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorPrev.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorNext.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"\";\r\n\t\t\tthis._patternEditorPrev.render();\r\n\t\t\tthis._patternEditorNext.render();\r\n\t\t} else {\r\n\t\t\tthis._patternEditor.container.style.width = \"\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"none\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"none\";\r\n\t\t}\r\n\t\tthis._patternEditor.render();\r\n\r\n\t\tconst optionCommands: ReadonlyArray<string> = [\r\n\t\t\t(this._doc.autoPlay ? \"✓ \" : \"\") + \"Auto Play On Load\",\r\n\t\t\t(this._doc.autoFollow ? \"✓ \" : \"\") + \"Auto Follow Track\",\r\n\t\t\t(this._doc.enableNotePreview ? \"✓ \" : \"\") + \"Preview Added Notes\",\r\n\t\t\t(this._doc.showLetters ? \"✓ \" : \"\") + \"Show Piano Keys\",\r\n\t\t\t(this._doc.showFifth ? \"✓ \" : \"\") + 'Highlight \"Fifth\" Notes',\r\n\t\t\t(this._doc.showChannels ? \"✓ \" : \"\") + \"Show All Channels\",\r\n\t\t\t(this._doc.showScrollBar ? \"✓ \" : \"\") + \"Octave Scroll Bar\",\r\n\t\t\t(this._doc.alwaysFineNoteVol ? \"✓ \" : \"\") + \"Always Fine Note Vol.\",\r\n\t\t\t(this._doc.enableChannelMuting ? \"✓ \" : \"\") + \"Enable Channel Muting\",\r\n\t\t\t(this._doc.displayBrowserUrl ? \"✓ \" : \"\") + \"Display Song Data in URL\",\r\n\t\t\t(this._doc.displayVolumeBar ? \"✓ \" : \"\") + \"Show Playback Volume\",\r\n\t\t\t\"Set Layout...\",\r\n\t\t\t\"Set Theme...\",\r\n\t\t\t//(this._doc.alwaysShowSettings ? \"✓ \" : \"\") + \"Customize All Instruments\",\r\n\t\t]\r\n\t\tfor (let i: number = 0; i < optionCommands.length; i++) {\r\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.children[i + 1];\r\n\t\t\tif (option.innerText != optionCommands[i]) option.innerText = optionCommands[i];\r\n\t\t}\r\n\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\tconst instrumentIndex: number = this._doc.getCurrentInstrument();\r\n\t\tconst instrument: Instrument = channel.instruments[instrumentIndex];\r\n\t\tconst wasActive: boolean = this.mainLayer.contains(document.activeElement);\r\n\t\tconst activeElement: Element | null = document.activeElement;\r\n\r\n\t\tsetSelectedValue(this._scaleSelect, this._doc.song.scale);\r\n\t\tthis._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\r\n\t\tsetSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\r\n\t\tthis._tempoSlider.updateValue(Math.max(0, Math.round(this._doc.song.tempo)));\r\n\t\tthis._tempoStepper.value = Math.round(this._doc.song.tempo).toString();\r\n\t\tthis._songTitleInputBox.updateValue(this._doc.song.title);\r\n\t\tthis._reverbSlider.updateValue(this._doc.song.reverb);\r\n\r\n\t\tsetSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\r\n\r\n\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"\";\r\n\t\t\tthis._panSliderRow.style.display = \"\";\r\n\t\t\tthis._panDropdownGroup.style.display = (this._openPanDropdown ? \"\" : \"none\");\r\n\t\t\tthis._detuneSliderRow.style.display = \"\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"\");\r\n\t\t\tthis._instrumentSettingsGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSelectRow, this._instrumentSettingsGroup.firstChild);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSettingsTextRow, this._instrumentSettingsGroup.firstChild);\r\n\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Instrument Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"none\";\r\n\r\n\t\t\t// Check if current viewed pattern on channel is used anywhere\r\n\t\t\t// + Check if current instrument on channel is used anywhere\r\n\t\t\tvar instrumentUsed = false;\r\n\t\t\tvar patternUsed = false;\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"\";\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().show();\r\n\r\n\t\t\t\tsetSelectedValue(this._drumPresetSelect, instrument.preset);\r\n\t\t\t} else {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().show();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\r\n\t\t\t\tsetSelectedValue(this._pitchedPresetSelect, instrument.preset);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._doc.alwaysShowSettings && instrument.preset != instrument.type) {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\t} else {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"none\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"\";\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipNoiseSelect, instrument.chipNoise);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"\";\r\n\t\t\t\t\tthis._spectrumEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"\";\r\n\t\t\t\t\tthis._harmonicsEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\t\tsetSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\r\n\t\t\t\t\t\tthis._drumsetSpectrumEditors[i].render();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = (this._openTransitionDropdown ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = (this._openChordDropdown && instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordDropdown.style.display = (instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipWaveSelect, instrument.chipWave);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\r\n\t\t\t\t\tsetSelectedValue(this._pulseEnvelopeSelect, instrument.pulseEnvelope);\r\n\t\t\t\t\tthis._pulseWidthSlider.updateValue(instrument.pulseWidth);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tsetSelectedValue(this._algorithmSelect, instrument.algorithm);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\r\n\t\t\t\t\tthis._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackEnvelopeSelect, instrument.feedbackEnvelope);\r\n\t\t\t\t\tthis._feedbackEnvelopeSelect.parentElement!.style.color = (instrument.feedbackAmplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tconst isCarrier: boolean = (i < Config.algorithms[instrument.algorithm].carrierCount);\r\n\t\t\t\t\t\tthis._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorFrequencySelects[i], instrument.operators[i].frequency);\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorEnvelopeSelects[i], instrument.operators[i].envelope);\r\n\t\t\t\t\t\tconst operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\r\n\t\t\t\t\t\tthis._operatorFrequencySelects[i].title = operatorName + \" Frequency\";\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].title = operatorName + \" Envelope\";\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].parentElement!.style.color = (instrument.operators[i].amplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"\";\r\n\t\t\t\t\t// Temporarily hide interval select, until I get them working for these instrument types!\r\n\t\t\t\t\tif (instrument.type == InstrumentType.spectrum || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = (this._openVibratoDropdown ? \"\" : \"none\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst hidden: boolean = !Config.instrumentTypeHasSpecialInterval[instrument.type] ? Config.chords[chordIndex].isCustomInterval : false;\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (hidden) {\r\n\t\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\toption.removeAttribute(\"hidden\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\t\tthis._panSliderInputBox.value = instrument.pan + \"\";\r\n\t\t\tthis._detuneSliderInputBox.value = instrument.detune + \"\";\r\n\t\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\t\tthis._instrumentVolumeSliderInputBox.value = \"\" + (instrument.volume);\r\n\t\t\tthis._vibratoDepthSlider.updateValue(Math.round(instrument.vibratoDepth * 25));\r\n\t\t\tthis._vibratoDelaySlider.updateValue(instrument.vibratoDelay);\r\n\t\t\tthis._vibratoSpeedSlider.updateValue(instrument.vibratoSpeed);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tthis._arpeggioSpeedSlider.updateValue(instrument.arpeggioSpeed);\r\n\t\t\tthis._panDelaySlider.updateValue(instrument.panDelay);\r\n\t\t\tthis._vibratoDelaySlider.input.title = \"\" + instrument.vibratoDelay;\r\n\t\t\tthis._vibratoDepthSlider.input.title = \"\" + instrument.vibratoDepth;\r\n\t\t\tthis._vibratoSpeedSlider.input.title = \"\" + instrument.vibratoSpeed;\r\n\t\t\tthis._panDelaySlider.input.title = \"\" + instrument.panDelay;\r\n\t\t\tthis._arpeggioSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\r\n\r\n\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tthis._customWaveDrawCanvas.redrawCanvas();\r\n\r\n\t\t\t\tif (this.prompt instanceof CustomChipPrompt) {\r\n\t\t\t\t\tthis.prompt.customChipCanvas.render();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// Options for mod channel\r\n\t\telse {\r\n\t\t\tvar patternUsed = false;\r\n\t\t\tvar instrumentUsed = false;\r\n\r\n\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\t\t\tthis._modulatorGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSelectRow, this._modulatorGroup.firstChild);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSettingsTextRow, this._modulatorGroup.firstChild);\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Modulator Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\tthis._detuneSliderRow.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"\";\r\n\t\t\tthis._modulatorGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? this._doc.song.pitchChannelCount : 0);\r\n\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Boundary checking\r\n\t\t\t\tif (modInstrument >= this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\tmodInstrument = 0;\r\n\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator channels (make sure it has the right number).\r\n\t\t\t\tif (this._doc.recalcChannelNames || this._modChannelBoxes[mod].children.length != 2 + this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\twhile (this._modChannelBoxes[mod].firstChild) this._modChannelBoxes[mod].remove(0);\r\n\t\t\t\t\tconst channelList: string[] = [];\r\n\t\t\t\t\tchannelList.push(\"none\");\r\n\t\t\t\t\tchannelList.push(\"song\");\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"pitch \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.noiseChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i + this._doc.song.pitchChannelCount].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"noise \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i + this._doc.song.pitchChannelCount].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modChannelBoxes[mod], channelList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on channel info.\r\n\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msNone) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 0; // none\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 1; // song\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2; // Offset to get to first pitch channel\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2 + this._doc.song.pitchChannelCount; // Offset to get to first noise channel\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator instruments (make sure it has the right number).\r\n\t\t\t\tif (this._modInstrumentBoxes[mod].children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\twhile (this._modInstrumentBoxes[mod].firstChild) this._modInstrumentBoxes[mod].remove(0);\r\n\t\t\t\t\tconst instrumentList: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modInstrumentBoxes[mod], instrumentList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on instrument info.\r\n\t\t\t\tthis._modInstrumentBoxes[mod].selectedIndex = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Build options for modulator settings (based on channel settings)\r\n\r\n\t\t\t\tif (modStatus != ModStatus.msNone) {\r\n\r\n\t\t\t\t\tlet tgtInstrument: Instrument = this._doc.song.channels[modChannel].instruments[modInstrument];\r\n\r\n\t\t\t\t\twhile (this._modSetBoxes[mod].firstChild) this._modSetBoxes[mod].remove(0);\r\n\t\t\t\t\tconst settingList: string[] = [];\r\n\t\t\t\t\tsettingList.push(\"none\");\r\n\r\n\t\t\t\t\t// Populate mod setting options for the song scope.\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 1) {\r\n\t\t\t\t\t\tsettingList.push(\"song volume\");\r\n\t\t\t\t\t\tsettingList.push(\"tempo\");\r\n\t\t\t\t\t\tsettingList.push(\"reverb\");\r\n\t\t\t\t\t\tsettingList.push(\"next bar\");\r\n\t\t\t\t\t\tsettingList.push(\"song detune\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Populate mod setting options for instrument scope.\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\tsettingList.push(\"volume\");\r\n\t\t\t\t\t\tsettingList.push(\"pan\");\r\n\t\t\t\t\t\tsettingList.push(\"pan delay\");\r\n\t\t\t\t\t\tsettingList.push(\"filter cut\");\r\n\t\t\t\t\t\tsettingList.push(\"filter peak\");\r\n\t\t\t\t\t\tsettingList.push(\"detune\");\r\n\t\t\t\t\t\tsettingList.push(\"arpeggio speed\");\r\n\t\t\t\t\t\tsettingList.push(\"reset arpeggio\");\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.chip || tgtInstrument.type == InstrumentType.fm || tgtInstrument.type == InstrumentType.harmonics || tgtInstrument.type == InstrumentType.pwm || tgtInstrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato depth\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato speed\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato delay\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"pulse width\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (tgtInstrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 1\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 2\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 3\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 4\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm feedback\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuildOptions(this._modSetBoxes[mod], settingList);\r\n\r\n\t\t\t\t\tlet needReset: boolean = false;\r\n\t\t\t\t\tlet setIndex: number = 0;\r\n\r\n\t\t\t\t\t// Set selected index based on instrument info. Based on how the list is built.\r\n\t\t\t\t\t//Also has to check for a change in channel setting. Sigh...maybe it could be done better!\r\n\t\t\t\t\tswitch (instrument.modSettings[mod]) {\r\n\t\t\t\t\t\t// For song\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// For instruments\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 6;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 7;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 8;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 9;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 10;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 11;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.pwm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 13;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 14;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 15;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 16;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Catch instances where invalid set forced setting to \"none\"\r\n\t\t\t\t\tif (needReset) {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = setIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (instrument.modSettings[mod] != ModSetting.mstNone) {\r\n\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t//Hide instrument select if channel is \"none\" or \"song\"\r\n\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex <= 1) {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = \"Channel:\";\r\n\r\n\t\t\t\t\t//Hide setting select if channel is \"none\"\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 0) {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = (this._doc.song.instrumentsPerChannel > 1) ? \"Ch:\" : \"Channel:\";\r\n\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._doc.recalcChannelNames = false;\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSelectRow.style.display = \"none\";\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"none\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"none\");\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\t// Force piano to re-show, if channel is modulator\r\n\t\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\tthis._piano.forceRender();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._instrumentSelectRow.style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\tthis._instrumentSelectRow.style.visibility = (pattern == null) ? \"hidden\" : \"\";\r\n\t\tif (this._instrumentSelect.children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\twhile (this._instrumentSelect.firstChild) this._instrumentSelect.removeChild(this._instrumentSelect.firstChild);\r\n\t\t\tconst instrumentList: number[] = [];\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t}\r\n\t\t\tbuildOptions(this._instrumentSelect, instrumentList);\r\n\t\t}\r\n\r\n\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\tthis._panSlider.updateValue(instrument.pan);\r\n\t\tthis._detuneSlider.updateValue(instrument.detune);\r\n\t\tthis._twoNoteArpBox.checked = instrument.fastTwoNoteArp ? true : false;\r\n\t\tthis._tieNoteTransitionBox.checked = instrument.tieNoteTransition ? true : false;\r\n\t\tthis._clicklessTransitionBox.checked = instrument.clicklessTransition ? true : false;\r\n\t\tsetSelectedValue(this._instrumentSelect, instrumentIndex);\r\n\r\n\t\tthis._volumeSlider.updateValue(this._doc.volume);\r\n\r\n\t\t// If an interface element was selected, but becomes invisible (e.g. an instrument\r\n\t\t// select menu) just select the editor container so keyboard commands still work.\r\n\t\tif (wasActive && activeElement != null && activeElement.clientWidth == 0) {\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tthis._setPrompt(this._doc.prompt);\r\n\r\n\t\tif (this._doc.autoFollow && !this._doc.synth.playing) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyUp = (event: KeyboardEvent): void => {\r\n\t\tthis._muteEditor.onKeyUp(event);\r\n\t\tif (event.keyCode == 17) { // Ctrl\r\n\t\t\tthis._patternEditor.controlMode = false;\r\n\t\t}\r\n\t\telse if (event.keyCode == 16) { // Shift\r\n\t\t\tthis._patternEditor.shiftMode = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\r\n\t\t// When the number input is in focus, allow some keyboard events to\r\n\t\t// edit the input without accidentally editing the song otherwise.\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\tcase 13: // enter/return\r\n\t\t\tcase 38: // up\r\n\t\t\tcase 40: // down\r\n\t\t\tcase 37: // left\r\n\t\t\tcase 39: // right\r\n\t\t\tcase 48: // 0\r\n\t\t\tcase 49: // 1\r\n\t\t\tcase 50: // 2\r\n\t\t\tcase 51: // 3\r\n\t\t\tcase 52: // 4\r\n\t\t\tcase 53: // 5\r\n\t\t\tcase 54: // 6\r\n\t\t\tcase 55: // 7\r\n\t\t\tcase 56: // 8\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this.prompt instanceof CustomChipPrompt || this.prompt instanceof LimiterPrompt) {\r\n\t\t\t\tthis.prompt.whenKeyPressed(event);\r\n\t\t\t}\r\n\t\t\tif (event.keyCode == 27) { // ESC key\r\n\t\t\t\t// close prompt.\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing song title, channel name, or mod label\r\n\t\tif (document.activeElement == this._songTitleInputBox.input || this._patternEditor.editingModLabel || document.activeElement == this._muteEditor._channelNameInput.input) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t\tthis._patternEditor.stopEditingModLabel(event.keyCode == 27);\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing volume/pan rows\r\n\t\tif (document.activeElement == this._panSliderInputBox || document.activeElement == this._detuneSliderInputBox || document.activeElement == this._instrumentVolumeSliderInputBox) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//this._trackEditor.onKeyPressed(event);\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // ESC key\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 16: // Shift\r\n\t\t\t\tthis._patternEditor.shiftMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 17: // Ctrl\r\n\t\t\t\tthis._patternEditor.controlMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32: // space\r\n\t\t\t\t// Jump to mouse\r\n\t\t\t\tif (event.ctrlKey || event.shiftKey) {\r\n\t\t\t\t\tif (!this._doc.synth.playing) {\r\n\t\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._trackEditor.movePlayheadToMouse();\r\n\t\t\t\t\tthis._patternEditor.movePlayheadToMouse();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 90: // z\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.redo();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.undo();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 89: // y\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 67: // c\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t//this._trackEditor._selectionUpdated();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter/return\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 65: // a\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 68: // d\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 70: // f\r\n\t\t\t\tthis._doc.synth.firstBar();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 72: // h\r\n\t\t\t\tthis._doc.synth.jumpToEditingBar(this._doc.bar);\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 76: // l\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\t}\r\n\t\t\t\t// else {\r\n\t\t\t\t\t// this._openPrompt(\"barCount\");\r\n\t\t\t\t// }\r\n\t\t\t\tbreak;\r\n\t\t\tcase 77: // m\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tthis._doc.selection.muteChannels(event.shiftKey);\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 78: // n\r\n\t\t\t\t// Find lowest-index unused pattern for current channel\r\n\t\t\t\t// Shift+n - lowest-index completely empty pattern\r\n\r\n\t\t\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\t\t\tif (event.shiftKey || event.ctrlKey) {\r\n\t\t\t\t\tlet nextEmpty: number = 0;\r\n\t\t\t\t\twhile (nextEmpty < this._doc.song.patternsPerChannel && this._doc.song.channels[this._doc.channel].patterns[nextEmpty].notes.length > 0)\r\n\t\t\t\t\t\tnextEmpty++;\r\n\r\n\t\t\t\t\tnextEmpty++; // The next empty pattern is actually the one after the found one\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextEmpty <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextEmpty > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest have something in them.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextEmpty));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextEmpty, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet nextUnused: number = 1;\r\n\t\t\t\t\twhile (this._doc.song.channels[this._doc.channel].bars.indexOf(nextUnused) != -1\r\n\t\t\t\t\t\t&& nextUnused <= this._doc.song.patternsPerChannel)\r\n\t\t\t\t\t\tnextUnused++;\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextUnused <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextUnused > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest are used.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextUnused));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextUnused, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(group);\r\n\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 81: // q\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 83: // s\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\t\tthis._doc.selection.muteChannels(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._doc.selection.soloChannels();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 86: // v\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 87: // w\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 73: // i\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\t\tconst instrumentObject: any = instrument.toJsonObject();\r\n\t\t\t\t\tdelete instrumentObject[\"volume\"];\r\n\t\t\t\t\tdelete instrumentObject[\"pan\"];\r\n\t\t\t\t\tdelete instrumentObject[\"preset\"];\r\n\t\t\t\t\tthis._copyTextToClipboard(JSON.stringify(instrumentObject));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 82: // r\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._randomPreset();\r\n\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 79: // o\r\n\t\t\t\tthis._openPrompt(\"songSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 219: // left brace\r\n\t\t\t\tthis._doc.synth.prevBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 221: // right brace\r\n\t\t\t\tthis._doc.synth.nextBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 189: // -\r\n\t\t\tcase 173: // Firefox -\r\n\t\t\t\tthis._doc.selection.transpose(false, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 187: // +\r\n\t\t\tcase 61: // Firefox +\r\n\t\t\tcase 171: // Some users have this as +? Hmm.\r\n\t\t\t\tthis._doc.selection.transpose(true, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38: // up\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel up, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == 0 || this._doc.channel == this._doc.song.pitchChannelCount || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel - 1, this._doc.channel), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40: // down\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel down, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == this._doc.song.pitchChannelCount - 1 || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._doc.channel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel, this._doc.channel + 1), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 37: // left\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39: // right\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 46: // Delete\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 48: // 0\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 49: // 1\r\n\t\t\t\tthis._doc.selection.nextDigit(\"1\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 50: // 2\r\n\t\t\t\tthis._doc.selection.nextDigit(\"2\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 51: // 3\r\n\t\t\t\tthis._doc.selection.nextDigit(\"3\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 52: // 4\r\n\t\t\t\tthis._doc.selection.nextDigit(\"4\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 53: // 5\r\n\t\t\t\tthis._doc.selection.nextDigit(\"5\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 54: // 6\r\n\t\t\t\tthis._doc.selection.nextDigit(\"6\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 55: // 7\r\n\t\t\t\tthis._doc.selection.nextDigit(\"7\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 56: // 8\r\n\t\t\t\tthis._doc.selection.nextDigit(\"8\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tthis._doc.selection.nextDigit(\"9\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.instrumentDigits = \"\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _copyTextToClipboard(text: string): void {\r\n\t\t// Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n\t\tlet nav: any;\r\n\t\tnav = navigator;\r\n\r\n\t\tif (nav.clipboard && nav.clipboard.writeText) {\r\n\t\t\tnav.clipboard.writeText(text).catch(() => {\r\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", text);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n\t\ttextField.innerText = text;\r\n\t\tdocument.body.appendChild(textField);\r\n\t\ttextField.select();\r\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\r\n\t\ttextField.remove();\r\n\t\tthis.refocusStage();\r\n\t\tif (!succeeded) window.prompt(\"Copy this:\", text);\r\n\t}\r\n\r\n\tprivate _whenPrevBarPressed = (): void => {\r\n\t\tthis._doc.synth.prevBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _whenNextBarPressed = (): void => {\r\n\t\tthis._doc.synth.nextBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._pause();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._play();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _play(): void {\r\n\t\tthis._doc.synth.play();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _pause(): void {\r\n\t\tthis._doc.synth.pause();\r\n\t\tthis._doc.synth.resetEffects();\r\n\t\tif (this._doc.autoFollow) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t\tthis._doc.synth.snapToBar();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.clearInterval(this._modSliderHandle);\r\n\t\twindow.clearInterval(this._volumeHandle);\r\n\t\twindow.clearInterval(this._barScrollbarHandle);\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t\tthis.outVolumeHistoricCap = 0;\r\n\t}\r\n\r\n\tpublic _animate = (): void => {\r\n\t\t// Need to update mods once more to clear the slider display\r\n\t\tthis._modSliderUpdate();\r\n\t\t// Same for volume display\r\n\t\tif (this._doc.displayVolumeBar) {\r\n\t\t\tthis._volumeUpdate();\r\n\t\t}\r\n\t\t// ...and barscrollbar playhead\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _volumeUpdate = (): void => {\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.outVolumeCap != this.lastOutVolumeCap) {\r\n\t\t\tthis.lastOutVolumeCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis._animateVolume(this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animateVolume(outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, outVolumeCap * 144));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\r\n\t}\r\n\r\n\tprivate _setVolumeSlider = (): void => {\r\n\t\tthis._doc.setVolume(Number(this._volumeSlider.input.value));\r\n\t}\r\n\r\n\tprivate _copyInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = instrument.toJsonObject();\r\n\t\tinstrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\twindow.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _pasteInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\r\n\t\tif (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\r\n\t\t}\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _randomPreset(): void {\r\n\t\tconst isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tthis._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\r\n\t}\r\n\r\n\tprivate _randomGenerated(): void {\r\n\t\tthis._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\r\n\t}\r\n\r\n\r\n\tprivate _whenSetTempo = (): void => {\r\n\t\tthis._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\r\n\t}\r\n\r\n\tprivate _whenSetScale = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._scaleSelect.value)) {\r\n\t\t\tswitch (this._scaleSelect.value) {\r\n\t\t\t\tcase \"forceScale\":\r\n\t\t\t\t\tthis._doc.selection.forceScale();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetKey = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._keySelect.value)) {\r\n\t\t\tswitch (this._keySelect.value) {\r\n\t\t\t\tcase \"detectKey\":\r\n\t\t\t\t\tthis._doc.record(new ChangeDetectKey(this._doc));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetRhythm = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._rhythmSelect.value)) {\r\n\t\t\tswitch (this._rhythmSelect.value) {\r\n\t\t\t\tcase \"forceRhythm\":\r\n\t\t\t\t\tthis._doc.selection.forceRhythm();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _refocus = (): void => {\r\n\t\t// Waits a bit because select2 \"steals\" back focus even after the close event fires.\r\n\t\tvar selfRef = this;\r\n\t\tsetTimeout(function () { selfRef.mainLayer.focus(); }, 20);\r\n\t}\r\n\r\n\tpublic _whenSetPitchedPreset = (): void => {\r\n\t\tthis._setPreset($('#pitchPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tpublic _whenSetDrumPreset = (): void => {\r\n\t\tthis._setPreset($('#drumPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tprivate _setPreset(preset: string): void {\r\n\t\tif (isNaN(<number><unknown>preset)) {\r\n\t\t\tswitch (preset) {\r\n\t\t\t\tcase \"copyInstrument\":\r\n\t\t\t\t\tthis._copyInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pasteInstrument\":\r\n\t\t\t\t\tthis._pasteInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomPreset\":\r\n\t\t\t\t\tthis._randomPreset();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomGenerated\":\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangePreset(this._doc, parseInt(preset)));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackType = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackEnvelope(this._doc, this._feedbackEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetAlgorithm = (): void => {\r\n\t\tthis._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInstrument = (): void => {\r\n\t\tthis._doc.selection.setInstrument(this._instrumentSelect.selectedIndex);\r\n\r\n\t\t// Force piano to re-show, if channel is modulator\r\n\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetModChannel = (mod: number): void => {\r\n\t\tthis._doc.selection.setModChannel(mod, this._modChannelBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModInstrument = (mod: number): void => {\r\n\t\tthis._doc.selection.setModInstrument(mod, this._modInstrumentBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModSetting = (mod: number): void => {\r\n\t\t//let prevSetting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod];\r\n\r\n\t\tthis._doc.selection.setModSetting(mod, this._modSetBoxes[mod].children[this._modSetBoxes[mod].selectedIndex].textContent as string);\r\n\r\n\t\t/* Currently cut this as it would have to scale all patterns to make any sense, and I'm leery about the loss of information\r\n\t\t * inherent in scaling to and from a smaller note resolution.\r\n\t\t// Cause pattern editor to scale note heights if necessary. Relies on above call to change this setting, of course.\r\n\t\tthis._patternEditor.scaleModNotes(mod, prevSetting, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod]);\r\n\t\t*/\r\n\r\n\t\t// Force piano to re-show if channel is modulator, as text shown on it needs to update\r\n\t\tthis._piano.forceRender();\r\n\r\n\t}\r\n\r\n\t//private _whenCustomizePressed = (): void => {\r\n\t//\tthis._doc.record(new ChangeCustomizeInstrument(this._doc));\r\n\t//}\r\n\r\n\tprivate _whenSetChipWave = (): void => {\r\n\t\tthis._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetNoiseWave = (): void => {\r\n\t\tthis._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFilterEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFilterEnvelope(this._doc, this._filterEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetPulseEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangePulseEnvelope(this._doc, this._pulseEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetTransition = (): void => {\r\n\t\tthis._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetEffects = (): void => {\r\n\t\tthis._doc.record(new ChangeEffects(this._doc, this._effectsSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibrato = (): void => {\r\n\t\tthis._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibratoType = (): void => {\r\n\t\tthis._doc.record(new ChangeVibratoType(this._doc, this._vibratoTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInterval = (): void => {\r\n\t\tthis._doc.record(new ChangeInterval(this._doc, this._intervalSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetChord = (): void => {\r\n\t\tthis._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _fileMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._fileMenu.value) {\r\n\t\t\tcase \"new\":\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, \"\"), false, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"export\":\r\n\t\t\t\tthis._openPrompt(\"export\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"import\":\r\n\t\t\t\tthis._openPrompt(\"import\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyUrl\":\r\n\t\t\t\tthis._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shareUrl\":\r\n\t\t\t\t(<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shortenUrl\":\r\n\t\t\t\twindow.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"viewPlayer\":\r\n\t\t\t\tlocation.href = \"player/#song=\" + this._doc.song.toBase64String();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyEmbed\":\r\n\t\t\t\tthis._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"songRecovery\":\r\n\t\t\t\tthis._openPrompt(\"songRecovery\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._fileMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _editMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._editMenu.value) {\r\n\t\t\tcase \"undo\":\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"redo\":\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copy\":\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"insertBars\":\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"deleteBars\":\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNotes\":\r\n\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNumbers\":\r\n\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeUp\":\r\n\t\t\t\tthis._doc.selection.transpose(true, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeDown\":\r\n\t\t\t\tthis._doc.selection.transpose(false, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectAll\":\r\n\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectChannel\":\r\n\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"duplicatePatterns\":\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"songSettings\":\r\n\t\t\t\tthis._openPrompt(\"songSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\t// case \"barCount\":\r\n\t\t\t// \tthis._openPrompt(\"barCount\");\r\n\t\t\t// \tbreak;\r\n\t\t\t// case \"beatsPerBar\":\r\n\t\t\t// \tthis._openPrompt(\"beatsPerBar\");\r\n\t\t\t// \tbreak;\r\n\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"channelSettings\":\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"limiterSettings\":\r\n\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._editMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _optionsMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._optionsMenu.value) {\r\n\t\t\tcase \"autoPlay\":\r\n\t\t\t\tthis._doc.autoPlay = !this._doc.autoPlay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"autoFollow\":\r\n\t\t\t\tthis._doc.autoFollow = !this._doc.autoFollow;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableNotePreview\":\r\n\t\t\t\tthis._doc.enableNotePreview = !this._doc.enableNotePreview;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showLetters\":\r\n\t\t\t\tthis._doc.showLetters = !this._doc.showLetters;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showFifth\":\r\n\t\t\t\tthis._doc.showFifth = !this._doc.showFifth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showChannels\":\r\n\t\t\t\tthis._doc.showChannels = !this._doc.showChannels;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showScrollBar\":\r\n\t\t\t\tthis._doc.showScrollBar = !this._doc.showScrollBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"alwaysFineNoteVol\":\r\n\t\t\t\tthis._doc.alwaysFineNoteVol = !this._doc.alwaysFineNoteVol;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableChannelMuting\":\r\n\t\t\t\tthis._doc.enableChannelMuting = !this._doc.enableChannelMuting;\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayBrowserUrl\":\r\n\t\t\t\tthis._doc.toggleDisplayBrowserUrl();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayVolumeBar\":\r\n\t\t\t\tthis._doc.displayVolumeBar = !this._doc.displayVolumeBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullScreen\":\r\n\t\t\t\tthis._openPrompt(\"layout\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"colorTheme\":\r\n\t\t\t\tthis._openPrompt(\"theme\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._optionsMenu.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n\r\n\tprivate _customWavePresetHandler = (event: Event): void => {\r\n\r\n\t\t// Update custom wave value\r\n\t\tlet customWaveArray: Float64Array = new Float64Array(64);\r\n\t\tlet index: number = this._customWavePresetDrop.selectedIndex - 1;\r\n\t\tlet maxValue: number = Number.MIN_VALUE;\r\n\t\tlet minValue: number = Number.MAX_VALUE;\r\n\t\tlet arrayPoint: number = 0;\r\n\t\tlet arrayStep: number = (Config.chipWaves[index].samples.length - 1) / 64.0;\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Compute derivative to get original wave.\r\n\t\t\tcustomWaveArray[i] = (Config.chipWaves[index].samples[Math.floor(arrayPoint)] - Config.chipWaves[index].samples[(Math.floor(arrayPoint) + 1)]) / arrayStep;\r\n\r\n\t\t\tif (customWaveArray[i] < minValue)\r\n\t\t\t\tminValue = customWaveArray[i];\r\n\r\n\t\t\tif (customWaveArray[i] > maxValue)\r\n\t\t\t\tmaxValue = customWaveArray[i];\r\n\r\n\t\t\t// Scale an any-size array to 64 elements\r\n\t\t\tarrayPoint += arrayStep;\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Change array range from Min~Max to 0~(Max-Min)\r\n\t\t\tcustomWaveArray[i] -= minValue;\r\n\t\t\t// Divide by (Max-Min) to get a range of 0~1,\r\n\t\t\tcustomWaveArray[i] /= (maxValue - minValue);\r\n\t\t\t//then multiply by 48 to get 0~48,\r\n\t\t\tcustomWaveArray[i] *= 48.0;\r\n\t\t\t//then subtract 24 to get - 24~24\r\n\t\t\tcustomWaveArray[i] -= 24.0;\r\n\t\t\t//need to force integers\r\n\t\t\tcustomWaveArray[i] = Math.ceil(customWaveArray[i]);\r\n\r\n\t\t\t// Copy back data to canvas\r\n\t\t\tthis._customWaveDrawCanvas.newArray[i] = customWaveArray[i];\r\n\t\t}\r\n\r\n\t\t//this._instrumentVolumeSlider.input.value = \"\" + Math.round(Config.waveVolumes[index] * 50.0 - 50.0);\r\n\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, customWaveArray))\r\n\t\tthis._doc.record(new ChangeVolume(this._doc, +this._instrumentVolumeSlider.input.value, -Config.volumeRange / 2 + Math.round(Math.sqrt(Config.chipWaves[index].volume) * Config.volumeRange / 2)));\r\n\r\n\t\tthis._customWavePresetDrop.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\r\nimport { Note, Pattern } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeModChannel, ChangeModInstrument, ChangeModSetting, ChangeTrackSelection, ChangeChannelBar, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeDeleteBars, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangePatternInstrument, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, comparePatternNotes, unionOfUsedNotes, generateScaleMap } from \"./changes\";\r\n\r\ninterface PatternCopy {\r\n\tinstrument: number;\r\n\tnotes: any[];\r\n}\r\n\r\ninterface ChannelCopy {\r\n\tisNoise: boolean;\r\n\tisMod: boolean;\r\n\tpatterns: Dictionary<PatternCopy>;\r\n\tbars: number[];\r\n}\r\n\r\ninterface SelectionCopy {\r\n\tpartDuration: number;\r\n\tchannels: ChannelCopy[];\r\n}\r\n\r\nexport class Selection {\r\n\tpublic boxSelectionX0: number = 0;\r\n\tpublic boxSelectionY0: number = 0;\r\n\tpublic boxSelectionX1: number = 0;\r\n\tpublic boxSelectionY1: number = 0;\r\n\tpublic digits: string = \"\";\r\n\tpublic instrumentDigits: string = \"\";\r\n\tpublic patternSelectionStart: number = 0;\r\n\tpublic patternSelectionEnd: number = 0;\r\n\tpublic patternSelectionActive: boolean = false;\r\n\r\n\tprivate _changeTranspose: ChangeGroup | null = null;\r\n\tprivate _changeTrack: ChangeGroup | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument) { }\r\n\r\n\tpublic toJSON(): { x0: number, x1: number, y0: number, y1: number, start: number, end: number } {\r\n\t\treturn {\r\n\t\t\t\"x0\": this.boxSelectionX0,\r\n\t\t\t\"x1\": this.boxSelectionX1,\r\n\t\t\t\"y0\": this.boxSelectionY0,\r\n\t\t\t\"y1\": this.boxSelectionY1,\r\n\t\t\t\"start\": this.patternSelectionStart,\r\n\t\t\t\"end\": this.patternSelectionEnd,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic fromJSON(json: { x0: number, x1: number, y0: number, y1: number, start: number, end: number }): void {\r\n\t\tif (json == null) return;\r\n\t\tthis.boxSelectionX0 = +json[\"x0\"];\r\n\t\tthis.boxSelectionX1 = +json[\"x1\"];\r\n\t\tthis.boxSelectionY0 = +json[\"y0\"];\r\n\t\tthis.boxSelectionY1 = +json[\"y1\"];\r\n\t\tthis.patternSelectionStart = +json[\"start\"];\r\n\t\tthis.patternSelectionEnd = +json[\"end\"];\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t\tthis.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\r\n\t}\r\n\r\n\tpublic selectionUpdated(): void {\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t}\r\n\r\n\tpublic get boxSelectionBar(): number {\r\n\t\treturn Math.min(this.boxSelectionX0, this.boxSelectionX1);\r\n\t}\r\n\tpublic get boxSelectionChannel(): number {\r\n\t\treturn Math.min(this.boxSelectionY0, this.boxSelectionY1);\r\n\t}\r\n\tpublic get boxSelectionWidth(): number {\r\n\t\treturn Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\r\n\t}\r\n\tpublic get boxSelectionHeight(): number {\r\n\t\treturn Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\r\n\t}\r\n\tpublic scrollToSelection(): void {\r\n\t\tthis._doc.barScrollPos = Math.min(this._doc.barScrollPos, this.boxSelectionX1);\r\n\t\tthis._doc.barScrollPos = Math.max(this._doc.barScrollPos, this.boxSelectionX1 - (this._doc.trackVisibleBars - 1));\r\n\t}\r\n\r\n\tpublic setChannelBar(channel: number, bar: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeChannelBar(this._doc, channel, bar));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic setPattern(pattern: number): void {\r\n\t\tthis._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic nextDigit(digit: string, forInstrument: boolean): void {\r\n\t\tif (forInstrument) {\r\n\t\t\tthis.instrumentDigits += digit;\r\n\t\t\tvar parsed = parseInt(this.instrumentDigits);\r\n\t\t\tvar pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = digit;\r\n\t\t\tparsed = parseInt(this.instrumentDigits);\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = \"\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.digits += digit;\r\n\t\t\tlet parsed: number = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = digit;\r\n\t\t\tparsed = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setModChannel(mod: number, index: number): void {\r\n\t\tthis._doc.record(new ChangeModChannel(this._doc, mod, index));\r\n\t}\r\n\r\n\tpublic setModInstrument(mod: number, instrument: number): void {\r\n\t\tthis._doc.record(new ChangeModInstrument(this._doc, mod, instrument));\r\n\t}\r\n\r\n\tpublic setModSetting(mod: number, text: string): void {\r\n\t\tthis._doc.record(new ChangeModSetting(this._doc, mod, text));\r\n\t}\r\n\r\n\tpublic insertBars(): void {\r\n\t\tthis._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\r\n\t\tconst width: number = this.boxSelectionWidth;\r\n\t\tthis.boxSelectionX0 += width;\r\n\t\tthis.boxSelectionX1 += width;\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tpublic deleteBars(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\r\n\t\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t\t}\r\n\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgroup.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t} else {\r\n\t\t\tgroup.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\r\n\t\t\tconst width: number = this.boxSelectionWidth;\r\n\t\t\tthis.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\r\n\t\t\tthis.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\r\n\t\t}\r\n\t\tthis._doc.record(group);\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate * _eachSelectedChannel(): IterableIterator<number> {\r\n\t\tfor (let channel: number = this.boxSelectionChannel; channel < this.boxSelectionChannel + this.boxSelectionHeight; channel++) {\r\n\t\t\tyield channel;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedBar(): IterableIterator<number> {\r\n\t\tfor (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\r\n\t\t\tyield bar;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedPattern(channel: number): IterableIterator<Pattern> {\r\n\t\tconst handledPatterns: Dictionary<boolean> = {};\r\n\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\tif (currentPatternIndex == 0) continue;\r\n\t\t\tif (handledPatterns[String(currentPatternIndex)]) continue;\r\n\t\t\thandledPatterns[String(currentPatternIndex)] = true;\r\n\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\tif (pattern == null) throw new Error();\r\n\t\t\tyield pattern;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _patternIndexIsUnused(channel: number, patternIndex: number): boolean {\r\n\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\tif (this._doc.song.channels[channel].bars[i] == patternIndex) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic copy(): void {\r\n\t\tconst channels: ChannelCopy[] = [];\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tconst patterns: Dictionary<PatternCopy> = {};\r\n\t\t\tconst bars: number[] = [];\r\n\r\n\t\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\t\tconst patternNumber: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tbars.push(patternNumber);\r\n\t\t\t\tif (patterns[String(patternNumber)] == undefined) {\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tlet instrument: number = 0;\r\n\t\t\t\t\tlet notes: Note[] = [];\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tinstrument = pattern.instrument;\r\n\r\n\t\t\t\t\t\tif (this.patternSelectionActive) {\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tif (note.end <= this.patternSelectionStart) continue;\r\n\t\t\t\t\t\t\t\tif (note.start >= this.patternSelectionEnd) continue;\r\n\t\t\t\t\t\t\t\tif (note.start < this.patternSelectionStart || note.end > this.patternSelectionEnd) {\r\n\t\t\t\t\t\t\t\t\tnew ChangeNoteLength(null, note, Math.max(note.start, this.patternSelectionStart), Math.min(this.patternSelectionEnd, note.end));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnote.start -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnote.end -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnotes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnotes = pattern.notes;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpatterns[String(patternNumber)] = { \"instrument\": instrument, \"notes\": notes };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst channelCopy: ChannelCopy = {\r\n\t\t\t\t\"isNoise\": this._doc.song.getChannelIsNoise(channel),\r\n\t\t\t\t\"isMod\": this._doc.song.getChannelIsMod(channel),\r\n\t\t\t\t\"patterns\": patterns,\r\n\t\t\t\t\"bars\": bars,\r\n\t\t\t};\r\n\t\t\tchannels.push(channelCopy);\r\n\t\t}\r\n\r\n\t\tconst selectionCopy: SelectionCopy = {\r\n\t\t\t\"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\r\n\t\t\t\"channels\": channels,\r\n\t\t};\r\n\t\twindow.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\r\n\t}\r\n\r\n\t// I'm sorry this function is so complicated!\r\n\t// Basically I'm trying to avoid accidentally modifying patterns that are used\r\n\t// elsewhere in the song (unless we're just pasting a single pattern) but I'm\r\n\t// also trying to reuse patterns where it makes sense to do so, especially \r\n\t// in the same channel it was copied from.\r\n\tpublic pasteNotes(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\t\tconst copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst isNoise: boolean = !!channelCopy[\"isNoise\"];\r\n\t\t\tconst isMod: boolean = !!channelCopy[\"isMod\"];\r\n\t\t\tconst patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\t\t\tif (isNoise != this._doc.song.getChannelIsNoise(channel)) continue;\r\n\t\t\tif (isMod != this._doc.song.getChannelIsMod(channel)) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tif (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\r\n\t\t\t\t// Special case: if there's just one pattern being copied, try to insert it\r\n\t\t\t\t// into whatever pattern is already selected.\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[0] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar;\r\n\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\r\n\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\r\n\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\t!this.patternSelectionActive &&\r\n\t\t\t\t\t\t((comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) && instrumentCopy == existingPattern.instrument) ||\r\n\t\t\t\t\t\t\tthis._patternIndexIsUnused(channel, copiedPatternIndex))) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t} else if (this.patternSelectionActive) {\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tconst usedPatterns: Dictionary<boolean> = {};\r\n\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\r\n\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tconst reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\r\n\t\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\t\tconst pattern: Pattern = this._doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\r\n\t\t\t\t\t\tif (!usedPatterns[String(currentPatternIndex)]) {\r\n\t\t\t\t\t\t\tusedPatterns[String(currentPatternIndex)] = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// If this pattern is used here and elsewhere, it's not safe to modify it directly, so\r\n\t\t\t\t\t\t\t// make a duplicate of it and modify that instead.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t\tconst newPattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, pattern.instrument, newPattern));\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tgroup.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\tif (copiedPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst removedPattern: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tif (removedPattern != 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tif (this._patternIndexIsUnused(channel, removedPattern)) {\r\n\t\t\t\t\t\t\t// When a pattern becomes unused when replaced by rectangular selection pasting,\r\n\t\t\t\t\t\t\t// remove all the notes from the pattern so that it may be reused.\r\n\t\t\t\t\t\t\tthis._doc.song.channels[channel].patterns[removedPattern - 1].notes.length = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst reusedIndex: string = String(copiedPatternIndex);\r\n\t\t\t\t\tif (copiedPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\tcopiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\r\n\t\t\t\t\t\tcomparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) &&\r\n\t\t\t\t\t\tinstrumentCopy == existingPattern.instrument) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (existingPattern != undefined && this._patternIndexIsUnused(channel, copiedPatternIndex)) {\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic pasteNumbers(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\r\n\t\t\t\tif (copiedPatternIndex > this._doc.song.patternsPerChannel) {\r\n\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic selectAll(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 &&\r\n\t\t\tthis.boxSelectionChannel == 0 &&\r\n\t\t\tthis.boxSelectionWidth == this._doc.song.barCount &&\r\n\t\t\tthis.boxSelectionHeight == this._doc.song.getChannelCount()) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic selectChannel(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic duplicatePatterns(): void {\r\n\t\tthis._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic muteChannels(allChannels: boolean): void {\r\n\t\tif (allChannels) {\r\n\t\t\tlet anyMuted: boolean = false;\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tif (this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyMuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = !anyMuted;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet anyUnmuted: boolean = false;\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tif (!this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyUnmuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = anyUnmuted;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic soloChannels(): void {\r\n\t\tlet alreadySoloed: boolean = true;\r\n\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tconst shouldBeMuted: boolean = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\tif (this._doc.song.channels[channel].muted != shouldBeMuted) {\r\n\t\t\t\talreadySoloed = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (alreadySoloed) {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic forceRhythm(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternRhythm(this._doc, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic forceScale(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tconst scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tunionOfUsedNotes(pattern, scaleFlags);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale);\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternScale(this._doc, pattern, scaleMap));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic transpose(upward: boolean, octave: boolean): void {\r\n\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\r\n\t\tthis._changeTranspose = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tthis._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tthis._changeTranspose.append(new ChangeTranspose(this._doc, channel, pattern, upward, false, octave));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(this._changeTranspose, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic setInstrument(instrument: number): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrument, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic resetBoxSelection(): void {\r\n\t\tthis.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\r\n\t\tthis.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nexport class ChangeNotifier {\r\n\tprivate _watchers: (() => void)[] = [];\r\n\tprivate _dirty: boolean = false;\r\n\r\n\tpublic watch(watcher: () => void): void {\r\n\t\tif (this._watchers.indexOf(watcher) == -1) {\r\n\t\t\tthis._watchers.push(watcher);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unwatch(watcher: () => void): void {\r\n\t\tconst index: number = this._watchers.indexOf(watcher);\r\n\t\tif (index != -1) {\r\n\t\t\tthis._watchers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic changed(): void {\r\n\t\tthis._dirty = true;\r\n\t}\r\n\r\n\tpublic notifyWatchers(): void {\r\n\t\tif (!this._dirty) return;\r\n\t\tthis._dirty = false;\r\n\t\tfor (const watcher of this._watchers.concat()) {\r\n\t\t\twatcher();\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern, Song, Synth } from \"../synth/synth\";\r\nimport { SongRecovery, generateUid } from \"./SongRecovery\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Selection } from \"./Selection\";\r\nimport { Change } from \"./Change\";\r\nimport { ChangeNotifier } from \"./ChangeNotifier\";\r\nimport { ChangeSong, setDefaultInstruments } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\ninterface HistoryState {\r\n\tcanUndo: boolean;\r\n\tsequenceNumber: number;\r\n\tbar: number;\r\n\tchannel: number;\r\n\trecoveryUid: string;\r\n\tprompt: string | null;\r\n\tselection: { x0: number, x1: number, y0: number, y1: number, start: number, end: number };\r\n}\r\n\r\nexport class SongDocument {\r\n\tpublic song: Song;\r\n\tpublic synth: Synth;\r\n\tpublic notifier: ChangeNotifier = new ChangeNotifier();\r\n\tpublic selection: Selection = new Selection(this);\r\n\tpublic channel: number = 0;\r\n\tpublic muteEditorChannel: number = 0;\r\n\tpublic bar: number = 0;\r\n\tpublic recalcChannelNames: boolean;\r\n\tpublic autoPlay: boolean;\r\n\tpublic autoFollow: boolean;\r\n\tpublic enableNotePreview: boolean;\r\n\tpublic showFifth: boolean;\r\n\tpublic showLetters: boolean;\r\n\tpublic showChannels: boolean;\r\n\tpublic showScrollBar: boolean;\r\n\tpublic alwaysFineNoteVol: boolean = false;\r\n\tpublic alwaysShowSettings: boolean = true;\r\n\tpublic fullScreen: string;\r\n\tpublic enableChannelMuting: boolean;\r\n\tpublic colorTheme: string;\r\n\tpublic displayBrowserUrl: boolean;\r\n\tpublic displayVolumeBar: boolean = true;\r\n\tpublic volume: number = 75;\r\n\tpublic trackVisibleBars: number = 16;\r\n\tpublic barScrollPos: number = 0;\r\n\tpublic prompt: string | null = null;\r\n\tpublic windowOctaves: number = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\tpublic scrollableOctaves: number = Config.pitchOctaves - this.windowOctaves;\r\n\tpublic windowPitchCount: number;\r\n\tprivate static readonly _maximumUndoHistory: number = 100;\r\n\tprivate _recovery: SongRecovery = new SongRecovery();\r\n\tprivate _recoveryUid: string;\r\n\tprivate _recentChange: Change | null = null;\r\n\tprivate _sequenceNumber: number = 0;\r\n\tprivate _stateShouldBePushed: boolean = false;\r\n\tprivate _recordedNewSong: boolean = false;\r\n\tpublic _waitingToUpdateState: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.notifier.watch(this._normalizeSelection);\r\n\r\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\r\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") == \"true\";\r\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") == \"true\";\r\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\r\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\r\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\r\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\r\n\t\tthis.alwaysFineNoteVol = window.localStorage.getItem(\"alwaysFineNoteVol\") == \"true\";\r\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\r\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\r\n\t\tthis.displayVolumeBar = window.localStorage.getItem(\"displayVolumeBar\") != \"false\";\r\n\t\tthis.fullScreen = window.localStorage.getItem(\"fullScreen\") || \"normal\";\r\n\t\tthis.colorTheme = window.localStorage.getItem(\"colorTheme\") || \"microbox classic\";\r\n\r\n\t\tColorConfig.setTheme(this.colorTheme);\r\n\t\tLayout.setFullScreen(this.fullScreen);\r\n\r\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\r\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\r\n\t\t}\r\n\r\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\r\n\t\t}\r\n\r\n\t\tlet songString: string = window.location.hash;\r\n\t\tif (songString == \"\") {\r\n\t\t\tsongString = this._getHash();\r\n\t\t}\r\n\t\tthis.song = new Song(songString);\r\n\t\tif (songString == \"\" || songString == undefined) setDefaultInstruments(this.song);\r\n\t\tsongString = this.song.toBase64String();\r\n\t\tthis.synth = new Synth(this.song);\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t\t\r\n\t\tthis.windowPitchCount = this.windowOctaves * this.song.edo + 1;\r\n\r\n\t\tlet state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) {\r\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\r\n\t\t\tstate = { canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON() };\r\n\t\t}\r\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\r\n\t\tthis._replaceState(state, songString);\r\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\r\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\r\n\t\tthis.prompt = state.prompt;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t// For all input events, catch them when they are about to finish bubbling,\r\n\t\t// presumably after all handlers are done updating the model, then update the\r\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\r\n\t\t// but they are immediately followed by mousemove which does. \r\n\t\tfor (const eventName of [\"input\", \"change\", \"click\", \"keyup\", \"keydown\", \"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\r\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toggleDisplayBrowserUrl() {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tthis.displayBrowserUrl = !this.displayBrowserUrl;\r\n\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t}\r\n\r\n\tprivate _getHistoryState(): HistoryState | null {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.history.state;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? null : json.state;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getHash(): string {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.location.hash;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? \"\" : json.hash;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _replaceState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _pushState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\r\n\t\t\tif (currentIndex == oldestIndex) {\r\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\r\n\t\t\t}\r\n\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _forward(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.forward();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\r\n\t\t\tif (currentIndex != newestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _back(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.back();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tif (currentIndex != oldestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenHistoryStateChanged = (): void => {\r\n\t\tif (window.history.state == null && window.location.hash != \"\") {\r\n\t\t\t// The user changed the hash directly.\r\n\t\t\tthis._sequenceNumber++;\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t\tconst state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON() };\r\n\t\t\tnew ChangeSong(this, window.location.hash);\r\n\t\t\tthis.prompt = state.prompt;\r\n\t\t\tif (this.displayBrowserUrl) {\r\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t\t\t} else {\r\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\r\n\t\t\t}\r\n\t\t\tthis.forgetLastChange();\r\n\t\t\tthis.notifier.notifyWatchers();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) throw new Error(\"History state is null.\");\r\n\r\n\t\t// Abort if we've already handled the current state. \r\n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._sequenceNumber = state.sequenceNumber;\r\n\t\tthis.prompt = state.prompt;\r\n\t\tnew ChangeSong(this, this._getHash());\r\n\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\r\n\r\n\t\tthis.forgetLastChange();\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _cleanDocument = (): void => {\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _normalizeSelection = (): void => {\r\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\r\n\t\t// because it may auto-follow the playhead outside the selection but it would\r\n\t\t// be annoying to lose your selection just because the song is playing.\r\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\r\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\r\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\r\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\r\n\t\t\tthis.song.getChannelCount() < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\r\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1)) {\r\n\t\t\tthis.selection.resetBoxSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateHistoryState = (): void => {\r\n\t\tthis._waitingToUpdateState = false;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\r\n\t\tif (this._recordedNewSong) {\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t} else {\r\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, this.song.title, hash);\r\n\t\t}\r\n\t\tlet state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tif (this._stateShouldBePushed) {\r\n\t\t\tthis._pushState(state, hash);\r\n\t\t} else {\r\n\t\t\tthis._replaceState(state, hash);\r\n\t\t}\r\n\t\tthis._stateShouldBePushed = false;\r\n\t\tthis._recordedNewSong = false;\r\n\t}\r\n\r\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\r\n\t\tif (change.isNoop()) {\r\n\t\t\tthis._recentChange = null;\r\n\t\t\tif (replace) this._back();\r\n\t\t} else {\r\n\t\t\tchange.commit();\r\n\t\t\tthis._recentChange = change;\r\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\r\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\r\n\t\t\tif (!this._waitingToUpdateState) {\r\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\r\n\t\t\t\t// committed and the interface has rendered the latest changes to\r\n\t\t\t\t// improve perceived responsiveness.\r\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\r\n\t\t\t\tthis._waitingToUpdateState = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetSongRecoveryUid(): void {\r\n\t\tthis._recoveryUid = generateUid();\r\n\t}\r\n\r\n\tpublic openPrompt(prompt: string): void {\r\n\t\tthis.prompt = prompt;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tthis._sequenceNumber++;\r\n\t\tconst state = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tthis._pushState(state, hash);\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tif (state.canUndo) this._back();\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tthis._forward();\r\n\t}\r\n\r\n\tpublic setProspectiveChange(change: Change | null): void {\r\n\t\tthis._recentChange = change;\r\n\t}\r\n\r\n\tpublic forgetLastChange(): void {\r\n\t\tthis._recentChange = null;\r\n\t}\r\n\r\n\tpublic lastChangeWas(change: Change | null): boolean {\r\n\t\treturn change != null && change == this._recentChange;\r\n\t}\r\n\r\n\tpublic goBackToStart(): void {\r\n\t\tthis.channel = 0;\r\n\t\tthis.bar = 0;\r\n\t\tthis.barScrollPos = 0;\r\n\t\tthis.notifier.changed();\r\n\t\tthis.synth.snapToStart();\r\n\t\tthis.notifier.changed();\r\n\t}\r\n\r\n\tpublic savePreferences(): void {\r\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"alwaysFineNoteVol\", this.alwaysFineNoteVol ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayVolumeBar\", this.displayVolumeBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this.fullScreen);\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this.colorTheme);\r\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\r\n\t}\r\n\r\n\tpublic setVolume(val: number): void {\r\n\t\tthis.volume = val;\r\n\t\tthis.savePreferences();\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t}\r\n\r\n\tprivate _calcVolume(): number {\r\n\t\treturn Math.min(1.0, Math.pow(this.volume / 50.0, 0.5)) * Math.pow(2.0, (this.volume - 75.0) / 25.0);\r\n\t}\r\n\r\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\r\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\r\n\t}\r\n\r\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\r\n\t\tconst pattern: Pattern | null = this.getCurrentPattern(barOffset);\r\n\t\treturn pattern == null ? 0 : pattern.instrument;\r\n\t}\r\n\r\n\tpublic getMobileLayout(): boolean {\r\n\t\treturn (this.fullScreen == \"widefullscreen\") ? window.innerWidth <= 1000 : window.innerWidth <= 700;\r\n\t}\r\n\r\n\tpublic getBarWidth(): number {\r\n\t\t// Bugfix: In wide fullscreen, the 32 pixel display doesn't work as the trackEditor is still horizontally constrained\r\n\t\treturn (!this.getMobileLayout() && this.enableChannelMuting && (!this.getFullScreen() || this.fullScreen == \"widefullscreen\")) ? 30 : 32;\r\n\t}\r\n\r\n\tpublic getChannelHeight(): number {\r\n\t\tconst squashed: boolean = this.getMobileLayout() || this.song.getChannelCount() > 4 || (this.song.barCount > this.trackVisibleBars && this.song.getChannelCount() > 3);\r\n\t\t// TODO: Jummbox widescreen should allow more channels before squashing or megasquashing\r\n\t\tconst megaSquashed: boolean = !this.getMobileLayout() && (((this.fullScreen != \"widefullscreen\") && this.song.getChannelCount() > 11) || this.song.getChannelCount() > 22);\r\n\t\treturn megaSquashed ? 23 : (squashed ? 27 : 32);\r\n\t}\r\n\r\n\tpublic getFullScreen(): boolean {\r\n\t\treturn !this.getMobileLayout() && (this.fullScreen != \"normal\");\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\r\nimport { isMobile, EditorConfig } from \"./EditorConfig\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport \"./style\"; // Import for the side effects, there's no exports.\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { NotePin, Note, Pattern, Instrument, Channel, Synth } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { ChangePreset } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst doc: SongDocument = new SongDocument();\r\nconst editor: SongEditor = new SongEditor(doc);\r\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\r\nbeepboxEditorContainer.appendChild(editor.mainLayer);\r\neditor.whenUpdated();\r\n\r\n// Fade-in transitions\r\neditor.mainLayer.className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"pattern-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"editor-song-settings\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"instrument-settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"trackAndMuteContainer\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"barScrollBar\")[0].className += \" load\";\r\n\r\n// Give select2 class to these\r\n$('#pitchPresetSelect').select2({ dropdownAutoWidth: true });\r\n$('#drumPresetSelect').select2({ dropdownAutoWidth: true });\r\n\r\n// Onclick event to expand/collapse optgroups\r\n$(\"body\").on('click', '.select2-container--open .select2-results__group', function () {\r\n\t$(this).siblings().toggle();\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#pitchPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#pitchPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#drumPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#drumPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Select2 events\r\n// The latter is to ensure select2 doesn't keep focus after the select2 is closed without making a selection.\r\n$('#pitchPresetSelect').on(\"change\", editor._whenSetPitchedPreset);\r\n$('#pitchPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n$('#drumPresetSelect').on(\"change\", editor._whenSetDrumPreset);\r\n$('#drumPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n\r\neditor.mainLayer.focus();\r\n\r\n// don't autoplay on mobile devices, wait for input.\r\nif (!isMobile && doc.autoPlay) {\r\n\tfunction autoplay(): void {\r\n\t\tif (!document.hidden) {\r\n\t\t\tdoc.synth.play();\r\n\t\t\teditor.updatePlayButton();\r\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\r\n\t\t}\r\n\t}\r\n\tif (document.hidden) {\r\n\t\t// Wait until the tab is visible to autoplay:\r\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\r\n\t} else {\r\n\t\tautoplay();\r\n\t}\r\n}\r\n\r\n// BeepBox uses browser history state as its own undo history. Browsers typically\r\n// remember scroll position for each history state, but BeepBox users would prefer not \r\n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\r\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\r\n\r\neditor.updatePlayButton();\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n\tnavigator.serviceWorker.register(\"/service_worker.js\", { updateViaCache: \"all\", scope: \"/\" }).catch(() => { });\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset };\r\n//}\r\n\r\n\r\n\r\n\r\n"]}