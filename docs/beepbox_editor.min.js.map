{"version":3,"sources":["../src/synth/SynthConfig.ts","../src/editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../src/editor/ColorConfig.ts","../src/editor/style.ts","../src/synth/FFT.ts","../src/synth/Deque.ts","../src/synth/synth.ts","../src/editor/BarScrollBar.ts","../src/editor/Change.ts","../src/editor/changes.ts","../src/editor/SongSettingsPrompt.ts","../src/editor/ChannelSettingsPrompt.ts","../src/editor/CustomChipPrompt.ts","../src/editor/ArrayBufferWriter.ts","../src/editor/Midi.ts","../src/editor/ExportPrompt.ts","../src/editor/HarmonicsEditor.ts","../src/editor/HTMLWrapper.ts","../src/editor/ArrayBufferReader.ts","../src/editor/ImportPrompt.ts","../src/editor/Layout.ts","../src/editor/LayoutPrompt.ts","../src/editor/LimiterPrompt.ts","../src/editor/LoopEditor.ts","../src/editor/MoveNotesSidewaysPrompt.ts","../src/editor/MuteEditor.ts","../src/editor/OctaveScrollBar.ts","../src/editor/PatternEditor.ts","../src/editor/Piano.ts","../src/editor/SongRecovery.ts","../src/editor/SongRecoveryPrompt.ts","../src/editor/SpectrumEditor.ts","../src/editor/ThemePrompt.ts","../src/editor/TipPrompt.ts","../src/editor/TrackEditor.ts","../src/editor/SongEditor.ts","../src/editor/Selection.ts","../src/editor/ChangeNotifier.ts","../src/editor/SongDocument.ts","../src/editor/main.ts"],"names":["Config","centerWave","wave","sum","i","length","average","cumulative","wavePrev","push","Float64Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","getDrumWave","index","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","samples","Float32Array","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","Error","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","pow","highIndex","min","retroWave","combinedAmplitude","lerped","log","LN2","amplitude","spectrumMax","radians","PI","cos","sin","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","dictionary","value","name","result","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","reverbRange","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","edoMin","edoMax","instrumentsPerChannelMin","instrumentsPerChannelMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipWaves","volume","pitchFilterMult","isSoft","filterCutoffMaxHz","filterCutoffMinHz","filterMax","filterMaxResonance","filterCutoffRange","filterResonanceRange","transitions","isSeamless","attackSeconds","releases","releaseTicks","slides","slideTicks","vibratos","type","delayParts","vibratoTypes","periodsSeconds","period","arpSpeedScale","intervals","spread","offset","sign","effectsNames","volumeRange","volumeLogScale","panCenter","panMax","detuneMin","detuneMax","songDetuneMin","songDetuneMax","chords","harmonizes","customInterval","arpeggiates","isCustomInterval","strumParts","maxChordSize","operatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","harmonicsControlPoints","harmonicsRendered","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthRange","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","centerFrequency","pitchesPerOctave","drumCount","modCount","pitchOctaves","maxScrollableOctaves","maxPitch","maximumTonesPerChannel","sineWaveLength","sineWaveMask","sineWave","generateSineWave","barEditorHeight","isMobile","test","navigator","userAgent","prettyNumber","toFixed","replace","EditorConfig","[object Object]","presetValue","categoryIndex","presetIndex","presetCategories","presets","program","category","preset","generalMidi","midiProgram","presetName","version","versionDisplayName","customType","settings","transition","effects","chord","filterCutoffHz","filterResonance","filterEnvelope","interval","vibrato","isNoise","algorithm","feedbackType","feedbackAmplitude","feedbackEnvelope","operators","frequency","envelope","customChipWave","harmonics","midiSubharmonicOctaves","pulseWidth","pulseEnvelope","spectrum","drums","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","appendChild","document","createTextNode","Array","isArray","Symbol","iterator","__spread","constructor","Object","Element","_d","e_2","_e","key","setAttribute","join","console","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","createElement","_c","split","name_2","createElementNS","snakeCaseName","ColorConfig","this","colorLookup","clear","song","channel","getComputedStyle","_styleElement","getPropertyValue","trim","base","getChannelColor","regex","secondaryChannel","getComputed","exec","primaryChannel","secondaryNote","primaryNote","pitchChannelCount","pitchChannels","noiseChannelCount","noiseChannels","modChannels","has","get","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","newChannelColors","floor","set","noiseSecondaryChannelHue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","textContent","themes","themeColor","querySelector","resetColors","Map","dark classic","dark competition","light classic","jummbox classic","forest","canyon","midnight","microbox classic","jummbox light","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","head","scrollBarTest","body","div","factor","countBits","n","isPowerOf2","round","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndex","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","clientWidth","classList","add","removeChild","Deque","_capacity","_buffer","undefined","_mask","_offset","_count","_expandCapacity","popFront","popBack","oldBuffer","size","base64IntToCharCode","base64CharCodeToInt","BitFieldReader","source","_bits","_readIndex","charCodeAt","minValue","minBits","numBits","readLongTail","read","BitFieldWriter","_index","writeLongTail","write","other","buffer","ceil","makeNotePin","time","clamp","max","val","validateRange","Note","pitch","start","end","fadeout","pitches","pins","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestVolume","pin","newNote","concat","Pattern","notes","instrument","note","clone","Operator","reset","SpectrumWave","isNoiseChannel","_wave","_waveIsReady","isHarmonic","lowestOctave","waveLength","highestOctave","falloffRatio","pitchTweak","controlPointToOctave","point","value1","value2","octave1","octave2","HarmonicsWave","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","Instrument","isModChannel","chipWave","chipNoise","filterCutoff","vibratoDepth","vibratoSpeed","vibratoDelay","vibratoType","pan","panDelay","arpeggioSpeed","fastTwoNoteArp","tieNoteTransition","clicklessTransition","detune","LFOtime","nextLFOtime","arpTime","customChipWaveIntegral","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modStatuses","modInstruments","modSettings","mod","ModStatus","msNone","ModSetting","mstNone","spectrumWave","instrumentObject","getChord","getFilterCutoffOctaves","getFilterEnvelope","getDrumsetEnvelope","operatorArray","operator","useSlowerRhythm","indexOf","valueOf","setTypeAndReset","oldTransitionNames","binary","sudden","smooth","transitionObject","findIndex","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","sustain sharp","sustain medium","sustain soft","decay sharp","legacyFilter","legacyEffectNames","drum","legacyWaveNames","triangle","square","pulse wide","pulse narrow","sawtooth","double saw","double pulse","spiky","plateau","legacyChorusNames","fifths","octaves","feedback","legacyEnvelopeNames","pluck 1","pluck 2","pluck 3","operatorObject","freq","frequencyFromPitch","drumsetIndexReferenceDelta","getCustomWave","_drumsetIndexToSpectrumOctave","Channel","octave","instruments","patterns","bars","muted","Song","string","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","mstMaxVols","mstSongVolume","mstTempo","mstReverb","mstNextBar","mstInsVolume","mstPan","mstFilterCut","mstFilterPeak","mstFMSlider1","mstFMSlider2","mstFMSlider3","mstFMSlider4","mstFMFeedback","mstPulseWidth","mstDetune","mstVibratoDepth","mstSongDetune","mstVibratoSpeed","mstVibratoDelay","mstArpeggioSpeed","mstPanDelay","mstResetArpeggio","mstMaxValue","mstNewNoteVols","getNewNoteVolume","isMod","modChannel","modInstrument","cap","realToModValue","tempo","getVolumeCap","getVolumeCapForSetting","modSetting","fromBase64String","initToDefault","setting","modChannelCount","andResetChannels","scale","loopStart","loopLength","reverb","edo","beatsPerBar","barCount","patternsPerChannel","rhythm","instrumentsPerChannel","title","channelIndex","getChannelCount","pattern","bar","bits","_variant","_latestJummBoxVersion","encodedSongTitle","encodeURIComponent","encodedChannelName","o","spectrumBits","encodeBase64","harmonicsBits","neededBits","shapeBits","neededInstrumentBits","getChannelIsNoise","getChannelIsMod","instrumentIndex","modStatus","msForPitch","msForNoise","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","writePartDuration","writePinCount","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","splice","unshift","pop","allPitches","pitchIndex","pitchIter","writePitchInterval","stringLength","lengthBase64","digits","prototype","maxApplyArgs","slice","compressed","charIndex","fromJsonObject","JSON","parse","substring","variant","_latestBeepboxVersion","_oldestBeepboxVersion","_oldestJummBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","command","instrumentChannelIterator","instrumentIndexIterator","toSetOctaves","useSlowerArpSpeed","songNameLength","decodeURIComponent","window","localStorage","getItem","instrumentType","legacyWaves","legacyEffects","legacyEnvelopes","effect","originalValue","nextValue","channelNameLength","byteCount","markCustomWaveDirty","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","newPattern","newNotes","useOldShape","shape","pinObj","pinCount","readPinCount","initialVolume","bendCount","pitchBend","readLegacyPartDuration","readPartDuration","readPitchInterval","intervalIter","shift","isBackwards","restLength","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","toJsonObject","patternArray","noteArray","volumeCap","pointArray","useVol","tick","forMod","points","sequenceArray","l","octaveScrollBar","sequence","format","_format","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","importedPartsPerBeat","maxInstruments","maxPatterns","maxBars","channelObject","newPitchChannels","newNoiseChannels","newModChannels","patternObject","maxNoteCount","noteObject","k","startInterval","pointObject","lowestPitch","highestPitch","patternIndex","getPattern","Tone","chordSize","drumsetPitch","prevNote","nextNote","prevNotePitchIndex","nextNotePitchIndex","active","noteStart","noteEnd","noteLengthTicks","ticksSinceReleased","liveInputSamplesHeld","lastInterval","lastVolume","stereoVolume1","stereoVolume2","stereoOffset","stereoDelay","sample","phases","phaseDeltas","volumeStarts","volumeDeltas","volumeStart","volumeDelta","phaseDeltaScale","pulseWidthDelta","filter","filterScale","filterSample0","filterSample1","vibratoScale","intervalMult","intervalVolumeMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","Synth","samplesPerSecond","liveInputDuration","liveInputStarted","liveInputPitches","liveInputChannel","loopRepeatCount","wantToSkip","playheadInternal","beat","part","tickSampleCountdown","isPlayingSong","liveInputEndTime","tonePool","activeTones","tyingOver","activeModTones","releasedTones","liveInputTones","limit","stereoBufferIndex","samplesForNone","samplesForReverb","samplesForChorus","samplesForChorusReverb","chorusDelayLine","chorusDelayPos","chorusPhase","reverbDelayLine","reverbDelayPos","reverbFeedback0","reverbFeedback1","reverbFeedback2","reverbFeedback3","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","getChannelData","outputDataR","performance","now","synthesize","deactivateAudio","setSong","getInstrumentSynthFunction","warmUp","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","currentPart","currentBar","instrumentIdx","getPatternInstrument","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","msForSong","setModValue","playing","remainder","samplesPerTick","getSamplesPerTick","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","modValueToReal","ended","totalSamples","foundMod","find","sort","a","b","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getSamplesPerBar","getTotalBars","useLoopCount","volumeEnd","nextVal","channelAdjust","forSong","isModActive","AudioContext","webkitAudioContext","sampleRate","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","close","activateAudio","warmUpSynthesizer","computeLatestModValues","snapToBar","freeAllTones","oldBar","outputBufferLength","playSong","channelCount","idx","bufferIndex","pause","stereoBufferLength","chorusAngle","chorusRange","chorusOffset0","chorusOffset1","chorusOffset2","chorusOffset3","chorusOffset4","chorusOffset5","useReverb","getModValue","samplesLeftInBuffer","runLength","determineCurrentActiveTones","count","tone","playTone","skipBar","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","determineLiveInputTones","getTransition","freeReleasedTone","shouldFadeOutFast","chorusTap0Index","chorusTap1Index","chorusTap2Index","chorusTap3Index","chorusTap4Index","chorusTap5Index","chorusTap0Delta","chorusTap1Delta","chorusTap2Delta","chorusTap3Delta","chorusTap4Delta","chorusTap5Delta","runEnd","bufferIndexL","bufferIndexR","sampleForNoneL","sampleForNoneR","sampleForReverbL","sampleForReverbR","sampleForChorusL","sampleForChorusR","sampleForChorusReverbL","sampleForChorusReverbR","combinedChorusL","combinedChorusR","chorusTap0Ratio","chorusTap1Ratio","chorusTap2Ratio","chorusTap3Ratio","chorusTap4Ratio","chorusTap5Ratio","chorusTap0A","chorusTap0B","chorusTap1A","chorusTap1B","chorusTap2A","chorusTap2B","chorusTap3A","chorusTap3B","chorusTap4A","chorusTap4B","chorusTap5A","chorusSampleL","chorusSampleR","reverbDelayPos1","reverbDelayPos2","reverbDelayPos3","reverbSample0","reverbSample1","reverbSample2","reverbSample3","reverbTemp0","reverbTemp1","reverbTemp2","reverbTemp3","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","Number","isInteger","atEnd","carryOver","toneCount","targetBar","nextPattern","currNote","currVolume","p","releaseTone","freeTone","remove","resetEffects","epsilon","pushBack","pushFront","toneIndex","toneList","newTone","modChannelIdx","prevNotes","nextNotes","fillCount","syncTones","peakBack","noteStartAdjust","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","synthBuffer","computeTone","synthesizer","beats","customVolume","attack","synth","chordVolume","computeChordVolume","intervalScale","secondsPerPart","beatsPerPart","toneWasActive","treatAsSeamless","startPan","endPan","startPanDelay","endPanDelay","useStartPan","useEndPan","maxDelayStart","maxDelayEnd","delayEnd","stereoVolumeLEnd","stereoVolumeREnd","volumeReferencePitch","baseVolume","pitchDamping","resetPhases","partsSinceStart","intervalStart","intervalEnd","transitionVolumeStart","transitionVolumeEnd","chordVolumeStart","chordVolumeEnd","decayTimeStart","decayTimeEnd","ticksSoFar","startTicksSinceReleased","endTicksSinceReleased","startTick","endTick","toneTransition","expressionToVolumeMult","heldTicksStart","heldTicksEnd","heldPartsStart","heldPartsEnd","partsPerBar","endPinIndex","startPin","endPin","noteStartTick","pinStart","pinEnd","tickTimeStart","tickTimeEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","customVolumeTickStart","customVolumeTickEnd","transitionVolumeTickStart","transitionVolumeTickEnd","chordVolumeTickStart","chordVolumeTickEnd","intervalTickStart","intervalTickEnd","decayTimeTickStart","decayTimeTickEnd","maximumSlideTicks","slideRatioStartTick","slideRatioEndTick","intervalDiff","volumeDiff","decayTimeDiff","chordSizeDiff","sampleTime","lfoEffectStart","getLFOAmplitude","lfoEffectEnd","partsStart","partsEnd","useVibratoStart","useVibratoEnd","activeVibratoDelayMods","vibratoDelayStart","vibratoDelayEnd","MAX_VALUE","instrumentVolumeMult","instrumentVolumeToVolumeMult","pickMainInterval","cutoffOctavesModStart","cutoffOctavesModEnd","filterCutModStart","filterCutModEnd","filterCutoffHzStart","filterCutoffHzEnd","filterBaseStart","filterBaseEnd","filterMin","computeEnvelope","endFilter","filterVolumeStart","filterVolumeEnd","getFilterResonance","useFilterResonanceStart","useFilterResonanceEnd","filterResonanceEnd","sineVolumeBoostStart","sineVolumeBoostEnd","totalCarrierVolumeStart","totalCarrierVolumeEnd","arpeggioInterval","detuneStart","detuneEnd","associatedCarrierIndex","freqMult","startFreq","amplitudeStart","amplitudeEnd","amplitudeCurveStart","operatorAmplitudeCurve","amplitudeCurveEnd","startVal","endVal","endPitch","pitchVolumeStart","pitchVolumeEnd","operatorEnvelope","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","volumeMult","intervalOffset","settingsVolumeMultStart","settingsVolumeMultEnd","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulators","modulatorNumber","feedbackIndices","Function","chipSynth","harmonicsSynth","pulseWidthSynth","noiseSynth","spectrumSynth","drumsetSynth","modSynth","data","volumeScale","intervalA","intervalB","intervalSign","deltaRatio","phaseDeltaA","phaseDeltaB","phaseA","phaseB","filter1","filter2","filterScale1","filterScale2","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","prevWaveIntegralA","prevWaveIntegralB","delays","stereoVolumeL","stereoVolumeR","nextWaveIntegralA","nextWaveIntegralB","waveA","waveB","output","phaseDelta","phase","sawPhaseA","sawPhaseB","pulseWave","t","pitchRelativefilter","findRandomZeroCrossing","phaseInt","waveSample","phaseRatio","getDrumsetWave","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","slope","instrumentVolume","expression","getBeatsPerMinute","beatsPerSecond","partsPerSecond","tickPerSecond","BarScrollBar","_doc","_trackContainer","_editorWidth","_editorHeight","_playhead","rect","fill","x","y","width","height","_notches","svg","pointer-events","_handle","_handleHighlight","stroke","stroke-width","_leftHighlight","path","_rightHighlight","_renderedPlayhead","_svg","container","class","_mouseX","_mouseDown","_mouseOver","_dragging","_renderedNotchCount","_renderedBarPos","animatePlayhead","_notchSpace","_onScroll","event","barScrollPos","scrollLeft","getBarWidth","_whenMouseOver","_updatePreview","_whenMouseOut","_whenMousePressed","preventDefault","boundingRect","getBoundingClientRect","clientX","pageX","left","trackVisibleBars","_dragStart","_whenTouchPressed","touches","_whenMouseMoved","_whenCursorMoved","_whenTouchMoved","_whenCursorReleased","notifier","changed","center","addEventListener","capture","passive","showleftHighlight","showRightHighlight","showHandleHighlight","visibility","resized","lineHeight","Change","_noop","UndoableChange","reversed","super","_reversed","_doneForwards","_doForwards","_doBackwards","ChangeGroup","change","isNoop","_didSomething","ChangeSequence","changes","_changes","redo","undo","unionOfUsedNotes","projectNoteIntoBar","oldNote","timeOffset","noteStartPart","noteEndPart","newNoteLength","newPinTime","nextPin","nextPinTime","ratio","prevPin","prevPinTime","offsetInterval","pitchIdx","ChangeMoveAndOverflowNotes","doc","newBeatsPerBar","partsToMove","oldChannel","newChannel","oldPartsPerBar","newPartsPerBar","oldPattern","oldBarStart","absoluteNoteStart","absoluteNoteEnd","barStartPart","removeDuplicatePatterns","append","ChangeReplacePatterns","ChangePins","_note","_oldStart","_oldEnd","_newStart","_newEnd","_oldPins","_newPins","_oldPitches","_newPitches","firstInterval","firstTime","ChangeCustomWave","newArray","oldArray","getCurrentInstrument","comparisonResult","ChangePreset","newValue","valueToPreset","tempVolume","tempPan","tempPanDelay","ChangeRandomGeneratedInstrument","selectWeightedRandom","entries","total","entry","weight","item","selectCurvedDistribution","peak","normalize","spectrumGenerators","current","generator","harmonicGenerators","ChangeTransition","ChangeEffects","ChangePatternNumbers","startChannel","ChangeEdo","ChangeBarCount","atBeginning","diff","ChangeInsertBars","newLength","ChangeDeleteBars","ChangeLimiterSettings","ChangeChannelOrder","firstChannelIdx","secondChannelIdx","toSwap","channelOffset","ChangeChannelCount","newPitchChannelCount","newNoiseChannelCount","newModChannelCount","newChannels","changeGroup","newCount","oldCount","newStart","oldStart","pickRandomPresetValue","ChangeChannelBar","newBar","silently","ChangeInterval","ChangeChord","ChangeVibrato","ChangeVibratoDepth","oldValue","prevVibrato","unsetMod","ChangeVibratoSpeed","ChangeVibratoDelay","ChangeVibratoType","ChangeArpeggioSpeed","ChangeFastTwoNoteArp","ChangeTieNoteTransition","ChangeClicklessTransition","ChangeSpectrum","ChangeHarmonics","ChangeDrumsetEnvelope","drumIndex","ChangeInstrumentSlider","_instrument","ChangePulseWidth","ChangePulseEnvelope","ChangeFilterCutoff","ChangeFilterResonance","ChangeFilterEnvelope","ChangeAlgorithm","ChangeFeedbackType","ChangeFeedbackEnvelope","ChangeOperatorEnvelope","operatorIndex","ChangeOperatorFrequency","ChangeOperatorAmplitude","ChangeFeedbackAmplitude","ChangeInstrumentsPerChannel","newInstrumentsPerChannel","sampleInstrument","sampleInstrumentJson","newInstrument","ChangeKey","ChangeLoop","oldLength","ChangePitchAdded","deletion","_pitch","ChangeOctave","ChangeRhythm","ChangePaste","selectionStart","selectionEnd","oldPartDuration","ChangeNoteTruncate","noteInsertionIndex","ChangeNoteLength","ChangePasteInstrument","instrumentCopy","ChangePatternInstrument","ChangeModChannel","stat","ChangeModInstrument","tgtInstrument","ChangeModSetting","text","ChangePatternsPerChannel","channelBars","channelPatterns","ChangeEnsurePatternExists","_patternOldNotes","_bar","_channel","_oldPatternCount","_newPatternCount","firstEmptyUnusedIndex","firstUnusedIndex","used","barIndex","_patternIndex","ChangePinTime","shiftedTime","originalTime","skipStart","skipEnd","setPin","oldPin","_finishSetup","ChangePitchBend","bendStart","bendEnd","bendTo","direction","stop","setStart","setEnd","prevInterval","prevVolume","persist","ChangePatternRhythm","minDivision","changeRhythm","oldTime","thresholds","beatStart","newTime","threshold","ChangeNoteAdded","ChangeRhythmNote","ChangeMoveNotesSideways","beatsToMove","strategy","originalBarCount","originalLoopStart","originalLoopLength","firstBarIsEmpty","ChangeBeatsPerBar","noteIndex","ChangeTempo","ChangeScale","ChangeDetectKey","keyWeights","bestKey","bestKeyWeight","keyWeight","absoluteDiff","ChangeTranspose","eligiblePresetValues","setDefaultInstruments","nameToPresetValue","ChangeSong","newHash","ChangePatternSelection","selection","resetBoxSelection","ChangeValidateTrackSelection","removeExtraSparseChannels","maxLength","sparsestIndex","mostZeroes","zeroes","combinedChannels","comparePatternNotes","newPatterns","foundMatchingPattern","newPatternIndex","ChangeReverb","_pattern","truncStart","truncEnd","pushLastPin","skipNote","force","copy","ChangeSplitNotesAtSelection","patternSelectionStart","patternSelectionEnd","ChangeTransposeNote","upward","ignoreScale","foundMatch","patternSelectionActive","ChangeTrackSelection","newX0","newX1","newY0","newY1","boxSelectionX0","boxSelectionX1","boxSelectionY0","boxSelectionY1","newEnd","_oldActive","_newActive","ChangeDragSelectedNotes","parts","transpose","oldEnd","draggedNotes","ChangeDuplicateSelectedReusedPatterns","barStart","barWidth","channelStart","channelHeight","reusablePatterns","currentPatternIndex","isUsedElsewhere","bar2","copiedPattern","ChangePatternScale","scaleMap","newPitches","newPins","transformedPitch","transformedInterval","ChangeVolume","ChangeSongTitle","ChangeChannelName","muteEditorChannel","recalcChannelNames","ChangePan","ChangePanDelay","ChangeDetune","ChangeVolumeBend","bendPart","bendVolume","bendInterval","uniformVolume","inserted","ChangeChipWave","ChangeNoiseWave","button","span","h2","input","br","select","option","SongSettingsPrompt","_edoStepper","step","_beatsStepper","_conversionStrategySelect","_barsStepper","_positionSelect","_cancelButton","_okayButton","_close","cleanUp","removeEventListener","_saveChanges","_validateKey","_validateNumber","_whenKeyPressed","target","keyCode","setItem","group","_validate","prompt","record","lastPosition","lastStrategy","setTimeout","focus","charCode","which","ChannelSettingsPrompt","_patternsStepper","_instrumentsStepper","_pitchChannelStepper","_drumChannelStepper","_modChannelStepper","CustomChipPromptCanvas","_mouseY","_lastIndex","_lastAmp","chipData","startingChipData","_undoHistoryState","_changeQueue","_fill","_ticks","_subticks","_blocks","viewBox","preserveAspectRatio","_storeChange","sameCheck","render","stopPropagation","right","clientY","pageY","top","bottom","isNaN","offsetParent","col","amp","lowest","highest","startingAmp","endingAmp","medAmp","children","CustomChipPrompt","_songEditor","customChipCanvas","_playButton","_togglePlay","_pause","updatePlayButton","_play","whenKeyPressed","innerText","transfer","dest","ArrayBuffer","nextOffset","leftBytes","byteLength","wordSizes","wordSize","transferWith","ViewClass","Uint8Array","Uint16Array","view_source","view_dest","byteOffset","ArrayBufferWriter","initialCapacity","_writeIndex","_fileSize","_arrayBuffer","_data","DataView","numBytes","setUint32","_addBytes","setUint8","setUint16","setInt8","startWriting","writeUint8","writeMidiVariableLength","defaultMidiPitchBend","analogousDrumMap","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","69","70","73","74","midiVolumeToVolumeMult","lerp","low","high","save","blob","msSaveOrOpenBlob","anchor","download","url","URL","createObjectURL","revokeObjectURL","href","dispatchEvent","MouseEvent","open","location","ExportPrompt","outputStarted","_fileName","maxlength","autofocus","_computedSamplesLabel","Text","_enableIntro","_loopDropDown","_enableOutro","_formatSelect","_exportButton","_outputProgressBar","_outputProgressLabel","_outputProgressContainer","_validateFileName","_export","_exportTo","_exportToMidi","_exportToJson","checked","disabled","lastExportFormat","samplesToTime","getTotalSamples","rawSeconds","seconds","use","deleteChars","cursorPos","setSelectionRange","samplesPerChunk","currentFrame","currentChunk","samplesInChunk","sampleFrames","tempSamplesL","tempSamplesR","recordedSamplesL","recordedSamplesR","totalChunks","thenExportTo","_exportToWavFinish","_exportToMp3Finish","_synthesize","introIter","nextBar","sampleCount","arrayBuffer","bytesPerSample","range","valL","valR","setInt16","Blob","whenEncoderIsAvailable","sampleBlockSize","mp3encoder","Mp3Encoder","mp3Data","Int16Array","leftChunk","subarray","rightChunk","mp3buf","encodeBuffer","flush","script","src","onload","midiTicksPerBeat","midiTicksPerPart","microsecondsPerBeat","secondsPerMinute","midiTicksPerBar","pitchBendRange","unrolledBars","loopIndex","tracks","isMeta","midiChannel","isDrumset","midiChannelCounter","foundADrumset","writer","writeUint32","writeUint16","track","trackStartIndex","getWriteIndex","prevTime","barStartTime","writeEventTime","writeControlEvent","message","writeMidi7Bits","writeMidiAscii","writeUint24","isMinor","numSharps","writeInt8","parseInt","channelName","prevInstrumentIndex","writeInstrumentSettings","instrumentProgram","envelopeType","instrumentDecays","filterInstruments","midiDecayInstruments","midiSustainInstruments","instrumentPan","prevPitchBend","prevExpression","shouldResetExpressionAndPitchBend","channelRoot","chordHarmonizes","usesArpeggio","polyphony","error","noteStartTime","pinTime","pinVolume","pinInterval","prevPitches","nextPitches","velocity","pitchOffset","maxPitchOffset","minPitchOffset","nextPinVolume","nextPinInterval","midiTick","midiTickTime","linearVolume","noteStarting","drumsetMap","midiTicksSinceBeat","midiTicksPerArpeggio","noteEndTime","rewriteUint32","toCompactArrayBuffer","jsonString","stringify","HarmonicsEditor","_octaves","_fifths","_curve","_lastControlPoints","_lastControlPointContainer","_freqPrev","_ampPrev","_change","_renderedPath","_renderedFifths","_xToFreq","_yToAmp","lowerFreq","upperFreq","setProspectiveChange","controlPointToHeight","xPos","lastHeight","showFifth","display","InputBox","_getChange","_value","_oldValue","_whenInput","lastChangeWas","_whenChange","Slider","midTick","ArrayBufferReader","getUint32","readUint8","getUint16","getUint8","getInt8","nextByte","skipBytes","ImportPrompt","_fileInput","accept","_whenFileSelected","file","files","extension","lastIndexOf","reader","FileReader","goBackToStart","readAsText","_parseMidiFile","readAsArrayBuffer","headerReader","hasMore","chunkType","readUint32","chunkLength","getReaderForNextBytes","trackReader","nextEventMidiTick","readMidiVariableLength","runningStatus","fileFormat","readUint16","currentIndependentTrackIndex","currentTrackIndices","independentTracks","trackIndex","channelRPNMSB","channelRPNLSB","pitchBendRangeMSB","pitchBendRangeLSB","currentInstrumentProgram","currentInstrumentVolumes","currentInstrumentPans","noteEvents","pitchBendEvents","expressionEvents","currentMidiTick","anyTrackHasMore","eventStatus","peakUint8","eventType","eventChannel","foundTrackEndEvent","readMidi7Bits","on","volumeMultToInstrumentVolume","volumeMultToExpression","lsb","readUint24","numerator","denominatorExponent","readInt8","songTotalBars","quantizeMidiTickToPart","channelPresetValue","midiProgramToPresetValue","channelPreset","isDrumsetChannel","channelBasePitch","midiIntervalScale","channelMaxPitch","currentVelocity","currentProgram","currentInstrumentVolume","currentInstrumentPan","heldPitches","prevEventPart","setInstrumentVolume","noteEventIndex","noteEvent","nextEventPart","MAX_SAFE_INTEGER","drumFreqs","minDuration","maxDuration","heldPitch","currentMidiInterval","currentMidiExpression","pitchBendEventIndex","expressionEventIndex","updateCurrentMidiInterval","updateCurrentMidiExpression","instrumentByProgram","prevEventMidiTick","pitchSum","barStartMidiTick","barEndMidiTick","noteStartMidiTick","noteEndMidiTick","shiftedHeldPitch","initialBeepBoxPitch","heldPitchOffset","firstPin","potentialPins","keyPitch","keyVolume","prevPinIndex","prevPartPitch","prevPartExpression","noteRelativePart","lastPart","partPitch","partExpression","nearestPitch","pitchIsNearInteger","pitchCrossedInteger","nearestExpression","expressionIsNearInteger","expressionCrossedInteger","keyExpression","currentPin","addPin","addPinAtIndex","furthestIntervalDistance","addIntervalPin","addIntervalPinAtIndex","potentialIndex","potentialPin","interpolatedInterval","distance","furthestVolumeDistance","addVolumePin","addVolumePinAtIndex","interpolatedVolume","toBePinned","lastToBePinned","minPitch","notePin","shiftedPitch","averagePitch","scrollableOctaves","compactChannels","bestChannelIndexA","bestChannelIndexB","fewestConflicts","fewestGaps","channelIndexA","channelIndexB","channelA","channelB","conflicts","gaps","channelAInstrumentCount","channelAPatternCount","Layout","layout","_normalLayout","_fullScreenLayout","_wideFullScreenLayout","LayoutPrompt","_octaveStepper","_layoutSelect","fullScreen","setFullScreen","windowOctaves","windowPitchCount","lastOctaves","lastLayout","LimiterCanvas","lim","_boostCurve","_boostDot","circle","r","_midCurve","_limitCurve","_limitDot","_label0","font-size","_label1","_label2","_inLabel","_outLabel","_xAxisLabel","_yAxisLabel","transform","_inVolumeBg","_outVolumeBg","_inVolumeBar","_inVolumeCap","_outVolumeBar","_outVolumeCap","_stop1","stop-color","_stop2","_stop3","_gradient","linearGradient","id","gradientUnits","_defs","defs","_limiterPrompt","historicInCap","historicOutCap","lastValue","currentSubpathIdx","lastSubpathIdx","subPaths","limiterRatio","limitRatioSlider","compressorRatio","compressionRatioSlider","limiterThreshold","limitThresholdSlider","compressorThreshold","compressionThresholdSlider","LimiterPrompt","limiterCanvas","limitDecaySlider","limitRiseSlider","masterGainSlider","inVolumeHistoricTimer","inVolumeHistoricCap","outVolumeHistoricTimer","outVolumeHistoricCap","_resetButton","_volumeUpdate","animateVolume","requestAnimationFrame","_whenInputFavorLimitThreshold","_updateLimiter","startingLimitRatio","startingCompressionRatio","startingLimitThreshold","startingCompressionThreshold","startingLimitDecay","startingLimitRise","startingMasterGain","_resetDefaults","LoopEditor","_startMode","_endMode","_bothMode","_loop","_highlight","_barWidth","_cursor","mode","_clientStartX","_clientStartY","_startedScrolling","_draggingHorizontally","_renderedLoopStart","_renderedLoopStop","_renderedBarCount","_renderedBarWidth","_updateCursorStatus","_whenTouchReleased","_render","_documentChanged","watch","middle","endPoints","_findEndPoints","jumpIntoLoop","autoFollow","showHighlight","radius","highlightStart","highlightStop","loopStop","editorWidth","MoveNotesSidewaysPrompt","MuteEditor","_editor","_buttons","_channelCounts","_channelNameDisplay","color","_channelNameInput","_channelDropDown","_renderedChannelCount","_renderedPitchChannels","_renderedNoiseChannels","_renderedModChannels","_renderedChannelHeight","_channelDropDownChannel","_channelDropDownOpen","_channelDropDownLastState","_channelNameInputWhenInput","_channelNameInputClicked","_channelNameInputHide","_channelDropDownClick","_channelDropDownGetOpenedPosition","_channelDropDownBlur","options","_channelDropDownHandler","shouldSolo","swapIndex","refocusStage","selectedIndex","_onClick","_onMouseMove","getChannelHeight","_onMouseLeave","enableChannelMuting","channelCountText","muteButton","muteContainer","marginTop","marginBottom","fontSize","OctaveScrollBar","_piano","_notchHeight","_octaveCount","_octaveHeight","_barHeight","_upHighlight","_downHighlight","_renderedBarBottom","_renderedBarHeight","_barBottom","canReplaceLastChange","currentOctave","showUpHighlight","showDownHighlight","forceRender","PatternCursor","valid","curNote","curIndex","exactPart","nearPinIndex","PatternEditor","_interactive","_barOffset","controlMode","shiftMode","_svgNoteBackground","patternUnits","_svgDrumBackground","_svgModBackground","_svgBackground","_svgNoteContainer","_svgPlayhead","_selectionRect","stroke-dasharray","fill-opacity","_svgPreview","modDragValueLabel","text-anchor","contenteditable","dominant-baseline","_defaultModBorder","_backgroundPitchRows","_backgroundDrumRow","_backgroundModRow","_modDragValueLabelLeft","_modDragValueLabelTop","_modDragValueLabelWidth","editingModLabel","_modDragStartValue","_modDragLowerBound","_modDragUpperBound","_pitchHeight","_mouseDragging","_mouseHorizontal","_usingTouch","_copiedPinChannels","_mouseXStart","_mouseYStart","_touchTime","_shiftHeld","_dragConfirmed","_draggingStartOfSelection","_draggingEndOfSelection","_draggingSelectionContents","_dragTime","_dragPitch","_dragVolume","_dragVisible","_dragChange","_changePatternSelection","_lastChangeWasPatternSelection","_stashCursorPinVols","_playheadX","_octaveOffset","_renderedWidth","_renderedHeight","_renderedBeatWidth","_renderedPitchHeight","_renderedDrums","_renderedMod","_renderedRhythm","_renderedPitchChannelCount","_renderedNoiseChannelCount","_renderedModChannelCount","_followPlayheadBar","_validateModDragLabelInput","label","converted","presValue","xOffset","_partWidth","_modDragNote","_modDragPin","_modDragSetting","resetCopiedPins","maxDivision","_getMaxDivision","_animatePlayhead","timestamp","_whenCursorPressed","notifyWatchers","playheadBar","modPlayhead","shiftKey","continuousState","_setPatternSelection","_copyPins","enableNotePreview","rectangle","rhythmStepsPerBeat","_getMinDivision","foundNote","_findMousePitch","_pitchToPixelHeight","_pitchBorder","mousePitch","leftSide","rightSide","intervalRatio","arc","bendHeight","minInterval","maxInterval","bestDistance","pinDistance","_snapToPitch","nearest","defaultLength","_copiedPins","fullBeats","modMouse","division","forceStart","forceEnd","maxHeight","maxFoundHeight","pixelY","_pitchCount","guess","discardChanges","getSelection","sel","removeAllRanges","selectAllChildren","stopEditingModLabel","maintainLiveInput","_cursorAtStartOfSelection","_cursorAtEndOfSelection","_cursorIsInSelection","getCurrentPattern","_updateSelection","dx","dy","_snapToMinDivision","notesInScale","pitchRatio","draggedParts","draggedTranspose","backwards","directLength","blessedLength","theNote","prevPattern","shiftedPin","dragFactorSlow","dragFactorFast","dragSign","dragCounts","volumeRatio","alwaysFineNoteVol","pathString","_drawNote","clientHeight","beatWidth","_tempChildRectDifference","childElementCount","_a","lastChild","log2","node","cloneNode","parentNode","replaceChild","makeEmptyReplacementElement","showChannels","pattern2","notePath","oscillatorLabel","svgElement","showVolume","totalWidth","endOffset","prevSide","nextSide","prevHeight","nextHeight","nextVolume","Piano","_pianoContainer","_drumContainer","_modContainer","_preview","_pianoKeys","_pianoLabels","_modFirstLabels","_modSecondLabels","_modCountLabels","_modCountRects","_playedPitch","_renderedScale","_renderedKey","_renderedPitchCount","_playLiveInput","_updateCursorPitch","_whenMouseReleased","_releaseLiveInput","isDrum","pianoLabel","pianoKey","showLetters","channelVal","firstRow","secondRow","useFirstColor","useSecondColor","usingSecondRow","usingMod","instrumentVal","firstLabel","secondLabel","modCountLabel","modCountRect","scaleFactor","parentElement","getComputedTextLength","squeeze","substr","pitchNameIndex","background","shiftDir","brightness","firstRowText","secondRowText","countText","countRect","firstRowSVG","countSVG","secondRowSVG","flexRow1","flexRow2","flexContainer","modKey","_cursorPitch","topPitch","bottomPitch","topRange","bottomRange","pitchHeight","versionPrefix","keyToVersion","versionToKey","generateUid","toString","compareSongs","versions","compareVersions","SongRecovery","_song","songs","songsByUid","itemKey","uid","songData","newName","Date","clearTimeout","_saveVersionTimeoutHandle","alert","stack","getAllRecoveredSongs","currentSong","newWork","mostRecentTime","work","newVersion","newKey","minSpan","spanMult","indexToDiscard","currentTime","newerTime","removeItem","leastImportantSong","leastImportance","POSITIVE_INFINITY","maximumSongCount","timeScale","iframe","SongRecoveryPrompt","_songContainer","versionMenu","toLocaleString","player","contentWindow","Event","SpectrumEditor","_spectrumIndex","_arrow","ThemePrompt","_themeSelect","lastTheme","setTheme","colorTheme","_previewTheme","h3","TipPrompt","_closeButton","Box","_x","_y","_text","_label","font-family","font-weight","_rect","_renderedIndex","_renderedDim","_renderedSelected","_renderedColor","dim","selected","TrackEditor","_barDropDown","_boxContainer","g","_barNumberContainer","_boxHighlight","_barEditorPath","_select","_grid","_barNumbers","_mouseStartBar","_mouseStartChannel","_mouseBar","_mouseChannel","_mousePressed","_channelHeight","_renderedPatternCount","_touchMode","_barDropDownBar","_lastScrollTime","_barDropDownGetOpenedPosition","_barDropDownHandler","moveBarOffset","insertBars","_barScrollBar","deleteBars","_whenSelectChanged","setPattern","_whenSelectPressed","_updateSelectPos","_whenSelectMoved","_dragBoxSelection","_whenSelectReleased","_updateMousePos","setTrackSelection","selectionUpdated","setChannelBar","up","patternCount","determinedCursorType","overTrackEditor","changeBarScrollPos","tip","selectedPattern","box","setSize","pathLeft","pos","editorHeight","colors","setIndex","boxSelectionWidth","boxSelectionHeight","boxSelectionBar","boxSelectionChannel","optgroup","canvas","buildOptions","menu","items","buildPresetOptions","idSet","randomGroup","foundAny","moveViolin2","insertBefore","moveFlute2","moveGrandPiano2","setSelectedValue","stringValue","$","trigger","CustomChipCanvas","mouseDown","ctx","getContext","continuousEdit","lastX","lowerBound","upperBound","progress","lastY","fillStyle","fillRect","getComputedChannelColor","_onMouseDown","_onMouseUp","redrawCanvas","SongEditor","_patternEditorPrev","_patternEditor","_patternEditorNext","_trackEditor","_muteEditor","_loopEditor","_octaveScrollBar","_prevBarButton","_nextBarButton","_volumeSlider","_outVolumeBarBg","_volumeBarContainer","_volumeBarBox","_fileMenu","hidden","_editMenu","_optionsMenu","_scaleSelect","map","_keySelect","reverse","_tempoSlider","_tempoStepper","_reverbSlider","_rhythmSelect","_pitchedPresetSelect","_drumPresetSelect","_algorithmSelect","_algorithmSelectRow","onclick","_openPrompt","_instrumentSelect","_instrumentSelectRow","_instrumentVolumeSlider","_instrumentVolumeSliderInputBox","_instrumentVolumeSliderTip","_instrumentVolumeSliderRow","_panSlider","position","_panDropdown","_toggleDropdownMenu","_panSliderInputBox","_panSliderRow","tabindex","_panDelaySlider","_panDelayRow","_panDropdownGroup","_detuneSlider","_detuneSliderInputBox","_detuneSliderRow","_chipWaveSelect","_chipNoiseSelect","_chipWaveSelectRow","_chipNoiseSelectRow","_transitionSelect","_transitionDropdown","_transitionRow","_tieNoteTransitionBox","_tieNoteTransitionRow","_clicklessTransitionBox","_clicklessTransitionRow","_transitionDropdownGroup","_effectsSelect","_filterCutoffSlider","_filterCutoffRow","_filterResonanceSlider","_filterResonanceRow","_filterEnvelopeSelect","_filterEnvelopeRow","_pulseEnvelopeSelect","_pulseEnvelopeRow","_pulseWidthSlider","_pulseWidthRow","_intervalSelect","_intervalSelectRow","_chordSelect","_chordDropdown","_chordSelectRow","_arpeggioSpeedSlider","_arpeggioSpeedRow","_twoNoteArpBox","_twoNoteArpRow","_chordDropdownGroup","_vibratoSelect","_vibratoDropdown","_vibratoSelectRow","_vibratoDepthSlider","_vibratoDepthRow","_vibratoSpeedSlider","_vibratoSpeedRow","_vibratoDelaySlider","_vibratoDelayRow","_vibratoTypeSelect","_vibratoTypeSelectRow","_vibratoDropdownGroup","_phaseModGroup","_feedbackTypeSelect","_feedbackRow1","_spectrumEditor","_spectrumRow","_harmonicsEditor","_harmonicsRow","_drumsetGroup","_modulatorGroup","_instrumentCopyButton","d","_instrumentPasteButton","_customWaveDrawCanvas","_customWavePresetDrop","header","buildHeaderedOptions","_customWaveZoom","_customWaveDraw","_songTitleInputBox","_feedbackAmplitudeSlider","_feedbackEnvelopeSelect","_feedbackRow2","_customInstrumentSettingsGroup","_instrumentCopyGroup","_instrumentSettingsTextRow","_instrumentSettingsGroup","_usedPatternIndicator","fill-rule","_usedInstrumentIndicator","_promptContainer","_patternEditorRow","_patternArea","_trackAndMuteContainer","_trackArea","_settingsArea","margin-right","mainLayer","tabIndex","_wasPlaying","_currentPromptName","_operatorRows","_operatorAmplitudeSliders","_operatorEnvelopeSelects","_operatorFrequencySelects","_drumsetSpectrumEditors","_drumsetEnvelopeSelects","_showModSliders","_newShowModSliders","_modSliderValues","_hasActiveModSliders","_modSliderHandle","_volumeHandle","_barScrollbarHandle","_openPanDropdown","_openVibratoDropdown","_openChordDropdown","_openTransitionDropdown","lastOutVolumeCap","preventScroll","_refocusStageNotEditing","whenUpdated","trackBounds","activeElement","showScrollBar","displayVolumeBar","getFullScreen","targetBeatWidth","minBeatWidth","maxBeatWidth","patternEditorWidth","flexShrink","optionCommands","autoPlay","displayBrowserUrl","wasActive","contains","updateValue","patternUsed","instrumentUsed","lowestSelX","highestSelX","lowestSelY","highestSelY","parent","hide","_modChannelBoxes","channelList","_modInstrumentBoxes","instrumentList","_modSetBoxes","settingList","needReset","_whenSetModSetting","chordIndex","hasAttribute","css","show","alwaysShowSettings","isCarrier","operatorName","_setPrompt","goToBar","_whenKeyUp","onKeyUp","_tempoStepperCaptureNumberKeys","ctrlKey","movePlayheadToMouse","selectChannel","selectAll","duplicatePatterns","firstBar","jumpToEditingBar","muteChannels","nextEmpty","nextUnused","soloChannels","pasteNumbers","pasteNotes","_copyTextToClipboard","_randomGenerated","_randomPreset","prevBar","scrollToSelection","nextDigit","instrumentDigits","_whenPrevBarPressed","_whenNextBarPressed","_animate","_modSliderUpdate","_animateVolume","_setVolumeSlider","setVolume","_whenSetTempo","_whenSetScale","forceScale","_whenSetKey","_whenSetRhythm","forceRhythm","_refocus","selfRef","_whenSetPitchedPreset","_setPreset","_whenSetDrumPreset","_whenSetFeedbackType","_whenSetFeedbackEnvelope","_whenSetAlgorithm","_whenSetInstrument","setInstrument","_whenSetModChannel","setModChannel","_whenSetModInstrument","setModInstrument","setModSetting","_whenSetChipWave","_whenSetNoiseWave","_whenSetFilterEnvelope","_whenSetPulseEnvelope","_whenSetTransition","_whenSetEffects","_whenSetVibrato","_whenSetVibratoType","_whenSetInterval","_whenSetChord","_fileMenuHandler","toBase64String","share","_editMenuHandler","_optionsMenuHandler","toggleDisplayBrowserUrl","savePreferences","_customWavePresetHandler","customWaveArray","maxValue","MIN_VALUE","arrayPoint","arrayStep","operatorNumber","frequencySelect","amplitudeSlider","envelopeSelect","row","spectrumEditor","_modNameRows","_modSetRows","modChannelBox","modInstrumentBox","modNameRow","modSetBox","modSetRow","thisRef","_copyInstrument","bind","_pasteInstrument","autoPlayOption","screen","availWidth","fullScreenOption","dropdown","anyModActive","isAnyModActive","updateModSlider","editor","slider","isSettingForSong","currentVal","_getSliderForModSetting","anySliderActive","promptName","openPrompt","changePos","nav","clipboard","writeText","catch","textField","succeeded","execCommand","play","clearInterval","Selection","_changeTranspose","_changeTrack","x0","x1","y0","y1","json","digit","forInstrument","parsed","_eachSelectedChannel","_eachSelectedPattern","handledPatterns","_eachSelectedBar","patternNumber","cloneNotes","channelCopy","selectionCopy","partDuration","channelCopies","copiedPartDuration","fillSelection","pasteHeight","pasteChannel","patternCopies","copiedBars","pasteWidth","usedPatterns","pasteBar","copiedPatternIndex","reusedIndex","patternCopy","removedPattern","_patternIndexIsUnused","existingPattern","allChannels","anyMuted","anyUnmuted","alreadySoloed","shouldBeMuted","scaleFlags","oldScaleFlags","newScaleValue","newScaleFlags","oldScale","newScale","largerToSmaller","smallerScale","largerScale","roles","bestScore","bestIndexMap","indexMap","score","sparsePitchMap","smallerScalePitch","largerScalePitch","sparseIndex","fullPitchMap","oldLow","newLow","oldHigh","newHigh","nearestPitchDistance","newPitch","generateScaleMap","ChangeNotifier","_watchers","_dirty","watcher","SongDocument","_recovery","_recentChange","_sequenceNumber","_stateShouldBePushed","_recordedNewSong","_waitingToUpdateState","_whenHistoryStateChanged","history","state","hash","_resetSongRecoveryUid","canUndo","sequenceNumber","recoveryUid","_recoveryUid","toJSON","_replaceState","_pushState","forgetLastChange","_getHistoryState","_getHash","fromJSON","_cleanDocument","_normalizeSelection","_updateHistoryState","saveVersion","sessionStorage","songString","_calcVolume","eventName","replaceState","pathname","pushState","currentIndex","oldestIndex","_maximumUndoHistory","forward","back","newSong","_back","commit","_forward","snapToStart","barOffset","innerWidth","getMobileLayout","squashed","getElementById","className","getElementsByClassName","select2","dropdownAutoWidth","siblings","toggle","groups","each","v","autoplay","scrollRestoration","serviceWorker","register","updateViaCache","scope"],"mappings":"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EjB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,IAAM,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,OAChkE,CAAEvK,KAAM,YAAa4I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE9F,KAAQ,KAAMgG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,MAAOhL,UAAa,GAAIiL,SAAY,UAAY,CAAED,UAAa,KAAMhL,UAAa,EAAGiL,SAAY,WAAa,CAAED,UAAa,KAAMhL,UAAa,EAAGiL,SAAY,WAAa,CAAED,UAAa,KAAMhL,UAAa,EAAGiL,SAAY,cAC/lB,CAAEjK,KAAM,kBAAmB4I,YAAa,IAAKK,SAAU,CAAE9F,KAAQ,KAAMgG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,UAAWC,UAAa,CAAC,CAAEC,UAAa,MAAOhL,UAAa,GAAIiL,SAAY,UAAY,CAAED,UAAa,KAAMhL,UAAa,GAAIiL,SAAY,UAAY,CAAED,UAAa,KAAMhL,UAAa,GAAIiL,SAAY,WAAa,CAAED,UAAa,MAAOhL,UAAa,EAAGiL,SAAY,cACrkB,CAAEjK,KAAM,UAAW4I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAClW,CAAEvK,KAAM,cAAe4I,YAAa,GAAIK,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,KAClV,CAAEvK,KAAM,YAAa4I,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,IAAKnB,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACrZ,CAAEvK,KAAM,aAAc4I,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,GAAKnB,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACzZ,CAAEvK,KAAM,eAAgB4I,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,IAAKnB,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC1Z,CAAEvK,KAAM,aAAc4I,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACxZ,CAAEvK,KAAM,UAAW4I,YAAa,IAAKc,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,IAAK,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC9X,CAAEvK,KAAM,aAAc4I,YAAa,IAAKc,SAAS,EAAMU,wBAAyB,IAAKnB,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,QAGhY,CACCvK,KAAM,kBAAmBuI,QAAkC3I,EAAU,CACpE,CAAEI,KAAM,oBAAqB4I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,KACzV,CAAEvK,KAAM,iBAAkB4I,YAAa,GAAID,aAAa,EAAMyB,uBAAwB,EAAGnB,SAAU,CAAE9F,KAAQ,OAAQgG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWjN,KAAQ,WAAYkN,SAAY,QAASC,QAAW,SAClU,CAAEzJ,KAAM,cAAe4I,YAAa,GAAIwB,uBAAwB,EAAGnB,SAAU,CAAE9F,KAAQ,OAAQgG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWjN,KAAQ,WAAYkN,SAAY,QAASC,QAAW,SAC5S,CAAEzJ,KAAM,aAAc4I,YAAa,GAAID,aAAa,EAAMM,SAAU,CAAE9F,KAAQ,OAAQgG,QAAW,kBAAmBD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWjN,KAAQ,WAAYkN,SAAY,QAASC,QAAW,SACnS,CAAEzJ,KAAM,iBAAkB4I,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,OAAQD,WAAc,OAAQE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,MACrZ,CAAEvK,KAAM,WAAY4I,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE9F,KAAQ,WAAY+F,WAAc,YAAaC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACpZ,CAAEvK,KAAM,aAAc4I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE9F,KAAQ,YAAagG,QAAW,SAAUD,WAAc,OAAQE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,EAAGC,eAAkB,UAAWC,SAAY,MAAOC,QAAW,QAASU,UAAa,CAAC,EAAG,EAAG,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC/W,CAAEnK,KAAM,iBAAkB4I,YAAa,IAAKD,aAAa,EAAMM,SAAU,CAAE9F,KAAQ,KAAMgG,QAAW,SAAUD,WAAc,OAAQE,MAAS,WAAYC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,WAAYE,QAAW,OAAQE,UAAa,YAAaC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMhL,UAAa,GAAIiL,SAAY,UAAY,CAAED,UAAa,KAAMhL,UAAa,EAAGiL,SAAY,YAAc,CAAED,UAAa,MAAOhL,UAAa,EAAGiL,SAAY,UAAY,CAAED,UAAa,KAAMhL,UAAa,EAAGiL,SAAY,aACzlB,CAAEjK,KAAM,aAAc4I,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,GAAKnB,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,WAAYE,MAAS,WAAYC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,WAAYgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAC1Z,CAAEvK,KAAM,WAAY4I,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACrZ,CAAEvK,KAAM,UAAW4I,YAAa,IAAKD,aAAa,EAAMe,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,YAAaE,MAAS,QAASC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAClZ,CAAEvK,KAAM,QAAS4I,YAAa,GAAIK,SAAU,CAAE9F,KAAQ,OAAQ+F,WAAc,OAAQC,QAAW,SAAUC,MAAS,UAAWC,eAAkB,IAAKC,gBAAmB,GAAIC,eAAkB,UAAWjN,KAAQ,WAAYkN,SAAY,UAAWC,QAAW,SAC9P,CAAEzJ,KAAM,WAAY4I,YAAa,GAAIK,SAAU,CAAE9F,KAAQ,KAAMgG,QAAW,SAAUD,WAAc,OAAQE,MAAS,kBAAmBC,eAAkB,IAAMC,gBAAmB,EAAGC,eAAkB,SAAUE,QAAW,OAAQE,UAAa,UAAWC,aAAgB,KAAMC,kBAAqB,EAAGC,iBAAoB,SAAUC,UAAa,CAAC,CAAEC,UAAa,KAAMhL,UAAa,GAAIiL,SAAY,UAAY,CAAED,UAAa,KAAMhL,UAAa,GAAIiL,SAAY,UAAY,CAAED,UAAa,MAAOhL,UAAa,EAAGiL,SAAY,UAAY,CAAED,UAAa,MAAOhL,UAAa,GAAIiL,SAAY,aAClkB,CAAEjK,KAAM,WAAY4I,YAAa,GAAIK,SAAU,CAAE9F,KAAQ,MAAOgG,QAAW,SAAUD,WAAc,aAAcE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,SAAUc,WAAc,EAAGC,cAAiB,WAAYb,QAAW,UACzQ,CAAEzJ,KAAM,YAAa4I,YAAa,IAAKc,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,YAAaE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MACpY,CAAEvK,KAAM,eAAgB4I,YAAa,IAAKc,SAAS,EAAMU,wBAAyB,EAAGnB,SAAU,CAAE9F,KAAQ,QAASgG,QAAW,SAAUD,WAAc,QAASE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUjN,KAAQ,SACrQ,CAAE0D,KAAM,WAAY4I,YAAa,GAAIK,SAAU,CAAE9F,KAAQ,YAAagG,QAAW,SAAUD,WAAc,QAASE,MAAS,UAAWC,eAAkB,IAAMC,gBAAmB,GAAIC,eAAkB,SAAUC,SAAY,QAASC,QAAW,QAASU,UAAa,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KACvW,CAAEnK,KAAM,aAAc4I,YAAa,IAAKK,SAAU,CAAE9F,KAAQ,WAAYgG,QAAW,SAAUD,WAAc,cAAeE,MAAS,UAAWC,eAAkB,KAAMC,gBAAmB,GAAIC,eAAkB,UAAWgB,SAAY,CAAC,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,gtBCxR5TE,EAAwEC,EAAYC,uBACnG,IAAkB,IAAAC,EAAAC,EAAAF,GAAIG,EAAAF,EAAAG,QAAAD,EAAAE,KAAAF,EAAAF,EAAAG,OAAE,CAAnB,IAAME,EAAGH,EAAA/K,MACb,GAAIkL,aAAeC,KAClBR,EAAQS,YAAYF,QACd,GAAmB,iBAARA,EACjBP,EAAQS,YAAYC,SAASC,eAAeJ,SACtC,GAAmB,mBAARA,EACjBR,EAAiBC,EAAS,CAACO,WACrB,GAAIK,MAAMC,QAAQN,GACxBR,EAAiBC,EAASO,QACpB,GAAIA,GAAyB,oBAAXO,QAA0D,mBAAzBP,EAAIO,OAAOC,UACpEhB,EAAiBC,EAAOgB,EAAMT,SACxB,GAAIA,GAAOA,EAAIU,cAAgBC,QAAUlB,aAAmBmB,YAElE,IAAkB,IAAAC,GAAAC,OAAA,EAAAlB,EAAAe,OAAOlL,KAAKuK,KAAIe,EAAAF,EAAAf,QAAAiB,EAAAhB,KAAAgB,EAAAF,EAAAf,OAAE,CAA/B,IAAMkB,EAAGD,EAAAjM,MACPA,EAAQkL,EAAIgB,GAST,GAAY,UAARA,EACS,iBAAVlM,EACV2K,EAAQwB,aAAa,QAASnM,GACpBuL,MAAMC,QAAQN,IAASlL,GAA2B,oBAAXyL,QAA4D,mBAA3BzL,EAAMyL,OAAOC,UAC/Ff,EAAQwB,aAAa,QAASR,EAAI3L,GAAOoM,KAAK,MAE9CC,QAAQC,KAAK,WAAaJ,EAAM,WAAclM,EAAQ,QAAW2K,EAAQ4B,QAAU,kBAE9E,GAAY,UAARL,EACV,GAAIlM,GAASA,EAAM4L,cAAgBC,WAClC,IAAuB,IAAAW,GAAAC,OAAA,EAAA3B,EAAAe,OAAOlL,KAAKX,KAAM0M,EAAAF,EAAAxB,QAAA0B,EAAAzB,KAAAyB,EAAAF,EAAAxB,OAAE,CAAtC,IAAM2B,EAAQD,EAAA1M,MACd2M,KAAuChC,EAASiC,MAE5CjC,EAASiC,MAAMD,GAAY3M,EAAM2M,GAGbhC,EAASiC,MAAMC,YAAYF,EAAU3M,EAAM2M,2GAIxEhC,EAAQwB,aAAaD,EAAKlM,OAEC,mBAAlB,EAEJ2K,EAASuB,GAAOlM,EACM,kBAAlB,EAENA,EAAO2K,EAAQwB,aAAaD,EAAK,IAChCvB,EAAQmC,gBAAgBZ,GAG7BvB,EAAQwB,aAAaD,EAAKlM,0GAK5B2K,EAAQS,YAAYC,SAASC,eAAeJ,sGAG9C,OAAOP,EAGD,IAAMoC,EAAgB,6VC8IhBC,iBD5Ia,IAAApC,EAAA,GAAAqC,EAAA,EAAAA,EAAAC,UAAAxQ,OAAAuQ,IAAArC,EAAAqC,GAAAC,UAAAD,GACzB,OAAO5B,SAAS8B,cAAcC,yBAAyBxC,EAAKwB,SC4IhDiB,iBDxIY,IAAAzC,EAAA,GAAAqC,EAAA,EAAAA,EAAAC,UAAAxQ,OAAAuQ,IAAArC,EAAAqC,GAAAC,UAAAD,GAUxB,IATA,IAAMK,EAA6BjC,SAASkC,yBAQtCC,GAAqB,IAAIC,WAAYC,gBAAgB,2CAA+C9C,EAAKwB,OAAS,SAAU,iBAAiBuB,gBACnH,OAAzBH,EAAUI,YAChBvC,SAASwC,WAAWL,EAAUI,YAAY,GAC1CN,EAASlC,YAAYoC,EAAUI,YAGhC,OAAON,cC2HGQ,GACJd,EAAMc,GAAQ,eAAC,IAAAlD,EAAA,GAAAqC,EAAA,EAAAA,EAAAC,UAAAxQ,OAAAuQ,IAAArC,EAAAqC,GAAAC,UAAAD,GAAwB,OAAAvC,EAAiBW,SAAS0C,cAAcD,GAAOlD,SAD7F,IAAmB,IAAAoD,EAAAlD,EAAA,+jBAA+jBmD,MAAM,MAAIlC,EAAAiC,EAAAhD,QAAAe,EAAAd,KAAAc,EAAAiC,EAAAhD,OAAA,GAA7kBe,EAAA/L,wHAGJkO,GAEV,GADMb,EAAKa,GAAQ,eAAC,IAAAtD,EAAA,GAAAqC,EAAA,EAAAA,EAAAC,UAAAxQ,OAAAuQ,IAAArC,EAAAqC,GAAAC,UAAAD,GAAwB,OAAAvC,EAA8BW,SAAS8C,gBAAgBpB,EAAOmB,GAAOtD,IAC7G,IAAIhD,KAAKsG,GAAO,CACnB,IAAME,EAAgBF,EAAKjG,QAAQ,KAAM,KACnCoF,EAAKe,GAAiB,eAAC,IAAAxD,EAAA,GAAAqC,EAAA,EAAAA,EAAAC,UAAAxQ,OAAAuQ,IAAArC,EAAAqC,GAAAC,UAAAD,GAAwB,OAAAvC,EAA8BW,SAAS8C,gBAAgBpB,EAAOmB,GAAOtD,UAJ5H,IAAmB,IAAAqB,EAAAnB,EAAA,8vBAA8vBmD,MAAM,MAAIzB,EAAAP,EAAAjB,QAAAwB,EAAAvB,KAAAuB,EAAAP,EAAAjB,OAAA,GAA5wBwB,EAAAxM,+GC1MFqO,EA6uCLlG,qBACNmG,KAAKC,YAAYC,QAIXrG,+BAA+BsG,EAAYC,GACjD,GAA2F,SAAvFC,iBAAiBL,KAAKM,GAAeC,iBAAiB,uBAAuBC,OAAmB,CACnG,IAAIC,EAAsBV,EAAYW,gBAAgBP,EAAMC,GAE5D,IAAIO,EAAQ,cAKZ,MAAsB,CAAEC,iBAJUb,EAAYc,YAAaF,EAAMG,KAAKL,EAAKG,kBAAsC,IAIlDG,eAH/BhB,EAAYc,YAAaF,EAAMG,KAAKL,EAAKM,gBAAoC,IAGXC,cAFnEjB,EAAYc,YAAaF,EAAMG,KAAKL,EAAKO,eAAmC,IAEwBC,YADtGlB,EAAYc,YAAaF,EAAMG,KAAKL,EAAKQ,aAAiC,KAIvG,OAAOlB,EAAYW,gBAAgBP,EAAMC,GAIpCvG,uBAAuBsG,EAAYC,GACzC,GAA2F,SAAvFC,iBAAiBL,KAAKM,GAAeC,iBAAiB,uBAAuBC,OAEhF,OAAIJ,EAAUD,EAAKe,kBACXnB,EAAYoB,cAAcf,EAAUL,EAAYoB,cAAc/S,QAC3DgS,EAAUD,EAAKe,kBAAoBf,EAAKiB,kBAC3CrB,EAAYsB,eAAejB,EAAUD,EAAKe,mBAAqBnB,EAAYsB,cAAcjT,QAEzF2R,EAAYuB,aAAalB,EAAUD,EAAKe,kBAAoBf,EAAKiB,mBAAqBrB,EAAYuB,YAAYlT,QAKtH,GAAI2R,EAAYE,YAAYsB,IAAInB,GAC/B,OAAOL,EAAYE,YAAYuB,IAAIpB,GAInC,GAAIA,EAAUD,EAAKe,kBAAmB,CAErC,MAAMO,GAAoCpB,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1FmB,GAAyCrB,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/FoB,GAAoCtB,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1FqB,GAAyCvB,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/FsB,GAAoCxB,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1FuB,GAAyCzB,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/FwB,GAAkC1B,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFyB,GAAuC3B,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7F0B,GAAkC5B,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxF2B,GAAuC7B,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7F4B,GAAkC9B,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxF6B,GAAuC/B,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7F8B,GAAiChC,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvF+B,GAAsCjC,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5FgC,GAAiClC,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvFiC,GAAsCnC,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5FkC,GAAiCpC,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvFmC,GAAsCrC,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5FoC,GAA+BtC,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFqC,GAAoCvC,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FsC,GAA+BxC,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFuC,GAAoCzC,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FwC,GAA+B1C,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFyC,GAAoC3C,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAEhG,IAaI0C,EAAkC,CAAErC,iBAbN,SAAYa,EAA4BrB,GAAWsB,EAAgC3T,EAAOmK,qBAAwB,KAAO,IAAO,MAC7JyJ,GAA4B,GAAMC,EAAgChT,KAAKsU,MAAM9C,EAAU,IAAQ,OAC/FyB,GAA4B,GAAMC,EAAgClT,KAAKsU,MAAM9C,EAAU,IAAQ,KAWrBW,eAV/C,SAAYgB,EAA0B3B,GAAW4B,EAA8BjU,EAAOmK,qBAAwB,KAAO,IAAO,MACvJ+J,GAA0B,GAAMC,EAA8BtT,KAAKsU,MAAM9C,EAAU,IAAQ,OAC3F+B,GAA0B,GAAMC,EAA8BxT,KAAKsU,MAAM9C,EAAU,IAAQ,KAQkBY,cAPnF,SAAYqB,EAAyBjC,GAAWkC,EAA6BvU,EAAOmK,qBAAwB,KAAO,IAAO,MACpJqK,GAAyB,GAAMC,EAA6B5T,KAAKsU,MAAM9C,EAAU,IAAQ,OACzFqC,GAAyB,GAAMC,EAA6B9T,KAAKsU,MAAM9C,EAAU,IAAQ,KAKqDa,YAJtH,SAAY0B,EAAuBvC,GAAWwC,EAA2B7U,EAAOmK,qBAAwB,KAAO,IAAO,MAC9I2K,GAAuB,GAAMC,EAA2BlU,KAAKsU,MAAM9C,EAAU,IAAQ,OACrF2C,GAAuB,GAAMC,EAA2BpU,KAAKsU,MAAM9C,EAAU,IAAQ,MAI1F,OADAL,EAAYE,YAAYkD,IAAI/C,EAAS6C,GAC9BA,EAGH,GAAI7C,EAAUD,EAAKe,kBAAoBf,EAAKiB,kBAAmB,CAEnE,MAAMgC,GAAoC/C,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1F8C,GAAyChD,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/F+C,GAAoCjD,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1FgD,GAAyClD,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/FiD,GAAoCnD,iBAAiBL,KAAKM,GAAeC,iBAAiB,iCAC1FkD,GAAyCpD,iBAAiBL,KAAKM,GAAeC,iBAAiB,uCAC/FmD,GAAkCrD,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFoD,GAAuCtD,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7FqD,GAAkCvD,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFsD,GAAuCxD,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7FuD,GAAkCzD,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFwD,GAAuC1D,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7FyD,GAAiC3D,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvF0D,GAAsC5D,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5F2D,GAAiC7D,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvF4D,GAAsC9D,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5F6D,GAAiC/D,iBAAiBL,KAAKM,GAAeC,iBAAiB,8BACvF8D,GAAsChE,iBAAiBL,KAAKM,GAAeC,iBAAiB,oCAC5F+D,GAA+BjE,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFgE,GAAoClE,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FiE,GAA+BnE,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFkE,GAAoCpE,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FmE,GAA+BrE,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFoE,GAAoCtE,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAEhG,IAaI0C,EAAkC,CAAErC,iBAbN,SAAYwC,GAA8BhD,EAAUD,EAAKe,oBAAsBmC,EAAiCtV,EAAOqK,qBAAwB,KAAO,IAAO,MAC1LkL,EAA2BlD,GAAWmD,GAAiC,OACvEC,EAA2BpD,GAAWqD,GAAiC,KAWG1C,eAV/C,SAAY2C,GAA4BtD,EAAUD,EAAKe,oBAAsByC,EAA+B5V,EAAOqK,qBAAwB,KAAO,IAAO,MACpLwL,EAAyBxD,GAAWyD,GAA+B,OACnEC,EAAyB1D,GAAW2D,GAA+B,KAQ0C/C,cAPnF,SAAYgD,GAA2B5D,EAAUD,EAAKe,oBAAsB+C,EAA8BlW,EAAOqK,qBAAwB,KAAO,IAAO,MACjL8L,EAAwB9D,GAAW+D,GAA8B,OACjEC,EAAwBhE,GAAWiE,GAA8B,KAK6EpD,YAJtH,SAAYqD,GAAyBlE,EAAUD,EAAKe,oBAAsBqD,EAA4BxW,EAAOqK,qBAAwB,KAAO,IAAO,MAC3KoM,EAAsBpE,GAAWqE,GAA4B,OAC7DC,EAAsBtE,GAAWuE,GAA4B,MAIlE,OADA5E,EAAYE,YAAYkD,IAAI/C,EAAS6C,GAC9BA,EAEH,CAEJ,MAAM2B,GAAkCvE,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFsE,GAAuCxE,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7FuE,GAAkCzE,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxFwE,GAAuC1E,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7FyE,GAAkC3E,iBAAiBL,KAAKM,GAAeC,iBAAiB,+BACxF0E,GAAuC5E,iBAAiBL,KAAKM,GAAeC,iBAAiB,qCAC7F2E,GAAgC7E,iBAAiBL,KAAKM,GAAeC,iBAAiB,6BACtF4E,GAAqC9E,iBAAiBL,KAAKM,GAAeC,iBAAiB,mCAC3F6E,GAAgC/E,iBAAiBL,KAAKM,GAAeC,iBAAiB,6BACtF8E,GAAqChF,iBAAiBL,KAAKM,GAAeC,iBAAiB,mCAC3F+E,GAAgCjF,iBAAiBL,KAAKM,GAAeC,iBAAiB,6BACtFgF,GAAqClF,iBAAiBL,KAAKM,GAAeC,iBAAiB,mCAC3FiF,GAA+BnF,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFkF,GAAoCpF,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FmF,GAA+BrF,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFoF,GAAoCtF,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FqF,GAA+BvF,iBAAiBL,KAAKM,GAAeC,iBAAiB,4BACrFsF,GAAoCxF,iBAAiBL,KAAKM,GAAeC,iBAAiB,kCAC1FuF,GAA6BzF,iBAAiBL,KAAKM,GAAeC,iBAAiB,0BACnFwF,GAAkC1F,iBAAiBL,KAAKM,GAAeC,iBAAiB,gCACxFyF,GAA6B3F,iBAAiBL,KAAKM,GAAeC,iBAAiB,0BACnF0F,GAAkC5F,iBAAiBL,KAAKM,GAAeC,iBAAiB,gCACxF2F,GAA6B7F,iBAAiBL,KAAKM,GAAeC,iBAAiB,0BACnF4F,GAAkC9F,iBAAiBL,KAAKM,GAAeC,iBAAiB,gCAE9F,IAaI0C,EAAkC,CAAErC,iBAbN,SAAYgE,GAA4BxE,EAAUD,EAAKe,kBAAoBf,EAAKiB,oBAAsByD,EAA+B9W,EAAOuK,mBAAsB,KAAO,IAAO,MAC7MwM,EAAyB1E,GAAW2E,GAA+B,OACnEC,EAAyB5E,GAAW6E,GAA+B,KAWOlE,eAV/C,SAAYmE,GAA0B9E,EAAUD,EAAKe,kBAAoBf,EAAKiB,oBAAsB+D,EAA6BpX,EAAOuK,mBAAsB,KAAO,IAAO,MACvM8M,EAAuBhF,GAAWiF,GAA6B,OAC/DC,EAAuBlF,GAAWmF,GAA6B,KAQ8CvE,cAPnF,SAAYwE,GAAyBpF,EAAUD,EAAKe,kBAAoBf,EAAKiB,oBAAsBqE,EAA4B1X,EAAOuK,mBAAsB,KAAO,IAAO,MACpMoN,EAAsBtF,GAAWuF,GAA4B,OAC7DC,EAAsBxF,GAAWyF,GAA4B,KAKiF5E,YAJtH,SAAY6E,GAAuB1F,EAAUD,EAAKe,kBAAoBf,EAAKiB,oBAAsB2E,EAA0BhY,EAAOuK,mBAAsB,KAAO,IAAO,MAC9L0N,EAAoB5F,GAAW6F,GAA0B,OACzDC,EAAoB9F,GAAW+F,GAA0B,MAI9D,OADApG,EAAYE,YAAYkD,IAAI/C,EAAS6C,GAC9BA,GAQJpJ,gBAAgBlI,GACtBqO,KAAKM,EAAc8F,YAAcpG,KAAKqG,OAAO1U,GAC7C,MAAM2U,EAA8BvJ,SAASwJ,cAAc,4BACzC,MAAdD,GACHA,EAAWzI,aAAa,UAAWwC,iBAAiBtD,SAASsC,iBAAiBkB,iBAAiB,2BAGhGP,KAAKwG,cAGC3M,mBAAmBlI,GACzB,OAAO0O,iBAAiBL,KAAKM,GAAeC,iBAAiB5O,IAz6ChDoO,EAAAE,YAA0C,IAAIwG,IAErC1G,EAAAsG,OAAqC,CAC3DK,eAAgB,mzJAiHhBC,mBAAoB,o0JAiHpBC,gBAAiB,ooKAyHjBC,kBAAmB,iuJAgHnBC,OAAU,2uJAgHVC,OAAU,mwJAgHVC,SAAY,2yIAgHZC,mBAAoB,ouJAgHpBC,gBAAiB,sjKA2HKnH,EAAAoH,WAAqB,qBACrBpH,EAAAqH,iBAA2B,2BAC3BrH,EAAAsH,aAAuB,uBACvBtH,EAAAuH,SAAmB,kBACnBvH,EAAAwH,YAAsB,sBACtBxH,EAAAyH,cAAwB,wBACxBzH,EAAA0H,aAAuB,uBACvB1H,EAAA2H,cAAwB,wBACxB3H,EAAA4H,iBAA2B,4BAC3B5H,EAAA6H,WAAqB,qBACrB7H,EAAA8H,WAAqB,qBACrB9H,EAAA+H,mBAA6B,8BAC7B/H,EAAAgI,cAAwB,yBACxBhI,EAAAiI,gBAA0B,0BAC1BjI,EAAAkI,MAAgB,eAChBlI,EAAAmI,UAAoB,oBACpBnI,EAAAoI,cAAwB,yBACxBpI,EAAAqI,cAAwB,yBACxBrI,EAAAsI,gBAA0B,2BAC1BtI,EAAA0B,yBAAmC,qCACnC1B,EAAA2B,8BAAwC,2CACxC3B,EAAA4B,yBAAmC,qCACnC5B,EAAA6B,8BAAwC,2CACxC7B,EAAA8B,yBAAmC,qCACnC9B,EAAA+B,8BAAwC,2CACxC/B,EAAAgC,uBAAiC,mCACjChC,EAAAiC,4BAAsC,yCACtCjC,EAAAkC,uBAAiC,mCACjClC,EAAAmC,4BAAsC,yCACtCnC,EAAAoC,uBAAiC,mCACjCpC,EAAAqC,4BAAsC,yCACtCrC,EAAAsC,sBAAgC,kCAChCtC,EAAAuC,2BAAqC,wCACrCvC,EAAAwC,sBAAgC,kCAChCxC,EAAAyC,2BAAqC,wCACrCzC,EAAA0C,sBAAgC,kCAChC1C,EAAA2C,2BAAqC,wCACrC3C,EAAA4C,oBAA8B,gCAC9B5C,EAAA6C,yBAAmC,sCACnC7C,EAAA8C,oBAA8B,gCAC9B9C,EAAA+C,yBAAmC,sCACnC/C,EAAAgD,oBAA8B,gCAC9BhD,EAAAiD,yBAAmC,sCACnCjD,EAAA6E,uBAAiC,mCACjC7E,EAAA8E,4BAAsC,yCACtC9E,EAAA+E,uBAAiC,mCACjC/E,EAAAgF,4BAAsC,yCACtChF,EAAAiF,uBAAiC,mCACjCjF,EAAAkF,4BAAsC,yCACtClF,EAAAmF,qBAA+B,iCAC/BnF,EAAAoF,0BAAoC,uCACpCpF,EAAAqF,qBAA+B,iCAC/BrF,EAAAsF,0BAAoC,uCACpCtF,EAAAuF,qBAA+B,iCAC/BvF,EAAAwF,0BAAoC,uCACpCxF,EAAAyF,oBAA8B,gCAC9BzF,EAAA0F,yBAAmC,sCACnC1F,EAAA2F,oBAA8B,gCAC9B3F,EAAA4F,yBAAmC,sCACnC5F,EAAA6F,oBAA8B,gCAC9B7F,EAAA8F,yBAAmC,sCACnC9F,EAAA+F,kBAA4B,8BAC5B/F,EAAAgG,uBAAiC,oCACjChG,EAAAiG,kBAA4B,8BAC5BjG,EAAAkG,uBAAiC,oCACjClG,EAAAmG,kBAA4B,8BAC5BnG,EAAAoG,uBAAiC,oCACjCpG,EAAAqD,yBAAmC,qCACnCrD,EAAAsD,8BAAwC,2CACxCtD,EAAAuD,yBAAmC,qCACnCvD,EAAAwD,8BAAwC,2CACxCxD,EAAAyD,yBAAmC,qCACnCzD,EAAA0D,8BAAwC,2CACxC1D,EAAA2D,uBAAiC,mCACjC3D,EAAA4D,4BAAsC,yCACtC5D,EAAA6D,uBAAiC,mCACjC7D,EAAA8D,4BAAsC,yCACtC9D,EAAA+D,uBAAiC,mCACjC/D,EAAAgE,4BAAsC,yCACtChE,EAAAiE,sBAAgC,kCAChCjE,EAAAkE,2BAAqC,wCACrClE,EAAAmE,sBAAgC,kCAChCnE,EAAAoE,2BAAqC,wCACrCpE,EAAAqE,sBAAgC,kCAChCrE,EAAAsE,2BAAqC,wCACrCtE,EAAAuE,oBAA8B,gCAC9BvE,EAAAwE,yBAAmC,sCACnCxE,EAAAyE,oBAA8B,gCAC9BzE,EAAA0E,yBAAmC,sCACnC1E,EAAA2E,oBAA8B,gCAC9B3E,EAAA4E,yBAAmC,sCACnC5E,EAAAuI,mBAA6B,+BAC7BvI,EAAAwI,sBAAgC,mCAChCxI,EAAAyI,mBAA6B,+BAC7BzI,EAAA0I,sBAAgC,mCAChC1I,EAAA2I,iBAA2B,6BAC3B3I,EAAA4I,oBAA8B,iCAC9B5I,EAAA6I,wBAAkC,mCAClC7I,EAAA8I,qBAA+B,gCAC/B9I,EAAA+I,iBAA2B,2BAC3B/I,EAAAgJ,mBAA6B,6BAC7BhJ,EAAAiJ,gBAA0B,2BAC1BjJ,EAAAkJ,gBAA0B,2BAC1BlJ,EAAAmJ,iBAA2B,4BAC3BnJ,EAAAoJ,cAAwB,yBACxBpJ,EAAAqJ,gBAA0B,2BAC1BrJ,EAAAsJ,sBAAgC,kCAChCtJ,EAAAuJ,oBAA8B,gCAE9BvJ,EAAAoB,cAAgD5P,EAAU,CAChF,CACCI,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,UACNiP,iBAAkB,mCAClBG,eAAgB,iCAChBC,cAAe,gCACfC,YAAa,iCAGQlB,EAAAsB,cAAgD9P,EAAU,CAChF,CACCI,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,8BACX,CACFtP,KAAM,SACNiP,iBAAkB,kCAClBG,eAAgB,gCAChBC,cAAe,+BACfC,YAAa,gCAGQlB,EAAAuB,YAA8C/P,EAAU,CAC9E,CACCI,KAAM,OACNiP,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACX,CACFtP,KAAM,OACNiP,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACX,CACFtP,KAAM,OACNiP,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,4BACX,CACFtP,KAAM,OACNiP,iBAAkB,gCAClBG,eAAgB,8BAChBC,cAAe,6BACfC,YAAa,8BAoLSlB,EAAAO,EAAkCvD,SAASwM,KAAKzM,YAAY4B,EAAKJ,MAAM,CAAExJ,KAAM,cCn6CxG,MAAM0U,EAAgCzM,SAAS0M,KAAK3M,YAAY4B,EAAKgL,IAAI,CAAEpL,MAAO,4CACjFI,EAAKgL,IAAI,CAAEpL,MAAO,sCCIHpP,EAAsBsC,EAAoBmY,GACzD,IAAK,IAAIxb,EAAY,EAAGA,EAAIqD,EAAMpD,OAAQD,IACzCqD,EAAMrD,IAAMwb,EAQd,SAASC,EAAUC,GAClB,IALD,SAAoBA,GACnB,SAASA,GAAOA,EAAKA,EAAI,GAIpBC,CAAWD,GAAI,MAAM,IAAIja,MAAM,0CACpC,OAAOhB,KAAKmb,MAAMnb,KAAK6B,IAAIoZ,GAAKjb,KAAK6B,IAAI,aAwO1BxB,EAA4BuC,EAAoBwY,GAC/D,MAAMC,EAAsBL,EAAUI,GACtC,GAAIA,EAAkB,EAAG,MAAM,IAAIpa,MAAM,wCAGzC,IAAK,IAAIsa,EAAeD,EAAc,EAAGC,GAAQ,EAAGA,IAAQ,CAC3D,MAAMC,EAAoB,GAAKD,EACzBE,EAAuBD,GAAa,EACpCE,EAAiBF,GAAa,EAC9BG,EAAqC,EAAV1b,KAAKkC,GAAWuZ,EAC3CE,EAAuB3b,KAAKmC,IAAIuZ,GAChCE,EAAuB5b,KAAKoC,IAAIsZ,GAChCG,EAA+B,EAAMF,EAE3C,IAAK,IAAIG,EAAqB,EAAGA,EAAaV,EAAiBU,GAAcL,EAAQ,CACpF,MAAMM,EAAsBD,EACtBE,EAAoBD,EAAcP,EAClCS,EAAsBF,EAAcR,EACpCW,EAAoBD,EAAcT,EAClCW,EAAoBF,EAAcV,EAClCa,EAAqBxZ,EAAMmZ,GAC3BM,EAAqBzZ,EAAMqZ,GACjCrZ,EAAMmZ,GAAeK,EAAaC,EAClCzZ,EAAMoZ,IAAc,EACpBpZ,EAAMqZ,GAAeG,EAAaC,EAClCzZ,EAAMsZ,IAAc,EACpB,IAAII,EAAYX,EACZY,GAAaX,EACbY,EAAgB,EAChBC,EAAgB,EACpB,IAAK,IAAIrc,EAAgB,EAAGA,EAAQob,EAAcpb,IAAS,CAC1D,MAAMsc,EAAkBX,EAAc3b,EAChCuc,EAAkBV,EAAc7b,EAChCwc,EAAkBX,EAAc7b,EAChCyc,EAAkBV,EAAY/b,EAC9B0c,EAAgBla,EAAM8Z,GACtBK,EAAgBna,EAAM+Z,GACtBK,EAAgBpa,EAAMga,GACtBK,EAAgBra,EAAMia,GACtBK,EAAgBJ,EAAQC,EACxBI,EAAgBH,EAAQC,EAC9Bra,EAAM8Z,GAAWI,EAAQC,EACzBna,EAAM+Z,GAAWM,EAAQD,EACzBpa,EAAMga,GAAWM,EAAQZ,EAAIa,EAAQZ,EACrC3Z,EAAMia,GAAWM,EAAQb,EAAIY,EAAQX,EACrC,MAAMa,EAAgBvB,EAAuBS,EAAIE,EAC3Ca,EAAgBxB,EAAuBU,EAAIE,EACjDD,EAAQF,EACRG,EAAQF,EACRD,EAAIc,EACJb,EAAIc,IAsCP,IAAK,IAAIjd,EAAgB,EAAGA,EAAQgb,EAAiBhb,GAAS,EAAG,CAChE,MAAMkd,EAAiBld,EAAQ,EACzBmd,EAAiBnd,EAAQ,EACzBod,EAAiBpd,EAAQ,EACzB0c,EAAgBla,EAAMxC,GACtB2c,EAAgC,EAAhBna,EAAM0a,GACtBG,EAAgB7a,EAAM2a,GACtBG,EAAgC,EAAhB9a,EAAM4a,GACtBN,EAAgBJ,EAAQW,EACxBN,EAAgBL,EAAQW,EAC9B7a,EAAMxC,GAAS8c,EAAQH,EACvBna,EAAM0a,GAAUJ,EAAQH,EACxBna,EAAM2a,GAAUJ,EAAQO,EACxB9a,EAAM4a,GAAUL,EAAQO,GAvU1B,SAA0B9a,EAAoBwY,GAC7C,MAAMuC,EAAmB3C,EAAUI,GACnC,GAAIuC,EAAW,GAAI,MAAM,IAAI3c,MAAM,mDACnC,MAAM4c,EAAqB,GAAKD,EAChC,IAAK,IAAIpe,EAAY,EAAGA,EAAI6b,EAAiB7b,IAAK,CAEjD,IAAIse,EAKJ,GAJAA,GAAU,MAAJte,IAAe,GAAW,MAAJA,IAAe,EAC3Cse,GAAU,MAAJA,IAAe,GAAW,MAAJA,IAAe,EAC3CA,GAAU,MAAJA,IAAe,GAAW,KAAJA,IAAe,EAC3CA,GAAMA,GAAK,GAAW,IAAJA,IAAa,IAAOD,EAClCC,EAAIte,EAAG,CACV,IAAIue,EAAelb,EAAMrD,GACzBqD,EAAMrD,GAAKqD,EAAMib,GACjBjb,EAAMib,GAAKC,IA4TbC,CAAiBnb,EAAOwY,GD9VfR,EAAelK,WAAWsN,YAAc,IACjD7P,SAASsC,gBAAgBwN,UAAUC,IAAI,wBAExC/P,SAAS0M,KAAKsD,YAAYvD,GAG1BzM,SAASwM,KAAKzM,YAAY4B,EAAKJ,MAAM,CAAExJ,KAAM,YAAc,6lSA6GvCiL,EAAY+H,sBAAsB/H,EAAYqH,sPAMnDrH,EAAYqH,iJAGNrH,EAAY+H,4CACZ/H,EAAYqH,gpBAqBvBrH,EAAYwH,+BACPxH,EAAYqH,2pGAwHjBrH,EAAY8H,yFAIZ9H,EAAYwH,wHAOPxH,EAAYyH,m6CAgEZzH,EAAYqH,8jHAyJZrH,EAAYqH,8IAQZrH,EAAYqH,kEAENrH,EAAY+H,iCACvB/H,EAAYwH,4gDAqEPxH,EAAY+H,8uCAuDZ/H,EAAY+H,8TAcZ/H,EAAYgI,kFAIThI,EAAY+H,yWAcN/H,EAAYgI,2RAWlBhI,EAAYiJ,gdAkBfjJ,EAAYgI,seAsBZhI,EAAY+H,wLAQZ/H,EAAYgI,2kIA6LjBhI,EAAYyH,+mCA0DDzH,EAAYkJ,8BACvBlJ,EAAYwH,sIAIDxH,EAAY2H,4BACvB3H,EAAYwH,6RAeDxH,EAAYqH,8QAWlBrH,EAAY+H,iWAiBX/H,EAAY8I,ouBA4Bb9I,EAAYgI,gJAMZhI,EAAY+H,qGAGZ/H,EAAYgI,+TAcZhI,EAAY+H,4HAIZ/H,EAAYgI,gtBAkCJhI,EAAY+H,88EAiGlB/H,EAAYqH,wTAWCrH,EAAYqH,qJEtsC7B4F,EAAbnT,cACSmG,KAAAiN,EAAoB,EACpBjN,KAAAkN,EAAgC,MAACC,GACjCnN,KAAAoN,EAAgB,EAChBpN,KAAAqN,EAAkB,EAClBrN,KAAAsN,EAAiB,EAElBzT,UAAUwC,GACZ2D,KAAKsN,GAAUtN,KAAKiN,GAAWjN,KAAKuN,IACxCvN,KAAKqN,EAAWrN,KAAKqN,EAAU,EAAKrN,KAAKoN,EACzCpN,KAAKkN,EAAQlN,KAAKqN,GAAWhR,EAC7B2D,KAAKsN,IAECzT,SAASwC,GACX2D,KAAKsN,GAAUtN,KAAKiN,GAAWjN,KAAKuN,IACxCvN,KAAKkN,EAASlN,KAAKqN,EAAUrN,KAAKsN,EAAUtN,KAAKoN,GAAS/Q,EAC1D2D,KAAKsN,IAECzT,WACN,GAAImG,KAAKsN,GAAU,EAAG,MAAM,IAAI1d,MAAM,4BACtC,MAAMyM,EAAgB2D,KAAKkN,EAAQlN,KAAKqN,GAIxC,OAHArN,KAAKkN,EAAQlN,KAAKqN,QAAWF,EAC7BnN,KAAKqN,EAAWrN,KAAKqN,EAAU,EAAKrN,KAAKoN,EACzCpN,KAAKsN,IACEjR,EAEDxC,UACN,GAAImG,KAAKsN,GAAU,EAAG,MAAM,IAAI1d,MAAM,4BACtCoQ,KAAKsN,IACL,MAAMte,EAAiBgR,KAAKqN,EAAUrN,KAAKsN,EAAUtN,KAAKoN,EACpD/Q,EAAgB2D,KAAKkN,EAAQle,GAEnC,OADAgR,KAAKkN,EAAQle,QAASme,EACf9Q,EAEDxC,YACN,GAAImG,KAAKsN,GAAU,EAAG,MAAM,IAAI1d,MAAM,4BACtC,OAAUoQ,KAAKkN,EAAQlN,KAAKqN,GAEtBxT,WACN,GAAImG,KAAKsN,GAAU,EAAG,MAAM,IAAI1d,MAAM,4BACtC,OAAUoQ,KAAKkN,EAASlN,KAAKqN,EAAUrN,KAAKsN,EAAS,EAAKtN,KAAKoN,GAEzDvT,QACN,OAAOmG,KAAKsN,EAENzT,IAAI7K,EAAeqN,GACzB,GAAIrN,EAAQ,GAAKA,GAASgR,KAAKsN,EAAQ,MAAM,IAAI1d,MAAM,iBACvDoQ,KAAKkN,EAASlN,KAAKqN,EAAUre,EAASgR,KAAKoN,GAAS/Q,EAE9CxC,IAAI7K,GACV,GAAIA,EAAQ,GAAKA,GAASgR,KAAKsN,EAAQ,MAAM,IAAI1d,MAAM,iBACvD,OAAUoQ,KAAKkN,EAASlN,KAAKqN,EAAUre,EAASgR,KAAKoN,GAE/CvT,OAAO7K,GACb,GAAIA,EAAQ,GAAKA,GAASgR,KAAKsN,EAAQ,MAAM,IAAI1d,MAAM,iBACvD,GAAIZ,GAAUgR,KAAKsN,GAAU,EAAI,CAChC,KAAOte,EAAQ,GACdgR,KAAKmD,IAAInU,EAAOgR,KAAKwB,IAAIxS,EAAQ,IACjCA,IAEDgR,KAAKwN,eACC,CAEN,IADAxe,IACOA,EAAQgR,KAAKsN,GACnBtN,KAAKmD,IAAInU,EAAQ,EAAGgR,KAAKwB,IAAIxS,IAC7BA,IAEDgR,KAAKyN,WAGC5T,IACP,GAAImG,KAAKiN,GAAa,WAAY,MAAM,IAAIrd,MAAM,qBAClDoQ,KAAKiN,EAAYjN,KAAKiN,GAAa,EACnC,MAAMS,EAAkC1N,KAAKkN,EACvC1d,EAAkC,IAAIyN,MAAM+C,KAAKiN,GACjDU,EAA6B,EAAd3N,KAAKsN,EACpBhY,EAAgC,EAAf0K,KAAKqN,EAC5B,IAAK,IAAIlf,EAAI,EAAGA,EAAIwf,EAAMxf,IACzBqB,EAAUrB,GAAKuf,EAAWpY,EAASnH,EAAK6R,KAAKoN,GAE9C,IAAK,IAAIjf,EAAIwf,EAAMxf,EAAI6R,KAAKiN,EAAW9e,IACtCqB,EAAUrB,QAAKgf,EAEhBnN,KAAKqN,EAAU,EACfrN,KAAKkN,EAAU1d,EACfwQ,KAAKoN,EAAQpN,KAAKiN,EAAY,GC2DhC,MAAMW,EAA6C,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACjxe,MAAMC,EAILjU,YAAYkU,EAAgBrD,EAAoBK,GAHxC/K,KAAAgO,EAAkB,GAClBhO,KAAAiO,EAAqB,EAG5B,IAAK,IAAI9f,EAAYuc,EAAYvc,EAAI4c,EAAW5c,IAAK,CACpD,MAAMuD,EAAgBmc,EAAoBE,EAAOG,WAAW/f,IAC5D6R,KAAKgO,EAAMxf,KAAMkD,GAAS,EAAK,GAC/BsO,KAAKgO,EAAMxf,KAAMkD,GAAS,EAAK,GAC/BsO,KAAKgO,EAAMxf,KAAMkD,GAAS,EAAK,GAC/BsO,KAAKgO,EAAMxf,KAAMkD,GAAS,EAAK,GAC/BsO,KAAKgO,EAAMxf,KAAMkD,GAAS,EAAK,GAC/BsO,KAAKgO,EAAMxf,KAAa,EAARkD,IAIXmI,KAAK0S,GACX,IAAI3a,EAAiB,EACrB,KAAO2a,EAAW,GACjB3a,IAAmB,EACnBA,GAAUoO,KAAKgO,EAAMhO,KAAKiO,KAC1B1B,IAED,OAAO3a,EAGDiI,aAAasU,EAAkBC,GACrC,IAAIxc,EAAiBuc,EACjBE,EAAkBD,EACtB,KAAOpO,KAAKgO,EAAMhO,KAAKiO,MACtBrc,GAAU,GAAKyc,EACfA,IAED,KAAOA,EAAU,GAChBA,IACIrO,KAAKgO,EAAMhO,KAAKiO,OACnBrc,GAAU,GAAKyc,GAGjB,OAAOzc,EAGDiI,mBACN,OAAOmG,KAAKsO,aAAa,EAAG,GAGtBzU,yBACN,OAAOmG,KAAKsO,aAAa,EAAG,GAGtBzU,eACN,OAAOmG,KAAKsO,aAAa,EAAG,GAGtBzU,oBACN,OAAImG,KAAKuO,KAAK,IACLvO,KAAKsO,aAAa,EAAG,GAEtBtO,KAAKsO,aAAa,EAAG,IAK/B,MAAME,EAAN3U,cACSmG,KAAAyO,EAAiB,EACjBzO,KAAAgO,EAAkB,GAEnBnU,QACNmG,KAAKyO,EAAS,EAGR5U,MAAM0S,EAAkB7a,GAE9B,IADA6a,IACOA,GAAY,GAClBvM,KAAKgO,EAAMhO,KAAKyO,KAAa/c,IAAU6a,EAAY,EACnDA,IAIK1S,cAAcsU,EAAkBC,EAAiB1c,GACvD,GAAIA,EAAQyc,EAAU,MAAM,IAAIve,MAAM,uBACtC8B,GAASyc,EACT,IAAIE,EAAkBD,EACtB,KAAO1c,GAAU,GAAK2c,GACrBrO,KAAKgO,EAAMhO,KAAKyO,KAAY,EAC5B/c,GAAS,GAAK2c,EACdA,IAGD,IADArO,KAAKgO,EAAMhO,KAAKyO,KAAY,EACrBJ,EAAU,GAChBA,IACArO,KAAKgO,EAAMhO,KAAKyO,KAAa/c,IAAU2c,EAAW,EAI7CxU,kBAAkBnI,GACxBsO,KAAK0O,cAAc,EAAG,EAAGhd,GAGnBmI,cAAcnI,GACpBsO,KAAK0O,cAAc,EAAG,EAAGhd,GAGnBmI,mBAAmBnI,GACrBA,EAAQ,GACXsO,KAAK2O,MAAM,EAAG,GACd3O,KAAK0O,cAAc,EAAG,GAAIhd,KAE1BsO,KAAK2O,MAAM,EAAG,GACd3O,KAAK0O,cAAc,EAAG,EAAGhd,IAIpBmI,OAAO+U,GACb,IAAK,IAAIzgB,EAAY,EAAGA,EAAIygB,EAAMH,EAAQtgB,IACzC6R,KAAKgO,EAAMhO,KAAKyO,KAAYG,EAAMZ,EAAM7f,GAInC0L,aAAagV,GAEnB,IAAK,IAAI1gB,EAAY,EAAGA,EAAI6R,KAAKyO,EAAQtgB,GAAK,EAAG,CAChD,MAAMuD,EAAiBsO,KAAKgO,EAAM7f,IAAM,EAAM6R,KAAKgO,EAAM7f,EAAI,IAAM,EAAM6R,KAAKgO,EAAM7f,EAAI,IAAM,EAAM6R,KAAKgO,EAAM7f,EAAI,IAAM,EAAM6R,KAAKgO,EAAM7f,EAAI,IAAM,EAAK6R,KAAKgO,EAAM7f,EAAI,GACxK0gB,EAAOrgB,KAAKof,EAAoBlc,IAEjC,OAAOmd,EAGDhV,eACN,OAAOjL,KAAKkgB,KAAK9O,KAAKyO,EAAS,aAUjBM,EAAY5T,EAAkB6T,EAAcnb,GAC3D,MAAO,CAAEsH,SAAUA,EAAU6T,KAAMA,EAAMnb,OAAQA,GAGlD,SAASob,EAAM5e,EAAa6e,EAAaC,GAExC,OAAIA,IADJD,GAAY,GAEPC,GAAO9e,EAAY8e,EACX9e,EAEL6e,EAIT,SAASE,EAAc/e,EAAa6e,EAAaC,GAChD,GAAI9e,GAAO8e,GAAOA,GAAOD,EAAK,OAAOC,EACrC,MAAM,IAAIvf,MAAM,SAASuf,mBAAqB9e,MAAQ6e,YAG1CG,EAMZxV,YAAmByV,EAAeC,EAAeC,EAAa3b,EAAgB4b,GAAmB,GAChGzP,KAAK0P,QAAU,CAACJ,GAChBtP,KAAK2P,KAAO,CAACZ,EAAY,EAAG,EAAGlb,GAASkb,EAAY,EAAGS,EAAMD,EAAOE,EAAU,EAAI5b,IAClFmM,KAAKuP,MAAQA,EACbvP,KAAKwP,IAAMA,EAGL3V,mBACN,IAAI+V,EAAsC,EACtCC,EAAuB,EAC3B,IAAK,IAAIC,EAAmB,EAAGA,EAAW9P,KAAK2P,KAAKvhB,OAAQ0hB,IAAY,CACvE,MAAMC,EAAgB/P,KAAK2P,KAAKG,EAAW,GACrCE,EAAgBhQ,KAAK2P,KAAKG,GAChC,GAAIC,EAAK5U,UAAY6U,EAAK7U,SAAU,CACnC,MAAM8U,EAAmBD,EAAKhB,KAAOe,EAAKf,KACtCY,EAA8BK,IACjCL,EAA8BK,EAC9BJ,EAAeE,EAAK5U,WAIvB,GAAmC,GAA/ByU,EAAkC,CACrC,IAAIM,EAAwB,EAC5B,IAAK,IAAIJ,EAAmB,EAAGA,EAAW9P,KAAK2P,KAAKvhB,OAAQ0hB,IAAY,CACvE,MAAMK,EAAenQ,KAAK2P,KAAKG,GAC3BI,EAAgBC,EAAItc,SACvBqc,EAAgBC,EAAItc,OACpBgc,EAAeM,EAAIhV,WAItB,OAAO0U,EAGDhW,QACN,MAAMuW,EAAgB,IAAIf,GAAM,EAAGrP,KAAKuP,MAAOvP,KAAKwP,IAAK,GACzDY,EAAQV,QAAU1P,KAAK0P,QAAQW,SAC/BD,EAAQT,KAAO,GACf,IAAK,MAAMQ,KAAOnQ,KAAK2P,KACtBS,EAAQT,KAAKnhB,KAAKugB,EAAYoB,EAAIhV,SAAUgV,EAAInB,KAAMmB,EAAItc,SAE3D,OAAOuc,SAIIE,EAAbzW,cACQmG,KAAAuQ,MAAgB,GAChBvQ,KAAAwQ,WAAqB,EAErB3W,aACN,MAAMjI,EAAiB,GACvB,IAAK,MAAM6e,KAAQzQ,KAAKuQ,MACvB3e,EAAOpD,KAAKiiB,EAAKC,SAElB,OAAO9e,EAGDiI,QACNmG,KAAKuQ,MAAMniB,OAAS,EACpB4R,KAAKwQ,WAAa,SAIPG,EAKZ9W,YAAY7K,GAJLgR,KAAArE,UAAoB,EACpBqE,KAAArP,UAAoB,EACpBqP,KAAApE,SAAmB,EAGzBoE,KAAK4Q,MAAM5hB,GAGL6K,MAAM7K,GACZgR,KAAKrE,UAAY,EACjBqE,KAAKrP,UAAa3B,GAAS,EAAKjB,EAAO+I,qBAAuB,EAC9DkJ,KAAKpE,SAAqB,GAAT5M,EAAc,EAAI,EAG7B6K,KAAK+U,GACX5O,KAAKrE,UAAYiT,EAAMjT,UACvBqE,KAAKrP,UAAYie,EAAMje,UACvBqP,KAAKpE,SAAWgT,EAAMhT,gBAIXiV,EAKZhX,YAAYiX,GAJL9Q,KAAA9D,SAAqB,GACpB8D,KAAA+Q,EAA6B,KAC7B/Q,KAAAgR,GAAwB,EAG/BhR,KAAK4Q,MAAME,GAGLjX,MAAMiX,GACZ,IAAK,IAAI3iB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzD,GAAI2iB,EACH9Q,KAAK9D,SAAS/N,GAAKS,KAAKmb,MAAMhc,EAAO6C,aAAe,EAAIhC,KAAKe,KAAK,EAAIxB,EAAI,SACpE,CACN,MAAM8iB,EAA2B,GAAL9iB,GAAe,GAALA,GAAe,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAWA,GAAK,GACvH6R,KAAK9D,SAAS/N,GAAK8iB,EAAariB,KAAKsgB,IAAI,EAAGtgB,KAAKmb,MAAMhc,EAAO6C,aAAe,EAAIzC,EAAI,MAAQ,EAG/F6R,KAAKgR,GAAe,EAGdnX,sBACNmG,KAAKgR,GAAe,EAGdnX,cAAcqX,GACpB,IAAKlR,KAAKgR,GAA8B,MAAdhR,KAAK+Q,EAAe,CAC7C,IAAII,EAAqBpjB,EAAOuB,gBAEd,MAAd0Q,KAAK+Q,GAAiB/Q,KAAK+Q,EAAM3iB,QAAU+iB,EAAa,IAC3DnR,KAAK+Q,EAAQ,IAAI1hB,aAAa8hB,EAAa,IAE5C,MAAMljB,EAAqB+R,KAAK+Q,EAEhC,IAAK,IAAI5iB,EAAY,EAAGA,EAAIgjB,EAAYhjB,IACvCF,EAAKE,GAAK,EAGX,MAAMijB,EAAwB,GACxBC,EAAuB,IAEvBC,EAAuB,CAAC,EAAG,EAAI,EAAG1iB,KAAK6B,IAAI,EAAI,GAAK7B,KAAK8B,IAAK,EAAI,EAAG9B,KAAK6B,IAAI,KAAS7B,KAAK8B,IAAK,EAAI,EAAG,EAAI,GAClH,SAAS6gB,EAAqBC,GAC7B,OAAON,EAAetiB,KAAKsU,MAAMsO,EAAQzjB,EAAO0J,gCAAkC6Z,GAAYE,EAAQzjB,EAAO0J,gCAAkC1J,EAAO0J,gCAGvJ,IAAIlH,EAA4B,EAChC,IAAK,IAAIpC,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAwB,EAAGrJ,IAAK,CAClE,MAAMsjB,EAAkBtjB,GAAK,EAAK,EAAI6R,KAAK9D,SAAS/N,EAAI,GAClDujB,EAAkBvjB,GAAKJ,EAAOyJ,sBAAyBwI,KAAK9D,SAASnO,EAAOyJ,sBAAwB,GAAKwI,KAAK9D,SAAS/N,GACvHwjB,EAAkBJ,EAAqBpjB,EAAI,GACjD,IAAIyjB,EAAkBL,EAAqBpjB,GACvCA,GAAKJ,EAAOyJ,wBAAuBoa,EAAUR,GAAiBQ,EAAUR,GAAiBC,GAC/E,GAAVI,GAAyB,GAAVC,IAEnBnhB,GAAqB,IAAOb,EAAkBzB,EAAM0jB,EAASC,EAASH,EAAS1jB,EAAO6C,YAAa8gB,EAAS3jB,EAAO6C,aAAc,KAE9HoP,KAAK9D,SAASnO,EAAOyJ,sBAAwB,GAAK,IACrDjH,GAAqB,IAAOb,EAAkBzB,EAAMmjB,GAAiBG,EAAqBxjB,EAAOyJ,uBAAyB4Z,GAAiBC,EAAcD,EAAepR,KAAK9D,SAASnO,EAAOyJ,sBAAwB,GAAKzJ,EAAO6C,YAAa,GAAI,KAGnP3B,EAA4BhB,EAAMkjB,GAClCjiB,EAAsBjB,EAAM,GAAOW,KAAKe,KAAKwhB,GAAcviB,KAAKuB,IAAII,EAAmB,OAGvFtC,EAAKkjB,GAAcljB,EAAK,GAExB+R,KAAKgR,GAAe,EAErB,OAAOhR,KAAK+Q,SAIDc,EAKZhY,cAJOmG,KAAAlE,UAAsB,GACrBkE,KAAA+Q,EAA6B,KAC7B/Q,KAAAgR,GAAwB,EAG/BhR,KAAK4Q,QAGC/W,QACN,IAAK,IAAI1L,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1D6R,KAAKlE,UAAU3N,GAAK,EAErB6R,KAAKlE,UAAU,GAAK/N,EAAO+J,aAC3BkI,KAAKlE,UAAU,GAAK/N,EAAO+J,aAC3BkI,KAAKlE,UAAU,GAAK/N,EAAO+J,aAC3BkI,KAAKgR,GAAe,EAGdnX,sBACNmG,KAAKgR,GAAe,EAGdnX,gBACN,IAAKmG,KAAKgR,GAA8B,MAAdhR,KAAK+Q,EAAe,CAC7C,IAAII,EAAqBpjB,EAAOgK,oBAChC,MAAMzH,EAA0BvB,EAAY,GAE1B,MAAdiR,KAAK+Q,GAAiB/Q,KAAK+Q,EAAM3iB,QAAU+iB,EAAa,IAC3DnR,KAAK+Q,EAAQ,IAAI1hB,aAAa8hB,EAAa,IAE5C,MAAMljB,EAAqB+R,KAAK+Q,EAEhC,IAAK,IAAI5iB,EAAY,EAAGA,EAAIgjB,EAAYhjB,IACvCF,EAAKE,GAAK,EAGX,MAAM8B,GAAwB,IAC9B,IAAI6hB,EAAwC,EAE5C,IAAK,IAAIC,EAAwB,EAAGA,EAAgBhkB,EAAO6J,kBAAmBma,IAAiB,CAC9F,MAAMC,EAAuBD,EAAgB,EAC7C,IAAIE,EAAuBF,EAAgBhkB,EAAO4J,uBAAyBqI,KAAKlE,UAAUiW,GAAiB/R,KAAKlE,UAAU/N,EAAO4J,uBAAyB,GACtJoa,GAAiBhkB,EAAO4J,yBAC3Bsa,GAAgB,GAAKF,EAAgBhkB,EAAO4J,yBAA2B5J,EAAO6J,kBAAoB7J,EAAO4J,yBAE1G,MAAMua,EAA0BD,EAAelkB,EAAO+J,aACtD,IAAInH,EAAoB/B,KAAKuB,IAAI,EAAG8hB,EAAelkB,EAAO+J,aAAe,GAAKlJ,KAAKe,KAAKuiB,GACpFH,EAAgBhkB,EAAO4J,yBAC1Bma,GAAiCnhB,GAElCA,GAAa/B,KAAKuB,IAAI6hB,EAAc/hB,GAIpCU,GAAaL,EAAUyhB,EAAgB,KAEvC9jB,EAAKkjB,EAAaa,GAAgBrhB,EAGnC1B,EAA4BhB,EAAMkjB,GAGlC,MAAMna,EAAe,EAAIpI,KAAKuB,IAAI2hB,EAA+B,IAGjE,IAAIxjB,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAIF,EAAKG,OAAQD,IACxCG,GAAcC,EACdA,EAAWN,EAAKE,GAAK6I,EACrB/I,EAAKE,GAAKG,EAGXL,EAAKkjB,GAAcljB,EAAK,GAExB+R,KAAKgR,GAAe,EAErB,OAAOhR,KAAK+Q,SAIDoB,EA8CZtY,YAAYiX,EAAyBsB,GAEpC,GA/CMpS,KAAAlL,KAAI,EACJkL,KAAA3F,OAAiB,EACjB2F,KAAAqS,SAAmB,EACnBrS,KAAAsS,UAAoB,EACpBtS,KAAAuS,aAAuB,GACvBvS,KAAA/E,gBAA0B,EAC1B+E,KAAA9E,eAAyB,EACzB8E,KAAAnF,WAAqB,EACrBmF,KAAA5E,QAAkB,EAClB4E,KAAAwS,aAAuB,EACvBxS,KAAAyS,aAAuB,GACvBzS,KAAA0S,aAAuB,EACvB1S,KAAA2S,YAAsB,EACtB3S,KAAA7E,SAAmB,EACnB6E,KAAAlF,QAAkB,EAClBkF,KAAAjF,MAAgB,EAChBiF,KAAAnM,OAAiB,EACjBmM,KAAA4S,IAAc7kB,EAAO4H,UACrBqK,KAAA6S,SAAmB,GACnB7S,KAAA8S,cAAwB,GACxB9S,KAAA+S,gBAA0B,EAC1B/S,KAAAgT,mBAA6B,EAC7BhT,KAAAiT,qBAA+B,EAC/BjT,KAAAkT,OAAiB,EACjBlT,KAAAhE,WAAqBjO,EAAOiK,gBAC5BgI,KAAA/D,cAAwB,EACxB+D,KAAA1E,UAAoB,EACpB0E,KAAAzE,aAAuB,EACvByE,KAAAxE,kBAA4B,EAC5BwE,KAAAvE,iBAA2B,EAC3BuE,KAAAmT,QAAkB,EAClBnT,KAAAoT,YAAsB,EACtBpT,KAAAqT,QAAkB,EAClBrT,KAAAnE,eAA+B,IAAIpN,aAAa,IAChDuR,KAAAsT,uBAAuC,IAAI7kB,aAAa,IAC/CuR,KAAAtE,UAAwB,GAExBsE,KAAAuT,cAA+B,IAAI1B,EACnC7R,KAAAwT,iBAA6B,GAC7BxT,KAAAyT,qBAAuC,GAChDzT,KAAAsB,YAAwB,GACxBtB,KAAA0T,YAA2B,GAC3B1T,KAAA2T,eAA2B,GAC3B3T,KAAA4T,YAA4B,GAI9BxB,EACH,IAAK,IAAIyB,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAChD7T,KAAKsB,YAAY9S,KAAK,GACtBwR,KAAK0T,YAAYllB,KAAKslB,EAAUC,QAChC/T,KAAK2T,eAAenlB,KAAK,GACzBwR,KAAK4T,YAAYplB,KAAKwlB,EAAWC,SAInCjU,KAAKkU,aAAe,IAAIrD,EAAaC,GACrC,IAAK,IAAI3iB,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IACjD6R,KAAKtE,UAAUvN,GAAK,IAAIwiB,EAASxiB,GAElC,IAAK,IAAIA,EAAY,EAAGA,EAAIJ,EAAO2K,UAAWvK,IAC7C6R,KAAKwT,iBAAiBrlB,GAAKJ,EAAOoJ,UAAU1F,WAAW,WAAWzC,MAClEgR,KAAKyT,qBAAqBtlB,GAAK,IAAI0iB,GAAa,GAGjD,IAAK,IAAI1iB,EAAI,EAAGA,EAAI,GAAIA,IACvB6R,KAAKnE,eAAe1N,GAAK,GAAKS,KAAKsU,MAAO,IAAD/U,GAG1C,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI6R,KAAKnE,eAAezN,OAAQD,IACvDD,GAAO8R,KAAKnE,eAAe1N,GAE5B,MAAME,EAAkBH,EAAM8R,KAAKnE,eAAezN,OAGlD,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAI6R,KAAKnE,eAAezN,OAAQD,IACvDG,GAAcC,EACdA,EAAWyR,KAAKnE,eAAe1N,GAAKE,EACpC2R,KAAKsT,uBAAuBnlB,GAAKG,EAIlC0R,KAAKsT,uBAAuB,IAAM,EAI5BzZ,gBAAgB/E,EAAsBgc,EAAyBsB,GAYrE,OAVIA,IAActd,EAAI,GACtBkL,KAAKlL,KAAOA,EACZkL,KAAK3F,OAASvF,EACdkL,KAAKnM,OAAS,EACdmM,KAAK4S,IAAM7kB,EAAO4H,UAClBqK,KAAK6S,SAAW,GAChB7S,KAAK8S,cAAgB,GACrB9S,KAAKkT,OAAS,EACdlT,KAAKgT,mBAAoB,EACzBhT,KAAKiT,qBAAsB,EACnBne,GACP,KAAA,EACCkL,KAAKqS,SAAW,EAChBrS,KAAKuS,aAAe,EACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBnN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5DgR,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAK7E,SAAW,EAChB6E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACb,MACD,KAAA,EACCiF,KAAKqS,SAAW,EAChBrS,KAAKuS,aAAe,EACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBnN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5DgR,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAK7E,SAAW,EAChB6E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACb,IAAK,IAAI5M,EAAY,EAAGA,EAAI,GAAIA,IAC/B6R,KAAKnE,eAAe1N,GAAK,GAAMS,KAAKsU,MAAO,IAAD/U,GAG3C,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI6R,KAAKnE,eAAezN,OAAQD,IACvDD,GAAO8R,KAAKnE,eAAe1N,GAE5B,MAAME,EAAkBH,EAAM8R,KAAKnE,eAAezN,OAGlD,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAI6R,KAAKnE,eAAezN,OAAQD,IACvDG,GAAcC,EACdA,EAAWyR,KAAKnE,eAAe1N,GAAKE,EACpC2R,KAAKsT,uBAAuBnlB,GAAKG,EAGlC0R,KAAKsT,uBAAuB,IAAM,EAClC,MACD,KAAA,EACCtT,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKuS,aAAe,GACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiB,EACtB8E,KAAK1E,UAAY,EACjB0E,KAAKzE,aAAe,EACpByE,KAAKxE,kBAAoB,EACzBwE,KAAKvE,iBAAmB1N,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC9D,IAAK,IAAIb,EAAY,EAAGA,EAAI6R,KAAKtE,UAAUtN,OAAQD,IAClD6R,KAAKtE,UAAUvN,GAAGyiB,MAAMziB,GAEzB,MACD,KAAA,EACC6R,KAAKsS,UAAY,EACjBtS,KAAKnF,WAAa,EAClBmF,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKuS,aAAe,GACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBnN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5D,MACD,KAAA,EACCgR,KAAKnF,WAAa,EAClBmF,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKuS,aAAe,GACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBnN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5DgR,KAAKkU,aAAatD,MAAME,GACxB,MACD,KAAA,EACC9Q,KAAKlF,QAAU,EACf,IAAK,IAAI3M,EAAY,EAAGA,EAAIJ,EAAO2K,UAAWvK,IAC7C6R,KAAKwT,iBAAiBrlB,GAAKJ,EAAOoJ,UAAU1F,WAAW,WAAWzC,MAC9Bme,MAAhCnN,KAAKyT,qBAAqBtlB,KAC7B6R,KAAKyT,qBAAqBtlB,GAAK,IAAI0iB,GAAa,IAEjD7Q,KAAKyT,qBAAqBtlB,GAAGyiB,MAAME,GAEpC,MACD,KAAA,EACC9Q,KAAKuS,aAAe,GACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBnN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5DgR,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAK7E,SAAW,EAChB6E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKuT,cAAc3C,QACnB,MACD,KAAA,EACC5Q,KAAKuS,aAAe,GACpBvS,KAAK/E,gBAAkB,EACvB+E,KAAK9E,eAAiBnN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAC5DgR,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAK7E,SAAW,EAChB6E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKhE,WAAajO,EAAOiK,gBACzBgI,KAAK/D,cAAgBlO,EAAOoJ,UAAU1F,WAAW,WAAWzC,MAC5D,MACD,KAAA,EACCgR,KAAKnF,WAAa,EAClBmF,KAAK5E,QAAU,EACf4E,KAAK7E,SAAW,EAChB6E,KAAKlF,QAAU,EACfkF,KAAKjF,MAAQ,EACbiF,KAAKsB,YAAc,GACnBtB,KAAK0T,YAAc,GACnB1T,KAAK2T,eAAiB,GACtB3T,KAAK4T,YAAc,GACnB,IAAK,IAAIC,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAChD7T,KAAKsB,YAAY9S,KAAK,GACtBwR,KAAK0T,YAAYllB,KAAKslB,EAAUC,QAChC/T,KAAK2T,eAAenlB,KAAK,GACzBwR,KAAK4T,YAAYplB,KAAKwlB,EAAWC,SAElC,MACD,QACC,MAAM,IAAIrkB,MAAM,iCAAmCkF,IAI/C+E,eACN,MAAMsa,EAAwB,CAC7Brf,KAAQ/G,EAAO2F,oBAAoBsM,KAAKlL,MACxCjB,OAAUmM,KAAKnM,OACf+e,IAAuC,KAA/B5S,KAAK4S,IAAM7kB,EAAO4H,WAAmB5H,EAAO4H,UACpDkd,SAAY7S,KAAK6S,SACjBC,cAAiB9S,KAAK8S,cACtBC,eAAkB/S,KAAK+S,eACvBC,kBAAqBhT,KAAKgT,kBAC1BC,oBAAuBjT,KAAKiT,oBAC5B7X,QAAW4E,KAAK5E,QAChBoX,aAAgBxS,KAAKwS,aACrBE,aAAgB1S,KAAK0S,aACrBD,aAAgBzS,KAAKyS,aACrBE,YAAe3S,KAAK2S,YACpBO,OAAUlT,KAAKkT,OACfpY,QAAW/M,EAAOyH,aAAawK,KAAKlF,UAerC,GAZIkF,KAAK3F,QAAU2F,KAAKlL,OACvBqf,EAAyB,OAAInU,KAAK3F,QAGtB,GAAT2F,KAAKlL,OACRqf,EAA6B,WAAIpmB,EAAOuG,YAAY0L,KAAKnF,YAAYlJ,KACrEwiB,EAAwB,MAAInU,KAAKoU,WAAWziB,KAC5CwiB,EAAiC,eAAIvlB,KAAKmb,MAAMhc,EAAOiG,kBAAoBpF,KAAKuB,IAAI,EAAK6P,KAAKqU,2BAC9FF,EAAkC,gBAAIvlB,KAAKmb,MAAM,IAAM/J,KAAK/E,iBAAmBlN,EAAOsG,qBAAuB,IAC7G8f,EAAiC,eAAInU,KAAKsU,oBAAoB3iB,MAGlD,GAATqO,KAAKlL,KACRqf,EAAuB,KAAIpmB,EAAOoB,WAAW6Q,KAAKsS,WAAW3gB,UACvD,GAAa,GAATqO,KAAKlL,KAAiC,CAChDqf,EAA2B,SAAI,GAC/B,IAAK,IAAIhmB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDgmB,EAA2B,SAAEhmB,GAAKS,KAAKmb,MAAM,IAAM/J,KAAKkU,aAAahY,SAAS/N,GAAKJ,EAAO6C,kBAErF,GAAa,GAAToP,KAAKlL,KAAgC,CAC/Cqf,EAAwB,MAAI,GAC5B,IAAK,IAAI1H,EAAY,EAAGA,EAAI1e,EAAO2K,UAAW+T,IAAK,CAClD,MAAMvQ,EAAqB,GAC3B,IAAK,IAAI/N,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzD+N,EAAS/N,GAAKS,KAAKmb,MAAM,IAAM/J,KAAKyT,qBAAqBhH,GAAGvQ,SAAS/N,GAAKJ,EAAO6C,aAElFujB,EAAwB,MAAE1H,GAAK,CAC9BvR,eAAkB8E,KAAKuU,mBAAmB9H,GAAG9a,KAC7CuK,SAAYA,SAGR,GAAa,GAAT8D,KAAKlL,KACfqf,EAAuB,KAAIpmB,EAAO6F,UAAUoM,KAAKqS,UAAU1gB,KAC3DwiB,EAA2B,SAAIpmB,EAAOqH,UAAU4K,KAAK7E,UAAUxJ,KAC3C,GAAhBqO,KAAK5E,QACR+Y,EAA0B,QAAIpmB,EAAO8G,SAASmL,KAAK5E,SAASzJ,KAE5DwiB,EAA0B,QAAI,cAEzB,GAAa,GAATnU,KAAKlL,KAAuC,CACtDqf,EAAuB,KAAIpmB,EAAO6F,UAAUoM,KAAKqS,UAAU1gB,KAC3DwiB,EAA2B,SAAIpmB,EAAOqH,UAAU4K,KAAK7E,UAAUxJ,KAC3C,GAAhBqO,KAAK5E,QACR+Y,EAA0B,QAAIpmB,EAAO8G,SAASmL,KAAK5E,SAASzJ,KAE5DwiB,EAA0B,QAAI,SAE/BA,EAAiC,eAAI,IAAI1lB,aAAa,IACtD0lB,EAAyC,uBAAI,IAAI1lB,aAAa,IAC9D,IAAK,IAAIN,EAAY,EAAGA,EAAI6R,KAAKnE,eAAezN,OAAQD,IACvDgmB,EAAiC,eAAEhmB,GAAK6R,KAAKnE,eAAe1N,GAK7DgmB,EAAyC,uBAAE,IAAM,OAC3C,GAAa,GAATnU,KAAKlL,KACfqf,EAA6B,WAAInU,KAAKhE,WACtCmY,EAAgC,cAAIpmB,EAAOoJ,UAAU6I,KAAK/D,eAAetK,KACrD,GAAhBqO,KAAK5E,QACR+Y,EAA0B,QAAIpmB,EAAO8G,SAASmL,KAAK5E,SAASzJ,KAE5DwiB,EAA0B,QAAI,cAEzB,GAAa,GAATnU,KAAKlL,KAAkC,CACjDqf,EAA2B,SAAIpmB,EAAOqH,UAAU4K,KAAK7E,UAAUxJ,KAC3C,GAAhBqO,KAAK5E,QACR+Y,EAA0B,QAAIpmB,EAAO8G,SAASmL,KAAK5E,SAASzJ,KAE5DwiB,EAA0B,QAAI,SAE/BA,EAA4B,UAAI,GAChC,IAAK,IAAIhmB,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1DgmB,EAA4B,UAAEhmB,GAAKS,KAAKmb,MAAM,IAAM/J,KAAKuT,cAAczX,UAAU3N,GAAKJ,EAAO+J,mBAExF,GAAa,GAATkI,KAAKlL,KAA2B,CAC1C,MAAM0f,EAA0B,GAChC,IAAK,MAAMC,KAAYzU,KAAKtE,UAC3B8Y,EAAchmB,KAAK,CAClBmN,UAAa5N,EAAOgJ,oBAAoB0d,EAAS9Y,WAAWhK,KAC5DhB,UAAa8jB,EAAS9jB,UACtBiL,SAAY7N,EAAOoJ,UAAUsd,EAAS7Y,UAAUjK,OAG9B,GAAhBqO,KAAK5E,QACR+Y,EAA0B,QAAIpmB,EAAO8G,SAASmL,KAAK5E,SAASzJ,KAE5DwiB,EAA0B,QAAI,SAE/BA,EAA4B,UAAIpmB,EAAO0I,WAAWuJ,KAAK1E,WAAW3J,KAClEwiB,EAA+B,aAAIpmB,EAAOsJ,UAAU2I,KAAKzE,cAAc5J,KACvEwiB,EAAoC,kBAAInU,KAAKxE,kBAC7C2Y,EAAmC,iBAAIpmB,EAAOoJ,UAAU6I,KAAKvE,kBAAkB9J,KAC/EwiB,EAA4B,UAAIK,MAC1B,CAAA,GAAa,GAATxU,KAAKlL,KAYf,MAAM,IAAIlF,MAAM,gCAXhBukB,EAA8B,YAAI,GAClCA,EAAiC,eAAI,GACrCA,EAA8B,YAAI,GAClCA,EAA8B,YAAI,GAClC,IAAK,IAAIN,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAChDM,EAA8B,YAAEN,GAAO7T,KAAKsB,YAAYuS,GACxDM,EAAiC,eAAEN,GAAO7T,KAAK2T,eAAeE,GAC9DM,EAA8B,YAAEN,GAAO7T,KAAK4T,YAAYC,GACxDM,EAA8B,YAAEN,GAAO7T,KAAK0T,YAAYG,GAK1D,OAAOM,EAGDta,eAAesa,EAAuBrD,EAAyBsB,EAAuBsC,EAA0BvjB,GAC9Fgc,MAApBgH,IAA+BA,EAAmB,IAEtD,IAAIrf,EAAuB/G,EAAO2F,oBAAoBihB,QAAQR,EAAuB,OAC9D,GAAnBrf,EAAK8f,YAAiB9f,EAAOsd,EAAY,EAAyBtB,EAAc,EAAA,GACpF9Q,KAAK6U,gBAAgB/f,EAAMgc,EAAgBsB,GAETjF,MAA9BgH,EAAyB,SAC5BnU,KAAK3F,OAAS8Z,EAAyB,SAAM,GAGZhH,MAA9BgH,EAAyB,OAC5BnU,KAAKnM,OAASob,GAAOlhB,EAAO0H,YAAc,EAAG1H,EAAO0H,YAAc,EAAgC,EAA7B0e,EAAyB,QAE9FnU,KAAKnM,OAAS,EAGgBsZ,MAA3BgH,EAAsB,IACzBnU,KAAK4S,IAAM3D,EAAM,EAAGlhB,EAAO6H,OAAS,EAAGhH,KAAKmb,MAAMhc,EAAO4H,WAAuC,EAA1Bwe,EAAsB,KAASpmB,EAAO4H,UAAY,MAExHqK,KAAK4S,IAAM7kB,EAAO4H,UAGiBwX,MAAhCgH,EAA2B,SAC9BnU,KAAK6S,SAA2C,EAA/BsB,EAA2B,SAE5CnU,KAAK6S,SAAW,GAGiB1F,MAA9BgH,EAAyB,OAC5BnU,KAAKkT,OAASjE,EAAMlhB,EAAO8H,UAAW9H,EAAO+H,UAAY,EAAiC,EAA7Bqe,EAAyB,QAGtFnU,KAAKkT,OAAS,EAGf,MAAM4B,EAAyC,CAAEC,OAAU,EAAGC,OAAU,EAAGC,OAAU,GAC/EC,EAAmBf,EAA6B,YAAKA,EAA2B,SAoBtF,GAnBAnU,KAAKnF,WAAqDsS,MAAxC2H,EAAmBI,GAAiCJ,EAAmBI,GAAoBnnB,EAAOuG,YAAY6gB,WAAUta,GAAcA,EAAWlJ,MAAQujB,KACnJ,GAApBlV,KAAKnF,aAAkBmF,KAAKnF,WAAa,GAE7CmF,KAAKlF,QAAU/M,EAAOyH,aAAamf,QAAQR,EAA0B,UAChD,GAAjBnU,KAAKlF,UAAekF,KAAKlF,QAAoB,GAATkF,KAAKlL,KAAgC,EAAI,GAEvCqY,MAAtCgH,EAAiC,eACpCnU,KAAKuS,aAAetD,EAAM,EAAGlhB,EAAOqG,kBAAmBxF,KAAKmb,MAAOhc,EAAOqG,kBAAoB,EAAK,EAAMxF,KAAK6B,KAA0C,EAArC0jB,EAAiC,gBAASpmB,EAAOiG,mBAAqBpF,KAAK8B,MAE9LsP,KAAKuS,aAAyB,GAATvS,KAAKlL,KAA+B,EAAI,GAEnBqY,MAAvCgH,EAAkC,gBACrCnU,KAAK/E,gBAAkBgU,EAAM,EAAGlhB,EAAOsG,qBAAsBzF,KAAKmb,OAAOhc,EAAOsG,qBAAuB,IAA4C,EAAtC8f,EAAkC,iBAAS,MAExJnU,KAAK/E,gBAAkB,EAExB+E,KAAK9E,eAAiBnN,EAAOoJ,UAAUge,WAAUvZ,GAAYA,EAASjK,MAAQwiB,EAAiC,kBACnF,GAAxBnU,KAAK9E,iBAAsB8E,KAAK9E,eAAiBnN,EAAOoJ,UAAU1F,WAAmB,OAAEzC,OAEzDme,MAA9BgH,EAAyB,OAAgB,CAC5C,MAAMiB,EAA2B,CAAC,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAClDC,EAA6B,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAClDC,EAAwB,CAAC,OAAQ,SAAU,SAAU,OAAQ,eAAgB,eAAgB,cAC7FC,EAAqC,CAAEC,gBAAiB,EAAGC,iBAAkB,EAAGC,eAAgB,EAAGC,cAAe,GACxH,IAAIC,EAAqEzI,MAA9CoI,EAAepB,EAAyB,QAAkBoB,EAAepB,EAAyB,QAAKmB,EAAYX,QAAQR,EAAyB,SAC1J,GAAjByB,IAAoBA,EAAe,GACvC5V,KAAKuS,aAAe6C,EAAeQ,GACnC5V,KAAK9E,eAAiBma,EAAiBO,GACvC5V,KAAK/E,gBAAkB,EAGxB,MAAM4a,EAA2C,CAAC,OAAQ,gBAAiB,kBAAmB,iBAC9F,GAAa,GAAT7V,KAAKlL,KACRkL,KAAKsS,UAAYvkB,EAAOoB,WAAWgmB,WAAUlnB,GAAQA,EAAK0D,MAAQwiB,EAAuB,QAClE,GAAnBnU,KAAKsS,YAAiBtS,KAAKsS,UAAY,GAE3CtS,KAAKjF,MAAQhN,EAAOkI,OAAOkf,WAAUpa,GAASA,EAAMpJ,MAAQwiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,QAE7B,GAAa,GAATiF,KAAKlL,KAAiC,CAChD,GAAoCqY,MAAhCgH,EAA2B,SAC9B,IAAK,IAAIhmB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzD6R,KAAKkU,aAAahY,SAAS/N,GAAKS,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAO6C,YAAahC,KAAKmb,MAAMhc,EAAO6C,aAAgBujB,EAA2B,SAAEhmB,GAAM,OAIhJ6R,KAAKjF,MAAQhN,EAAOkI,OAAOkf,WAAUpa,GAASA,EAAMpJ,MAAQwiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,QAE7B,GAAa,GAATiF,KAAKlL,MACf,GAAiCqY,MAA7BgH,EAAwB,MAC3B,IAAK,IAAI1H,EAAY,EAAGA,EAAI1e,EAAO2K,UAAW+T,IAAK,CAClD,MAAMqJ,EAAY3B,EAAwB,MAAE1H,GAC5C,GAAYU,MAAR2I,IAE0B3I,MAA1B2I,EAAqB,iBACxB9V,KAAKwT,iBAAiB/G,GAAK1e,EAAOoJ,UAAUge,WAAUvZ,GAAYA,EAASjK,MAAQmkB,EAAqB,kBACvE,GAA7B9V,KAAKwT,iBAAiB/G,KAAUzM,KAAKwT,iBAAiB/G,GAAK1e,EAAOoJ,UAAU1F,WAAW,WAAWzC,QAE/Eme,MAApB2I,EAAe,UAClB,IAAK,IAAI3nB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzD6R,KAAKyT,qBAAqBhH,GAAGvQ,SAAS/N,GAAKS,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAO6C,YAAahC,KAAKmb,MAAMhc,EAAO6C,aAAgBklB,EAAe,SAAE3nB,GAAM,aAK3I,GAAa,GAAT6R,KAAKlL,KAAkC,CACjD,GAAqCqY,MAAjCgH,EAA4B,UAC/B,IAAK,IAAIhmB,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1D6R,KAAKuT,cAAczX,UAAU3N,GAAKS,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAO+J,aAAclJ,KAAKmb,MAAMhc,EAAO+J,cAAiBqc,EAA4B,UAAEhmB,GAAM,OAIjHgf,MAAhCgH,EAA2B,WAC9BnU,KAAK7E,SAAWpN,EAAOqH,UAAU+f,WAAUha,GAAYA,EAASxJ,MAAQwiB,EAA2B,YAC7E,GAAlBnU,KAAK7E,WAAgB6E,KAAK7E,SAAW,IAGPgS,MAA/BgH,EAA0B,UAC7BnU,KAAK5E,QAAUrN,EAAO8G,SAASsgB,WAAU/Z,GAAWA,EAAQzJ,MAAQwiB,EAA0B,WACzE,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAUrN,EAAO8G,SAASzG,QACnD4R,KAAK5E,SAAWrN,EAAO8G,SAASzG,QACnC4R,KAAKwS,aAAe2B,EAA+B,aACnDnU,KAAKyS,aAAe0B,EAA+B,aACnDnU,KAAK0S,aAAeyB,EAA+B,aACnDnU,KAAK2S,YAAcwB,EAA8B,cAGjDnU,KAAKwS,aAAezkB,EAAO8G,SAASmL,KAAK5E,SAASzK,UAClDqP,KAAK0S,aAAe3kB,EAAO8G,SAASmL,KAAK5E,SAASrG,WAClDiL,KAAKyS,aAAe,GACpBzS,KAAK2S,YAAc5kB,EAAO8G,SAASmL,KAAK5E,SAAStG,OAInDkL,KAAKjF,MAAQhN,EAAOkI,OAAOkf,WAAUpa,GAASA,EAAMpJ,MAAQwiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,QAC7B,GAAa,GAATiF,KAAKlL,KACuBqY,MAAlCgH,EAA6B,WAChCnU,KAAKhE,WAAaiT,EAAM,EAAGlhB,EAAOiK,gBAAkB,EAAGpJ,KAAKmb,MAAMoK,EAA6B,aAE/FnU,KAAKhE,WAAajO,EAAOiK,gBAGemV,MAArCgH,EAAgC,gBACnCnU,KAAK/D,cAAgBlO,EAAOoJ,UAAUge,WAAUvZ,GAAYA,EAASjK,MAAQwiB,EAAgC,iBAClF,GAAvBnU,KAAK/D,gBAAqB+D,KAAK/D,cAAgBlO,EAAOoJ,UAAU1F,WAAmB,OAAEzC,QAGvDme,MAA/BgH,EAA0B,UAC7BnU,KAAK5E,QAAUrN,EAAO8G,SAASsgB,WAAU/Z,GAAWA,EAAQzJ,MAAQwiB,EAA0B,WACzE,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAUrN,EAAO8G,SAASzG,QACnD4R,KAAK5E,SAAWrN,EAAO8G,SAASzG,QACnC4R,KAAKwS,aAAe2B,EAA+B,aACnDnU,KAAKyS,aAAe0B,EAA+B,aACnDnU,KAAK0S,aAAeyB,EAA+B,aACnDnU,KAAK2S,YAAcwB,EAA8B,cAGjDnU,KAAKwS,aAAezkB,EAAO8G,SAASmL,KAAK5E,SAASzK,UAClDqP,KAAK0S,aAAe3kB,EAAO8G,SAASmL,KAAK5E,SAASrG,WAClDiL,KAAKyS,aAAe,GACpBzS,KAAK2S,YAAc5kB,EAAO8G,SAASmL,KAAK5E,SAAStG,OAInDkL,KAAKjF,MAAQhN,EAAOkI,OAAOkf,WAAUpa,GAASA,EAAMpJ,MAAQwiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,QAC7B,GAAa,GAATiF,KAAKlL,KAA6B,CAC5C,MAAMihB,EAAsC,CAAEC,SAAY,EAAGC,OAAU,EAAGC,aAAc,EAAGC,eAAgB,EAAGC,SAAY,EAAGC,aAAc,EAAGC,eAAgB,EAAGC,MAAS,EAAGC,QAAW,GAIxL,GAHAxW,KAAKqS,SAAwDlF,MAA7C4I,EAAgB5B,EAAuB,MAAkB4B,EAAgB5B,EAAuB,MAAKpmB,EAAO6F,UAAUuhB,WAAUlnB,GAAQA,EAAK0D,MAAQwiB,EAAuB,QACtK,GAAlBnU,KAAKqS,WAAgBrS,KAAKqS,SAAW,GAELlF,MAAhCgH,EAA2B,SAC9BnU,KAAK7E,SAAWpN,EAAOqH,UAAU+f,WAAUha,GAAYA,EAASxJ,MAAQwiB,EAA2B,YAC7E,GAAlBnU,KAAK7E,WAAgB6E,KAAK7E,SAAW,QACnC,GAAkCgS,MAA9BgH,EAAyB,OAAgB,CACnD,MAAMsC,EAAwC,CAAEC,OAAU,EAAGC,QAAW,GACxE3W,KAAK7E,SAA4DgS,MAAjDsJ,EAAkBtC,EAAyB,QAAkBsC,EAAkBtC,EAAyB,QAAKpmB,EAAOqH,UAAU+f,WAAUha,GAAYA,EAASxJ,MAAQwiB,EAAyB,UACxL,GAAlBnU,KAAK7E,WAAgB6E,KAAK7E,SAAW,GAGPgS,MAA/BgH,EAA0B,SAC7BnU,KAAK5E,QAAUrN,EAAO8G,SAASsgB,WAAU/Z,GAAWA,EAAQzJ,MAAQwiB,EAA0B,WACzE,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAUrN,EAAO8G,SAASzG,QACnD4R,KAAK5E,SAAWrN,EAAO8G,SAASzG,QACnC4R,KAAKwS,aAAe2B,EAA+B,aACnDnU,KAAKyS,aAAe0B,EAA+B,aACnDnU,KAAK0S,aAAeyB,EAA+B,aACnDnU,KAAK2S,YAAcwB,EAA8B,cAGjDnU,KAAKwS,aAAezkB,EAAO8G,SAASmL,KAAK5E,SAASzK,UAClDqP,KAAK0S,aAAe3kB,EAAO8G,SAASmL,KAAK5E,SAASrG,WAClDiL,KAAKyS,aAAe,GACpBzS,KAAK2S,YAAc5kB,EAAO8G,SAASmL,KAAK5E,SAAStG,OAEVqY,MAA9BgH,EAAyB,SACnCnU,KAAK5E,QAAUya,EAAkBlB,QAAQR,EAAyB,SAC7C,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAU,IAGxC4E,KAAKjF,MAAQhN,EAAOkI,OAAOkf,WAAUpa,GAASA,EAAMpJ,MAAQwiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,GAGD,kBAA9BoZ,EAAyB,SAC5BnU,KAAK7E,SAAW,EAChB6E,KAAKjF,MAAQ,QAER,GAAa,GAATiF,KAAKlL,KAA2B,CACPqY,MAA/BgH,EAA0B,SAC7BnU,KAAK5E,QAAUrN,EAAO8G,SAASsgB,WAAU/Z,GAAWA,EAAQzJ,MAAQwiB,EAA0B,WACzE,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAUrN,EAAO8G,SAASzG,QACnD4R,KAAK5E,SAAWrN,EAAO8G,SAASzG,QACnC4R,KAAKwS,aAAe2B,EAA+B,aACnDnU,KAAKyS,aAAe0B,EAA+B,aACnDnU,KAAK0S,aAAeyB,EAA+B,aACnDnU,KAAK2S,YAAcwB,EAA8B,cAGjDnU,KAAKwS,aAAezkB,EAAO8G,SAASmL,KAAK5E,SAASzK,UAClDqP,KAAK0S,aAAe3kB,EAAO8G,SAASmL,KAAK5E,SAASrG,WAClDiL,KAAKyS,aAAe,GACpBzS,KAAK2S,YAAc5kB,EAAO8G,SAASmL,KAAK5E,SAAStG,OAEVqY,MAA9BgH,EAAyB,SACnCnU,KAAK5E,QAAUya,EAAkBlB,QAAQR,EAAyB,SAC7C,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAU,IAGxC4E,KAAKjF,MAAQhN,EAAOkI,OAAOkf,WAAUpa,GAASA,EAAMpJ,MAAQwiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,GAEnCiF,KAAK1E,UAAYvN,EAAO0I,WAAW0e,WAAU7Z,GAAaA,EAAU3J,MAAQwiB,EAA4B,aACjF,GAAnBnU,KAAK1E,YAAiB0E,KAAK1E,UAAY,GAC3C0E,KAAKzE,aAAexN,EAAOsJ,UAAU8d,WAAUyB,GAAYA,EAASjlB,MAAQwiB,EAA+B,gBACjF,GAAtBnU,KAAKzE,eAAoByE,KAAKzE,aAAe,GACJ4R,MAAzCgH,EAAoC,kBACvCnU,KAAKxE,kBAAoByT,EAAM,EAAGlhB,EAAO+I,qBAAuB,EAA2C,EAAxCqd,EAAoC,mBAEvGnU,KAAKxE,kBAAoB,EAG1B,MAAMqb,EAA0C,CAAEC,UAAW,EAAGC,UAAW,EAAGC,UAAW,GACzFhX,KAAKvE,iBAAgF0R,MAA7D0J,EAAoB1C,EAAmC,kBAAkB0C,EAAoB1C,EAAmC,kBAAKpmB,EAAOoJ,UAAUge,WAAUvZ,GAAYA,EAASjK,MAAQwiB,EAAmC,oBAC1N,GAA1BnU,KAAKvE,mBAAwBuE,KAAKvE,iBAAmB,GAEzD,IAAK,IAAIgR,EAAY,EAAGA,EAAI1e,EAAOyI,cAAeiW,IAAK,CACtD,MAAMgI,EAAqBzU,KAAKtE,UAAU+Q,GAC1C,IAAIwK,OAAsB9J,EACtBgH,EAA4B,YAAG8C,EAAiB9C,EAA4B,UAAE1H,IAC5DU,MAAlB8J,IAA6BA,EAAiB,IAElDxC,EAAS9Y,UAAY5N,EAAOgJ,oBAAoBoe,WAAU+B,GAAQA,EAAKvlB,MAAQslB,EAA0B,aAC9E,GAAvBxC,EAAS9Y,YAAiB8Y,EAAS9Y,UAAY,GAChBwR,MAA/B8J,EAA0B,UAC7BxC,EAAS9jB,UAAYse,EAAM,EAAGlhB,EAAO+I,qBAAuB,EAAiC,EAA9BmgB,EAA0B,WAEzFxC,EAAS9jB,UAAY,EAEtB8jB,EAAS7Y,SAA8DuR,MAAnD0J,EAAoBI,EAAyB,UAAkBJ,EAAoBI,EAAyB,UAAKlpB,EAAOoJ,UAAUge,WAAUvZ,GAAYA,EAASjK,MAAQslB,EAAyB,YAC5L,GAAtBxC,EAAS7Y,WAAgB6Y,EAAS7Y,SAAW,SAE5C,GAAa,GAAToE,KAAKlL,KAAuC,CACtD,GAAoCqY,MAAhCgH,EAA2B,SAC9BnU,KAAK7E,SAAWpN,EAAOqH,UAAU+f,WAAUha,GAAYA,EAASxJ,MAAQwiB,EAA2B,YAC7E,GAAlBnU,KAAK7E,WAAgB6E,KAAK7E,SAAW,QACnC,GAAkCgS,MAA9BgH,EAAyB,OAAgB,CACnD,MAAMsC,EAAwC,CAAEC,OAAU,EAAGC,QAAW,GACxE3W,KAAK7E,SAA4DgS,MAAjDsJ,EAAkBtC,EAAyB,QAAkBsC,EAAkBtC,EAAyB,QAAKpmB,EAAOqH,UAAU+f,WAAUha,GAAYA,EAASxJ,MAAQwiB,EAAyB,UACxL,GAAlBnU,KAAK7E,WAAgB6E,KAAK7E,SAAW,GAgC1C,GA7BmCgS,MAA/BgH,EAA0B,SAC7BnU,KAAK5E,QAAUrN,EAAO8G,SAASsgB,WAAU/Z,GAAWA,EAAQzJ,MAAQwiB,EAA0B,WACzE,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAUrN,EAAO8G,SAASzG,QACnD4R,KAAK5E,SAAWrN,EAAO8G,SAASzG,QACnC4R,KAAKwS,aAAe2B,EAA+B,aACnDnU,KAAKyS,aAAe0B,EAA+B,aACnDnU,KAAK0S,aAAeyB,EAA+B,aACnDnU,KAAK2S,YAAcwB,EAA8B,cAGjDnU,KAAKwS,aAAezkB,EAAO8G,SAASmL,KAAK5E,SAASzK,UAClDqP,KAAK0S,aAAe3kB,EAAO8G,SAASmL,KAAK5E,SAASrG,WAClDiL,KAAKyS,aAAe,GACpBzS,KAAK2S,YAAc5kB,EAAO8G,SAASmL,KAAK5E,SAAStG,OAEVqY,MAA9BgH,EAAyB,SACnCnU,KAAK5E,QAAUya,EAAkBlB,QAAQR,EAAyB,SAC7C,GAAjBnU,KAAK5E,UAAe4E,KAAK5E,QAAU,IAGxC4E,KAAKjF,MAAQhN,EAAOkI,OAAOkf,WAAUpa,GAASA,EAAMpJ,MAAQwiB,EAAwB,SACjE,GAAfnU,KAAKjF,QAAaiF,KAAKjF,MAAQ,GAGD,kBAA9BoZ,EAAyB,SAC5BnU,KAAK7E,SAAW,EAChB6E,KAAKjF,MAAQ,GAGVoZ,EAAiC,eAAG,CAEvC,IAAK,IAAIhmB,EAAY,EAAGA,EAAI,GAAIA,IAC/B6R,KAAKnE,eAAe1N,GAAKgmB,EAAiC,eAAEhmB,GAI7D,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI6R,KAAKnE,eAAezN,OAAQD,IACvDD,GAAO8R,KAAKnE,eAAe1N,GAE5B,MAAME,EAAkBH,EAAM8R,KAAKnE,eAAezN,OAGlD,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAI6R,KAAKnE,eAAezN,OAAQD,IACvDG,GAAcC,EACdA,EAAWyR,KAAKnE,eAAe1N,GAAKE,EACpC2R,KAAKsT,uBAAuBnlB,GAAKG,EAIlC0R,KAAKsT,uBAAuB,IAAM,OAG7B,CAAA,GAAa,GAATtT,KAAKlL,KAUf,MAAM,IAAIlF,MAAM,iCAThB,GAAuCud,MAAnCgH,EAA8B,YACjC,IAAK,IAAIN,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAChD7T,KAAKsB,YAAYuS,GAAOM,EAA8B,YAAEN,GACxD7T,KAAK2T,eAAeE,GAAOM,EAAiC,eAAEN,GAC9D7T,KAAK4T,YAAYC,GAAOM,EAA8B,YAAEN,GACxD7T,KAAK0T,YAAYG,GAAOM,EAA8B,YAAEN,GAO9C,GAAT7T,KAAKlL,OAEU,GAAdkL,KAAKjF,OAAmDoS,MAArCgH,EAAgC,cACtDnU,KAAK8S,cAAgBqB,EAAgC,cAGrDnU,KAAK8S,cAAgB,EAAoB,EAAI,GAGJ3F,MAAtCgH,EAAiC,eACpCnU,KAAK+S,eAAiBoB,EAAiC,eAGvDnU,KAAK+S,eAAiB5hB,EAGsBgc,MAAzCgH,EAAoC,kBACvCnU,KAAKgT,kBAAoBmB,EAAoC,kBAG7DnU,KAAKgT,mBAAoB,EAGqB7F,MAA3CgH,EAAsC,oBACzCnU,KAAKiT,oBAAsBkB,EAAsC,oBAGjEnU,KAAKiT,qBAAsB,GAKvBpZ,0BAA0ByV,GAGhC,OAAOvhB,EAAOyK,gBAAkB5J,KAAKuB,IAAI,EAAKmf,EAAQvhB,EAAO0K,iBAAmB7J,KAAKmb,MAAMhc,EAAO6K,aAAa,IAGzGiB,kCAAkC7K,GAIxC,OAAOmjB,EAAWgF,mBAAmBppB,EAAOwJ,kBAAoBvI,GAAS,GAASjB,EAAOwJ,mBAAqBxJ,EAAO2K,WAAa,MAG3HmB,SAAqC7K,GAE5C,OAAO,GAAKJ,KAAK6B,IAAI0hB,EAAWiF,2BAA2BpoB,IAAUJ,KAAK8B,IAGpEmJ,SAIN,GAHAmG,KAAKmT,QAAU,EACfnT,KAAKoT,YAAc,EACnBpT,KAAKqT,QAAU,EACF,GAATrT,KAAKlL,KACR/F,EAAYiR,KAAKsS,UAAWrjB,EAA6BC,QACnD,GAAa,GAAT8Q,KAAKlL,KACfkL,KAAKuT,cAAc8D,qBACb,GAAa,GAATrX,KAAKlL,KACfkL,KAAKkU,aAAamD,cAAc,QAC1B,GAAa,GAATrX,KAAKlL,KACf,IAAK,IAAI3G,EAAY,EAAGA,EAAIJ,EAAO2K,UAAWvK,IAC7C6R,KAAKyT,qBAAqBtlB,GAAGkpB,cAAclF,EAAWmF,EAA8BnpB,IAKhF0L,cACN,GAAa,GAATmG,KAAKlL,KACR,OAAO/F,EAAYiR,KAAKsS,UAAWrjB,EAA6BC,GAC1D,GAAa,GAAT8Q,KAAKlL,KACf,OAAOkL,KAAKkU,aAAamD,cAAc,GAEvC,MAAM,IAAIznB,MAAM,4CAIXiK,eAAeyV,GACrB,GAAa,GAATtP,KAAKlL,KACR,OAAOkL,KAAKyT,qBAAqBnE,GAAO+H,cAAclF,EAAWmF,EAA8BhI,IAE/F,MAAM,IAAI1f,MAAM,4CAIXiK,gBACN,OAAgB,GAATmG,KAAKlL,KAAiC/G,EAAOuG,YAAY7C,WAAW,aACjE,GAATuO,KAAKlL,KAA6B/G,EAAOuG,YAAY7C,WAAqB,SAAI1D,EAAOuG,YAAY0L,KAAKnF,YAEjGhB,WACN,OAAgB,GAATmG,KAAKlL,KAAiC/G,EAAOkI,OAAOxE,WAAoB,QAAI1D,EAAOkI,OAAO+J,KAAKjF,OAEhGlB,yBACN,OAAgB,GAATmG,KAAKlL,KAAiC,EAA2D,IAAtDkL,KAAKuS,cAAgBxkB,EAAOqG,kBAAoB,IAE5FyF,wBACN,OAAgB,GAATmG,KAAKlL,MAAiE,GAAxBkL,KAAK/E,gBAEpDpB,qBACN,OAAgB,GAATmG,KAAKlL,KAAiC,EAAIkL,KAAK/E,gBAEhDpB,oBACN,GAAa,GAATmG,KAAKlL,KAAgC,MAAM,IAAIlF,MAAM,0CACzD,OAAO7B,EAAOoJ,UAAU6I,KAAK9E,gBAEvBrB,mBAAmByV,GACzB,GAAa,GAATtP,KAAKlL,KAAgC,MAAM,IAAIlF,MAAM,+CACzD,OAAO7B,EAAOoJ,UAAU6I,KAAKwT,iBAAiBlE,KAIhD,IAAYwE,EAOAE,GAPZ,SAAYF,GACXA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,OAAA,GAAA,SAJD,CAAYA,IAAAA,EAAS,KAOrB,SAAYE,GACXA,EAAAA,EAAA,QAAA,GAAA,UACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,SAAA,GAAA,WACAA,EAAAA,EAAA,UAAA,GAAA,YACAA,EAAAA,EAAA,WAAA,GAAA,aACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,OAAA,GAAA,SACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,cAAA,GAAA,gBACAA,EAAAA,EAAA,aAAA,GAAA,eACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,aAAA,IAAA,eACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,UAAA,IAAA,YACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,cAAA,IAAA,gBACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,gBAAA,IAAA,kBACAA,EAAAA,EAAA,iBAAA,IAAA,mBACAA,EAAAA,EAAA,YAAA,IAAA,cACAA,EAAAA,EAAA,iBAAA,IAAA,mBACAA,EAAAA,EAAA,YAAA,IAAA,cAxBD,CAAYA,IAAAA,EAAU,WA2BTuD,EAAb1d,cACQmG,KAAAwX,OAAiB,EACRxX,KAAAyX,YAA4B,GAC5BzX,KAAA0X,SAAsB,GACtB1X,KAAA2X,KAAiB,GAC1B3X,KAAA4X,OAAiB,EACjB5X,KAAArO,KAAe,UAGVkmB,EAmGZhe,YAAYie,GApEI9X,KAAA+X,SAAsB,GAC/B/X,KAAAgY,WAAqB,EACrBhY,KAAAiY,UAAoB,IACpBjY,KAAAkY,qBAA+B,EAC/BlY,KAAAmY,eAAyB,EACzBnY,KAAAoY,iBAA2B,EAC3BpY,KAAAqY,WAAqB,EACrBrY,KAAAsY,WAAqB,EACrBtY,KAAAuY,YAAsB,EACtBvY,KAAAwY,aAAuB,EAGvBxY,KAAAyY,WAAsC,IAAIhS,IAAwB,CACxE,CAACuN,EAAWC,QAAS,GACrB,CAACD,EAAW0E,cAAe,KAC3B,CAAC1E,EAAW2E,SAAU5qB,EAAO2E,SAAW3E,EAAO0E,UAC/C,CAACuhB,EAAW4E,UAAW7qB,EAAO4E,YAAc,GAC5C,CAACqhB,EAAW6E,WAAY,GACxB,CAAC7E,EAAW8E,aAAc/qB,EAAO0H,aACjC,CAACue,EAAW+E,OAAQhrB,EAAO6H,QAC3B,CAACoe,EAAWgF,aAAcjrB,EAAOqG,kBAAoB,GACrD,CAAC4f,EAAWiF,cAAelrB,EAAOsG,qBAAuB,GACzD,CAAC2f,EAAWkF,aAAc,IAC1B,CAAClF,EAAWmF,aAAc,IAC1B,CAACnF,EAAWoF,aAAc,IAC1B,CAACpF,EAAWqF,aAAc,IAC1B,CAACrF,EAAWsF,cAAe,IAC3B,CAACtF,EAAWuF,cAAexrB,EAAOiK,iBAClC,CAACgc,EAAWwF,UAAWzrB,EAAO+H,UAAY/H,EAAO8H,WACjD,CAACme,EAAWyF,gBAAiB,IAC7B,CAACzF,EAAW0F,cAAe3rB,EAAOiI,cAAgBjI,EAAOgI,eACzD,CAACie,EAAW2F,gBAAiB,IAC7B,CAAC3F,EAAW4F,gBAAiB,IAC7B,CAAC5F,EAAW6F,iBAAkB,IAC9B,CAAC7F,EAAW8F,YAAa,IACzB,CAAC9F,EAAW+F,iBAAkB,GAC9B,CAAC/F,EAAWgG,YAAa,KAKnBha,KAAAia,eAA0C,IAAIxT,IAAwB,CAC5E,CAACuN,EAAWC,QAAS,GACrB,CAACD,EAAW0E,cAAe,KAC3B,CAAC1E,EAAW2E,SAAU/pB,KAAKkgB,MAAM/gB,EAAO2E,SAAW3E,EAAO0E,UAAY,IACtE,CAACuhB,EAAW4E,UAAW,GACvB,CAAC5E,EAAW6E,WAAY,GACxB,CAAC7E,EAAW8E,aAAclqB,KAAKkgB,KAAK/gB,EAAO0H,YAAc,IACzD,CAACue,EAAW+E,OAAQnqB,KAAKkgB,KAAK/gB,EAAO6H,OAAS,IAC9C,CAACoe,EAAWgF,aAAcjrB,EAAOqG,kBAAoB,GACrD,CAAC4f,EAAWiF,cAAe,GAC3B,CAACjF,EAAWkF,aAAc,IAC1B,CAAClF,EAAWmF,aAAc,IAC1B,CAACnF,EAAWoF,aAAc,IAC1B,CAACpF,EAAWqF,aAAc,IAC1B,CAACrF,EAAWsF,cAAe,IAC3B,CAACtF,EAAWuF,cAAe3qB,KAAKkgB,KAAK/gB,EAAOiK,kBAC5C,CAACgc,EAAWwF,UAAW5qB,KAAKkgB,MAAM/gB,EAAO+H,UAAY/H,EAAO8H,WAAa,IACzE,CAACme,EAAWyF,gBAAiB,GAC7B,CAACzF,EAAW0F,cAAe9qB,KAAKkgB,MAAM/gB,EAAOiI,cAAgBjI,EAAOgI,eAAiB,IACrF,CAACie,EAAW2F,gBAAiB,GAC7B,CAAC3F,EAAW4F,gBAAiB,GAC7B,CAAC5F,EAAW6F,iBAAkB,IAC9B,CAAC7F,EAAW8F,YAAa,IACzB,CAAC9F,EAAW+F,iBAAkB,GAC9B,CAAC/F,EAAWgG,YAAa,KAsGnBha,KAAAka,iBAAmB,CAACC,EAAgBC,EAAqBC,EAAwB1hB,KACvF,GAAKwhB,GAAuBhN,MAAdiN,GAA4CjN,MAAjBkN,GAA0ClN,MAAZxU,EAElE,CAEJA,EAAW5K,EAAO4K,SAAWA,EAAW,EAExC,IAAI2hB,EAA0Bta,KAAKia,eAAezY,IAAIxB,KAAK+X,SAASqC,GAAY3C,YAAY4C,GAAezG,YAAYjb,IAOvH,OAJIqH,KAAK+X,SAASqC,GAAY3C,YAAY4C,GAAezG,YAAYjb,IAAaqb,EAAW2E,WAC5F2B,EAAMta,KAAKua,eAAeva,KAAKwa,MAAOxG,EAAW2E,WAGvCxL,MAAPmN,EACIA,EAEA,EAfR,OAAO,GAoBFta,KAAAya,aAAe,CAACN,EAAgBC,EAAqBC,EAAwB1hB,KACnF,GAAKwhB,GAAuBhN,MAAdiN,GAA4CjN,MAAjBkN,GAA0ClN,MAAZxU,EAElE,CAEJA,EAAW5K,EAAO4K,SAAWA,EAAW,EAExC,IAAI2hB,EAA0Bta,KAAKyY,WAAWjX,IAAIxB,KAAK+X,SAASqC,GAAY3C,YAAY4C,GAAezG,YAAYjb,IACnH,OAAWwU,MAAPmN,EACIA,EAEA,EATR,OAAO,GAaFta,KAAA0a,uBAAyB,CAACP,EAAgBQ,KAChD,GAAKR,EAEA,CACJ,IAAIG,EAA0Bta,KAAKyY,WAAWjX,IAAImZ,GAClD,OAAWxN,MAAPmN,EACIA,EAEA,EANR,OAAO,GAzIMnN,MAAV2K,EACH9X,KAAK4a,iBAAiB9C,GAEtB9X,KAAK6a,eAAc,GAIdhhB,eAAenI,EAAeopB,GACpC,OAAQA,GACP,KAAK9G,EAAW2E,SACfjnB,GAAS3D,EAAO0E,SAChB,MACD,KAAKuhB,EAAW8E,aACfpnB,GAAS3D,EAAO0H,YAAc,EAC9B,MACD,KAAKue,EAAWwF,UACf9nB,GAAS3D,EAAO8H,UAChB,MACD,KAAKme,EAAW0F,cACfhoB,GAAS3D,EAAOgI,cAChB,MACD,KAAKie,EAAWgF,aAChB,KAAKhF,EAAWiF,cAChB,KAAKjF,EAAW0E,cAChB,KAAK1E,EAAW+E,OAChB,KAAK/E,EAAW4E,UAChB,KAAK5E,EAAW6E,WAChB,KAAK7E,EAAWkF,aAChB,KAAKlF,EAAWmF,aAChB,KAAKnF,EAAWoF,aAChB,KAAKpF,EAAWqF,aAChB,KAAKrF,EAAWsF,cAChB,KAAKtF,EAAWuF,cAChB,KAAKvF,EAAWyF,gBAChB,KAAKzF,EAAW2F,gBAChB,KAAK3F,EAAW4F,gBAChB,KAAK5F,EAAW6F,iBAChB,KAAK7F,EAAW8F,YAChB,KAAK9F,EAAW+F,iBAChB,KAAK/F,EAAWC,SAIjB,OAAOviB,EAGDmI,iBAAiBihB,GACvB,OAAQA,GACP,KAAK9G,EAAW2E,SAChB,KAAK3E,EAAW4E,UAChB,KAAK5E,EAAW0E,cAChB,KAAK1E,EAAW6E,WACf,OAAO,EACR,QACC,OAAO,GAIHhf,eAAenI,EAAeopB,GACpC,OAAQA,GACP,KAAK9G,EAAW2E,SACfjnB,GAAS3D,EAAO0E,SAChB,MACD,KAAKuhB,EAAW8E,aACfpnB,GAAS3D,EAAO0H,YAAc,EAC9B,MACD,KAAKue,EAAWwF,UACf9nB,GAAS3D,EAAO8H,UAChB,MACD,KAAKme,EAAW0F,cACfhoB,GAAS3D,EAAOgI,cAChB,MACD,KAAKie,EAAWgF,aAChB,KAAKhF,EAAWiF,cAChB,KAAKjF,EAAW0E,cAChB,KAAK1E,EAAW+E,OAChB,KAAK/E,EAAW4E,UAChB,KAAK5E,EAAW6E,WAChB,KAAK7E,EAAWkF,aAChB,KAAKlF,EAAWmF,aAChB,KAAKnF,EAAWoF,aAChB,KAAKpF,EAAWqF,aAChB,KAAKrF,EAAWsF,cAChB,KAAKtF,EAAWuF,cAChB,KAAKvF,EAAWyF,gBAChB,KAAKzF,EAAW2F,gBAChB,KAAK3F,EAAW4F,gBAChB,KAAK5F,EAAW6F,iBAChB,KAAK7F,EAAW8F,YAChB,KAAK9F,EAAW+F,iBAChB,KAAK/F,EAAWC,SAIjB,OAAOviB,EAqDDmI,kBACN,OAAOmG,KAAKkB,kBAAoBlB,KAAKoB,kBAAoBpB,KAAK+a,gBAGxDlhB,kBAAkBuG,GACxB,OAAQA,GAAWJ,KAAKkB,mBAAqBd,EAAUJ,KAAKkB,kBAAoBlB,KAAKoB,kBAG/EvH,gBAAgBuG,GACtB,OAAQA,GAAWJ,KAAKkB,kBAAoBlB,KAAKoB,kBAG3CvH,cAAcmhB,GAA4B,GAuBhD,GAtBAhb,KAAKib,MAAQ,EACbjb,KAAKpC,IAAM,EACXoC,KAAKkb,UAAY,EACjBlb,KAAKmb,WAAa,EAClBnb,KAAKwa,MAAQ,IACbxa,KAAKob,OAAS,EACdpb,KAAKxH,gBAAkB,mBACvBwH,KAAKqb,IAAM,GACXrb,KAAKlH,SAAWkH,KAAKqb,IAAMttB,EAAO6K,aAClCoH,KAAKsb,YAAc,EAEnBtb,KAAKub,SAAW,GAChBvb,KAAKwb,mBAAqB,GAC1Bxb,KAAKyb,OAAS,EACdzb,KAAK0b,sBAAwB,EAK7B1b,KAAK2b,MAAQ,UACb5e,SAAS4e,MAAQ/hB,EAAac,mBAE1BsgB,EAAkB,CACrBhb,KAAKkB,kBAAoB,EACzBlB,KAAKoB,kBAAoB,EACzBpB,KAAK+a,gBAAkB,EACvB,IAAK,IAAIa,EAAe,EAAGA,EAAe5b,KAAK6b,kBAAmBD,IAAgB,CAC7E5b,KAAK+X,SAAS3pB,QAAUwtB,IAC3B5b,KAAK+X,SAAS6D,GAAgB,IAAIrE,GAEnC,MAAMnX,EAAmBJ,KAAK+X,SAAS6D,GACvCxb,EAAQoX,OAAS5oB,KAAKsgB,IAAI,EAAI0M,EAAc,GAE5C,IAAK,IAAIE,EAAU,EAAGA,EAAU9b,KAAKwb,mBAAoBM,IACpD1b,EAAQsX,SAAStpB,QAAU0tB,EAC9B1b,EAAQsX,SAASoE,GAAW,IAAIxL,EAEhClQ,EAAQsX,SAASoE,GAASlL,QAG5BxQ,EAAQsX,SAAStpB,OAAS4R,KAAKwb,mBAE/B,MAAM1K,EAA0B8K,GAAgB5b,KAAKkB,mBAAqB0a,EAAe5b,KAAKkB,kBAAoBlB,KAAKoB,kBACjHgR,EAAwBwJ,GAAgB5b,KAAKkB,kBAAoBlB,KAAKoB,kBAC5E,IAAK,IAAIoP,EAAa,EAAGA,EAAaxQ,KAAK0b,sBAAuBlL,IAC7DpQ,EAAQqX,YAAYrpB,QAAUoiB,IACjCpQ,EAAQqX,YAAYjH,GAAc,IAAI2B,EAAWrB,EAAgBsB,IAElEhS,EAAQqX,YAAYjH,GAAYqE,gBAAgBzC,EAAY,EAAyBtB,EAAc,EAAA,EAAgDA,EAAgBsB,GAEpKhS,EAAQqX,YAAYrpB,OAAS4R,KAAK0b,sBAElC,IAAK,IAAIK,EAAM,EAAGA,EAAM/b,KAAKub,SAAUQ,IACtC3b,EAAQuX,KAAKoE,GAAOA,EAAM,EAAI,EAAI,EAEnC3b,EAAQuX,KAAKvpB,OAAS4R,KAAKub,SAE5Bvb,KAAK+X,SAAS3pB,OAAS4R,KAAK6b,mBAIvBhiB,iBACN,IAAImiB,EACAnN,EAAmB,GAEvBA,EAAOrgB,KAAKqpB,EAAKoE,GACjBpN,EAAOrgB,KAAKof,EAAoBiK,EAAKqE,IAGrCrN,EAAOrgB,KAAI,IAGX,IAAI2tB,EAA2BC,mBAAmBpc,KAAK2b,OACvD9M,EAAOrgB,KAAKof,EAAoBuO,EAAiB/tB,QAAU,GAAIwf,EAA8C,GAA1BuO,EAAiB/tB,SAGpG,IAAK,IAAID,EAAY,EAAGA,EAAIguB,EAAiB/tB,OAAQD,IACpD0gB,EAAOrgB,KAAK2tB,EAAiBjO,WAAW/f,IAGzC0gB,EAAOrgB,KAAI,IAA2Bof,EAAoB5N,KAAKkB,mBAAoB0M,EAAoB5N,KAAKoB,mBAAoBwM,EAAoB5N,KAAK+a,kBACzJlM,EAAOrgB,KAAI,IAAoBof,EAAoB5N,KAAKib,QAExDpM,EAAOrgB,KAAI,IAAkBof,EAAoB,IACjDiB,EAAOrgB,KAAI,IAAwBof,EAAoB5N,KAAKkb,WAAa,GAAItN,EAAqC,GAAjB5N,KAAKkb,YACtGrM,EAAOrgB,KAAI,IAAsBof,EAAqB5N,KAAKmb,WAAa,GAAM,GAAIvN,EAAqB5N,KAAKmb,WAAa,EAAK,KAC9HtM,EAAOrgB,KAAI,IAAoBof,EAAoB5N,KAAKwa,OAAS,GAAI5M,EAAiC,GAAb5N,KAAKwa,QAC9F3L,EAAOrgB,KAAI,IAAqBof,EAAoB5N,KAAKob,SACzDvM,EAAOrgB,KAAI,GAAkBof,EAAoB5N,KAAKqb,MACtDxM,EAAOrgB,KAAI,GAAwBof,EAAoB5N,KAAKsb,YAAc,IAC1EzM,EAAOrgB,KAAI,IAAuBof,EAAqB5N,KAAKub,SAAW,GAAM,GAAI3N,EAAqB5N,KAAKub,SAAW,EAAK,KAC3H1M,EAAOrgB,KAAI,IAA2Bof,EAAqB5N,KAAKwb,mBAAqB,GAAM,GAAI5N,EAAqB5N,KAAKwb,mBAAqB,EAAK,KACnJ3M,EAAOrgB,KAAI,IAA8Bof,EAAoB5N,KAAK0b,sBAAwB,IAC1F7M,EAAOrgB,KAAI,IAAqBof,EAAoB5N,KAAKyb,SAGzD5M,EAAOrgB,KAAI,IACkB,GAAzBwR,KAAKoY,kBAA8C,GAAnBpY,KAAKqY,YAAuC,KAAlBrY,KAAKiY,WAA0C,GAAnBjY,KAAKgY,YAA4C,GAAvBhY,KAAKmY,gBAAsD,GAA7BnY,KAAKkY,sBAAkD,GAAnBlY,KAAKsY,YAC1LzJ,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,MAAM/J,KAAKoY,iBAAmB,EAA4B,GAAxBpY,KAAKoY,iBAAwB,GAAmC,IAA7BpY,KAAKoY,iBAAmB,MAClIvJ,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,MAAM/J,KAAKqY,WAAa,EAAsB,GAAlBrY,KAAKqY,WAAkB,EAAIrY,KAAKqY,cACjGxJ,EAAOrgB,KAAKof,EAAoB5N,KAAKgY,aACrCnJ,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,OAAO/J,KAAKiY,UAAY,KAAU,OACvEpJ,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,MAAkC,GAA5B/J,KAAKkY,wBAChDrJ,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,MAA4B,GAAtB/J,KAAKmY,kBAChDtJ,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,MAAwB,GAAlB/J,KAAKsY,aAAoB,GAAI1K,EAAuD,GAAnChf,KAAKmb,MAAwB,GAAlB/J,KAAKsY,eAG5GzJ,EAAOrgB,KAAKof,EAAoB,KAGjCiB,EAAOrgB,KAAI,IACX,IAAK,IAAI4R,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAAW,CAE1E,IAAIic,EAA6BD,mBAAmBpc,KAAK+X,SAAS3X,GAASzO,MAC3Ekd,EAAOrgB,KAAKof,EAAoByO,EAAmBjuB,QAAU,GAAIwf,EAAgD,GAA5ByO,EAAmBjuB,SAGxG,IAAK,IAAID,EAAY,EAAGA,EAAIkuB,EAAmBjuB,OAAQD,IACtD0gB,EAAOrgB,KAAK6tB,EAAmBnO,WAAW/f,IAI5C0gB,EAAOrgB,KAAI,KACX,IAAK,IAAI4R,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAC/DyO,EAAOrgB,KAAKof,EAAoB5N,KAAK+X,SAAS3X,GAASoX,SAGxD,IAAK,IAAIpX,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAC/D,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAK0b,sBAAuBvtB,IAAK,CAC5D,MAAMqiB,EAAyBxQ,KAAK+X,SAAS3X,GAASqX,YAAYtpB,GAqBlE,GApBA0gB,EAAOrgB,KAAI,GAA8Bof,EAAoB4C,EAAW1b,OACxE+Z,EAAOrgB,KAAI,IAAqBof,EAAqB4C,EAAW3c,OAAS9F,EAAO0H,YAAc,GAAM,GAAImY,EAAqB4C,EAAW3c,OAAS9F,EAAO0H,YAAc,EAAK,KAC3KoZ,EAAOrgB,KAAI,GAAsBof,EAAoB4C,EAAWoC,KAAO,GAAIhF,EAAqC,GAAjB4C,EAAWoC,MAC1G/D,EAAOrgB,KAAKof,EAAoB4C,EAAWqC,WAC3ChE,EAAOrgB,KAAI,GAAqBof,EAAqB4C,EAAW0C,OAASnlB,EAAO8H,WAAc,GAAI+X,EAAqB4C,EAAW0C,OAASnlB,EAAO8H,UAAa,KAC/JgZ,EAAOrgB,KAAI,IAAqBof,EAAoB4C,EAAWnW,QAAU,GAAIuT,EAAwC,GAApB4C,EAAWnW,SAC5GwU,EAAOrgB,KAAI,IAAsBof,EAAoB4C,EAAW1V,UAG7C,GAAf0V,EAAW1b,OACd+Z,EAAOrgB,KAAI,IAAyBof,EAAoB4C,EAAW3V,aAEnEgU,EAAOrgB,KAAKof,GAAqB4C,EAAWwC,oBAC5CnE,EAAOrgB,KAAKof,GAAqB4C,EAAWyC,sBAC5CpE,EAAOrgB,KAAI,IAA2Bof,EAAoB4C,EAAW+B,eACrE1D,EAAOrgB,KAAI,IAA8Bof,EAAoB4C,EAAWvV,kBACxE4T,EAAOrgB,KAAI,IAA6Bof,EAAoB4C,EAAWtV,iBACvE2T,EAAOrgB,KAAI,GAAoBof,EAAoB4C,EAAWzV,SAG5C,GAAfyV,EAAW1b,KACd+Z,EAAOrgB,KAAI,IAAmBof,EAAoB4C,EAAW6B,WAC7DxD,EAAOrgB,KAAI,GAAsBof,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWrN,EAAO8G,SAASzG,SACzCygB,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOrgB,KAAKof,EAAoB4C,EAAWiC,eAC3C5D,EAAOrgB,KAAKof,EAAoB4C,EAAWkC,eAC3C7D,EAAOrgB,KAAKof,EAAoB4C,EAAWmC,eAGpB,GAApBnC,EAAWzV,QACd8T,EAAOrgB,KAAI,GAA4Bof,EAAoB4C,EAAWsC,gBACtEjE,EAAOrgB,KAAKof,GAAqB4C,EAAWuC,kBAE7ClE,EAAOrgB,KAAI,IAAuBof,EAAoB4C,EAAWrV,gBAC3D,GAAmB,GAAfqV,EAAW1b,KAA2B,CAChD+Z,EAAOrgB,KAAI,GAAsBof,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWrN,EAAO8G,SAASzG,SACzCygB,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOrgB,KAAKof,EAAoB4C,EAAWiC,eAC3C5D,EAAOrgB,KAAKof,EAAoB4C,EAAWkC,eAC3C7D,EAAOrgB,KAAKof,EAAoB4C,EAAWmC,eAGpB,GAApBnC,EAAWzV,QACd8T,EAAOrgB,KAAI,GAA4Bof,EAAoB4C,EAAWsC,gBACtEjE,EAAOrgB,KAAKof,GAAqB4C,EAAWuC,kBAE7ClE,EAAOrgB,KAAI,IAAuBof,EAAoB4C,EAAWrV,WACjE0T,EAAOrgB,KAAI,GAAwBof,EAAoB4C,EAAWlV,YAClEuT,EAAOrgB,KAAI,GAA2Bof,EAAoB4C,EAAWjV,eACrEsT,EAAOrgB,KAAI,GAAgCof,EAAoB4C,EAAWhV,oBAC1EqT,EAAOrgB,KAAI,GAA+Bof,EAAoB4C,EAAW/U,mBAEzEoT,EAAOrgB,KAAI,IACX,IAAK,IAAI8tB,EAAY,EAAGA,EAAIvuB,EAAOyI,cAAe8lB,IACjDzN,EAAOrgB,KAAKof,EAAoB4C,EAAW9U,UAAU4gB,GAAG3gB,YAEzDkT,EAAOrgB,KAAI,IACX,IAAK,IAAI8tB,EAAY,EAAGA,EAAIvuB,EAAOyI,cAAe8lB,IACjDzN,EAAOrgB,KAAKof,EAAoB4C,EAAW9U,UAAU4gB,GAAG3rB,YAEzDke,EAAOrgB,KAAI,IACX,IAAK,IAAI8tB,EAAY,EAAGA,EAAIvuB,EAAOyI,cAAe8lB,IACjDzN,EAAOrgB,KAAKof,EAAoB4C,EAAW9U,UAAU4gB,GAAG1gB,gBAEnD,GAAmB,GAAf4U,EAAW1b,KAAuC,CAC5D+Z,EAAOrgB,KAAI,IAAmBof,EAAoB4C,EAAW6B,WAC7DxD,EAAOrgB,KAAI,GAAsBof,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWrN,EAAO8G,SAASzG,SACzCygB,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOrgB,KAAKof,EAAoB4C,EAAWiC,eAC3C5D,EAAOrgB,KAAKof,EAAoB4C,EAAWkC,eAC3C7D,EAAOrgB,KAAKof,EAAoB4C,EAAWmC,eAGpB,GAApBnC,EAAWzV,QACd8T,EAAOrgB,KAAI,GAA4Bof,EAAoB4C,EAAWsC,gBACtEjE,EAAOrgB,KAAKof,GAAqB4C,EAAWuC,kBAE7ClE,EAAOrgB,KAAI,IAAuBof,EAAoB4C,EAAWrV,WAEjE0T,EAAOrgB,KAAI,IAEX,IAAK,IAAIie,EAAY,EAAGA,EAAI,GAAIA,IAC/BoC,EAAOrgB,KAAKof,EAAqB4C,EAAW3U,eAAe4Q,GAAK,UAE3D,GAAmB,GAAf+D,EAAW1b,KACrB+Z,EAAOrgB,KAAI,IAAmBof,EAAoB4C,EAAW8B,YAErC,GAApB9B,EAAWzV,QACd8T,EAAOrgB,KAAI,GAA4Bof,EAAoB4C,EAAWsC,gBACtEjE,EAAOrgB,KAAKof,GAAqB4C,EAAWuC,kBAE7ClE,EAAOrgB,KAAI,IAAuBof,EAAoB4C,EAAWrV,gBAC3D,GAAmB,GAAfqV,EAAW1b,KAAiC,CACtD+Z,EAAOrgB,KAAI,IACX,MAAM+tB,EAA+B,IAAI/N,EACzC,IAAK,IAAIrgB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDouB,EAAa5N,MAAM5gB,EAAO2J,yBAA0B8Y,EAAW0D,aAAahY,SAAS/N,IAEtFouB,EAAaC,aAAa3N,GAC1BA,EAAOrgB,KAAI,GAAsBof,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWrN,EAAO8G,SAASzG,SACzCygB,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOrgB,KAAKof,EAAoB4C,EAAWiC,eAC3C5D,EAAOrgB,KAAKof,EAAoB4C,EAAWkC,eAC3C7D,EAAOrgB,KAAKof,EAAoB4C,EAAWmC,eAEpB,GAApBnC,EAAWzV,QACd8T,EAAOrgB,KAAI,GAA4Bof,EAAoB4C,EAAWsC,gBACtEjE,EAAOrgB,KAAKof,GAAqB4C,EAAWuC,kBAE7ClE,EAAOrgB,KAAI,IAAuBof,EAAoB4C,EAAWrV,gBAC3D,GAAmB,GAAfqV,EAAW1b,KAAgC,CACrD+Z,EAAOrgB,KAAI,KACX,IAAK,IAAIie,EAAY,EAAGA,EAAI1e,EAAO2K,UAAW+T,IAC7CoC,EAAOrgB,KAAKof,EAAoB4C,EAAWgD,iBAAiB/G,KAG7DoC,EAAOrgB,KAAI,IACX,MAAM+tB,EAA+B,IAAI/N,EACzC,IAAK,IAAI/B,EAAY,EAAGA,EAAI1e,EAAO2K,UAAW+T,IAC7C,IAAK,IAAIte,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDouB,EAAa5N,MAAM5gB,EAAO2J,yBAA0B8Y,EAAWiD,qBAAqBhH,GAAGvQ,SAAS/N,IAGlGouB,EAAaC,aAAa3N,QACpB,GAAmB,GAAf2B,EAAW1b,KAAkC,CACvD+Z,EAAOrgB,KAAI,GAAsBof,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWrN,EAAO8G,SAASzG,SACzCygB,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOrgB,KAAKof,EAAoB4C,EAAWiC,eAC3C5D,EAAOrgB,KAAKof,EAAoB4C,EAAWkC,eAC3C7D,EAAOrgB,KAAKof,EAAoB4C,EAAWmC,eAGpB,GAApBnC,EAAWzV,QACd8T,EAAOrgB,KAAI,GAA4Bof,EAAoB4C,EAAWsC,gBACtEjE,EAAOrgB,KAAKof,GAAqB4C,EAAWuC,kBAE7ClE,EAAOrgB,KAAI,IAAuBof,EAAoB4C,EAAWrV,WAEjE0T,EAAOrgB,KAAI,IACX,MAAMiuB,EAAgC,IAAIjO,EAC1C,IAAK,IAAIrgB,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1DsuB,EAAc9N,MAAM5gB,EAAO8J,0BAA2B2Y,EAAW+C,cAAczX,UAAU3N,IAE1FsuB,EAAcD,aAAa3N,QACrB,GAAmB,GAAf2B,EAAW1b,KACrB+Z,EAAOrgB,KAAI,GAAsBof,EAAoB4C,EAAWpV,UAE5DoV,EAAWpV,SAAWrN,EAAO8G,SAASzG,SACzCygB,EAAOrgB,KAAKof,EAAoBhf,KAAKmb,MAAgC,GAA1ByG,EAAWgC,gBACtD3D,EAAOrgB,KAAKof,EAAoB4C,EAAWiC,eAC3C5D,EAAOrgB,KAAKof,EAAoB4C,EAAWkC,eAC3C7D,EAAOrgB,KAAKof,EAAoB4C,EAAWmC,eAGpB,GAApBnC,EAAWzV,QACd8T,EAAOrgB,KAAI,GAA4Bof,EAAoB4C,EAAWsC,gBACtEjE,EAAOrgB,KAAKof,GAAqB4C,EAAWuC,kBAE7ClE,EAAOrgB,KAAI,GAAyBof,EAAoB4C,EAAWxU,YAAa4R,EAAoB4C,EAAWvU,gBAC/G4S,EAAOrgB,KAAI,IAAuBof,EAAoB4C,EAAWrV,gBAC3D,GAAmB,GAAfqV,EAAW1b,KAIrB,MAAM,IAAIlF,MAAM,4BAKnBif,EAAOrgB,KAAI,IACXwtB,EAAO,IAAIxN,EACX,IAAIkO,EAAqB,EACzB,KAAQ,GAAKA,EAAc1c,KAAKwb,mBAAqB,GAAGkB,IACxD,IAAK,IAAItc,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAAW,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAKub,SAAUptB,IACrH6tB,EAAKrN,MAAM+N,EAAY1c,KAAK+X,SAAS3X,GAASuX,KAAKxpB,IAEpD6tB,EAAKQ,aAAa3N,GAElBA,EAAOrgB,KAAI,KACXwtB,EAAO,IAAIxN,EACX,MAAMmO,EAA4B,IAAInO,EACtC,IAAIoO,EAA+B,EACnC,KAAQ,GAAKA,EAAwB5c,KAAK0b,uBAAuBkB,IACjE,IAAK,IAAIxc,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAAW,CAE1E,MAAM0Q,EAA0B9Q,KAAK6c,kBAAkBzc,GACjDgS,EAAwBpS,KAAK8c,gBAAgB1c,GAGnD,GAAIgS,EACH,IAAK,IAAI2K,EAA0B,EAAGA,EAAkB/c,KAAK0b,sBAAuBqB,IAAmB,CAEtG,IAAIvM,EAAyBxQ,KAAK+X,SAAS3X,GAASqX,YAAYsF,GAEhE,IAAK,IAAIlJ,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAAO,CACvD,MAAMmJ,EAAuBxM,EAAWkD,YAAYG,GAC9CuG,EAAqB5J,EAAWlP,YAAYuS,GAC5CwG,EAAwB7J,EAAWmD,eAAeE,GAClD8G,EAAqBnK,EAAWoD,YAAYC,GAElDmI,EAAKrN,MAAM,EAAGqO,GAGVA,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,aAC/DlB,EAAKrN,MAAM,EAAGyL,GACd4B,EAAKrN,MAAMiO,EAAsBvC,IAI9B2C,GAAalJ,EAAUC,QAC1BiI,EAAKrN,MAAM,EAAGgM,IAQlB,MAAMwC,EAAwBrM,GAAkBsB,EAAgB,EAAIpS,KAAK+X,SAAS3X,GAASoX,OAASzpB,EAAO0K,iBAC3G,IAAI2kB,GAAsBtM,GAAkBsB,EAAgB,EAAIrkB,EAAO0K,kBAAoB0kB,EAC3F,MAAME,EAA0BjL,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAMtB,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GACpIwM,EAAsB,GAE5B,IAAK,IAAInvB,EAAY,EAAGA,EAAIkvB,EAAcjvB,OAAQD,IACjDkvB,EAAclvB,IAAMgvB,EAErB,IAAK,MAAMrB,KAAW9b,KAAK+X,SAAS3X,GAASsX,SAG5C,GAFAsE,EAAKrN,MAAMiO,EAAsBd,EAAQtL,YAErCsL,EAAQvL,MAAMniB,OAAS,EAAG,CAC7B4tB,EAAKrN,MAAM,EAAG,GAEd,IAAI4O,EAAkB,EACtB,IAAK,MAAM9M,KAAQqL,EAAQvL,MAAO,CAG7BE,EAAKlB,MAAQgO,GAAWnL,IAC3B4J,EAAKrN,MAAM,EAAG,GACdqN,EAAKrN,MAAM,EAAG,GACdqN,EAAKwB,kBAAkBD,EAAU9M,EAAKlB,QAGnCkB,EAAKlB,MAAQgO,IAChBvB,EAAKrN,MAAM,EAAG,GACVyD,GAAc4J,EAAKrN,MAAM,EAAG,GAChCqN,EAAKwB,kBAAkB/M,EAAKlB,MAAQgO,IAGrCZ,EAAUzc,QAOiB,GAAvBuQ,EAAKf,QAAQthB,OAChBuuB,EAAUhO,MAAM,EAAG,IAEnBgO,EAAUhO,MAAM,EAAG,GACnBgO,EAAUhO,MAAM,EAAG8B,EAAKf,QAAQthB,OAAS,IAG1CuuB,EAAUc,cAAchN,EAAKd,KAAKvhB,OAAS,GAEtCgkB,EAIJuK,EAAUhO,MAAM,EAAG8B,EAAKd,KAAK,GAAG9b,QAHhC8oB,EAAUhO,MAAM,EAAG8B,EAAKd,KAAK,GAAG9b,QAMjC,IAAI6pB,EAAoB,EACpBC,EAAqBlN,EAAKf,QAAQ,GAClCkO,EAAuBD,EAC3B,MAAME,EAAuB,GAC7B,IAAK,IAAI1vB,EAAY,EAAGA,EAAIsiB,EAAKd,KAAKvhB,OAAQD,IAAK,CAClD,MAAMgiB,EAAeM,EAAKd,KAAKxhB,GACzB2vB,EAAoBH,EAAaxN,EAAIhV,SACvCyiB,GAAgBE,GACnBnB,EAAUhO,MAAM,EAAG,GACnBkP,EAAWrvB,KAAKsvB,GAChBF,EAAeE,GAEfnB,EAAUhO,MAAM,EAAG,GAEpBgO,EAAUa,kBAAkBrN,EAAInB,KAAO0O,GACvCA,EAAYvN,EAAInB,KAEXoD,EAIJuK,EAAUhO,MAAM,EAAGwB,EAAItc,QAHvB8oB,EAAUhO,MAAM,EAAGwB,EAAItc,QAOzB,MAAMkqB,EAAsBC,OAAOC,aAAaC,MAAM,KAAMvB,EAAUH,aAAa,KAC7E2B,EAAqBb,EAAa3I,QAAQoJ,IAC7B,GAAfI,GACHnC,EAAKrN,MAAM,EAAG,GACdqN,EAAK3L,OAAOsM,KAEZX,EAAKrN,MAAM,EAAG,GACdqN,EAAKtN,cAAc,EAAG,EAAGyP,GACzBb,EAAac,OAAOD,EAAY,IAEjCb,EAAae,QAAQN,GACjBT,EAAalvB,OAAS,IAAIkvB,EAAagB,MAE3C,MAAMC,EAAuB9N,EAAKf,QAAQW,OAAOwN,GACjD,IAAK,IAAI1vB,EAAY,EAAGA,EAAIowB,EAAWnwB,OAAQD,IAAK,CACnD,MAAMmhB,EAAgBiP,EAAWpwB,GAC3BqwB,EAAqBnB,EAAc1I,QAAQrF,GACjD,IAAmB,GAAfkP,EAAkB,CACrB,IAAIrjB,EAAmB,EACnBsjB,EAAoBrB,EACxB,GAAIqB,EAAYnP,EACf,KAAOmP,GAAanP,GACnBmP,KACyC,GAArCpB,EAAc1I,QAAQ8J,IAAkBtjB,SAG7C,KAAOsjB,GAAanP,GACnBmP,KACyC,GAArCpB,EAAc1I,QAAQ8J,IAAkBtjB,IAG9C6gB,EAAKrN,MAAM,EAAG,GACdqN,EAAK0C,mBAAmBvjB,QAExB6gB,EAAKrN,MAAM,EAAG,GACdqN,EAAKrN,MAAM,EAAG6P,GACdnB,EAAce,OAAOI,EAAY,GAElCnB,EAAcgB,QAAQ/O,GAClB+N,EAAcjvB,OAAS,IAAIivB,EAAciB,MAG5ClB,EADGjvB,GAAKsiB,EAAKf,QAAQthB,OAAS,EAClBqiB,EAAKf,QAAQ,GAEbJ,EAGdiO,EAAU9M,EAAKjB,IAGZ+N,EAAUvd,KAAKsb,YAAcvtB,EAAOqF,eAAiBgf,IACxD4J,EAAKrN,MAAM,EAAG,GACVyD,GAAc4J,EAAKrN,MAAM,EAAG,GAChCqN,EAAKwB,kBAAkBxd,KAAKsb,YAAcvtB,EAAOqF,eAAiBgf,EAAgBmL,SAGnFvB,EAAKrN,MAAM,EAAG,GAKjB,IAAIgQ,EAAuB3C,EAAK4C,eAC5BC,EAAmB,GACvB,KAAOF,EAAe,GACrBE,EAAOR,QAAQzQ,EAAmC,GAAf+Q,IACnCA,IAA+B,EAEhC9P,EAAOrgB,KAAKof,EAAoBiR,EAAOzwB,SACvC6O,MAAM6hB,UAAUtwB,KAAK0vB,MAAMrP,EAAQgQ,GACnC7C,EAAKQ,aAAa3N,GAElB,MAAMkQ,EAAuB,KAC7B,GAAIlQ,EAAOzgB,OAAS2wB,EAEnB,OAAOf,OAAOC,aAAaC,MAAM,KAAMrP,GACjC,CACN,IAAIjd,EAAiB,GACrB,IAAK,IAAIzD,EAAY,EAAGA,EAAI0gB,EAAOzgB,OAAQD,GAAK4wB,EAC/CntB,GAAUosB,OAAOC,aAAaC,MAAM,KAAMrP,EAAOmQ,MAAM7wB,EAAGA,EAAI4wB,IAE/D,OAAOntB,GAIFiI,iBAAiBolB,GACvB,GAAkB,MAAdA,GAAoC,IAAdA,EAEzB,YADAjf,KAAK6a,eAAc,GAGpB,IAAIqE,EAAoB,EAExB,KAAOD,EAAW/Q,WAAWgR,IAAU,IAAoBA,IAI3D,GAFoC,IAAhCD,EAAW/Q,WAAWgR,IAA6BA,IAEnB,KAAhCD,EAAW/Q,WAAWgR,GAEzB,YADAlf,KAAKmf,eAAeC,KAAKC,MAAmB,GAAbH,EAAiBD,EAAaA,EAAWK,UAAUJ,KAKnF,IAAIK,EAAkB,UAGH,KAJSN,EAAW/Q,WAAWgR,KAKjDK,EAAU,UACVL,KAOD,MAAMzkB,EAAkBoT,EAAoBoR,EAAW/Q,WAAWgR,MAElE,GAAe,WAAXK,KAAqC,GAAZ9kB,GAAiBA,EAAUod,EAAK2H,GAAyB/kB,EAAUod,EAAK4H,GAAwB,OAC7H,GAAe,WAAXF,KAAqC,GAAZ9kB,GAAiBA,EAAUod,EAAKqE,GAAyBzhB,EAAUod,EAAK6H,GAAwB,OAI7H,MAAMC,EAAqBllB,EAAU,EAC/BmlB,EAAuBnlB,EAAU,EACjColB,EAAsBplB,EAAU,EAChCqlB,EAAsBrlB,EAAU,EAChCslB,EAAqBtlB,EAAU,EAC/BulB,EAAuBvlB,EAAU,EACjCwlB,EAAuBxlB,EAAU,EAGvC,GAFAuF,KAAK6a,cAAyB,WAAX0E,GAAwBQ,GAEvCH,GAA0B,WAAXL,EAAsB,CAExC,IAAK,MAAMnf,KAAWJ,KAAK+X,SAAU3X,EAAQqX,YAAY,GAAG5c,WAAa,EACzEmF,KAAK+X,SAAS,GAAGN,YAAY,GAAGnF,UAAY,EAG7C,IAGI4N,EACA9f,EAJA+f,EAAoC,EACpCC,GAAmC,EACnCC,EAAyB,GAGzBC,GAA6B,EAC7BnvB,GAA6B,EACjC,KAAO+tB,EAAYD,EAAW7wB,eAAgB8xB,EAAUjB,EAAW/Q,WAAWgR,MAC7E,KAAA,GAEC,IAAIqB,GAAkB1S,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,GAAKrR,EAAoBoR,EAAW/Q,WAAWgR,MAChIlf,KAAK2b,MAAQ6E,mBAAmBvB,EAAWK,UAAUJ,EAAWA,EAAYqB,IAC5ExjB,SAAS4e,MAAQ3b,KAAK2b,MAAQ,MAAQ/hB,EAAac,mBAEnDwkB,GAAaqB,EACZ,MACF,KAAA,IACCvgB,KAAKkB,kBAAoB2M,EAAoBoR,EAAW/Q,WAAWgR,MACnElf,KAAKoB,kBAAoByM,EAAoBoR,EAAW/Q,WAAWgR,MAGlElf,KAAK+a,gBAFS,WAAXwE,GAAwBI,EAEJ,EAGA9R,EAAoBoR,EAAW/Q,WAAWgR,MAElElf,KAAKkB,kBAAoBkO,EAAcrhB,EAAOkK,qBAAsBlK,EAAOmK,qBAAsB8H,KAAKkB,mBACtGlB,KAAKoB,kBAAoBgO,EAAcrhB,EAAOoK,qBAAsBpK,EAAOqK,qBAAsB4H,KAAKoB,mBACtGpB,KAAK+a,gBAAkB3L,EAAcrhB,EAAOsK,mBAAoBtK,EAAOuK,mBAAoB0H,KAAK+a,iBAEhG,IAAK,IAAIa,EAAe5b,KAAK+X,SAAS3pB,OAAQwtB,EAAe5b,KAAK6b,kBAAmBD,IACpF5b,KAAK+X,SAAS6D,GAAgB,IAAIrE,EAEnCvX,KAAK+X,SAAS3pB,OAAS4R,KAAK6b,kBAC3B,MACF,KAAA,IACC7b,KAAKib,MAAQpN,EAAoBoR,EAAW/Q,WAAWgR,MAExC,WAAXK,IAAsBvf,KAAKib,MAAQ,GACtC,MACF,KAAA,IAMCiE,IACAlf,KAAKpC,IAAM,EACV,MACF,KAAA,IAEEoC,KAAKkb,UADF4E,GAAyB,WAAXP,EACA1R,EAAoBoR,EAAW/Q,WAAWgR,OAEzCrR,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,GAAKrR,EAAoBoR,EAAW/Q,WAAWgR,MAE5H,MACF,KAAA,IAEElf,KAAKmb,WADF2E,GAAyB,WAAXP,EACC1R,EAAoBoR,EAAW/Q,WAAWgR,OAEzCrR,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,GAAKrR,EAAoBoR,EAAW/Q,WAAWgR,MAAgB,EAE7I,MACF,KAAA,IAEElf,KAAKwa,MADFqF,GAAyB,WAAXN,EACJ,CAAC,GAAI,IAAK,IAAK,KAAK1R,EAAoBoR,EAAW/Q,WAAWgR,OACjEc,GAA0B,WAAXT,EACZ,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAK1R,EAAoBoR,EAAW/Q,WAAWgR,OAEnHrR,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,EAAMrR,EAAoBoR,EAAW/Q,WAAWgR,MAE1Hlf,KAAKwa,MAAQvL,EAAMlhB,EAAO0E,SAAU1E,EAAO2E,SAAW,EAAGsN,KAAKwa,OAC7D,MACF,KAAA,IACgB,WAAX+E,GACHvf,KAAKob,OAAmE,EAA1DvN,EAAoBoR,EAAW/Q,WAAWgR,MACxDlf,KAAKob,OAASnM,EAAM,EAAGlhB,EAAO4E,YAAaqN,KAAKob,UAGhDpb,KAAKob,OAASvN,EAAoBoR,EAAW/Q,WAAWgR,MACxDlf,KAAKob,OAASnM,EAAM,EAAGlhB,EAAO4E,YAAaqN,KAAKob,SAEhD,MACF,KAAA,GAOCpb,KAAKqb,IAAMxN,EAAoBoR,EAAW/Q,WAAWgR,MACpD,MACF,KAAA,GAEElf,KAAKsb,YADFsE,GAA0B,WAAXL,EACC,CAAC,EAAG,EAAG,EAAG,EAAG,IAAI1R,EAAoBoR,EAAW/Q,WAAWgR,OAE3DrR,EAAoBoR,EAAW/Q,WAAWgR,MAAgB,EAE9Elf,KAAKsb,YAAc1sB,KAAKsgB,IAAInhB,EAAO6E,eAAgBhE,KAAKyB,IAAItC,EAAO8E,eAAgBmN,KAAKsb,cACvF,MACF,KAAA,IAA2B,CAC1B,MAAMC,GAAoB1N,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,GAAKrR,EAAoBoR,EAAW/Q,WAAWgR,MAAgB,EACpJlf,KAAKub,SAAWnM,EAAcrhB,EAAO+E,YAAa/E,EAAOgF,YAAawoB,GACtE,IAAK,IAAInb,EAAU,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAAW,CAClE,IAAK,IAAI2b,EAAM/b,KAAK+X,SAAS3X,GAASuX,KAAKvpB,OAAQ2tB,EAAM/b,KAAKub,SAAUQ,IACvE/b,KAAK+X,SAAS3X,GAASuX,KAAKoE,GAAQA,EAAM,EAAK,EAAI,EAEpD/b,KAAK+X,SAAS3X,GAASuX,KAAKvpB,OAAS4R,KAAKub,UAE1C,MACF,KAAA,IAEEvb,KAAKwb,mBADS,WAAX+D,GAAwBU,EACDpS,EAAoBoR,EAAW/Q,WAAWgR,MAAgB,GAEzDrR,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,GAAKrR,EAAoBoR,EAAW/Q,WAAWgR,MAAgB,EAEtJlf,KAAKwb,mBAAqBpM,EAAc,EAAGrhB,EAAOgF,YAAaiN,KAAKwb,oBACpE,IAAK,IAAIpb,EAAU,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAAW,CAClE,IAAK,IAAI0b,EAAU9b,KAAK+X,SAAS3X,GAASsX,SAAStpB,OAAQ0tB,EAAU9b,KAAKwb,mBAAoBM,IAC7F9b,KAAK+X,SAAS3X,GAASsX,SAASoE,GAAW,IAAIxL,EAEhDtQ,KAAK+X,SAAS3X,GAASsX,SAAStpB,OAAS4R,KAAKwb,mBAE9C,MACF,KAAA,IAAkC,CACjC,MAAME,EAAgC7N,EAAoBoR,EAAW/Q,WAAWgR,MAAgB,EAChGlf,KAAK0b,sBAAwBtM,EAAcrhB,EAAOmF,yBAA0BnF,EAAOoF,yBAA0BuoB,GAC7G,IAAK,IAAItb,EAAU,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAAW,CAClE,MAAM0Q,EAA0B1Q,GAAWJ,KAAKkB,mBAAqBd,EAAUJ,KAAKkB,kBAAoBlB,KAAKoB,kBACvGgR,EAAwBhS,GAAWJ,KAAKkB,kBAAoBlB,KAAKoB,kBACvE,IAAK,IAAI2b,EAAkB/c,KAAK+X,SAAS3X,GAASqX,YAAYrpB,OAAQ2uB,EAAkB/c,KAAK0b,sBAAuBqB,IACnH/c,KAAK+X,SAAS3X,GAASqX,YAAYsF,GAAmB,IAAI5K,EAAWrB,EAAgBsB,GAGtF,GADApS,KAAK+X,SAAS3X,GAASqX,YAAYrpB,OAAS4R,KAAK0b,sBAC7CqE,GAAwB,WAAXR,EAChB,IAAK,IAAIxC,EAAkB,EAAGA,EAAkB/c,KAAK0b,sBAAuBqB,IAC3E/c,KAAK+X,SAAS3X,GAASqX,YAAYsF,GAAiBlI,gBAAgB/D,EAAc,EAAA,EAA+CA,EAAgBsB,IAInJ,MACF,KAAA,IACCpS,KAAKyb,OAAS5N,EAAoBoR,EAAW/Q,WAAWgR,OAEzC,WAAXK,GAAwBK,GAA0B,WAAXL,KAEvB,GAAfvf,KAAKyb,QAA8B,GAAfzb,KAAKyb,SAC5B6E,GAAoB,GAGjBtgB,KAAKyb,QAAU,IAClBtqB,GAAoB,IAGrB,MACF,KAAA,IACC,GAAIyuB,GAA0B,WAAXL,EAClBnf,EAAUyN,EAAoBoR,EAAW/Q,WAAWgR,MAEpDlf,KAAK+X,SAAS3X,GAASoX,OAASvI,EAAM,EAAGlhB,EAAO8K,qBAAuB,EAAGgV,EAAoBoR,EAAW/Q,WAAWgR,OACpHmB,EAAajgB,GAAW6O,EAAM,EAAGlhB,EAAO8K,uBAA0B4nB,OAAOC,aAAaC,QAAQ,iBAAmB,KAAQ,EAAG3gB,KAAK+X,SAAS3X,GAASoX,aAEnJ,IAAKpX,EAAU,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAEnDJ,KAAK+X,SAAS3X,GAASoX,OAASvI,EAAM,EAAGlhB,EAAO8K,qBAAuB,EAAGgV,EAAoBoR,EAAW/Q,WAAWgR,OACpHmB,EAAajgB,GAAW6O,EAAM,EAAGlhB,EAAO8K,uBAA0B4nB,OAAOC,aAAaC,QAAQ,iBAAmB,KAAQ,EAAG3gB,KAAK+X,SAAS3X,GAASoX,QAGpJ,MACF,KAAA,GAAkC,CACjC4I,IACIA,GAA2BpgB,KAAK0b,wBACnCyE,IACAC,EAA0B,GAE3BhR,EAAc,EAAGpP,KAAK+X,SAAS3pB,OAAS,EAAG+xB,GAC3C,MAAM3P,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAC9EQ,EAAyB3R,EAAM,EAAC,EAAyBpB,EAAoBoR,EAAW/Q,WAAWgR,OACzG1O,EAAWqE,gBAAgB+L,EAAgBT,GAA6BngB,KAAKkB,mBAAqBif,EAA4BngB,KAAKkB,kBAAoBlB,KAAKoB,kBAAmB+e,GAA6BngB,KAAKkB,kBAAoBlB,KAAKoB,mBACtOkf,IACH9P,EAAWsC,cAAgB,GAExB3hB,IACHqf,EAAWuC,gBAAiB,GAE5B,MACF,KAAA,IAAyB,CACxB,MAAMjZ,EAAuB+T,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,EAAMrR,EAAoBoR,EAAW/Q,WAAWgR,MACxIlf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB/lB,OAASP,EACtF,MACF,KAAA,IACC,GAAI8lB,GAA0B,WAAXL,EAAsB,CACxC,MAAMsB,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACjDzgB,EAAkByN,EAAoBoR,EAAW/Q,WAAWgR,MAClElf,KAAK+X,SAAS3X,GAASqX,YAAY,GAAGpF,SAAWpD,EAAM,EAAGlhB,EAAO6F,UAAUxF,OAA+E,EAAvEyyB,EAAYhT,EAAoBoR,EAAW/Q,WAAWgR,aACnI,GAAIa,GAAwB,WAAXR,EAAsB,CAC7C,MAAMsB,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACvD,IAAK,IAAIzgB,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAC/D,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAK0b,sBAAuBvtB,IACnDiS,GAAWJ,KAAKkB,kBACnBlB,KAAK+X,SAAS3X,GAASqX,YAAYtpB,GAAGmkB,UAAYrD,EAAM,EAAGlhB,EAAOoB,WAAWf,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAE/Hlf,KAAK+X,SAAS3X,GAASqX,YAAYtpB,GAAGkkB,SAAWpD,EAAM,EAAGlhB,EAAO6F,UAAUxF,OAA+E,EAAvEyyB,EAAYhT,EAAoBoR,EAAW/Q,WAAWgR,aAItI,GAAIc,GAA0B,WAAXT,EAAsB,CAC/C,MAAMsB,EAAwB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnDV,GAA6BngB,KAAKkB,kBACrClB,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB9N,UAAYrD,EAAM,EAAGlhB,EAAOoB,WAAWf,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAEvKlf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB/N,SAAWpD,EAAM,EAAGlhB,EAAO6F,UAAUxF,OAA+E,EAAvEyyB,EAAYhT,EAAoBoR,EAAW/Q,WAAWgR,aAG9KiB,GAA6BngB,KAAKkB,kBACrClB,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB9N,UAAYrD,EAAM,EAAGlhB,EAAOoB,WAAWf,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAEvKlf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB/N,SAAWpD,EAAM,EAAGlhB,EAAO6F,UAAUxF,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAGtK,MACF,KAAA,IACC,GAAIc,GAA0B,WAAXT,EAAsB,CACxC,MAAMnK,EAA2B,CAAC,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/CC,EAA6B,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IAClDC,EAAwB,CAAC,OAAQ,SAAU,SAAU,OAAQ,eAAgB,eAAgB,cAEnG,GAAIsK,GAA0B,WAAXL,EAAsB,CACxCnf,EAAUyN,EAAoBoR,EAAW/Q,WAAWgR,MACpD,MAAM1O,EAAyBxQ,KAAK+X,SAAS3X,GAASqX,YAAY,GAC5D7B,EAAuB,CAAC,EAAG,EAAG,EAAG,GAAG3G,EAAM,EAAGqG,EAAYlnB,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,QACjH1O,EAAW+B,aAAe6C,EAAeQ,GACzCpF,EAAWtV,eAAiBma,EAAiBO,GAC7CpF,EAAWvV,gBAAkB,OACvB,GAAI8kB,GAAwB,WAAXR,EACvB,IAAKnf,EAAU,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IACnD,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAK0b,sBAAuBvtB,IAAK,CAC5D,MAAMqiB,EAAyBxQ,KAAK+X,SAAS3X,GAASqX,YAAYtpB,GAC5DynB,EAAuB3G,EAAM,EAAGqG,EAAYlnB,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,MAAgB,GAChH9e,EAAUJ,KAAKkB,mBAClBsP,EAAW+B,aAAe6C,EAAeQ,GACzCpF,EAAWtV,eAAiBma,EAAiBO,GAC7CpF,EAAWvV,gBAAkB,IAE7BuV,EAAW+B,aAAe,GAC1B/B,EAAWtV,eAAiB,EAC5BsV,EAAWvV,gBAAkB,OAI1B,CACN,MAAM2a,EAAuB3G,EAAM,EAAGqG,EAAYlnB,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAC9F1O,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GACpF5P,EAAW+B,aAAe6C,EAAeQ,GACzCpF,EAAWtV,eAAiBma,EAAiBO,GAC7CpF,EAAWvV,gBAAkB,OAExB,CACyB+E,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GACzE7N,aAAetD,EAAM,EAAGlhB,EAAOqG,kBAAmByZ,EAAoBoR,EAAW/Q,WAAWgR,OAEvG,MACF,KAAA,IACClf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyBnlB,gBAAkBgU,EAAM,EAAGlhB,EAAOsG,qBAAsBwZ,EAAoBoR,EAAW/Q,WAAWgR,OAC/K,MACF,KAAA,IAAiC,CAChC,MAAM1O,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GACpF,GAAmB,GAAf5P,EAAW1b,KACd,IAAK,IAAI3G,EAAY,EAAGA,EAAIJ,EAAO2K,UAAWvK,IAC7CqiB,EAAWgD,iBAAiBrlB,GAAK8gB,EAAM,EAAGlhB,EAAOoJ,UAAU/I,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,YAG9G1O,EAAWtV,eAAiB+T,EAAM,EAAGlhB,EAAOoJ,UAAU/I,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAExG,MACF,KAAA,GACC,GAAe,WAAXK,EAAsB,CAGzB,MAAM/O,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GACpF5P,EAAWxU,WAAapN,KAAKmb,MAAMkF,EAAM,EAAGlhB,EAAOiK,gBAAkB,EAAwF,GAArFpJ,KAAKuB,IAAI,GAAqE,IAA/D,EAAI0d,EAAoBoR,EAAW/Q,WAAWgR,UACrI1O,EAAWvU,cAAgBgT,EAAM,EAAGlhB,EAAOoJ,UAAU/I,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,WAEnG,CACJ,MAAM1O,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GACpF5P,EAAWxU,WAAaiT,EAAM,EAAGlhB,EAAOiK,gBAAkB,EAAG6V,EAAoBoR,EAAW/Q,WAAWgR,OACvG1O,EAAWvU,cAAgBgT,EAAM,EAAGlhB,EAAOoJ,UAAU/I,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAEvG,MACF,KAAA,IACC,GAAIU,GAA0B,WAAXL,EAClBnf,EAAUyN,EAAoBoR,EAAW/Q,WAAWgR,MACpDlf,KAAK+X,SAAS3X,GAASqX,YAAY,GAAG5c,WAAaoU,EAAM,EAAGlhB,EAAOuG,YAAYlG,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,YAC3H,GAAIa,GAAwB,WAAXR,EACvB,IAAKnf,EAAU,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IACnD,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAK0b,sBAAuBvtB,IACvD6R,KAAK+X,SAAS3X,GAASqX,YAAYtpB,GAAG0M,WAAaoU,EAAM,EAAGlhB,EAAOuG,YAAYlG,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,YAGzHW,GAAyB,WAAXN,EACxBvf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyBvlB,WAAaoU,EAAM,EAAGlhB,EAAOuG,YAAYlG,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,QAGzKlf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyBvlB,WAAaoU,EAAM,EAAGlhB,EAAOuG,YAAYlG,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OACzKlf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyBpN,oBAAoBnF,EAAoBoR,EAAW/Q,WAAWgR,MAC5Ilf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyBnN,sBAAsBpF,EAAoBoR,EAAW/Q,WAAWgR,OAE9I,MACF,KAAA,GACC,GAAIU,GAA0B,WAAXL,EAAsB,CACxC,MAAMuB,EAA0B,CAAC,EAAG,EAAG,EAAG,GACpCC,EAA4B,CAAC,EAAG,EAAG,EAAG,IACtC3gB,EAAkByN,EAAoBoR,EAAW/Q,WAAWgR,MAC5D8B,EAAiB/R,EAAM,EAAG6R,EAAc1yB,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAC1F1O,EAAyBxQ,KAAK+X,SAAS3X,GAASqX,YAAY,GAClEjH,EAAWpV,QAAU0lB,EAAcE,GACnCxQ,EAAWtV,eAA+C,GAA7BsV,EAAWtV,eACrC6lB,EAAgBC,GAChBxQ,EAAWtV,oBACR,GAAI6kB,GAAwB,WAAXR,EAAsB,CAC7C,MAAMuB,EAA0B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1CC,EAA4B,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IACnD,IAAK,IAAI3gB,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAC/D,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAK0b,sBAAuBvtB,IAAK,CAC5D,MAAM6yB,EAAiB/R,EAAM,EAAG6R,EAAc1yB,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAC1F1O,EAAyBxQ,KAAK+X,SAAS3X,GAASqX,YAAYtpB,GAClEqiB,EAAWpV,QAAU0lB,EAAcE,GACnCxQ,EAAWtV,eAA+C,GAA7BsV,EAAWtV,eACrC6lB,EAAgBC,GAChBxQ,EAAWtV,qBAGV,GAAI8kB,GAA0B,WAAXT,EAAsB,CAC/C,MAAMuB,EAA0B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAC1CC,EAA4B,CAAC,EAAG,EAAG,EAAG,EAAG,GAAI,IAC7CC,EAAiB/R,EAAM,EAAG6R,EAAc1yB,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAC1F1O,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GACpF5P,EAAWpV,QAAU0lB,EAAcE,GACnCxQ,EAAWtV,eAA+C,GAA7BsV,EAAWtV,eACrC6lB,EAAgBC,GAChBxQ,EAAWtV,mBACR,CACN,MAAME,EAAkB6T,EAAM,EAAGlhB,EAAO8G,SAASzG,OAAS,EAAGyf,EAAoBoR,EAAW/Q,WAAWgR,OACjG1O,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GACpF5P,EAAWpV,QAAUA,EAEjBA,GAAWrN,EAAO8G,SAASzG,QAC9BoiB,EAAWgC,aAAevD,EAAM,EAAGjP,KAAKyY,WAAWjX,IAAIwS,EAAWyF,iBAAoB,EAAG5L,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,GACpJ1O,EAAWiC,aAAexD,EAAM,EAAGjP,KAAKyY,WAAWjX,IAAIwS,EAAW2F,iBAAoB,EAAG9L,EAAoBoR,EAAW/Q,WAAWgR,OACnI1O,EAAWkC,aAAezD,EAAM,EAAGjP,KAAKyY,WAAWjX,IAAIwS,EAAW4F,iBAAoB,EAAG/L,EAAoBoR,EAAW/Q,WAAWgR,OACnI1O,EAAWmC,YAAc1D,EAAM,EAAGlhB,EAAOiH,aAAa5G,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,SAIxG1O,EAAWgC,aAAezkB,EAAO8G,SAAS2b,EAAWpV,SAASzK,UAC9D6f,EAAWiC,aAAe,GAC1BjC,EAAWkC,aAAe3kB,EAAO8G,SAAS2b,EAAWpV,SAASrG,WAC9Dyb,EAAWmC,YAAc5kB,EAAO8G,SAAS2b,EAAWpV,SAAStG,MAI9D,MACF,KAAA,GAAgC,CAC/B,MAAM0b,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GACpF5P,EAAWsC,cAAgB7D,EAAM,EAAGjP,KAAKyY,WAAWjX,IAAIwS,EAAW6F,kBAAqB,EAAGhM,EAAoBoR,EAAW/Q,WAAWgR,OACrI1O,EAAWuC,iBAAiBlF,EAAoBoR,EAAW/Q,WAAWgR,MACrE,MACF,KAAA,IACC,GAAIU,GAA0B,WAAXL,EAClBnf,EAAUyN,EAAoBoR,EAAW/Q,WAAWgR,MACpDlf,KAAK+X,SAAS3X,GAASqX,YAAY,GAAGtc,SAAW8T,EAAM,EAAGlhB,EAAOqH,UAAUhH,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,YACvH,GAAIa,GAAwB,WAAXR,EACvB,IAAKnf,EAAU,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IACnD,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAK0b,sBAAuBvtB,IAAK,CAC5D,MAAM8yB,EAAwBpT,EAAoBoR,EAAW/Q,WAAWgR,MACxE,IAAI/jB,EAAmB8T,EAAM,EAAGlhB,EAAOqH,UAAUhH,OAAQ6yB,GACpC,GAAjBA,IAEH9lB,EAAW,EACX6E,KAAK+X,SAAS3X,GAASqX,YAAYtpB,GAAG4M,MAAQ,GAE/CiF,KAAK+X,SAAS3X,GAASqX,YAAYtpB,GAAGgN,SAAWA,OAG7C,GAAI6kB,GAA0B,WAAXT,EAAsB,CAC/C,MAAM0B,EAAwBpT,EAAoBoR,EAAW/Q,WAAWgR,MACxE,IAAI/jB,EAAmB8T,EAAM,EAAGlhB,EAAOqH,UAAUhH,OAAQ6yB,GACpC,GAAjBA,IAEH9lB,EAAW,EACX6E,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyBrlB,MAAQ,GAEvFiF,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyBjlB,SAAWA,OAEzF6E,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyBjlB,SAAW8T,EAAM,EAAGlhB,EAAOqH,UAAUhH,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAErK,MACF,KAAA,GACClf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyBrlB,MAAQkU,EAAM,EAAGlhB,EAAOkI,OAAO7H,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAC9J,MACF,KAAA,IACClf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyBtlB,QAAUmU,EAAM,EAAGlhB,EAAOyH,aAAapH,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OACtK,MACF,KAAA,IACC,GAAIU,GAA0B,WAAXL,EAAsB,CACxCnf,EAAUyN,EAAoBoR,EAAW/Q,WAAWgR,MACrBlf,KAAK+X,SAAS3X,GAASqX,YAAY,GACvD5jB,OAASjF,KAAKmb,MAAMkF,GAAOlhB,EAAO0H,YAAa,EAA8D,GAA1DoY,EAAoBoR,EAAW/Q,WAAWgR,aAClG,GAAIa,GAAwB,WAAXR,EACvB,IAAKnf,EAAU,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IACnD,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAK0b,sBAAuBvtB,IAAK,CAC7B6R,KAAK+X,SAAS3X,GAASqX,YAAYtpB,GACvD0F,OAASjF,KAAKmb,MAAMkF,GAAOlhB,EAAO0H,YAAa,EAA8D,GAA1DoY,EAAoBoR,EAAW/Q,WAAWgR,aAGpG,GAAIc,GAA0B,WAAXT,EAAsB,CAChBvf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GACzEvsB,OAASjF,KAAKmb,MAAMkF,GAAOlhB,EAAO0H,YAAa,EAA8D,GAA1DoY,EAAoBoR,EAAW/Q,WAAWgR,aAClG,GAAe,WAAXK,EAAsB,CACDvf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAEzEvsB,OAASjF,KAAKmb,MAAMkF,GAAOlhB,EAAO0H,YAAc,EAAG,EAA8D,IAA1DoY,EAAoBoR,EAAW/Q,WAAWgR,MAAuB,QAE/H,CAC2Blf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAEzEvsB,OAASjF,KAAKmb,MAAMkF,GAAOlhB,EAAO0H,YAAc,EAAG1H,EAAO0H,YAAc,EAAI,GAAKoY,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,EAAMrR,EAAoBoR,EAAW/Q,WAAWgR,OAAkBnxB,EAAO0H,YAAc,IAE9O,MACF,KAAA,GAA0B,CACzB,MAAM+a,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAInF5P,EAAWoC,IAAM3D,EAAM,EAAGlhB,EAAO6H,OAAS,EAF5B,WAAX2pB,EAE0C3wB,KAAKmb,MAAM8D,EAAoBoR,EAAW/Q,WAAWgR,OAAkBnxB,EAAa,OAAI,KAGvF8f,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,GAAKrR,EAAoBoR,EAAW/Q,WAAWgR,OAI1I,WAAXK,GAAyBK,IAC5BpP,EAAWqC,SAAWhF,EAAoBoR,EAAW/Q,WAAWgR,OAChE,MACF,KAAA,GACgClf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAEzElN,OAASjE,EAAMlhB,EAAO8H,UAAW9H,EAAO+H,UAAY,GAAK+X,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,GAAKrR,EAAoBoR,EAAW/Q,WAAWgR,MAAiBnxB,EAAO8H,WACrM,MACF,KAAA,GAAiC,CAChC,IAAI2a,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAElF,IAAK,IAAI3T,EAAY,EAAGA,EAAI,GAAIA,IAC/B+D,EAAW3U,eAAe4Q,GACvBwC,GAAO,GAAI,GAAIpB,EAAoBoR,EAAW/Q,WAAWgR,MAAgB,IAG7E,IAAIhxB,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIqiB,EAAW3U,eAAezN,OAAQD,IAC7DD,GAAOsiB,EAAW3U,eAAe1N,GAElC,MAAME,EAAkBH,EAAMsiB,EAAW3U,eAAezN,OAGxD,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAIqiB,EAAW3U,eAAezN,OAAQD,IAC7DG,GAAcC,EACdA,EAAWiiB,EAAW3U,eAAe1N,GAAKE,EAC1CmiB,EAAW8C,uBAAuBnlB,GAAKG,EAIxCkiB,EAAW8C,uBAAuB,IAAM,EAEvC,MACF,KAAA,GAAkC,CACjC,IAAI4N,EAAoBrT,EAAoBoR,EAAW/Q,WAAWgR,MAGjD,IAAbgC,GAEHlhB,KAAKoY,iBAAmB,EACxBpY,KAAKqY,WAAa,EAClBrY,KAAKiY,UAAY,IACjBjY,KAAKgY,WAAa,EAClBhY,KAAKmY,eAAiB,EACtBnY,KAAKkY,qBAAuB,EAC5BlY,KAAKsY,WAAa,IAIlBtY,KAAKoY,iBAAoB8I,EAAY,GAAKA,EAAY,GAAM,GAAKA,EAAY,IAAM,GACnFA,EAAYrT,EAAoBoR,EAAW/Q,WAAWgR,MACtDlf,KAAKqY,WAAc6I,EAAY,GAAKA,EAAY,GAAMA,EAAY,EAClElhB,KAAKgY,WAAanK,EAAoBoR,EAAW/Q,WAAWgR,MAC5Dlf,KAAKiY,UAAuE,IAA1DpK,EAAoBoR,EAAW/Q,WAAWgR,MAAyB,IACrFlf,KAAKkY,qBAAuBrK,EAAoBoR,EAAW/Q,WAAWgR,MAAgB,GACtFlf,KAAKmY,eAAiBtK,EAAoBoR,EAAW/Q,WAAWgR,MAAgB,GAChFlf,KAAKsY,aAAezK,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,GAAKrR,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,IAE/I,MACF,KAAA,GACC,IAAK,IAAI9e,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAAW,CAE1E,IAAI+gB,EAEHA,EADGtB,EACiBhS,EAAoBoR,EAAW/Q,WAAWgR,OAExCrR,EAAoBoR,EAAW/Q,WAAWgR,OAAiB,GAAKrR,EAAoBoR,EAAW/Q,WAAWgR,MACjIlf,KAAK+X,SAAS3X,GAASzO,KAAO6uB,mBAAmBvB,EAAWK,UAAUJ,EAAWA,EAAYiC,IAE7FjC,GAAaiC,EAEb,MACF,KAAA,GACCnhB,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB9kB,UAAY2T,EAAM,EAAGlhB,EAAO0I,WAAWrI,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OACtK,MACF,KAAA,GACClf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB7kB,aAAe0T,EAAM,EAAGlhB,EAAOsJ,UAAUjJ,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OACxK,MACF,KAAA,GACClf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB5kB,kBAAoByT,EAAM,EAAGlhB,EAAO+I,qBAAuB,EAAG+W,EAAoBoR,EAAW/Q,WAAWgR,OACrL,MACF,KAAA,GACClf,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB3kB,iBAAmBwT,EAAM,EAAGlhB,EAAOoJ,UAAU/I,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAC5K,MACF,KAAA,GACC,IAAK,IAAI5C,EAAY,EAAGA,EAAIvuB,EAAOyI,cAAe8lB,IACjDtc,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB1kB,UAAU4gB,GAAG3gB,UAAYsT,EAAM,EAAGlhB,EAAOgJ,oBAAoB3I,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAE7L,MACF,KAAA,GACC,IAAK,IAAI5C,EAAY,EAAGA,EAAIvuB,EAAOyI,cAAe8lB,IACjDtc,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB1kB,UAAU4gB,GAAG3rB,UAAYse,EAAM,EAAGlhB,EAAO+I,qBAAuB,EAAG+W,EAAoBoR,EAAW/Q,WAAWgR,OAE3L,MACF,KAAA,GACC,IAAK,IAAI5C,EAAY,EAAGA,EAAIvuB,EAAOyI,cAAe8lB,IACjDtc,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAAyB1kB,UAAU4gB,GAAG1gB,SAAWqT,EAAM,EAAGlhB,EAAOoJ,UAAU/I,OAAQyf,EAAoBoR,EAAW/Q,WAAWgR,OAElL,MACF,KAAA,GAA2B,CAC1B,MAAM1O,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GACpF,GAAmB,GAAf5P,EAAW1b,KAAiC,CAC/C,MAAMssB,EAAoBxyB,KAAKkgB,KAAK/gB,EAAOyJ,sBAAwBzJ,EAAO2J,yBAA2B,GAC/FskB,EAAuB,IAAIlO,EAAemR,EAAYC,EAAWA,EAAYkC,GACnF,IAAK,IAAIjzB,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDqiB,EAAW0D,aAAahY,SAAS/N,GAAK6tB,EAAKzN,KAAKxgB,EAAO2J,0BAExD8Y,EAAW0D,aAAamN,sBACxBnC,GAAakC,MACP,CAAA,GAAmB,GAAf5Q,EAAW1b,KAWrB,MAAM,IAAIlF,MAAM,yDAXqC,CACrD,MAAMwxB,EAAoBxyB,KAAKkgB,KAAK/gB,EAAO2K,UAAY3K,EAAOyJ,sBAAwBzJ,EAAO2J,yBAA2B,GAClHskB,EAAuB,IAAIlO,EAAemR,EAAYC,EAAWA,EAAYkC,GACnF,IAAK,IAAI3U,EAAY,EAAGA,EAAI1e,EAAO2K,UAAW+T,IAAK,CAClD,IAAK,IAAIte,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDqiB,EAAWiD,qBAAqBhH,GAAGvQ,SAAS/N,GAAK6tB,EAAKzN,KAAKxgB,EAAO2J,0BAEnE8Y,EAAWiD,qBAAqBhH,GAAG4U,sBAEpCnC,GAAakC,IAIb,MACF,KAAA,GAA4B,CAC3B,MAAM5Q,EAAyBxQ,KAAK+X,SAASoI,GAA2B1I,YAAY2I,GAC9EgB,EAAoBxyB,KAAKkgB,KAAK/gB,EAAO4J,uBAAyB5J,EAAO8J,0BAA4B,GACjGmkB,EAAuB,IAAIlO,EAAemR,EAAYC,EAAWA,EAAYkC,GACnF,IAAK,IAAIjzB,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1DqiB,EAAW+C,cAAczX,UAAU3N,GAAK6tB,EAAKzN,KAAKxgB,EAAO8J,2BAE1D2Y,EAAW+C,cAAc8N,sBACzBnC,GAAakC,EACZ,MACF,KAAA,GAAuB,CACtB,IAAIE,EACJ,GAAI1B,GAA0B,WAAXL,EAAsB,CACxCnf,EAAUyN,EAAoBoR,EAAW/Q,WAAWgR,MACpD,MAAM3D,EAAmB1N,EAAoBoR,EAAW/Q,WAAWgR,MACnEoC,EAAkB1yB,KAAKkgB,KAAgB,GAAXyM,GAC5B,MAAMS,EAAuB,IAAIlO,EAAemR,EAAYC,EAAWA,EAAYoC,GACnF,IAAK,IAAInzB,EAAY,EAAGA,EAAIotB,EAAUptB,IACrC6R,KAAK+X,SAAS3X,GAASuX,KAAKxpB,GAAK6tB,EAAKzN,KAAK,GAAK,OAE3C,GAAIuR,GAAyB,WAAXP,EAAsB,CAC9C,IAAI7C,EAAqB,EACzB,KAAQ,GAAKA,EAAc1c,KAAKwb,oBAAoBkB,IACpD4E,EAAkB1yB,KAAKkgB,KAAK9O,KAAK6b,kBAAoB7b,KAAKub,SAAWmB,EAAa,GAClF,MAAMV,EAAuB,IAAIlO,EAAemR,EAAYC,EAAWA,EAAYoC,GACnF,IAAK,IAAIlhB,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAC/D,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAKub,SAAUptB,IAC1C6R,KAAK+X,SAAS3X,GAASuX,KAAKxpB,GAAK6tB,EAAKzN,KAAKmO,GAAc,MAGrD,CACN,IAAIA,EAAqB,EACzB,KAAQ,GAAKA,EAAc1c,KAAKwb,mBAAqB,GAAGkB,IACxD4E,EAAkB1yB,KAAKkgB,KAAK9O,KAAK6b,kBAAoB7b,KAAKub,SAAWmB,EAAa,GAClF,MAAMV,EAAuB,IAAIlO,EAAemR,EAAYC,EAAWA,EAAYoC,GACnF,IAAK,IAAIlhB,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAC/D,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAKub,SAAUptB,IAC1C6R,KAAK+X,SAAS3X,GAASuX,KAAKxpB,GAAK6tB,EAAKzN,KAAKmO,GAI9CwC,GAAaoC,EACZ,MACF,KAAA,IAA2B,CAC1B,IACIlhB,EADAmhB,EAA0B,EAE1BC,IAA2B3B,GAAyB,WAAXN,GAAoC,WAAXA,GAClEkC,EAAgCD,EAAe,EAAI,EACnDE,EAA6BF,EAAe,GAAK,EACrD,GAAI5B,GAA0B,WAAXL,EAClBnf,EAAUyN,EAAoBoR,EAAW/Q,WAAWgR,MAGpDA,IAEAqC,EAAkB1T,EAAoBoR,EAAW/Q,WAAWgR,MAC5DqC,IAAqC,EACrCA,GAAmB1T,EAAoBoR,EAAW/Q,WAAWgR,UACvD,CACN9e,EAAU,EACV,IAAIuhB,EAAgCvS,EAAc,EAAG,EAAGvB,EAAoBoR,EAAW/Q,WAAWgR,OAClG,KAAOyC,EAAwB,GAC9BJ,IAAqC,EACrCA,GAAmB1T,EAAoBoR,EAAW/Q,WAAWgR,MAC7DyC,IAIF,MAAM3F,EAAuB,IAAIlO,EAAemR,EAAYC,EAAWA,EAAYqC,GACnFrC,GAAaqC,EAEb,IAAI3E,EAA+B,EACnC,KAAQ,GAAKA,EAAwB5c,KAAK0b,uBAAuBkB,IACjE,OAAa,CACZ,MAAM9L,EAA0B9Q,KAAK6c,kBAAkBzc,GACjDgS,EAAwBpS,KAAK8c,gBAAgB1c,GAGnD,GAAIgS,EACH,IAAK,IAAI2K,EAA0B,EAAGA,EAAkB/c,KAAK0b,sBAAuBqB,IAAmB,CAEtG,IAAIvM,EAAyBxQ,KAAK+X,SAAS3X,GAASqX,YAAYsF,GAEhE,IAAK,IAAIlJ,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAChDrD,EAAWkD,YAAYG,GAAOmI,EAAKzN,KAAK,GAGpCiC,EAAWkD,YAAYG,IAAQC,EAAUmJ,YAAczM,EAAWkD,YAAYG,IAAQC,EAAUoJ,aAG/F1M,EAAWkD,YAAYG,IAAQC,EAAUmJ,WAC5CzM,EAAWlP,YAAYuS,GAAO5E,EAAM,EAAGjP,KAAKkB,kBAAoB,EAAG8a,EAAKzN,KAAK,IAG7EiC,EAAWlP,YAAYuS,GAAO5E,EAAM,EAAGjP,KAAKoB,kBAAoB,EAAG4a,EAAKzN,KAAK,IAG9EiC,EAAWmD,eAAeE,GAAO5E,EAAM,EAAGjP,KAAK0b,sBAAwB,EAAGM,EAAKzN,KAAKqO,KAIjFpM,EAAWkD,YAAYG,IAAQC,EAAUC,SAC5CvD,EAAWoD,YAAYC,GAAOmI,EAAKzN,KAAK,IAO5C,MAAM4O,EAAwBrM,GAAkBsB,EAAgB,EAAIpS,KAAK+X,SAAS3X,GAASoX,OAASzpB,EAAO0K,iBAC3G,IAAIgY,EAAoB,KACpBN,EAAsB,KAEtBiN,GAAsBtM,GAAkBsB,EAAgB,EAAIrkB,EAAO0K,kBAAoB0kB,EAC3F,MAAME,EAA0BjL,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAMtB,EAAiB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GACpIwM,EAAsB,GAC5B,IAAK,IAAInvB,EAAY,EAAGA,EAAIkvB,EAAcjvB,OAAQD,IACjDkvB,EAAclvB,IAAMgvB,EAErB,IAAK,IAAIhvB,EAAY,EAAGA,EAAI6R,KAAKwb,mBAAoBrtB,IAAK,CACzD,MAAMyzB,EAAsB5hB,KAAK+X,SAAS3X,GAASsX,SAASvpB,GAI5D,GAHAyzB,EAAWhR,QACXgR,EAAWpR,WAAawL,EAAKzN,KAAKqO,IAEjB,WAAX2C,IAAwBK,IAAgC,GAAhB5D,EAAKzN,KAAK,GAAS,SAEjE,IAAIgP,EAAkB,EACtB,MAAMsE,EAAmBD,EAAWrR,MAEpC,KAAOgN,EAAUvd,KAAKsb,YAAcvtB,EAAOqF,eAAiBgf,GAAe,CAE1E,MAAM0P,EAAuC,GAAhB9F,EAAKzN,KAAK,GACvC,IAAI6B,GAAmB,EACnB+N,EAAqB,EAOzB,GANI2D,EACH3D,EAAa/O,EAAc,EAAGkO,EAAalvB,OAAS,EAAG4tB,EAAK1N,aAAa,EAAG,IAE5E8B,EAA0B,GAAhB4L,EAAKzN,KAAK,GAGhBuT,GAAgB1R,EAkBd,CACN,IAAI2R,EACAC,EACA1S,EACJ,GAAIwS,EACHC,EAAQzE,EAAaa,GACrBb,EAAac,OAAOD,EAAY,OAC1B,CAGN,GAFA4D,EAAQ,GAEHP,EASgB,GAAhBxF,EAAKzN,KAAK,GACbwT,EAAM7wB,WAAa8qB,EAAKzN,KAAK,GAAK,EAGlCwT,EAAM7wB,WAAa,OAVpB,IADA6wB,EAAM7wB,WAAa,EACZ6wB,EAAM7wB,WAAa,GAAqB,GAAhB8qB,EAAKzN,KAAK,IAASwT,EAAM7wB,aAazD6wB,EAAME,SAAWjG,EAAKkG,eAGrBH,EAAMI,cADQ,WAAX5C,EACkC,EAAfvD,EAAKzN,KAAK,GACrB6D,EAGW4J,EAAKzN,KAAK,GAFVyN,EAAKzN,KAAK,GAKjCwT,EAAMpS,KAAO,GACboS,EAAM3zB,OAAS,EACf2zB,EAAMK,UAAY,EAClB,IAAK,IAAI3V,EAAY,EAAGA,EAAIsV,EAAME,SAAUxV,IAC3CuV,EAAS,GACTA,EAAOK,UAA4B,GAAhBrG,EAAKzN,KAAK,GACzByT,EAAOK,WAAWN,EAAMK,YAC5BL,EAAM3zB,QAAW4xB,GAA0B,WAAXT,EAC7BvD,EAAKsG,yBAA2Bv0B,EAAOqF,aAAerF,EAAOwF,QAAQyM,KAAKyb,QAAQjoB,aAClFwoB,EAAKuG,mBACRP,EAAOhT,KAAO+S,EAAM3zB,OAGnB4zB,EAAOnuB,OADO,WAAX0rB,EAC4B,EAAfvD,EAAKzN,KAAK,GACf6D,EAIK4J,EAAKzN,KAAK,GAHVyN,EAAKzN,KAAK,GAK3BwT,EAAMpS,KAAKnhB,KAAKwzB,GAGlB1E,EAAae,QAAQ0D,GACjBzE,EAAalvB,OAAS,IAAIkvB,EAAagB,MAE3C7N,EAAO,IAAIpB,EAAK,EAAGkO,EAASA,EAAUwE,EAAM3zB,OAAQ2zB,EAAMI,eAC1D1R,EAAKf,QAAU,GACfe,EAAKd,KAAKvhB,OAAS,EACnB,MAAMyvB,EAAuB,GAC7B,IAAK,IAAIpR,EAAY,EAAGA,EAAIsV,EAAM7wB,WAAa6wB,EAAMK,UAAW3V,IAAK,CAEpE,GAD6C,GAAhBuP,EAAKzN,KAAK,GAehC,CACN,MAAMiQ,EAAqBpP,EAAc,EAAGiO,EAAcjvB,OAAS,EAAG4tB,EAAKzN,KAAKkT,IAChFnS,EAAQ+N,EAAcmB,GACtBnB,EAAce,OAAOI,EAAY,OAjBhB,CACjB,MAAMrjB,EAAmB6gB,EAAKwG,oBAC9BlT,EAAQ8N,EACR,IAAIqF,EAAuBtnB,EAC3B,KAAOsnB,EAAe,GAAG,CAExB,IADAnT,KACwC,GAAjC+N,EAAc1I,QAAQrF,IAAcA,IAC3CmT,IAED,KAAOA,EAAe,GAAG,CAExB,IADAnT,KACwC,GAAjC+N,EAAc1I,QAAQrF,IAAcA,IAC3CmT,KAQFpF,EAAcgB,QAAQ/O,GAClB+N,EAAcjvB,OAASszB,GAAmBrE,EAAciB,MAExD7R,EAAIsV,EAAM7wB,WACbuf,EAAKf,QAAQlhB,KAAK8gB,GAElBuO,EAAWrvB,KAAK8gB,GAIhB8N,EADG3Q,GAAKsV,EAAM7wB,WAAa,EACfuf,EAAKf,QAAQ,GAEbJ,EAIduO,EAAWQ,QAAQ5N,EAAKf,QAAQ,IAEhC,IAAK,MAAMsS,KAAUD,EAAMpS,KACtBqS,EAAOK,WAAWxE,EAAW6E,QACjCvS,EAAMpB,EAAY8O,EAAW,GAAKpN,EAAKf,QAAQ,GAAIsS,EAAOhT,KAAMgT,EAAOnuB,QACvE4c,EAAKd,KAAKnhB,KAAK2hB,GAEhBoN,EAAUnO,EAAc,EAAGpP,KAAKsb,YAAcvtB,EAAOqF,aAAcqd,EAAKjB,KACxEqS,EAASrzB,KAAKiiB,QAhId,GAAI2B,EAAc,CACjB,MAAMuQ,EAAuC,GAAhB3G,EAAKzN,KAAK,GACjCqU,EAAqB5G,EAAKuG,mBAC5BI,EACHpF,GAAWqF,EAGXrF,GAAWqF,MAEN,CAINrF,GAH4ByC,GAA0B,WAAXT,EACxCvD,EAAKsG,yBAA2Bv0B,EAAOqF,aAAerF,EAAOwF,QAAQyM,KAAKyb,QAAQjoB,aAClFwoB,EAAKuG,qBAyHZ,GAAI3C,GAA0B,WAAXL,EAClB,MAGA,GADAnf,IACIA,GAAWJ,KAAK6b,kBAAmB,OAGxC,MACF,QACC,MAAM,IAAIjsB,MAAM,8BAAgCouB,OAAOC,aAAaiC,GAAW,cAAgBhB,EAAY,IAI7G,IAAK,IAAI9e,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAClC,MAAzBigB,EAAajgB,KAChBJ,KAAK+X,SAAS3X,GAASoX,OAAS6I,EAAajgB,IAKzCvG,aAAagpB,GAAuB,EAAMC,EAAoB,EAAGC,GAAuB,GAC9F,MAAMC,EAAyB,GAC/B,IAAK,IAAI5iB,EAAkB,EAAGA,EAAUJ,KAAK6b,kBAAmBzb,IAAW,CAC1E,MAAM6iB,EAA4B,GAC5BnS,EAA0B9Q,KAAK6c,kBAAkBzc,GACjDgS,EAAwBpS,KAAK8c,gBAAgB1c,GACnD,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAK0b,sBAAuBvtB,IACvD80B,EAAgBz0B,KAAKwR,KAAK+X,SAAS3X,GAASqX,YAAYtpB,GAAG+0B,gBAG5D,MAAMC,EAAyB,GAC/B,IAAK,MAAMrH,KAAW9b,KAAK+X,SAAS3X,GAASsX,SAAU,CACtD,MAAM0L,EAAsB,GAC5B,IAAK,MAAM3S,KAAQqL,EAAQvL,MAAO,CACjC,IAAI8S,EAAoBrjB,KAAK0a,uBAAuBtI,EAAcpS,KAAK+X,SAAS3X,GAASqX,YAAYqE,EAAQtL,YAAYoD,YAAY7lB,EAAO4K,SAAW8X,EAAKf,QAAQ,GAAK,IACzK,MAAM4T,EAAuB,GAC7B,IAAK,MAAMnT,KAAOM,EAAKd,KAAM,CAC5B,IAAI4T,EAAiBnR,EAAexjB,KAAKmb,MAAMoG,EAAItc,QAAUjF,KAAKmb,MAAmB,IAAboG,EAAItc,OAAewvB,GAC3FC,EAAW90B,KAAK,CACfg1B,MAASrT,EAAInB,KAAOyB,EAAKlB,OAASxhB,EAAOwF,QAAQyM,KAAKyb,QAAQjoB,aAAezF,EAAOqF,aACpFivB,UAAalS,EAAIhV,SACjBtH,OAAU0vB,EACVE,OAAUrR,IAIZgR,EAAU50B,KAAK,CACdkhB,QAAWe,EAAKf,QAChBgU,OAAUJ,IAIZH,EAAa30B,KAAK,CACjBgiB,WAAcsL,EAAQtL,WAAa,EACnCD,MAAS6S,IAIX,MAAMO,EAA0B,GAChC,GAAId,EAAa,IAAK,IAAI10B,EAAY,EAAGA,EAAI6R,KAAKkb,UAAW/sB,IAC5Dw1B,EAAcn1B,KAAKwR,KAAK+X,SAAS3X,GAASuX,KAAKxpB,IAEhD,IAAK,IAAIy1B,EAAY,EAAGA,EAAId,EAAWc,IAAK,IAAK,IAAIz1B,EAAY6R,KAAKkb,UAAW/sB,EAAI6R,KAAKkb,UAAYlb,KAAKmb,WAAYhtB,IACtHw1B,EAAcn1B,KAAKwR,KAAK+X,SAAS3X,GAASuX,KAAKxpB,IAEhD,GAAI40B,EAAa,IAAK,IAAI50B,EAAY6R,KAAKkb,UAAYlb,KAAKmb,WAAYhtB,EAAI6R,KAAKub,SAAUptB,IAC1Fw1B,EAAcn1B,KAAKwR,KAAK+X,SAAS3X,GAASuX,KAAKxpB,IAGhD60B,EAAax0B,KAAK,CACjBsG,KAAQsd,EAAe,MAAStB,EAAiB,OAAS,QAC1D+S,gBAAmB7jB,KAAK+X,SAAS3X,GAASoX,OAC1CC,YAAewL,EACfvL,SAAYyL,EACZW,SAAYH,IAId,MAAO,CACNhyB,KAAQqO,KAAK2b,MACboI,OAAUlM,EAAKmM,EACfvpB,QAAWod,EAAKqE,EAGhB1jB,gBAAmBwH,KAAKxH,gBACxB6iB,IAAOrb,KAAKqb,IACZ4I,UAAajkB,KAAKkb,UAClBgJ,SAAYlkB,KAAKmb,WACjBG,YAAetb,KAAKsb,YACpB6I,aAAgBp2B,EAAOwF,QAAQyM,KAAKyb,QAAQjoB,aAC5C4wB,eAAkBpkB,KAAKwa,MACvBY,OAAUpb,KAAKob,OAIfrD,SAAYiL,GAIPnpB,eAAewqB,GAErB,GADArkB,KAAK6a,eAAc,IACdwJ,EAAY,OAKSlX,MAAtBkX,EAAiB,OACpBrkB,KAAK2b,MAAQ0I,EAAiB,MAG/BrkB,KAAKib,MAAQ,EAgCbjb,KAAKpC,IAAM,EAE0BuP,MAAjCkX,EAA4B,kBAC/BrkB,KAAKxH,gBAAkB6rB,EAA4B,iBAG3BlX,MAArBkX,EAAgB,MACnBrkB,KAAKqb,IAAMgJ,EAAgB,KAGQlX,MAAhCkX,EAA2B,iBAC9BrkB,KAAKwa,MAAQvL,EAAMlhB,EAAO0E,SAAU1E,EAAO2E,SAAW,EAAkC,EAA/B2xB,EAA2B,iBAGzDlX,MAAxBkX,EAAmB,SACtBrkB,KAAKob,OAASnM,EAAM,EAAGlhB,EAAO4E,YAAoC,EAAvB0xB,EAAmB,SAG9BlX,MAA7BkX,EAAwB,cAC3BrkB,KAAKsb,YAAc1sB,KAAKsgB,IAAInhB,EAAO6E,eAAgBhE,KAAKyB,IAAItC,EAAO8E,eAA4C,EAA5BwxB,EAAwB,eAG5G,IAAIC,EAA+B,EACDnX,MAA9BkX,EAAyB,eAC5BC,EAAqD,EAA7BD,EAAyB,cAAU,EAC3DrkB,KAAKyb,OAAS1tB,EAAOwF,QAAQ4hB,WAAUsG,GAAUA,EAAOjoB,cAAgB8wB,KACpD,GAAhBtkB,KAAKyb,SACRzb,KAAKyb,OAAS,IAIhB,IAAI8I,EAAyB,EACzBC,EAAsB,EACtBC,EAAkB,EACtB,GAAIJ,EAAqB,SACxB,IAAK,MAAMK,KAAiBL,EAAqB,SAC5CK,EAA2B,cAAGH,EAAiB31B,KAAKsgB,IAAIqV,EAAsD,EAAtCG,EAA2B,YAAEt2B,SACrGs2B,EAAwB,WAAGF,EAAc51B,KAAKsgB,IAAIsV,EAAgD,EAAnCE,EAAwB,SAAEt2B,SACzFs2B,EAAwB,WAAGD,EAAU71B,KAAKsgB,IAAIuV,EAA4C,EAAnCC,EAAwB,SAAEt2B,SAIvF4R,KAAK0b,sBAAwB9sB,KAAKyB,IAAIk0B,EAAgBx2B,EAAOoF,0BAC7D6M,KAAKwb,mBAAqB5sB,KAAKyB,IAAIm0B,EAAaz2B,EAAOgF,aACvDiN,KAAKub,SAAW3sB,KAAKyB,IAAIo0B,EAAS12B,EAAOgF,aAEVoa,MAA3BkX,EAAsB,YACzBrkB,KAAKkb,UAAYjM,EAAM,EAAGjP,KAAKub,SAAoC,EAA1B8I,EAAsB,YAElClX,MAA1BkX,EAAqB,WACxBrkB,KAAKmb,WAAalM,EAAM,EAAGjP,KAAKub,SAAWvb,KAAKkb,UAAY,EAA4B,EAAzBmJ,EAAqB,WAGrF,MAAMM,EAA8B,GAC9BC,EAA8B,GAC9BC,EAA4B,GAClC,GAAIR,EAAqB,SACxB,IAAK,IAAIzI,EAAuB,EAAGA,EAAeyI,EAAqB,SAAEj2B,OAAQwtB,IAAgB,CAChG,IAAI8I,EAAqBL,EAAqB,SAAEzI,GAEhD,MAAMxb,EAAmB,IAAImX,EAE7B,IAAIzG,GAA0B,EAC1BsB,GAAwB,EACCjF,MAAzBuX,EAAoB,MACvB5T,EAA2C,QAAzB4T,EAAoB,KACtCtS,EAAyC,OAAzBsS,EAAoB,MAGpC5T,EAAkB8K,GAAgB,EAE/B9K,EACH8T,EAAiBp2B,KAAK4R,GACZgS,EACVyS,EAAer2B,KAAK4R,GAGpBukB,EAAiBn2B,KAAK4R,GAGiB+M,MAApCuX,EAA+B,kBAClCtkB,EAAQoX,OAASvI,EAAM,EAAGlhB,EAAO8K,uBAA0B4nB,OAAOC,aAAaC,QAAQ,iBAAmB,KAAQ,EAAsC,EAAnC+D,EAA+B,kBAGrJ,IAAK,IAAIv2B,EAAYiS,EAAQqX,YAAYrpB,OAAQD,EAAI6R,KAAK0b,sBAAuBvtB,IAChFiS,EAAQqX,YAAYtpB,GAAK,IAAIgkB,EAAWrB,EAAgBsB,GAEzDhS,EAAQqX,YAAYrpB,OAAS4R,KAAK0b,sBAElC,IAAK,IAAIvtB,EAAYiS,EAAQsX,SAAStpB,OAAQD,EAAI6R,KAAKwb,mBAAoBrtB,IAC1EiS,EAAQsX,SAASvpB,GAAK,IAAImiB,EAE3BlQ,EAAQsX,SAAStpB,OAAS4R,KAAKwb,mBAE/B,IAAK,IAAIrtB,EAAY,EAAGA,EAAI6R,KAAKub,SAAUptB,IAC1CiS,EAAQuX,KAAKxpB,GAAK,EAEnBiS,EAAQuX,KAAKvpB,OAAS4R,KAAKub,SAE3B,IAAK,IAAIptB,EAAY,EAAGA,EAAI6R,KAAK0b,sBAAuBvtB,IAAK,CAC7BiS,EAAQqX,YAAYtpB,GACxCgxB,eAAeuF,EAA2B,YAAEv2B,GAAI2iB,EAAgBsB,EAA6B,GAAfpS,KAAKyb,QAA8B,GAAfzb,KAAKyb,OAAazb,KAAKyb,QAAU,GAG/I,IAAK,IAAIttB,EAAY,EAAGA,EAAI6R,KAAKwb,mBAAoBrtB,IAAK,CACzD,MAAM2tB,EAAmB1b,EAAQsX,SAASvpB,GAE1C,IAAI22B,OAAqB3X,EAEzB,GADIuX,EAAwB,WAAGI,EAAgBJ,EAAwB,SAAEv2B,IACpDgf,MAAjB2X,IAEJhJ,EAAQtL,WAAavB,EAAM,EAAGjP,KAAK0b,uBAAsD,EAA9BoJ,EAA0B,YAAS,GAE1FA,EAAqB,OAAKA,EAAqB,MAAE12B,OAAS,GAAG,CAChE,MAAM22B,EAAuBn2B,KAAKyB,IAAI2P,KAAKsb,YAAcvtB,EAAOqF,aAAc0xB,EAAqB,MAAE12B,SAAW,GAGhH,IAAK,IAAIqe,EAAY,EAAGA,EAAIqY,EAAqB,MAAE12B,UAC9Cqe,GAAKsY,GADiDtY,IAAK,CAG/D,MAAMuY,EAAaF,EAAqB,MAAErY,GAC1C,KAAKuY,GAAeA,EAAoB,SAAOA,EAAoB,QAAE52B,QAAU,GAAO42B,EAAmB,QAAOA,EAAmB,OAAE52B,QAAU,GAC9I,SAGD,MAAMqiB,EAAa,IAAIpB,EAAK,EAAG,EAAG,EAAG,GACrCoB,EAAKf,QAAU,GACfe,EAAKd,KAAO,GAEZ,IAAK,IAAIsV,EAAY,EAAGA,EAAID,EAAoB,QAAE52B,OAAQ62B,IAAK,CAC9D,MAAM3V,EAA2C,EAA3B0V,EAAoB,QAAEC,GAC5C,IAAoC,GAAhCxU,EAAKf,QAAQiF,QAAQrF,KACzBmB,EAAKf,QAAQlhB,KAAK8gB,GACdmB,EAAKf,QAAQthB,QAAUL,EAAOwI,cAAc,MAEjD,GAAIka,EAAKf,QAAQthB,OAAS,EAAG,SAG7B,IAAI82B,EAAwB,EAC5B,IAAK,IAAID,EAAY,EAAGA,EAAID,EAAmB,OAAE52B,OAAQ62B,IAAK,CAC7D,MAAME,EAAmBH,EAAmB,OAAEC,GAC9C,GAAmB9X,MAAfgY,GAAmDhY,MAAvBgY,EAAkB,KAAgB,SAClE,MAAMhqB,EAAgDgS,MAA5BgY,EAAuB,UAAkB,EAAgC,EAA3BA,EAAuB,UAEzFnW,EAAepgB,KAAKmb,OAAQob,EAAkB,KAAKp3B,EAAOqF,aAAekxB,GAE/E,IAIIzwB,EAJAwvB,EAAoBrjB,KAAK0a,uBAAuBtI,EAAchS,EAAQqX,YAAYqE,EAAQtL,YAAYoD,YAAY7lB,EAAO4K,SAAW8X,EAAKf,QAAQ,GAAK,IAMzJ7b,EAD4BsZ,MAAzBgY,EAAoB,OACd9B,EAC0BlW,MAAzBgY,EAAoB,OACrBv2B,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAIgzB,EAAWz0B,KAAKmb,OAA+B,EAAxBob,EAAoB,QAAS9B,EAAY,QAG3D,EAAxB8B,EAAoB,QAAS,EAAKv2B,KAAKmb,MAA8B,EAAxBob,EAAoB,QAASv2B,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAIgzB,EAAWz0B,KAAKmb,OAA+B,EAAxBob,EAAoB,QAAS9B,EAAY,OAGvKrU,EAAOhP,KAAKsb,YAAcvtB,EAAOqF,eACb,GAApBqd,EAAKd,KAAKvhB,SAEbqiB,EAAKlB,MAAQP,EACbkW,EAAgB/pB,GAMjBsV,EAAKd,KAAKnhB,KAAKugB,EAAY5T,EAAW+pB,EAAelW,EAAOyB,EAAKlB,MAAO1b,KAEzE,GAAI4c,EAAKd,KAAKvhB,OAAS,EAAG,SAE1BqiB,EAAKjB,IAAMiB,EAAKd,KAAKc,EAAKd,KAAKvhB,OAAS,GAAG4gB,KAAOyB,EAAKlB,MAGvD,MAAMzW,EAAmBgY,EAAiB/iB,EAAO2K,UAAY,EAAI3K,EAAO+K,SACxE,IAAIssB,EAAsBtsB,EACtBusB,EAAuB,EAC3B,IAAK,IAAIJ,EAAY,EAAGA,EAAIxU,EAAKf,QAAQthB,OAAQ62B,IAChDxU,EAAKf,QAAQuV,IAAMC,GACfzU,EAAKf,QAAQuV,GAAK,GAAKxU,EAAKf,QAAQuV,GAAKnsB,KAC5C2X,EAAKf,QAAQ0O,OAAO6G,EAAG,GACvBA,KAEGxU,EAAKf,QAAQuV,GAAKG,IAAaA,EAAc3U,EAAKf,QAAQuV,IAC1DxU,EAAKf,QAAQuV,GAAKI,IAAcA,EAAe5U,EAAKf,QAAQuV,IAEjE,KAAIxU,EAAKf,QAAQthB,OAAS,GAA1B,CAEA,IAAK,IAAI62B,EAAY,EAAGA,EAAIxU,EAAKd,KAAKvhB,OAAQ62B,IAAK,CAClD,MAAM9U,EAAeM,EAAKd,KAAKsV,GAC3B9U,EAAIhV,SAAWiqB,EAAc,IAAGjV,EAAIhV,UAAYiqB,GAChDjV,EAAIhV,SAAWkqB,EAAevsB,IAAUqX,EAAIhV,SAAWrC,EAAWusB,GAClEJ,GAAK,GACJ9U,EAAIhV,UAAYsV,EAAKd,KAAKsV,EAAI,GAAG9pB,UACpCgV,EAAIhV,UAAYsV,EAAKd,KAAKsV,EAAI,GAAG9pB,UACjCgV,EAAItc,QAAU4c,EAAKd,KAAKsV,EAAI,GAAGpxB,QAC/Bsc,EAAItc,QAAU4c,EAAKd,KAAKsV,EAAI,GAAGpxB,SAC/B4c,EAAKd,KAAKyO,OAAO6G,EAAI,EAAG,GACxBA,KAKHnJ,EAAQvL,MAAM/hB,KAAKiiB,MAMtB,IAAK,IAAItiB,EAAY,EAAGA,EAAI6R,KAAKub,SAAUptB,IAC1CiS,EAAQuX,KAAKxpB,GAAKu2B,EAAwB,SAAI91B,KAAKyB,IAAI2P,KAAKwb,mBAAoBkJ,EAAwB,SAAEv2B,KAAO,GAAK,EAKrHw2B,EAAiBv2B,OAASL,EAAOmK,uBAAsBysB,EAAiBv2B,OAASL,EAAOmK,sBACxF0sB,EAAiBx2B,OAASL,EAAOqK,uBAAsBwsB,EAAiBx2B,OAASL,EAAOqK,sBACxFysB,EAAez2B,OAASL,EAAOuK,qBAAoBusB,EAAez2B,OAASL,EAAOuK,oBACtF0H,KAAKkB,kBAAoByjB,EAAiBv2B,OAC1C4R,KAAKoB,kBAAoBwjB,EAAiBx2B,OAC1C4R,KAAK+a,gBAAkB8J,EAAez2B,OACtC4R,KAAK+X,SAAS3pB,OAAS,EACvB6O,MAAM6hB,UAAUtwB,KAAK0vB,MAAMle,KAAK+X,SAAU4M,GAC1C1nB,MAAM6hB,UAAUtwB,KAAK0vB,MAAMle,KAAK+X,SAAU6M,GAC1C3nB,MAAM6hB,UAAUtwB,KAAK0vB,MAAMle,KAAK+X,SAAU8M,GAGpChrB,WAAWuG,EAAiB2b,GAClC,GAAIA,EAAM,GAAKA,GAAO/b,KAAKub,SAAU,OAAO,KAC5C,MAAM+J,EAAuBtlB,KAAK+X,SAAS3X,GAASuX,KAAKoE,GACzD,OAAoB,GAAhBuJ,EAA0B,KACvBtlB,KAAK+X,SAAS3X,GAASsX,SAAS4N,EAAe,GAGhDzrB,qBAAqBuG,EAAiB2b,GAC5C,MAAMD,EAA0B9b,KAAKulB,WAAWnlB,EAAS2b,GACzD,OAAkB,MAAXD,EAAkB,EAAIA,EAAQtL,WAG/B3W,oBACN,OAAOmG,KAAKwa,OAxgEW3C,EAAAmM,EAAkB,UAClBnM,EAAA4H,EAAgC,EAChC5H,EAAA2H,EAAgC,EAChC3H,EAAA6H,EAAgC,EAChC7H,EAAAqE,EAAgC,EAIhCrE,EAAAoE,EAAW,IAqgEpC,MAAMuJ,EAwDL3rB,cAtDgBmG,KAAA0P,QAAoB,CAAC,EAAG,EAAG,EAAG,GACvC1P,KAAA9O,WAAqB,EACrB8O,KAAAylB,UAAoB,EACpBzlB,KAAA0lB,aAAuB,EACvB1lB,KAAAyQ,KAAoB,KACpBzQ,KAAA2lB,SAAwB,KACxB3lB,KAAA4lB,SAAwB,KACxB5lB,KAAA6lB,mBAA6B,EAC7B7lB,KAAA8lB,mBAA6B,EAC7B9lB,KAAA+lB,QAAkB,EAClB/lB,KAAAgmB,UAAoB,EACpBhmB,KAAAimB,QAAkB,EAClBjmB,KAAAkmB,gBAA0B,EAC1BlmB,KAAAmmB,mBAA6B,EAC7BnmB,KAAAomB,qBAA+B,EAC/BpmB,KAAAqmB,aAAuB,EACvBrmB,KAAAsmB,WAAqB,EACrBtmB,KAAAumB,cAAwB,EACxBvmB,KAAAwmB,cAAwB,EACxBxmB,KAAAymB,aAAuB,EACvBzmB,KAAA0mB,YAAsB,EACtB1mB,KAAA2mB,OAAiB,EACR3mB,KAAA4mB,OAAmB,GACnB5mB,KAAA6mB,YAAwB,GACxB7mB,KAAA8mB,aAAyB,GACzB9mB,KAAA+mB,aAAyB,GAClC/mB,KAAAgnB,YAAsB,EACtBhnB,KAAAinB,YAAsB,EACtBjnB,KAAAknB,gBAA0B,EAC1BlnB,KAAAhE,WAAqB,EACrBgE,KAAAmnB,gBAA0B,EAC1BnnB,KAAAonB,OAAiB,EACjBpnB,KAAAqnB,YAAsB,EACtBrnB,KAAAsnB,cAAwB,EACxBtnB,KAAAunB,cAAwB,EACxBvnB,KAAAwnB,aAAuB,EACvBxnB,KAAAynB,aAAuB,EACvBznB,KAAA0nB,mBAA6B,EAC7B1nB,KAAA2nB,gBAA4B,GAC5B3nB,KAAA4nB,aAAuB,EACvB5nB,KAAA6nB,cAAwB,EACxB7nB,KAAA8nB,mBAA6B,EAC7B9nB,KAAA+nB,mBAA6B,EAC7B/nB,KAAAgoB,mBAA6B,EAC7BhoB,KAAAioB,mBAA6B,EAC7BjoB,KAAAkoB,iBAA2B,EAC3BloB,KAAAmoB,eAAyB,EACzBnoB,KAAAooB,iBAA2B,EAC3BpoB,KAAAqoB,kBAA4B,EAC5BroB,KAAAsoB,gBAA0B,EAC1BtoB,KAAAuoB,qBAA+B,EAC/BvoB,KAAAwoB,qBAA+B,EAC/BxoB,KAAAyoB,cAAwB,EAG9BzoB,KAAK4Q,QAGC/W,QACN,IAAK,IAAI1L,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IACjD6R,KAAK4mB,OAAOz4B,GAAK,EACjB6R,KAAK2nB,gBAAgBx5B,GAAK,EAE3B6R,KAAK2mB,OAAS,EACd3mB,KAAKsnB,cAAgB,EACrBtnB,KAAKunB,cAAgB,EACrBvnB,KAAKomB,qBAAuB,SAKjBsC,GA+ZZ7uB,YAAYsG,EAA6B,MAlTlCH,KAAA2oB,iBAA2B,MAE3B3oB,KAAAG,KAAoB,KACpBH,KAAA4oB,kBAA4B,EAC5B5oB,KAAA6oB,kBAA4B,EAC5B7oB,KAAA8oB,iBAA6B,GAC7B9oB,KAAA+oB,iBAA2B,EAC3B/oB,KAAAgpB,iBAA2B,EAC3BhpB,KAAAnM,OAAiB,EAEhBmM,KAAAipB,YAAsB,EACtBjpB,KAAAkpB,iBAA2B,EAC3BlpB,KAAA+b,IAAc,EACd/b,KAAAmpB,KAAe,EACfnpB,KAAAopB,KAAe,EACfppB,KAAAwjB,KAAe,EACfxjB,KAAAqpB,oBAA8B,EAK9BrpB,KAAAspB,eAAyB,EACzBtpB,KAAAupB,iBAA2B,EAClBvpB,KAAAwpB,SAAwB,IAAIxc,EAC5BhN,KAAAypB,YAAkC,GAC3CzpB,KAAA0pB,UAAsB,GACb1pB,KAAA2pB,eAA4C,GAE5C3pB,KAAA4pB,cAAoC,GACpC5pB,KAAA6pB,eAA8B,IAAI7c,EAI3ChN,KAAA8pB,MAAgB,EAEhB9pB,KAAA+pB,kBAA4B,EAC5B/pB,KAAAgqB,eAAsC,KACtChqB,KAAAiqB,iBAAwC,KACxCjqB,KAAAkqB,iBAAwC,KACxClqB,KAAAmqB,uBAA8C,KAE9CnqB,KAAAoqB,gBAAgC,IAAI/6B,aAAa,MACjD2Q,KAAAqqB,eAAyB,EACzBrqB,KAAAsqB,YAAsB,EAEtBtqB,KAAAuqB,gBAAgC,IAAIl7B,aAAa,OACjD2Q,KAAAwqB,eAAyB,EACzBxqB,KAAAyqB,gBAA0B,EAC1BzqB,KAAA0qB,gBAA0B,EAC1B1qB,KAAA2qB,gBAA0B,EAC1B3qB,KAAA4qB,gBAA0B,EAE1B5qB,KAAA6qB,SAAuB,KACvB7qB,KAAA8qB,WAAyB,KAkiBzB9qB,KAAA+qB,qBAAwBC,IAC/B,MAAMC,EAAeD,EAAqBC,aACpCC,EAA4BD,EAAaE,eAAe,GACxDC,EAA4BH,EAAaE,eAAe,GAG9D,GAD2BE,YAAYC,MAAQtrB,KAAKupB,kBACxBvpB,KAAKspB,cAOhCtpB,KAAKurB,WAAWL,EAAaE,EAAaH,EAAa78B,OAAQ4R,KAAKspB,mBAPrB,CAC/C,IAAK,IAAIn7B,EAAY,EAAGA,EAAI88B,EAAa78B,OAAQD,IAChD+8B,EAAY/8B,GAAK,EACjBi9B,EAAYj9B,GAAK,EAElB6R,KAAKwrB,oBA/SM,MAARrrB,GAAcH,KAAKyrB,QAAQtrB,GA9ZzBtG,kBAAkBsG,GAGxB,GAAY,MAARA,EACH,IAAK,IAAIC,EAAkB,EAAGA,EAAUD,EAAK0b,kBAAmBzb,IAC/D,IAAK,IAAIoQ,EAAqB,EAAGA,EAAarQ,EAAKub,sBAAuBlL,IACzEkY,GAAMgD,2BAA2BvrB,EAAK4X,SAAS3X,GAASqX,YAAYjH,IACpErQ,EAAK4X,SAAS3X,GAASqX,YAAYjH,GAAYmb,SAO5C9xB,yBAEN,GAAiB,MAAbmG,KAAKG,MAAgBH,KAAKG,KAAK4a,gBAAkB,EAAG,CAGvD,IAAI6Q,EAAoC,GACpCC,EAA2C,GAC/C7rB,KAAK8rB,UAAY,GACjB9rB,KAAK+rB,cAAgB,GACrB/rB,KAAKgsB,aAAe,GACpBhsB,KAAKisB,iBAAmB,GACxB,IAAK,IAAI7rB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAAW,CAC7GyrB,EAAkBzrB,GAAW,GAC7BJ,KAAKgsB,aAAa5rB,GAAW,GAC7BJ,KAAKisB,iBAAiB7rB,GAAW,GACjC,IAAK,IAAIoQ,EAAqB,EAAGA,EAAaxQ,KAAKG,KAAKub,sBAAuBlL,IAC9ExQ,KAAKgsB,aAAa5rB,GAASoQ,GAAc,GACzCxQ,KAAKisB,iBAAiB7rB,GAASoQ,GAAc,GAC7Cqb,EAAkBzrB,GAASoQ,GAAc,GAK3C,IAAI0b,EAAsBlsB,KAAKmpB,KAAOp7B,EAAOqF,aAAe4M,KAAKopB,KAGjE,IAAK,IAAIhpB,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,EAAUJ,KAAKG,KAAK0b,kBAAmBzb,IAC5H,IAAMJ,KAAKG,KAAK4X,SAAS3X,GAAc,MAAG,CAEzC,IAAI0b,EAEJ,IAAK,IAAIqQ,EAAqBnsB,KAAK+b,IAAKoQ,GAAc,EAAGA,IAGxD,GAFArQ,EAAU9b,KAAKG,KAAKolB,WAAWnlB,EAAS+rB,GAEzB,MAAXrQ,EAAiB,CACpB,IAAIsQ,EAAwBpsB,KAAKG,KAAKksB,qBAAqBjsB,EAAS+rB,GAChE3b,EAAyBxQ,KAAKG,KAAK4X,SAAS3X,GAASqX,YAAY2U,GACjEE,EAA2B,GAC3BC,EAA4B,GAE5BC,EAAsBL,GAAcnsB,KAAK+b,IAC1CmQ,EACAlsB,KAAKysB,eAAeN,GAEvB,IAAK,MAAM1b,KAAQqL,EAAQvL,MAC1B,GAAIE,EAAKlB,MAAQid,IAAwE,MAAzDF,EAAev+B,EAAO4K,SAAW,EAAI8X,EAAKf,QAAQ,KAAee,EAAKjB,IAAM8c,EAAev+B,EAAO4K,SAAW,EAAI8X,EAAKf,QAAQ,KAC7J,GAAIe,EAAKjB,KAAOgd,EACfF,EAAev+B,EAAO4K,SAAW,EAAI8X,EAAKf,QAAQ,IAAMe,EAAKjB,IAC7D+c,EAAgBx+B,EAAO4K,SAAW,EAAI8X,EAAKf,QAAQ,IAAMe,EAAKd,KAAKc,EAAKd,KAAKvhB,OAAS,GAAGyF,WAErF,CACJy4B,EAAev+B,EAAO4K,SAAW,EAAI8X,EAAKf,QAAQ,IAAM8c,EAExD,IAAK,IAAIE,EAAS,EAAGA,EAASjc,EAAKd,KAAKvhB,OAAQs+B,IAC/C,GAAIjc,EAAKd,KAAK+c,GAAQ1d,KAAOyB,EAAKlB,MAAQid,EAAY,CACrD,MAAMG,EAA2Blc,EAAKd,KAAK+c,GAAQ1d,KAAOyB,EAAKd,KAAK+c,EAAS,GAAG1d,KAC1E4d,EAA0BJ,EAAa/b,EAAKlB,MAAQkB,EAAKd,KAAK+c,EAAS,GAAG1d,KAC1E6d,EAAsBpc,EAAKd,KAAK+c,GAAQ74B,OAAS4c,EAAKd,KAAK+c,EAAS,GAAG74B,OAE7E04B,EAAgBx+B,EAAO4K,SAAW,EAAI8X,EAAKf,QAAQ,IAAM9gB,KAAKmb,MAAM0G,EAAKd,KAAK+c,EAAS,GAAG74B,OAASg5B,EAAcD,EAAkBD,GACnID,EAASjc,EAAKd,KAAKvhB,QAQxB,IAAK,IAAIylB,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IACrB,MAAvByY,EAAezY,KACdrD,EAAWkD,YAAYG,IAAQC,EAAUgZ,WACO,MAA/ClB,EAAepb,EAAWoD,YAAYC,KAAiBsY,EAAap+B,EAAOqF,aAAe4M,KAAKG,KAAKmb,YAAcgR,EAAezY,GAAQ+X,EAAepb,EAAWoD,YAAYC,OAClL7T,KAAK+sB,YAAYR,EAAgB1Y,GAAM0Y,EAAgB1Y,GAAMA,EAAKrD,EAAYA,EAAWoD,YAAYC,IACrG+X,EAAepb,EAAWoD,YAAYC,IAAQsY,EAAap+B,EAAOqF,aAAe4M,KAAKG,KAAKmb,YAAcgR,EAAezY,KAGF,MAA/GgY,EAAkBrb,EAAWlP,YAAYuS,IAAMrD,EAAWmD,eAAeE,IAAMrD,EAAWoD,YAAYC,KAAiBsY,EAAap+B,EAAOqF,aAAe4M,KAAKG,KAAKmb,YAAcgR,EAAezY,GAAQgY,EAAkBrb,EAAWlP,YAAYuS,IAAMrD,EAAWmD,eAAeE,IAAMrD,EAAWoD,YAAYC,OACvT7T,KAAK+sB,YAAYR,EAAgB1Y,GAAM0Y,EAAgB1Y,GAAMA,EAAKrD,EAAYA,EAAWoD,YAAYC,IACrGgY,EAAkBrb,EAAWlP,YAAYuS,IAAMrD,EAAWmD,eAAeE,IAAMrD,EAAWoD,YAAYC,IAAQsY,EAAap+B,EAAOqF,aAAe4M,KAAKG,KAAKmb,YAAcgR,EAAezY,QAWzLha,8BAA8BlJ,GACrC,OAAQ/B,KAAKuB,IAAI,GAAMQ,EAAY,IAAQ,GAAO,GA0DnDq8B,cACC,OAAOhtB,KAAKspB,cAGbhiB,eACC,OAAOtH,KAAKkpB,iBAGb5hB,aAAoB5V,GACnB,GAAiB,MAAbsO,KAAKG,KAAc,CACtBH,KAAKkpB,iBAAmBt6B,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAI2P,KAAKG,KAAKob,SAAU7pB,IACjE,IAAIu7B,EAAoBjtB,KAAKkpB,iBAC7BlpB,KAAK+b,IAAMntB,KAAKsU,MAAM+pB,GACtBA,EAAYjtB,KAAKG,KAAKmb,aAAe2R,EAAYjtB,KAAK+b,KACtD/b,KAAKmpB,KAAOv6B,KAAKsU,MAAM+pB,GACvBA,EAAYl/B,EAAOqF,cAAgB65B,EAAYjtB,KAAKmpB,MACpDnpB,KAAKopB,KAAOx6B,KAAKsU,MAAM+pB,GACvBA,EAAYl/B,EAAOsF,cAAgB45B,EAAYjtB,KAAKopB,MACpDppB,KAAKwjB,KAAO50B,KAAKsU,MAAM+pB,GACvB,MAAMC,EAAyBltB,KAAKmtB,oBACpCF,EAAYC,GAAkBD,EAAYjtB,KAAKwjB,MAC/CxjB,KAAKqpB,oBAAsB6D,EAAiBD,GAIvCpzB,mBACN,GAAiB,MAAbmG,KAAKG,KAAc,MAAM,IAAIvQ,MACjC,OAAOoQ,KAAKmtB,oBAAsBp/B,EAAOsF,aAAetF,EAAOqF,aAAe4M,KAAKG,KAAKmb,YAIjFzhB,eAAekiB,GACtB,GAAiB,MAAb/b,KAAKG,KAAc,OAAO,EAC9B,IAAIqsB,EAAqBz+B,EAAOqF,aAAe4M,KAAKG,KAAKmb,YACzD,IAAK,IAAIlb,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,EAAUJ,KAAKG,KAAK0b,kBAAmBzb,IAAW,CACvI,IAAI0b,EAA0B9b,KAAKG,KAAKolB,WAAWnlB,EAAS2b,GAC5D,GAAe,MAAXD,EAAiB,CACpB,IAAItL,EAAyBxQ,KAAKG,KAAK4X,SAAS3X,GAASqX,YAAYqE,EAAQtL,YAC7E,IAAK,IAAIqD,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAChD,GAAIrD,EAAWoD,YAAYC,IAAQG,EAAW6E,YAAcrI,EAAWkD,YAAYG,IAAQC,EAAUgZ,UACpG,IAAK,MAAMrc,KAAQqL,EAAQvL,MACtBE,EAAKf,QAAQ,IAAO3hB,EAAO4K,SAAW,EAAIkb,GAEzC2Y,EAAa/b,EAAKlB,QACrBid,EAAa/b,EAAKlB,QAOzB,OAAOid,EAID3yB,gBAAgBgpB,EAAsBE,EAAsBqK,GAClE,GAAiB,MAAbptB,KAAKG,KACR,OAAQ,EAGT,IAAIktB,EAAmBxK,EAAc,EAAI7iB,KAAKG,KAAK+a,UAC/CoS,EAAiBvK,EAAc/iB,KAAKG,KAAKob,SAAYvb,KAAKG,KAAK+a,UAAYlb,KAAKG,KAAKgb,WACrFoS,GAAwB,EACxBC,GAA0B,EAC1BC,EAAoBztB,KAAKG,KAAKqa,MAGlC,IAAK,IAAIpa,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,EAAUJ,KAAKG,KAAK0b,kBAAmBzb,IAC5H,IAAK,IAAI2b,EAAcsR,EAAUtR,EAAMuR,EAAQvR,IAAO,CACrD,IAAID,EAA0B9b,KAAKG,KAAKolB,WAAWnlB,EAAS2b,GAC5D,GAAe,MAAXD,EAAiB,CACpB,IAAItL,EAAyBxQ,KAAKG,KAAK4X,SAAS3X,GAASqX,YAAYqE,EAAQtL,YAC7E,IAAK,IAAIqD,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAC5CrD,EAAWoD,YAAYC,IAAQG,EAAW2E,UAAYnI,EAAWkD,YAAYG,IAAQC,EAAUgZ,YAClGS,GAAe,GAEZ/c,EAAWoD,YAAYC,IAAQG,EAAW6E,YAAcrI,EAAWkD,YAAYG,IAAQC,EAAUgZ,YACpGU,GAAiB,IAQtB,GAAIH,EAAW,EAAG,CACjB,IAAIK,EAAgC,KAChCC,EAA2B,EAE/B,IAAK,IAAI5R,EAAcsR,EAAW,EAAGtR,GAAO,EAAGA,IAAO,CACrD,IAAK,IAAI3b,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,EAAUJ,KAAKG,KAAK0b,kBAAmBzb,IAAW,CACvI,IAAI0b,EAAU9b,KAAKG,KAAKolB,WAAWnlB,EAAS2b,GAE5C,GAAe,MAAXD,EAAiB,CACpB,IAAIsQ,EAAwBpsB,KAAKG,KAAKksB,qBAAqBjsB,EAAS2b,GAChEvL,EAAyBxQ,KAAKG,KAAK4X,SAAS3X,GAASqX,YAAY2U,GAEjEI,EAAqBxsB,KAAKysB,eAAe1Q,GAE7C,IAAK,MAAMtL,KAAQqL,EAAQvL,MAC1B,GAAIC,EAAWoD,YAAY7lB,EAAO4K,SAAW,EAAI8X,EAAKf,QAAQ,KAAOsE,EAAW2E,UAAYnI,EAAWkD,YAAY3lB,EAAO4K,SAAW,EAAI8X,EAAKf,QAAQ,KAAOoE,EAAUgZ,WAClKrc,EAAKlB,MAAQid,IAAiC,MAAlBkB,GAA0Bjd,EAAKjB,IAAMke,GACpE,GAAIjd,EAAKjB,KAAOgd,EACfkB,EAAiBjd,EAAKjB,IACtBme,EAAmBld,EAAKd,KAAKc,EAAKd,KAAKvhB,OAAS,GAAGyF,WAE/C,CACJ65B,EAAiBlB,EAEjB,IAAK,IAAIE,EAAS,EAAGA,EAASjc,EAAKd,KAAKvhB,OAAQs+B,IAC/C,GAAIjc,EAAKd,KAAK+c,GAAQ1d,KAAOyB,EAAKlB,MAAQid,EAAY,CACrD,MAAMG,EAA2Blc,EAAKd,KAAK+c,GAAQ1d,KAAOyB,EAAKd,KAAK+c,EAAS,GAAG1d,KAC1E4d,EAA0BJ,EAAa/b,EAAKlB,MAAQkB,EAAKd,KAAK+c,EAAS,GAAG1d,KAC1E6d,EAAsBpc,EAAKd,KAAK+c,GAAQ74B,OAAS4c,EAAKd,KAAK+c,EAAS,GAAG74B,OAE7E85B,EAAmB/+B,KAAKmb,MAAM0G,EAAKd,KAAK+c,EAAS,GAAG74B,OAASg5B,EAAcD,EAAkBD,GAC7FD,EAASjc,EAAKd,KAAKvhB,UAaL,MAAlBs/B,IACHD,EAAYztB,KAAKG,KAAKytB,eAAeD,EAAkB3Z,EAAW2E,UAClEoD,GAAO,IAKV,GAAIwR,GAAgBC,EAAgB,CAEnC,IAAIzR,EAAcsR,EACdQ,GAAiB,EACjBC,EAAuB,EAE3B,MAAQD,GAAO,CAEd,IAAIrB,EAAqBz+B,EAAOqF,aAAe4M,KAAKG,KAAKmb,YACrD4Q,EAAsB,EAO1B,GALIsB,IACHhB,EAAaxsB,KAAKysB,eAAe1Q,IAI9BwR,EAAc,CACjB,IAAIQ,GAAoB,EACxB,IAAK,IAAI3tB,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,EAAUJ,KAAKG,KAAK0b,kBAAmBzb,IAC5H,GAAgB,GAAZ2tB,EAAmB,CACtB,IAAIjS,EAA0B9b,KAAKG,KAAKolB,WAAWnlB,EAAS2b,GAC5D,GAAe,MAAXD,EAAiB,CACpB,IAAItL,EAAyBxQ,KAAKG,KAAK4X,SAAS3X,GAASqX,YAAYqE,EAAQtL,YAC7E,IAAK,IAAIqD,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAChD,GAAgB,GAAZka,GAAqBvd,EAAWoD,YAAYC,IAAQG,EAAW2E,UAAYnI,EAAWkD,YAAYG,IAAQC,EAAUgZ,WACpHhR,EAAQvL,MAAMyd,MAAKnkB,GAAKA,EAAE6F,QAAQ,IAAO3hB,EAAO4K,SAAW,EAAIkb,IAAO,CAEzEka,GAAW,EAEXjS,EAAQvL,MAAM0d,MAAK,SAAUC,EAAGC,GAAK,OAAQD,EAAE3e,OAAS4e,EAAE5e,MAAS2e,EAAExe,QAAQ,GAAKye,EAAEze,QAAQ,GAAKwe,EAAE3e,MAAQ4e,EAAE5e,SAC7G,IAAK,MAAMkB,KAAQqL,EAAQvL,MAC1B,GAAIE,EAAKf,QAAQ,IAAO3hB,EAAO4K,SAAW,EAAIkb,IAE7Cia,GAAiBl/B,KAAKyB,IAAIm8B,EAAaN,EAAazb,EAAKlB,MAAQ2c,GAAgBn+B,EAAOsF,aAAe2M,KAAKouB,6BAA6BX,GAErIhd,EAAKlB,MAAQid,GAChB,IAAK,IAAIE,EAAiB,EAAGA,EAASjc,EAAKd,KAAKvhB,OAAQs+B,IAAU,CAEjE,GAAIjc,EAAKd,KAAK+c,EAAS,GAAG1d,KAAOyB,EAAKlB,OAASid,EAAY,CAC1D,MAAM6B,EAAqBtgC,EAAOsF,aAAezE,KAAKyB,IAAIm8B,GAAc/b,EAAKlB,MAAQkB,EAAKd,KAAK+c,EAAS,GAAG1d,MAAOyB,EAAKd,KAAK+c,GAAQ1d,KAAOyB,EAAKd,KAAK+c,EAAS,GAAG1d,MAC3Jsf,EAAuBtuB,KAAKG,KAAKytB,eAAend,EAAKd,KAAK+c,EAAS,GAAG74B,OAAQmgB,EAAW2E,UAC/F,IAAI4V,EAAuBvuB,KAAKG,KAAKytB,eAAend,EAAKd,KAAK+c,GAAQ74B,OAAQmgB,EAAW2E,UACrFlI,EAAKd,KAAK+c,GAAQ1d,KAAOyB,EAAKlB,MAAQid,IAEzC+B,EAAevuB,KAAKG,KAAKytB,eAAend,EAAKd,KAAK+c,EAAS,GAAG74B,QAAU4c,EAAKd,KAAK+c,GAAQ74B,OAAS4c,EAAKd,KAAK+c,EAAS,GAAG74B,SAAW24B,GAAc/b,EAAKlB,MAAQkB,EAAKd,KAAK+c,EAAS,GAAG1d,QAAUyB,EAAKd,KAAK+c,GAAQ1d,KAAOyB,EAAKd,KAAK+c,EAAS,GAAG1d,MAAOgF,EAAW2E,WAEjQ,IAAI6V,EAAoBzgC,EAAOqF,aAAerF,EAAOsF,aAAe,GAiBnEy6B,GAfGS,GAAgBD,GAeDtuB,KAAK2oB,iBAAmB0F,GAAcz/B,KAAK6B,IAAI+9B,EAAYD,EAAeF,GAAcz/B,KAAK6B,IAAI+9B,EAAYF,EAAeD,KAAgBG,GAAaF,EAAeC,IAM1KF,EAAaruB,KAAKouB,6BAA6BG,GAGhEd,EAAYc,EAEbrC,EAAct9B,KAAKyB,IAAIogB,EAAKlB,MAAQkB,EAAKd,KAAK+c,GAAQ1d,KAAMwd,OAatEsB,IAAiBtB,EAAaN,GAAen+B,EAAOsF,aAAe2M,KAAKouB,6BAA6BX,GAErG1R,IACY,GAARqR,GAAarR,GAAO/b,KAAKG,KAAK+a,UAAYlb,KAAKG,KAAKgb,aACvDY,EAAM/b,KAAKG,KAAK+a,UACZkS,EAAO,GAAGA,KAEXrR,GAAOuR,IACVO,GAAQ,GAIV,OAAOj/B,KAAKkgB,KAAKgf,GAIjB,OAAO9tB,KAAKyuB,mBAAqBzuB,KAAK0uB,aAAa7L,EAAaE,EAAaqK,GAIxEvzB,aAAagpB,EAAsBE,EAAsB4L,EAAuB3uB,KAAKgpB,iBAC3F,GAAiB,MAAbhpB,KAAKG,KAAc,MAAM,IAAIvQ,MACjC,IAAI+nB,EAAe3X,KAAKG,KAAKgb,YAAcwT,EAAe,GAG1D,OAFI9L,IAAalL,GAAQ3X,KAAKG,KAAK+a,WAC/B6H,IAAapL,GAAQ3X,KAAKG,KAAKob,UAAYvb,KAAKG,KAAK+a,UAAYlb,KAAKG,KAAKgb,aACxExD,EAOD9d,QAAQsG,GACO,iBAAjB,EACHH,KAAKG,KAAO,IAAI0X,EAAK1X,GACXA,aAAgB0X,IAC1B7X,KAAKG,KAAOA,GAIPtG,YAAYmtB,EAAqB4H,EAAmB/a,EAAarD,EAAwBsK,GAC/F,IAAI3L,EACA0f,EACJ,OAAQ/T,GACP,KAAK9G,EAAW0E,cAChB,KAAK1E,EAAW4E,UAChB,KAAK5E,EAAW2E,SAChB,KAAK3E,EAAW0F,cACfvK,EAAOnP,KAAKG,KAAcytB,eAAe5G,EAAalM,GACtD+T,EAAW7uB,KAAKG,KAAcytB,eAAegB,EAAW9T,GACzB,MAA3B9a,KAAK8rB,UAAUhR,IAAoB9a,KAAK8rB,UAAUhR,IAAY3L,GAAOnP,KAAK+rB,cAAcjR,IAAY+T,IACvG7uB,KAAK8rB,UAAUhR,GAAW3L,EAC1BnP,KAAK+rB,cAAcjR,GAAW+T,GAE/B,MACD,KAAK7a,EAAW8E,aAChB,KAAK9E,EAAW+E,OAChB,KAAK/E,EAAWuF,cAChB,KAAKvF,EAAWgF,aAChB,KAAKhF,EAAWiF,cAChB,KAAKjF,EAAWkF,aAChB,KAAKlF,EAAWmF,aAChB,KAAKnF,EAAWoF,aAChB,KAAKpF,EAAWqF,aAChB,KAAKrF,EAAWsF,cAChB,KAAKtF,EAAWyF,gBAChB,KAAKzF,EAAW2F,gBAChB,KAAK3F,EAAW4F,gBAChB,KAAK5F,EAAW6F,iBAChB,KAAK7F,EAAW8F,YAChB,KAAK9F,EAAW+F,iBAChB,KAAK/F,EAAWwF,UACfrK,EAAMnP,KAAKG,KAAMytB,eAAe5G,EAAalM,GAC7C+T,EAAU7uB,KAAKG,KAAMytB,eAAegB,EAAW9T,GAC/C,IAAIgU,EAAwBte,EAAWlP,YAAYuS,IAASrD,EAAWkD,YAAYG,IAAQC,EAAUoJ,WAAcld,KAAKG,KAAMe,kBAAoB,GAEjE,MAA7ElB,KAAKgsB,aAAa8C,GAAete,EAAWmD,eAAeE,IAAMiH,IACjE9a,KAAKgsB,aAAa8C,GAAete,EAAWmD,eAAeE,IAAMiH,IAAY3L,GAC7EnP,KAAKisB,iBAAiB6C,GAAete,EAAWmD,eAAeE,IAAMiH,IAAY+T,IACpF7uB,KAAKgsB,aAAa8C,GAAete,EAAWmD,eAAeE,IAAMiH,GAAW3L,EAC5EnP,KAAKisB,iBAAiB6C,GAAete,EAAWmD,eAAeE,IAAMiH,GAAW+T,GAEjF,MACD,KAAK7a,EAAW6E,WACf1J,EAAOnP,KAAKG,KAAcytB,eAAe5G,EAAalM,GACtD,MACD,KAAK9G,EAAWC,QAChB,QACC9E,GAAO,EAIT,OAAOA,EAGDtV,YAAYihB,EAAqBiU,EAAkB3uB,EAAyBoQ,EAA4Bqe,GAC9G,GAAIE,GACH,GAA+B,MAA3B/uB,KAAK8rB,UAAUhR,IAAmD,MAA/B9a,KAAK+rB,cAAcjR,GACzD,OAAO+T,EAAU7uB,KAAK+rB,cAAcjR,GAAY9a,KAAK8rB,UAAUhR,QAE1D,GAAe3N,MAAX/M,GAAsC+M,MAAdqD,GACqB,MAAnDxQ,KAAKgsB,aAAa5rB,GAASoQ,GAAYsK,IAA2E,MAAvD9a,KAAKisB,iBAAiB7rB,GAASoQ,GAAYsK,GACzG,OAAO+T,EAAU7uB,KAAKisB,iBAAiB7rB,GAASoQ,GAAYsK,GAAY9a,KAAKgsB,aAAa5rB,GAASoQ,GAAYsK,GAGjH,OAAQ,EAIFjhB,eAAeuG,EAAiBoQ,GACtC,IAAK,IAAIsK,EAAkB,EAAGA,EAAU9G,EAAWgG,YAAac,IAC/D,GAAuB3N,MAAlBnN,KAAK8rB,WAAqD,MAA3B9rB,KAAK8rB,UAAUhR,IACzB3N,MAArBnN,KAAKgsB,cAA2D7e,MAA9BnN,KAAKgsB,aAAa5rB,IAAmE+M,MAA1CnN,KAAKgsB,aAAa5rB,GAASoQ,IAA+E,MAAnDxQ,KAAKgsB,aAAa5rB,GAASoQ,GAAYsK,GAC/K,OAAO,EAGT,OAAO,EAGDjhB,SAASihB,EAAqB1a,EAAkBoQ,IAClDxQ,KAAKgvB,YAAYlU,GAAS,IAAqB3N,MAAX/M,GAAsC+M,MAAdqD,GAA2BxQ,KAAKgvB,YAAYlU,GAAS,EAAO1a,EAASoQ,MACpIxQ,KAAK8rB,UAAUhR,GAAW,KAC1B9a,KAAK+rB,cAAcjR,GAAW,KACf3N,MAAX/M,GAAsC+M,MAAdqD,IAC3BxQ,KAAKgsB,aAAa5rB,GAASoQ,GAAYsK,GAAW,KAClD9a,KAAKisB,iBAAiB7rB,GAASoQ,GAAYsK,GAAW,OAKlDjhB,YAAYihB,EAAqBiU,EAAkB3uB,EAAkBoQ,GAC3E,OAAIue,EACuB5hB,MAAlBnN,KAAK8rB,WAAqD,MAA3B9rB,KAAK8rB,UAAUhR,GACjC3N,MAAX/M,GAAsC+M,MAAdqD,GAAgDrD,MAArBnN,KAAKgsB,cAA2D,MAA9BhsB,KAAKgsB,aAAa5rB,IAA8D,MAA1CJ,KAAKgsB,aAAa5rB,GAASoQ,IAA0E,MAAnDxQ,KAAKgsB,aAAa5rB,GAASoQ,GAAYsK,IACnK,MAAnD9a,KAAKgsB,aAAa5rB,GAASoQ,GAAYsK,GAKzCjhB,gBACc,MAAjBmG,KAAK6qB,UAAuC,MAAnB7qB,KAAK8qB,aACjC9qB,KAAK6qB,SAAW7qB,KAAK6qB,UAAY,IAAKpK,OAAOwO,cAAgBxO,OAAOyO,oBACpElvB,KAAK2oB,iBAAmB3oB,KAAK6qB,SAASsE,WACtCnvB,KAAK8qB,WAAa9qB,KAAK6qB,SAASuE,sBAAwBpvB,KAAK6qB,SAASuE,sBAAsB,KAAM,EAAG,GAAKpvB,KAAK6qB,SAASwE,qBAAqB,KAAM,EAAG,GACtJrvB,KAAK8qB,WAAWwE,eAAiBtvB,KAAK+qB,qBACtC/qB,KAAK8qB,WAAWyE,iBAAmB,WACnCvvB,KAAK8qB,WAAW0E,sBAAwB,WACxCxvB,KAAK8qB,WAAW2E,QAAQzvB,KAAK6qB,SAAS6E,cAEvC1vB,KAAK6qB,SAAS8E,SAGP91B,kBACc,MAAjBmG,KAAK6qB,UAAuC,MAAnB7qB,KAAK8qB,aACjC9qB,KAAK8qB,WAAW8E,WAAW5vB,KAAK6qB,SAAS6E,aACzC1vB,KAAK8qB,WAAa,KACd9qB,KAAK6qB,SAASgF,OAAO7vB,KAAK6qB,SAASgF,QACvC7vB,KAAK6qB,SAAW,MAIXhxB,oBACNmG,KAAK8vB,gBACL9vB,KAAKupB,iBAAmB8B,YAAYC,MAAQ,IAGtCzxB,OACFmG,KAAKspB,gBACTtpB,KAAKspB,eAAgB,EACrBtpB,KAAK+vB,kBAAkB/vB,KAAKG,MAC5BH,KAAKgwB,yBACLhwB,KAAK8vB,iBAGCj2B,QACDmG,KAAKspB,gBACVtpB,KAAKspB,eAAgB,EACJ,MAAbtpB,KAAKG,OACRH,KAAKG,KAAKoY,YAAc,EACxBvY,KAAKG,KAAKqY,aAAe,GAE1BxY,KAAK8rB,UAAY,GACjB9rB,KAAKgsB,aAAe,GACpBhsB,KAAK+rB,cAAgB,GACrB/rB,KAAKisB,iBAAmB,GACxBjsB,KAAK0pB,UAAY,IAGX7vB,cACNmG,KAAK+b,IAAM,EACX/b,KAAKiwB,YAGCp2B,QAAQkiB,GACd/b,KAAK+b,IAAMA,EACX/b,KAAKkpB,iBAAmBlpB,KAAK+b,IAGvBliB,YACNmG,KAAKkpB,iBAAmBlpB,KAAK+b,IAC7B/b,KAAKmpB,KAAO,EACZnpB,KAAKopB,KAAO,EACZppB,KAAKwjB,KAAO,EACZxjB,KAAKqpB,oBAAsB,EAGrBxvB,eACNmG,KAAKwqB,eAAiB,EACtBxqB,KAAKyqB,gBAAkB,EACvBzqB,KAAK0qB,gBAAkB,EACvB1qB,KAAK2qB,gBAAkB,EACvB3qB,KAAK4qB,gBAAkB,EAGvB5qB,KAAKkwB,eACL,IAAK,IAAI/hC,EAAY,EAAGA,EAAI6R,KAAKuqB,gBAAgBn8B,OAAQD,IAAK6R,KAAKuqB,gBAAgBp8B,GAAK,EACxF,IAAK,IAAIA,EAAY,EAAGA,EAAI6R,KAAKoqB,gBAAgBh8B,OAAQD,IAAK6R,KAAKoqB,gBAAgBj8B,GAAK,EACxF,GAA2B,MAAvB6R,KAAKgqB,eAAwB,IAAK,IAAI77B,EAAY,EAAGA,EAAI6R,KAAKgqB,eAAe57B,OAAQD,IAAK6R,KAAKgqB,eAAe77B,GAAK,EACvH,GAA6B,MAAzB6R,KAAKiqB,iBAA0B,IAAK,IAAI97B,EAAY,EAAGA,EAAI6R,KAAKiqB,iBAAiB77B,OAAQD,IAAK6R,KAAKiqB,iBAAiB97B,GAAK,EAC7H,GAA6B,MAAzB6R,KAAKkqB,iBAA0B,IAAK,IAAI/7B,EAAY,EAAGA,EAAI6R,KAAKkqB,iBAAiB97B,OAAQD,IAAK6R,KAAKkqB,iBAAiB/7B,GAAK,EAC7H,GAAmC,MAA/B6R,KAAKmqB,uBAAgC,IAAK,IAAIh8B,EAAY,EAAGA,EAAI6R,KAAKmqB,uBAAuB/7B,OAAQD,IAAK6R,KAAKmqB,uBAAuBh8B,GAAK,EAGzI0L,eACN,GAAKmG,KAAKG,OACNH,KAAK+b,IAAM/b,KAAKG,KAAK+a,WAAalb,KAAK+b,KAAO/b,KAAKG,KAAK+a,UAAYlb,KAAKG,KAAKgb,YAAY,CAC7F,MAAMgV,EAAiBnwB,KAAK+b,IAC5B/b,KAAK+b,IAAM/b,KAAKG,KAAK+a,UACrBlb,KAAKkpB,kBAAoBlpB,KAAK+b,IAAMoU,EAEhCnwB,KAAKgtB,SACRhtB,KAAKgwB,0BAIDn2B,UACN,IAAKmG,KAAKG,KAAM,OAChB,MAAMgwB,EAAiBnwB,KAAK+b,IAC5B/b,KAAK+b,MACD/b,KAAK+b,KAAO/b,KAAKG,KAAKob,WACzBvb,KAAK+b,IAAM,GAEZ/b,KAAKkpB,kBAAoBlpB,KAAK+b,IAAMoU,EAGpC,IAAK,IAAI/vB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClGJ,KAAK0pB,UAAUtpB,IAAY,EAGxBJ,KAAKgtB,SACRhtB,KAAKgwB,yBAGAn2B,UACN,IAAKmG,KAAKG,KAAM,OAChB,MAAM+sB,EAAyBltB,KAAKmtB,oBACpCntB,KAAK+b,MACL/b,KAAKmpB,KAAO,EACZnpB,KAAKopB,KAAO,EACZppB,KAAKwjB,KAAO,EACZxjB,KAAKqpB,oBAAsB6D,EAEC,GAAxBltB,KAAKgpB,iBAAwBhpB,KAAK+b,KAAO/b,KAAKG,KAAK+a,UAAYlb,KAAKG,KAAKgb,aAC5Enb,KAAK+b,IAAM/b,KAAKG,KAAK+a,UACjBlb,KAAKgpB,gBAAkB,GAAGhpB,KAAKgpB,mBAK9BnvB,WACN,GAAKmG,KAAKG,KAAV,CACAH,KAAK+b,IAAM,EACX/b,KAAKkpB,iBAAmB,EACxBlpB,KAAKmpB,KAAO,EACZnpB,KAAKopB,KAAO,EAGZ,IAAK,IAAIhpB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClGJ,KAAK0pB,UAAUtpB,IAAY,EAGxBJ,KAAKgtB,SACRhtB,KAAKgwB,0BAGAn2B,iBAAiBkiB,GACvB,GAAK/b,KAAKG,KAAV,CAEAH,KAAK+b,IAAMA,EAEX/b,KAAKkpB,iBAAmBnN,EACxB/b,KAAKmpB,KAAO,EACZnpB,KAAKopB,KAAO,EAGZ,IAAK,IAAIhpB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClGJ,KAAK0pB,UAAUtpB,IAAY,EAGxBJ,KAAKgtB,SACRhtB,KAAKgwB,0BAGAn2B,UACN,IAAKmG,KAAKG,KAAM,OAChB,MAAMgwB,EAAiBnwB,KAAK+b,IAC5B/b,KAAK+b,OACD/b,KAAK+b,IAAM,GAAK/b,KAAK+b,KAAO/b,KAAKG,KAAKob,YACzCvb,KAAK+b,IAAM/b,KAAKG,KAAKob,SAAW,GAEjCvb,KAAKkpB,kBAAoBlpB,KAAK+b,IAAMoU,EAGpC,IAAK,IAAI/vB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClGJ,KAAK0pB,UAAUtpB,IAAY,EAGxBJ,KAAKgtB,SACRhtB,KAAKgwB,yBAoBAn2B,WAAWqxB,EAA2BE,EAA2BgF,EAA4BC,GAAoB,GACvH,GAAiB,MAAbrwB,KAAKG,KAAc,CACtB,IAAK,IAAIhS,EAAY,EAAGA,EAAIiiC,EAAoBjiC,IAC/C+8B,EAAY/8B,GAAK,EACjBi9B,EAAYj9B,GAAK,EAGlB,YADA6R,KAAKwrB,kBAINxrB,KAAKG,KAAKoY,YAAc,EACxBvY,KAAKG,KAAKqY,aAAe,EAEzB,MAAM8X,EAAuBtwB,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAErE,IAAK,IAAIjT,EAAY6R,KAAKypB,YAAYr7B,OAAQD,EAAImiC,EAAcniC,IAC/D6R,KAAKypB,YAAYt7B,GAAK,IAAI6e,EAC1BhN,KAAK4pB,cAAcz7B,GAAK,IAAI6e,EAI7B,GAFAhN,KAAKypB,YAAYr7B,OAASkiC,EAC1BtwB,KAAK4pB,cAAcx7B,OAASkiC,EACxBA,GAAgBtwB,KAAK0pB,UAAUt7B,OAAQ,CAC1C,IAAImiC,EAAcvwB,KAAK0pB,UAAUt7B,OAEjC,IADA4R,KAAK0pB,UAAUt7B,OAASkiC,EACjBC,EAAMvwB,KAAK0pB,UAAUt7B,QAC3B4R,KAAK0pB,UAAU6G,MAAU,EAI3B,IAAK,IAAIpiC,EAAY6R,KAAK2pB,eAAev7B,OAAQD,EAAI6R,KAAKG,KAAK4a,gBAAiB5sB,IAAK,CACpF6R,KAAK2pB,eAAex7B,GAAK,GACzB,IAAK,IAAI0lB,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAChD7T,KAAK2pB,eAAex7B,GAAG0lB,GAAO,IAAI7G,EAEnChN,KAAK2pB,eAAex7B,GAAGC,OAASL,EAAO4K,SAExCqH,KAAK2pB,eAAev7B,OAAS4R,KAAKG,KAAK4a,gBAEvC,IAAImS,EAAyBltB,KAAKmtB,oBAC9BqD,EAAsB,EACtB3C,GAAiB,EAGrB,KAAO7tB,KAAKqpB,qBAAuB,GAAGrpB,KAAKqpB,qBAAuB6D,EAC9DltB,KAAKqpB,oBAAsB6D,IAAgBltB,KAAKqpB,oBAAsB6D,GACtEmD,IACCrwB,KAAKmpB,MAAQnpB,KAAKG,KAAKmb,cAC1Btb,KAAK+b,MACL/b,KAAKmpB,KAAO,EACZnpB,KAAKopB,KAAO,EACZppB,KAAKwjB,KAAO,EACZxjB,KAAKqpB,oBAAsB6D,EAEC,GAAxBltB,KAAKgpB,iBAAwBhpB,KAAK+b,KAAO/b,KAAKG,KAAK+a,UAAYlb,KAAKG,KAAKgb,aAC5Enb,KAAK+b,IAAM/b,KAAKG,KAAK+a,UACjBlb,KAAKgpB,gBAAkB,GAAGhpB,KAAKgpB,oBAGjChpB,KAAK+b,KAAO/b,KAAKG,KAAKob,WACzBvb,KAAK+b,IAAM,GACkB,GAAzB/b,KAAKgpB,kBACR6E,GAAQ,EACR7tB,KAAKywB,WAOR,MAAMC,EAAkD,EAArBN,EACR,MAAvBpwB,KAAKgqB,gBAA0BhqB,KAAKgqB,eAAe57B,QAAUsiC,GACvC,MAAzB1wB,KAAKiqB,kBAA4BjqB,KAAKiqB,iBAAiB77B,QAAUsiC,GACxC,MAAzB1wB,KAAKkqB,kBAA4BlqB,KAAKkqB,iBAAiB97B,QAAUsiC,GAClC,MAA/B1wB,KAAKmqB,wBAAkCnqB,KAAKmqB,uBAAuB/7B,QAAUsiC,IAC7E1wB,KAAKgqB,eAAiB,IAAI36B,aAAaqhC,GACvC1wB,KAAKiqB,iBAAmB,IAAI56B,aAAaqhC,GACzC1wB,KAAKkqB,iBAAmB,IAAI76B,aAAaqhC,GACzC1wB,KAAKmqB,uBAAyB,IAAI96B,aAAaqhC,GAC/C1wB,KAAK+pB,kBAAoB,GAE1B,IAAIA,EAA4B/pB,KAAK+pB,kBACrC,MAAMC,EAA+BhqB,KAAKgqB,eACpCC,EAAiCjqB,KAAKiqB,iBACtCC,EAAiClqB,KAAKkqB,iBACtCC,EAAuCnqB,KAAKmqB,uBAG5Ct2B,GAAkBmM,KAAKnM,OACvBu2B,EAAgCpqB,KAAKoqB,gBACrCG,EAAgCvqB,KAAKuqB,gBAErCoG,EAAgC,EAAV/hC,KAAKkC,IADF,EAC+BkP,KAAK2oB,kBAC7DiI,EAAsB,IAAM5wB,KAAK2oB,iBAAmB,MACpDkI,EAAwB,KAAQ,KAAOD,EACvCE,EAAwB,KAAQ,IAAOF,EACvCG,EAAwB,KAAQ,KAAOH,EACvCI,EAAwB,KAAQ,KAAOJ,EACvCK,EAAwB,KAAQ,KAAOL,EACvCM,EAAwB,KAAQ,KAAON,EAC7C,IAAItG,EAAsBtqB,KAAKsqB,aAAyB,EAAV17B,KAAKkC,IAC/Cu5B,EAA+C,KAAtBrqB,KAAKqqB,eAC9BG,EAA+C,MAAtBxqB,KAAKwqB,eAC9BC,GAA2BzqB,KAAKyqB,gBAChCC,GAA2B1qB,KAAK0qB,gBAChCC,GAA2B3qB,KAAK2qB,gBAChCC,GAA2B5qB,KAAK4qB,gBAChCuG,EAAoBnxB,KAAKG,KAAKib,OAC9Bpb,KAAKgvB,YAAYhb,EAAW4E,WAAW,KAC1CuY,EAAYnxB,KAAKoxB,YAAYpd,EAAW4E,WAAW,IAEpD,IAAIwC,EAAmE,KAAlDxsB,KAAKuB,IAAIghC,EAAYpjC,EAAO4E,YAAa,MAE9D,MAAMqlB,EAAqB,EAAMppB,KAAKuB,IAAI,GAAK6P,KAAKG,KAAK6X,WAAahY,KAAK2oB,kBACrE1Q,EAAoB,EAAMrpB,KAAKuB,IAAI,GAAK6P,KAAKG,KAAK8X,UAAYjY,KAAK2oB,kBACnEzQ,EAA+BlY,KAAKG,KAAK+X,qBACzCC,EAAyBnY,KAAKG,KAAKgY,eACnCC,EAA2BpY,KAAKG,KAAKiY,iBACrCC,EAAqBrY,KAAKG,KAAKkY,WAC/BC,EAAqBtY,KAAKG,KAAKmY,WAGrC,IAAIwR,GAAiB9pB,KAAK8pB,MAE1B,KAAO0G,EAAcJ,IAAuBvC,GAAO,CAElD,MAAMwD,EAA8BjB,EAAqBI,EACnDc,EAAoB1iC,KAAKyB,IAAIzB,KAAKkgB,KAAK9O,KAAKqpB,qBAAsBgI,GAExE,IAAK,IAAIjX,EAAqB,EAAGha,EAAkBJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBgZ,EAAapa,KAAKG,KAAK4a,gBAAiBX,IAAcha,IAAW,CAE9KJ,KAAKuxB,4BAA4BvxB,KAAKG,KAAMC,EAASiwB,GAErD,IAAK,IAAIxc,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAChD,IAAK,IAAI1lB,EAAY,EAAGA,EAAI6R,KAAK2pB,eAAevP,GAAYvG,GAAK2d,QAASrjC,IAAK,CAC9E,MAAMsjC,EAAazxB,KAAK2pB,eAAevP,GAAYvG,GAAKrS,IAAIrT,GAEnB,GAArC6R,KAAKG,KAAK4X,SAAS3X,GAASwX,OAC/B5X,KAAK0xB,SAAS1xB,KAAKG,KAAM4pB,EAAmB2G,EAAoBtwB,EAAS8sB,EAAgBoE,EAAWG,GAAM,GAAO,IAMjHzxB,KAAKipB,aACRjpB,KAAKipB,YAAa,EAClBjpB,KAAK2xB,WAGF3xB,KAAKgvB,YAAYhb,EAAW4E,WAAW,KAC1CwC,EAA8F,KAArFxsB,KAAKuB,IAAI6P,KAAKoxB,YAAYpd,EAAW4E,WAAW,GAAQ7qB,EAAO4E,YAAa,OAKtF,MAAM02B,GAA8BrpB,KAAKqpB,oBACnCuI,GAAqB,EAAM,GAAwB1E,EACnD2E,GAAmB,GAAOxI,GAAsBiI,GAAapE,EAC7D4E,IAAwB9xB,KAAKmpB,KAAOp7B,EAAOqF,aAAe4M,KAAKopB,MAAQr7B,EAAOsF,aAAe2M,KAAKwjB,KAClGuO,GAA4B,GAAiBhkC,EAAOsF,aACpD2+B,IAA2BF,GAAe,GAAK/jC,EAAOsF,aACtD4+B,GAAwBF,IAAqBC,GAAkBD,IAAqBH,GACpFM,GAAsBH,IAAqBC,GAAkBD,IAAqBF,GAExF,IAAK,IAAIzxB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClG,IAAK,IAAIgsB,EAAwB,EAAGA,EAAgBpsB,KAAKG,KAAKub,sBAAuB0Q,IAAiB,CACrG,IAAI5b,EAAyBxQ,KAAKG,KAAK4X,SAAS3X,GAASqX,YAAY2U,GACjE+F,EAA0B3hB,EAAWiC,aAEzCjC,EAAW2C,QAAU3C,EAAW4C,YAE5BpT,KAAKgvB,YAAYhb,EAAW2F,iBAAiB,EAAOvZ,EAASgsB,KAChE+F,EAAkBnyB,KAAKoxB,YAAYpd,EAAW2F,iBAAiB,EAAOvZ,EAASgsB,GAAe,IAGxE,GAAnB+F,GACH3hB,EAAW2C,QAAU,EACrB3C,EAAW4C,YAAc,GAGzB5C,EAAW4C,aAAiC,GAAlB+e,GAAyBD,GAAcD,IAKpE,IAAK,IAAI7xB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAAW,CAE7G,GAAIA,GAAWJ,KAAK+oB,iBAAkB,CACrC/oB,KAAKoyB,wBAAwBpyB,KAAKG,MAElC,IAAK,IAAIhS,EAAY,EAAGA,EAAI6R,KAAK6pB,eAAe2H,QAASrjC,IAAK,CAC7D,MAAMsjC,EAAazxB,KAAK6pB,eAAeroB,IAAIrT,GAG3C6R,KAAK0xB,SAAS1xB,KAAKG,KAAM4pB,EAAmB2G,EAAoBtwB,EAAS8sB,EAAgBoE,EAAWG,GAAM,GAAO,IAInHzxB,KAAKuxB,4BAA4BvxB,KAAKG,KAAMC,EAASiwB,GACrD,IAAK,IAAIliC,EAAY,EAAGA,EAAI6R,KAAKypB,YAAYrpB,GAASoxB,QAASrjC,IAAK,CACnE,MAAMsjC,EAAazxB,KAAKypB,YAAYrpB,GAASoB,IAAIrT,GACjD6R,KAAK0xB,SAAS1xB,KAAKG,KAAM4pB,EAAmB2G,EAAoBtwB,EAAS8sB,EAAgBoE,EAAWG,GAAM,GAAO,GAGlH,IAAK,IAAItjC,EAAY,EAAGA,EAAI6R,KAAK4pB,cAAcxpB,GAASoxB,QAASrjC,IAAK,CACrE,MAAMsjC,EAAazxB,KAAK4pB,cAAcxpB,GAASoB,IAAIrT,GACnD,GAAIsjC,EAAKtL,oBAAsBsL,EAAKjhB,WAAW6hB,gBAAgB39B,aAAc,CAC5EsL,KAAKsyB,iBAAiBlyB,EAASjS,GAC/BA,IACA,SAGD,MAAMokC,EAA8BpkC,EAAI6R,KAAKypB,YAAYrpB,GAASoxB,SAAWzjC,EAAOgL,uBAEpFiH,KAAK0xB,SAAS1xB,KAAKG,KAAM4pB,EAAmB2G,EAAoBtwB,EAAS8sB,EAAgBoE,EAAWG,GAAM,EAAMc,IAMlH,IAAIC,GAA0BnI,EAAiBwG,EAAgBD,EAAchiC,KAAKoC,IAAIs5B,EAAc,GAChGmI,GAA0BpI,EAAiByG,EAAgBF,EAAchiC,KAAKoC,IAAIs5B,EAAc,KAChGoI,GAA0BrI,EAAiB0G,EAAgBH,EAAchiC,KAAKoC,IAAIs5B,EAAc,KAChGqI,GAA0BtI,EAAiB,KAAQ2G,EAAgBJ,EAAchiC,KAAKoC,IAAIs5B,EAAc,KACxGsI,GAA0BvI,EAAiB,KAAQ4G,EAAgBL,EAAchiC,KAAKoC,IAAIs5B,EAAc,KACxGuI,GAA0BxI,EAAiB,KAAQ6G,EAAgBN,EAAchiC,KAAKoC,IAAIs5B,EAAc,GAC5GA,GAAeqG,EAAcW,EAC7B,MAMMwB,IANwBzI,EAAiBiH,EAAYT,EAAgBD,EAAchiC,KAAKoC,IAAIs5B,EAAc,GAM/DkI,IAAmBlB,EAC9DyB,IANwB1I,EAAiBiH,EAAYR,EAAgBF,EAAchiC,KAAKoC,IAAIs5B,EAAc,KAM/DmI,IAAmBnB,EAC9D0B,IANwB3I,EAAiBiH,EAAYP,EAAgBH,EAAchiC,KAAKoC,IAAIs5B,EAAc,KAM/DoI,IAAmBpB,EAC9D2B,IANwB5I,EAAiBiH,EAAY,KAAQN,EAAgBJ,EAAchiC,KAAKoC,IAAIs5B,EAAc,KAMvEqI,IAAmBrB,EAC9D4B,IANwB7I,EAAiBiH,EAAY,KAAQL,EAAgBL,EAAchiC,KAAKoC,IAAIs5B,EAAc,KAMvEsI,IAAmBtB,EAC9D6B,IANwB9I,EAAiBiH,EAAY,KAAQJ,EAAgBN,EAAchiC,KAAKoC,IAAIs5B,EAAc,GAMvEuI,IAAmBvB,EAC9D8B,GAAiB5C,EAAcc,EACrC,IAAK,IAAInjC,EAAYqiC,EAAariC,EAAIilC,GAAQjlC,IAAK,CAClD,MAAMklC,EAAuBtJ,EACvBuJ,EAAuBvJ,EAAoB,EAC3CwJ,EAAyBvJ,EAAeqJ,GAAerJ,EAAeqJ,GAAgB,EAC5F,MAAMG,EAAyBxJ,EAAesJ,GAAetJ,EAAesJ,GAAgB,EAC5F,MAAMG,EAA2BxJ,EAAiBoJ,GAAepJ,EAAiBoJ,GAAgB,EAClG,MAAMK,EAA2BzJ,EAAiBqJ,GAAerJ,EAAiBqJ,GAAgB,EAClG,MAAMK,EAA2BzJ,EAAiBmJ,GAAenJ,EAAiBmJ,GAAgB,EAClG,MAAMO,EAA2B1J,EAAiBoJ,GAAepJ,EAAiBoJ,GAAgB,EAClG,MAAMO,EAAiC1J,EAAuBkJ,GAAelJ,EAAuBkJ,GAAgB,EACpH,MAAMS,EAAiC3J,EAAuBmJ,GAAenJ,EAAuBmJ,GAAgB,EACpHvJ,GAAqB,EAErB,MAAMgK,EAA0BJ,EAAmBE,EAC7CG,EAA0BJ,EAAmBE,EAE7CG,EAA0BzB,GAAkB,EAC5C0B,EAA0BzB,GAAkB,EAC5C0B,EAA0BzB,GAAkB,EAC5C0B,EAA0BzB,GAAkB,EAC5C0B,EAA0BzB,GAAkB,EAC5C0B,EAA0BzB,GAAkB,EAC5C0B,EAAsBnK,EAAoC,KAApB,IACtCoK,EAAsBpK,EAAiBoI,GAAkB,EAAK,MAC9DiC,EAAsBrK,EAAoC,KAApB,IACtCsK,EAAsBtK,EAAiBqI,GAAkB,EAAK,MAC9DkC,EAAsBvK,EAAoC,KAApB,IACtCwK,EAAsBxK,EAAiBsI,GAAkB,EAAK,MAC9DmC,EAAsBzK,EAAoC,KAApB,IACtC0K,EAAsB1K,EAAiBuI,GAAkB,EAAK,MAC9DoC,EAAsB3K,EAAoC,KAApB,IACtC4K,EAAsB5K,EAAiBwI,GAAkB,EAAK,MAC9DqC,GAAsB7K,EAAoC,KAApB,IAQtC8K,GAAgB,IAAOnB,GANFQ,GAAeC,EAAcD,GAAeN,IAC5CQ,GAAeC,EAAcD,GAAeP,IAC5CS,GAAeC,EAAcD,GAAeR,IAKjEgB,GAAgB,IAAOnB,GAJFa,GAAeC,EAAcD,GAAeT,IAC5CW,GAAeC,EAAcD,GAAeV,IAC5CY,IANC7K,EAAiByI,GAAkB,EAAK,MAMZoC,IAAeX,IAGvElK,EAAgBC,GAAkB0J,EAClC3J,EAAiBC,EAAiB,KAAS,MAAS2J,EACpD3J,EAAkBA,EAAiB,EAAK,KACxCmI,IAAmBM,GACnBL,IAAmBM,GACnBL,IAAmBM,GACnBL,IAAmBM,GACnBL,IAAmBM,GACnBL,IAAmBM,GAMnB,MAAMiC,GAA2B5K,EAAiB,KAAQ,MACpD6K,GAA2B7K,EAAiB,KAAQ,MACpD8K,GAA2B9K,EAAiB,MAAS,MACrD+K,GAAyBhL,EAAgBC,GACzCgL,GAAwBjL,EAAgB6K,IACxCK,GAAwBlL,EAAgB8K,IACxCK,GAAwBnL,EAAgB+K,IACxCK,KAAwBJ,GAAgB1B,EAAyBJ,GAAoB+B,GACrFI,KAAwBL,GAAgBzB,EAAyBJ,GAAoB8B,GACrFK,IAAuBJ,GAAgBC,GACvCI,IAAuBL,GAAgBC,GAC7CjL,GAA8E,KAAzDkL,GAAcE,IAAeza,EAASqP,GAC3DC,GAA8E,KAAzDkL,GAAcE,IAAe1a,EAASsP,GAC3DC,GAA8E,KAAzDgL,GAAcE,IAAeza,EAASuP,GAC3DC,GAA8E,KAAzDgL,GAAcE,IAAe1a,EAASwP,GAC3DL,EAAgB6K,IAAmB3K,EACnCF,EAAgB8K,IAAmB3K,EACnCH,EAAgB+K,IAAmB3K,EACnCJ,EAAgBC,GAAkBI,EAClCJ,EAAkBA,EAAiB,EAAK,MAGxC,MAAMuL,GAAUzd,EAAaA,GAAcib,EAAiB2B,GAAgBzB,EAAmB+B,GAAgBC,GAAgBC,IACzHM,GAAU1d,EAAaA,GAAckb,EAAiB2B,GAAgBzB,EAAmB6B,GAAgBE,GAAgBC,IASzHO,GAAeF,GAAU,GAAOA,GAAUA,GAC1CG,GAAeF,GAAU,GAAOA,GAAUA,GAC1CnnC,GAAconC,GAAOC,GAAOD,GAAOC,GACzCl2B,KAAKG,KAAKoY,YAAevY,KAAKG,KAAKoY,YAAc1pB,GAAMmR,KAAKG,KAAKoY,YAAc1pB,GAE/E,MAAMsnC,KAAwBtnC,GAAMqpB,MAA4BrpB,GAAMspB,GAEhEie,KACY,GAAdD,MAAyD,IAAlCtnC,GAAM,EAAIqpB,GAA8B,KAAQE,EAAmB,MAAQ,EAAIA,IACpF,OAAF,GAAd+d,IACqB,OAAStnC,GAAM,EAAIspB,GAAkBE,GAAc,EAAIF,MAA9D,GAAdge,IAENrM,IAAWsM,GAActM,IAAUA,EAAQsM,GAAcne,EAAYD,GACrE,MAAMqe,GAAgBxiC,GAAUi2B,GAAS,EAAY,KAARA,EAAuB,GAARA,EAAc,KAC1EoB,EAAY/8B,GAAK4nC,GAAUM,GAC3BjL,EAAYj9B,GAAK6nC,GAAUK,GAE3Br2B,KAAKG,KAAKqY,aAAgBxY,KAAKG,KAAKqY,aAAe3pB,GAAMwnC,GAAgBr2B,KAAKG,KAAKqY,aAAe3pB,GAAMwnC,GAMzG,GAHA7F,GAAec,EAEftxB,KAAKqpB,qBAAuBiI,EACxBtxB,KAAKqpB,qBAAuB,EAAG,CAGlC,IAAK,IAAIjpB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClG,IAAK,IAAIjS,EAAY,EAAGA,EAAI6R,KAAK4pB,cAAcxpB,GAASoxB,QAASrjC,IAAK,CAClD6R,KAAK4pB,cAAcxpB,GAASoB,IAAIrT,GAC9Cg4B,qBAE+Bh4B,EAAI6R,KAAKypB,YAAYrpB,GAASoxB,SAAWzjC,EAAOgL,yBAEnFiH,KAAKsyB,iBAAiBlyB,EAASjS,GAC/BA,KAMH,IAAK,IAAIiS,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAClG,IAAK,IAAIgsB,EAAwB,EAAGA,EAAgBpsB,KAAKG,KAAK4X,SAAS3X,GAASqX,YAAYrpB,OAAQg+B,IAAiB,CACpH,IAAI5b,EAAyBxQ,KAAKG,KAAK4X,SAAS3X,GAASqX,YAAY2U,GACjEkK,EAA2B9lB,EAAWsC,cACtC9S,KAAKgvB,YAAYhb,EAAW6F,kBAAkB,EAAOzZ,EAASgsB,IACjEkK,EAAmBt2B,KAAKoxB,YAAYpd,EAAW6F,kBAAkB,EAAOzZ,EAASgsB,GAAe,GAC5FmK,OAAOC,UAAUF,GACpB9lB,EAAW6C,SAAWtlB,EAAOoH,cAAcmhC,GAG3C9lB,EAAW6C,UAAY,EAAKijB,EAAmB,GAAMvoC,EAAOoH,cAAcvG,KAAKsU,MAAMozB,IAAsBA,EAAmB,EAAKvoC,EAAOoH,cAAcvG,KAAKkgB,KAAKwnB,KAInK9lB,EAAW6C,SAAWtlB,EAAOoH,cAAcmhC,GAO9C,GAFAt2B,KAAKwjB,OACLxjB,KAAKqpB,qBAAuB6D,EACxBltB,KAAKwjB,MAAQz1B,EAAOsF,aAAc,CACrC2M,KAAKwjB,KAAO,EACZxjB,KAAKopB,OACLppB,KAAK4oB,oBACL,IAAI6N,EAAQz2B,KAAKopB,KAAOppB,KAAKmpB,KAAOp7B,EAAOqF,cAAgB4M,KAAKysB,eAAezsB,KAAK+b,KAAO,EAE3F,IAAK,IAAI3b,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAoBlB,KAAKG,KAAKiB,kBAAmBhB,IAAW,CAE7G,IAAIs2B,GAAY,EACZC,EAAY32B,KAAKypB,YAAYrpB,GAASoxB,QACtC1V,EAAU9b,KAAKG,KAAKolB,WAAWnlB,EAASJ,KAAK+b,KACjD,GAAe,MAAXD,GAAmB2a,EAAO,CAC7B,IAAIjmB,EAAasL,EAAQtL,WACzB,GAAIxQ,KAAKG,KAAK4X,SAAS3X,GAASqX,YAAYjH,GAAYwC,mBAAqB2jB,EAAY,EAAG,CAM3F,IAAIC,EAAY52B,KAAK+b,IAAM,GACvB6a,GAAa52B,KAAKG,KAAKob,UAAaqb,GAAa52B,KAAKG,KAAK+a,UAAYlb,KAAKG,KAAKgb,YAAsC,GAAxBnb,KAAKgpB,mBACvG4N,EAAY52B,KAAKG,KAAK+a,WAEvB,IAAI2b,EAAc72B,KAAKG,KAAKolB,WAAWnlB,EAASw2B,GAC5CE,EAAW92B,KAAKypB,YAAYrpB,GAASoB,IAAI,GAAGiP,KAChD,GAAgB,MAAZqmB,EAAkB,CAErB,IADA,IAAI3mB,EAAM,EACH2mB,EAASnnB,KAAKQ,GAAKnB,KAAO8nB,EAASvnB,MAAQvP,KAAKopB,KAAOppB,KAAKmpB,KAAOp7B,EAAOqF,cAAgB+c,EAAM2mB,EAASnnB,KAAKvhB,OAAS,GAC7H+hB,IACD,IAAI4mB,GAAaD,EAASnnB,KAAKQ,GAAKtc,OAChCwyB,GAAeyQ,EAASnnB,KAAKQ,GAAKhV,SAEtC,GAAmB,MAAf07B,GAAuBA,EAAYrmB,YAAcA,EACpD,IAAK,IAAIriB,EAAY,EAAGA,EAAI0oC,EAAYtmB,MAAMniB,OAAQD,IACrD,GAAkC,GAA9B0oC,EAAYtmB,MAAMpiB,GAAGohB,OACrBsnB,EAAYtmB,MAAMpiB,GAAGwhB,KAAK,GAAG9b,QAAUkjC,IACvCF,EAAYtmB,MAAMpiB,GAAGuhB,QAAQthB,QAAU0oC,EAASpnB,QAAQthB,OAAQ,CAEnEsoC,GAAY,EACZ,IAAK,IAAIjqB,EAAY,EAAGA,EAAIqqB,EAASpnB,QAAQthB,OAAQqe,KAE4C,GAA5FoqB,EAAYtmB,MAAMpiB,GAAGuhB,QAAQyF,WAAW6hB,GAAMA,GAAKF,EAAUpnB,QAAQjD,GAAK4Z,OAC7EqQ,GAAY,EACZjqB,EAAIqqB,EAASpnB,QAAQthB,QAGvBD,EAAI0oC,EAAYtmB,MAAMniB,OAElBsoC,IAKC12B,KAAKopB,KAAOppB,KAAKmpB,KAAOp7B,EAAOqF,aAAe4M,KAAKysB,eAAezsB,KAAK+b,KAEtE/b,KAAK0pB,UAAUtpB,GAAW,IAC7BJ,KAAK0pB,UAAUtpB,GAAW,GAID,GAAlB02B,EAASvnB,OAAcvP,KAAK0pB,UAAUtpB,IAAY,EAC1DJ,KAAK0pB,UAAUtpB,IAAYJ,KAAKopB,KAAOppB,KAAKmpB,KAAOp7B,EAAOqF,aAI1D4M,KAAK0pB,UAAUtpB,GAAWJ,KAAKopB,KAAOppB,KAAKmpB,KAAOp7B,EAAOqF,aAAe0jC,EAASvnB,UAUzF,IAAK,IAAIphB,EAAY,EAAGA,EAAI6R,KAAKypB,YAAYrpB,GAASoxB,QAASrjC,IAAK,CACnE,MAAMsjC,EAAazxB,KAAKypB,YAAYrpB,GAASoB,IAAIrT,GAC3C0M,EAAyB42B,EAAKjhB,WAAW6hB,gBAE9B,MAAbZ,EAAKhhB,MAAgBghB,EAAKhhB,KAAKjB,KAAOxP,KAAKopB,KAAOppB,KAAKmpB,KAAOp7B,EAAOqF,eAElEyH,EAAWtG,YAAck9B,EAAKjhB,WAAWyC,qBAAuBjT,KAAK0pB,UAAUtpB,IAAY,IAC5FvF,EAAWpG,SACduL,KAAKi3B,YAAY72B,EAASqxB,GAE1BzxB,KAAKk3B,SAASzF,GAEfzxB,KAAKypB,YAAYrpB,GAAS+2B,OAAOhpC,GACjCA,KAIIuoC,IACJ12B,KAAK0pB,UAAUtpB,IAAY,KAM/B,IAAK,IAAIA,EAAkB,EAAGA,EAAUJ,KAAKG,KAAK4a,gBAAiB3a,IAClE,IAAK,IAAIyT,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAChD,IAAK,IAAI1lB,EAAY,EAAGA,EAAI6R,KAAK2pB,eAAevpB,GAASyT,GAAK2d,QAASrjC,IAAK,CAC3E,MAAMsjC,EAAazxB,KAAK2pB,eAAevpB,GAASyT,GAAKrS,IAAIrT,GAC1BsjC,EAAKjhB,WAAW6hB,gBAC/B99B,YAA2B,MAAbk9B,EAAKhhB,MAAgBghB,EAAKhhB,KAAKjB,KAAOxP,KAAKopB,KAAOppB,KAAKmpB,KAAOp7B,EAAOqF,eAClG4M,KAAKk3B,SAASzF,GACdzxB,KAAK2pB,eAAevpB,GAASyT,GAAKsjB,OAAOhpC,GACzCA,KAMA6R,KAAKopB,MAAQr7B,EAAOqF,eACvB4M,KAAKopB,KAAO,EAERiH,IACHrwB,KAAKmpB,OACDnpB,KAAKmpB,MAAQnpB,KAAKG,KAAKmb,cAE1Btb,KAAKmpB,KAAO,EACZnpB,KAAK+b,MACuB,GAAxB/b,KAAKgpB,iBAAwBhpB,KAAK+b,KAAO/b,KAAKG,KAAK+a,UAAYlb,KAAKG,KAAKgb,aAC5Enb,KAAK+b,IAAM/b,KAAKG,KAAK+a,UACjBlb,KAAKgpB,gBAAkB,GAAGhpB,KAAKgpB,mBAEhChpB,KAAK+b,KAAO/b,KAAKG,KAAKob,WACzBvb,KAAK+b,IAAM,GACkB,GAAzB/b,KAAKgpB,kBACR6E,GAAQ,EACR7tB,KAAKo3B,eACLp3B,KAAKywB,cAUZ,IAAK,IAAI3V,EAAkB,EAAGA,EAAU9G,EAAWgG,YAAac,IACrC,MAAtB9a,KAAK+rB,eAAwD,MAA/B/rB,KAAK+rB,cAAcjR,KACpD9a,KAAK8rB,UAAUhR,GAAW9a,KAAK+rB,cAAcjR,IAI3C9a,KAAKgvB,YAAYhb,EAAW2E,UAAU,KACzCuU,EAAiBltB,KAAKmtB,oBACtBntB,KAAKqpB,oBAAsBz6B,KAAKyB,IAAI2P,KAAKqpB,oBAAqB6D,IAK/D,IAAK,IAAI9sB,EAAkB,EAAGA,EAAUJ,KAAKG,KAAKe,kBAAmBd,IACpE,IAAK,IAAIoQ,KAAcxQ,KAAKG,KAAK4X,SAAS3X,GAASqX,YAClDjH,EAAW4C,YAAe5C,EAAW4C,aAAerlB,EAAOiH,aAAawb,EAAWmC,aAAazd,QAAUnH,EAAOsF,aAAe65B,EAAiBltB,KAAK2oB,mBACtJnY,EAAW6C,QAAW7C,EAAW6C,SAAW,KAAOtlB,EAAOuF,kBAI5D,IAAK,IAAIwnB,EAAkB,EAAGA,EAAU9G,EAAWgG,YAAac,IAC/D,IAAK,IAAI1a,EAAkB,EAAGA,EAAUkwB,EAAclwB,IACrD,IAAK,IAAIoQ,EAAqB,EAAGA,EAAaxQ,KAAKG,KAAKub,sBAAuBlL,IACjD,MAAzBxQ,KAAKisB,kBAA8D,MAAlCjsB,KAAKisB,iBAAiB7rB,IAAkE,MAA9CJ,KAAKisB,iBAAiB7rB,GAASoQ,IAA8E,MAAvDxQ,KAAKisB,iBAAiB7rB,GAASoQ,GAAYsK,KAC/K9a,KAAKgsB,aAAa5rB,GAASoQ,GAAYsK,GAAW9a,KAAKisB,iBAAiB7rB,GAASoQ,GAAYsK,IASlG,MAAMuc,GAAO,OACT,MAAW5M,GAAmBA,EAAkB4M,KAAS5M,EAAkB,IAC3E,MAAWC,GAAmBA,EAAkB2M,KAAS3M,EAAkB,IAC3E,MAAWC,GAAmBA,EAAkB0M,KAAS1M,EAAkB,IAC3E,MAAWC,GAAmBA,EAAkByM,KAASzM,EAAkB,IAG3E,MAAWd,GAASA,EAAQuN,KAASvN,EAAQ,GAEjD9pB,KAAK+pB,mBAAqB/pB,KAAK+pB,kBAAyC,EAArBqG,GAA0BM,EAC7E1wB,KAAKsqB,YAAcA,EACnBtqB,KAAKqqB,eAAiBA,EACtBrqB,KAAKwqB,eAAiBA,EACtBxqB,KAAKyqB,gBAAkBA,EACvBzqB,KAAK0qB,gBAAkBA,EACvB1qB,KAAK2qB,gBAAkBA,EACvB3qB,KAAK4qB,gBAAkBA,EAGvB5qB,KAAK8pB,MAAQA,EAETuG,IACHrwB,KAAKkpB,oBAAsBlpB,KAAKwjB,KAAO,EAAMxjB,KAAKqpB,oBAAsB6D,GAAkB,EAAMltB,KAAKopB,MAAQr7B,EAAOqF,aAAe4M,KAAKmpB,MAAQnpB,KAAKG,KAAKmb,YAActb,KAAK+b,KAoBvKliB,SAAS43B,GAChBzxB,KAAKwpB,SAAS8N,SAAS7F,GAGhB53B,UACP,GAAImG,KAAKwpB,SAASgI,QAAU,EAAG,CAC9B,MAAMC,EAAazxB,KAAKwpB,SAAS/b,UAGjC,OAFAgkB,EAAK7gB,QACL6gB,EAAK1L,QAAS,EACP0L,EAER,OAAO,IAAIjM,EAGJ3rB,YAAYuG,EAAiBqxB,GACnB,MAAbzxB,KAAKG,MAAiBH,KAAKG,KAAK2c,gBAAgB1c,IACnDJ,KAAK4pB,cAAcxpB,GAASm3B,UAAU9F,GAWhC53B,iBAAiBuG,EAAiBo3B,GACxB,MAAbx3B,KAAKG,MAAiBH,KAAKG,KAAK2c,gBAAgB1c,KACnDJ,KAAKk3B,SAASl3B,KAAK4pB,cAAcxpB,GAASoB,IAAIg2B,IAC9Cx3B,KAAK4pB,cAAcxpB,GAAS+2B,OAAOK,IAW9B39B,eACN,KAAOmG,KAAK6pB,eAAe2H,QAAU,GACpCxxB,KAAKk3B,SAASl3B,KAAK6pB,eAAepc,WAEnC,IAAK,IAAItf,EAAY,EAAGA,EAAI6R,KAAKypB,YAAYr7B,OAAQD,IACpD,KAAO6R,KAAKypB,YAAYt7B,GAAGqjC,QAAU,GACpCxxB,KAAKk3B,SAASl3B,KAAKypB,YAAYt7B,GAAGsf,WAGpC,IAAK,IAAItf,EAAY,EAAGA,EAAI6R,KAAK4pB,cAAcx7B,OAAQD,IACtD,KAAO6R,KAAK4pB,cAAcz7B,GAAGqjC,QAAU,GACtCxxB,KAAKk3B,SAASl3B,KAAK4pB,cAAcz7B,GAAGsf,WAGtC,IAAK,IAAItf,EAAI,EAAGA,EAAI6R,KAAK2pB,eAAev7B,OAAQD,IAC/C,IAAK,IAAI0lB,EAAM,EAAGA,EAAM7T,KAAK2pB,eAAex7B,GAAGC,OAAQylB,IACtD,KAAO7T,KAAK2pB,eAAex7B,GAAG0lB,GAAK2d,QAAU,GAC5CxxB,KAAKk3B,SAASl3B,KAAK2pB,eAAex7B,GAAG0lB,GAAKpG,WAetC5T,wBAAwBsG,GAC/B,MAAMs3B,EAAwBz3B,KAAK6pB,eAC7Bna,EAAoB1P,KAAK8oB,iBAC/B,IAAI6N,EAAoB,EACxB,GAAI32B,KAAK4oB,kBAAoB,EAAG,CAC/B,MAAMpY,EAAyBrQ,EAAK4X,SAAS/X,KAAK+oB,kBAAkBtR,YAAYtX,EAAKksB,qBAAqBrsB,KAAK+oB,iBAAkB/oB,KAAK+b,MAEtI,GAAIvL,EAAW4D,WAAWhe,YAAa,CACtC,IAAIq7B,EACoB,GAApBgG,EAASjG,SACZC,EAAOzxB,KAAK03B,UACZD,EAASH,SAAS7F,KACPjhB,EAAW6hB,gBAAgB99B,YAAcyL,KAAK6oB,kBACzD7oB,KAAKi3B,YAAYj3B,KAAK+oB,iBAAkB0O,EAASjqB,YACjDikB,EAAOzxB,KAAK03B,UACZD,EAASH,SAAS7F,IAElBA,EAAOgG,EAASj2B,IAAI,GAErBm1B,EAAY,EAEZ,IAAK,IAAIxoC,EAAY,EAAGA,EAAIuhB,EAAQthB,OAAQD,IAC3CsjC,EAAK/hB,QAAQvhB,GAAKuhB,EAAQvhB,GAE3BsjC,EAAKvgC,WAAawe,EAAQthB,OAC1BqjC,EAAKhM,UAAY,EACjBgM,EAAKjhB,WAAaA,EAClBihB,EAAKhhB,KAAOghB,EAAK9L,SAAW8L,EAAK7L,SAAW,UAG5C,IAAK,IAAIz3B,EAAY,EAAGA,EAAIuhB,EAAQthB,OAAQD,IAAK,CAGhD,IAAIsjC,EACAgG,EAASjG,SAAWrjC,GACvBsjC,EAAOzxB,KAAK03B,UACZD,EAASH,SAAS7F,KACPjhB,EAAW6hB,gBAAgB99B,YAAcyL,KAAK6oB,kBACzD7oB,KAAKi3B,YAAYj3B,KAAK+oB,iBAAkB0O,EAASj2B,IAAIrT,IACrDsjC,EAAOzxB,KAAK03B,UACZD,EAASt0B,IAAIhV,EAAGsjC,IAEhBA,EAAOgG,EAASj2B,IAAIrT,GAErBwoC,IAEAlF,EAAK/hB,QAAQ,GAAKA,EAAQvhB,GAC1BsjC,EAAKvgC,WAAa,EAClBugC,EAAKhM,UAAY/V,EAAQthB,OACzBqjC,EAAKjhB,WAAaA,EAClBihB,EAAKhhB,KAAOghB,EAAK9L,SAAW8L,EAAK7L,SAAW,MAK/C,KAAO6R,EAASjG,QAAUmF,GACzB32B,KAAKi3B,YAAYj3B,KAAK+oB,iBAAkB0O,EAAShqB,WAGlDzN,KAAK6oB,kBAAmB,EAGjBhvB,4BAA4BsG,EAAYC,EAAiBiwB,GAChE,MAAM7f,EAAyBrQ,EAAK4X,SAAS3X,GAASqX,YAAYtX,EAAKksB,qBAAqBjsB,EAASJ,KAAK+b,MACpGD,EAA0B3b,EAAKolB,WAAWnlB,EAASJ,KAAK+b,KACxD/M,EAAehP,KAAKopB,KAAOppB,KAAKmpB,KAAOp7B,EAAOqF,aAEpD,GAAIi9B,GAAYlwB,EAAK2c,gBAAgB1c,KAAaD,EAAK4X,SAAS3X,GAASwX,MAAO,CAE/E,IAAI+f,EAAgBv3B,GAAWD,EAAKe,kBAAoBf,EAAKiB,mBAIzDmP,EAAyB,GACzBqnB,EAA6B,GAC7BC,EAA6B,GAC7BC,EAAoB/pC,EAAO4K,SAC/B,KAAOm/B,KACNvnB,EAAM/hB,KAAK,MACXopC,EAAUppC,KAAK,MACfqpC,EAAUrpC,KAAK,MAGhB,GAAe,MAAXstB,EACH,IAAK,IAAI3tB,EAAY,EAAGA,EAAI2tB,EAAQvL,MAAMniB,OAAQD,IAC7C2tB,EAAQvL,MAAMpiB,GAAGqhB,KAAOR,GAEmB,MAA1C4oB,EAAU9b,EAAQvL,MAAMpiB,GAAGuhB,QAAQ,KAAeoM,EAAQvL,MAAMpiB,GAAGqhB,IAAOooB,EAAU9b,EAAQvL,MAAMpiB,GAAGuhB,QAAQ,IAAaH,SAC7HqoB,EAAU9b,EAAQvL,MAAMpiB,GAAGuhB,QAAQ,IAAMoM,EAAQvL,MAAMpiB,IAGhD2tB,EAAQvL,MAAMpiB,GAAGohB,OAASP,GAAQ8M,EAAQvL,MAAMpiB,GAAGqhB,IAAMR,EACjEuB,EAAMuL,EAAQvL,MAAMpiB,GAAGuhB,QAAQ,IAAMoM,EAAQvL,MAAMpiB,GAE3C2tB,EAAQvL,MAAMpiB,GAAGohB,MAAQP,IAEa,MAA1C6oB,EAAU/b,EAAQvL,MAAMpiB,GAAGuhB,QAAQ,KAAeoM,EAAQvL,MAAMpiB,GAAGohB,MAASsoB,EAAU/b,EAAQvL,MAAMpiB,GAAGuhB,QAAQ,IAAaH,SAC/HsoB,EAAU/b,EAAQvL,MAAMpiB,GAAGuhB,QAAQ,IAAMoM,EAAQvL,MAAMpiB,IAM3D,IAAK,IAAI0lB,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAAO,CACvD,MAAM4jB,EAAwBz3B,KAAK2pB,eAAegO,GAAe9jB,GACjE,GAAkB,MAAdtD,EAAMsD,GACa,MAAlB+jB,EAAU/jB,IAAiB+jB,EAAU/jB,GAAcrE,KAAQe,EAAMsD,GAActE,QAAOqoB,EAAU/jB,GAAO,MACrF,MAAlBgkB,EAAUhkB,IAAiBgkB,EAAUhkB,GAActE,OAAUgB,EAAMsD,GAAcrE,MAAKqoB,EAAUhkB,GAAO,MAC3G7T,KAAK+3B,UAAU33B,EAASq3B,EAAUjnB,EAAaD,EAAMsD,GAAcnE,QAAUa,EAAMsD,GAAgB+jB,EAAU/jB,GAAgBgkB,EAAUhkB,GAAe7E,QAEtJ,KAAOyoB,EAASjG,QAAU,GACzBxxB,KAAKk3B,SAASO,EAAShqB,iBAKtB,IAAKtN,EAAK2c,gBAAgB1c,GAAU,CAExC,IAAIqQ,EAAoB,KACpBkV,EAAwB,KACxBC,EAAwB,KAE5B,GAAIyK,GAAuB,MAAXvU,IAAoB3b,EAAK4X,SAAS3X,GAASwX,MAC1D,IAAK,IAAIzpB,EAAY,EAAGA,EAAI2tB,EAAQvL,MAAMniB,OAAQD,IACjD,GAAI2tB,EAAQvL,MAAMpiB,GAAGqhB,KAAOR,EAC3B2W,EAAW7J,EAAQvL,MAAMpiB,QACnB,GAAI2tB,EAAQvL,MAAMpiB,GAAGohB,OAASP,GAAQ8M,EAAQvL,MAAMpiB,GAAGqhB,IAAMR,EACnEyB,EAAOqL,EAAQvL,MAAMpiB,QACf,GAAI2tB,EAAQvL,MAAMpiB,GAAGohB,MAAQP,EAAM,CACzC4W,EAAW9J,EAAQvL,MAAMpiB,GACzB,MAKH,MAAMspC,EAAwBz3B,KAAKypB,YAAYrpB,GAC/C,GAAY,MAARqQ,EACa,MAAZkV,GAAoBA,EAASnW,KAAOiB,EAAKlB,QAAOoW,EAAW,MAC/C,MAAZC,GAAoBA,EAASrW,OAASkB,EAAKjB,MAAKoW,EAAW,MAC/D5lB,KAAK+3B,UAAU33B,EAASq3B,EAAUjnB,EAAYC,EAAKf,QAASe,EAAMkV,EAAUC,EAAU5W,QAEtF,KAAOyoB,EAASjG,QAAU,GAErBiG,EAASO,WAAWxnB,WAAW6hB,gBAAgB59B,UAAYuL,KAAK0pB,UAAUtpB,GAAW,EACxFJ,KAAKi3B,YAAY72B,EAASq3B,EAAShqB,WAEnCzN,KAAKk3B,SAASO,EAAShqB,YAOpB5T,UAAUuG,EAAiBq3B,EAAuBjnB,EAAwBd,EAAmBe,EAAYkV,EAAuBC,EAAuBsG,GAC9J,IAAIyK,EAAoB,EAEpBsB,EAAmB73B,EAAUJ,KAAKG,KAAMe,kBAAoBlB,KAAKG,KAAMiB,kBACxExS,KAAKsgB,IAAI,EAAGlP,KAAK0pB,UAAUtpB,IAC3B,EACH,GAAIoQ,EAAW4D,WAAWhe,YAAa,CACtC,IAAIq7B,EACoB,GAApBgG,EAASjG,SACZC,EAAOzxB,KAAK03B,UACZD,EAASH,SAAS7F,IAElBA,EAAOgG,EAASj2B,IAAI,GAErBm1B,EAAY,EAEZ,IAAK,IAAIxoC,EAAY,EAAGA,EAAIuhB,EAAQthB,OAAQD,IAC3CsjC,EAAK/hB,QAAQvhB,GAAKuhB,EAAQvhB,GAE3BsjC,EAAKvgC,WAAawe,EAAQthB,OAC1BqjC,EAAKhM,UAAY,EACjBgM,EAAKjhB,WAAaA,EAClBihB,EAAKhhB,KAAOA,EACZghB,EAAKzL,UAAYvV,EAAKlB,MAAQ0oB,EAC9BxG,EAAKxL,QAAUxV,EAAKjB,IACpBiiB,EAAK9L,SAAWA,EAChB8L,EAAK7L,SAAWA,EAChB6L,EAAK5L,mBAAqB,EAC1B4L,EAAK3L,mBAAqB,MACpB,CACN,MAAMjrB,EAAyB2V,EAAW6hB,gBAC1C,IAAK,IAAIlkC,EAAY,EAAGA,EAAIuhB,EAAQthB,OAAQD,IAAK,CAEhD,MAAM+pC,EAA2B/pC,EAAIqiB,EAAW4D,WAAW9d,WAC3D,IAAI6hC,EAAoCxS,GAAYA,EAASjW,QAAQthB,OAASD,EAAKw3B,EAAW,KAC1FyS,EAAwB3nB,EACxB4nB,EAAoCzS,GAAYA,EAASlW,QAAQthB,OAASD,EAAKy3B,EAAW,KAC1FI,EAAoBoS,EAAgB7oB,MAAQ2oB,EAAmBD,EAEnE,GAAIjS,EAAYkG,EAAa,CAC5B,KAAIuL,EAASjG,QAAUrjC,IAAM0M,EAAWtG,YAAcyL,KAAK0pB,UAAUtpB,IAAY,IAA6B,MAAvB+3B,GAMtF,MALAE,EAAsBD,EACtBA,EAAkBD,EAClBA,EAAsB,KACtBnS,EAAYoS,EAAgB7oB,MAAQ2oB,EAAmBD,EAMzD,IAMIxG,EANAxL,EAAkBmS,EAAgB5oB,KACjC3U,EAAWtG,YAAcyL,KAAK0pB,UAAUtpB,IAAY,IAA6B,MAAvBi4B,IAC9DpS,EAAUr3B,KAAKyB,IAAItC,EAAOqF,aAAe4M,KAAKG,KAAMmb,YAAa2K,EAAUiS,IAKxET,EAASjG,SAAWrjC,GACvBsjC,EAAOzxB,KAAK03B,UACZD,EAASH,SAAS7F,IAElBA,EAAOgG,EAASj2B,IAAIrT,GAErBwoC,IAEAlF,EAAK/hB,QAAQ,GAAK0oB,EAAgB1oB,QAAQvhB,GAC1CsjC,EAAKvgC,WAAa,EAClBugC,EAAKhM,UAAY2S,EAAgB1oB,QAAQthB,OACzCqjC,EAAKjhB,WAAaA,EAClBihB,EAAKhhB,KAAO2nB,EACZ3G,EAAKzL,UAAYA,EACjByL,EAAKxL,QAAUA,EACfwL,EAAK9L,SAAWwS,EAChB1G,EAAK7L,SAAWyS,EAChB5G,EAAK5L,mBAAqB13B,EAC1BsjC,EAAK3L,mBAAqB33B,GAK5B,KAAOspC,EAASjG,QAAUmF,GAErBc,EAASO,WAAWxnB,WAAW6hB,gBAAgB59B,UAAYuL,KAAK0pB,UAAUtpB,GAAW,EACxFJ,KAAKi3B,YAAY72B,EAASq3B,EAAShqB,WAEnCzN,KAAKk3B,SAASO,EAAShqB,WAKlB5T,SAASsG,EAAY4pB,EAA2B2G,EAA4BtwB,EAAiB8sB,EAAwBoE,EAAmBG,EAAY6G,EAAmB/F,GAE9K,IAAIgG,EACJ,OAFA7P,GAAM8P,YAAYx4B,KAAMG,EAAMC,EAAS8sB,EAAgBoE,EAAWG,EAAM6G,EAAU/F,GAE1Ed,EAAKjhB,WAAW1V,SACvB,KAAK,EAAGy9B,EAAcv4B,KAAKgqB,eAAiB,MAC5C,KAAK,EAAGuO,EAAcv4B,KAAKiqB,iBAAmB,MAC9C,KAAK,EAAGsO,EAAcv4B,KAAKkqB,iBAAmB,MAC9C,KAAK,EAAGqO,EAAcv4B,KAAKmqB,uBAAyB,MACpD,QAAS,MAAM,IAAIv6B,MAEU84B,GAAMgD,2BAA2B+F,EAAKjhB,WACpEioB,CAAYz4B,KAAMu4B,EAAaxO,EAAmB2G,EAAgC,EAAZY,EAAeG,EAAMA,EAAKjhB,YAGzF3W,uBAAuB+B,EAAoBoT,EAAc0pB,EAAeC,GAC/E,OAAQ/8B,EAAS9G,MAChB,KAAA,EAA0B,OAAO6jC,EACjC,KAAA,EAA0B,OAAO,EACjC,KAAA,EACC,OAAO,GAAO,EAAM3pB,EAAOpT,EAASxE,OACrC,KAAA,EACC,OAAO,EAAM,GAAO,EAAM4X,EAAOpT,EAASxE,OAC3C,KAAA,EACC,MAAO,GAAyD,GAAnDxI,KAAKmC,IAAY,EAAR2nC,EAAc9pC,KAAKkC,GAAK8K,EAASxE,OACxD,KAAA,EACC,MAAO,IAA0D,IAAnDxI,KAAKmC,IAAY,EAAR2nC,EAAc9pC,KAAKkC,GAAK8K,EAASxE,OACzD,KAAA,EACC,OAAOxI,KAAKsgB,IAAI,EAAK,EAAa,GAAPF,GAC5B,KAAA,EACC,MAAM5X,EAAgBwE,EAASxE,MACzBwhC,EAAiB,IAAOhqC,KAAKe,KAAKyH,GACxC,OAAO4X,EAAO4pB,EAAS5pB,EAAO4pB,EAAS,GAAO,GAAO5pB,EAAO4pB,GAAUxhC,GACvE,KAAA,EACC,OAAOxI,KAAKuB,IAAI,GAAIyL,EAASxE,MAAQ4X,GACtC,QAAS,MAAM,IAAIpf,MAAM,yCAInBiK,0BAA0B4rB,GACjC,OAAO,GAAyB,KAAjBA,EAAY,GAAY,GAGhC5rB,mBAAmBg/B,EAAc14B,EAAYC,EAAiB8sB,EAAwBoE,EAAmBG,EAAY6G,EAAmB/F,GAC/I,MAAM/hB,EAAyBihB,EAAKjhB,WAC9B3V,EAAyB2V,EAAW6hB,gBACpCt3B,EAAeyV,EAAW4D,WAC1B0kB,EAAsB/9B,EAAM3E,YAAc,EAAIsyB,GAAMqQ,mBAAmBtH,EAAKhM,WAC5E3U,EAA0B3Q,EAAK0c,kBAAkBzc,GACjD44B,EAAwBloB,EAAiB/iB,EAAOwK,cAAgB,EAChE0gC,EAAyBlrC,EAAOsF,aAAe65B,EAAiB2L,EAAMlQ,iBACtEuQ,EAAuB,EAAMnrC,EAAOqF,aACpC+lC,EAAyB1H,EAAK1L,OAC9BsD,EAA8BwP,EAAMxP,oBACpCuI,EAAqB,EAAM,EAAwB1E,EACnD2E,EAAmB,GAAOxI,EAAsBiI,GAAapE,EAC7D4E,GAAwB+G,EAAM1P,KAAOp7B,EAAOqF,aAAeylC,EAAMzP,MAAQr7B,EAAOsF,aAAewlC,EAAMrV,KACrGuO,EAA4B,EAAiBhkC,EAAOsF,aACpD2+B,GAA2BF,EAAe,GAAK/jC,EAAOsF,aACtD4+B,EAAwBF,GAAqBC,EAAkBD,GAAqBH,EACpFM,EAAsBH,GAAqBC,EAAkBD,GAAqBF,EAClFzF,EAAyByM,EAAM14B,KAAc4X,SAAS3X,GAASqX,YAAYtC,WAAUhnB,GAAKA,GAAKqiB,IAC/F4oB,EAA2Bv+B,EAAWtG,YAAcskC,EAAMnP,UAAUtpB,IAAY,EAEtFqxB,EAAKvK,gBAAkB,EACvBuK,EAAKrK,OAAS,EACdqK,EAAKpK,YAAc,EACnBoK,EAAKjK,aAAe,EACpBiK,EAAKhK,aAAe,EACpBgK,EAAK/J,mBAAqB,EAC1B+J,EAAK1L,QAAS,EAEd,IAAIsT,EAAmB7oB,EAAWoC,IAC9B0mB,EAAiB9oB,EAAWoC,IAC5BimB,EAAM7J,YAAYhb,EAAW+E,QAAQ,EAAO3Y,EAASgsB,KACxDiN,EAAWR,EAAMzH,YAAYpd,EAAW+E,QAAQ,EAAO3Y,EAASgsB,GAAe,GAC/EkN,EAAST,EAAMzH,YAAYpd,EAAW+E,QAAQ,EAAO3Y,EAASgsB,GAAe,IAG9E,IAAImN,EAAwB/oB,EAAWqC,SACnC2mB,EAAsBhpB,EAAWqC,SACjCgmB,EAAM7J,YAAYhb,EAAW8F,aAAa,EAAO1Z,EAASgsB,KAC7DmN,EAAgBV,EAAMzH,YAAYpd,EAAW8F,aAAa,EAAO1Z,EAASgsB,GAAe,GACzFoN,EAAcX,EAAMzH,YAAYpd,EAAW8F,aAAa,EAAO1Z,EAASgsB,GAAe,IAGxF,MAAMqN,GAAuBJ,EAAWtrC,EAAO4H,WAAa5H,EAAO4H,UAC7D+jC,GAAqBJ,EAASvrC,EAAO4H,WAAa5H,EAAO4H,UAEzDgkC,EAAwC,MAAhBJ,EAA0BV,EAAMlQ,iBACxDiR,EAAoC,MAAdJ,EAAwBX,EAAMlQ,iBAC1D8I,EAAKvJ,kBAAoBuR,EAAcE,EACvC,MAAME,GAAoBH,EAAYE,EACtCnI,EAAKrJ,kBAAoByR,EAAWpI,EAAKvJ,kBAAoBoJ,EAC7DG,EAAK3J,mBAAoE,MAA/Cl5B,KAAKmC,KAAK,EAAI0oC,GAAe7qC,KAAKkC,GAAK,KACjE2gC,EAAK1J,mBAAoE,MAA/Cn5B,KAAKmC,KAAK,EAAI0oC,GAAe7qC,KAAKkC,GAAK,KACjE,MAAMgpC,EAAwE,MAA7ClrC,KAAKmC,KAAK,EAAI2oC,GAAa9qC,KAAKkC,GAAK,KAChEipC,EAAwE,MAA7CnrC,KAAKmC,KAAK,EAAI2oC,GAAa9qC,KAAKkC,GAAK,KACtE2gC,EAAKzJ,oBAAsB8R,EAAmBrI,EAAK3J,oBAAsBwJ,EACzEG,EAAKxJ,oBAAsB8R,EAAmBtI,EAAK1J,oBAAsBuJ,EAEzE,IAaI0I,EACAznC,EACA0nC,EACAC,EAhBAC,GAAuB,EACvBC,EAA0B,EAC1BC,EAAwB,EACxBC,EAAsB,EACtBC,EAAgC,EAChCC,EAA8B,EAC9BC,EAA2B3B,EAC3B4B,EAAyB5B,EACzBzQ,GAA4B,EAC5BC,GAA0B,EAC1BqS,GAAyB,EACzBC,GAAuB,EAM3B,GAAmB,GAAfpqB,EAAW1b,KACVgc,GACHve,EAAYxE,EAAOwJ,kBACnB0iC,EAAa,KAGb1nC,EAAY,EACZ0nC,EAAa,IAEdD,EAAuBjsC,EAAOwJ,kBAC9B2iC,EAAe,QACT,GAAmB,GAAf1pB,EAAW1b,KACrBvC,EAAYxE,EAAOwJ,kBACnB0iC,EAAa,IACbD,EAAuBznC,EACvB2nC,EAAe,QACT,GAAmB,GAAf1pB,EAAW1b,KACrBvC,EAAYxE,EAAOoB,WAAWqhB,EAAW8B,WAAW/f,UACpD0nC,EAAa,IACbD,EAAuBznC,EACvB2nC,EAAensC,EAAOoB,WAAWqhB,EAAW8B,WAAWve,OAAS,GAAO,QACjE,GAAmB,GAAfyc,EAAW1b,KAErBvC,EAAY,EACZ0nC,EAAa,IACbD,EAAuB,GACvBE,EAAe,QACT,GAAmB,GAAf1pB,EAAW1b,MAA8C,GAAf0b,EAAW1b,KAE/DvC,EAAY,EACZ0nC,EAAa,OACbD,EAAuB,GACvBE,EAAe,QACT,GAAmB,GAAf1pB,EAAW1b,KAErBvC,EAAY,EACZ0nC,EAAa,KACbD,EAAuB,GACvBE,EAAe,QACT,GAAmB,GAAf1pB,EAAW1b,KAErBvC,EAAY,EACZ0nC,EAAa,OACbD,EAAuB,GACvBE,EAAe,OACT,CAAA,GAAmB,GAAf1pB,EAAW1b,KAMrB,MAAM,IAAIlF,MAAM,2CALhBqqC,EAAa,EACbD,EAAuB,EACvBE,EAAe,EACf3nC,EAAY,EAKb,IAAK,IAAIpE,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IACjDsjC,EAAK5K,YAAY14B,GAAK,EACtBsjC,EAAK3K,aAAa34B,GAAK,EACvBsjC,EAAK1K,aAAa54B,GAAK,EAGxB,GAAImqC,EAAU,CACb,MAAMuC,EAAqBpJ,EAAKvL,gBAAkBuL,EAAKtL,mBACjD2U,EAAkCrJ,EAAKtL,mBAAqByL,EAC5DmJ,EAAgCtJ,EAAKtL,mBAAqB0L,EAC1DmJ,EAAoBvJ,EAAKvL,gBAAkB4U,EAC3CG,EAAkBxJ,EAAKvL,gBAAkB6U,EACzCG,EAA6BzJ,EAAKjhB,WAAW6hB,gBACnD8H,GAAc,EACdC,EAAkBxrC,KAAKsU,MAAM23B,EAAa9sC,EAAOsF,cACjDgnC,EAAgBC,EAAc7I,EAAKpL,aACnCgC,GAAoBC,GAAkBI,GAAMyS,uBAAuB1J,EAAKnL,YACxEiU,EAAwB7R,GAAMyS,uBAAuF,GAA/D,EAAML,EAA0BI,EAAexmC,eACrG8lC,EAAsB9R,GAAMyS,uBAAqF,GAA7D,EAAMJ,EAAwBG,EAAexmC,eACjGimC,GAAiBK,EAAYjtC,EAAOsF,aACpCunC,GAAeK,EAAUltC,EAAOsF,aAE5Bk/B,IACHgI,GAAyB,EAAM3I,EAC/B4I,GAAuB,EAAM3I,QAExB,GAAiB,MAAbJ,EAAKhhB,KAAc,CAC7B8pB,EAAwBC,EAAsB,EAC9CnS,GAAoBC,GAAkB,EACtCmJ,EAAKpL,aAAe,EACpBoL,EAAKnL,WAAa,EAClBmL,EAAKtL,mBAAqB,EAC1BgU,GAAc,EAEd,MAAMiB,EAAyB3J,EAAKrL,qBAAuB8G,EAC3DuE,EAAKrL,sBAAwBkL,EAC7B,MAAM+J,EAAuB5J,EAAKrL,qBAAuB8G,EACzDuE,EAAKvL,gBAAkBmV,EACvB,MAAMC,EAAyBF,EAAiBrtC,EAAOsF,aACjDkoC,EAAuBF,EAAettC,EAAOsF,aACnD+mC,EAAkBxrC,KAAKsU,MAAMo4B,GAC7BX,GAAiBW,EACjBV,GAAeW,MACT,CACN,MAAM9qB,EAAaghB,EAAKhhB,KAClBkV,EAAwB8L,EAAK9L,SAC7BC,EAAwB6L,EAAK7L,SAE7B5W,EAAe6pB,EAAMzP,KAAOyP,EAAM1P,KAAOp7B,EAAOqF,aAChDooC,EAAsBztC,EAAOqF,aAAe+M,EAAKmb,YACjD0K,EAAoByL,EAAKzL,UACzBC,EAAkBwL,EAAKxL,QAI7B,IAAIwV,EACJ,IAHArB,EAAkBprB,EAAOgX,EAGpByV,EAAc,EAAGA,EAAchrB,EAAKd,KAAKvhB,OAAS,KAClDqiB,EAAKd,KAAK8rB,GAAazsB,KAAOyB,EAAKlB,MAAQP,GADUysB,KAG1D,MAAMC,EAAoBjrB,EAAKd,KAAK8rB,EAAc,GAC5CE,EAAkBlrB,EAAKd,KAAK8rB,GAC5BG,EAAwB5V,EAAYj4B,EAAOsF,aAE3C6yB,EADsBD,EAAUl4B,EAAOsF,aACCuoC,EACxCC,GAAoBprB,EAAKlB,MAAQmsB,EAAS1sB,MAAQjhB,EAAOsF,aACzDyoC,GAAkBrrB,EAAKlB,MAAQosB,EAAO3sB,MAAQjhB,EAAOsF,aAE3Do+B,EAAKpL,aAAe5V,EAAKd,KAAKc,EAAKd,KAAKvhB,OAAS,GAAG+M,SACpDs2B,EAAKnL,WAAa7V,EAAKd,KAAKc,EAAKd,KAAKvhB,OAAS,GAAGyF,OAClD49B,EAAKtL,mBAAqB,EAC1BsL,EAAKvL,gBAAkBA,EAEvB,MAAM6V,EAAwB/sB,EAAOjhB,EAAOsF,aAAewlC,EAAMrV,KAC3DwY,EAAsBhtB,EAAOjhB,EAAOsF,aAAewlC,EAAMrV,KAAO,EAChEyY,EAAmCF,EAAgBH,EACnDM,EAAiCF,EAAcJ,EAC/CO,EAAwBvtC,KAAKyB,IAAI,GAAM0rC,EAAgBF,IAAaC,EAASD,IAC7EO,EAAsBxtC,KAAKyB,IAAI,GAAM2rC,EAAcH,IAAaC,EAASD,IAC/E,IAAIQ,EAAgCX,EAAS7nC,QAAU8nC,EAAO9nC,OAAS6nC,EAAS7nC,QAAUsoC,EACtFG,EAA8BZ,EAAS7nC,QAAU8nC,EAAO9nC,OAAS6nC,EAAS7nC,QAAUuoC,EACpFG,EAAoC,EACpCC,EAAkC,EAClCC,EAA+B3D,EAC/B4D,EAA6B5D,EAC7B6D,EAA4BjB,EAASvgC,UAAYwgC,EAAOxgC,SAAWugC,EAASvgC,UAAYghC,EACxFS,EAA0BlB,EAASvgC,UAAYwgC,EAAOxgC,SAAWugC,EAASvgC,UAAYihC,EACtFS,EAA6B9K,EAAoB/L,EACjD8W,EAA2B9K,EAAkBhM,EACjDmU,EAAe4B,EAAgBnK,EAAagK,GAAiB,IAASzC,EAKtE,MAAM4D,EAA8C,GAAlB7W,EAClC,GAAIkT,IAAoBv+B,EAAWlG,QAAwB,GAAd8b,EAAKlB,MAEjD4qB,GAAehB,OACT,GAAIC,GAA+B,MAAZzT,IAC7BwU,GAAehB,EACXt+B,EAAWlG,QAAQ,CACtB,MAAMC,EAAqBhG,KAAKyB,IAAI0sC,EAAmBliC,EAAWjG,YAC5DooC,EAA8BpuC,KAAKsgB,IAAI,EAAK,EAAM+sB,EAA2BrnC,GAC7EqoC,EAA4BruC,KAAKsgB,IAAI,EAAK,EAAMgtB,EAAyBtnC,GACzEsoC,EAA4I,IAAnHvX,EAASjW,QAAQ+hB,EAAK5L,oBAAsBF,EAAShW,KAAKgW,EAAShW,KAAKvhB,OAAS,GAAG+M,SAAYs2B,EAAK/hB,QAAQ,IACtIytB,EAA8F,IAAxExX,EAAShW,KAAKgW,EAAShW,KAAKvhB,OAAS,GAAGyF,OAAS4c,EAAKd,KAAK,GAAG9b,QACpFupC,EAA0D,IAAjCzX,EAASnW,IAAMmW,EAASpW,OAQvD,GAPAotB,GAAqBK,EAAsBE,EAC3CN,GAAmBK,EAAoBC,EACvCb,GAAyBW,EAAsBG,EAC/Cb,GAAuBW,EAAoBE,EAC3CN,GAAsBG,EAAsBI,EAC5CN,GAAoBG,EAAoBG,GAEnCriC,EAAM3E,YAAa,CACvB,MAAMinC,EAAqE,IAA5C1X,EAASjW,QAAQthB,OAASqjC,EAAKhM,WAC9DgX,EAAuB/T,GAAMqQ,mBAAmBtH,EAAKhM,UAAYuX,EAAsBK,GACvFX,EAAqBhU,GAAMqQ,mBAAmBtH,EAAKhM,UAAYwX,EAAoBI,IAItF,GAAIjE,IAAoBv+B,EAAWlG,QAAU8b,EAAKjB,KAAOgsB,QAElD,GAAIpC,GAA+B,MAAZxT,GAC7B,GAAI/qB,EAAWlG,OAAQ,CACtB,MAAMC,EAAqBhG,KAAKyB,IAAI0sC,EAAmBliC,EAAWjG,YAC5DooC,EAA8BpuC,KAAKsgB,IAAI,EAAK,GAAOgX,EAAkB+V,GAA4BrnC,GACjGqoC,EAA4BruC,KAAKsgB,IAAI,EAAK,GAAOgX,EAAkBgW,GAA0BtnC,GAC7FsoC,EAAoI,IAA5GtX,EAASlW,QAAQ+hB,EAAK3L,qBAAuB2L,EAAK/hB,QAAQ,GAAKe,EAAKd,KAAKc,EAAKd,KAAKvhB,OAAS,GAAG+M,WACvHgiC,EAA0F,IAApEvX,EAASjW,KAAK,GAAG9b,OAAS4c,EAAKd,KAAKc,EAAKd,KAAKvhB,OAAS,GAAGyF,QAChFupC,EAAiD,KAAvBnX,EAAUD,GAQ1C,GAPA2W,GAAqBK,EAAsBE,EAC3CN,GAAmBK,EAAoBC,EACvCb,GAAyBW,EAAsBG,EAC/Cb,GAAuBW,EAAoBE,EAC3CN,GAAsBG,EAAsBI,EAC5CN,GAAoBG,EAAoBG,GAEnCriC,EAAM3E,YAAa,CACvB,MAAMinC,EAAqE,IAA5CzX,EAASlW,QAAQthB,OAASqjC,EAAKhM,WAC9DgX,EAAuB/T,GAAMqQ,mBAAmBtH,EAAKhM,UAAYuX,EAAsBK,GACvFX,EAAqBhU,GAAMqQ,mBAAmBtH,EAAKhM,UAAYwX,EAAoBI,UAG/E,KAAMxiC,EAAWpG,UAAYokC,EAAMnP,UAAUtpB,GAAW,GAAI,CAClE,MAAM1L,EAAuBmG,EAAWnG,aACpCA,EAAe,IAClB6nC,GAA6B3tC,KAAKyB,IAAI,GAAM61B,EAAkB+V,GAA4BvnC,GAC1F8nC,GAA2B5tC,KAAKyB,IAAI,GAAM61B,EAAkBgW,GAA0BxnC,IAIxF2lC,EAAgBsC,GAAqBC,EAAkBD,GAAqB/K,EAC5E0I,EAAcqC,GAAqBC,EAAkBD,GAAqB9K,EACvD,GAAfrhB,EAAW1b,MACduzB,GAAoBK,GAAMyS,uBAAuBkB,GAAyBC,EAAsBD,GAAyBzK,GACzHtJ,GAAkBI,GAAMyS,uBAAuBkB,GAAyBC,EAAsBD,GAAyBxK,KAEvHxJ,GAAoBgU,GAAyBC,EAAsBD,GAAyBztC,KAAKsgB,IAAI,EAAK0iB,GAC1GtJ,GAAkB+T,GAAyBC,EAAsBD,GAAyBztC,KAAKyB,IAAI,EAAKwhC,GACxGJ,EAAKpJ,kBAAoBA,GACzBoJ,EAAKnJ,gBAAkBA,IAExBiS,EAAwBgC,GAA6BC,EAA0BD,GAA6B3K,EAC5G4I,EAAsB+B,GAA6BC,EAA0BD,GAA6B1K,EAC1G4I,EAAmBgC,GAAwBC,EAAqBD,GAAwB7K,EACxF8I,EAAiB+B,GAAwBC,EAAqBD,GAAwB5K,EACtF8I,GAAiBkC,GAAsBC,EAAmBD,GAAsBjL,EAChFgJ,GAAeiC,GAAsBC,EAAmBD,GAAsBhL,EAG/E,MAAMyL,GAAqB,EAAMzE,EAAMlQ,iBAGvC,GAFA8I,EAAK1L,QAAS,EAEK,GAAfvV,EAAW1b,MAA8C,GAAf0b,EAAW1b,MAA4C,GAAf0b,EAAW1b,MAAmD,GAAf0b,EAAW1b,MAA6C,GAAf0b,EAAW1b,MAAwD,GAAf0b,EAAW1b,KAAiC,CAE7Q,MAAMyoC,EAAyB7U,GAAM8U,gBAAgBhtB,EAAYyoB,EAAiBzoB,EAAW2C,SACvFsqB,EAAuB/U,GAAM8U,gBAAgBhtB,EAAYyoB,EAAiBzoB,EAAW4C,aAE3F,IASIsqB,EACAC,EAVAC,EAA0BptB,EAAWgC,aACrCqrB,EAAwBrtB,EAAWgC,aAEnCqmB,EAAM7J,YAAYhb,EAAWyF,iBAAiB,EAAOrZ,EAASgsB,KACjEwR,EAAkB/E,EAAMzH,YAAYpd,EAAWyF,iBAAiB,EAAOrZ,EAASgsB,GAAe,GAAS,GACxGyR,EAAgBhF,EAAMzH,YAAYpd,EAAWyF,iBAAiB,EAAOrZ,EAASgsB,GAAe,GAAQ,IAMtG,MAAM0R,EAAkCjF,EAAM7J,YAAYhb,EAAW4F,iBAAiB,EAAOxZ,EAASgsB,GACtG,GAAI5b,EAAWpV,SAAWrN,EAAO8G,SAASzG,QAAW0vC,EAIhD,CACJ,IAAIC,EAA4BvtB,EAAWkC,aACvCsrB,EAA0BxtB,EAAWkC,aAErCorB,IACHC,EAAoBlF,EAAMzH,YAAYpd,EAAW4F,iBAAiB,EAAOxZ,EAASgsB,GAAe,GACjG4R,EAAkBnF,EAAMzH,YAAYpd,EAAW4F,iBAAiB,EAAOxZ,EAASgsB,GAAe,GAG3F2R,GAAqBlF,EAAM14B,KAAMsY,WAAWjX,IAAIwS,EAAW4F,mBAC9DmkB,EAAoBxH,OAAO0H,WAExBD,GAAmBnF,EAAM14B,KAAMsY,WAAWjX,IAAIwS,EAAW4F,mBAC5DokB,EAAkBzH,OAAO0H,YAI3BP,EAAaK,EACbJ,EAAWK,OArBXN,EAAa3vC,EAAO8G,SAAS2b,EAAWpV,SAASrG,WACjD4oC,EAAW5vC,EAAO8G,SAAS2b,EAAWpV,SAASrG,WA6BhDslC,IALmCD,EAAkBsD,EAAc,EAAME,GAGxBL,EAGjDjD,IALiCF,EAAkBuD,EAAY,EAAME,GAGxBJ,EAK9C,IAAKrE,IAAuBv+B,EAAWlG,QAAuB,MAAb88B,EAAKhhB,MAAmC,GAAnBghB,EAAKhhB,KAAKlB,QAAkC,MAAjBkiB,EAAK9L,SAAoB,CACzH,MAAMnxB,EAAwBqG,EAAWrG,cACrCA,EAAgB,IACnB+lC,GAAyB3rC,KAAKyB,IAAI,EAAK4oC,EAAiB0B,GAAiBnmC,GACzEgmC,GAAuB5rC,KAAKyB,IAAI,EAAK4oC,EAAiB2B,GAAepmC,IAIvE,MAAM0pC,GAA+BxV,GAAMyV,6BAA6B3tB,EAAW3c,QAEhE,GAAf2c,EAAW1b,OAId28B,EAAK/L,aAAe+L,EAAK/hB,QAAQ,GAChB,MAAb+hB,EAAKhhB,OAAcghB,EAAK/L,cAAgB+L,EAAKhhB,KAAK2tB,oBACtD3M,EAAK/L,aAAe92B,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAO2K,UAAY,EAAG+4B,EAAK/L,gBAGrE,IAOI2Y,GACAC,GARAC,GAA4B/tB,EAAW+B,aACvCisB,GAA0BhuB,EAAW+B,aACrCsmB,EAAM7J,YAAYhb,EAAWgF,cAAc,EAAO5Y,EAASgsB,KAC9DmS,GAAoBp+B,EAAKytB,eAAeiL,EAAMzH,YAAYpd,EAAWgF,cAAc,EAAO5Y,EAASgsB,GAAe,GAAQpY,EAAWgF,cACrIwlB,GAAkBr+B,EAAKytB,eAAeiL,EAAMzH,YAAYpd,EAAWgF,cAAc,EAAO5Y,EAASgsB,GAAe,GAAOpY,EAAWgF,eAKhH,GAAfxI,EAAW1b,MACdupC,GAAwB,EACxBC,GAAsB,IAGtBD,GAA+E,IAAtDE,IAAqBxwC,EAAOqG,kBAAoB,IACzEkqC,GAA2E,IAApDE,IAAmBzwC,EAAOqG,kBAAoB,KAGtE,MAAM8G,GAA2C,GAAfsV,EAAW1b,KAAkC0b,EAAW+D,mBAAmBkd,EAAK/L,cAAgBlV,EAAW8D,oBACvImqB,GAA8B1wC,EAAOiG,kBAAoBpF,KAAKuB,IAAI,EAAKkuC,IACvEK,GAA4B3wC,EAAOiG,kBAAoBpF,KAAKuB,IAAI,EAAKmuC,IACrEK,GAA0B,EAAM/vC,KAAKoC,IAAIpC,KAAKkC,GAAK2tC,GAAsB5F,EAAMlQ,kBAC/EiW,GAAwB,EAAMhwC,KAAKoC,IAAIpC,KAAKkC,GAAK4tC,GAAoB7F,EAAMlQ,kBAC3EkW,GAAoB,EAAMjwC,KAAKoC,IAAIpC,KAAKkC,GAAK/C,EAAOkG,kBAAoB4kC,EAAMlQ,kBACpF8I,EAAKrK,OAASuX,GAAkBjW,GAAMoW,gBAAgB5jC,GAAgB+9B,EAAiB0B,GAAgBzB,EAAejH,EAAe5J,IACrI,IAAI0W,GAAoBH,GAAgBlW,GAAMoW,gBAAgB5jC,GAAgB+9B,EAAiB2B,GAAc1B,EAAehH,EAAa5J,IACzImJ,EAAKrK,OAASx4B,KAAKyB,IAAItC,EAAOmG,UAAWtF,KAAKsgB,IAAI2vB,GAAWpN,EAAKrK,SAClE2X,GAAYnwC,KAAKyB,IAAItC,EAAOmG,UAAWtF,KAAKsgB,IAAI2vB,GAAWE,KAC3DtN,EAAKpK,YAAcz4B,KAAKuB,IAAI4uC,GAAYtN,EAAKrK,OAAQ,EAAMkK,GAE3D,IAAI0N,GAA4BpwC,KAAKuB,IAAI,GAA6B,IAAxBkuC,IAC1CY,GAA0BrwC,KAAKuB,IAAI,GAA2B,IAAtBmuC,IAE5C7M,EAAKlJ,qBAAuB/X,EAAW0uB,qBACvCzN,EAAKjJ,qBAAuB,EAE5B,IAAI2W,GAAkC3uB,EAAWvV,gBAC7CmkC,GAAgC5uB,EAAWvV,gBAI/C,GAFAw2B,EAAKhJ,aAA+B,GAAfjY,EAAW1b,MAAsE,GAA3BqqC,GAEvEtG,EAAM7J,YAAYhb,EAAWiF,eAAe,EAAO7Y,EAASgsB,GAAgB,CAG/EqF,EAAKhJ,cAAe,EAEpB0W,GAA0Bh/B,EAAKytB,eAAeiL,EAAMzH,YAAYpd,EAAWiF,eAAe,EAAO7Y,EAASgsB,GAAe,GAAQpY,EAAWiF,eAC5ImmB,GAAwBj/B,EAAKytB,eAAeiL,EAAMzH,YAAYpd,EAAWiF,eAAe,EAAO7Y,EAASgsB,GAAe,GAAOpY,EAAWiF,eAGzIwY,EAAKlJ,qBAAuBx6B,EAAOoG,mBAAqBvF,KAAKuB,IAAIvB,KAAKsgB,IAAI,EAAGiwB,GAA0B,IAAMpxC,EAAOsG,qBAAuB,GAAI,IAC/I,MAAMgrC,EAA6BtxC,EAAOoG,mBAAqBvF,KAAKuB,IAAIvB,KAAKsgB,IAAI,EAAGkwB,GAAwB,IAAMrxC,EAAOsG,qBAAuB,GAAI,IAGpJo9B,EAAKjJ,sBAAwB6W,EAAqB5N,EAAKlJ,sBAAwB+I,OAK/EG,EAAKlJ,qBAAuBx6B,EAAOoG,mBAAqBvF,KAAKuB,IAAIvB,KAAKsgB,IAAI,EAAGiwB,GAA0B,IAAMpxC,EAAOsG,qBAAuB,GAAI,IAmBhJ,GAhByB,GAArBo9B,EAAKhJ,eACRuW,GAAoBpwC,KAAKuB,IAAI6uC,GAAmB,KAAOpwC,KAAKuB,IAAI,GAAK,MAASgvC,GAA0B,IACxGF,GAAkBrwC,KAAKuB,IAAI8uC,GAAiB,KAAOrwC,KAAKuB,IAAI,GAAK,MAASivC,GAAwB,KAE5E,GAAnBlkC,GAAepG,MAClBkqC,IAAsB,KAAO,KAAO9jC,GAAe9D,MACnD6nC,IAAoB,KAAO,KAAO/jC,GAAe9D,OACpB,GAAnB8D,GAAepG,OACzBkqC,IAAsB,EAAI,IAAM9jC,GAAe9D,MAC/C6nC,IAAoB,EAAI,IAAM/jC,GAAe9D,OAG1C+iC,GACH1I,EAAK7gB,QAGa,GAAfJ,EAAW1b,KAA2B,CAGzC,IAAIwqC,EAA+B,EAC/BC,EAA6B,EAC7BC,EAAkC,EAClCC,EAAgC,EAEhCC,EAA2B,EAC/B,GAAIjO,EAAKvgC,WAAa,IAAM6J,EAAM7E,WAAY,CAC7C,MAAM9E,EAAmBxC,KAAKsU,MAAOsN,EAAkB,QAAIziB,EAAOuF,kBAClEosC,EAAmBjO,EAAK/hB,QAAQze,EAAsBwgC,EAAKvgC,WAAYsf,EAAWuC,eAAgB3hB,IAAaqgC,EAAK/hB,QAAQ,GAG7H,IAAIiwB,EAAsBnvB,EAAW0C,OAAS,GAC1C0sB,EAAoBpvB,EAAW0C,OAAS,GACxC2lB,EAAM7J,YAAYhb,EAAWwF,WAAW,EAAOpZ,EAASgsB,KAC3DuT,EAAc9G,EAAMzH,YAAYpd,EAAWwF,WAAW,EAAOpZ,EAASgsB,GAAe,GAAS,GAC9FwT,EAAY/G,EAAMzH,YAAYpd,EAAWwF,WAAW,EAAOpZ,EAASgsB,GAAe,GAAQ,IAGxFyM,EAAM7J,YAAYhb,EAAW0F,eAAe,KAC/CimB,GAAe9G,EAAMzH,YAAYpd,EAAW0F,eAAe,EAAM,KAAM,MAAM,GAAS,GACtFkmB,GAAa/G,EAAMzH,YAAYpd,EAAW0F,eAAe,EAAM,KAAM,MAAM,GAAQ,IAGpF,MAAMhjB,EAAuB3I,EAAO0I,WAAW+Z,EAAWlV,WAAW5E,aACrE,IAAK,IAAIvI,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IAAK,CAEtD,MAAM0xC,EAAiC9xC,EAAO0I,WAAW+Z,EAAWlV,WAAW3E,kBAAkBxI,GAAK,EAChGmhB,EAAgBmiB,EAAK/hB,QAAS3U,EAAM7E,WAAmB/H,EAAIsjC,EAAKvgC,WAAc/C,EAAM0xC,EAAyBpO,EAAKvgC,WAAc2uC,EAAyB,EAAxG,GACjDC,EAAW/xC,EAAOgJ,oBAAoByZ,EAAW9U,UAAUvN,GAAGwN,WAAW3E,KACzEmE,EAAWpN,EAAO8I,wBAAwBgpC,GAA0BH,EACpE/hB,EAAqBprB,GAAa+c,EAAQ+qB,EAAgBsF,GAAe3G,EAAgB79B,EAEzF4kC,EAAoBD,EAAY3tB,EAAWgF,mBAAmBwG,GAAe5vB,EAAOgJ,oBAAoByZ,EAAW9U,UAAUvN,GAAGwN,WAAW1E,SAEjJw6B,EAAK5K,YAAY14B,GAAK4xC,EAAYzC,GAAavvC,EAAOiL,eAEtD,IAAIgnC,EAAyBxvB,EAAW9U,UAAUvN,GAAGwC,UACjDsvC,EAAuBzvB,EAAW9U,UAAUvN,GAAGwC,UAC/CkoC,EAAM7J,YAAYhb,EAAWkF,aAAe/qB,GAAG,EAAOiS,EAASgsB,KAClE4T,GAAkBnH,EAAMzH,YAAYpd,EAAWkF,aAAe/qB,GAAG,EAAOiS,EAASgsB,GAAe,GAAS,GACzG6T,GAAgBpH,EAAMzH,YAAYpd,EAAWkF,aAAe/qB,GAAG,EAAOiS,EAASgsB,GAAe,GAAQ,IAGvG,MAAM8T,EAA8BxX,GAAMyX,uBAAuBH,GAC3DI,EAA4B1X,GAAMyX,uBAAuBF,GAG/D,IAAIjZ,EAF+BkZ,EAAsBnyC,EAAOgJ,oBAAoByZ,EAAW9U,UAAUvN,GAAGwN,WAAWzE,cAGnH03B,EAF6BwR,EAAoBryC,EAAOgJ,oBAAoByZ,EAAW9U,UAAUvN,GAAGwN,WAAWzE,cAKnH,GAAI2hC,EAAM7J,YAAYhb,EAAW8E,cAAc,EAAO1Y,EAASgsB,GAAgB,CAE9E,MAAMiU,EAAmBxH,EAAMzH,YAAYpd,EAAW8E,cAAc,EAAO1Y,EAASgsB,GAAe,GAC7FkU,EAAiBzH,EAAMzH,YAAYpd,EAAW8E,cAAc,EAAO1Y,EAASgsB,GAAe,GACjGpF,GAAiBqZ,GAAY,GAAOA,EAAWtyC,EAAO0H,YAAc,IAAM1H,EAAO0H,YAAc,GAAMuK,KAAKm+B,6BAA6BkC,GACvIzR,GAAe0R,GAAU,GAAOA,EAASvyC,EAAO0H,YAAc,IAAM1H,EAAO0H,YAAc,GAAMuK,KAAKm+B,6BAA6BmC,GASlI,GALIzH,EAAM7J,YAAYhb,EAAW0E,eAAe,KAC/CsO,GAAgB6R,EAAMzH,YAAYpd,EAAW0E,eAAe,OAAMvL,OAAWA,GAAW,GAAU,IAClGyhB,GAAciK,EAAMzH,YAAYpd,EAAW0E,eAAe,OAAMvL,OAAWA,GAAW,GAAS,KAG5Fhf,EAAIuI,EAAc,CAErB,MAAM6pC,EAAmBhuC,GAAa+c,EAAQgrB,EAAcsF,GAAa5G,EAAgB79B,EACnFqlC,EAA2B5xC,KAAKuB,IAAI,IAAOwtB,EAAaqc,GAAwBE,GAChFuG,EAAyB7xC,KAAKuB,IAAI,IAAOowC,EAAWvG,GAAwBE,GAClFlT,GAAewZ,EACf5R,GAAa6R,EAEbjB,GAA2BU,EAC3BT,GAAyBW,OAGzBpZ,GAAuC,IAAxBj5B,EAAOiL,eACtB41B,GAAqC,IAAxB7gC,EAAOiL,eAEpBsmC,GAAwB,EAAM1wC,KAAKyB,IAAI,EAAK2vC,EAAiB,IAC7DT,GAAsB,EAAM3wC,KAAKyB,IAAI,EAAK4vC,EAAe,IAE1D,MAAMS,EAA6B3yC,EAAOoJ,UAAUqZ,EAAW9U,UAAUvN,GAAGyN,UAE5EorB,GAAe0B,GAAMoW,gBAAgB4B,EAAkBzH,EAAiB0B,GAAgBzB,EAAejH,EAAe5J,IACtHuG,GAAalG,GAAMoW,gBAAgB4B,EAAkBzH,EAAiB2B,GAAc1B,EAAehH,EAAa5J,IAEhHmJ,EAAK3K,aAAa34B,GAAK64B,EACvByK,EAAK1K,aAAa54B,IAAMygC,EAAY5H,GAAesK,EAGpD,IAAIqP,EAAoCnwB,EAAWhV,kBAC/ColC,EAAkCpwB,EAAWhV,kBAC7Cq9B,EAAM7J,YAAYhb,EAAWsF,eAAe,EAAOlZ,EAASgsB,KAC/DuU,GAA6B9H,EAAMzH,YAAYpd,EAAWsF,eAAe,EAAOlZ,EAASgsB,GAAe,GAAS,GACjHwU,GAA2B/H,EAAMzH,YAAYpd,EAAWsF,eAAe,EAAOlZ,EAASgsB,GAAe,GAAQ,IAG/G,MAAMyU,EAAyD,GAAxB9yC,EAAOiL,eAAuB2nC,EAA4B,GAC3FG,EAAuD,GAAxB/yC,EAAOiL,eAAuB4nC,EAA0B,GACvFnlC,EAA6B1N,EAAOoJ,UAAUqZ,EAAW/U,kBAC/D,IAAIslC,EAAwBF,EAAyBnY,GAAMoW,gBAAgBrjC,EAAkBw9B,EAAiB0B,GAAgBzB,EAAejH,EAAe5J,IACxJ2Y,EAAsBF,EAAuBpY,GAAMoW,gBAAgBrjC,EAAkBw9B,EAAiB2B,GAAc1B,EAAehH,EAAa5J,IACpJmJ,EAAK7J,aAAemZ,EACpBtP,EAAK5J,eAAiBmZ,EAAcvP,EAAK7J,cAAgB0J,EAEzD,MAAM2P,EAAqBhH,EAAaiE,GACxCzM,EAAKzK,YAAcgY,GAAoBiC,EAAa1G,EAAwBE,EAC5E,MAAM7L,EAAoBqQ,GAAkBgC,EAAazG,EAAsBE,EAC/EjJ,EAAKxK,aAAe2H,EAAY6C,EAAKzK,aAAesK,EAEpDgO,IAAyB1wC,KAAKuB,IAAI,EAAM,EAAM,IAAMwwC,EAA4B,IAAS,GAAO,EAChGpB,IAAuB3wC,KAAKuB,IAAI,EAAM,EAAM,IAAMywC,EAA0B,IAAS,GAAO,EAC5FtB,GAAwB,EAAM1wC,KAAKyB,IAAI,EAAKzB,KAAKsgB,IAAI,EAAKswB,EAA0B,GAAK,GACzFD,GAAsB,EAAM3wC,KAAKyB,IAAI,EAAKzB,KAAKsgB,IAAI,EAAKuwB,EAAwB,GAAK,GACrFhO,EAAKzK,aAAe,EAA6B,EAAvBsY,EAC1B7N,EAAKxK,aAAe,EAAoD,KAA7CqY,EAAuBC,QAC5C,GAAmB,GAAf/uB,EAAW1b,KAA4B,CAEjD28B,EAAKzK,YAAcuT,EACnB,IAAI3L,EAAoB4L,EAExB/I,EAAKzK,aAAeqB,GACpBuG,GAAatG,GAEbmJ,EAAKxK,aAAe2H,EAAY6C,EAAKzK,aAAesK,MAE9C,CACN,IAAIqO,EAAsBnvB,EAAW0C,OAAS,GAC1C0sB,EAAoBpvB,EAAW0C,OAAS,GACxC2lB,EAAM7J,YAAYhb,EAAWwF,WAAW,EAAOpZ,EAASgsB,KAC3DuT,EAAc9G,EAAMzH,YAAYpd,EAAWwF,WAAW,EAAOpZ,EAASgsB,GAAe,GAAS,GAC9FwT,EAAY/G,EAAMzH,YAAYpd,EAAWwF,WAAW,EAAOpZ,EAASgsB,GAAe,GAAQ,IAGxFyM,EAAM7J,YAAYhb,EAAW0F,eAAe,KAC/CimB,GAAe9G,EAAMzH,YAAYpd,EAAW0F,eAAe,EAAM,KAAM,MAAM,GAAS,GACtFkmB,GAAa/G,EAAMzH,YAAYpd,EAAW0F,eAAe,EAAM,KAAM,MAAM,GAAQ,IAGpF,IAAIpK,EAAgBmiB,EAAK/hB,QAAQ,GAEjC,GAAI+hB,EAAKvgC,WAAa,EAAG,CACxB,MAAME,EAAmBxC,KAAKsU,MAAMsN,EAAW6C,QAAUtlB,EAAOuF,kBAChE,GAAIyH,EAAM7E,WAAY,CACrB,MAAMgrC,EAAyBzP,EAAK/hB,QAAQ,EAAIze,EAAsBwgC,EAAKvgC,WAAa,EAAGsf,EAAWuC,eAAgB3hB,IAAaqgC,EAAK/hB,QAAQ,GAEhJ+hB,EAAKhK,aAAe74B,KAAKuB,IAAI,EAAK+wC,EAAiBnzC,EAAO0K,kBAC1Dg5B,EAAK/J,mBAAqB94B,KAAKuB,IAAI,GAAM+wC,EAAiBhH,QAE1D5qB,EAAQmiB,EAAK/hB,QAAQze,EAAsBwgC,EAAKvgC,WAAYsf,EAAWuC,eAAgB3hB,IAIzF,MAAMusB,EAAqBprB,GAAa+c,EAAQ+qB,EAAgBsF,GAAe3G,EACzEuH,EAAmBhuC,GAAa+c,EAAQgrB,EAAcsF,GAAa5G,EAEnE+G,EAAoB5tB,EAAWgF,mBAAmBwG,GAClD6iB,EAA2B5xC,KAAKuB,IAAI,IAAOwtB,EAAaqc,GAAwBE,GAChFuG,EAAyB7xC,KAAKuB,IAAI,IAAOowC,EAAWvG,GAAwBE,GAClF,IAAIiH,EAAkClH,EAAa+E,GAC/CoC,EAAgCnH,EAAagF,GAajD,GAZmB,GAAfzuB,EAAW1b,OACdqsC,GAA2BpzC,EAAOoB,WAAWqhB,EAAW8B,WAAWze,OACnEutC,GAAyBrzC,EAAOoB,WAAWqhB,EAAW8B,WAAWze,QAE/C,GAAf2c,EAAW1b,MAA8C,GAAf0b,EAAW1b,OACxDqsC,GAA2BpzC,EAAO6F,UAAU4c,EAAW6B,UAAUxe,OACjEutC,GAAyBrzC,EAAO6F,UAAU4c,EAAW6B,UAAUxe,QAE7C,GAAf2c,EAAW1b,MAA8C,GAAf0b,EAAW1b,MAAmD,GAAf0b,EAAW1b,OACvGqsC,GAA2BpzC,EAAOqH,UAAUob,EAAWrV,UAAUtH,OACjEutC,GAAyBrzC,EAAOqH,UAAUob,EAAWrV,UAAUtH,QAE7C,GAAf2c,EAAW1b,KAA4B,CAG1C,IAAIusC,EAA6B7wB,EAAWxU,YAAuC,EAAzBjO,EAAOiK,iBAC7DspC,EAA2B9wB,EAAWxU,YAAuC,EAAzBjO,EAAOiK,iBAC3D6gC,EAAM7J,YAAYhb,EAAWuF,eAAe,EAAOnZ,EAASgsB,KAC/DiV,EAAsBxI,EAAMzH,YAAYpd,EAAWuF,eAAe,EAAOnZ,EAASgsB,GAAe,IAAoC,EAAzBr+B,EAAOiK,iBACnHspC,EAAoBzI,EAAMzH,YAAYpd,EAAWuF,eAAe,EAAOnZ,EAASgsB,GAAe,IAAmC,EAAzBr+B,EAAOiK,kBAGjH,MAAMiE,EAA0BlO,EAAOoJ,UAAUqZ,EAAWvU,eACtDslC,EAA0BF,EAAqB3Y,GAAMoW,gBAAgB7iC,EAAeg9B,EAAiB0B,GAAgBzB,EAAejH,EAAe5J,IACnJmZ,EAAwBF,EAAmB5Y,GAAMoW,gBAAgB7iC,EAAeg9B,EAAiB2B,GAAc1B,EAAehH,EAAa5J,IAEjJmJ,EAAKz1B,WAAaulC,EAClB9P,EAAKtK,iBAAmBqa,EAAgBD,GAAmBjQ,EAG5DG,EAAK5K,YAAY,GAAKkZ,EAAYzC,GAElC7L,EAAKzK,YAAcuT,EAAwBE,EAAmB+F,EAAmBW,EAA0BjD,GAC3G,IAAItP,EAAoB4L,EAAsBE,EAAiB+F,EAAiBW,EAAwBlD,GAQxG,GANuB,GAAnBhjC,GAAepG,MAA+C,GAAf0b,EAAW1b,MAA6E,GAA/C/G,EAAOoJ,UAAUqZ,EAAWvU,eAAenH,OACtI28B,EAAKzK,aAAeqB,GACpBuG,GAAatG,IAIVuQ,EAAM7J,YAAYhb,EAAW8E,cAAc,EAAO1Y,EAASgsB,GAAgB,CAE9E,MAAMiU,EAAmBxH,EAAMzH,YAAYpd,EAAW8E,cAAc,EAAO1Y,EAASgsB,GAAe,GAC7FkU,EAAiBzH,EAAMzH,YAAYpd,EAAW8E,cAAc,EAAO1Y,EAASgsB,GAAe,GACjGqF,EAAKzK,aAAiBqZ,GAAY,GAAOA,EAAWtyC,EAAO0H,YAAc,IAAM1H,EAAO0H,YAAc,GAAMuK,KAAKm+B,6BAA6BkC,GAC5IzR,GAAe0R,GAAU,GAAOA,EAASvyC,EAAO0H,YAAc,IAAM1H,EAAO0H,YAAc,GAAMuK,KAAKm+B,6BAA6BmC,GAG9HzH,EAAM7J,YAAYhb,EAAW0E,eAAe,KAC/C+Y,EAAKzK,aAAgB6R,EAAMzH,YAAYpd,EAAW0E,eAAe,OAAMvL,OAAWA,GAAW,GAAU,IACvGyhB,GAAciK,EAAMzH,YAAYpd,EAAW0E,eAAe,OAAMvL,OAAWA,GAAW,GAAS,KAGhGskB,EAAKxK,aAAe2H,EAAY6C,EAAKzK,aAAesK,EAIrDG,EAAKvK,gBAAkBt4B,KAAKuB,IAAI,GAAOmqC,EAAcD,GAAiBrB,EAAgBjrC,EAAO0K,iBAAoB64B,GAG3Gz3B,uBAAuB2W,EAAwBixB,GACrD,IAAIzgB,EAAiB,EACrB,IAAK,MAAM0gB,KAAwB3zC,EAAOiH,aAAawb,EAAWmC,aAAa1d,eAC9E+rB,GAAUpyB,KAAKoC,IAAc,EAAVpC,KAAKkC,GAAS2wC,EAAiBC,GAEnD,OAAO1gB,EAKAnnB,kCAAkC2W,GACzC,GAAmB,GAAfA,EAAW1b,KAA2B,CACzC,MAAM6sC,EAAsBnxB,EAAWlV,UAAY,IAAMkV,EAAWjV,aACpE,GAA+C4R,MAA3Cub,GAAMkZ,qBAAqBD,GAA2B,CACzD,MAAME,EAAwB,GAE9B,IAAK,MAAMC,KAAQpZ,GAAMqZ,iBACxB,IAA2C,GAAvCD,EAAKntB,QAAQ,sBAA6B,CAC7C,MAAMqtB,EAAoB,GAC1B,IAAK,IAAIv1B,EAAY,EAAGA,EAAI1e,EAAO0I,WAAW+Z,EAAWlV,WAAW5E,aAAc+V,IACjFu1B,EAAQxzC,KAAK,WAAaie,EAAI,UAE/Bo1B,EAAYrzC,KAAKszC,EAAKnoC,QAAQ,sBAAuBqoC,EAAQlkC,KAAK,cAC5D,IAA4D,GAAxDgkC,EAAKntB,QAAQ,uCACvB,IAAK,IAAIlI,EAAY1e,EAAOyI,cAAgB,EAAGiW,GAAK,EAAGA,IACtD,IAAK,MAAMw1B,KAAgBvZ,GAAMwZ,uBAChC,IAAuD,GAAnDD,EAAattB,QAAQ,0BAAiC,CACzD,IAAIwtB,EAAa,GACjB,IAAK,MAAMC,KAAmBr0C,EAAO0I,WAAW+Z,EAAWlV,WAAW1E,YAAY6V,GACjF01B,GAAc,eAAiBC,EAAkB,GAAK,SAGvD,MAAMC,EAAyCt0C,EAAOsJ,UAAUmZ,EAAWjV,cAAcjE,QAAQmV,GACjG,GAAI41B,EAAgBj0C,OAAS,EAAG,CAC/B+zC,GAAc,sBACd,MAAM9qC,EAAsB,GAC5B,IAAK,MAAM+qC,KAAmBC,EAC7BhrC,EAAU7I,KAAK,YAAc4zC,EAAkB,GAAK,UAErDD,GAAc9qC,EAAUyG,KAAK,OAAS,IAEvC+jC,EAAYrzC,KAAKyzC,EAAatoC,QAAQ,MAAO8S,EAAI,IAAI9S,QAAQ,yBAA0BwoC,SAEvFN,EAAYrzC,KAAKyzC,EAAatoC,QAAQ,MAAO8S,EAAI,UAI9C,IAA0B,GAAtBq1B,EAAKntB,QAAQ,KACvB,IAAK,IAAIlI,EAAI,EAAGA,EAAI1e,EAAOyI,cAAeiW,IACzCo1B,EAAYrzC,KAAKszC,EAAKnoC,QAAQ,MAAO8S,EAAI,UAG1Co1B,EAAYrzC,KAAKszC,GAMnBpZ,GAAMkZ,qBAAqBD,GAAe,IAAIW,SAAS,QAAS,OAAQ,oBAAqB,qBAAsB,YAAa,OAAQ,aAAcT,EAAY/jC,KAAK,OAExK,OAAO4qB,GAAMkZ,qBAAqBD,GAC5B,GAAmB,GAAfnxB,EAAW1b,KACrB,OAAO4zB,GAAM6Z,UACP,GAAmB,GAAf/xB,EAAW1b,KACrB,OAAO4zB,GAAM6Z,UACP,GAAmB,GAAf/xB,EAAW1b,KACrB,OAAO4zB,GAAM8Z,eACP,GAAmB,GAAfhyB,EAAW1b,KACrB,OAAO4zB,GAAM+Z,gBACP,GAAmB,GAAfjyB,EAAW1b,KACrB,OAAO4zB,GAAMga,WACP,GAAmB,GAAflyB,EAAW1b,KACrB,OAAO4zB,GAAMia,cACP,GAAmB,GAAfnyB,EAAW1b,KACrB,OAAO4zB,GAAMka,aACP,GAAmB,GAAfpyB,EAAW1b,KACrB,OAAO4zB,GAAMma,SAEb,MAAM,IAAIjzC,MAAM,iCAAmC4gB,EAAW1b,MAKxD+E,iBAAiBg/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAYjhB,GAChJ,IAAIviB,EACA80C,EAE0C,GAAfvyB,EAAW1b,MAOzC7G,EAAOuiB,EAAW8C,uBAElByvB,EAAc,KANd90C,EAAOF,EAAO6F,UAAU4c,EAAW6B,UAAUjjB,QAC7C2zC,EAAc,GAQf,MAAM5xB,GAAsBljB,EAAKG,OAAS,EAIpC40C,GAAqBp0C,KAAKuB,IAAI,GAAMpC,EAAOqH,UAAUob,EAAWrV,UAAU7F,OAASvH,EAAOqH,UAAUob,EAAWrV,UAAU9F,QAAUtH,EAAO0K,kBAC1IwqC,EAAoBr0C,KAAKuB,IAAI,GAAMpC,EAAOqH,UAAUob,EAAWrV,UAAU7F,OAASvH,EAAOqH,UAAUob,EAAWrV,UAAU9F,QAAUtH,EAAO0K,kBAAoBg5B,EAAKhK,aAClKyb,EAAuBzR,EAAK/J,mBAAqB35B,EAAOqH,UAAUob,EAAWrV,UAAU5F,KAClE,GAAvBib,EAAWrV,UAAkBqV,EAAW4D,WAAWje,iBAAgBs7B,EAAK7K,OAAO,GAAK6K,EAAK7K,OAAO,IACpG,MAAMuc,EAAqBF,EAAYD,EACvC,IAAII,EAAsB3R,EAAK5K,YAAY,GAAKmc,EAAY7xB,EACxDkyB,EAAsBD,EAAcD,EACxC,MAAMjc,GAA2BuK,EAAKvK,gBACtC,IAAIrzB,GAAkB49B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAIqc,EAAkB7R,EAAK7K,OAAO,GAAK,EAAKzV,EACxCoyB,EAAkB9R,EAAK7K,OAAO,GAAK,EAAKzV,EAE5C,MAAMsX,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIzoC,EAA0Bw2B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAElC,MAAMqc,EAA6B,EAATN,EACpBO,EAA6B,EAATN,EACpBO,EAAiBF,EAAYzyB,EAC7B4yB,EAAiBF,EAAY1yB,EAC7B6yB,EAAsBV,EAASM,EAC/BK,EAAsBV,EAASM,EACrC,IAAIK,EAA4Bj2C,EAAK61C,GACjCK,EAA4Bl2C,EAAK81C,GACrCG,IAAsBj2C,EAAK61C,EAAS,GAAKI,GAAqBF,EAC9DG,IAAsBl2C,EAAK81C,EAAS,GAAKI,GAAqBF,EAE9D,MAAMl5B,EAAoBgf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAE1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAKpC,KAAO2B,EAAoBhf,GAAW,CAErCu4B,GAAUF,EACVG,GAAUF,EAEV,MAAMO,EAA6B,EAATN,EACpBO,EAA6B,EAATN,EACpBO,EAAiBF,EAAYzyB,EAC7B4yB,EAAiBF,EAAY1yB,EACnC,IAAIozB,EAA4Bt2C,EAAK61C,GACjCU,EAA4Bv2C,EAAK81C,GACrC,MAAMC,EAAsBV,EAASM,EAC/BK,EAAsBV,EAASM,EACrCU,IAAsBt2C,EAAK61C,EAAS,GAAKS,GAAqBP,EAC9DQ,IAAsBv2C,EAAK81C,EAAS,GAAKS,GAAqBP,EAC9D,IAAIQ,GAAiBF,EAAoBL,GAAqBd,EAC1DsB,GAAiBF,EAAoBL,GAAqBd,EAC9Da,EAAoBK,EACpBJ,EAAoBK,EAKpBld,GAAiBkc,GAHaiB,EAAQC,EAAQxB,EAGH5b,GADlBrsB,EAAkBA,GAAmB,EAAMuoC,KACGlc,EAAgBC,IACvFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Cic,GAAWE,EACXD,GAAWE,EACXP,GAAelc,EACfmc,GAAenc,EACfjsB,GAAmButB,EAEnB,MAAMmc,EAAiBpd,EAAgB1zB,EAASkvC,EAChDlvC,GAAUozB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAMtB0H,EAAK7K,OAAO,GAAK0c,EAASnyB,EAC1BsgB,EAAK7K,OAAO,GAAK2c,EAASpyB,EAE1B,MAAMkmB,EAAO,OACT,MAAW/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACrE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAKd1tB,sBAAsBg/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAYjhB,GACrJ,MAAMviB,EAAqBuiB,EAAW+C,cAAc8D,gBAC9ClG,GAAsBljB,EAAKG,OAAS,EAIpC40C,GAAqBp0C,KAAKuB,IAAI,GAAMpC,EAAOqH,UAAUob,EAAWrV,UAAU7F,OAASvH,EAAOqH,UAAUob,EAAWrV,UAAU9F,QAAUtH,EAAO0K,kBAC1IwqC,EAAoBr0C,KAAKuB,IAAI,GAAMpC,EAAOqH,UAAUob,EAAWrV,UAAU7F,OAASvH,EAAOqH,UAAUob,EAAWrV,UAAU9F,QAAUtH,EAAO0K,kBAAoBg5B,EAAKhK,aAClKyb,EAAuBzR,EAAK/J,mBAAqB35B,EAAOqH,UAAUob,EAAWrV,UAAU5F,KAClE,GAAvBib,EAAWrV,UAAkBqV,EAAW4D,WAAWje,iBAAgBs7B,EAAK7K,OAAO,GAAK6K,EAAK7K,OAAO,IACpG,MAAMuc,EAAqBF,EAAYD,EACvC,IAAII,EAAsB3R,EAAK5K,YAAY,GAAKmc,EAAY7xB,EACxDkyB,EAAsBD,EAAcD,EACxC,MAAMjc,GAA2BuK,EAAKvK,gBACtC,IAAIrzB,GAAkB49B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAIqc,EAAkB7R,EAAK7K,OAAO,GAAK,EAAKzV,EACxCoyB,EAAkB9R,EAAK7K,OAAO,GAAK,EAAKzV,EAE5C,MAAMsX,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIzoC,EAA0Bw2B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAElC,MAAMqc,EAA6B,EAATN,EACpBO,EAA6B,EAATN,EACpBO,EAAiBF,EAAYzyB,EAC7B4yB,EAAiBF,EAAY1yB,EAC7B6yB,EAAsBV,EAASM,EAC/BK,EAAsBV,EAASM,EACrC,IAAIK,EAA4Bj2C,EAAK61C,GACjCK,EAA4Bl2C,EAAK81C,GACrCG,IAAsBj2C,EAAK61C,EAAS,GAAKI,GAAqBF,EAC9DG,IAAsBl2C,EAAK81C,EAAS,GAAKI,GAAqBF,EAE9D,MAAMl5B,EAAoBgf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAE1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAEpC,KAAO2B,EAAoBhf,GAAW,CAErCu4B,GAAUF,EACVG,GAAUF,EAEV,MAAMO,EAA6B,EAATN,EACpBO,EAA6B,EAATN,EACpBO,EAAiBF,EAAYzyB,EAC7B4yB,EAAiBF,EAAY1yB,EACnC,IAAIozB,EAA4Bt2C,EAAK61C,GACjCU,EAA4Bv2C,EAAK81C,GACrC,MAAMC,EAAsBV,EAASM,EAC/BK,EAAsBV,EAASM,EACrCU,IAAsBt2C,EAAK61C,EAAS,GAAKS,GAAqBP,EAC9DQ,IAAsBv2C,EAAK81C,EAAS,GAAKS,GAAqBP,EAC9D,IAAIQ,GAAiBF,EAAoBL,GAAqBd,EAC1DsB,GAAiBF,EAAoBL,GAAqBd,EAE9Da,EAAoBK,EACpBJ,EAAoBK,EAKpBld,GAAiBkc,GAHaiB,EAAQC,EAAQxB,EAGH5b,GADlBrsB,EAAkBA,GAAmB,EAAMuoC,KACGlc,EAAgBC,IACvFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Cic,GAAWE,EACXD,GAAWE,EACXP,GAAelc,EACfmc,GAAenc,EACfjsB,GAAmButB,EAEnB,MAAMmc,EAAiBpd,EAAgB1zB,EACvCA,GAAUozB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAGtB0H,EAAK7K,OAAO,GAAK0c,EAASnyB,EAC1BsgB,EAAK7K,OAAO,GAAK2c,EAASpyB,EAE1B,MAAMkmB,EAAO,OACT,MAAW/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACrE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAGd1tB,uBAAuBg/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAYjhB,GACtJ,IAAIo0B,EAAqBnT,EAAK5K,YAAY,GAC1C,MAAMK,GAA2BuK,EAAKvK,gBACtC,IAAIrzB,GAAkB49B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAI4d,EAAiBpT,EAAK7K,OAAO,GAAK,EAElC5qB,EAAqBy1B,EAAKz1B,WAC9B,MAAMmrB,EAA0BsK,EAAKtK,gBAE/BsB,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIzoC,EAA0Bw2B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAElC,MAAMxc,EAAoBgf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAE1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAGpC,KAAO2B,EAAoBhf,GAAW,CAErC,MAAM+5B,EAAoBD,EAAQ,EAC5BE,GAAqBF,EAAQ7oC,GAAc,EAEjD,IAAIgpC,EAAoBD,EAAYD,EAGpC,GAAIA,EAAYF,EAEfI,GAAmC,KAD/BC,EAAIH,EAAYF,GACFK,EAAIA,EAAIA,EAAI,QACxB,GAAIH,EAAY,EAAMF,EAAY,CAExCI,GAAmC,KAD/BC,GAAKH,EAAY,GAAOF,GACVK,EAAIA,EAAIA,EAAI,GAE/B,GAAIF,EAAYH,EAEfI,GAAmC,KAD/BC,EAAIF,EAAYH,GACFK,EAAIA,EAAIA,EAAI,QACxB,GAAIF,EAAY,EAAMH,EAAY,CACxC,IAAIK,EACJD,GAAmC,KAD/BC,GAAKF,EAAY,GAAOH,GACVK,EAAIA,EAAIA,EAAI,GAI/B3d,GAAiBkc,GAAWwB,EAAY1d,GADfrsB,EAAkBA,GAAmB,EAAMuoC,KACAlc,EAAgBC,IACpFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Cic,GAAWE,EACXD,GAAWE,EAEXkB,GAASD,EACTA,GAAc1d,EACdlrB,GAAcmrB,EACdlsB,GAAmButB,EAEnB,MAAMmc,EAAiBpd,EAAgB1zB,EACvCA,GAAUozB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAGtB0H,EAAK7K,OAAO,GAAKie,EAEjB,MAAMxN,EAAO,OACT,MAAY/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACtE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAgGd1tB,kBAAkBg/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAYjhB,GACjJ,IAAIviB,EAAqBuiB,EAAWzhB,cAChC61C,GAAsBnT,EAAK5K,YAAY,GAC3C,MAAMK,GAA2BuK,EAAKvK,gBACtC,IAAIrzB,GAAkB49B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAI4d,EAAiBpT,EAAK7K,OAAO,GAAK,EAAK74B,EAAOuB,gBAC5B,GAAlBmiC,EAAK7K,OAAO,KAEfie,EAAQj2C,KAAKa,SAAW1B,EAAOuB,iBAEhC,IAAIq3B,GAAkB8K,EAAK9K,OAE3B,MAAM8B,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIzoC,EAA0Bw2B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAElC,MAAM2d,EAA8Bt2C,KAAKyB,IAAI,EAAKohC,EAAK5K,YAAY,GAAK94B,EAAOoB,WAAWqhB,EAAW8B,WAAWxe,iBAE1GiX,EAAoBgf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAC1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAEpC,KAAO2B,EAAoBhf,GAAW,CAGrC4b,IAF2B14B,EAAa,MAAR42C,GAERle,GAAUue,EAGlC5d,GAAiBkc,GAAW7c,EAASW,GADZrsB,EAAkBA,GAAmB,EAAMuoC,KACHlc,EAAgBC,IACjFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Csd,GAASD,EACTpB,GAAWE,EACXD,GAAWE,EACXiB,GAAc1d,EACdjsB,GAAmButB,EAEnB,MAAMmc,EAAiBpd,EAAgB1zB,EACvCA,GAAUozB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAGtB0H,EAAK7K,OAAO,GAAKie,EAAQ92C,EAAOuB,gBAChCmiC,EAAK9K,OAASA,EAEd,MAAM0Q,EAAO,OACT,MAAW/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACrE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAGd1tB,qBAAqBg/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAYjhB,GACpJ,IAAIviB,EAAqBuiB,EAAWzhB,cAChC61C,EAAwC,IAAnBnT,EAAK5K,YAAY,GAC1C,MAAMK,GAA2BuK,EAAKvK,gBACtC,IAAIrzB,GAAkB49B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAIN,GAAkB8K,EAAK9K,OAE3B,MAAM8B,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIzoC,EAA0Bw2B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAE9Bsd,EAAiBpT,EAAK7K,OAAO,GAAK,EAAK74B,EAAOuB,gBAE5B,GAAlBmiC,EAAK7K,OAAO,KAASie,EAAQnc,GAAMyc,uBAAuBl3C,GAAQ22C,GAEtE,MAAMM,EAA8Bt2C,KAAKyB,IAAI,EAAKu0C,GAE5C75B,EAAoBgf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAE1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAGpC,KAAO2B,EAAoBhf,GAAW,CACrC,MAAMq6B,EAA2B,EAARP,EACnB71C,EAA2B,MAAXo2C,EACtB,IAAIC,EAAqBp3C,EAAKe,GAC9B,MAAMs2C,EAAqBT,EAAQO,EACnCC,IAAep3C,EAAKe,EAAQ,GAAKq2C,GAAcC,EAE/C3e,IAAW0e,EAAa1e,GAAUue,EAGlC5d,GAAiBkc,GAAW7c,EAASW,GADZrsB,EAAkBA,GAAmB,EAAMuoC,KACHlc,EAAgBC,IACjFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Csd,GAASD,EACTpB,GAAWE,EACXD,GAAWE,EACXiB,GAAc1d,EACdjsB,GAAmButB,EAEnB,MAAMmc,EAAiBpd,EAAgB1zB,EACvCA,GAAUozB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAGtB0H,EAAK7K,OAAO,GAAKie,EAAQ92C,EAAOuB,gBAChCmiC,EAAK9K,OAASA,EAEd,MAAM0Q,EAAO,OACT,MAAY/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACtE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAKd1tB,oBAAoBg/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAYjhB,GACnJ,IAAIviB,EAAqBuiB,EAAW+0B,eAAe9T,EAAK/L,cACpDkf,EAAqBnT,EAAK5K,YAAY,GAAK1U,EAAWiF,2BAA2Bqa,EAAK/L,cAC1F,MAAMwB,GAA2BuK,EAAKvK,gBACtC,IAAIrzB,GAAkB49B,EAAKzK,YAC3B,MAAMC,GAAuBwK,EAAKxK,YAClC,IAAIN,GAAkB8K,EAAK9K,OAE3B,MAAM8B,EAAwBgJ,EAAKhJ,aACnC,IAAI+a,GAAmB/R,EAAKrK,OACxBqc,EAAkBhb,EAAe,EAAM+a,EAC3C,MAAME,GAAwBjS,EAAKpK,YAC7Bsc,EAAuBlb,EAAe,EAAMib,EAClD,IAAIzoC,EAA0Bw2B,EAAKlJ,qBAC/BC,EAA+BiJ,EAAKjJ,qBACpClB,GAAyBmK,EAAKnK,cAC9BC,GAAyBkK,EAAKlK,cAE9Bsd,EAAiBpT,EAAK7K,OAAO,GAAK,EAAK74B,EAAOuB,gBAE5B,GAAlBmiC,EAAK7K,OAAO,KAASie,EAAQnc,GAAMyc,uBAAuBl3C,GAAQ22C,GAEtE,MAAM75B,EAAoBgf,EAAoBuH,EAC9CvH,GAAqB0H,EAAKhL,aAC1B,IAMI2d,EANAC,EAAwB5S,EAAK3J,mBAC7BE,EAA6ByJ,EAAKzJ,mBAClCsc,EAAwB7S,EAAK1J,mBAC7BE,EAA6BwJ,EAAKxJ,mBAClCvB,EAAsB+K,EAAKvJ,iBAC3BE,EAA2BqJ,EAAKrJ,iBAEpC,KAAO2B,EAAoBhf,GAAW,CACrC,MAAMq6B,EAA2B,EAARP,EACnB71C,EAA2B,MAAXo2C,EACtBze,EAAS14B,EAAKe,GACd,MAAMs2C,EAAqBT,EAAQO,EACnCze,IAAW14B,EAAKe,EAAQ,GAAK23B,GAAU2e,EAGvChe,GAAiBkc,GAAW7c,EAASW,GADZrsB,EAAkBA,GAAmB,EAAMuoC,KACHlc,EAAgBC,IACjFA,GAAiBkc,GAAWnc,EAAgBC,GAE5Csd,GAASD,EACTpB,GAAWE,EACXD,GAAWE,EACXiB,GAAc1d,EACdjsB,GAAmButB,EAEnB,MAAMmc,EAAiBpd,EAAgB1zB,EACvCA,GAAUozB,EASVmd,EAAS1d,EAAc,EAAI,CAAC,EAAG,EAA0B,GAAL,GAAfA,IAAyBA,EAAe,GAAK,CAAqB,GAAL,EAAdA,GAAsBA,EAAc,EAAG,EAAG,GAE9Hoc,GAAM/Y,EAAoBqa,EAAO,IAAM1T,IAAuBiU,EAASN,GAAiB,EAAID,EAAO,IACnGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASN,EAAgBD,EAAO,GAClGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,GAAiB,EAAIF,EAAO,IACvGtB,GAAM/Y,EAAoBqa,EAAO,GAAK,GAAK1T,IAAuBiU,EAASL,EAAgBF,EAAO,GAElGC,GAAiBrc,EACjBsc,GAAiBrc,EACjBvB,GAAe0B,EAEf2B,GAAqB,EAEtB0H,EAAK7K,OAAO,GAAKie,EAAQ92C,EAAOuB,gBAChCmiC,EAAK9K,OAASA,EAEd,MAAM0Q,EAAO,OACT,MAAY/P,GAAiBA,EAAgB+P,IAAS/P,EAAgB,IACtE,MAAWC,GAAiBA,EAAgB8P,IAAS9P,EAAgB,GACzEkK,EAAKnK,cAAgBA,EACrBmK,EAAKlK,cAAgBA,EAGd1tB,gBAAgBg/B,EAAciK,EAAoB/Y,EAA2B2G,EAA4BY,EAAmBG,EAAYjhB,GAG/I,IAAKqoB,EAAM14B,KAAM,OAEjB,IAAI0T,EAAc9lB,EAAO4K,SAAW,EAAI84B,EAAK/hB,QAAQ,GACjDoL,EAAsBtK,EAAWoD,YAAYC,GAEjDglB,EAAM9L,YAAY0E,EAAKpJ,kBAAmBoJ,EAAKnJ,gBAAiBzU,EAAKrD,EAAYsK,GAG7EA,GAAW9G,EAAW+F,kBAAkC,GAAd8e,EAAMrV,MAAaiO,EAAKzL,WAAa6S,EAAM1P,KAAOp7B,EAAOqF,aAAeylC,EAAMzP,KAC3HyP,EAAM14B,KAAK4X,SAASvH,EAAWlP,YAAYuS,IAAM4D,YAAYjH,EAAWmD,eAAeE,IAAMR,QAAU,EAE/FyH,GAAW9G,EAAW6E,aAC9BggB,EAAM5P,YAAa,GAIbpvB,8BAA8B5L,GACrC,IAAI42C,EAAgBj2C,KAAKa,SAAW1B,EAAOuB,gBAIvCk2C,EAA4B,MAARX,EACpBt2C,EAAmBN,EAAKu3C,GAE5B,IAAK,IAAIC,EAA4B,IAAKA,EAAoB,EAAGA,IAAqB,CACrF,MAAMC,EAAqBF,EAFL,GAE2B,MAC3CG,EAAmB13C,EAAKy3C,GAC9B,GAAIn3C,EAAWo3C,GAAY,EAAK,CAE/B,IAAK,IAAIx3C,EAAY,EAAGA,EAAI,GAAIA,IAAK,CACpC,MAAMy3C,EAA0BJ,EAAY,EAAK,MAC3CK,EAAwB53C,EAAK23C,GACnC,GAAIr3C,EAAWs3C,GAAiB,EAAK,CAEpC,MAAMC,EAAgBD,EAAgBt3C,EACtCs2C,EAAQW,EACJ52C,KAAKC,IAAIi3C,GAAS,OACrBjB,IAAUt2C,EAAWu3C,GAEtBjB,EAAQj2C,KAAKsgB,IAAI,EAAG21B,GAAS92C,EAAOuB,gBACpC,MAEAk2C,EAAYI,EACZr3C,EAAWs3C,EAGb,MAEAL,EAAYE,EACZn3C,EAAWo3C,EAIb,OAAOd,EAGDhrC,oCAAoCksC,GAC1C,OAAQA,IAAqBh4C,EAAO0H,YAAc,EAAO,EAAM7G,KAAKuB,IAAI,EAAGpC,EAAO2H,eAAiBqwC,GAE7FlsC,oCAAoConC,GAC1C,OAAQA,GAAc,GAAQlzC,EAAO0H,YAAc,EAAI7G,KAAKyB,IAAItC,EAAO0H,YAAc7G,KAAK6B,IAAIwwC,GAAcryC,KAAK8B,IAAO3C,EAAO2H,gBAEzHmE,8BAA8BmsC,GACpC,OAAOp3C,KAAKuB,IAAIvB,KAAKsgB,IAAI,EAAK82B,GAAc,EAAK,KAE3CnsC,8BAA8BonC,GACpC,OAAsD,EAA/CryC,KAAKuB,IAAIvB,KAAKsgB,IAAI,EAAK+xB,GAAa,EAAI,KAGxCpnC,oBACP,GAAiB,MAAbmG,KAAKG,KAAc,OAAO,EAC9B,IAAIikB,EAAyBpkB,KAAKG,KAAK8lC,oBAIvC,OAHIjmC,KAAKgvB,YAAYhb,EAAW2E,UAAU,KACzCyL,EAAiBpkB,KAAKoxB,YAAYpd,EAAW2E,UAAU,IAEjD3Y,KAAKouB,6BAA6BhK,GAGlCvqB,6BAA6BuqB,GACpC,MAAM8hB,EAAyB9hB,EAAiB,GAC1C+hB,EAAyBp4C,EAAOqF,aAAe8yC,EAC/CE,EAAwBr4C,EAAOsF,aAAe8yC,EACpD,OAAOnmC,KAAK2oB,iBAAmByd,GA71BR1d,GAAAkZ,qBAA6C,GA6atDlZ,GAAAqZ,kBAA8B,+yGA0ERh0C,EAAOiL,eAAiB,yTAQ3D2G,MAAM,MAEO+oB,GAAAwZ,wBAAoC,kKAGLn0C,EAAOkL,aAAe,mQAIlE0G,MAAM,YChyMI0mC,GA+BZxsC,YAAoBysC,EAA4BC,GAA5BvmC,KAAAsmC,EAAAA,EAA4BtmC,KAAAumC,EAAAA,EA9B/BvmC,KAAAwmC,EAAuB,IACvBxmC,KAAAymC,EAAwB,GACxBzmC,KAAA0mC,EAA4B3nC,EAAI4nC,KAAK,OAAQ,CAAEC,KAAM7mC,EAAYuH,SAAUu/B,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAGC,OAAQhnC,KAAKymC,IAC9GzmC,KAAAinC,EAA0BloC,EAAImoC,IAAI,CAAEC,iBAAkB,SACtDnnC,KAAAonC,EAA0BroC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAY+H,mBAAoB++B,EAAG,EAAGC,EAAG,EAAGC,MAAO,GAAIC,OAAQhnC,KAAKymC,EAAgB,IAC/HzmC,KAAAqnC,EAAmCtoC,EAAI4nC,KAAK,CAAEC,KAAM,OAAQU,OAAQvnC,EAAYsH,aAAckgC,eAAgB,EAAGJ,iBAAkB,OAAQN,EAAG,EAAGC,EAAG,EAAGC,MAAO,GAAIC,OAAQhnC,KAAKymC,EAAgB,IAC/LzmC,KAAAwnC,EAAiCzoC,EAAI0oC,KAAK,CAAEb,KAAM7mC,EAAYsH,aAAc8/B,iBAAkB,SAC9FnnC,KAAA0nC,EAAkC3oC,EAAI0oC,KAAK,CAAEb,KAAM7mC,EAAYsH,aAAc8/B,iBAAkB,SACxGnnC,KAAA2nC,GAA6B,EAEpB3nC,KAAA4nC,EAAsB7oC,EAAImoC,IAAI,CAAE5oC,MAAO,qBAAqByB,EAAYqH,6DAA8D2/B,MAAO/mC,KAAKwmC,EAAcQ,OAAQhnC,KAAKymC,GAC7LzmC,KAAKinC,EACLjnC,KAAKonC,EACLpnC,KAAKqnC,EACLrnC,KAAKwnC,EACLxnC,KAAK0nC,EACL1nC,KAAK0mC,GAGU1mC,KAAA6nC,UAAyBnpC,EAAKgL,IAAI,CAAEo+B,MAAO,eAAgBxpC,MAAO,qEAAuE0B,KAAK4nC,GAEtJ5nC,KAAA+nC,EAAkB,EAClB/nC,KAAAgoC,GAAsB,EACtBhoC,KAAAioC,GAAsB,EACtBjoC,KAAAkoC,IAAqB,EAGrBloC,KAAAmoC,IAA+B,EAC/BnoC,KAAAooC,IAA2B,EA0B5BpoC,KAAAqoC,gBAAkB,KACxB,MAAM/gC,EAAW1Y,KAAKyB,IAAI,IAAKzB,KAAKsgB,IAAI,EAAIlP,KAAKsoC,GAActoC,KAAKsmC,EAAKzN,MAAMvxB,SAAW,IACtFtH,KAAK2nC,GAAqBrgC,IAC7BtH,KAAK2nC,EAAoBrgC,EACzBtH,KAAK0mC,EAAU7oC,aAAa,IAAK,GAAKyJ,KAIhCtH,KAAAuoC,GAAaC,IACpBxoC,KAAKsmC,EAAKmC,aAAgBzoC,KAAKumC,EAAgBmC,WAAa1oC,KAAKsmC,EAAKqC,eAG/D3oC,KAAA4oC,GAAkBJ,IACrBxoC,KAAKioC,IACTjoC,KAAKioC,GAAa,EAClBjoC,KAAK6oC,OAGE7oC,KAAA8oC,GAAiBN,IACnBxoC,KAAKioC,IACVjoC,KAAKioC,GAAa,EAClBjoC,KAAK6oC,OAGE7oC,KAAA+oC,GAAqBP,IAC5BA,EAAMQ,iBACNhpC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,KAE7DrpC,KAAK6oC,KACD7oC,KAAK+nC,GAAW/nC,KAAKsmC,EAAKmC,aAAezoC,KAAKsoC,IAAetoC,KAAK+nC,IAAY/nC,KAAKsmC,EAAKmC,aAAezoC,KAAKsmC,EAAKgD,kBAAoBtpC,KAAKsoC,KAC7ItoC,KAAKkoC,IAAY,EACjBloC,KAAKupC,GAAavpC,KAAK+nC,IAIjB/nC,KAAAwpC,GAAqBhB,IAC5BA,EAAMQ,iBACNhpC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,EAAUS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,KAEvDrpC,KAAK6oC,KACD7oC,KAAK+nC,GAAW/nC,KAAKsmC,EAAKmC,aAAezoC,KAAKsoC,IAAetoC,KAAK+nC,IAAY/nC,KAAKsmC,EAAKmC,aAAezoC,KAAKsmC,EAAKgD,kBAAoBtpC,KAAKsoC,KAC7ItoC,KAAKkoC,IAAY,EACjBloC,KAAKupC,GAAavpC,KAAK+nC,IAIjB/nC,KAAA0pC,GAAmBlB,IAC1B,MAAMS,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,KAE7DrpC,KAAK2pC,MAGE3pC,KAAA4pC,GAAmBpB,IAC1B,IAAKxoC,KAAKgoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,EAAUS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,KAEvDrpC,KAAK2pC,MAkDE3pC,KAAA6pC,GAAuBrB,KACzBxoC,KAAKkoC,IAAaloC,KAAKgoC,IACvBhoC,KAAK+nC,GAAW/nC,KAAKsmC,EAAKmC,aAAe,GAAKzoC,KAAKsoC,IAClDtoC,KAAKsmC,EAAKmC,aAAe,GAAGzoC,KAAKsmC,EAAKmC,eAC1CzoC,KAAKsmC,EAAKwD,SAASC,YAEf/pC,KAAKsmC,EAAKmC,aAAezoC,KAAKsmC,EAAKnmC,KAAKob,SAAWvb,KAAKsmC,EAAKgD,kBAAkBtpC,KAAKsmC,EAAKmC,eAC7FzoC,KAAKsmC,EAAKwD,SAASC,YAGrB/pC,KAAKgoC,GAAa,EAClBhoC,KAAKkoC,IAAY,EACjBloC,KAAK6oC,MApJL,MAAMmB,EAAsC,GAArBhqC,KAAKymC,EAI5BzmC,KAAKwnC,EAAe3pC,aAAa,IAAK,OAAYmsC,UAAoBA,EAD1C,UAC4EA,EAD5E,OAE5BhqC,KAAK0nC,EAAgB7pC,aAAa,IAAK,KAAKmC,KAAKwmC,EAH7B,KAGmDwD,OAAYhqC,KAAKwmC,EAJnE,MAI0FwD,EAFnF,OAE6GhqC,KAAKwmC,EAJzH,MAIgJwD,EAFzI,OAI5BhqC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK+oC,IAClDhsC,SAASktC,iBAAiB,YAAajqC,KAAK0pC,IAC5C3sC,SAASktC,iBAAiB,UAAWjqC,KAAK6pC,IAC1C7pC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK4oC,IAClD5oC,KAAK6nC,UAAUoC,iBAAiB,WAAYjqC,KAAK8oC,IAEjD9oC,KAAK6nC,UAAUoC,iBAAiB,aAAcjqC,KAAKwpC,IACnDxpC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK4pC,IAClD5pC,KAAK6nC,UAAUoC,iBAAiB,WAAYjqC,KAAK6pC,IACjD7pC,KAAK6nC,UAAUoC,iBAAiB,cAAejqC,KAAK6pC,IAIzC7pC,KAAKumC,EAAgB0D,iBAAkB,SAAUjqC,KAAKuoC,GAAW,CAAE2B,SAAS,EAAOC,SAAS,IAqEhGtwC,KACP,GAAImG,KAAKkoC,GAAW,CACnB,KAAOloC,KAAK+nC,EAAU/nC,KAAKupC,GAAiC,IAAnBvpC,KAAKsoC,IACzCtoC,KAAKsmC,EAAKmC,aAAe,GAC5BzoC,KAAKsmC,EAAKmC,eACVzoC,KAAKupC,IAAcvpC,KAAKsoC,GACxBtoC,KAAKsmC,EAAKwD,SAASC,UAKrB,KAAO/pC,KAAK+nC,EAAU/nC,KAAKupC,GAAgC,GAAnBvpC,KAAKsoC,IACxCtoC,KAAKsmC,EAAKmC,aAAezoC,KAAKsmC,EAAKnmC,KAAKob,SAAWvb,KAAKsmC,EAAKgD,kBAChEtpC,KAAKsmC,EAAKmC,eACVzoC,KAAKupC,IAAcvpC,KAAKsoC,GACxBtoC,KAAKsmC,EAAKwD,SAASC,UAMlB/pC,KAAKioC,GAAYjoC,KAAK6oC,KAGpBhvC,UAAUvE,GAChB,KAAO1G,KAAKC,IAAIyG,IAAW,GAEtBA,EAAS,EACR0K,KAAKsmC,EAAKmC,aAAe,IAC5BzoC,KAAKsmC,EAAKmC,eACVzoC,KAAKupC,IAAcvpC,KAAKsoC,GACxBtoC,KAAKsmC,EAAKwD,SAASC,WAIhB/pC,KAAKsmC,EAAKmC,aAAezoC,KAAKsmC,EAAKnmC,KAAKob,SAAWvb,KAAKsmC,EAAKgD,mBAChEtpC,KAAKsmC,EAAKmC,eACVzoC,KAAKupC,IAAcvpC,KAAKsoC,GACxBtoC,KAAKsmC,EAAKwD,SAASC,WAIrBz0C,GAAWA,EAAS,GAAM,EAAI,EAoBxBuE,KAEP,IAAIuwC,GAA6B,EAC7BC,GAA8B,EAC9BC,GAA+B,EAHJtqC,KAAKioC,IAAejoC,KAAKgoC,IAMnDhoC,KAAK+nC,EAAU/nC,KAAKsmC,EAAKmC,aAAezoC,KAAKsoC,GAChD8B,GAAoB,EACVpqC,KAAK+nC,GAAW/nC,KAAKsmC,EAAKmC,aAAezoC,KAAKsmC,EAAKgD,kBAAoBtpC,KAAKsoC,GACtF+B,GAAqB,EAErBC,GAAsB,GAIxBtqC,KAAKwnC,EAAelpC,MAAMisC,WAAaH,EAAoB,UAAY,SACvEpqC,KAAK0nC,EAAgBppC,MAAMisC,WAAaF,EAAqB,UAAY,SACzErqC,KAAKqnC,EAAiB/oC,MAAMisC,WAAaD,EAAsB,UAAY,SAGrEzwC,SACNmG,KAAKsoC,IAAetoC,KAAKwmC,EAAe,GAAK53C,KAAKsgB,IAAIlP,KAAKsmC,EAAKgD,iBAAkBtpC,KAAKsmC,EAAKnmC,KAAKob,UAEjG,MAAMivB,EAAmBxqC,KAAKmoC,IAAuBnoC,KAAKsmC,EAAKnmC,KAAKob,SACpE,GAAIivB,EAAS,CAGZ,IAFAxqC,KAAKmoC,GAAsBnoC,KAAKsmC,EAAKnmC,KAAKob,SAEnCvb,KAAKinC,EAAS3nC,YAAYU,KAAKinC,EAASl6B,YAAY/M,KAAKinC,EAAS3nC,YAEzE,IAAK,IAAInR,EAAY,EAAGA,GAAK6R,KAAKsmC,EAAKnmC,KAAKob,SAAUptB,IAAK,CAC1D,MAAMs8C,EAAsBt8C,EAAI,IAAM,EAAK,EAAMA,EAAI,GAAK,EAAK6R,KAAKymC,EAAgB,EAAIzmC,KAAKymC,EAAgB,EAC7GzmC,KAAKinC,EAASnqC,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAY+H,mBAAoB++B,EAAG14C,EAAI6R,KAAKsoC,GAAc,EAAGxB,EAAG2D,EAAY1D,MAAO,EAAGC,OAAQhnC,KAAKymC,EAA6B,EAAbgE,OAI5JD,GAAWxqC,KAAKooC,IAAmBpoC,KAAKsmC,EAAKmC,gBAChDzoC,KAAKooC,GAAkBpoC,KAAKsmC,EAAKmC,aACjCzoC,KAAKonC,EAAQvpC,aAAa,IAAK,GAAMmC,KAAKsoC,GAActoC,KAAKsmC,EAAKmC,cAClEzoC,KAAKonC,EAAQvpC,aAAa,QAAS,GAAMmC,KAAKsoC,GAActoC,KAAKsmC,EAAKgD,kBACtEtpC,KAAKqnC,EAAiBxpC,aAAa,IAAK,GAAMmC,KAAKsoC,GAActoC,KAAKsmC,EAAKmC,cAC3EzoC,KAAKqnC,EAAiBxpC,aAAa,QAAS,GAAMmC,KAAKsoC,GAActoC,KAAKsmC,EAAKgD,mBAGhFtpC,KAAK6oC,KACL7oC,KAAKumC,EAAgBmC,WAAa1oC,KAAKsmC,EAAKmC,aAAezoC,KAAKsmC,EAAKqC,qBCzO1D+B,GAAb7wC,cACSmG,KAAA2qC,IAAiB,EAEf9wC,KACTmG,KAAK2qC,IAAQ,EAGP9wC,SACN,OAAOmG,KAAK2qC,GAGN9wC,iBAGK+wC,WAAuBF,GAGnC7wC,YAAYgxC,GACXC,QACA9qC,KAAK+qC,GAAYF,EACjB7qC,KAAKgrC,IAAiBH,EAGhBhxC,OACFmG,KAAK+qC,IACR/qC,KAAKirC,KACLjrC,KAAKgrC,IAAgB,IAErBhrC,KAAKkrC,KACLlrC,KAAKgrC,IAAgB,GAIhBnxC,OACFmG,KAAK+qC,IACR/qC,KAAKkrC,KACLlrC,KAAKgrC,IAAgB,IAErBhrC,KAAKirC,KACLjrC,KAAKgrC,IAAgB,GAQbnxC,KACT,OAAOmG,KAAKgrC,GAGHnxC,KACT,MAAM,IAAIjK,MAAM,qCAGPiK,KACT,MAAM,IAAIjK,MAAM,6CAILu7C,WAAoBT,GAChC7wC,cACCixC,QAGMjxC,OAAOuxC,GACTA,EAAOC,UACXrrC,KAAKsrC,YAIMC,WAAuBX,GAEnC/wC,YAAY2xC,GACXV,OAAM,GAEL9qC,KAAKyrC,GADSt+B,MAAXq+B,EACa,GAEAA,EAAQn7B,SAInBxW,OAAOuxC,GACTA,EAAOC,WACXrrC,KAAKyrC,GAASzrC,KAAKyrC,GAASr9C,QAAUg9C,EACtCprC,KAAKsrC,MAGIzxC,KACT,IAAK,IAAI1L,EAAY,EAAGA,EAAI6R,KAAKyrC,GAASr9C,OAAQD,IACjD6R,KAAKyrC,GAASt9C,GAAGu9C,OAIT7xC,KACT,IAAK,IAAI1L,EAAY6R,KAAKyrC,GAASr9C,OAAS,EAAGD,GAAK,EAAGA,IACtD6R,KAAKyrC,GAASt9C,GAAGw9C,iBCzFJC,GAAiB9vB,EAAkB1pB,GAClD,IAAK,MAAMqe,KAAQqL,EAAQvL,MAC1B,IAAK,MAAMjB,KAASmB,EAAKf,QACxB,IAAK,MAAMS,KAAOM,EAAKd,KAAM,CAC5B,MAAM/R,GAAe0R,EAAQa,EAAIhV,UAAY,GACxC/I,EAAMwL,KACVxL,EAAMwL,IAAO,IA+FlB,SAASiuC,GAAmBC,EAAeC,EAAoBC,EAAuBC,EAAqBpqB,GAG1G,MAAMzR,EAAgB,IAAIf,GAAM,EAAG28B,EAAeC,EAAa,GAAG,GAClEpqB,EAASrzB,KAAK4hB,GACdA,EAAQT,KAAKvhB,OAAS,EACtBgiB,EAAQV,QAAQthB,OAAS,EACzB,MAAM89C,EAAwBD,EAAcD,EAE5C,IAAK,MAAM18B,KAASw8B,EAAQp8B,QAC3BU,EAAQV,QAAQlhB,KAAK8gB,GAGtB,IAAK,IAAIQ,EAAmB,EAAGA,EAAWg8B,EAAQn8B,KAAKvhB,OAAQ0hB,IAAY,CAC1E,MAAMK,EAAe27B,EAAQn8B,KAAKG,GAC5Bq8B,EAAqBh8B,EAAInB,KAAO+8B,EACtC,GAAII,EAAa,EAAG,CACnB,GAAIr8B,EAAW,GAAKg8B,EAAQn8B,KAAKvhB,OAAQ,MAAM,IAAIwB,MAAM,2CACzD,MAAMw8C,EAAmBN,EAAQn8B,KAAKG,EAAW,GAC3Cu8B,EAAsBD,EAAQp9B,KAAO+8B,EAC3C,GAAIM,EAAc,EAAG,CAEpB,MAAMC,GAAkBH,GAAeE,EAAcF,GACrD/7B,EAAQT,KAAKnhB,KAAKugB,EAAYngB,KAAKmb,MAAMoG,EAAIhV,SAAWmxC,GAASF,EAAQjxC,SAAWgV,EAAIhV,WAAY,EAAGvM,KAAKmb,MAAMoG,EAAItc,OAASy4C,GAASF,EAAQv4C,OAASsc,EAAItc,iBAGxJ,GAAIs4C,GAAcD,EACxB97B,EAAQT,KAAKnhB,KAAKugB,EAAYoB,EAAIhV,SAAUgxC,EAAYh8B,EAAItc,aACtD,CACN,GAAIic,EAAW,EAAG,MAAM,IAAIlgB,MAAM,2CAClC,MAAM28C,EAAmBT,EAAQn8B,KAAKG,EAAW,GAC3C08B,EAAsBD,EAAQv9B,KAAO+8B,EAC3C,GAAIS,EAAcN,EAAe,CAEhC,MAAMI,GAAiBJ,EAAgBM,IAAgBL,EAAaK,GACpEp8B,EAAQT,KAAKnhB,KAAKugB,EAAYngB,KAAKmb,MAAMwiC,EAAQpxC,SAAWmxC,GAASn8B,EAAIhV,SAAWoxC,EAAQpxC,WAAY+wC,EAAet9C,KAAKmb,MAAMwiC,EAAQ14C,OAASy4C,GAASn8B,EAAItc,OAAS04C,EAAQ14C,aAMpL,MAAM44C,EAAyBr8B,EAAQT,KAAK,GAAGxU,SAC/C,IAAK,IAAIuxC,EAAmB,EAAGA,EAAWt8B,EAAQV,QAAQthB,OAAQs+C,IACjEt8B,EAAQV,QAAQg9B,IAAaD,EAE9B,IAAK,IAAI/f,EAAiB,EAAGA,EAAStc,EAAQT,KAAKvhB,OAAQs+B,IAC1Dtc,EAAQT,KAAK+c,GAAQvxB,UAAYsxC,QAItBE,WAAmCxB,GAC/CtxC,YAAY+yC,EAAmBC,EAAwBC,GACtDhC,QAEA,MAAM3pC,EAA2B,GAC3BE,EAA2B,GAC3BC,EAAyB,GAE/B,IAAK,IAAIsa,EAAuB,EAAGA,EAAegxB,EAAIzsC,KAAK0b,kBAAmBD,IAAgB,CAC7F,MAAMmxB,EAAsBH,EAAIzsC,KAAK4X,SAAS6D,GACxCoxB,EAAsB,IAAIz1B,EAE5BqE,EAAegxB,EAAIzsC,KAAKe,kBAC3BC,EAAc3S,KAAKw+C,GACTpxB,EAAegxB,EAAIzsC,KAAKe,kBAAoB0rC,EAAIzsC,KAAKiB,kBAC/DC,EAAc7S,KAAKw+C,GAGnB1rC,EAAY9S,KAAKw+C,GAGlBA,EAAWp1B,MAAQm1B,EAAWn1B,MAC9Bo1B,EAAWx1B,OAASu1B,EAAWv1B,OAC/Bw1B,EAAWr7C,KAAOo7C,EAAWp7C,KAE7B,IAAK,MAAM6e,KAAcu8B,EAAWt1B,YACnCu1B,EAAWv1B,YAAYjpB,KAAKgiB,GAG7B,MAAMy8B,EAAyBl/C,EAAOqF,aAAew5C,EAAIzsC,KAAKmb,YACxD4xB,EAAyBn/C,EAAOqF,aAAey5C,EACrD,IAAI1gB,GAAsB,EACtBrQ,EAA0B,KAE9B,IAAK,IAAIqU,EAAiB,EAAGA,EAASyc,EAAIzsC,KAAKob,SAAU4U,IAAU,CAClE,MAAMgd,EAA6BP,EAAIzsC,KAAKolB,WAAW3J,EAAcuU,GACrE,GAAkB,MAAdgd,EAAoB,CACvB,MAAMC,EAAsBjd,EAAS8c,EACrC,IAAK,MAAMnB,KAAWqB,EAAW58B,MAAO,CAEvC,MAAM88B,EAA4BvB,EAAQv8B,MAAQ69B,EAAcN,EAC1DQ,EAA0BxB,EAAQt8B,IAAM49B,EAAcN,EAEtDzf,EAAmBz+B,KAAKsU,MAAMmqC,EAAoBH,GAClD5f,EAAiB1+B,KAAKkgB,KAAKw+B,EAAkBJ,GACnD,IAAK,IAAInxB,EAAcsR,EAAUtR,EAAMuR,EAAQvR,IAAO,CACrD,MAAMwxB,EAAuBxxB,EAAMmxB,EAC7BlB,EAAwBp9C,KAAKsgB,IAAI,EAAGm+B,EAAoBE,GACxDtB,EAAsBr9C,KAAKyB,IAAI68C,EAAgBI,EAAkBC,GAEvE,GAAIvB,EAAgBC,EAAa,CAGhC,GAAI9f,EAAapQ,GAAkB,MAAXD,EAAiB,CAExC,IADAqQ,IACOA,EAAapQ,GACnBixB,EAAWr1B,KAAKwU,GAAc,EAC9BA,IAEDrQ,EAAU,IAAIxL,EACd08B,EAAWt1B,SAASlpB,KAAKstB,GACzBkxB,EAAWr1B,KAAKwU,GAAc6gB,EAAWt1B,SAAStpB,OAClD0tB,EAAQtL,WAAa28B,EAAW38B,WAIjCsL,EAAUkxB,EAAWt1B,SAASs1B,EAAWr1B,KAAKoE,GAAO,GAErD8vB,GAAmBC,EAASuB,EAAoBE,EAAevB,EAAeA,EAAeC,EAAanwB,EAAQvL,YAQxHi9B,GAAwBrsC,GACxBqsC,GAAwBnsC,GACxBmsC,GAAwBlsC,GACxBtB,KAAKytC,OAAO,IAAIC,GAAsBd,EAAKzrC,EAAeE,EAAeC,WAI9DqsC,WAAmB/C,GAS/B/wC,YAAsBysC,EAAqCsH,GAC1D9C,OAAM,GADe9qC,KAAAsmC,EAAAA,EAAqCtmC,KAAA4tC,GAAAA,EAE1D5tC,KAAK6tC,GAAY7tC,KAAK4tC,GAAMr+B,MAC5BvP,KAAK8tC,GAAU9tC,KAAK4tC,GAAMp+B,IAC1BxP,KAAK+tC,GAAY/tC,KAAK4tC,GAAMr+B,MAC5BvP,KAAKguC,GAAUhuC,KAAK4tC,GAAMp+B,IAC1BxP,KAAKiuC,GAAWjuC,KAAK4tC,GAAMj+B,KAC3B3P,KAAKkuC,GAAW,GAChBluC,KAAKmuC,GAAcnuC,KAAK4tC,GAAMl+B,QAC9B1P,KAAKouC,GAAc,GAGVv0C,KACT,IAAK,IAAI1L,EAAY,EAAGA,EAAI6R,KAAKkuC,GAAS9/C,OAAS,GAC9C4R,KAAKkuC,GAAS//C,GAAG6gB,MAAQhP,KAAKkuC,GAAS//C,EAAI,GAAG6gB,KACjDhP,KAAKkuC,GAAS9vB,OAAOjwB,EAAG,GAExBA,IAIF,IAAK,IAAIA,EAAY,EAAGA,EAAI6R,KAAKkuC,GAAS9/C,OAAS,GAC9C4R,KAAKkuC,GAAS//C,EAAI,GAAGgN,UAAY6E,KAAKkuC,GAAS//C,GAAGgN,UACrD6E,KAAKkuC,GAAS//C,GAAGgN,UAAY6E,KAAKkuC,GAAS//C,EAAI,GAAGgN,UAClD6E,KAAKkuC,GAAS//C,EAAI,GAAG0F,QAAUmM,KAAKkuC,GAAS//C,GAAG0F,QAChDmM,KAAKkuC,GAAS//C,GAAG0F,QAAUmM,KAAKkuC,GAAS//C,EAAI,GAAG0F,OAChDmM,KAAKkuC,GAAS9vB,OAAOjwB,EAAG,GAExBA,IAIF,MAAMkgD,EAAwBruC,KAAKkuC,GAAS,GAAG/yC,SACzCmzC,EAAoBtuC,KAAKkuC,GAAS,GAAGl/B,KAC3C,IAAK,IAAI7gB,EAAY,EAAGA,EAAI6R,KAAKmuC,GAAY//C,OAAQD,IACpD6R,KAAKouC,GAAYjgD,GAAK6R,KAAKmuC,GAAYhgD,GAAKkgD,EAE7C,IAAK,IAAIlgD,EAAY,EAAGA,EAAI6R,KAAKkuC,GAAS9/C,OAAQD,IACjD6R,KAAKkuC,GAAS//C,GAAGgN,UAAYkzC,EAC7BruC,KAAKkuC,GAAS//C,GAAG6gB,MAAQs/B,EAE1BtuC,KAAK+tC,GAAY/tC,KAAK6tC,GAAYS,EAClCtuC,KAAKguC,GAAUhuC,KAAK+tC,GAAY/tC,KAAKkuC,GAASluC,KAAKkuC,GAAS9/C,OAAS,GAAG4gB,KAExEhP,KAAKirC,KACLjrC,KAAKsrC,KAGIzxC,KACTmG,KAAK4tC,GAAMj+B,KAAO3P,KAAKkuC,GACvBluC,KAAK4tC,GAAMl+B,QAAU1P,KAAKouC,GAC1BpuC,KAAK4tC,GAAMr+B,MAAQvP,KAAK+tC,GACxB/tC,KAAK4tC,GAAMp+B,IAAMxP,KAAKguC,GACL,MAAbhuC,KAAKsmC,GAActmC,KAAKsmC,EAAKwD,SAASC,UAGjClwC,KACTmG,KAAK4tC,GAAMj+B,KAAO3P,KAAKiuC,GACvBjuC,KAAK4tC,GAAMl+B,QAAU1P,KAAKmuC,GAC1BnuC,KAAK4tC,GAAMr+B,MAAQvP,KAAK6tC,GACxB7tC,KAAK4tC,GAAMp+B,IAAMxP,KAAK8tC,GACL,MAAb9tC,KAAKsmC,GAActmC,KAAKsmC,EAAKwD,SAASC,iBAgB/BwE,WAAyB7D,GACrC7wC,YAAY+yC,EAAmB4B,GAC9B1D,QACA,MAAM2D,EAAyB7B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAAwB7yC,eACtG,IAAI8yC,GAA4B,EAChC,IAAK,IAAIxgD,EAAY,EAAGA,EAAIsgD,EAASrgD,OAAQD,IACxCsgD,EAAStgD,IAAMqgD,EAASrgD,KAC3BwgD,GAAmB,EACnBxgD,EAAIsgD,EAASrgD,QAGf,GAAwB,GAApBugD,EAA2B,CAC9B,IAAIn+B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAC5E,IAAK,IAAIvgD,EAAY,EAAGA,EAAIqgD,EAASpgD,OAAQD,IAC5CqiB,EAAW3U,eAAe1N,GAAKqgD,EAASrgD,GAGzC,IAAID,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAIqiB,EAAW3U,eAAezN,OAAQD,IAC7DD,GAAOsiB,EAAW3U,eAAe1N,GAElC,MAAME,EAAkBH,EAAMsiB,EAAW3U,eAAezN,OAGxD,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAIqiB,EAAW3U,eAAezN,OAAQD,IAC7DG,GAAcC,EACdA,EAAWiiB,EAAW3U,eAAe1N,GAAKE,EAC1CmiB,EAAW8C,uBAAuBnlB,GAAKG,EAGxCkiB,EAAW8C,uBAAuB,IAAM,EACxC9C,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKsD,WAAqBlE,GACjC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAE9E,GADyBl+B,EAAWnW,QACpBw0C,EAAU,CACzB,MAAMx0C,EAAwBT,EAAak1C,cAAcD,GACzD,GAAc,MAAVx0C,EACH,GAAyB8S,MAArB9S,EAAOM,WACV6V,EAAW1b,KAAOuF,EAAOM,YACpB5M,EAAO4F,iCAAiC6c,EAAW1b,OAAS/G,EAAOkI,OAAOua,EAAWzV,OAAO1E,mBAChGma,EAAWzV,MAAQ,QAEd,GAAuBoS,MAAnB9S,EAAOO,SAAuB,CACxC,MAAMm0C,EAAqBv+B,EAAW3c,OAChCm7C,EAAkBx+B,EAAWoC,IAC7Bq8B,EAAuBz+B,EAAWqC,SACxCrC,EAAW2O,eAAe9kB,EAAOO,SAAUgyC,EAAIzsC,KAAK0c,kBAAkB+vB,EAAIxsC,SAAUwsC,EAAIzsC,KAAK2c,gBAAgB8vB,EAAIxsC,SAA6B,GAAnBwsC,EAAIzsC,KAAKsb,QAAkC,GAAnBmxB,EAAIzsC,KAAKsb,OAAamxB,EAAIzsC,KAAKsb,QAAU,GAC5LjL,EAAW3c,OAASk7C,EACpBv+B,EAAWoC,IAAMo8B,EACjBx+B,EAAWqC,SAAWo8B,EAGxBz+B,EAAWnW,OAASw0C,EACpBjC,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKK4D,WAAwCxE,GACpD7wC,YAAY+yC,GAOX,SAASuC,EAAwBC,GAChC,IAAIC,EAAgB,EACpB,IAAK,MAAMC,KAASF,EACnBC,GAASC,EAAMC,OAEhB,IAAI9/C,EAAiBb,KAAKa,SAAW4/C,EACrC,IAAK,MAAMC,KAASF,EAEnB,GADA3/C,GAAU6/C,EAAMC,OACZ9/C,GAAU,EAAK,OAAO6/C,EAAME,KAEjC,OAAOJ,EAASxgD,KAAKa,SAAW2/C,EAAQhhD,OAAU,GAAGohD,KAEtD,SAASC,EAAyBp/C,EAAa6e,EAAawgC,EAAc3I,GACzE,MAAMqI,EAAqC,GAC3C,IAAK,IAAIjhD,EAAYkC,EAAKlC,GAAK+gB,EAAK/gB,IACnCihD,EAAQ5gD,KAAK,CAAEghD,KAAMrhD,EAAGohD,OAAQ,GAAO3gD,KAAKuB,KAAKhC,EAAIuhD,GAAQ3I,EAAO,GAAO,KAE5E,OAAOoI,EAAqBC,GAvB7BtE,QA0BA,MAAMzvC,EAAmBuxC,EAAIzsC,KAAK0c,kBAAkB+vB,EAAIxsC,SAClDoQ,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAE9E,GAAIrzC,EAAS,CACZ,MAAMvG,EAAuBq6C,EAAqB,CACjD,CAAEK,KAAI,EAAwBD,OAAQ,GACtC,CAAEC,KAAI,EAA2BD,OAAQ,KA8C1C,SAASI,EAAU7zC,GAClB,IAAIoT,EAAc,EAClB,IAAK,MAAMxd,KAASoK,EACfpK,EAAQwd,IAAKA,EAAMxd,GAExB,IAAK,IAAIvD,EAAY,EAAGA,EAAI2N,EAAU1N,OAAQD,IAC7C2N,EAAU3N,GAAKJ,EAAO+J,aAAegE,EAAU3N,GAAK+gB,EAGtD,OArDAsB,EAAWnW,OAASmW,EAAW1b,KAAOA,EACtC0b,EAAW+B,aAAek9B,EAAyB,EAAG1hD,EAAOqG,kBAAoB,EAAGrG,EAAOqG,kBAAoB,EAAG,GAClHoc,EAAWvV,gBAAkBw0C,EAAyB,EAAG1hD,EAAOsG,qBAAuB,EAAG,EAAG,GAC7Fmc,EAAWtV,eAAiBnN,EAAOoJ,UAAU1F,WAAW09C,EAAqB,CAC5E,CAAEK,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,MACxBvgD,MACJwhB,EAAW3V,WAAa9M,EAAOuG,YAAY7C,WAAW09C,EAAqB,CAC1E,CAAEK,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,aAAcD,OAAQ,GAC9B,CAAEC,KAAM,YAAaD,OAAQ,GAC7B,CAAEC,KAAM,cAAeD,OAAQ,GAC/B,CAAEC,KAAM,YAAaD,OAAQ,MAC1BvgD,MACJwhB,EAAW1V,QAAU/M,EAAOyH,aAAamf,QAAQw6B,EAAqB,CACrE,CAAEK,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,SAAUD,OAAQ,MAE3B/+B,EAAWzV,MAAQhN,EAAOkI,OAAOxE,WAAW09C,EAAqB,CAChE,CAAEK,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,WAAYD,OAAQ,MACzBvgD,MAUI8F,GACP,KAAA,EACC0b,EAAW8B,UAAa1jB,KAAKa,SAAW1B,EAAOoB,WAAWf,OAAU,EACnE,MACF,KAAA,EAA8B,CAC7B,MAAMwhD,EAAiC,CACtC,KACC,MAAM1zC,EAAqB,GAC3B,IAAK,IAAI/N,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzD+N,EAAS/N,GAAMS,KAAKa,SAAW,GAAOb,KAAKa,SAAW,EAEvD,OAAOyM,GAER,KACC,IAAI2zC,EAAkB,EACtB,MAAM3zC,EAAqB,CAAC2zC,GAC5B,IAAK,IAAI1hD,EAAI,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACjD0hD,GAAWjhD,KAAKuB,IAAI,EAAGvB,KAAKa,SAAW,KACvCyM,EAAS/N,GAAK0hD,EAEf,OAAO3zC,GAER,KACC,IAAI2zC,EAAkB,EACtB,MAAM3zC,EAAqB,CAAC2zC,GAC5B,IAAK,IAAI1hD,EAAI,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACjD0hD,GAAWjhD,KAAKuB,IAAI,EAAGvB,KAAKa,SAAW,KACvCyM,EAAS/N,GAAK0hD,EAAUjhD,KAAKa,SAE9B,OAAOyM,IAIHA,GAAqB4zC,EADTF,EAAoBhhD,KAAKa,SAAWmgD,EAAmBxhD,OAAU,MAEnFuhD,EAAUzzC,GACV,IAAK,IAAI/N,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDqiB,EAAW0D,aAAahY,SAAS/N,GAAKS,KAAKmb,MAAM7N,EAAS/N,IAE3DqiB,EAAW0D,aAAamN,sBACvB,MACF,QAAS,MAAM,IAAIzxB,MAAM,6DAEpB,CACN,MAAMkF,EAAuBq6C,EAAqB,CACjD,CAAEK,KAAI,EAAuBD,OAAQ,GACrC,CAAEC,KAAI,EAAsBD,OAAQ,GACpC,CAAEC,KAAI,EAA4BD,OAAQ,GAC1C,CAAEC,KAAI,EAA2BD,OAAQ,GACzC,CAAEC,KAAI,EAAqBD,OAAQ,KAsEpC,SAASI,EAAU7zC,GAClB,IAAIoT,EAAc,EAClB,IAAK,MAAMxd,KAASoK,EACfpK,EAAQwd,IAAKA,EAAMxd,GAExB,IAAK,IAAIvD,EAAY,EAAGA,EAAI2N,EAAU1N,OAAQD,IAC7C2N,EAAU3N,GAAKJ,EAAO+J,aAAegE,EAAU3N,GAAK+gB,EAGtD,OA7EAsB,EAAWnW,OAASmW,EAAW1b,KAAOA,EACtC0b,EAAW+B,aAAek9B,EAAyB,EAAG1hD,EAAOqG,kBAAoB,EAAG,EAAG,KACvFoc,EAAWvV,gBAAkBw0C,EAAyB,EAAG1hD,EAAOsG,qBAAuB,EAAG,EAAG,GAC7Fmc,EAAWtV,eAAiBnN,EAAOoJ,UAAU1F,WAAW09C,EAAqB,CAC5E,CAAEK,KAAM,SAAUD,OAAQ,IAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,MACxBvgD,MACJwhB,EAAW3V,WAAa9M,EAAOuG,YAAY7C,WAAW09C,EAAqB,CAC1E,CAAEK,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,aAAcD,OAAQ,GAC9B,CAAEC,KAAM,YAAaD,OAAQ,GAC7B,CAAEC,KAAM,cAAeD,OAAQ,GAC/B,CAAEC,KAAM,YAAaD,OAAQ,MAC1BvgD,MACJwhB,EAAW1V,QAAU/M,EAAOyH,aAAamf,QAAQw6B,EAAqB,CACrE,CAAEK,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,SAAUD,OAAQ,IAC1B,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,kBAAmBD,OAAQ,MAEpC/+B,EAAWzV,MAAQhN,EAAOkI,OAAOxE,WAAW09C,EAAqB,CAChE,CAAEK,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,WAAYD,OAAQ,MACzBvgD,MACI,GAAJ8F,IACH0b,EAAWpV,QAAUrN,EAAO8G,SAASpD,WAAW09C,EAAqB,CACpE,CAAEK,KAAM,OAAQD,OAAQ,GACxB,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,QAASD,OAAQ,MACtBvgD,OAEG,GAAJ8F,GAAmC,GAAJA,IAClC0b,EAAWrV,SAAWpN,EAAOqH,UAAU3D,WAAW09C,EAAqB,CACtE,CAAEK,KAAM,QAASD,OAAQ,IACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,MAAOD,OAAQ,GACvB,CAAEC,KAAM,aAAcD,OAAQ,GAC9B,CAAEC,KAAM,YAAaD,OAAQ,GAC7B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,QAASD,OAAQ,MACtBvgD,OAWG8F,GACP,KAAA,EACC0b,EAAW6B,SAAYzjB,KAAKa,SAAW1B,EAAO6F,UAAUxF,OAAU,EACjE,MACF,KAAA,EACCoiB,EAAWvU,cAAgBlO,EAAOoJ,UAAU1F,WAAW09C,EAAqB,CAC3E,CAAEK,KAAM,SAAUD,OAAQ,IAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,MACxBvgD,MACJwhB,EAAWxU,WAAayzC,EAAyB,EAAG1hD,EAAOiK,gBAAkB,EAAGjK,EAAOiK,gBAAkB,EAAG,GAC3G,MACF,KAAA,EAA+B,CAC9B,MAAM+3C,EAAiC,CACtC,KACC,MAAMj0C,EAAsB,GAC5B,IAAK,IAAI3N,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1D2N,EAAU3N,GAAMS,KAAKa,SAAW,GAAOb,KAAKa,SAAW,EAGxD,OADAqM,EAA2B,EAAhBlN,KAAKa,SAAgB,GAAKb,KAAKuB,IAAIvB,KAAKa,SAAU,KACtDqM,GAER,KACC,IAAI+zC,EAAkB,EACtB,MAAM/zC,EAAsB,CAAC+zC,GAC7B,IAAK,IAAI1hD,EAAI,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAClD0hD,GAAWjhD,KAAKuB,IAAI,EAAGvB,KAAKa,SAAW,KACvCqM,EAAU3N,GAAK0hD,EAEhB,OAAO/zC,GAER,KACC,IAAI+zC,EAAkB,EACtB,MAAM/zC,EAAsB,CAAC+zC,GAC7B,IAAK,IAAI1hD,EAAI,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAClD0hD,GAAWjhD,KAAKuB,IAAI,EAAGvB,KAAKa,SAAW,KACvCqM,EAAU3N,GAAK0hD,EAAUjhD,KAAKa,SAE/B,OAAOqM,IAIHA,GAAsBg0C,EADVC,EAAoBnhD,KAAKa,SAAWsgD,EAAmB3hD,OAAU,MAEnFuhD,EAAU7zC,GACV,IAAK,IAAI3N,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAwBxJ,IAC1DqiB,EAAW+C,cAAczX,UAAU3N,GAAKS,KAAKmb,MAAMjO,EAAU3N,IAE9DqiB,EAAW+C,cAAc8N,sBACxB,MACF,KAAA,EAA8B,CAC7B,MAAMnlB,EAAqB,GAC3B,IAAK,IAAI/N,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IAAK,CAC9D,MAAM8iB,EAA2B,GAAL9iB,GAAe,GAALA,GAAe,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,GAAgB,IAALA,EAE3F+N,EAAS/N,GADN8iB,EACWriB,KAAKuB,IAAIvB,KAAKa,SAAU,KAEK,GAA7Bb,KAAKuB,IAAIvB,KAAKa,SAAU,GAGxCkgD,EAAUzzC,GACV,IAAK,IAAI/N,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IACzDqiB,EAAW0D,aAAahY,SAAS/N,GAAKS,KAAKmb,MAAM7N,EAAS/N,IAE3DqiB,EAAW0D,aAAamN,sBACvB,MACF,KAAA,EAAwB,CACvB7Q,EAAWlV,UAAa1M,KAAKa,SAAW1B,EAAO0I,WAAWrI,OAAU,EACpEoiB,EAAWjV,aAAgB3M,KAAKa,SAAW1B,EAAOsJ,UAAUjJ,OAAU,EACtE,MAAMkN,EAAuBvN,EAAO0I,WAAW+Z,EAAWlV,WAC1D,IAAK,IAAInN,EAAY,EAAGA,EAAImN,EAAU5E,aAAcvI,IACnDqiB,EAAW9U,UAAUvN,GAAGwN,UAAY8zC,EAAyB,EAAG1hD,EAAOgJ,oBAAoB3I,OAAS,EAAG,EAAG,GAC1GoiB,EAAW9U,UAAUvN,GAAGwC,UAAY8+C,EAAyB,EAAG1hD,EAAO+I,qBAAsB/I,EAAO+I,qBAAuB,EAAG,GAC9H0Z,EAAW9U,UAAUvN,GAAGyN,SAAW7N,EAAOoJ,UAAU1F,WAAmB,OAAEzC,MAE1E,IAAK,IAAIb,EAAYmN,EAAU5E,aAAcvI,EAAIJ,EAAOyI,cAAerI,IACtEqiB,EAAW9U,UAAUvN,GAAGwN,UAAY8zC,EAAyB,EAAG1hD,EAAOgJ,oBAAoB3I,OAAS,EAAG,EAAG,GAC1GoiB,EAAW9U,UAAUvN,GAAGwC,UAAa/B,KAAKuB,IAAIvB,KAAKa,SAAU,GAAK1B,EAAO+I,qBAAwB,EACjG0Z,EAAW9U,UAAUvN,GAAGyN,SAAW7N,EAAOoJ,UAAU1F,WAAW09C,EAAqB,CACnF,CAAEK,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,MACxBvgD,MAELwhB,EAAWhV,kBAAqB5M,KAAKuB,IAAIvB,KAAKa,SAAU,GAAK1B,EAAO+I,qBAAwB,EAC5F0Z,EAAW/U,iBAAmB1N,EAAOoJ,UAAU1F,WAAW09C,EAAqB,CAC9E,CAAEK,KAAM,SAAUD,OAAQ,GAC1B,CAAEC,KAAM,QAASD,OAAQ,GACzB,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,WAAYD,OAAQ,GAC5B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,GAC3B,CAAEC,KAAM,UAAWD,OAAQ,MACxBvgD,MACH,MACF,QAAS,MAAM,IAAIY,MAAM,2DAI3Bg9C,EAAI9C,SAASC,UACb/pC,KAAKsrC,YAIM0E,WAAyBtF,GACrC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAW3V,YACpBg0C,IACf7uC,KAAKsrC,KACL96B,EAAW3V,WAAag0C,EACxBr+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,kBAKHkG,WAAsBvF,GAClC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAW1V,SACpB+zC,IACf7uC,KAAKsrC,KACL96B,EAAW1V,QAAU+zC,EACrBr+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,kBAKHmG,WAA6BxF,GACzC7wC,YAAY+yC,EAAmBl7C,EAAe27B,EAAkB8iB,EAAsBpJ,EAAeC,GAEpG,GADA8D,QACIp5C,EAAQk7C,EAAIzsC,KAAKqb,mBAAoB,MAAM,IAAI5rB,MAAM,mBAEzD,IAAK,IAAImsB,EAAcsR,EAAUtR,EAAMsR,EAAW0Z,EAAOhrB,IACxD,IAAK,IAAI3b,EAAkB+vC,EAAc/vC,EAAU+vC,EAAenJ,EAAQ5mC,IACrEwsC,EAAIzsC,KAAK4X,SAAS3X,GAASuX,KAAKoE,IAAQrqB,IAC3Ck7C,EAAIzsC,KAAK4X,SAAS3X,GAASuX,KAAKoE,GAAOrqB,EACvCsO,KAAKsrC,MAKRsB,EAAI9C,SAASC,iBAIFqG,WAAkB1F,GAC9B7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACI8B,EAAIzsC,KAAKkb,KAAOwzB,IACnBjC,EAAIzsC,KAAKkb,IAAMwzB,EACfjC,EAAIzsC,KAAKrH,SAAW+1C,EAAW9gD,EAAO6K,aAEtCg0C,EAAI9C,SAASC,UAEb/pC,KAAKsrC,aAKK+E,WAAuB3F,GACnC7wC,YAAY+yC,EAAmBiC,EAAkByB,GAEhD,GADAxF,QACI8B,EAAIzsC,KAAKob,UAAYszB,EAAU,CAClC,IAAK,MAAMzuC,KAAWwsC,EAAIzsC,KAAK4X,SAC9B,GAAIu4B,EAAa,CAChB,KAAOlwC,EAAQuX,KAAKvpB,OAASygD,GAC5BzuC,EAAQuX,KAAK0G,QAAQ,GAElBuuB,EAAIzsC,KAAKob,SAAWszB,GACvBzuC,EAAQuX,KAAKyG,OAAO,EAAGwuB,EAAIzsC,KAAKob,SAAWszB,OAEtC,CACN,KAAOzuC,EAAQuX,KAAKvpB,OAASygD,GAC5BzuC,EAAQuX,KAAKnpB,KAAK,GAEnB4R,EAAQuX,KAAKvpB,OAASygD,EAIxB,GAAIyB,EAAa,CAChB,MAAMC,EAAe1B,EAAWjC,EAAIzsC,KAAKob,SACzCqxB,EAAI7wB,IAAMntB,KAAKsgB,IAAI,EAAG09B,EAAI7wB,IAAMw0B,IAC5BA,EAAO,GAAK3D,EAAInE,aAAe,KAClCmE,EAAInE,aAAe75C,KAAKsgB,IAAI,EAAG09B,EAAInE,aAAe8H,IAEnD3D,EAAIzsC,KAAK+a,UAAYtsB,KAAKsgB,IAAI,EAAG09B,EAAIzsC,KAAK+a,UAAYq1B,GAEvD3D,EAAI7wB,IAAMntB,KAAKyB,IAAIu8C,EAAI7wB,IAAK8yB,EAAW,GACvCjC,EAAInE,aAAe75C,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAIw+C,EAAWjC,EAAItD,iBAAkBsD,EAAInE,eAC7EmE,EAAIzsC,KAAKgb,WAAavsB,KAAKyB,IAAIw+C,EAAUjC,EAAIzsC,KAAKgb,YAClDyxB,EAAIzsC,KAAK+a,UAAYtsB,KAAKyB,IAAIw+C,EAAWjC,EAAIzsC,KAAKgb,WAAYyxB,EAAIzsC,KAAK+a,WACvE0xB,EAAIzsC,KAAKob,SAAWszB,EACpBjC,EAAI9C,SAASC,UAEb/pC,KAAKsrC,aAKKkF,WAAyB9F,GACrC7wC,YAAY+yC,EAAmBr9B,EAAeiiB,GAC7CsZ,QAEA,MAAM2F,EAAoB7hD,KAAKyB,IAAItC,EAAOgF,YAAa65C,EAAIzsC,KAAKob,SAAWiW,GAE3E,GAAa,IADbA,EAAQif,EAAY7D,EAAIzsC,KAAKob,UAC7B,CAEA,IAAK,MAAMnb,KAAWwsC,EAAIzsC,KAAK4X,SAC9B,KAAO3X,EAAQuX,KAAKvpB,OAASqiD,GAC5BrwC,EAAQuX,KAAKyG,OAAO7O,EAAO,EAAG,GAGhCq9B,EAAIzsC,KAAKob,SAAWk1B,EAEpB7D,EAAI7wB,KAAOyV,EACXob,EAAInE,aAAe75C,KAAKyB,IAAIogD,EAAY7D,EAAItD,iBAAkBsD,EAAInE,aAAejX,GAC7Eob,EAAIzsC,KAAK+a,WAAa3L,EACzBq9B,EAAIzsC,KAAK+a,WAAasW,EACZob,EAAIzsC,KAAK+a,UAAY0xB,EAAIzsC,KAAKgb,YAAc5L,IACtDq9B,EAAIzsC,KAAKgb,YAAcqW,GAGxBob,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAIMoF,WAAyBhG,GACrC7wC,YAAY+yC,EAAmBr9B,EAAeiiB,GAC7CsZ,QAEA,IAAK,MAAM1qC,KAAWwsC,EAAIzsC,KAAK4X,SAC9B3X,EAAQuX,KAAKyG,OAAO7O,EAAOiiB,GACA,GAAvBpxB,EAAQuX,KAAKvpB,QAAagS,EAAQuX,KAAKnpB,KAAK,GAEjDo+C,EAAIzsC,KAAKob,SAAW3sB,KAAKsgB,IAAI,EAAG09B,EAAIzsC,KAAKob,SAAWiW,GAEpDob,EAAI7wB,IAAMntB,KAAKsgB,IAAI,EAAG09B,EAAI7wB,IAAMyV,GAEhCob,EAAInE,aAAe75C,KAAKsgB,IAAI,EAAG09B,EAAInE,aAAejX,GAC9Cob,EAAIzsC,KAAK+a,WAAa3L,EACzBq9B,EAAIzsC,KAAK+a,UAAYtsB,KAAKsgB,IAAI,EAAG09B,EAAIzsC,KAAK+a,UAAYsW,GAC5Cob,EAAIzsC,KAAK+a,UAAY0xB,EAAIzsC,KAAKgb,WAAa5L,IACrDq9B,EAAIzsC,KAAKgb,YAAcqW,GAExBob,EAAIzsC,KAAKgb,WAAavsB,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAIu8C,EAAIzsC,KAAKob,SAAWqxB,EAAIzsC,KAAK+a,UAAW0xB,EAAIzsC,KAAKgb,aAE5FyxB,EAAI9C,SAASC,UACb/pC,KAAKsrC,YAIMqF,WAA8BjG,GAC1C7wC,YAAY+yC,EAAmBv0B,EAAoBD,EAA0BD,EAAwBD,EAA8BD,EAAmBD,EAAoBM,GACzKwyB,QAKA8B,EAAIzsC,KAAKkY,WAAaA,EACtBu0B,EAAIzsC,KAAKiY,iBAAmBA,EAC5Bw0B,EAAIzsC,KAAKgY,eAAiBA,EAC1By0B,EAAIzsC,KAAK+X,qBAAuBA,EAChC00B,EAAIzsC,KAAK8X,UAAYA,EACrB20B,EAAIzsC,KAAK6X,WAAaA,EACtB40B,EAAIzsC,KAAKmY,WAAaA,EAEtBs0B,EAAI9C,SAASC,UACb/pC,KAAKsrC,YAKMsF,WAA2BlG,GACvC7wC,YAAY+yC,EAAmBiE,EAAyBC,GACvDhG,QAEA,IAAIiG,EAASnE,EAAIzsC,KAAK4X,SAAS84B,GAC/BjE,EAAIzsC,KAAK4X,SAAS84B,GAAmBjE,EAAIzsC,KAAK4X,SAAS+4B,GACvDlE,EAAIzsC,KAAK4X,SAAS+4B,GAAoBC,EAGtC,IAAK,IAAI3wC,EAAkBwsC,EAAIzsC,KAAKe,kBAAoB0rC,EAAIzsC,KAAKiB,kBAAmBhB,EAAUwsC,EAAIzsC,KAAK0b,kBAAmBzb,IACzH,IAAK,IAAIgsB,EAAwB,EAAGA,EAAgBwgB,EAAIzsC,KAAKub,sBAAuB0Q,IAAiB,CACpG,IAAI5b,EAAyBo8B,EAAIzsC,KAAK4X,SAAS3X,GAASqX,YAAY2U,GACpE,IAAK,IAAIj+B,EAAY,EAAGA,EAAIJ,EAAO4K,SAAUxK,IAAK,CACjD,IAAI6iD,EAAyBxgC,EAAWkD,YAAYvlB,IAAM2lB,EAAUoJ,WAAa0vB,EAAIzsC,KAAKe,kBAAoB,EAC1GsP,EAAWlP,YAAYnT,GAAK6iD,GAAiBH,EAChDrgC,EAAWlP,YAAYnT,GAAK2iD,EAAmBE,EAEvCxgC,EAAWlP,YAAYnT,GAAK6iD,GAAiBF,IACrDtgC,EAAWlP,YAAYnT,GAAK0iD,EAAkBG,IAMlDpE,EAAI9C,SAASC,UACb/pC,KAAKsrC,YAKM2F,WAA2BvG,GACvC7wC,YAAY+yC,EAAmBsE,EAA8BC,EAA8BC,GAE1F,GADAtG,QACI8B,EAAIzsC,KAAKe,mBAAqBgwC,GAAwBtE,EAAIzsC,KAAKiB,mBAAqB+vC,GAAwBvE,EAAIzsC,KAAK4a,iBAAmBq2B,EAAoB,CAC/J,MAAMC,EAAyB,GAE/B,SAASC,EAAYC,EAAkBC,EAAkBC,EAAkBC,EAAkBl6B,EAAgBnc,EAAkB8e,GAC9H,IAAK,IAAIhsB,EAAY,EAAGA,EAAIojD,EAAUpjD,IAAK,CAC1C,MAAMiS,EAAUjS,EAAIsjD,EACd1E,EAAa5+C,EAAIujD,EACvB,GAAIvjD,EAAIqjD,EACPH,EAAYjxC,GAAWwsC,EAAIzsC,KAAK4X,SAASg1B,OACnC,CACNsE,EAAYjxC,GAAW,IAAImX,EAC3B85B,EAAYjxC,GAASoX,OAASA,EAC9B,IAAK,IAAI/K,EAAY,EAAGA,EAAImgC,EAAIzsC,KAAKub,sBAAuBjP,IAAK,CAChE,MAAM+D,EAAyB,IAAI2B,EAAW9W,EAAS8e,GACjDrgB,EAAsB63C,GAAsBt2C,GAC5ChB,EAAiBT,EAAak1C,cAAch1C,GAClD0W,EAAW2O,eAAe9kB,EAAOO,SAAUS,EAAS8e,EAA0B,GAAnByyB,EAAIzsC,KAAKsb,QAAkC,GAAnBmxB,EAAIzsC,KAAKsb,OAAamxB,EAAIzsC,KAAKsb,QAAU,GAC5HjL,EAAWnW,OAASP,EACpBu3C,EAAYjxC,GAASqX,YAAYhL,GAAK+D,EAEvC,IAAK,IAAI/D,EAAY,EAAGA,EAAImgC,EAAIzsC,KAAKqb,mBAAoB/O,IACxD4kC,EAAYjxC,GAASsX,SAASjL,GAAK,IAAI6D,EAExC,IAAK,IAAI7D,EAAY,EAAGA,EAAImgC,EAAIzsC,KAAKob,SAAU9O,IAC9C4kC,EAAYjxC,GAASuX,KAAKlL,GAAK,IAMnC6kC,EAAYJ,EAAsBtE,EAAIzsC,KAAKe,kBAAmB,EAAG,EAAG,GAAG,GAAO,GAC9EowC,EAAYH,EAAsBvE,EAAIzsC,KAAKiB,kBAAmB8vC,EAAsBtE,EAAIzsC,KAAKe,kBAAmB,GAAG,GAAM,GACzHowC,EAAYF,EAAoBxE,EAAIzsC,KAAK4a,gBAAiBo2B,EAAuBD,EAAsBtE,EAAIzsC,KAAKe,kBAAoB0rC,EAAIzsC,KAAKiB,kBAAmB,GAAG,GAAO,GAE1KwrC,EAAIzsC,KAAKe,kBAAoBgwC,EAC7BtE,EAAIzsC,KAAKiB,kBAAoB+vC,EAC7BvE,EAAIzsC,KAAK4a,gBAAkBq2B,EAE3B,IAAK,IAAIhxC,EAAkB,EAAGA,EAAUwsC,EAAIzsC,KAAK0b,kBAAmBzb,IACnEwsC,EAAIzsC,KAAK4X,SAAS3X,GAAWixC,EAAYjxC,GAE1CwsC,EAAIzsC,KAAK4X,SAAS3pB,OAASw+C,EAAIzsC,KAAK0b,kBAEpC+wB,EAAIxsC,QAAUxR,KAAKyB,IAAIu8C,EAAIxsC,QAAS8wC,EAAuBC,EAAuBC,EAAqB,GAGvG,IAAK,IAAIhxC,EAAkBwsC,EAAIzsC,KAAKe,kBAAoB0rC,EAAIzsC,KAAKiB,kBAAmBhB,EAAUwsC,EAAIzsC,KAAK0b,kBAAmBzb,IACzH,IAAK,IAAIgsB,EAAwB,EAAGA,EAAgBwgB,EAAIzsC,KAAKub,sBAAuB0Q,IACnF,IAAK,IAAIvY,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAAO,CAEvD,IAAIrD,EAAyBo8B,EAAIzsC,KAAK4X,SAAS3X,GAASqX,YAAY2U,GAChEpP,EAAoBxM,EAAWkD,YAAYG,GAC3CuG,EAAqB5J,EAAWlP,YAAYuS,IAASmJ,GAAalJ,EAAUoJ,WAAc0vB,EAAIzsC,KAAKe,kBAAoB,GAGvHkZ,GAAcwyB,EAAIzsC,KAAKe,mBAAsB8b,GAAalJ,EAAUmJ,aACvED,EAAYlJ,EAAUC,OACtBvD,EAAWkD,YAAYG,GAAOC,EAAUC,OACxCvD,EAAWoD,YAAYC,GAAOG,EAAWC,SAEtCmG,GAAcwyB,EAAIzsC,KAAKe,kBAAoB0rC,EAAIzsC,KAAKiB,mBAAsB4b,GAAalJ,EAAUoJ,aACpG1M,EAAWkD,YAAYG,GAAOC,EAAUC,OACxCvD,EAAWoD,YAAYC,GAAOG,EAAWC,SAO7C24B,EAAI9C,SAASC,UAEbhqC,EAAYyG,cAEZxG,KAAKsrC,aAKKsG,WAAyBlH,GACrC7wC,YAAY+yC,EAAmBI,EAAoB6E,EAAgBC,GAAoB,GACtFhH,QACA,MAAMiC,EAAqBH,EAAIxsC,QACzB+vB,EAAiByc,EAAI7wB,IAC3B6wB,EAAIxsC,QAAU4sC,EACdJ,EAAI7wB,IAAM81B,EACLC,IACJlF,EAAInE,aAAe75C,KAAKyB,IAAIu8C,EAAI7wB,IAAKntB,KAAKsgB,IAAI09B,EAAI7wB,KAAO6wB,EAAItD,iBAAmB,GAAIsD,EAAInE,gBAEzFmE,EAAI9C,SAASC,UACTgD,GAAcC,GAAc7c,GAAU0hB,GACzC7xC,KAAKsrC,YAKKyG,WAAuBrH,GACnC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAWrV,UACpB0zC,IACf7uC,KAAKsrC,KACL96B,EAAWrV,SAAW0zC,EACtBr+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,kBAKHiI,WAAoBtH,GAChC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAWzV,OACpB8zC,IACf7uC,KAAKsrC,KACL96B,EAAWzV,MAAQ8zC,EACnBr+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,kBAKHkI,WAAsBvH,GAClC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAWpV,SACpByzC,IACfr+B,EAAWpV,QAAUyzC,EACrBr+B,EAAWgC,aAAezkB,EAAO8G,SAAS2b,EAAWpV,SAASzK,UAC9D6f,EAAWkC,aAAe3kB,EAAO8G,SAAS2b,EAAWpV,SAASrG,WAC9Dyb,EAAWiC,aAAe,GAC1BjC,EAAWmC,YAAc5kB,EAAO8G,SAAS2b,EAAWpV,SAAStG,KAC7D0b,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKK4G,WAA2BxH,GACvC7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAC9E,IAAI0D,EAAsB5hC,EAAWpV,QACrCwxC,EAAI/T,MAAMwZ,SAASr+B,EAAWyF,gBAAiBmzB,EAAIxsC,QAASwsC,EAAI8B,wBAEhE9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAYuD,GAAerkD,EAAO8G,SAASzG,SAC1DoiB,EAAWgC,aAAeq8B,EAAW,GACrCr+B,EAAWpV,QAAUrN,EAAO8G,SAASzG,OACrCw+C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKgH,WAA2B5H,GACvC7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAC9E,IAAI0D,EAAsB5hC,EAAWpV,QACrCwxC,EAAI/T,MAAMwZ,SAASr+B,EAAW2F,gBAAiBizB,EAAIxsC,QAASwsC,EAAI8B,wBAEhE9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAYuD,GAAerkD,EAAO8G,SAASzG,SAC1DoiB,EAAWiC,aAAeo8B,EAC1Br+B,EAAWpV,QAAUrN,EAAO8G,SAASzG,OACrCw+C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKiH,WAA2B7H,GACvC7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAC9E,IAAI0D,EAAsB5hC,EAAWpV,QACrCwxC,EAAI/T,MAAMwZ,SAASr+B,EAAW4F,gBAAiBgzB,EAAIxsC,QAASwsC,EAAI8B,wBAEhE9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAYuD,GAAerkD,EAAO8G,SAASzG,SAC1DoiB,EAAWkC,aAAem8B,EAC1Br+B,EAAWpV,QAAUrN,EAAO8G,SAASzG,OACrCw+C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKkH,WAA0B9H,GACtC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACxEyD,EAAmB3hC,EAAWmC,YACpC,IAAIy/B,EAAsB5hC,EAAWpV,QAErCwxC,EAAI9C,SAASC,UACToI,GAAYtD,GAAYuD,GAAerkD,EAAO8G,SAASzG,SAC1DoiB,EAAWmC,YAAck8B,EACzBr+B,EAAWpV,QAAUrN,EAAO8G,SAASzG,OACrCw+C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKmH,WAA4B/H,GACxC7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QAC+B8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACnE57B,cAAgB+7B,EAC3BjC,EAAI/T,MAAMwZ,SAASr+B,EAAW6F,iBAAkB+yB,EAAIxsC,QAASwsC,EAAI8B,wBAEjE9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpBoH,WAA6BhI,GACzC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACxEyD,EAAW3hC,EAAWuC,eAE5B65B,EAAI9C,SAASC,UACToI,GAAYtD,IACfr+B,EAAWuC,eAAiB87B,EAC5B7uC,KAAKsrC,aAKKqH,WAAgCjI,GAC5C7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACxEyD,EAAW3hC,EAAWwC,kBAE5B45B,EAAI9C,SAASC,UACToI,GAAYtD,IACfr+B,EAAWwC,kBAAoB67B,EAC/B7uC,KAAKsrC,aAKKsH,WAAkClI,GAC9C7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACxEyD,EAAW3hC,EAAWyC,oBAE5B25B,EAAI9C,SAASC,UACToI,GAAYtD,IACfr+B,EAAWyC,oBAAsB47B,EACjC7uC,KAAKsrC,aAKKuH,WAAuBnI,GACnC7wC,YAAY+yC,EAAmBp8B,EAAwB0D,GACtD42B,QACA52B,EAAamN,sBACb7Q,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,YAIMwH,WAAwBpI,GACpC7wC,YAAY+yC,EAAmBp8B,EAAwB+C,GACtDu3B,QACAv3B,EAAc8N,sBACd7Q,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,YAIMyH,WAA8BrI,GAC1C7wC,YAAY+yC,EAAmBoG,EAAmBnE,GACjD/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAWgD,iBAAiBw/B,IACrCnE,IACfr+B,EAAWgD,iBAAiBw/B,GAAanE,EACzCr+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,OAKR,MAAM2H,WAA+BvI,GAEpC7wC,YAAoBysC,GACnBwE,QADmB9qC,KAAAsmC,EAAAA,EAEnBtmC,KAAKkzC,GAAclzC,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAG9E70C,SACDmG,KAAKqrC,WACTrrC,KAAKkzC,GAAY74C,OAAS2F,KAAKkzC,GAAYp+C,KAC3CkL,KAAKsmC,EAAKwD,SAASC,kBAKToJ,WAAyBF,GACrCp5C,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,MAAM8B,GACN5sC,KAAKkzC,GAAYl3C,WAAa6yC,EAC9BjC,EAAI/T,MAAMwZ,SAASr+B,EAAWuF,cAAeqzB,EAAIxsC,QAASwsC,EAAI8B,wBAC9D9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpB8H,WAA4B1I,GACxC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAWvU,eACpB4yC,IACfr+B,EAAWvU,cAAgB4yC,EAC3Br+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKK+H,WAA2BJ,GACvCp5C,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,MAAM8B,GACN5sC,KAAKkzC,GAAY3gC,aAAes8B,EAChCjC,EAAI/T,MAAMwZ,SAASr+B,EAAWgF,aAAc4zB,EAAIxsC,QAASwsC,EAAI8B,wBAC7D9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpBgI,WAA8BL,GAC1Cp5C,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,MAAM8B,GACN5sC,KAAKkzC,GAAYj4C,gBAAkB4zC,EACnCjC,EAAI/T,MAAMwZ,SAASr+B,EAAWiF,cAAe2zB,EAAIxsC,QAASwsC,EAAI8B,wBAC9D9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpBiI,WAA6B7I,GACzC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAWtV,gBACpB2zC,IACfr+B,EAAWtV,eAAiB2zC,EAC5Br+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKkI,WAAwB9I,GACpC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAWlV,WACpBuzC,IACfr+B,EAAWlV,UAAYuzC,EACvBr+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKmI,WAA2B/I,GACvC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAWjV,cACpBszC,IACfr+B,EAAWjV,aAAeszC,EAC1Br+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKoI,WAA+BhJ,GAC3C7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAW/U,kBACpBozC,IACfr+B,EAAW/U,iBAAmBozC,EAC9Br+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKqI,WAA+BjJ,GAC3C7wC,YAAY+yC,EAAmBgH,EAAuB/E,GACrD/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAW9U,UAAUk4C,GAAeh4C,UAC7CizC,IACfr+B,EAAW9U,UAAUk4C,GAAeh4C,SAAWizC,EAC/Cr+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKuI,WAAgCnJ,GAC5C7wC,YAAY+yC,EAAmBgH,EAAuB/E,GACrD/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBACrDl+B,EAAW9U,UAAUk4C,GAAej4C,WAC7CkzC,IACfr+B,EAAW9U,UAAUk4C,GAAej4C,UAAYkzC,EAChDr+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKwI,WAAgCb,GAC5Cp5C,YAAY+yC,EAAmBgH,EAAuBzB,EAAkBtD,GACvE/D,MAAM8B,GACN5sC,KAAKkzC,GAAYx3C,UAAUk4C,GAAejjD,UAAYk+C,EAGtDjC,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpByI,WAAgCd,GAC5Cp5C,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,MAAM8B,GACN5sC,KAAKkzC,GAAY13C,kBAAoBqzC,EAGrCjC,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpB0I,WAAoCtJ,GAChD7wC,YAAY+yC,EAAmBqH,GAE9B,GADAnJ,QACI8B,EAAIzsC,KAAKub,uBAAyBu4B,EAA0B,CAC/D,IAAK,IAAI7zC,EAAkB,EAAGA,EAAUwsC,EAAIzsC,KAAK0b,kBAAmBzb,IAAW,CAC9E,MAAM8zC,EAA+BtH,EAAIzsC,KAAK4X,SAAS3X,GAASqX,YAAYm1B,EAAIzsC,KAAKub,sBAAwB,GACvGy4B,EAA4BD,EAAiBhxB,eACnD,IAAK,IAAIzW,EAAYmgC,EAAIzsC,KAAKub,sBAAuBjP,EAAIwnC,EAA0BxnC,IAAK,CACvF,MAAM2nC,EAA4B,IAAIjiC,EAAWy6B,EAAIzsC,KAAK0c,kBAAkBzc,GAAUwsC,EAAIzsC,KAAK2c,gBAAgB1c,IACtF,GAArB8zC,EAAiBp/C,KAEpBs/C,EAAcv/B,gBAAe,GAAqB,GAAO,GAC1B,GAArBq/B,EAAiBp/C,KAE3Bs/C,EAAcv/B,gBAAe,GAA0B,GAAM,GAE7Du/B,EAAcj1B,eAAeg1B,EAAsBvH,EAAIzsC,KAAK0c,kBAAkBzc,GAAUwsC,EAAIzsC,KAAK2c,gBAAgB1c,GAA6B,GAAnBwsC,EAAIzsC,KAAKsb,QAAkC,GAAnBmxB,EAAIzsC,KAAKsb,OAAamxB,EAAIzsC,KAAKsb,QAAU,GAE7LmxB,EAAIzsC,KAAK4X,SAAS3X,GAASqX,YAAYhL,GAAK2nC,EAE7CxH,EAAIzsC,KAAK4X,SAAS3X,GAASqX,YAAYrpB,OAAS6lD,EAChD,IAAK,IAAIxnC,EAAY,EAAGA,EAAImgC,EAAIzsC,KAAKqb,mBAAoB/O,IACpDmgC,EAAIzsC,KAAK4X,SAAS3X,GAASsX,SAASjL,GAAG+D,YAAcyjC,IACxDrH,EAAIzsC,KAAK4X,SAAS3X,GAASsX,SAASjL,GAAG+D,WAAa,GAKvDo8B,EAAIzsC,KAAKub,sBAAwBu4B,EAGjC,IAAK,IAAI7zC,EAAkBwsC,EAAIzsC,KAAKe,kBAAoB0rC,EAAIzsC,KAAKiB,kBAAmBhB,EAAUwsC,EAAIzsC,KAAK0b,kBAAmBzb,IACzH,IAAK,IAAIgsB,EAAwB,EAAGA,EAAgBwgB,EAAIzsC,KAAKub,sBAAuB0Q,IACnF,IAAK,IAAIvY,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAAO,CAEvD,IAAIrD,EAAyBo8B,EAAIzsC,KAAK4X,SAAS3X,GAASqX,YAAY2U,GACxC5b,EAAWmD,eAAeE,IAGjC+4B,EAAIzsC,KAAKub,wBAC7BlL,EAAWmD,eAAeE,GAAO,EACjCrD,EAAWoD,YAAYC,GAAO,GAOlC+4B,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKK+I,WAAkB3J,GAC9B7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACI8B,EAAIzsC,KAAKvC,KAAOixC,IACnBjC,EAAIzsC,KAAKvC,IAAMixC,EACfjC,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKgJ,WAAmB5J,GAC/B7wC,YAAoBysC,EAA2BoL,EAAyB6C,EAA0B9C,EAAyBhB,GAC1H3F,QADmB9qC,KAAAsmC,EAAAA,EAA2BtmC,KAAA0xC,SAAAA,EAAyB1xC,KAAAu0C,UAAAA,EAA0Bv0C,KAAAyxC,SAAAA,EAAyBzxC,KAAAywC,UAAAA,EAE1HzwC,KAAKsmC,EAAKnmC,KAAK+a,UAAYlb,KAAKyxC,SAChCzxC,KAAKsmC,EAAKnmC,KAAKgb,WAAanb,KAAKywC,UACjCzwC,KAAKsmC,EAAKwD,SAASC,UACf/pC,KAAK0xC,UAAY1xC,KAAKyxC,UAAYzxC,KAAKu0C,WAAav0C,KAAKywC,WAC5DzwC,KAAKsrC,YAKKkJ,WAAyB5J,GAKrC/wC,YAAY+yC,EAAmBn8B,EAAYnB,EAAetgB,EAAeylD,GAAoB,GAC5F3J,MAAM2J,GACNz0C,KAAKsmC,EAAOsG,EACZ5sC,KAAK4tC,GAAQn9B,EACbzQ,KAAK00C,GAASplC,EACdtP,KAAKyO,EAASzf,EACdgR,KAAKsrC,KACLtrC,KAAK0rC,OAGI7xC,KACTmG,KAAK4tC,GAAMl+B,QAAQ0O,OAAOpe,KAAKyO,EAAQ,EAAGzO,KAAK00C,IAC/C10C,KAAKsmC,EAAKwD,SAASC,UAGVlwC,KACTmG,KAAK4tC,GAAMl+B,QAAQ0O,OAAOpe,KAAKyO,EAAQ,GACvCzO,KAAKsmC,EAAKwD,SAASC,iBAIR4K,WAAqBjK,GACjC7wC,YAAY+yC,EAA0BuF,EAAkBtD,GACvD/D,QADqC9qC,KAAAmyC,SAAAA,EAErCvF,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASoX,OAASq3B,EACxCjC,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpBsJ,WAAqBzJ,GACjCtxC,YAAY+yC,EAAmBiC,GAC9B/D,QAEI8B,EAAIzsC,KAAKsb,QAAUozB,IACtBjC,EAAIzsC,KAAKsb,OAASozB,EAClBjC,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKuJ,WAAoB1J,GAChCtxC,YAAY+yC,EAAmB9wB,EAAkBvL,EAAcukC,EAAwBC,EAAsBC,GAC5GlK,QAGA9qC,KAAKytC,OAAO,IAAIwH,GAAmBrI,EAAK9wB,EAASg5B,EAAgBC,EAAc,MAAM,IAGrF,IAAIG,EAA6B,EACjC,GAAKtI,EAAIzsC,KAAK2c,gBAAgB8vB,EAAIxsC,SAYjC80C,EAAqBp5B,EAAQvL,MAAMniB,YAXnC,IAAK,IAAID,EAAY,EAAGA,EAAI2tB,EAAQvL,MAAMniB,OAAQD,IACjD,GAAI2tB,EAAQvL,MAAMpiB,GAAGohB,MAAQulC,EAAgB,CAC5C,GAAIh5B,EAAQvL,MAAMpiB,GAAGqhB,IAAMslC,EAAgB,MAAM,IAAIllD,MAErDslD,EAAqB/mD,EAAI,OACnB,GAAI2tB,EAAQvL,MAAMpiB,GAAGohB,MAAQwlC,EACnC,MAAM,IAAInlD,MAQb,KAAOklD,EAAiBC,GAAc,CACrC,IAAK,MAAM/vB,KAAczU,EAAO,CAC/B,MAAMyV,EAAoBhB,EAAkB,MAAI8vB,EAC1C7uB,EAAkBjB,EAAgB,IAAI8vB,EAC5C,GAAI9uB,GAAa+uB,EAAc,MAC/B,MAAMtkC,EAAa,IAAIpB,EAAK2V,EAAoB,QAAE,GAAIgB,EAAWC,EAASjB,EAAiB,KAAE,GAAW,QAAG,GAC3GvU,EAAKf,QAAQthB,OAAS,EACtB,IAAK,MAAMkhB,KAAS0V,EAAoB,QACvCvU,EAAKf,QAAQlhB,KAAK8gB,GAEnBmB,EAAKd,KAAKvhB,OAAS,EACnB,IAAK,MAAM+hB,KAAO6U,EAAiB,KAClCvU,EAAKd,KAAKnhB,KAAKugB,EAAYoB,EAAIhV,SAAUgV,EAAInB,KAAMmB,EAAItc,SAExDioB,EAAQvL,MAAM6N,OAAO82B,IAAsB,EAAGzkC,GAC1CA,EAAKjB,IAAMulC,GACd/0C,KAAKytC,OAAO,IAAI0H,GAAiBvI,EAAKn8B,EAAMA,EAAKlB,MAAOwlC,IAI1DD,GAAkBE,EAGnBpI,EAAI9C,SAASC,UACb/pC,KAAKsrC,YAIM8J,WAA8BjK,GAC1CtxC,YAAY+yC,EAAmBp8B,EAAwB6kC,GACtDvK,QACAt6B,EAAW2O,eAAek2B,EAAgBA,EAAuB,OAAGA,EAAsB,OAAG,GAAO,GACpGzI,EAAI9C,SAASC,UACb/pC,KAAKsrC,YAIMgK,WAAgC5K,GAC5C7wC,YAAY+yC,EAAmBiC,EAAkB/yB,GAChDgvB,QACIhvB,EAAQtL,YAAcq+B,IACzB/yB,EAAQtL,WAAaq+B,EACrBjC,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKiK,WAAyB7K,GACrC7wC,YAAY+yC,EAAmB/4B,EAAa7kB,GAC3C87C,QAEA,IAAI0K,EAAkB1hC,EAAUC,OAC5B3T,EAAkB,EAClBoQ,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAE/D,GAAT1/C,EACHwmD,EAAO1hC,EAAUgZ,UAEA,GAAT99B,EACRwmD,EAAO1hC,EAAUC,OAET/kB,EAAQ,EAAI49C,EAAIzsC,KAAKe,mBAC7Bs0C,EAAO1hC,EAAUmJ,WACjB7c,EAAUpR,EAAQ,IAGlBwmD,EAAO1hC,EAAUoJ,WACjB9c,EAAUpR,EAAQ49C,EAAIzsC,KAAKe,kBAAoB,GAG5CsP,EAAWkD,YAAYG,IAAQ2hC,GAAQhlC,EAAWlP,YAAYuS,IAAQzT,IAEzEoQ,EAAWkD,YAAYG,GAAO2hC,EAC9BhlC,EAAWlP,YAAYuS,GAAOzT,EAE9BwsC,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKmK,WAA4B/K,GACxC7wC,YAAY+yC,EAAmB/4B,EAAa6hC,GAC3C5K,QAEA,IAAIt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAExEl+B,EAAWmD,eAAeE,IAAQ6hC,IACrCllC,EAAWmD,eAAeE,GAAO6hC,EAEjC9I,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKqK,WAAyBjL,GACrC7wC,YAAY+yC,EAAmB/4B,EAAa+hC,GAC3C9K,QAEA,IAAIhwB,EAAsB9G,EAAWC,QACjCzD,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAE5E,OAAQkH,GACP,IAAK,cACJ96B,EAAU9G,EAAW0E,cACrB,MACD,IAAK,QACJoC,EAAU9G,EAAW2E,SACrB,MACD,IAAK,SACJmC,EAAU9G,EAAW4E,UACrB,MACD,IAAK,WACJkC,EAAU9G,EAAW6E,WACrB,MACD,IAAK,SACJiC,EAAU9G,EAAW8E,aACrB,MACD,IAAK,MACJgC,EAAU9G,EAAW+E,OACrB,MACD,IAAK,aACJ+B,EAAU9G,EAAWgF,aACrB,MACD,IAAK,cACJ8B,EAAU9G,EAAWiF,cACrB,MACD,IAAK,cACJ6B,EAAU9G,EAAWkF,aACrB,MACD,IAAK,cACJ4B,EAAU9G,EAAWmF,aACrB,MACD,IAAK,cACJ2B,EAAU9G,EAAWoF,aACrB,MACD,IAAK,cACJ0B,EAAU9G,EAAWqF,aACrB,MACD,IAAK,cACJyB,EAAU9G,EAAWsF,cACrB,MACD,IAAK,cACJwB,EAAU9G,EAAWuF,cACrB,MACD,IAAK,SACJuB,EAAU9G,EAAWwF,UACrB,MACD,IAAK,gBACJsB,EAAU9G,EAAWyF,gBACrB,MACD,IAAK,gBACJqB,EAAU9G,EAAW2F,gBACrB,MACD,IAAK,gBACJmB,EAAU9G,EAAW4F,gBACrB,MACD,IAAK,YACJkB,EAAU9G,EAAW8F,YACrB,MACD,IAAK,iBACJgB,EAAU9G,EAAW6F,iBACrB,MACD,IAAK,iBACJiB,EAAU9G,EAAW+F,iBACrB,MACD,IAAK,cACJe,EAAU9G,EAAW0F,cAOvB,GAAIlJ,EAAWoD,YAAYC,IAAQiH,EAAS,CAE3CtK,EAAWoD,YAAYC,GAAOiH,EAG9B,IAAIR,EAAcsyB,EAAIzsC,KAAKsY,WAAWjX,IAAIsZ,GAE1C,IAAK,IAAI3sB,EAAY,EAAGA,EAAIy+C,EAAIzsC,KAAKqb,mBAAoBrtB,IAAK,CAC7D,MAAM2tB,EAAmB8wB,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASsX,SAASvpB,GACjE,GAAI2tB,EAAQtL,YAAco8B,EAAI8B,uBAC7B,IAAK,IAAIjiC,EAAY,EAAGA,EAAIqP,EAAQvL,MAAMniB,OAAQqe,IAAK,CACtD,MAAMgE,EAAaqL,EAAQvL,MAAM9D,GACjC,GAAIgE,EAAKf,QAAQ,IAAM3hB,EAAO4K,SAAWkb,EAAM,EAC9C,IAAK,IAAIoR,EAAY,EAAGA,EAAIxU,EAAKd,KAAKvhB,OAAQ62B,IAAK,CAClD,MAAM9U,EAAeM,EAAKd,KAAKsV,GAC3B9U,EAAItc,OAASymB,IAChBnK,EAAItc,OAASymB,KAOnBsyB,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKuK,WAAiCnL,GAC7C7wC,YAAY+yC,EAAmBiC,GAE9B,GADA/D,QACI8B,EAAIzsC,KAAKqb,oBAAsBqzB,EAAU,CAC5C,IAAK,IAAI1gD,EAAY,EAAGA,EAAIy+C,EAAIzsC,KAAK0b,kBAAmB1tB,IAAK,CAC5D,MAAM2nD,EAAwBlJ,EAAIzsC,KAAK4X,SAAS5pB,GAAGwpB,KAC7Co+B,EAA6BnJ,EAAIzsC,KAAK4X,SAAS5pB,GAAGupB,SACxD,IAAK,IAAIjL,EAAY,EAAGA,EAAIqpC,EAAY1nD,OAAQqe,IAC3CqpC,EAAYrpC,GAAKoiC,IAAUiH,EAAYrpC,GAAK,GAEjD,IAAK,IAAIA,EAAYspC,EAAgB3nD,OAAQqe,EAAIoiC,EAAUpiC,IAC1DspC,EAAgBtpC,GAAK,IAAI6D,EAE1BylC,EAAgB3nD,OAASygD,EAE1BjC,EAAIzsC,KAAKqb,mBAAqBqzB,EAC9BjC,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKK0K,WAAkCpL,GAS9C/wC,YAAY+yC,EAAmBxsC,EAAiB2b,GAC/C+uB,OAAM,GALC9qC,KAAAi2C,GAAkC,KAMzC,MAAM91C,EAAaysC,EAAIzsC,KACvB,GAAwC,GAApCA,EAAK4X,SAAS3X,GAASuX,KAAKoE,GAAW,OAE3C/b,KAAKsmC,EAAOsG,EACZ5sC,KAAKk2C,GAAOn6B,EACZ/b,KAAKm2C,GAAW/1C,EAChBJ,KAAKo2C,GAAmBj2C,EAAKqb,mBAC7Bxb,KAAKq2C,GAAmBl2C,EAAKqb,mBAE7B,IAAI86B,EAAuC,KACvCC,EAAkC,KACtC,IAAK,IAAIjxB,EAAuB,EAAGA,GAAgBnlB,EAAKqb,mBAAoB8J,IAAgB,CAC3F,IAAIkxB,GAAO,EACX,IAAK,IAAIC,EAAmB,EAAGA,EAAWt2C,EAAKob,SAAUk7B,IACxD,GAAIt2C,EAAK4X,SAAS3X,GAASuX,KAAK8+B,IAAanxB,EAAc,CAC1DkxB,GAAO,EACP,MAGF,GAAIA,EAAM,SACc,MAApBD,IACHA,EAAmBjxB,GAGpB,GAA4B,GADHnlB,EAAK4X,SAAS3X,GAASsX,SAAS4N,EAAe,GAC5D/U,MAAMniB,OAAa,CAC9BkoD,EAAwBhxB,EACxB,OAIF,GAA6B,MAAzBgxB,EACHt2C,KAAK02C,GAAgBJ,OACf,GAAIn2C,EAAKqb,mBAAqBrb,EAAKob,SACzCvb,KAAKq2C,GAAmBl2C,EAAKqb,mBAAqB,EAClDxb,KAAK02C,GAAgBv2C,EAAKqb,mBAAqB,MACzC,CAAA,GAAwB,MAApB+6B,EAIV,MAAM,IAAI3mD,MAHVoQ,KAAK02C,GAAgBH,EACrBv2C,KAAKi2C,GAAmB91C,EAAK4X,SAAS3X,GAASsX,SAAS6+B,EAAmB,GAAGhmC,MAK/EvQ,KAAKsrC,KACLtrC,KAAKirC,KAGIpxC,KACT,MAAMsG,EAAaH,KAAKsmC,EAAKnmC,KAC7B,IAAK,IAAIsM,EAAYtM,EAAKqb,mBAAoB/O,EAAIzM,KAAKq2C,GAAkB5pC,IACxE,IAAK,IAAIte,EAAY,EAAGA,EAAIgS,EAAK0b,kBAAmB1tB,IACnDgS,EAAK4X,SAAS5pB,GAAGupB,SAASjL,GAAK,IAAI6D,EAGrCnQ,EAAKqb,mBAAqBxb,KAAKq2C,GACNl2C,EAAK4X,SAAS/X,KAAKm2C,IAAUz+B,SAAS1X,KAAK02C,GAAgB,GAC5EnmC,MAAQ,GAChBpQ,EAAK4X,SAAS/X,KAAKm2C,IAAUx+B,KAAK3X,KAAKk2C,IAAQl2C,KAAK02C,GACpD12C,KAAKsmC,EAAKwD,SAASC,UAGVlwC,KACT,MAAMsG,EAAaH,KAAKsmC,EAAKnmC,KACvB2b,EAAmB3b,EAAK4X,SAAS/X,KAAKm2C,IAAUz+B,SAAS1X,KAAK02C,GAAgB,GACvD,MAAzB12C,KAAKi2C,KAA0Bn6B,EAAQvL,MAAQvQ,KAAKi2C,IACxD91C,EAAK4X,SAAS/X,KAAKm2C,IAAUx+B,KAAK3X,KAAKk2C,IAAQ,EAC/C,IAAK,IAAI/nD,EAAY,EAAGA,EAAIgS,EAAK0b,kBAAmB1tB,IACnDgS,EAAK4X,SAAS5pB,GAAGupB,SAAStpB,OAAS4R,KAAKo2C,GAEzCj2C,EAAKqb,mBAAqBxb,KAAKo2C,GAC/Bp2C,KAAKsmC,EAAKwD,SAASC,iBAIR4M,WAAsBhJ,GAClC9zC,YAAY+yC,EAA0Bn8B,EAAYX,EAAkB8mC,GACnE9L,MAAM8B,EAAKn8B,GAEXmmC,GAAe52C,KAAK6tC,GACpB,MAAMgJ,EAAuB72C,KAAKiuC,GAASn+B,GAAUd,KAC/C8nC,EAAoBloD,KAAKyB,IAAIwmD,EAAcD,GAC3CG,EAAkBnoD,KAAKsgB,IAAI2nC,EAAcD,GAC/C,IAAII,GAAkB,EACtB,IAAK,IAAI7oD,EAAY,EAAGA,EAAI6R,KAAKiuC,GAAS7/C,OAAQD,IAAK,CACtD,MAAM8oD,EAAkBxmC,EAAKd,KAAKxhB,GAC5B6gB,EAAeioC,EAAOjoC,KACxBA,EAAO8nC,EACV92C,KAAKkuC,GAAS1/C,KAAKugB,EAAYkoC,EAAO97C,SAAU6T,EAAMioC,EAAOpjD,SACnDmb,EAAO+nC,IACZC,IACJh3C,KAAKkuC,GAAS1/C,KAAKugB,EAAY/O,KAAKiuC,GAASn+B,GAAU3U,SAAUy7C,EAAa52C,KAAKiuC,GAASn+B,GAAUjc,SACtGmjD,GAAS,GAEVh3C,KAAKkuC,GAAS1/C,KAAKugB,EAAYkoC,EAAO97C,SAAU6T,EAAMioC,EAAOpjD,UAG1DmjD,GACJh3C,KAAKkuC,GAAS1/C,KAAKugB,EAAY/O,KAAKiuC,GAASn+B,GAAU3U,SAAUy7C,EAAa52C,KAAKiuC,GAASn+B,GAAUjc,SAGvGmM,KAAKk3C,YAIMC,WAAwBxJ,GACpC9zC,YAAY+yC,EAA0Bn8B,EAAY2mC,EAAmBC,EAAiBC,EAAgB94B,GACrGssB,MAAM8B,EAAKn8B,GAEX2mC,GAAap3C,KAAK6tC,GAClBwJ,GAAWr3C,KAAK6tC,GAChByJ,GAAU7mC,EAAKf,QAAQ8O,GAEvB,IAKIrwB,EACAopD,EACAC,EACAhpD,EARAipD,GAAoB,EACpBC,GAAkB,EAClBC,EAAuB,EACvBC,EAAqB,EACrBC,GAAmB,EAgBvB,IAXIR,EAAUD,GACbjpD,EAAI,EACJopD,EAAY,EACZC,EAAO/mC,EAAKd,KAAKvhB,OACjBI,EAAQghD,IAAoBxvC,KAAKkuC,GAAS1/C,KAAKghD,MAE/CrhD,EAAIsiB,EAAKd,KAAKvhB,OAAS,EACvBmpD,GAAa,EACbC,GAAQ,EACRhpD,EAAQghD,IAAoBxvC,KAAKkuC,GAAS7vB,QAAQmxB,KAE5CrhD,GAAKqpD,EAAMrpD,GAAKopD,EAAW,CACjC,MAAMN,EAAkBxmC,EAAKd,KAAKxhB,GAC5B6gB,EAAeioC,EAAOjoC,KAC5B,OACC,GAAKyoC,EAYE,CAAA,GAAKC,EAWL,CACN,GAAI1oC,EAAOuoC,GAAaF,EAAUE,EACjC,MAEIN,EAAO97C,UAAYw8C,IAAcE,GAAU,GAC/CrpD,EAAKugB,EAAY8oC,EAAUP,EAASL,EAAO97C,SAAU6T,EAAMioC,EAAOpjD,SAClE,MAZD,GAJImb,EAAOuoC,GAAaF,EAAUE,IACjCI,EAAeV,EAAO97C,SACtBy8C,EAAaX,EAAOpjD,QAEjBmb,EAAOuoC,EAAYF,EAAUE,EAChC,MAEA/oD,EAAKugB,EAAYuoC,EAAQD,EAASO,IAClCF,GAAS,MArBI,CAKd,GAJI1oC,EAAOuoC,GAAaH,EAAYG,IACnCI,EAAeV,EAAO97C,SACtBy8C,EAAaX,EAAOpjD,QAEjBmb,EAAOuoC,EAAYH,EAAYG,EAAW,CAC7C/oD,EAAKugB,EAAYkoC,EAAO97C,SAAU6T,EAAMioC,EAAOpjD,SAC/C,MAEArF,EAAKugB,EAAY4oC,EAAcP,EAAWQ,IAC1CH,GAAW,GAwBVC,GACJlpD,EAAKugB,EAAYuoC,EAAQD,EAASO,IAGnC53C,KAAKk3C,YAIMY,WAA4BvM,GACxC1xC,YAAY+yC,EAAmB9wB,GAC9BgvB,QACA,MAAMiN,EAAsBhqD,EAAOqF,aAAerF,EAAOwF,QAAQq5C,EAAIzsC,KAAKsb,QAAQjoB,aAE5EwkD,EAA4C,SAAUC,GAC3D,IAAIC,EAA8BnqD,EAAOwF,QAAQq5C,EAAIzsC,KAAKsb,QAAQhoB,kBAClE,GAAkB,MAAdykD,EAAoB,CACvB,MAAMC,EAAoBvpD,KAAKsU,MAAM+0C,EAAUlqD,EAAOqF,cAAgBrF,EAAOqF,aACvE65B,EAAoBgrB,EAAUE,EACpC,IAAIC,EAAkBD,EACtB,IAAK,MAAME,KAAaH,EAAY,CACnC,KAAIjrB,GAAaorB,GAGhB,MAFAD,GAAWL,EAKb,OAAOK,EAEP,OAAOxpD,KAAKmb,MAAMkuC,EAAUF,GAAeA,GAI7C,IAAI5pD,EAAY,EAChB,KAAOA,EAAI2tB,EAAQvL,MAAMniB,QAAQ,CAChC,MAAMqiB,EAAaqL,EAAQvL,MAAMpiB,GAC7B6pD,EAAavnC,EAAKlB,QAAUyoC,EAAavnC,EAAKjB,KACjDxP,KAAKytC,OAAO,IAAI6K,GAAgB1L,EAAK9wB,EAASrL,EAAMtiB,GAAG,KAEvD6R,KAAKytC,OAAO,IAAI8K,GAAiB3L,EAAKn8B,EAAMunC,IAC5C7pD,OAMJ,MAAMoqD,WAAyB5K,GAC9B9zC,YAAY+yC,EAA0Bn8B,EAAYunC,GACjDlN,MAAM8B,EAAKn8B,GAEX,IAAK,MAAMwmC,KAAUj3C,KAAKiuC,GACzBjuC,KAAKkuC,GAAS1/C,KAAKugB,EAAYkoC,EAAO97C,SAAU68C,EAAaf,EAAOjoC,KAAOhP,KAAK6tC,IAAa7tC,KAAK6tC,GAAWoJ,EAAOpjD,SAGrHmM,KAAKk3C,YAIMsB,WAAgCrN,GAC5CtxC,YAAY+yC,EAAmB6L,EAAqBC,GACnD5N,QACA,IAAIgC,EAAsBl+C,KAAKmb,MAAO0uC,EAAc7L,EAAIzsC,KAAKmb,YAAevtB,EAAOqF,cAEnF,GADI05C,EAAc,IAAGA,GAAeF,EAAIzsC,KAAKmb,YAAcvtB,EAAOqF,cAC/C,GAAf05C,EAAJ,CAEA,OAAQ4L,GACP,IAAK,aAAc,CAClB,MAAMld,EAAsBztC,EAAOqF,aAAew5C,EAAIzsC,KAAKmb,YAC3D,IAAK,MAAMlb,KAAWwsC,EAAIzsC,KAAK4X,SAC9B,IAAK,MAAM+D,KAAW1b,EAAQsX,SAAU,CACvC,MAAMmK,EAAmB,GAEzB,IAAK,IAAI9F,EAAc,EAAGA,GAAO,EAAGA,IAAO,CAC1C,MAAMwxB,EAAuBxxB,EAAMyf,EAEnC,IAAK,MAAMsQ,KAAWhwB,EAAQvL,MAAO,CACpC,MAAM88B,EAA4BvB,EAAQv8B,MAAQu9B,EAC5CQ,EAA0BxB,EAAQt8B,IAAMs9B,EACxCd,EAAwBp9C,KAAKsgB,IAAI,EAAGm+B,EAAoBE,GACxDtB,EAAsBr9C,KAAKyB,IAAImrC,EAAa8R,EAAkBC,GAEhEvB,EAAgBC,GACnBJ,GAAmBC,EAASuB,EAAoBE,EAAevB,EAAeA,EAAeC,EAAapqB,IAK7G/F,EAAQvL,MAAQsR,GAGjB,MACF,IAAK,WAAY,CAChB,IAAI82B,EAA2B/L,EAAIzsC,KAAKob,SACpCq9B,EAA4BhM,EAAIzsC,KAAK+a,UACrC29B,EAA6BjM,EAAIzsC,KAAKgb,WAI1C,GAFAnb,KAAKytC,OAAO,IAAId,GAA2BC,EAAKA,EAAIzsC,KAAKmb,YAAawxB,IAElE2L,EAAc,EAAG,CACpB,IAAIK,GAA2B,EAC/B,IAAK,MAAM14C,KAAWwsC,EAAIzsC,KAAK4X,SACP,GAAnB3X,EAAQuX,KAAK,KAASmhC,GAAkB,GAE7C,GAAIA,EAAiB,CACpB,IAAK,MAAM14C,KAAWwsC,EAAIzsC,KAAK4X,SAC9B3X,EAAQuX,KAAK+K,QAEdkqB,EAAIzsC,KAAKob,gBAETo9B,IACAC,IACAhM,EAAI7wB,MAGN,KAAO6wB,EAAIzsC,KAAKob,SAAWo9B,GAAkB,CAC5C,IAAK,MAAMv4C,KAAWwsC,EAAIzsC,KAAK4X,SAC9B3X,EAAQuX,KAAKnpB,KAAK,GAEnBo+C,EAAIzsC,KAAKob,WAEVqxB,EAAIzsC,KAAK+a,UAAY09B,EACrBhM,EAAIzsC,KAAKgb,WAAa09B,EACrB,MACF,QAAS,MAAM,IAAIjpD,MAAM,mDAG1Bg9C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAIMyN,WAA0B5N,GACtCtxC,YAAY+yC,EAAmBiC,EAAkB6J,GAEhD,GADA5N,QACI8B,EAAIzsC,KAAKmb,aAAeuzB,EAAU,CACrC,OAAQ6J,GACP,IAAK,SACJ,GAAI9L,EAAIzsC,KAAKmb,YAAcuzB,EAAU,CACpC,MAAM/qB,EAA2B,IAAIynB,GACrC,IAAK,IAAIp9C,EAAY,EAAGA,EAAIy+C,EAAIzsC,KAAK0b,kBAAmB1tB,IACvD,IAAK,IAAIse,EAAY,EAAGA,EAAImgC,EAAIzsC,KAAK4X,SAAS5pB,GAAGupB,SAAStpB,OAAQqe,IACjEqX,EAAS2pB,OAAO,IAAIwH,GAAmBrI,EAAKA,EAAIzsC,KAAK4X,SAAS5pB,GAAGupB,SAASjL,GAAIoiC,EAAW9gD,EAAOqF,aAAcw5C,EAAIzsC,KAAKmb,YAAcvtB,EAAOqF,aAAc,MAAM,IAIlK,MACF,IAAK,UAAW,CACf,MAAM4kD,EAAe,SAAUC,GAC9B,OAAOrpD,KAAKmb,MAAMkuC,EAAUpJ,EAAWjC,EAAIzsC,KAAKmb,cAEjD,IAAK,IAAIM,EAAuB,EAAGA,EAAegxB,EAAIzsC,KAAK0b,kBAAmBD,IAC7E,IAAK,IAAI0J,EAAuB,EAAGA,EAAesnB,EAAIzsC,KAAK4X,SAAS6D,GAAclE,SAAStpB,OAAQk3B,IAAgB,CAClH,MAAMxJ,EAAmB8wB,EAAIzsC,KAAK4X,SAAS6D,GAAclE,SAAS4N,GAClE,IAAI0zB,EAAoB,EACxB,KAAOA,EAAYl9B,EAAQvL,MAAMniB,QAAQ,CACxC,MAAMqiB,EAAaqL,EAAQvL,MAAMyoC,GAC7BhB,EAAavnC,EAAKlB,QAAUyoC,EAAavnC,EAAKjB,KACjDxP,KAAKytC,OAAO,IAAI6K,GAAgB1L,EAAK9wB,EAASrL,EAAMuoC,GAAW,KAE/Dh5C,KAAKytC,OAAO,IAAI8K,GAAiB3L,EAAKn8B,EAAMunC,IAC5CgB,MAKJh5C,KAAKytC,OAAO,IAAIwL,GAAYrM,EAAKA,EAAIzsC,KAAKqa,MAAOoyB,EAAIzsC,KAAKqa,MAAQq0B,EAAWjC,EAAIzsC,KAAKmb,cACrF,MACF,IAAK,WACJtb,KAAKytC,OAAO,IAAId,GAA2BC,EAAKiC,EAAU,IAC1DjC,EAAIzsC,KAAK+a,UAAY,EACrB0xB,EAAIzsC,KAAKgb,WAAayxB,EAAIzsC,KAAKob,SAC9B,MACF,QAAS,MAAM,IAAI3rB,MAAM,mDAG1Bg9C,EAAIzsC,KAAKmb,YAAcuzB,EACvBjC,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKK4N,WAAoB/N,GAChCtxC,YAAY+yC,EAAmBiC,GAC9B/D,QACI8B,EAAIzsC,KAAK8a,OAAS4zB,IACrBjC,EAAIzsC,KAAK8a,MAAQ4zB,EACjBjC,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKK6N,WAAwBhO,GACpCtxC,YAAY+yC,GACX9B,QACA,MAAM3qC,EAAaysC,EAAIzsC,KACjB5N,EAAoBxE,EAAOsE,KAAK8N,EAAKvC,KAAKrL,UAC1C6mD,EAAuB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/D,IAAK,IAAIx9B,EAAuB,EAAGA,EAAezb,EAAKe,kBAAmB0a,IACzE,IAAK,IAAI66B,EAAmB,EAAGA,EAAWt2C,EAAKob,SAAUk7B,IAAY,CACpE,MAAM36B,EAA0B3b,EAAKolB,WAAW3J,EAAc66B,GAC9D,GAAe,MAAX36B,EACH,IAAK,MAAMrL,KAAQqL,EAAQvL,MAAO,CACjC,MAAMg8B,EAAmB97B,EAAKd,KAAK,GACnC,IAAK,IAAIG,EAAmB,EAAGA,EAAWW,EAAKd,KAAKvhB,OAAQ0hB,IAAY,CACvE,MAAMs8B,EAAmB37B,EAAKd,KAAKG,GACnC,GAAIy8B,EAAQpxC,UAAYixC,EAAQjxC,SAAU,CACzC,IAAIo0C,EAAiBnD,EAAQp9B,KAAOu9B,EAAQv9B,KAC5CugC,GAAU3gD,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAOqF,aAAcg5C,EAAQp9B,KAAOyB,EAAKlB,QAAUg9B,EAAQv9B,KAAOyB,EAAKlB,QACtGggC,GAAUnD,EAAQv4C,OAAS04C,EAAQ14C,OACnC,IAAK,MAAMyb,KAASmB,EAAKf,QAAS,CAEjC0pC,GADa7mD,EAAYg6C,EAAQpxC,SAAWmU,GAAS,KAClCigC,MAS1B,IAAI8J,EAAkB,EAClBC,EAAwB,EAC5B,IAAK,IAAI17C,EAAc,EAAGA,EAAM,GAAIA,IAAO,CAE1C,MAAM27C,EAAoBH,EAAWx7C,IAAQ,EAAIw7C,GAAYx7C,EAAM,GAAK,IAAMw7C,GAAYx7C,EAAM,GAAK,IAAMw7C,GAAYx7C,EAAM,GAAK,KAC9H07C,EAAgBC,IACnBD,EAAgBC,EAChBF,EAAUz7C,GAIZ,GAAIy7C,GAAWl5C,EAAKvC,IAAK,CACxB,MAAM2yC,EAAepwC,EAAKvC,IAAMy7C,EAC1BG,EAAuB5qD,KAAKC,IAAI0hD,GAEtC,IAAK,IAAI30B,EAAuB,EAAGA,EAAezb,EAAKe,kBAAmB0a,IACzE,IAAK,MAAME,KAAW3b,EAAK4X,SAAS6D,GAAclE,SACjD,IAAK,IAAIvpB,EAAY,EAAGA,EAAIqrD,EAAcrrD,IACzC6R,KAAKytC,OAAO,IAAIgM,GAAgB7M,EAAKhxB,EAAcE,EAASy0B,EAAO,GAAG,IAKzEpwC,EAAKvC,IAAMy7C,EACXzM,EAAI9C,SAASC,UACb/pC,KAAKsrC,gBAKQqG,GAAsBt2C,GACrC,MAAMq+C,EAAiC,GACvC,IAAK,IAAI3/C,EAAwB,EAAGA,EAAgBH,EAAaK,iBAAiB7L,OAAQ2L,IAAiB,CAC1G,MAAMK,EAA2BR,EAAaK,iBAAiBF,GAC/D,GAAqB,mBAAjBK,EAASzI,KACb,IAAK,IAAIqI,EAAsB,EAAGA,EAAcI,EAASF,QAAQ9L,OAAQ4L,IAAe,CACvF,MAAMK,EAAiBD,EAASF,QAAQF,GACjBmT,MAAnB9S,EAAOO,UAA4C,GAAlBP,EAAOgB,SAAoBA,GAC/Dq+C,EAAqBlrD,MAAMuL,GAAiB,GAAKC,IAIpD,OAAO0/C,EAAsB9qD,KAAKa,SAAWiqD,EAAqBtrD,OAAU,YAG7DurD,GAAsBx5C,GACrC,IAAK,IAAIyb,EAAuB,EAAGA,EAAezb,EAAK4X,SAAS3pB,OAAQwtB,IACvE,IAAK,MAAMpL,KAAcrQ,EAAK4X,SAAS6D,GAAcnE,YAAa,CACjE,MAAMpc,EAAmB8E,EAAK0c,kBAAkBjB,GAC1CzB,EAAiBha,EAAK2c,gBAAgBlB,GACtC9hB,EAAuB8hB,GAAgBzb,EAAKe,kBAAqBtH,EAAaggD,kBAAkBhrD,KAAKa,SAAW,GAAM,aAAe,oBAAuBkiD,GAAsBt2C,GAClLhB,EAAiBT,EAAak1C,cAAch1C,GAClD0W,EAAW2O,eAAe9kB,EAAOO,SAAUS,EAAS8e,EAAsB,GAAfha,EAAKsb,QAA8B,GAAftb,EAAKsb,OAAatb,EAAKsb,QAAU,GAChHjL,EAAWnW,OAASP,SAKV+/C,WAAmB1O,GAC/BtxC,YAAY+yC,EAAmBkN,GAC9BhP,QACA,IAAI5pC,EAAoB0rC,EAAIzsC,KAAKe,kBAC7BE,EAAoBwrC,EAAIzsC,KAAKiB,kBAC7B2Z,EAAkB6xB,EAAIzsC,KAAK4a,gBAC/B6xB,EAAIzsC,KAAKya,iBAAiBk/B,GACtB54C,GAAqB0rC,EAAIzsC,KAAKe,mBAAqBE,GAAqBwrC,EAAIzsC,KAAKiB,mBAAqB2Z,GAAmB6xB,EAAIzsC,KAAK4a,iBACrIhb,EAAYyG,cAEE,IAAXszC,GACH95C,KAAKytC,OAAO,IAAIsM,GAAuBnN,EAAK,EAAG,IAC/CA,EAAIoN,UAAUC,oBACdN,GAAsB/M,EAAIzsC,OAE1BH,KAAKytC,OAAO,IAAIyM,GAA6BtN,IAE9CA,EAAI9C,SAASC,UACb/pC,KAAKsrC,YAIM4O,WAAqCxP,GACjD7wC,YAAY+yC,GACX9B,QACA,MAAM1qC,EAAkBxR,KAAKyB,IAAIu8C,EAAIxsC,QAASwsC,EAAIzsC,KAAK0b,kBAAoB,GACrEE,EAAcntB,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAIu8C,EAAIzsC,KAAKob,SAAW,EAAGqxB,EAAI7wB,MAC9D0sB,EAAuB75C,KAAKyB,IAAIu8C,EAAI7wB,IAAKntB,KAAKsgB,IAAI09B,EAAI7wB,KAAO6wB,EAAItD,iBAAmB,GAAI16C,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAIu8C,EAAIzsC,KAAKob,SAAWqxB,EAAItD,iBAAkBsD,EAAInE,iBAC7JmE,EAAIxsC,SAAWA,GAAWwsC,EAAI7wB,KAAOA,GAAO6wB,EAAInE,cAAgBA,IACnEmE,EAAIxsC,QAAUA,EACdwsC,EAAI7wB,IAAMA,EACV6wB,EAAInE,aAAeA,EACnBmE,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKoC,WAA8BvC,GAC1CtxC,YAAY+yC,EAAmBzrC,EAA0BE,EAA0BC,GAClFwpC,QAEA,MAAM3qC,EAAaysC,EAAIzsC,KAEvB,SAASg6C,EAA0BpiC,EAAqBqiC,GACvD,KAAOriC,EAAS3pB,OAASgsD,GAAW,CACnC,IAAIC,EAAwBtiC,EAAS3pB,OAAS,EAC1CksD,EAAqB,EACzB,IAAK,IAAI1+B,EAAuB,EAAGA,EAAe7D,EAAS3pB,OAAS,EAAGwtB,IAAgB,CACtF,IAAI2+B,EAAiB,EACrB,IAAK,MAAMx+B,KAAOhE,EAAS6D,GAAcjE,KAC7B,GAAPoE,GAAUw+B,IAEXA,GAAUD,IACbD,EAAgBz+B,EAChB0+B,EAAaC,GAGfxiC,EAASqG,OAAOi8B,EAAe,IAQjC,IAJAF,EAA0Bh5C,EAAepT,EAAOmK,sBAChDiiD,EAA0B94C,EAAetT,EAAOqK,sBAChD+hD,EAA0B74C,EAAavT,EAAOuK,oBAEvC6I,EAAc/S,OAASL,EAAOkK,sBAAsBkJ,EAAc3S,KAAK,IAAI+oB,GAClF,KAAOlW,EAAcjT,OAASL,EAAOoK,sBAAsBkJ,EAAc7S,KAAK,IAAI+oB,GAClF,KAAOjW,EAAYlT,OAASL,EAAOsK,oBAAoBiJ,EAAY9S,KAAK,IAAI+oB,GAG5EpX,EAAKob,SAAW,EAChBpb,EAAKub,sBAAwB,EAC7Bvb,EAAKqb,mBAAqB,EAC1B,MAAMg/B,EAA8Br5C,EAAckP,OAAOhP,EAAcgP,OAAO/O,IAC9E,IAAK,IAAIsa,EAAuB,EAAGA,EAAe4+B,EAAiBpsD,OAAQwtB,IAAgB,CAC1F,MAAMxb,EAAmBo6C,EAAiB5+B,GAC1Czb,EAAKob,SAAW3sB,KAAKsgB,IAAI/O,EAAKob,SAAUnb,EAAQuX,KAAKvpB,QACrD+R,EAAKqb,mBAAqB5sB,KAAKsgB,IAAI/O,EAAKqb,mBAAoBpb,EAAQsX,SAAStpB,QAC7E+R,EAAKub,sBAAwB9sB,KAAKsgB,IAAI/O,EAAKub,sBAAuBtb,EAAQqX,YAAYrpB,QACtF+R,EAAK4X,SAAS6D,GAAgBxb,EAE/BD,EAAK4X,SAAS3pB,OAASosD,EAAiBpsD,OACxC+R,EAAKe,kBAAoBC,EAAc/S,OACvC+R,EAAKiB,kBAAoBC,EAAcjT,OACvC+R,EAAK4a,gBAAkBzZ,EAAYlT,OAEnC+R,EAAKob,SAAW3sB,KAAKyB,IAAItC,EAAOgF,YAAaoN,EAAKob,UAClDpb,EAAKqb,mBAAqB5sB,KAAKyB,IAAItC,EAAOgF,YAAaoN,EAAKqb,oBAC5Drb,EAAKub,sBAAwB9sB,KAAKyB,IAAItC,EAAOoF,yBAA0BgN,EAAKub,uBAC5E,IAAK,IAAIE,EAAuB,EAAGA,EAAezb,EAAK4X,SAAS3pB,OAAQwtB,IAAgB,CACvF,MAAMxb,EAAmBD,EAAK4X,SAAS6D,GACvC,IAAK,IAAI66B,EAAmB,EAAGA,EAAWr2C,EAAQuX,KAAKvpB,OAAQqoD,KAC1Dr2C,EAAQuX,KAAK8+B,GAAYt2C,EAAKqb,oBAAsBpb,EAAQuX,KAAK8+B,GAAY,KAChFr2C,EAAQuX,KAAK8+B,GAAY,GAG3B,IAAK,MAAM36B,KAAW1b,EAAQsX,UACzBoE,EAAQtL,YAAcrQ,EAAKub,uBAAyBI,EAAQtL,WAAa,KAC5EsL,EAAQtL,WAAa,GAGvB,KAAOpQ,EAAQuX,KAAKvpB,OAAS+R,EAAKob,UACjCnb,EAAQuX,KAAKnpB,KAAK,GAEnB,KAAO4R,EAAQsX,SAAStpB,OAAS+R,EAAKqb,oBACrCpb,EAAQsX,SAASlpB,KAAK,IAAI8hB,GAE3B,KAAOlQ,EAAQqX,YAAYrpB,OAAS+R,EAAKub,uBAAuB,CAC/D,MAAMlL,EAAyB,IAAI2B,EAAWy6B,EAAIzsC,KAAK0c,kBAAkBjB,GAAegxB,EAAIzsC,KAAK2c,gBAAgBlB,IAC7Gzb,EAAK0c,kBAAkBjB,GAC1BpL,EAAWqE,gBAAe,GAAuB,GAAM,GAC7C1U,EAAK2c,gBAAgBlB,GAC/BpL,EAAWqE,gBAAe,GAAqB,GAAO,GAEtDrE,EAAWqE,gBAAe,GAAsB,GAAO,GAExDzU,EAAQqX,YAAYjpB,KAAKgiB,GAG1BpQ,EAAQqX,YAAYrpB,OAAS+R,EAAKub,sBAClCtb,EAAQuX,KAAKvpB,OAAS+R,EAAKob,SAC3Bnb,EAAQsX,SAAStpB,OAAS+R,EAAKqb,mBAGhCrb,EAAK+a,UAAYtsB,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAI8P,EAAKob,SAAW,EAAGpb,EAAK+a,YAC9D/a,EAAKgb,WAAavsB,KAAKyB,IAAI8P,EAAKob,SAAWpb,EAAK+a,UAAW/a,EAAKgb,YAEhEnb,KAAKytC,OAAO,IAAIyM,GAA6BtN,IAC7CA,EAAI9C,SAASC,UACb/pC,KAAKsrC,KAELvrC,EAAYyG,wBAIEi0C,GAAoBvsB,EAAWC,GAC9C,GAAID,EAAE9/B,QAAU+/B,EAAE//B,OAAQ,OAAO,EAEjC,IAAK,IAAI4qD,EAAoB,EAAGA,EAAY9qB,EAAE9/B,OAAQ4qD,IAAa,CAClE,MAAMlN,EAAgB5d,EAAE8qB,GAClB5oC,EAAgB+d,EAAE6qB,GACxB,GAAI5oC,EAAQb,OAASu8B,EAAQv8B,OAASa,EAAQZ,KAAOs8B,EAAQt8B,KAAOY,EAAQV,QAAQthB,QAAU09C,EAAQp8B,QAAQthB,QAAUgiB,EAAQT,KAAKvhB,QAAU09C,EAAQn8B,KAAKvhB,OAC3J,OAAO,EAGR,IAAK,IAAIowB,EAAqB,EAAGA,EAAastB,EAAQp8B,QAAQthB,OAAQowB,IACrE,GAAIpO,EAAQV,QAAQ8O,IAAestB,EAAQp8B,QAAQ8O,GAClD,OAAO,EAIT,IAAK,IAAI1O,EAAmB,EAAGA,EAAWg8B,EAAQn8B,KAAKvhB,OAAQ0hB,IAC9D,GAAIM,EAAQT,KAAKG,GAAU3U,UAAY2wC,EAAQn8B,KAAKG,GAAU3U,UAAYiV,EAAQT,KAAKG,GAAUd,MAAQ88B,EAAQn8B,KAAKG,GAAUd,MAAQoB,EAAQT,KAAKG,GAAUjc,QAAUi4C,EAAQn8B,KAAKG,GAAUjc,OAC/L,OAAO,EAKV,OAAO,WAGQ25C,GAAwBz1B,GACvC,IAAK,MAAM3X,KAAW2X,EAAU,CAC/B,MAAM2iC,EAAyB,GAC/B,IAAK,IAAI3+B,EAAc,EAAGA,EAAM3b,EAAQuX,KAAKvpB,OAAQ2tB,IAAO,CAC3D,GAAyB,GAArB3b,EAAQuX,KAAKoE,GAAW,SAE5B,MAAMoxB,EAAsB/sC,EAAQsX,SAAStX,EAAQuX,KAAKoE,GAAO,GAEjE,IAAI4+B,GAAgC,EACpC,IAAK,IAAIC,EAA0B,EAAGA,EAAkBF,EAAYtsD,OAAQwsD,IAAmB,CAC9F,MAAMh5B,EAAsB84B,EAAYE,GACxC,GAAIh5B,EAAWpR,YAAc28B,EAAW38B,YAAcoR,EAAWrR,MAAMniB,QAAU++C,EAAW58B,MAAMniB,QAI9FqsD,GAAoBtN,EAAW58B,MAAOqR,EAAWrR,OAAQ,CAC5DoqC,GAAuB,EACvBv6C,EAAQuX,KAAKoE,GAAO6+B,EAAkB,EACtC,OAIGD,IACJD,EAAYlsD,KAAK2+C,GACjB/sC,EAAQuX,KAAKoE,GAAO2+B,EAAYtsD,QAIlC,IAAK,IAAIk3B,EAAuB,EAAGA,EAAeo1B,EAAYtsD,OAAQk3B,IACrEllB,EAAQsX,SAAS4N,GAAgBo1B,EAAYp1B,GAE9CllB,EAAQsX,SAAStpB,OAASssD,EAAYtsD,cAI3B6qD,WAAoBvO,GAChC7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIzsC,KAAKqa,MAAQ5rB,KAAKsgB,IAAInhB,EAAO0E,SAAU7D,KAAKyB,IAAItC,EAAO2E,SAAU9D,KAAKmb,MAAM8kC,KAChFjC,EAAI/T,MAAMwZ,SAASr+B,EAAW2E,UAC9Bi0B,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpBuP,WAAqBnQ,GACjC7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIzsC,KAAKib,OAASyzB,EAClBjC,EAAI/T,MAAMwZ,SAASr+B,EAAW4E,WAC9Bg0B,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpBgN,WAAwB1N,GAKpC/wC,YAAY+yC,EAAmB9wB,EAAkBrL,EAAYzhB,EAAeylD,GAAoB,GAC/F3J,MAAM2J,GACNz0C,KAAKsmC,EAAOsG,EACZ5sC,KAAK86C,GAAWh/B,EAChB9b,KAAK4tC,GAAQn9B,EACbzQ,KAAKyO,EAASzf,EACdgR,KAAKsrC,KACLtrC,KAAK0rC,OAGI7xC,KACTmG,KAAK86C,GAASvqC,MAAM6N,OAAOpe,KAAKyO,EAAQ,EAAGzO,KAAK4tC,IAChD5tC,KAAKsmC,EAAKwD,SAASC,UAGVlwC,KACTmG,KAAK86C,GAASvqC,MAAM6N,OAAOpe,KAAKyO,EAAQ,GACxCzO,KAAKsmC,EAAKwD,SAASC,iBAIRoL,WAAyBxH,GACrC9zC,YAAY+yC,EAA0Bn8B,EAAYsqC,EAAoBC,GACrElQ,MAAM8B,EAAKn8B,GAEXsqC,GAAc/6C,KAAK6tC,GACnBmN,GAAYh7C,KAAK6tC,GACjB,IAII1/C,EAJAspD,GAAoB,EACpBG,EAAqB53C,KAAKiuC,GAAS,GAAGp6C,OACtC8jD,EAAuB33C,KAAKiuC,GAAS,GAAG9yC,SACxC8/C,GAAuB,EAE3B,IAAK9sD,EAAI,EAAGA,EAAI6R,KAAKiuC,GAAS7/C,OAAQD,IAAK,CAC1C,MAAM8oD,EAAkBj3C,KAAKiuC,GAAS9/C,GACtC,GAAI8oD,EAAOjoC,KAAO+rC,EACjBnD,EAAaX,EAAOpjD,OACpB8jD,EAAeV,EAAO97C,aAChB,CAAA,KAAI87C,EAAOjoC,MAAQgsC,GAWzB,MALA,GALI/D,EAAOjoC,KAAO+rC,IAAetD,GAChCz3C,KAAKkuC,GAAS1/C,KAAKugB,EAAY4oC,EAAcoD,EAAYnD,IAE1D53C,KAAKkuC,GAAS1/C,KAAKugB,EAAYkoC,EAAO97C,SAAU87C,EAAOjoC,KAAMioC,EAAOpjD,SACpE4jD,GAAW,EACPR,EAAOjoC,MAAQgsC,EAAU,CAC5BC,GAAc,EACd,QAQCA,GAAaj7C,KAAKkuC,GAAS1/C,KAAKugB,EAAY/O,KAAKiuC,GAAS9/C,GAAGgN,SAAU6/C,EAAUh7C,KAAKiuC,GAAS9/C,GAAG0F,SAEtGmM,KAAKk3C,YAIMjC,WAA2B1J,GACvC1xC,YAAY+yC,EAAmB9wB,EAAkBvM,EAAeC,EAAa0rC,EAAwB,KAAMC,GAAiB,GAC3HrQ,QACA,IAAI38C,EAAY,EAChB,KAAOA,EAAI2tB,EAAQvL,MAAMniB,QAAQ,CAChC,MAAMqiB,EAAaqL,EAAQvL,MAAMpiB,GACjC,GAAIsiB,GAAQyqC,GAAwB,MAAZA,EACvB/sD,SACM,GAAIsiB,EAAKjB,KAAOD,EACtBphB,SACM,GAAIsiB,EAAKlB,OAASC,EAAK,CAE7B,IAAKo9B,EAAIzsC,KAAK2c,gBAAgB8vB,EAAIxsC,SACjC,MAEAjS,SAEK,GAAIsiB,EAAKlB,MAAQA,GAASkB,EAAKjB,IAAMA,EAAK,CAChD,IAAKo9B,EAAIzsC,KAAK2c,gBAAgB8vB,EAAIxsC,UAAY+6C,GAAsB,MAAZD,GAAoBzqC,EAAKf,QAAQ,IAAMwrC,EAASxrC,QAAQ,GAAK,CACpH,MAAM0rC,EAAa3qC,EAAKC,QACxB1Q,KAAKytC,OAAO,IAAI0H,GAAiBvI,EAAKn8B,EAAMA,EAAKlB,MAAOA,IACxDphB,IACA6R,KAAKytC,OAAO,IAAI6K,GAAgB1L,EAAK9wB,EAASs/B,EAAMjtD,GAAG,IACvD6R,KAAKytC,OAAO,IAAI0H,GAAiBvI,EAAKwO,EAAM5rC,EAAK4rC,EAAK5rC,MAEvDrhB,SACUsiB,EAAKlB,MAAQA,KAClBq9B,EAAIzsC,KAAK2c,gBAAgB8vB,EAAIxsC,UAAY+6C,GAAsB,MAAZD,GAAoBzqC,EAAKf,QAAQ,IAAMwrC,EAASxrC,QAAQ,KAC/G1P,KAAKytC,OAAO,IAAI0H,GAAiBvI,EAAKn8B,EAAMA,EAAKlB,MAAOA,IACzDphB,KACUsiB,EAAKjB,IAAMA,KAChBo9B,EAAIzsC,KAAK2c,gBAAgB8vB,EAAIxsC,UAAY+6C,GAAsB,MAAZD,GAAoBzqC,EAAKf,QAAQ,IAAMwrC,EAASxrC,QAAQ,KAC/G1P,KAAKytC,OAAO,IAAI0H,GAAiBvI,EAAKn8B,EAAMjB,EAAKiB,EAAKjB,MACvDrhB,MAEKy+C,EAAIzsC,KAAK2c,gBAAgB8vB,EAAIxsC,UAAY+6C,GAAsB,MAAZD,GAAoBzqC,EAAKf,QAAQ,IAAMwrC,EAASxrC,QAAQ,GAC/G1P,KAAKytC,OAAO,IAAI6K,GAAgB1L,EAAK9wB,EAASrL,EAAMtiB,GAAG,IAEvDA,MAML,MAAMktD,WAAoC9P,GACzC1xC,YAAY+yC,EAAmB9wB,GAC9BgvB,QACA,IAAI38C,EAAY,EAChB,KAAOA,EAAI2tB,EAAQvL,MAAMniB,QAAQ,CAChC,MAAMqiB,EAAaqL,EAAQvL,MAAMpiB,GACjC,GAAIsiB,EAAKlB,MAAQq9B,EAAIoN,UAAUsB,uBAAyB1O,EAAIoN,UAAUsB,sBAAwB7qC,EAAKjB,IAAK,CACvG,MAAM4rC,EAAa3qC,EAAKC,QACxB1Q,KAAKytC,OAAO,IAAI0H,GAAiBvI,EAAKn8B,EAAMA,EAAKlB,MAAOq9B,EAAIoN,UAAUsB,wBACtEntD,IACA6R,KAAKytC,OAAO,IAAI6K,GAAgB1L,EAAK9wB,EAASs/B,EAAMjtD,GAAG,IACvD6R,KAAKytC,OAAO,IAAI0H,GAAiBvI,EAAKwO,EAAMxO,EAAIoN,UAAUsB,sBAAuBF,EAAK5rC,WAEhF,GAAIiB,EAAKlB,MAAQq9B,EAAIoN,UAAUuB,qBAAuB3O,EAAIoN,UAAUuB,oBAAsB9qC,EAAKjB,IAAK,CAC1G,MAAM4rC,EAAa3qC,EAAKC,QACxB1Q,KAAKytC,OAAO,IAAI0H,GAAiBvI,EAAKn8B,EAAMA,EAAKlB,MAAOq9B,EAAIoN,UAAUuB,sBACtEptD,IACA6R,KAAKytC,OAAO,IAAI6K,GAAgB1L,EAAK9wB,EAASs/B,EAAMjtD,GAAG,IACvD6R,KAAKytC,OAAO,IAAI0H,GAAiBvI,EAAKwO,EAAMxO,EAAIoN,UAAUuB,oBAAqBH,EAAK5rC,MACpFrhB,SAEAA,MAMJ,MAAMqtD,WAA4B5Q,GAWjC/wC,YAAY+yC,EAAmBxsC,EAAiBqQ,EAAYgrC,EAAiBC,GAAuB,EAAOlkC,GAAkB,GAC5HszB,OAAM,GACN9qC,KAAKsmC,EAAOsG,EACZ5sC,KAAK4tC,GAAQn9B,EACbzQ,KAAKiuC,GAAWx9B,EAAKd,KACrB3P,KAAKkuC,GAAW,GAChBluC,KAAKmuC,GAAc19B,EAAKf,QACxB1P,KAAKouC,GAAc,GAKnB,MAAM/yC,EAAmBuxC,EAAIzsC,KAAK0c,kBAAkBzc,GACpD,GAAI/E,GAAWuxC,EAAIzsC,KAAK0c,kBAAkB+vB,EAAIxsC,SAAU,OAGxD,GAAIwsC,EAAIzsC,KAAK2c,gBAAgB8vB,EAAIxsC,SAAU,OAG3C,MAAMtH,EAAoBuC,EAAUtN,EAAO2K,UAAY,EAAI3K,EAAO+K,SAElE,IAAK,IAAI3K,EAAY,EAAGA,EAAI6R,KAAKmuC,GAAY//C,OAAQD,IAAK,CACzD,IAAImhB,EAAgBtP,KAAKmuC,GAAYhgD,GACrC,GAAIqpB,IAAWnc,EAEbiU,EADGmsC,EACK7sD,KAAKyB,IAAIyI,EAAUwW,EAAQvhB,EAAO0K,kBAElC7J,KAAKsgB,IAAI,EAAGI,EAAQvhB,EAAO0K,uBAGpC,GAAIgjD,EACH,IAAK,IAAIhvC,EAAY6C,EAAQ,EAAG7C,GAAK3T,EAAU2T,IAAK,CAGlD6C,EAAQ7C,EACR,WAIF,IAAK,IAAIA,EAAY6C,EAAQ,EAAG7C,GAAK,EAAGA,IAAK,CAG3C6C,EAAQ7C,EACR,MAMJ,IAAIkvC,GAAsB,EAC1B,IAAK,IAAIlvC,EAAY,EAAGA,EAAIzM,KAAKouC,GAAYhgD,OAAQqe,IACpD,GAAIzM,KAAKouC,GAAY3hC,IAAM6C,EAAO,CACjCqsC,GAAa,EACb,MAGGA,GAAY37C,KAAKouC,GAAY5/C,KAAK8gB,GAGxC,IAAIjf,EAAc,EACd6e,EAAcpW,EAElB,IAAK,IAAI3K,EAAY,EAAGA,EAAI6R,KAAKouC,GAAYhgD,OAAQD,IAAK,CACzD,MAAMoiD,EAAevwC,KAAKouC,GAAY,GAAKpuC,KAAKouC,GAAYjgD,GACxDkC,EAAMkgD,IAAMlgD,EAAMkgD,GAClBrhC,EAAMqhC,EAAOz3C,IAAUoW,EAAMqhC,EAAOz3C,GAGzC,IAAK,MAAMm+C,KAAUj3C,KAAKiuC,GAAU,CACnC,IAAI9yC,EAAmB87C,EAAO97C,SAAW6E,KAAKmuC,GAAY,GAI1D,GAFIhzC,EAAW9K,IAAK8K,EAAW9K,GAC3B8K,EAAW+T,IAAK/T,EAAW+T,GAC3BsI,IAAWnc,EAEbF,EADGsgD,EACQ7sD,KAAKyB,IAAI6e,EAAK/T,EAAWpN,EAAO0K,kBAEhC7J,KAAKsgB,IAAI7e,EAAK8K,EAAWpN,EAAO0K,uBAG5C,GAAIgjD,EACH,IAAK,IAAIttD,EAAYgN,EAAW,EAAGhN,GAAK+gB,EAAK/gB,IAAK,CAGhDgN,EAAWhN,EACX,WAIF,IAAK,IAAIA,EAAYgN,EAAW,EAAGhN,GAAKkC,EAAKlC,IAAK,CAGhDgN,EAAWhN,EACX,MAKJgN,GAAY6E,KAAKouC,GAAY,GAC7BpuC,KAAKkuC,GAAS1/C,KAAKugB,EAAY5T,EAAU87C,EAAOjoC,KAAMioC,EAAOpjD,SAG9D,GAAiC,GAA7BmM,KAAKkuC,GAAS,GAAG/yC,SAAe,MAAM,IAAIvL,MAAM,4BAEpD,IAAK,IAAIzB,EAAY,EAAGA,EAAI6R,KAAKkuC,GAAS9/C,OAAS,GAC9C4R,KAAKkuC,GAAS//C,EAAI,GAAGgN,UAAY6E,KAAKkuC,GAAS//C,GAAGgN,UACrD6E,KAAKkuC,GAAS//C,GAAGgN,UAAY6E,KAAKkuC,GAAS//C,EAAI,GAAGgN,UAClD6E,KAAKkuC,GAAS//C,EAAI,GAAG0F,QAAUmM,KAAKkuC,GAAS//C,GAAG0F,QAChDmM,KAAKkuC,GAAS//C,GAAG0F,QAAUmM,KAAKkuC,GAAS//C,EAAI,GAAG0F,OAChDmM,KAAKkuC,GAAS9vB,OAAOjwB,EAAG,GAExBA,IAIF6R,KAAKirC,KACLjrC,KAAKsrC,KAGIzxC,KACTmG,KAAK4tC,GAAMj+B,KAAO3P,KAAKkuC,GACvBluC,KAAK4tC,GAAMl+B,QAAU1P,KAAKouC,GAC1BpuC,KAAKsmC,EAAKwD,SAASC,UAGVlwC,KACTmG,KAAK4tC,GAAMj+B,KAAO3P,KAAKiuC,GACvBjuC,KAAK4tC,GAAMl+B,QAAU1P,KAAKmuC,GAC1BnuC,KAAKsmC,EAAKwD,SAASC,iBAIR0P,WAAwBlO,GACpC1xC,YAAY+yC,EAAmBxsC,EAAiB0b,EAAkB2/B,EAAiBC,GAAuB,EAAOlkC,GAAkB,GAClIszB,QACI8B,EAAIoN,UAAU4B,wBACjB57C,KAAKytC,OAAO,IAAI4N,GAA4BzO,EAAK9wB,IAElD,IAAK,MAAMrL,KAAQqL,EAAQvL,MACtBq8B,EAAIoN,UAAU4B,yBAA2BnrC,EAAKjB,KAAOo9B,EAAIoN,UAAUsB,uBAAyB7qC,EAAKlB,OAASq9B,EAAIoN,UAAUuB,sBAG5Hv7C,KAAKytC,OAAO,IAAI+N,GAAoB5O,EAAKxsC,EAASqQ,EAAMgrC,EAAQC,EAAalkC,WAKnEqkC,WAA6BnR,GACzC7wC,YAAY+yC,EAAmBkP,EAAeC,EAAeC,EAAeC,GAC3EnR,QACA8B,EAAIoN,UAAUkC,eAAiBJ,EAC/BlP,EAAIoN,UAAUmC,eAAiBJ,EAC/BnP,EAAIoN,UAAUoC,eAAiBJ,EAC/BpP,EAAIoN,UAAUqC,eAAiBJ,EAC/BrP,EAAI9C,SAASC,UACb/pC,KAAKsrC,YAIMyO,WAA+BnP,GAS3C/wC,YAAY+yC,EAAmB6E,EAAkB6K,GAChDxR,OAAM,GACN9qC,KAAKsmC,EAAOsG,EACZ5sC,KAAK6tC,GAAYjB,EAAIoN,UAAUsB,sBAC/Bt7C,KAAK8tC,GAAUlB,EAAIoN,UAAUuB,oBAC7Bv7C,KAAKu8C,GAAa3P,EAAIoN,UAAU4B,uBAChC57C,KAAK+tC,GAAY0D,EACjBzxC,KAAKguC,GAAUsO,EACft8C,KAAKw8C,GAAa/K,EAAW6K,EAC7Bt8C,KAAKirC,KACLjrC,KAAKsrC,KAGIzxC,KACTmG,KAAKsmC,EAAK0T,UAAUsB,sBAAwBt7C,KAAK+tC,GACjD/tC,KAAKsmC,EAAK0T,UAAUuB,oBAAsBv7C,KAAKguC,GAC/ChuC,KAAKsmC,EAAK0T,UAAU4B,uBAAyB57C,KAAKw8C,GAClDx8C,KAAKsmC,EAAKwD,SAASC,UAGVlwC,KACTmG,KAAKsmC,EAAK0T,UAAUsB,sBAAwBt7C,KAAK6tC,GACjD7tC,KAAKsmC,EAAK0T,UAAUuB,oBAAsBv7C,KAAK8tC,GAC/C9tC,KAAKsmC,EAAK0T,UAAU4B,uBAAyB57C,KAAKu8C,GAClDv8C,KAAKsmC,EAAKwD,SAASC,iBAIR0S,WAAgClR,GAC5C1xC,YAAY+yC,EAAmBxsC,EAAiB0b,EAAkB4gC,EAAeC,GAGhF,GAFA7R,QAEa,GAAT4R,GAA2B,GAAbC,EAAgB,OAE9B/P,EAAIoN,UAAU4B,wBACjB57C,KAAKytC,OAAO,IAAI4N,GAA4BzO,EAAK9wB,IAGlD,MAAM41B,EAAmB9E,EAAIoN,UAAUsB,sBACjCsB,EAAiBhQ,EAAIoN,UAAUuB,oBAC/B9J,EAAmB7iD,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAIu8C,EAAIzsC,KAAKmb,YAAcvtB,EAAOqF,aAAcs+C,EAAWgL,IAC/FJ,EAAiB1tD,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAIu8C,EAAIzsC,KAAKmb,YAAcvtB,EAAOqF,aAAcwpD,EAASF,IAC7FjL,GAAY6K,EAEft8C,KAAKytC,OAAO,IAAIwH,GAAmBrI,EAAK9wB,EAAS41B,EAAUkL,EAAQ,MAAM,IAC/DF,EAAQ,GAElB18C,KAAKytC,OAAO,IAAIwH,GAAmBrI,EAAK9wB,EAAS21B,EAAU7iD,KAAKyB,IAAIqhD,EAAU4K,GAAS,MAAM,IACzF5K,GAAYgL,GAEf18C,KAAKytC,OAAO,IAAIwH,GAAmBrI,EAAK9wB,EAAS41B,GAAWgL,EAAO,MAAM,MAI1E18C,KAAKytC,OAAO,IAAIwH,GAAmBrI,EAAK9wB,EAASltB,KAAKsgB,IAAI0tC,EAAQnL,GAAW6K,EAAQ,MAAM,IACvFM,EAAShQ,EAAIzsC,KAAKmb,YAAcvtB,EAAOqF,aAAespD,GAEzD18C,KAAKytC,OAAO,IAAIwH,GAAmBrI,EAAK9wB,EAAS8wB,EAAIzsC,KAAKmb,YAAcvtB,EAAOqF,aAAespD,EAAOE,EAAQ,MAAM,KAIrH58C,KAAKytC,OAAO,IAAIsM,GAAuBnN,EAAK6E,EAAU6K,IACtD,MAAMO,EAAe,GACrB,IAAI3H,EAA6B,EAC7B/mD,EAAY,EAChB,KAAOA,EAAI2tB,EAAQvL,MAAMniB,QAAQ,CAChC,MAAMqiB,EAAaqL,EAAQvL,MAAMpiB,GAC7BsiB,EAAKjB,KAAOkiC,GAAYjhC,EAAKlB,OAASqtC,GACzCzuD,IACIsiB,EAAKjB,KAAOiiC,IAAUyD,EAAqB/mD,KAE/C0uD,EAAaruD,KAAKiiB,EAAKC,SACvB1Q,KAAKytC,OAAO,IAAI6K,GAAgB1L,EAAK9wB,EAASrL,EAAMtiB,GAAG,KAIzD,IAAK,MAAMsiB,KAAQosC,EAAc,CAChCpsC,EAAKlB,OAASmtC,EACdjsC,EAAKjB,KAAOktC,EAEZ,IAAK,IAAIvuD,EAAY,EAAGA,EAAIS,KAAKC,IAAI8tD,GAAYxuD,IAChD6R,KAAKytC,OAAO,IAAI+N,GAAoB5O,EAAKxsC,EAASqQ,EAAMksC,EAAY,IAGrE38C,KAAKytC,OAAO,IAAI6K,GAAgB1L,EAAK9wB,EAASrL,EAAMykC,KAAsB,YAKhE4H,WAA8C3R,GAC1DtxC,YAAY+yC,EAAmBmQ,EAAkBC,EAAkBC,EAAsBC,GACxFpS,QACA,IAAK,IAAI1qC,EAAkB68C,EAAc78C,EAAU68C,EAAeC,EAAe98C,IAAW,CAC3F,MAAM+8C,EAAuC,GAE7C,IAAK,IAAIphC,EAAcghC,EAAUhhC,EAAMghC,EAAWC,EAAUjhC,IAAO,CAClE,MAAMqhC,EAA8BxQ,EAAIzsC,KAAK4X,SAAS3X,GAASuX,KAAKoE,GACpE,GAA2B,GAAvBqhC,EAAJ,CAEA,GAAqDjwC,MAAjDgwC,EAAiBn/B,OAAOo/B,IAAoC,CAC/D,IAAIC,GAAkB,EACtB,IAAK,IAAIC,EAAe,EAAGA,EAAO1Q,EAAIzsC,KAAKob,SAAU+hC,IACpD,IAAIA,EAAOP,GAAYO,GAAQP,EAAWC,IACrCpQ,EAAIzsC,KAAK4X,SAAS3X,GAASuX,KAAK2lC,IAASF,EAAqB,CACjEC,GAAkB,EAClB,MAIH,GAAIA,EAAiB,CAEpB,MAAME,EAAyB3Q,EAAIzsC,KAAKolB,WAAWnlB,EAAS2b,GAC5D/b,KAAKytC,OAAO,IAAIyC,GAAqBtD,EAAK,EAAG7wB,EAAK3b,EAAS,EAAG,IAC9DJ,KAAKytC,OAAO,IAAIuI,GAA0BpJ,EAAKxsC,EAAS2b,IACxD,MAAM6F,EAA6BgrB,EAAIzsC,KAAKolB,WAAWnlB,EAAS2b,GAChE,GAAkB,MAAd6F,EAAoB,MAAM,IAAIhyB,MAClCoQ,KAAKytC,OAAO,IAAIoH,GAAYjI,EAAKhrB,EAAY27B,EAAchtC,MAAO,EAAGxiB,EAAOqF,aAAew5C,EAAIzsC,KAAKmb,YAAavtB,EAAOqF,aAAew5C,EAAIzsC,KAAKmb,cAChJtb,KAAKytC,OAAO,IAAI6H,GAAwB1I,EAAK2Q,EAAc/sC,WAAYoR,IACvEu7B,EAAiBn/B,OAAOo/B,IAAwBxQ,EAAIzsC,KAAK4X,SAAS3X,GAASuX,KAAKoE,QAEhFohC,EAAiBn/B,OAAOo/B,IAAwBA,EAIlDp9C,KAAKytC,OAAO,IAAIyC,GAAqBtD,EAAKuQ,EAAiBn/B,OAAOo/B,IAAuBrhC,EAAK3b,EAAS,EAAG,cAMjGo9C,WAA2B9S,GACvC7wC,YAAY+yC,EAAmB9wB,EAAkB2hC,GAChD3S,QACI8B,EAAIoN,UAAU4B,wBACjB,IAAIP,GAA4BzO,EAAK9wB,GAEtC,MAAMhjB,EAAmB/K,EAAO+K,SAChC,IAAK,MAAM2X,KAAQqL,EAAQvL,MAAO,CACjC,GAAIq8B,EAAIoN,UAAU4B,yBAA2BnrC,EAAKjB,KAAOo9B,EAAIoN,UAAUsB,uBAAyB7qC,EAAKlB,OAASq9B,EAAIoN,UAAUuB,qBAC3H,SAED,MAAMmC,EAAuB,GACvBC,EAAqB,GAC3B,IAAK,IAAIxvD,EAAY,EAAGA,EAAIsiB,EAAKf,QAAQthB,OAAQD,IAAK,CACrD,MAAMmhB,EAAgBmB,EAAKf,QAAQvhB,GAC7ByvD,EAA2BH,EAASnuC,EAAQ,KAAOA,EAASA,EAAQ,KAC7B,GAAzCouC,EAAW/oC,QAAQipC,IACtBF,EAAWlvD,KAAKovD,GAIlB,IAAIvtD,EAAc,EACd6e,EAAcpW,EAElB,IAAK,IAAI3K,EAAY,EAAGA,EAAIuvD,EAAWtvD,OAAQD,IAAK,CACnD,MAAMoiD,EAAemN,EAAW,GAAKA,EAAWvvD,GAC5CkC,EAAMkgD,IAAMlgD,EAAMkgD,GAClBrhC,EAAMqhC,EAAOz3C,IAAUoW,EAAMqhC,EAAOz3C,GAGzC,IAAK,MAAMm+C,KAAUxmC,EAAKd,KAAM,CAC/B,IAAIxU,EAAmB87C,EAAO97C,SAAWsV,EAAKf,QAAQ,GAClDvU,EAAW9K,IAAK8K,EAAW9K,GAC3B8K,EAAW+T,IAAK/T,EAAW+T,GAC/B,MAAM2uC,EAA8BJ,EAAStiD,EAAW,KAAOA,EAAYA,EAAW,IACtFwiD,EAAQnvD,KAAKugB,EAAY8uC,EAAsBH,EAAW,GAAIzG,EAAOjoC,KAAMioC,EAAOpjD,SAGnF,GAA2B,GAAvB8pD,EAAQ,GAAGxiD,SAAe,MAAM,IAAIvL,MAAM,4BAE9C,IAAK,IAAIzB,EAAY,EAAGA,EAAIwvD,EAAQvvD,OAAS,GACxCuvD,EAAQxvD,EAAI,GAAGgN,UAAYwiD,EAAQxvD,GAAGgN,UACzCwiD,EAAQxvD,GAAGgN,UAAYwiD,EAAQxvD,EAAI,GAAGgN,UACtCwiD,EAAQxvD,EAAI,GAAG0F,QAAU8pD,EAAQxvD,GAAG0F,QACpC8pD,EAAQxvD,GAAG0F,QAAU8pD,EAAQxvD,EAAI,GAAG0F,OACpC8pD,EAAQv/B,OAAOjwB,EAAG,GAElBA,IAIFsiB,EAAKf,QAAUguC,EACfjtC,EAAKd,KAAOguC,EAEb39C,KAAKsrC,KACLsB,EAAI9C,SAASC,iBAIF+T,WAAqBpT,GACjC7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAAwB76C,OAASg7C,EAGhFjC,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpByS,WAAwBrT,GACpC7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QACI+D,EAASzgD,OAAS,KACrBygD,EAAWA,EAASvvB,UAAU,EAAG,KAGlCstB,EAAIzsC,KAAKwb,MAAQkzB,EACjB9xC,SAAS4e,MAAQkzB,EAAW,MAAQj1C,EAAac,mBACjDkyC,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpB0S,WAA0BtT,GACtC7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QACI+D,EAASzgD,OAAS,KACrBygD,EAAWA,EAASvvB,UAAU,EAAG,KAGlCstB,EAAIzsC,KAAK4X,SAAS60B,EAAIqR,mBAAmBtsD,KAAOk9C,EAChDjC,EAAIsR,oBAAqB,EAEzBtR,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpB6S,WAAkBzT,GAC9B7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAAwB97B,IAAMi8B,EAC7EjC,EAAI/T,MAAMwZ,SAASr+B,EAAW+E,OAAQ6zB,EAAIxsC,QAASwsC,EAAI8B,wBACvD9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpB8S,WAAuB1T,GACnC7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAAwB77B,SAAWg8B,EAClFjC,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpB+S,WAAqB3T,GACjC7wC,YAAY+yC,EAAmBuF,EAAkBtD,GAChD/D,QACA8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAAwBx7B,OAAS27B,EAChFjC,EAAI/T,MAAMwZ,SAASr+B,EAAWwF,UAAWozB,EAAIxsC,QAASwsC,EAAI8B,wBAC1D9B,EAAI9C,SAASC,UACToI,GAAYtD,GAAU7uC,KAAKsrC,YAIpBgT,WAAyB1T,GAKrC/wC,YAAY+yC,EAAmBn8B,EAAY8tC,EAAkBC,EAAoBC,EAAsBC,GACtG5T,OAAM,GACN9qC,KAAKsmC,EAAOsG,EACZ5sC,KAAK4tC,GAAQn9B,EACbzQ,KAAKiuC,GAAWx9B,EAAKd,KACrB3P,KAAKkuC,GAAW,GAEhB,IAAIyQ,GAAoB,EAExB,IAAK,MAAMxuC,KAAOM,EAAKd,KAClBQ,EAAInB,KAAOuvC,EACVG,EACH1+C,KAAKkuC,GAAS1/C,KAAKugB,EAAYoB,EAAIhV,SAAUgV,EAAInB,KAAMwvC,IAEvDx+C,KAAKkuC,GAAS1/C,KAAK2hB,GAEVA,EAAInB,MAAQuvC,GACtBv+C,KAAKkuC,GAAS1/C,KAAKugB,EAAY0vC,EAAcF,EAAUC,IACvDG,GAAW,IAENA,IACJ3+C,KAAKkuC,GAAS1/C,KAAKugB,EAAY0vC,EAAcF,EAAUC,IACvDG,GAAW,GAERD,EACH1+C,KAAKkuC,GAAS1/C,KAAKugB,EAAYoB,EAAIhV,SAAUgV,EAAInB,KAAMwvC,IAEvDx+C,KAAKkuC,GAAS1/C,KAAK2hB,IAKtB,IAAK,IAAIhiB,EAAY,EAAGA,EAAI6R,KAAKkuC,GAAS9/C,OAAS,GAC9C4R,KAAKkuC,GAAS//C,EAAI,GAAGgN,UAAY6E,KAAKkuC,GAAS//C,GAAGgN,UACrD6E,KAAKkuC,GAAS//C,GAAGgN,UAAY6E,KAAKkuC,GAAS//C,EAAI,GAAGgN,UAClD6E,KAAKkuC,GAAS//C,EAAI,GAAG0F,QAAUmM,KAAKkuC,GAAS//C,GAAG0F,QAChDmM,KAAKkuC,GAAS//C,GAAG0F,QAAUmM,KAAKkuC,GAAS//C,EAAI,GAAG0F,OAChDmM,KAAKkuC,GAAS9vB,OAAOjwB,EAAG,GAExBA,IAIF6R,KAAKirC,KACLjrC,KAAKsrC,KAGIzxC,KACTmG,KAAK4tC,GAAMj+B,KAAO3P,KAAKkuC,GACvBluC,KAAKsmC,EAAKwD,SAASC,UAGVlwC,KACTmG,KAAK4tC,GAAMj+B,KAAO3P,KAAKiuC,GACvBjuC,KAAKsmC,EAAKwD,SAASC,iBAIR6U,WAAuBlU,GACnC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAC1El+B,EAAW6B,UAAYw8B,IAC1Br+B,EAAW6B,SAAWw8B,EACtBr+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,aAKKuT,WAAwBnU,GACpC7wC,YAAY+yC,EAAmBiC,GAC9B/D,QACA,MAAMt6B,EAAyBo8B,EAAIzsC,KAAK4X,SAAS60B,EAAIxsC,SAASqX,YAAYm1B,EAAI8B,wBAC1El+B,EAAW8B,WAAau8B,IAC3Br+B,EAAW8B,UAAYu8B,EACvBr+B,EAAWnW,OAASmW,EAAW1b,KAC/B83C,EAAI9C,SAASC,UACb/pC,KAAKsrC,OC3jGR,MAAMwT,OAAEA,GAAMp1C,IAAEA,GAAGq1C,KAAEA,GAAIC,GAAEA,GAAEC,MAAEA,GAAKC,GAAEA,GAAEC,OAAEA,GAAMC,OAAEA,IAAW1gD,QAEhD2gD,GA2DZxlD,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EA1DHtmC,KAAAs/C,GAAgCL,GAAM,CAAE3gD,MAAO,gCAAiCxJ,KAAM,SAAUyqD,KAAM,MACtGv/C,KAAAw/C,GAAkCP,GAAM,CAAE3gD,MAAO,gCAAiCxJ,KAAM,SAAUyqD,KAAM,MACxGv/C,KAAAy/C,GAA+CN,GAAO,CAAE7gD,MAAO,gBAC/E8gD,GAAO,CAAE1tD,MAAO,UAAY,gCAC5B0tD,GAAO,CAAE1tD,MAAO,WAAa,iCAC7B0tD,GAAO,CAAE1tD,MAAO,YAAc,gCAEdsO,KAAA0/C,GAAiCT,GAAM,CAAE3gD,MAAO,gCAAiCxJ,KAAM,SAAUyqD,KAAM,MACvGv/C,KAAA2/C,GAAqCR,GAAO,CAAE7gD,MAAO,gBACrE8gD,GAAO,CAAE1tD,MAAO,OAAS,gCACzB0tD,GAAO,CAAE1tD,MAAO,aAAe,uCAGfsO,KAAA4/C,GAAmCd,GAAO,CAAEhX,MAAO,iBACnD9nC,KAAA6/C,GAAiCf,GAAO,CAAEhX,MAAO,aAAcxpC,MAAO,cAAgB,QAEvF0B,KAAA6nC,UAA4Bn+B,GAAI,CAAEo+B,MAAO,qBAAsBxpC,MAAO,iBACrF0gD,GAAG,iBACHt1C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,sBACZ,8BACA4gD,KACAH,GAAK,CAAEzgD,MAAO,uCAAyC,uBACvD4gD,KACAH,GAAK,CAAEzgD,MAAO,uCAAyC,8DACvD4gD,MAEDl/C,KAAKs/C,IAEN51C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,6CACZ,iBACA4gD,KACAH,GAAK,CAAEzgD,MAAO,8BAA8ByB,EAAYyH,kBAAoB,qCAG7ExH,KAAK0/C,IAENh2C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,gBAAkB0B,KAAK2/C,KAE/Dj2C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,sBACZ,iBACA4gD,KACAH,GAAK,CAAEzgD,MAAO,uCAAyC,0CAExD0B,KAAKw/C,IAEN91C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,gBAAkB0B,KAAKy/C,KAE/D/1C,GAAI,CAAEpL,MAAO,+EACZ0B,KAAK6/C,IAEN7/C,KAAK4/C,IAmDE5/C,KAAA8/C,GAAS,KAChB9/C,KAAKsmC,EAAKqF,QAGJ3rC,KAAA+/C,QAAU,KAChB//C,KAAK6/C,GAAYG,oBAAoB,QAAShgD,KAAKigD,IACnDjgD,KAAK4/C,GAAcI,oBAAoB,QAAShgD,KAAK8/C,IACrD9/C,KAAKs/C,GAAYU,oBAAoB,WAAYX,GAAmBa,IACpElgD,KAAKs/C,GAAYU,oBAAoB,OAAQX,GAAmBc,IAChEngD,KAAKw/C,GAAcQ,oBAAoB,WAAYX,GAAmBa,IACtElgD,KAAKw/C,GAAcQ,oBAAoB,OAAQX,GAAmBc,IAClEngD,KAAK0/C,GAAaM,oBAAoB,WAAYX,GAAmBa,IACrElgD,KAAK0/C,GAAaM,oBAAoB,OAAQX,GAAmBc,IACjEngD,KAAK6nC,UAAUmY,oBAAoB,UAAWhgD,KAAKogD,KAG5CpgD,KAAAogD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQpiD,SAAwC,IAAjBuqC,EAAM8X,SACxDtgD,KAAKigD,MAsBCjgD,KAAAigD,GAAe,KACtBx/B,OAAOC,aAAa6/B,QAAQ,oBAAqBvgD,KAAKy/C,GAA0B/tD,OAChF+uB,OAAOC,aAAa6/B,QAAQ,mBAAoBvgD,KAAK2/C,GAAgBjuD,OACrE,MAAM8uD,EAAqB,IAAIrV,GAC/BqV,EAAM/S,OAAO,IAAI2C,GAAUpwC,KAAKsmC,EAAM+Y,GAAmBoB,GAAUzgD,KAAKs/C,MACxEkB,EAAM/S,OAAO,IAAI4C,GAAerwC,KAAKsmC,EAAM+Y,GAAmBoB,GAAUzgD,KAAK0/C,IAA6C,aAA9B1/C,KAAK2/C,GAAgBjuD,QACjH8uD,EAAM/S,OAAO,IAAIsL,GAAkB/4C,KAAKsmC,EAAM+Y,GAAmBoB,GAAUzgD,KAAKw/C,IAAgBx/C,KAAKy/C,GAA0B/tD,QAC/HsO,KAAKsmC,EAAKoa,OAAS,KACnB1gD,KAAKsmC,EAAKqa,OAAOH,GAAO,IA9FxBxgD,KAAKs/C,GAAY5tD,MAAQsO,KAAKsmC,EAAKnmC,KAAKkb,IAAM,GAC9Crb,KAAKs/C,GAAYjvD,IAAMtC,EAAOiF,OAAS,GACvCgN,KAAKs/C,GAAYpwC,IAAMnhB,EAAOkF,OAAS,GAEvC+M,KAAK0/C,GAAahuD,MAAQsO,KAAKsmC,EAAKnmC,KAAKob,SAAW,GACpDvb,KAAK0/C,GAAarvD,IAAMtC,EAAO+E,YAAc,GAC7CkN,KAAK0/C,GAAaxwC,IAAMnhB,EAAOgF,YAAc,GAE7CiN,KAAKw/C,GAAc9tD,MAAQsO,KAAKsmC,EAAKnmC,KAAKmb,YAAc,GACxDtb,KAAKw/C,GAAcnvD,IAAMtC,EAAO6E,eAAiB,GACjDoN,KAAKw/C,GAActwC,IAAMnhB,EAAO8E,eAAiB,GAEjD,MAAM+tD,EAA8BngC,OAAOC,aAAaC,QAAQ,oBAC5C,MAAhBigC,IACH5gD,KAAK2/C,GAAgBjuD,MAAQkvD,GAG9B,MAAMC,EAA8BpgC,OAAOC,aAAaC,QAAQ,qBAC5C,MAAhBkgC,IACH7gD,KAAKy/C,GAA0B/tD,MAAQmvD,GAGxC7gD,KAAKs/C,GAAYH,SACjB2B,YAAW,IAAM9gD,KAAKs/C,GAAYyB,UAElC/gD,KAAK0/C,GAAaP,SAClB2B,YAAW,IAAM9gD,KAAK0/C,GAAaqB,UAEnC/gD,KAAKw/C,GAAcL,SACnB2B,YAAW,IAAM9gD,KAAKw/C,GAAcuB,UAEpC/gD,KAAK6/C,GAAY5V,iBAAiB,QAASjqC,KAAKigD,IAChDjgD,KAAK4/C,GAAc3V,iBAAiB,QAASjqC,KAAK8/C,IAElD9/C,KAAKs/C,GAAYrV,iBAAiB,WAAYoV,GAAmBa,IACjElgD,KAAKs/C,GAAYrV,iBAAiB,OAAQoV,GAAmBc,IAE7DngD,KAAK0/C,GAAazV,iBAAiB,WAAYoV,GAAmBa,IAClElgD,KAAK0/C,GAAazV,iBAAiB,OAAQoV,GAAmBc,IAE9DngD,KAAKw/C,GAAcvV,iBAAiB,WAAYoV,GAAmBa,IACnElgD,KAAKw/C,GAAcvV,iBAAiB,OAAQoV,GAAmBc,IAE/DngD,KAAK6nC,UAAUoC,iBAAiB,UAAWjqC,KAAKogD,IAyBzCvmD,UAAoB2uC,GAC3B,MAAMwY,EAAYxY,EAAW,MAAIA,EAAMyY,MAAQzY,EAAM8X,QACrD,OAAgB,IAAZU,GAAkBA,EAAW,KAAOA,EAAW,IAAMA,EAAW,MACnExY,EAAMQ,kBACC,GAKDnvC,UAAuB2uC,GAC9B,MAAMyW,EAA4CzW,EAAM6X,OACxDpB,EAAMvtD,MAAQssB,OAAOqhC,GAAmBoB,GAAUxB,IAG3CplD,UAAiBolD,GACxB,OAAOrwD,KAAKsU,MAAMtU,KAAKsgB,IAAIqnB,OAAO0oB,EAAM5uD,KAAMzB,KAAKyB,IAAIkmC,OAAO0oB,EAAM/vC,KAAMqnB,OAAO0oB,EAAMvtD,WCnJzF,MAAMotD,OAAEA,GAAMp1C,IAAEA,GAAGs1C,GAAEA,GAAEC,MAAEA,IAAUvgD,QAEtBwiD,GAsCZrnD,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EArCHtmC,KAAAmhD,GAAqClC,GAAM,CAAE3gD,MAAO,gCAAiCxJ,KAAM,SAAUyqD,KAAM,MAC3Gv/C,KAAAohD,GAAwCnC,GAAM,CAAE3gD,MAAO,gCAAiCxJ,KAAM,SAAUyqD,KAAM,MAC9Gv/C,KAAAqhD,GAAyCpC,GAAM,CAAE3gD,MAAO,gCAAiCxJ,KAAM,SAAUyqD,KAAM,MAC/Gv/C,KAAAshD,GAAwCrC,GAAM,CAAE3gD,MAAO,gCAAiCxJ,KAAM,SAAUyqD,KAAM,MAC9Gv/C,KAAAuhD,GAAuCtC,GAAM,CAAE3gD,MAAO,gCAAiCxJ,KAAM,SAAUyqD,KAAM,MAE7Gv/C,KAAA4/C,GAAmCd,GAAO,CAAEhX,MAAO,iBACnD9nC,KAAA6/C,GAAiCf,GAAO,CAAEhX,MAAO,aAAcxpC,MAAO,cAAgB,QAEvF0B,KAAA6nC,UAA4Bn+B,GAAI,CAAEo+B,MAAO,qBAAsBxpC,MAAO,iBACrF0gD,GAAG,oBACHt1C,GAAI,CAAEpL,MAAO,oGACZ,kBACA0B,KAAKqhD,IAEN33C,GAAI,CAAEpL,MAAO,oGACZ,iBACA0B,KAAKshD,IAEN53C,GAAI,CAAEpL,MAAO,oGACZ,gBACA0B,KAAKuhD,IAEN73C,GAAI,CAAEpL,MAAO,oGACZ,wBACA0B,KAAKmhD,IAENz3C,GAAI,CAAEpL,MAAO,oGACZ,2BACA0B,KAAKohD,IAEN13C,GAAI,CAAEpL,MAAO,+EACZ0B,KAAK6/C,IAEN7/C,KAAK4/C,IA0CE5/C,KAAA8/C,GAAS,KAChB9/C,KAAKsmC,EAAKqF,QAGJ3rC,KAAA+/C,QAAU,KAChB//C,KAAK6/C,GAAYG,oBAAoB,QAAShgD,KAAKigD,IACnDjgD,KAAK4/C,GAAcI,oBAAoB,QAAShgD,KAAK8/C,IACrD9/C,KAAKmhD,GAAiBnB,oBAAoB,WAAYkB,GAAsBhB,IAC5ElgD,KAAKohD,GAAoBpB,oBAAoB,WAAYkB,GAAsBhB,IAC/ElgD,KAAKqhD,GAAqBrB,oBAAoB,WAAYkB,GAAsBhB,IAChFlgD,KAAKshD,GAAoBtB,oBAAoB,WAAYkB,GAAsBhB,IAC/ElgD,KAAKuhD,GAAmBvB,oBAAoB,WAAYkB,GAAsBhB,IAC9ElgD,KAAKmhD,GAAiBnB,oBAAoB,OAAQkB,GAAsBf,IACxEngD,KAAKohD,GAAoBpB,oBAAoB,OAAQkB,GAAsBf,IAC3EngD,KAAKqhD,GAAqBrB,oBAAoB,OAAQkB,GAAsBf,IAC5EngD,KAAKshD,GAAoBtB,oBAAoB,OAAQkB,GAAsBf,IAC3EngD,KAAKuhD,GAAmBvB,oBAAoB,OAAQkB,GAAsBf,IAC1EngD,KAAK6nC,UAAUmY,oBAAoB,UAAWhgD,KAAKogD,KAG5CpgD,KAAAogD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQpiD,SAAwC,IAAjBuqC,EAAM8X,SACxDtgD,KAAKigD,MAsBCjgD,KAAAigD,GAAe,KACtB,MAAMO,EAAqB,IAAIrV,GAC/BqV,EAAM/S,OAAO,IAAIoI,GAAyB71C,KAAKsmC,EAAM4a,GAAsBT,GAAUzgD,KAAKmhD,MAC1FX,EAAM/S,OAAO,IAAIuG,GAA4Bh0C,KAAKsmC,EAAM4a,GAAsBT,GAAUzgD,KAAKohD,MAC7FZ,EAAM/S,OAAO,IAAIwD,GAAmBjxC,KAAKsmC,EAAM4a,GAAsBT,GAAUzgD,KAAKqhD,IAAuBH,GAAsBT,GAAUzgD,KAAKshD,IAAsBJ,GAAsBT,GAAUzgD,KAAKuhD,MAC3MvhD,KAAKsmC,EAAKoa,OAAS,KACnB1gD,KAAKsmC,EAAKqa,OAAOH,GAAO,IAxFxBxgD,KAAKmhD,GAAiBzvD,MAAQsO,KAAKsmC,EAAKnmC,KAAKqb,mBAAqB,GAClExb,KAAKmhD,GAAiB9wD,IAAM,IAC5B2P,KAAKmhD,GAAiBjyC,IAAMnhB,EAAOgF,YAAc,GAEjDiN,KAAKohD,GAAoB1vD,MAAQsO,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,GACxE1b,KAAKohD,GAAoB/wD,IAAMtC,EAAOmF,yBAA2B,GACjE8M,KAAKohD,GAAoBlyC,IAAMnhB,EAAOoF,yBAA2B,GAEjE6M,KAAKqhD,GAAqB3vD,MAAQsO,KAAKsmC,EAAKnmC,KAAKe,kBAAoB,GACrElB,KAAKqhD,GAAqBhxD,IAAMtC,EAAOkK,qBAAuB,GAC9D+H,KAAKqhD,GAAqBnyC,IAAMnhB,EAAOmK,qBAAuB,GAE9D8H,KAAKshD,GAAoB5vD,MAAQsO,KAAKsmC,EAAKnmC,KAAKiB,kBAAoB,GACpEpB,KAAKshD,GAAoBjxD,IAAMtC,EAAOoK,qBAAuB,GAC7D6H,KAAKshD,GAAoBpyC,IAAMnhB,EAAOqK,qBAAuB,GAE7D4H,KAAKuhD,GAAmB7vD,MAAQsO,KAAKsmC,EAAKnmC,KAAK4a,gBAAkB,GACjE/a,KAAKuhD,GAAmBlxD,IAAMtC,EAAOsK,mBAAqB,GAC1D2H,KAAKuhD,GAAmBryC,IAAMnhB,EAAOuK,mBAAqB,GAE1D0H,KAAKqhD,GAAqBlC,SAC1B2B,YAAW,IAAM9gD,KAAKqhD,GAAqBN,UAE3C/gD,KAAK6/C,GAAY5V,iBAAiB,QAASjqC,KAAKigD,IAChDjgD,KAAK4/C,GAAc3V,iBAAiB,QAASjqC,KAAK8/C,IAClD9/C,KAAKmhD,GAAiBlX,iBAAiB,WAAYiX,GAAsBhB,IACzElgD,KAAKohD,GAAoBnX,iBAAiB,WAAYiX,GAAsBhB,IAC5ElgD,KAAKqhD,GAAqBpX,iBAAiB,WAAYiX,GAAsBhB,IAC7ElgD,KAAKshD,GAAoBrX,iBAAiB,WAAYiX,GAAsBhB,IAC5ElgD,KAAKuhD,GAAmBtX,iBAAiB,WAAYiX,GAAsBhB,IAC3ElgD,KAAKmhD,GAAiBlX,iBAAiB,OAAQiX,GAAsBf,IACrEngD,KAAKohD,GAAoBnX,iBAAiB,OAAQiX,GAAsBf,IACxEngD,KAAKqhD,GAAqBpX,iBAAiB,OAAQiX,GAAsBf,IACzEngD,KAAKshD,GAAoBrX,iBAAiB,OAAQiX,GAAsBf,IACxEngD,KAAKuhD,GAAmBtX,iBAAiB,OAAQiX,GAAsBf,IACvEngD,KAAK6nC,UAAUoC,iBAAiB,UAAWjqC,KAAKogD,IA6BzCvmD,UAAoB2uC,GAC3B,MAAMwY,EAAYxY,EAAW,MAAIA,EAAMyY,MAAQzY,EAAM8X,QACrD,OAAgB,IAAZU,GAAkBA,EAAW,KAAOA,EAAW,IAAMA,EAAW,MACnExY,EAAMQ,kBACC,GAKDnvC,UAAuB2uC,GAC9B,MAAMyW,EAA4CzW,EAAM6X,OACxDpB,EAAMvtD,MAAQssB,OAAOkjC,GAAsBT,GAAUxB,IAG9CplD,UAAiBolD,GACxB,OAAOrwD,KAAKsU,MAAMtU,KAAKsgB,IAAIqnB,OAAO0oB,EAAM5uD,KAAMzB,KAAKyB,IAAIkmC,OAAO0oB,EAAM/vC,KAAMqnB,OAAO0oB,EAAMvtD,WCxHzF,MAAMotD,OAAEA,GAAMp1C,IAAEA,GAAGs1C,GAAEA,IAAOtgD,QAEf8iD,GA0BZ3nD,YAAY+yC,GAxBJ5sC,KAAA+nC,EAAkB,EAClB/nC,KAAAyhD,GAAkB,EAClBzhD,KAAA0hD,GAAqB,EACrB1hD,KAAA2hD,GAAmB,EACnB3hD,KAAAgoC,GAAsB,EACvBhoC,KAAA4hD,SAAyB,IAAInzD,aAAa,IAC1CuR,KAAA6hD,iBAAiC,IAAIpzD,aAAa,IACjDuR,KAAA8hD,GAA4B,EAC5B9hD,KAAA+hD,GAA+B,GACtB/hD,KAAAwmC,EAAuB,IACvBxmC,KAAAymC,EAAwB,IACxBzmC,KAAAgiD,GAAwBjjD,EAAI0oC,KAAK,CAAEb,KAAM7mC,EAAY+H,mBAAoBq/B,iBAAkB,SAC3FnnC,KAAAiiD,GAAwBljD,EAAImoC,IAAI,CAAEC,iBAAkB,SACpDnnC,KAAAkiD,GAA2BnjD,EAAImoC,IAAI,CAAEC,iBAAkB,SACvDnnC,KAAAmiD,GAAyBpjD,EAAImoC,IAAI,CAAEC,iBAAkB,SACrDnnC,KAAA4nC,EAAsB7oC,EAAImoC,IAAI,CAAE5oC,MAAO,qBAAqByB,EAAYqH,2DAA4D2/B,MAAO,OAAQC,OAAQ,OAAQob,QAAS,OAASpiD,KAAKwmC,EAAe,IAAMxmC,KAAKymC,EAAe4b,oBAAqB,QACxQriD,KAAKgiD,GACLhiD,KAAKiiD,GACLjiD,KAAKkiD,GACLliD,KAAKmiD,IAGUniD,KAAA6nC,UAAyBnpC,EAAKgL,IAAI,CAAEo+B,MAAO,GAAIxpC,MAAO,uDAAyD0B,KAAK4nC,GA+C5H5nC,KAAAsiD,GAAe,KAEtB,IAAIC,GAAY,EAChB,GAAIviD,KAAK+hD,GAAa3zD,OAAS,EAC9B,IAAK,IAAID,EAAI,EAAGA,EAAI,GAAIA,IACnB6R,KAAK+hD,GAAa/hD,KAAK8hD,IAAmB3zD,IAAM6R,KAAK4hD,SAASzzD,KACjEo0D,GAAY,EAAOp0D,EAAI,IAKT,GAAbo0D,GAAkD,GAA5BviD,KAAK+hD,GAAa3zD,SAG3C4R,KAAK+hD,GAAa3jC,OAAO,EAAGpe,KAAK8hD,IAEjC9hD,KAAK8hD,GAAoB,EAEzB9hD,KAAK+hD,GAAa1jC,QAAQre,KAAK4hD,SAAS5iC,SAGpChf,KAAK+hD,GAAa3zD,OAAS,IAC9B4R,KAAK+hD,GAAazjC,QAOdte,KAAA2rC,KAAO,KAET3rC,KAAK8hD,GAAoB9hD,KAAK+hD,GAAa3zD,OAAS,IACvD4R,KAAK8hD,KACL9hD,KAAK4hD,SAAW5hD,KAAK+hD,GAAa/hD,KAAK8hD,IAAmB9iC,QAC1D,IAAIuvB,GAAiBvuC,KAAKsmC,EAAMtmC,KAAK4hD,UACrC5hD,KAAKwiD,WAKAxiD,KAAA0rC,KAAO,KAET1rC,KAAK8hD,GAAoB,IAC5B9hD,KAAK8hD,KACL9hD,KAAK4hD,SAAW5hD,KAAK+hD,GAAa/hD,KAAK8hD,IAAmB9iC,QAC1D,IAAIuvB,GAAiBvuC,KAAKsmC,EAAMtmC,KAAK4hD,UACrC5hD,KAAKwiD,WAKCxiD,KAAAogD,GAAmB5X,IACL,IAAjBA,EAAM8X,UACTtgD,KAAK2rC,OACLnD,EAAMia,mBAEc,IAAjBja,EAAM8X,UACTtgD,KAAK0rC,OACLlD,EAAMia,oBAIAziD,KAAA+oC,GAAqBP,IAC5BA,EAAMQ,iBACNhpC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7HrpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAK0hD,IAAc,EAEnB1hD,KAAK2pC,MAGE3pC,KAAAwpC,GAAqBhB,IAC5BA,EAAMQ,iBACNhpC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvHrpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAK0hD,IAAc,EAEnB1hD,KAAK2pC,MAGE3pC,KAAA0pC,GAAmBlB,IAC1B,GAAmC,MAA/BxoC,KAAK6nC,UAAUmb,aAAsB,OACzC,MAAM/Z,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7HrpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAK2pC,MAGE3pC,KAAA4pC,GAAmBpB,IAC1B,GAAmC,MAA/BxoC,KAAK6nC,UAAUmb,aAAsB,OACzC,IAAKhjD,KAAKgoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvHrpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAK2pC,MA2CE3pC,KAAA6pC,GAAuBrB,IAE9BxoC,KAAKsiD,KACLtiD,KAAKgoC,GAAa,GApMlBhoC,KAAKsmC,EAAOsG,EAEZ,IAAK,IAAIz+C,EAAY,EAAGA,GAAK,EAAGA,GAAK,EACpC6R,KAAKiiD,GAAOnlD,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYkI,MAAO4+B,EAAI14C,EAAI6R,KAAKwmC,EAAe,EAAK,EAAGM,EAAG,EAAGC,MAAO,EAAGC,OAAQhnC,KAAKymC,KAE9H,IAAK,IAAIt4C,EAAY,EAAGA,GAAK,EAAGA,IAC/B6R,KAAKkiD,GAAUplD,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYmI,UAAW2+B,EAAI14C,EAAI6R,KAAKwmC,EAAe,EAAK,EAAGM,EAAG,EAAGC,MAAO,EAAGC,OAAQhnC,KAAKymC,KAIrIzmC,KAAKiiD,GAAOnlD,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYkI,MAAO4+B,EAAG,EAAGC,EAAI9mC,KAAKymC,EAAgB,EAAK,EAAGM,MAAO/mC,KAAKwmC,EAAcQ,OAAQ,KACrI,IAAK,IAAI74C,EAAY,EAAGA,EAAI,EAAGA,IAC9B6R,KAAKkiD,GAAUplD,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYmI,UAAW2+B,EAAG,EAAGC,EAAO,EAAJ34C,GAAS6R,KAAKymC,EAAgB,IAAKM,MAAO/mC,KAAKwmC,EAAcQ,OAAQ,KACjJhnC,KAAKkiD,GAAUplD,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYmI,UAAW2+B,EAAG,EAAGC,EAAG9mC,KAAKymC,EAAgB,EAAQ,EAAJt4C,GAAS6R,KAAKymC,EAAgB,IAAKM,MAAO/mC,KAAKwmC,EAAcQ,OAAQ,KAI3K,IAAIic,EAAcljD,EAAYW,gBAAgBV,KAAKsmC,EAAKnmC,KAAMH,KAAKsmC,EAAKlmC,SAASa,YAEjF,IAAK,IAAI9S,EAAY,EAAGA,GAAK,GAAIA,IAAK,CACrC,IAAIghB,EAAcnP,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAAwB7yC,eAAe1N,GAC1H6R,KAAK4hD,SAASzzD,GAAKghB,EACnBnP,KAAK6hD,iBAAiB1zD,GAAKghB,EAC3BnP,KAAKmiD,GAAQrlD,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAMqc,EAAKpc,EAAI14C,EAAI6R,KAAKwmC,EAAe,GAAKM,GAAI33B,EAAM,KAAOnP,KAAKymC,EAAgB,IAAKM,MAAO/mC,KAAKwmC,EAAe,GAAIQ,OAAQhnC,KAAKymC,EAAgB,MAIxLzmC,KAAKsiD,KAELtiD,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK+oC,IAClDhsC,SAASktC,iBAAiB,YAAajqC,KAAK0pC,IAC5C3sC,SAASktC,iBAAiB,UAAWjqC,KAAK6pC,IAE1C7pC,KAAK6nC,UAAUoC,iBAAiB,aAAcjqC,KAAKwpC,IACnDxpC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK4pC,IAClD5pC,KAAK6nC,UAAUoC,iBAAiB,WAAYjqC,KAAK6pC,IACjD7pC,KAAK6nC,UAAUoC,iBAAiB,cAAejqC,KAAK6pC,IAEpD7pC,KAAK4nC,EAAKqC,iBAAiB,UAAWjqC,KAAKogD,IAC3CpgD,KAAK6nC,UAAUoC,iBAAiB,UAAWjqC,KAAKogD,IAkHzCvmD,KACP,GAAImG,KAAKgoC,EAAY,CACpB,MAAMh5C,EAAgBJ,KAAKyB,IAAI,GAAIzB,KAAKsgB,IAAI,EAAGtgB,KAAKsU,MAAqB,GAAflD,KAAK+nC,EAAe/nC,KAAKwmC,KAC7E0c,EAAct0D,KAAKyB,IAAI,GAAIzB,KAAKsgB,IAAI,EAAGtgB,KAAKsU,MAAqB,GAAflD,KAAKyhD,GAAezhD,KAAKymC,KAGjF,IAAwB,GAApBzmC,KAAK0hD,IAAoB1hD,KAAK0hD,IAAc1yD,EAAO,CACtD,IAAIm0D,EAASn0D,EACTo0D,EAAUpjD,KAAK0hD,GACf2B,EAAcH,EACdI,EAAYtjD,KAAK2hD,GACjB3hD,KAAK0hD,GAAa1yD,IACrBm0D,EAASnjD,KAAK0hD,GACd0B,EAAUp0D,EACVq0D,EAAcrjD,KAAK2hD,GACnB2B,EAAYJ,GAEb,IAAK,IAAI/0D,EAAIg1D,EAAQh1D,GAAKi1D,EAASj1D,IAAK,CACvC,MAAMo1D,EAAiB30D,KAAKmb,MAAMs5C,GAA4Cl1D,EAAIg1D,IAAWC,EAAUD,IAAtDG,EAAYD,IAC7DrjD,KAAK4hD,SAASzzD,GAAKo1D,EAAS,GAC5BvjD,KAAKmiD,GAAQqB,SAASr1D,GAAG0P,aAAa,IAAK,GAAM0lD,GAAUvjD,KAAKymC,EAAgB,WAKjFzmC,KAAK4hD,SAAS5yD,GAASk0D,EAAM,GAC7BljD,KAAKmiD,GAAQqB,SAASx0D,GAAO6O,aAAa,IAAK,GAAMqlD,GAAOljD,KAAKymC,EAAgB,KAMlF,IAAI8H,GAAiBvuC,KAAKsmC,EAAMtmC,KAAK4hD,UAErC5hD,KAAK0hD,GAAa1yD,EAClBgR,KAAK2hD,GAAWuB,GAWXrpD,SACN,IAAK,IAAI1L,EAAI,EAAGA,EAAI,GAAIA,IACvB6R,KAAKmiD,GAAQqB,SAASr1D,GAAG0P,aAAa,IAAK,IAAOmC,KAAK4hD,SAASzzD,GAAK,KAAO6R,KAAKymC,EAAgB,YAKvFgd,GAuBZ5pD,YAAoBysC,EAA4Bod,GAA5B1jD,KAAAsmC,EAAAA,EAA4BtmC,KAAA0jD,GAAAA,EArBzC1jD,KAAA2jD,iBAA2C,IAAInC,GAAuBxhD,KAAKsmC,GAElEtmC,KAAA4jD,GAAiC9E,GAAO,CAAExgD,MAAO,cAAexJ,KAAM,WAErEkL,KAAA4/C,GAAmCd,GAAO,CAAEhX,MAAO,iBACnD9nC,KAAA6/C,GAAiCf,GAAO,CAAEhX,MAAO,aAAcxpC,MAAO,cAAgB,QAEvF0B,KAAA6nC,UAA4Bn+B,GAAI,CAAEo+B,MAAO,qBAAsBxpC,MAAO,iBACrF0gD,GAAG,+BACHt1C,GAAI,CAAEpL,MAAO,qHACZ0B,KAAK4jD,IAENl6C,GAAI,CAAEpL,MAAO,qFACZ0B,KAAK2jD,iBAAiB9b,WAEvBn+B,GAAI,CAAEpL,MAAO,+EACZ0B,KAAK6/C,IAEN7/C,KAAK4/C,IAiBE5/C,KAAA6jD,GAAc,KACjB7jD,KAAKsmC,EAAKzN,MAAM7L,SACnBhtB,KAAK0jD,GAAYI,KACjB9jD,KAAK+jD,qBAEL/jD,KAAKsmC,EAAKzN,MAAM5I,YAChBjwB,KAAK0jD,GAAYM,KACjBhkD,KAAK+jD,qBAkBC/jD,KAAA8/C,GAAS,KAChB9/C,KAAKsmC,EAAKoa,OAAS,KACnB1gD,KAAKsmC,EAAKqF,QAGJ3rC,KAAA+/C,QAAU,KAChB//C,KAAK6/C,GAAYG,oBAAoB,QAAShgD,KAAKigD,IACnDjgD,KAAK4/C,GAAcI,oBAAoB,QAAShgD,KAAK8/C,IACrD9/C,KAAK6nC,UAAUmY,oBAAoB,UAAWhgD,KAAKikD,gBAEnDjkD,KAAK4jD,GAAY5D,oBAAoB,QAAShgD,KAAK6jD,KAG7C7jD,KAAAikD,eAAkBzb,IACe,UAAzBA,EAAM6X,OAAQpiD,SAAwC,IAAjBuqC,EAAM8X,SACxDtgD,KAAKigD,KAEe,IAAjBzX,EAAM8X,UACTtgD,KAAK6jD,KACLrb,EAAMQ,kBAEc,IAAjBR,EAAM8X,UACTtgD,KAAK2jD,iBAAiBhY,OACtBnD,EAAMia,mBAEc,IAAjBja,EAAM8X,UACTtgD,KAAK2jD,iBAAiBjY,OACtBlD,EAAMia,oBAIAziD,KAAAigD,GAAe,KACtBjgD,KAAKsmC,EAAKoa,OAAS,KAEnB,IAAInS,GAAiBvuC,KAAKsmC,EAAMtmC,KAAK2jD,iBAAiB9B,kBACtD7hD,KAAKsmC,EAAKqa,OAAO,IAAIpS,GAAiBvuC,KAAKsmC,EAAMtmC,KAAK2jD,iBAAiB/B,WAAW,IAxElF5hD,KAAK6/C,GAAY5V,iBAAiB,QAASjqC,KAAKigD,IAChDjgD,KAAK4/C,GAAc3V,iBAAiB,QAASjqC,KAAK8/C,IAClD9/C,KAAK6nC,UAAUoC,iBAAiB,UAAWjqC,KAAKikD,gBAChDjkD,KAAK4jD,GAAY3Z,iBAAiB,QAASjqC,KAAK6jD,IAChD7jD,KAAK+jD,mBAELjD,YAAW,IAAM9gD,KAAK4jD,GAAY7C,UAGlC/gD,KAAK2jD,iBAAiBnB,SAchB3oD,mBACFmG,KAAKsmC,EAAKzN,MAAM7L,SACnBhtB,KAAK4jD,GAAY/2C,UAAUsqB,OAAO,cAClCn3B,KAAK4jD,GAAY/2C,UAAUC,IAAI,eAC/B9M,KAAK4jD,GAAYjoC,MAAQ,gBACzB3b,KAAK4jD,GAAYM,UAAY,UAE7BlkD,KAAK4jD,GAAY/2C,UAAUsqB,OAAO,eAClCn3B,KAAK4jD,GAAY/2C,UAAUC,IAAI,cAC/B9M,KAAK4jD,GAAYjoC,MAAQ,eACzB3b,KAAK4jD,GAAYM,UAAY,SC7ShC,SAASC,GAASp2C,EAAqB3f,GACtC,MAAMg2D,EAAoB,IAAIC,YAAYj2D,GAC1C,IAAIk2D,EAAa,EACbC,EAAY31D,KAAKyB,IAAI0d,EAAOy2C,WAAYJ,EAAKI,YACjD,MAAMC,EAAY,CAAC,EAAG,EAAG,EAAG,GAC5B,IAAK,MAAMC,KAAYD,EACtB,GAAIF,GAAaG,EAAU,CAC1B,MAAM/nD,EAAOgoD,EAAaD,EAAU32C,EAAQq2C,EAAME,EAAYC,GAC9DD,EAAa3nD,EAAK2nD,WAClBC,EAAY5nD,EAAK4nD,UAGnB,OAAOH,EACP,SAASO,EAAaD,EAAkB32C,EAAqBq2C,EAAmBE,EAAoBC,GACnG,IAAIK,EAAiBC,WACrB,OAAQH,GACP,KAAK,EACJE,EAAYn2D,aACZ,MACD,KAAK,EACJm2D,EAAYv1D,aACZ,MACD,KAAK,EACJu1D,EAAYE,YACZ,MACD,KAAK,EAGL,QACCF,EAAYC,WAId,MAAME,EAAc,IAAIH,EAAU72C,EAAQu2C,EAAaC,EAAYG,EAAY,GACzEM,EAAY,IAAIJ,EAAUR,EAAME,EAAaC,EAAYG,EAAY,GAC3E,IAAK,IAAIv2D,EAAY,EAAGA,EAAI62D,EAAU52D,OAAQD,IAC7C62D,EAAU72D,GAAK42D,EAAY52D,GAE5B,MAAO,CACNm2D,WAAYS,EAAYE,WAAaF,EAAYP,WACjDD,UAAWA,EAAYS,EAAU52D,OAASs2D,UAMhCQ,GAMZrrD,YAAYsrD,GALJnlD,KAAAolD,GAAsB,EACtBplD,KAAAqlD,GAAoB,EAK3BrlD,KAAKslD,GAAe,IAAIjB,YAAYc,GACpCnlD,KAAKulD,GAAQ,IAAIC,SAASxlD,KAAKslD,IAGxBzrD,GAAU4rD,GACjBzlD,KAAKqlD,IAAaI,EACdzlD,KAAKqlD,GAAYrlD,KAAKslD,GAAad,aACtCxkD,KAAKslD,GAAenB,GAASnkD,KAAKslD,GAAc12D,KAAKsgB,IAAmC,EAA/BlP,KAAKslD,GAAad,WAAgBxkD,KAAKqlD,KAChGrlD,KAAKulD,GAAQ,IAAIC,SAASxlD,KAAKslD,KAI1BzrD,gBACN,OAAOmG,KAAKolD,GAGNvrD,cAAc7K,EAAe0C,GACnCsO,KAAKulD,GAAMG,UAAU12D,EAAO0C,IAAU,GAAG,GAGnCmI,YAAYnI,GAClBA,KAAkB,EAClBsO,KAAK2lD,GAAU,GACf3lD,KAAKulD,GAAMG,UAAU1lD,KAAKolD,GAAa1zD,GAAO,GAC9CsO,KAAKolD,GAAcplD,KAAKqlD,GAGlBxrD,YAAYnI,GAClBA,KAAkB,EAClBsO,KAAK2lD,GAAU,GACf3lD,KAAKulD,GAAMK,SAAS5lD,KAAKolD,GAAc1zD,GAAS,GAAM,KACtDsO,KAAKulD,GAAMK,SAAS5lD,KAAKolD,GAAc,EAAI1zD,GAAS,EAAK,KACzDsO,KAAKulD,GAAMK,SAAS5lD,KAAKolD,GAAc,EAAa,IAAV,GAC1CplD,KAAKolD,GAAcplD,KAAKqlD,GAGlBxrD,YAAYnI,GAClBA,KAAkB,EAClBsO,KAAK2lD,GAAU,GACf3lD,KAAKulD,GAAMM,UAAU7lD,KAAKolD,GAAa1zD,GAAO,GAC9CsO,KAAKolD,GAAcplD,KAAKqlD,GAGlBxrD,WAAWnI,GACjBA,KAAkB,EAClBsO,KAAK2lD,GAAU,GACf3lD,KAAKulD,GAAMK,SAAS5lD,KAAKolD,GAAa1zD,GACtCsO,KAAKolD,GAAcplD,KAAKqlD,GAGlBxrD,UAAUnI,GAChBA,GAAgB,EAChBsO,KAAK2lD,GAAU,GACf3lD,KAAKulD,GAAMO,QAAQ9lD,KAAKolD,GAAa1zD,GACrCsO,KAAKolD,GAAcplD,KAAKqlD,GAGlBxrD,eAAenI,GAErB,IADAA,KAAkB,IACL,IAAM,MAAM,IAAI9B,MAAM,kCACnCoQ,KAAK2lD,GAAU,GACf3lD,KAAKulD,GAAMK,SAAS5lD,KAAKolD,GAAa1zD,GACtCsO,KAAKolD,GAAcplD,KAAKqlD,GAGlBxrD,wBAAwBnI,GAE9B,IADAA,KAAkB,GACN,UAAY,MAAM,IAAI9B,MAAM,sCACxC,IAAIm2D,GAAwB,EAC5B,IAAK,IAAI53D,EAAY,EAAGA,EAAI,EAAGA,IAAK,CACnC,MACM6tB,EAAgBtqB,IADA,GAAS,EAAJvD,EACc,IAC7B,GAAR6tB,GAAkB,GAAL7tB,IAAQ43D,GAAe,GACpCA,GAAc/lD,KAAKgmD,YAAiB,GAAL73D,EAAS,EAAO,KAAQ6tB,IAItDniB,eAAeie,GACrB9X,KAAKimD,wBAAwBnuC,EAAO1pB,QACpC,IAAK,IAAID,EAAY,EAAGA,EAAI2pB,EAAO1pB,OAAQD,IAAK,CAC/C,MAAM6yD,EAAmBlpC,EAAO5J,WAAW/f,GAC3C,GAAI6yD,EAAW,IAAM,MAAM,IAAIpxD,MAAM,+CACrCoQ,KAAKgmD,WAAWhF,IAIXnnD,uBACN,OAAOsqD,GAASnkD,KAAKslD,GAActlD,KAAKqlD,KC5InC,MACMa,GAA+B,KAsG/BC,GAAmD,CAC/DC,GAAI,CAAEzqD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCwyD,GAAI,CAAE1qD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCyyD,GAAI,CAAE3qD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzC0yD,GAAI,CAAE5qD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzC2yD,GAAI,CAAE7qD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzC4yD,GAAI,CAAE9qD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzC6yD,GAAI,CAAE/qD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzC8yD,GAAI,CAAEhrD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzC+yD,GAAI,CAAEjrD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCgzD,GAAI,CAAElrD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCizD,GAAI,CAAEnrD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCkzD,GAAI,CAAEprD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCmzD,GAAI,CAAErrD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCozD,GAAI,CAAEtrD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCqzD,GAAI,CAAEvrD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCszD,GAAI,CAAExrD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCuzD,GAAI,CAAEzrD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCwzD,GAAI,CAAE1rD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzCyzD,GAAI,CAAE3rD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzC0zD,GAAI,CAAE5rD,UAAW,GAAIsU,SAAU,EAAGpc,OAAQ,GAC1C2zD,GAAI,CAAE7rD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzC4zD,GAAI,CAAE9rD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzC6zD,GAAI,CAAE/rD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GACzC8zD,GAAI,CAAEhsD,UAAW,GAAIsU,SAAU,EAAGpc,OAAQ,GAC1C+zD,GAAI,CAAEjsD,UAAW,EAAGsU,SAAU,EAAGpc,OAAQ,GAUzCg0D,GAAI,CAAElsD,UAAW,GAAIsU,SAAU,EAAGpc,OAAQ,GAC1Ci0D,GAAI,CAAEnsD,UAAW,GAAIsU,SAAU,EAAGpc,OAAQ,GAG1Ck0D,GAAI,CAAEpsD,UAAW,GAAIsU,SAAU,EAAGpc,OAAQ,GAC1Cm0D,GAAI,CAAErsD,UAAW,GAAIsU,SAAU,EAAGpc,OAAQ,aAU3Bo0D,GAAuBp0D,GAEtC,OAAOjF,KAAKuB,IAAI0D,EAAS,IAAK,GAAO,kBCjJtC,MAAMirD,OAAEA,GAAMp1C,IAAEA,GAAGs1C,GAAEA,GAAEC,MAAEA,GAAKE,OAAEA,GAAMC,OAAEA,IAAW1gD,EAEnD,SAASwpD,GAAKC,EAAaC,EAAcnjB,GACxC,OAAOkjB,EAAMljB,GAAKmjB,EAAOD,GAG1B,SAASE,GAAKC,EAAY32D,GACzB,GAAI4H,UAAUgvD,iBAEb,YADAhvD,UAAUgvD,iBAAiBD,EAAM32D,GAIlC,MAAM62D,EAA4BzrD,SAAS0C,cAAc,KACzD,GAAuB0N,MAAnBq7C,EAAOC,SAAuB,CACjC,MAAMC,EAAcC,IAAIC,gBAAgBN,GACxCxH,YAAW,WAAc6H,IAAIE,gBAAgBH,KAAS,KACtDF,EAAOM,KAAOJ,EACdF,EAAOC,SAAW92D,EAIlBmvD,YAAW,WAAc0H,EAAOO,cAAc,IAAIC,WAAW,YAAc,OACrE,CACN,MAAMN,EAAcC,IAAIC,gBAAgBN,GACxCxH,YAAW,WAAc6H,IAAIE,gBAAgBH,KAAS,KACjDjoC,OAAOwoC,KAAKP,EAAK,YAAWjoC,OAAOyoC,SAASJ,KAAOJ,UAI7CS,GA0FZtvD,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EAlFZtmC,KAAAopD,eAAyB,EAChBppD,KAAAqpD,GAA8BpK,GAAM,CAAEnqD,KAAM,OAAQwJ,MAAO,eAAgB5M,MAAO,eAAgB43D,UAAW,IAAKC,UAAa,cAC/HvpD,KAAAwpD,GAAwC9/C,GAAI,CAAEpL,MAAO,gBAAkB,IAAImrD,KAAK,SAChFzpD,KAAA0pD,GAAiCzK,GAAM,CAAEnqD,KAAM,aAC/CkL,KAAA2pD,GAAkC1K,GAAM,CAAE3gD,MAAO,cAAexJ,KAAM,SAAUzE,IAAK,IAAK6e,IAAK,IAAKqwC,KAAM,MAC1Gv/C,KAAA4pD,GAAiC3K,GAAM,CAAEnqD,KAAM,aAC/CkL,KAAA6pD,GAAmC1K,GAAO,CAAE7gD,MAAO,gBACnE8gD,GAAO,CAAE1tD,MAAO,OAAS,wBACzB0tD,GAAO,CAAE1tD,MAAO,OAAS,wBACzB0tD,GAAO,CAAE1tD,MAAO,QAAU,wBAC1B0tD,GAAO,CAAE1tD,MAAO,QAAU,0BAEVsO,KAAA4/C,GAAmCd,GAAO,CAAEhX,MAAO,iBACnD9nC,KAAA8pD,GAAmChL,GAAO,CAAEhX,MAAO,eAAgBxpC,MAAO,cAAgB,UAC1F0B,KAAA+pD,GAAqCrgD,GAAI,CAAEpL,MAAO,0BAA0ByB,EAAY6H,8DACxF5H,KAAAgqD,GAAuCtgD,GAAI,CAAEpL,MAAO,8CAAgD,MACpG0B,KAAAiqD,GAA2CvgD,GAAI,CAAEpL,MAAO,6BAA6ByB,EAAY+H,uEACjH9H,KAAK+pD,GACL/pD,KAAKgqD,IAiCUhqD,KAAA6nC,UAA4Bn+B,GAAI,CAAEo+B,MAAO,qBAAsBxpC,MAAO,iBACrF0gD,GAAG,kBACHt1C,GAAI,CAAEpL,MAAO,4FACZ,aACA0B,KAAKqpD,IAEN3/C,GAAI,CAAEpL,MAAO,4FACZ,UACA0B,KAAKwpD,IAEN9/C,GAAI,CAAEpL,MAAO,gCACZoL,GAAI,CAAEpL,MAAO,uBACZoL,GAAI,CAAEpL,MAAO,wBAA0B,UACvCoL,GAAI,CAAEpL,MAAO,wBAA0B,eACvCoL,GAAI,CAAEpL,MAAO,wBAA0B,WAExCoL,GAAI,CAAEpL,MAAO,uBACZoL,GAAI,CAAEpL,MAAO,gDAAkD0B,KAAK0pD,IACpEhgD,GAAI,CAAEpL,MAAO,gDAAkD0B,KAAK2pD,IACpEjgD,GAAI,CAAEpL,MAAO,gDAAkD0B,KAAK4pD,MAGtElgD,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,gBAAkB0B,KAAK6pD,IAC9DngD,GAAI,CAAEpL,MAAO,qBAAuB,kGACpC0B,KAAKiqD,GACLvgD,GAAI,CAAEpL,MAAO,+EACZ0B,KAAK8pD,IAEN9pD,KAAK4/C,IAoDE5/C,KAAA8/C,GAAS,KAChB9/C,KAAKopD,eAAgB,EACrBppD,KAAKsmC,EAAKqF,QAOJ3rC,KAAA+/C,QAAU,KAChB//C,KAAKqpD,GAAUrJ,oBAAoB,QAASmJ,GAAae,IACzDlqD,KAAK2pD,GAAc3J,oBAAoB,OAAQmJ,GAAahJ,IAC5DngD,KAAK8pD,GAAc9J,oBAAoB,QAAShgD,KAAKmqD,IACrDnqD,KAAK4/C,GAAcI,oBAAoB,QAAShgD,KAAK8/C,IACrD9/C,KAAK6nC,UAAUmY,oBAAoB,UAAWhgD,KAAKogD,KAG5CpgD,KAAAogD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQpiD,SAAwC,IAAjBuqC,EAAM8X,SACxDtgD,KAAKmqD,MA6BCnqD,KAAAmqD,GAAU,KACjB,GAA0B,GAAtBnqD,KAAKopD,cAGT,OADA3oC,OAAOC,aAAa6/B,QAAQ,eAAgBvgD,KAAK6pD,GAAcn4D,OACvDsO,KAAK6pD,GAAcn4D,OAC1B,IAAK,MACJsO,KAAKopD,eAAgB,EACrBppD,KAAKoqD,GAAU,OACf,MACD,IAAK,MACJpqD,KAAKopD,eAAgB,EACrBppD,KAAKoqD,GAAU,OACf,MACD,IAAK,OACJpqD,KAAKopD,eAAgB,EACrBppD,KAAKqqD,KACL,MACD,IAAK,OACJrqD,KAAKopD,eAAgB,EACrBppD,KAAKsqD,KACL,MACD,QACC,MAAM,IAAI16D,MAAM,iCAtHlBoQ,KAAK2pD,GAAcj4D,MAAQ,IAEK,GAA5BsO,KAAKsmC,EAAKnmC,KAAK+a,WAClBlb,KAAK0pD,GAAaa,SAAU,EAC5BvqD,KAAK0pD,GAAac,UAAW,IAE7BxqD,KAAK0pD,GAAaa,SAAU,EAC5BvqD,KAAK0pD,GAAac,UAAW,GAE1BxqD,KAAKsmC,EAAKnmC,KAAK+a,UAAYlb,KAAKsmC,EAAKnmC,KAAKgb,YAAcnb,KAAKsmC,EAAKnmC,KAAKob,UAC1Evb,KAAK4pD,GAAaW,SAAU,EAC5BvqD,KAAK4pD,GAAaY,UAAW,IAE7BxqD,KAAK4pD,GAAaW,SAAU,EAC5BvqD,KAAK4pD,GAAaY,UAAW,GAG9B,MAAMC,EAAkChqC,OAAOC,aAAaC,QAAQ,gBAC5C,MAApB8pC,IACHzqD,KAAK6pD,GAAcn4D,MAAQ+4D,GAG5BzqD,KAAKqpD,GAAUlK,SACf2B,YAAW,IAAM9gD,KAAKqpD,GAAUtI,UAEhC/gD,KAAKqpD,GAAUpf,iBAAiB,QAASkf,GAAae,IACtDlqD,KAAK2pD,GAAc1f,iBAAiB,OAAQkf,GAAahJ,IACzDngD,KAAK8pD,GAAc7f,iBAAiB,QAASjqC,KAAKmqD,IAClDnqD,KAAK4/C,GAAc3V,iBAAiB,QAASjqC,KAAK8/C,IAClD9/C,KAAK4pD,GAAa3f,iBAAiB,SAAS,KAASjqC,KAAKwpD,GAAsBlqD,WAAoB8G,YAAcpG,KAAK0qD,cAAc1qD,KAAKsmC,EAAKzN,MAAM8xB,gBAAgB3qD,KAAK0pD,GAAaa,QAASvqD,KAAK4pD,GAAaW,SAAUvqD,KAAK2pD,GAAcj4D,MAAQ,OACvPsO,KAAK0pD,GAAazf,iBAAiB,SAAS,KAASjqC,KAAKwpD,GAAsBlqD,WAAoB8G,YAAcpG,KAAK0qD,cAAc1qD,KAAKsmC,EAAKzN,MAAM8xB,gBAAgB3qD,KAAK0pD,GAAaa,QAASvqD,KAAK4pD,GAAaW,SAAUvqD,KAAK2pD,GAAcj4D,MAAQ,OACvPsO,KAAK2pD,GAAc1f,iBAAiB,UAAU,KAASjqC,KAAKwpD,GAAsBlqD,WAAoB8G,YAAcpG,KAAK0qD,cAAc1qD,KAAKsmC,EAAKzN,MAAM8xB,gBAAgB3qD,KAAK0pD,GAAaa,QAASvqD,KAAK4pD,GAAaW,SAAUvqD,KAAK2pD,GAAcj4D,MAAQ,OACzPsO,KAAK6nC,UAAUoC,iBAAiB,UAAWjqC,KAAKogD,IAEhDpgD,KAAKqpD,GAAU33D,MAAQ40C,EAAKnmC,KAAKwb,MACjCwtC,GAAae,GAAkB,KAAMlqD,KAAKqpD,IAEzCrpD,KAAKwpD,GAAsBlqD,WAAoB8G,YAAcpG,KAAK0qD,cAAc1qD,KAAKsmC,EAAKzN,MAAM8xB,gBAAgB3qD,KAAK0pD,GAAaa,QAASvqD,KAAK4pD,GAAaW,SAAUvqD,KAAK2pD,GAAcj4D,MAAQ,IAI5LmI,cAAczK,GACrB,MAAMw7D,EAAqBh8D,KAAKmb,MAAM3a,EAAU4Q,KAAKsmC,EAAKzN,MAAMlQ,kBAC1DkiC,EAAkBD,EAAa,GAErC,OADwBh8D,KAAKsU,MAAM0nD,EAAa,IAC/B,KAAOC,EAAU,GAAK,IAAM,IAAMA,EAQ7ChxD,eAAeg1C,GACrB7uC,KAAKqpD,GAAU33D,MAAQm9C,EAiBhBh1C,UAAyB2uC,EAAqBsiB,GAErD,IAAI7L,EACJ,GAAa,MAATzW,EACHyW,EAA0BzW,EAAM6X,WAC1B,CAAA,GAAWlzC,MAAP29C,EAIV,OAHA7L,EAAQ6L,EAKT,MAAMC,EAAc,qCACpB,GAAIA,EAAYzxD,KAAK2lD,EAAMvtD,OAAQ,CAClC,IAAIs5D,EAA4B/L,EAAMnK,eACtCmK,EAAMvtD,MAAQutD,EAAMvtD,MAAMiI,QAAQoxD,EAAa,IAC/CC,IACA/L,EAAMgM,kBAAkBD,EAAWA,IAI7BnxD,UAAuB2uC,GAC9B,MAAMyW,EAA4CzW,EAAM6X,OACxDpB,EAAMvtD,MAAQ9C,KAAKsU,MAAMtU,KAAKsgB,IAAIqnB,OAAO0oB,EAAM5uD,KAAMzB,KAAKyB,IAAIkmC,OAAO0oB,EAAM/vC,KAAMqnB,OAAO0oB,EAAMvtD,UAAY,GA6BnGmI,KAIP,GAA0B,GAAtBmG,KAAKopD,cACR,OAID,MAAM8B,EAAwD,EAA9BlrD,KAAK64B,MAAMlQ,iBACrCwiC,EAAuBnrD,KAAKorD,aAAeF,EAE3CG,EAAyBz8D,KAAKyB,IAAI66D,EAAiBlrD,KAAKsrD,aAAeH,GACvEI,EAAe,IAAIl8D,aAAag8D,GAChCG,EAAe,IAAIn8D,aAAag8D,GAetC,GAbArrD,KAAK64B,MAAMtN,WAAWggC,EAAcC,EAAcH,GAGlDrrD,KAAKyrD,iBAAiBtoD,IAAIooD,EAAcJ,GACxCnrD,KAAK0rD,iBAAiBvoD,IAAIqoD,EAAcL,GAGxCnrD,KAAK+pD,GAAmBzrD,MAAMC,YAAY,QAAS3P,KAAKmb,OAAO/J,KAAKorD,aAAe,GAAKprD,KAAK2rD,YAAc,KAAS,KACpH3rD,KAAKgqD,GAAqB9F,UAAYt1D,KAAKmb,OAAO/J,KAAKorD,aAAe,GAAKprD,KAAK2rD,YAAc,KAAS,IAGvG3rD,KAAKorD,eAEDprD,KAAKorD,cAAgBprD,KAAK2rD,YAG7B,GADA3rD,KAAKgqD,GAAqB9F,UAAY,cACb,OAArBlkD,KAAK4rD,aACR5rD,KAAK6rD,SAED,CAAA,GAAyB,OAArB7rD,KAAK4rD,aAIb,MAAM,IAAIh8D,MAAM,yCAHhBoQ,KAAK8rD,UAQNhL,YAAW,KAAQ9gD,KAAK+rD,QAMlBlyD,GAAU/E,GAKjB,GAHAkL,KAAK4rD,aAAe92D,EACpBkL,KAAKorD,aAAe,EACpBprD,KAAK64B,MAAQ,IAAInQ,GAAM1oB,KAAKsmC,EAAKnmC,MACrB,OAARrL,EACHkL,KAAK64B,MAAMlQ,iBAAmB,SAE1B,CAAA,GAAY,OAAR7zB,EAIR,MAAM,IAAIlF,MAAM,yCAHhBoQ,KAAK64B,MAAMlQ,iBAAmB,MAU/B,GAJA3oB,KAAK+pD,GAAmBzrD,MAAMC,YAAY,QAAS,MACnDyB,KAAKgqD,GAAqB9F,UAAY,KAEtClkD,KAAK64B,MAAM7P,gBAAkBuN,OAAOv2B,KAAK2pD,GAAcj4D,OAAS,GAC3DsO,KAAK0pD,GAAaa,QACtB,IAAK,IAAIyB,EAAoB,EAAGA,EAAYhsD,KAAKsmC,EAAKnmC,KAAK+a,UAAW8wC,IACrEhsD,KAAK64B,MAAMozB,UAIbjsD,KAAK64B,MAAM9I,kBAAkB/vB,KAAKsmC,EAAKnmC,MACvCH,KAAK64B,MAAM7I,yBAEXhwB,KAAKsrD,aAAetrD,KAAK64B,MAAM8xB,gBAAgB3qD,KAAK0pD,GAAaa,QAASvqD,KAAK4pD,GAAaW,QAASvqD,KAAK64B,MAAM7P,iBAEhHhpB,KAAK2rD,YAAc/8D,KAAKkgB,KAAK9O,KAAKsrD,cAA8C,EAA9BtrD,KAAK64B,MAAMlQ,mBAC7D3oB,KAAKyrD,iBAAmB,IAAIp8D,aAAa2Q,KAAKsrD,cAC9CtrD,KAAK0rD,iBAAmB,IAAIr8D,aAAa2Q,KAAKsrD,cAG9CxK,YAAW,KAAQ9gD,KAAK+rD,QAGjBlyD,KACP,MAAMyxD,EAAuBtrD,KAAKyrD,iBAAiBr9D,OAC7C+gC,EAAqBnvB,KAAK64B,MAAMlQ,iBAKhCujC,EAH0B,EAGcZ,EAI9C,IAAIt8D,EAAgB,EACpB,MAAMm9D,EAA2B,IAAI9H,YAHP,GAJC,EAII6H,GAI7BppB,EAAiB,IAAI0iB,SAAS2G,GACpCrpB,EAAK4iB,UAAU12D,EAAO,YAAY,GAAQA,GAAS,EACnD8zC,EAAK4iB,UAAU12D,EAAO,GAVS,EAUJk9D,GAA8B,GAAOl9D,GAAS,EACzE8zC,EAAK4iB,UAAU12D,EAAO,YAAY,GAAQA,GAAS,EACnD8zC,EAAK4iB,UAAU12D,EAAO,YAAY,GAAQA,GAAS,EACnD8zC,EAAK4iB,UAAU12D,EAAO,IAAY,GAAOA,GAAS,EAClD8zC,EAAK+iB,UAAU72D,EAAO,GAAQ,GAAOA,GAAS,EAC9C8zC,EAAK+iB,UAAU72D,EAhBiB,GAgBO,GAAOA,GAAS,EACvD8zC,EAAK4iB,UAAU12D,EAAOmgC,GAAY,GAAOngC,GAAS,EAClD8zC,EAAK4iB,UAAU12D,EAjBgB,EAiBTmgC,EAlBU,GAkBqC,GAAOngC,GAAS,EACrF8zC,EAAK+iB,UAAU72D,EAAOo9D,GAAkC,GAAOp9D,GAAS,EACxE8zC,EAAK+iB,UAAU72D,EAlBe,IAkBO,GAAOA,GAAS,EACrD8zC,EAAK4iB,UAAU12D,EAAO,YAAY,GAAQA,GAAS,EACnD8zC,EAAK4iB,UAAU12D,EArBgB,EAqBTk9D,GAA8B,GAAOl9D,GAAS,EAE5C,CAEvB,MAAMq9D,EAAgB,MACtB,IAAK,IAAIl+D,EAAY,EAAGA,EAAIm9D,EAAcn9D,IAAK,CAC9C,IAAIm+D,EAAe19D,KAAKsU,MAAMtU,KAAKsgB,KAAK,EAAGtgB,KAAKyB,IAAI,EAAG2P,KAAKyrD,iBAAiBt9D,KAAOk+D,GAChFE,EAAe39D,KAAKsU,MAAMtU,KAAKsgB,KAAK,EAAGtgB,KAAKyB,IAAI,EAAG2P,KAAK0rD,iBAAiBv9D,KAAOk+D,GAEnFvpB,EAAK0pB,SAASx9D,EAAOs9D,GAAM,GAAOt9D,GAAS,EAC3C8zC,EAAK0pB,SAASx9D,EAAOu9D,GAAM,GAAOv9D,GAAS,GAmB9Cq5D,GADmB,IAAIoE,KAAK,CAACN,GAAc,CAAEr3D,KAAM,cACxCkL,KAAKqpD,GAAU33D,MAAM8O,OAAS,QAEzCR,KAAK8/C,KAGEjmD,KACP,MAAM6yD,EAAyB,KAC9B,MAGMC,EAA0B,KAC1BC,EAAkB,IAJEnsC,OAAgB,OAIPosC,WAHN,EAG+B7sD,KAAK64B,MAAMlQ,iBAFlD,KAGfmkC,EAAiB,GAEjBzjB,EAAmB,IAAI0jB,WAAW/sD,KAAKyrD,iBAAiBr9D,QACxDs0D,EAAoB,IAAIqK,WAAW/sD,KAAK0rD,iBAAiBt9D,QAE/D,IAAK,IAAID,EAAY,EAAGA,EAAI6R,KAAKyrD,iBAAiBr9D,OAAQD,IACzDk7C,EAAKl7C,GAAKS,KAAKsU,MAFM,MAEAtU,KAAKsgB,KAAK,EAAGtgB,KAAKyB,IAAI,EAAG2P,KAAKyrD,iBAAiBt9D,MACpEu0D,EAAMv0D,GAAKS,KAAKsU,MAHK,MAGCtU,KAAKsgB,KAAK,EAAGtgB,KAAKyB,IAAI,EAAG2P,KAAK0rD,iBAAiBv9D,MAGtE,IAAK,IAAIA,EAAY,EAAGA,EAAIk7C,EAAKj7C,OAAQD,GAAKw+D,EAAiB,CAC9D,MAAMK,EAAwB3jB,EAAK4jB,SAAS9+D,EAAGA,EAAIw+D,GAC7CO,EAAyBxK,EAAMuK,SAAS9+D,EAAGA,EAAIw+D,GAC/CQ,EAAcP,EAAWQ,aAAaJ,EAAWE,GACnDC,EAAO/+D,OAAS,GAAG0+D,EAAQt+D,KAAK2+D,GAGrC,MAAMA,EAAcP,EAAWS,QAC3BF,EAAO/+D,OAAS,GAAG0+D,EAAQt+D,KAAK2+D,GAGpC9E,GADmB,IAAIoE,KAAKK,EAAS,CAAEh4D,KAAM,cAClCkL,KAAKqpD,GAAU33D,MAAM8O,OAAS,QACzCR,KAAK8/C,MAGN,GAAI,WAAYr/B,OACfisC,QACM,CACN,IAAIY,EAASvwD,SAAS0C,cAAc,UACpC6tD,EAAOC,IAAM,wDACbD,EAAOE,OAASd,EAChB3vD,SAASwM,KAAKzM,YAAYwwD,IAIpBzzD,KACP,MAAMsG,EAAaH,KAAKsmC,EAAKnmC,KAEvBstD,EADkC,EACmB1/D,EAAOsF,aAAetF,EAAOqF,aAClFs6D,EAFkC,EAEmB3/D,EAAOsF,aAG5D+wB,EAAyBjkB,EAAK8lC,oBAC9B0nB,EAA8B/+D,KAAKmb,MAFH6jD,IAEiCxpC,GAEjEypC,EAA0BJ,EAAmBttD,EAAKmb,YAClDwyC,EAAyB,GAGzBC,EAAyB,GAC/B,GAAI/tD,KAAK0pD,GAAaa,QACrB,IAAK,IAAIxuC,EAAc,EAAGA,EAAM5b,EAAK+a,UAAWa,IAC/CgyC,EAAav/D,KAAKutB,GAGpB,IAAK,IAAIiyC,EAAoB,EAAGA,EAAYz3B,OAAOv2B,KAAK2pD,GAAcj4D,OAAQs8D,IAC7E,IAAK,IAAIjyC,EAAc5b,EAAK+a,UAAWa,EAAM5b,EAAK+a,UAAY/a,EAAKgb,WAAYY,IAC9EgyC,EAAav/D,KAAKutB,GAGpB,GAAI/b,KAAK4pD,GAAaW,QACrB,IAAK,IAAIxuC,EAAc5b,EAAK+a,UAAY/a,EAAKgb,WAAYY,EAAM5b,EAAKob,SAAUQ,IAC7EgyC,EAAav/D,KAAKutB,GAIpB,MAAMkyC,EAAS,CAAC,CAAEC,QAAQ,EAAM9tD,SAAU,EAAG+tD,aAAc,EAAG9yD,SAAS,EAAO+yD,WAAW,IACzF,IAAIC,EAA6B,EAC7BC,GAAyB,EAC7B,IAAK,IAAIluD,EAAkB,EAAGA,EAAUJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmBhB,IAC5G,GAAKkuD,GAAqE,GAApDtuD,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASqX,YAAY,GAAG3iB,KAG/D,CACN,GAAIu5D,GAAsB,GAAI,SAC9BJ,EAAOz/D,KAAK,CAAE0/D,QAAQ,EAAO9tD,QAASA,EAAS+tD,YAAaE,IAAsBhzD,QAAS2E,KAAKsmC,EAAKnmC,KAAK0c,kBAAkBzc,GAAUguD,WAAW,IACvH,GAAtBC,GAAyBA,SAL7BJ,EAAOz/D,KAAK,CAAE0/D,QAAQ,EAAO9tD,QAASA,EAAS+tD,YAAa,EAAG9yD,SAAS,EAAM+yD,WAAW,IACzFE,GAAgB,EAQlB,MAAMC,EAA4B,IAAIrJ,GAAkB,MACxDqJ,EAAOC,YAAW,YAClBD,EAAOC,YAAY,GACnBD,EAAOE,YAAW,GAClBF,EAAOE,YAAYR,EAAO7/D,QAC1BmgE,EAAOE,YAAYhB,GAEnB,IAAK,MAAMiB,KAAST,EAAQ,CAC3BM,EAAOC,YAAW,YAElB,MAAMN,OAAEA,EAAM9tD,QAAEA,EAAO+tD,YAAEA,EAAW9yD,QAAEA,EAAO+yD,UAAEA,GAAcM,EAGvDC,EAA0BJ,EAAOK,gBACvCL,EAAOC,YAAY,GAEnB,IAAIK,EAAmB,EACnBC,EAAuB,EAC3B,MAAMC,EAAiB,SAAU//C,GAChC,GAAIA,EAAO6/C,EAAU,MAAM,IAAIj/D,MAAM,wCACrC2+D,EAAOtI,wBAAwBj3C,EAAO6/C,GACtCA,EAAW7/C,GAGNggD,EAAoB,SAAUC,EAAkCv9D,GACrE,KAAMA,GAAS,GAAKA,GAAS,KAAO,MAAM,IAAI9B,MAAM,0CAA4C8B,GAChG68D,EAAOvI,WAAW,IAA8BmI,GAChDI,EAAOW,eAAeD,GACtBV,EAAOW,eAAuB,EAARx9D,IAGvB,GAAIw8D,EAAQ,CAGXa,EAAe,GACfR,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,GACrBX,EAAOY,eAAe,sCAEtBJ,EAAe,GACfR,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,IACrBX,EAAOtI,wBAAwB,GAC/BsI,EAAOa,YAAYzB,GAEnBoB,EAAe,GACfR,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,IACrBX,EAAOtI,wBAAwB,GAC/BsI,EAAOvI,WAAW7lD,EAAKmb,aACvBizC,EAAOvI,WAAW,GAClBuI,EAAOvI,WAAW,IAClBuI,EAAOvI,WAAW,GAElB,MAAMqJ,EAAmBthE,EAAOmE,OAAOiO,EAAK8a,OAAO7oB,MAAM,KAAOrE,EAAOmE,OAAOiO,EAAK8a,OAAO7oB,MAAM,GAC1FwL,EAAcuC,EAAKvC,IACzB,IAAI0xD,EAAoB1xD,EAGxB,IAFiB,IAAN,EAANA,KAAe0xD,GAAa,GAC7BD,IAASC,GAAa,GACnBA,EAAY,GAAGA,GAAa,GAEnCP,EAAe,GACfR,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,IACrBX,EAAOtI,wBAAwB,GAC/BsI,EAAOgB,UAAUD,GACjBf,EAAOvI,WAAWqJ,EAAU,EAAI,GAE5BrvD,KAAK0pD,GAAaa,UAASuE,GAAgBjB,EAAkB1tD,EAAK+a,WACtE6zC,EAAeD,GACfP,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,GACrBX,EAAOY,eAAe,cAEtB,IAAK,IAAInB,EAAoB,EAAGA,EAAYwB,SAASxvD,KAAK2pD,GAAcj4D,OAAQs8D,IAC/Ec,GAAgBjB,EAAkB1tD,EAAKgb,WACvC4zC,EAAeD,GACfP,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,GACrBX,EAAOY,eAAenB,EAAYz3B,OAAOv2B,KAAK2pD,GAAcj4D,OAAS,EAAI,cAAgB,YAI1F,GADIsO,KAAK4pD,GAAaW,UAASuE,GAAgBjB,GAAmB1tD,EAAKob,SAAWpb,EAAK+a,UAAY/a,EAAKgb,aACpG2zC,GAAgBjB,EAAkBE,EAAa3/D,OAAQ,MAAM,IAAIwB,MAAM,qCAErE,CAGN,IAAI6/D,EAAsBp0D,EACvB,iBAAmB+E,EACnB,iBAAmBA,EACtB2uD,EAAe,GACfR,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,GACrBX,EAAOY,eAAeM,GAGtBV,EAAe,GAAIC,EAAiB,IAAA,GACpCD,EAAe,GAAIC,EAAiB,IAAA,GACpCD,EAAe,GAAIC,EAAiB,EAA0ClB,GAC9EiB,EAAe,GAAIC,EAAiB,GAA0C,GAC9ED,EAAe,GAAIC,EAAiB,IAAA,KACpCD,EAAe,GAAIC,EAAiB,IAAA,KAEpC,IAAIU,GAA+B,EACnC,SAASC,EAAwB5yC,GAChC,MAAMvM,EAAyBrQ,EAAK4X,SAAS3X,GAASqX,YAAYsF,GAC5D1iB,EAAwBT,EAAak1C,cAAct+B,EAAWnW,QAEpE,GAAIq1D,GAAuB3yC,EAAiB,CAO3C,GANA2yC,EAAsB3yC,EACtBgyC,EAAeD,GACfP,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,GACrBX,EAAOY,eAAe,eAAiBpyC,EAAkB,KAEpDqxC,EAAW,CACf,IAAIwB,EAA4B,GAEhC,GAAc,MAAVv1D,GAAwC8S,MAAtB9S,EAAOE,YAC5Bq1D,EAAoBv1D,EAAOE,iBACrB,GAAmB,GAAfiW,EAAW1b,KAErB86D,EAAoB,QACd,CACN,MAAMC,EAA6Br/C,EAAW8D,oBAAoBxf,KAC5Dg7D,EAAwC,GAAZD,GAAkD,GAAZA,EACxE,GAAmB,GAAfr/C,EAAW1b,MAA+C,GAAf0b,EAAW1b,KAExD86D,EADGv0D,EACiB,IAEAy0D,EAAmB,GAAK,QAEvC,GAAmB,GAAft/C,EAAW1b,KAA6B,CAClD,MAAMi7D,EAA8BD,EACjC3G,GAAa6G,qBACb7G,GAAa8G,uBACZF,EAAkB3hE,OAASoiB,EAAW6B,WACzCu9C,EAAoBG,EAAkBv/C,EAAW6B,gBAE5C,GAAmB,GAAf7B,EAAW1b,KACrB86D,EAAoBE,EAAmB,GAAO,QACxC,GAAmB,GAAft/C,EAAW1b,MAA4C,GAAf0b,EAAW1b,KAC7D86D,EAAoBE,EAAmB,EAAI,OACrC,CAAA,GAAmB,GAAft/C,EAAW1b,KAGrB,MAAM,IAAIlF,MAAM,iCAFhBggE,EAAoBE,EAAmB,GAAO,IAOhDf,EAAeD,GACfP,EAAOvI,WAAW,IAA8BmI,GAChDI,EAAOW,eAAeU,GAIvBb,EAAeD,GACf,IAAI/oB,GDze6B9E,ECyeqBvY,GAAMyV,6BAA6B3tB,EAAW3c,QDxehD,IAAlDjF,KAAKuB,IAAiB,kBAAb8wC,EAAiC,MCye5C+tB,EAAiB,EAAoCpgE,KAAKyB,IAAI,IAAMzB,KAAKmb,MAAMg8B,KAG/EgpB,EAAeD,GACf,IAAIoB,EAAkE,IAAzC1/C,EAAWoC,IAAM7kB,EAAO4H,UAAY,GAAY,GAC7Eq5D,EAAiB,GAAiCpgE,KAAKyB,IAAI,IAAMzB,KAAKmb,MAAMmmD,SD/e3CjvB,ECkfA,MAA/B9gC,EAAKolB,WAAWnlB,EAAS,IAG5BuvD,EAAwB,GAGzB,IAAIQ,EAAwBjK,GACxBkK,EDtpBqC,ICupBrCC,GAA6C,EAEjD,MAAMC,EAAsBj1D,EAAUtN,EAAOwJ,kBAAoBxJ,EAAOsE,KAAK8N,EAAKvC,KAAKrL,UACjFymC,EAAwB39B,EAAUtN,EAAOwK,cAAgB,EAE/D,IAAK,MAAMwjB,KAAOgyC,EAAc,CAC/B,MAAMjyC,EAA0B3b,EAAKolB,WAAWnlB,EAAS2b,GAEzD,GAAe,MAAXD,EAAiB,CAEpB,MAAMiB,EAA0BjB,EAAQtL,WAClCA,EAAyBrQ,EAAK4X,SAAS3X,GAASqX,YAAYsF,GAC5D1iB,EAAwBT,EAAak1C,cAAct+B,EAAWnW,QACpEs1D,EAAwB5yC,GAExB,IAAIwzC,GAA2B,EAC3BC,GAAwB,EACxBC,EAAoB,EACxBF,EAAkB//C,EAAW4D,WAAWle,WACxCs6D,EAAehgD,EAAW4D,WAAWhe,YACjCo6D,EACCD,IACgB,GAAf//C,EAAW1b,KACd27D,EAAY,EACa,GAAfjgD,EAAW1b,KACrB27D,EAAY1iE,EAAOyI,cAEnBuH,QAAQ2yD,MAAM,0DAA4DlgD,EAAW1b,OAIvF27D,EAAY1iE,EAAOwI,aAGpB,IAAK,IAAIyiD,EAAoB,EAAGA,EAAYl9B,EAAQvL,MAAMniB,OAAQ4qD,IAAa,CAC9E,MAAMvoC,EAAaqL,EAAQvL,MAAMyoC,GAE3B2X,EAAwB7B,EAAer+C,EAAKlB,MAAQm+C,EAC1D,IAAIkD,EAAkBD,EAClBE,EAAoBpgD,EAAKd,KAAK,GAAG9b,OACjCi9D,EAAsBrgD,EAAKd,KAAK,GAAGxU,SACvC,MAAM41D,EAAwB,EAAE,GAAI,GAAI,GAAI,GACtCC,EAAwB,EAAE,GAAI,GAAI,GAAI,GACtCr6B,EAAoB/nC,KAAKyB,IAAIogE,EAAWhgD,EAAKf,QAAQthB,QACrD6iE,EAAmB7C,EAAYx/D,KAAKsgB,IAAI,EAAGtgB,KAAKmb,MA7PvB,GA6PmD0G,EAAKd,KAAK,GAAG9b,OAAS,IA7PzE,GAkQ/B,IAAIgc,EAAuBY,EAAK2tB,mBAC5B8yB,EAAsBrhD,EAAempB,EACzC,IAAKo1B,EAAW,CACf,IAAI+C,EAAyBrD,EACzBsD,GAAyB,GAC7B,IAAK,IAAIthD,EAAmB,EAAGA,EAAWW,EAAKd,KAAKvhB,OAAQ0hB,IAAY,CACvE,MAAM3U,EAAWsV,EAAKd,KAAKG,GAAU3U,SAAW69B,EAChDm4B,EAAiBviE,KAAKyB,IAAI8gE,EAAgBh2D,EAAW2yD,GACrDsD,EAAiBxiE,KAAKsgB,IAAIkiD,EAAgBj2D,EAAW2yD,GAgBtDoD,EAActiE,KAAKyB,IAAI8gE,EAAgBviE,KAAKsgB,IAAIkiD,EAAgBF,IAGjE,IAAK,IAAIphD,EAAmB,EAAGA,EAAWW,EAAKd,KAAKvhB,OAAQ0hB,IAAY,CACvE,MAAMu8B,EAAsBskB,EAAgBlgD,EAAKd,KAAKG,GAAUd,KAAO0+C,EACjE2D,EAAwB5gD,EAAKd,KAAKG,GAAUjc,OAC5Cy9D,EAA0B7gD,EAAKd,KAAKG,GAAU3U,SAE9C/M,EAAiBi+C,EAAcukB,EACrC,IAAK,IAAIW,EAAmB,EAAGA,EAAWnjE,EAAQmjE,IAAY,CAC7D,MAAMC,EAAuBZ,EAAUW,EACjCE,EAAuBvJ,GAAK2I,EAAWQ,EAAeE,EAAWnjE,GAGjE+M,EAFyB+sD,GAAK4I,EAAaQ,EAAiBC,EAAWnjE,GAEnC4qC,EAAgBk4B,EACpD7uC,EAAoBzzB,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAI,MAAQzB,KAAKmb,MAAM,MAAU,EAAM5O,EAAW2yD,MAEvF9nB,EAAqBp3C,KAAKyB,IAAI,IAAMzB,KAAKmb,OD9kBbk3B,EC8kB8CvY,GAAMyS,uBAAuBs2B,GD7kBjF,IAA7B7iE,KAAKuB,IAAI8wC,EAAY,QC+kBhB5e,GAAa8tC,IAChBpB,EAAeyC,GACfjD,EAAOvI,WAAW,IAA0BmI,GAC5CI,EAAOW,eAA2B,IAAZ7sC,GACtBksC,EAAOW,eAAgB7sC,GAAa,EAAK,KACzC8tC,EAAgB9tC,GAGb2jB,GAAcoqB,GAAmBhC,IACpCW,EAAeyC,GACfxC,EAAiB,GAAwChpB,GACzDoqB,EAAiBpqB,GAGlB,MAAM0rB,EAAwBF,GAAgBb,EAC9C,IAAK,IAAIn5B,EAAoB,EAAGA,EAAYb,EAAWa,IAAa,CACnE,IAAI1Z,EAAoBrN,EAAKf,QAAQ8nB,GACrC,GAAI42B,EAAW,CACdtwC,GAAajO,EACb,MAAM8hD,EAAuB,CAC5B,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAED,GAAI7zC,EAAY,GAAKA,GAAa6zC,EAAWvjE,OAAQ,MAAM,IAAIwB,MAAM,+CAAiDkuB,GACtHA,EAAY6zC,EAAW7zC,OACjB,CACN,GAAI0yC,GAAgB//C,EAAKf,QAAQthB,OAASopC,EAAY,GAAKA,GAAab,EAAY,EAAG,CACtF,MAAMi7B,GAAsBJ,EAAe1C,GAAgBrB,EACrDoE,EAAuB9jE,EAAOuF,iBAAmBo6D,EAAmB3/D,EAAOsF,aAC3EjC,EAAmBxC,KAAKsU,MAAM0uD,EAAqBC,GACzD/zC,EAAYrN,EAAKf,QAAQ8nB,EAAYvmC,EAAsBwf,EAAKf,QAAQthB,OAASopC,EAAWhnB,EAAWuC,eAAgB3hB,IAExH0sB,EAAYwyC,EAAcxyC,EAAYkb,EAAgBk4B,EACxC,MAAV72D,GAAmD8S,MAAjC9S,EAAO0B,uBAC5B+hB,GAAa,GAAKzjB,EAAO0B,uBACfV,IACVyiB,GAAa,IAAOlkB,EAAaK,iBAAiBxI,WAAW,gBAAgByI,QAAQzI,WAAW,cAAcsK,wBAG3GV,IAASyiB,GAAa,GAE3BA,EAAYlvB,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAI,IAAKytB,IACtCkzC,EAAYx5B,GAAa1Z,EAEpB4zC,GAAgBX,EAAYv5B,IAAcw5B,EAAYx5B,KAC1Du3B,EAAeyC,GACfjD,EAAOvI,WAAW,IAAwBmI,GAC1CI,EAAOW,eAAe6B,EAAYv5B,IAClC+2B,EAAOW,eAAe+B,IAIxB,IAAK,IAAIz5B,EAAoB,EAAGA,EAAYb,EAAWa,KAClDk6B,GAAgBX,EAAYv5B,IAAcw5B,EAAYx5B,MACzDu3B,EAAeyC,GACfjD,EAAOvI,WAAW,IAAuBmI,GACzCI,EAAOW,eAAe8B,EAAYx5B,IAClC+2B,EAAOW,eAAe+B,GACtBF,EAAYv5B,GAAaw5B,EAAYx5B,IAKxCo5B,EAAUvkB,EACVwkB,EAAYQ,EACZP,EAAcQ,EAGf,MAAMQ,EAAsBhD,EAAer+C,EAAKjB,IAAMk+C,EAGtD,IAAK,IAAIl2B,EAAoB,EAAGA,EAAYb,EAAWa,IACtDu3B,EAAe+C,GACfvD,EAAOvI,WAAW,IAAwBmI,GAC1CI,EAAOW,eAAe6B,EAAYv5B,IAClC+2B,EAAOW,eAAe+B,GAGvBZ,GAAoC,QAGjCA,IACHA,GAAoC,ED/0BE,KCi1BlCD,IACHA,EDl1BqC,ICo1BrCrB,EAAeD,GACfE,EAAiB,GAAwCoB,IAGtDD,GAAiBjK,KAEpBiK,EAAgBjK,GAChB6I,EAAeD,GACfP,EAAOvI,WAAW,IAA0BmI,GAC5CI,EAAOW,eAA+B,IAAhBiB,GACtB5B,EAAOW,eAAgBiB,GAAiB,EAAK,OAKhDrB,GAAgBjB,GAIlBkB,EAAeD,GACfP,EAAOvI,WAAU,KACjBuI,EAAOW,eAAc,IACrBX,EAAOtI,wBAAwB,GAG/BsI,EAAOwD,cAAcpD,EAAiBJ,EAAOK,gBAAkBD,EAAkB,OD1sBzC1tB,EC8sBzConB,GADmB,IAAIoE,KAAK,CAAC8B,EAAOyD,wBAAyB,CAAEl9D,KAAM,eAC1DkL,KAAKqpD,GAAU33D,MAAM8O,OAAS,QAEzCR,KAAK8/C,KAGEjmD,KACP,MAAMwqB,EAAqBrkB,KAAKsmC,EAAKnmC,KAAK+iB,aAAaljB,KAAK0pD,GAAaa,QAASh0B,OAAOv2B,KAAK2pD,GAAcj4D,OAAQsO,KAAK4pD,GAAaW,SAChI0H,EAAqB7yC,KAAK8yC,UAAU7tC,EAAY,KAAM,MAE5DgkC,GADmB,IAAIoE,KAAK,CAACwF,GAAa,CAAEn9D,KAAM,qBACvCkL,KAAKqpD,GAAU33D,MAAM8O,OAAS,SACzCR,KAAK8/C,MAxzBkBqJ,GAAA8G,uBAAmC,CAC1D,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAEuB9G,GAAA6G,qBAAiC,CACxD,GACA,GACA,GACA,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,WCvFWmC,GA0BZt4D,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EAzBHtmC,KAAAwmC,EAAuB,IACvBxmC,KAAAymC,EAAwB,GACxBzmC,KAAAoyD,GAA0BrzD,EAAImoC,IAAI,CAAEC,iBAAkB,SACtDnnC,KAAAqyD,GAAyBtzD,EAAImoC,IAAI,CAAEC,iBAAkB,SACrDnnC,KAAAsyD,GAAyBvzD,EAAI0oC,KAAK,CAAEb,KAAM,OAAQU,OAAQ,eAAgBC,eAAgB,EAAGJ,iBAAkB,SAC/GnnC,KAAAuyD,GAAuC,GACvCvyD,KAAAwyD,GAA4CzzD,EAAImoC,IAAI,CAAEC,iBAAkB,SACxEnnC,KAAA4nC,EAAsB7oC,EAAImoC,IAAI,CAAE5oC,MAAO,4FAA6FyoC,MAAO,OAAQC,OAAQ,OAAQob,QAAS,OAASpiD,KAAKwmC,EAAe,IAAMxmC,KAAKymC,EAAe4b,oBAAqB,QACxQriD,KAAKoyD,GACLpyD,KAAKqyD,GACLryD,KAAKsyD,GACLtyD,KAAKwyD,IAGUxyD,KAAA6nC,UAAyBnpC,EAAKgL,IAAI,CAAEo+B,MAAO,YAAaxpC,MAAO,gBAAkB0B,KAAK4nC,GAE9F5nC,KAAA+nC,EAAkB,EAClB/nC,KAAAyhD,GAAkB,EAClBzhD,KAAAyyD,GAAoB,EACpBzyD,KAAA0yD,GAAmB,EACnB1yD,KAAAgoC,GAAsB,EACtBhoC,KAAA2yD,GAAkC,KAClC3yD,KAAA4yD,GAAwB,GACxB5yD,KAAA6yD,IAA2B,EAiC3B7yD,KAAA+oC,GAAqBP,IAC5BA,EAAMQ,iBACNhpC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7HrpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GAExCzhD,KAAKyyD,GAAYzyD,KAAK8yD,GAAS9yD,KAAK+nC,GACpC/nC,KAAK0yD,GAAW1yD,KAAK+yD,GAAQ/yD,KAAKyhD,IAClCzhD,KAAK2pC,MAGE3pC,KAAAwpC,GAAqBhB,IAC5BA,EAAMQ,iBACNhpC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvHrpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GAExCzhD,KAAKyyD,GAAYzyD,KAAK8yD,GAAS9yD,KAAK+nC,GACpC/nC,KAAK0yD,GAAW1yD,KAAK+yD,GAAQ/yD,KAAKyhD,IAClCzhD,KAAK2pC,MAGE3pC,KAAA0pC,GAAmBlB,IAC1B,GAAmC,MAA/BxoC,KAAK6nC,UAAUmb,aAAsB,OACzC,MAAM/Z,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7HrpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAK2pC,MAGE3pC,KAAA4pC,GAAmBpB,IAC1B,GAAmC,MAA/BxoC,KAAK6nC,UAAUmb,aAAsB,OACzC,IAAKhjD,KAAKgoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvHrpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAK2pC,MAgCE3pC,KAAA6pC,GAAuBrB,IAC1BxoC,KAAKgoC,IACRhoC,KAAKsmC,EAAKqa,OAAO3gD,KAAK2yD,IACtB3yD,KAAK2yD,GAAU,MAEhB3yD,KAAKgoC,GAAa,GAlHlB,IAAK,IAAI75C,EAAY,EAAGA,GAAKJ,EAAO4J,uBAAwBxJ,GAAQ,EACnE6R,KAAKoyD,GAASt1D,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYkI,MAAO4+B,GAAI14C,EAAI,KAAQ6R,KAAKwmC,EAAe,IAAMz4C,EAAO4J,uBAAyB,GAAK,EAAGmvC,EAAG,EAAGC,MAAO,EAAGC,OAAQhnC,KAAKymC,KAE9K,IAAK,IAAIt4C,EAAY,EAAGA,GAAKJ,EAAO4J,uBAAwBxJ,GAAQ,EACnE6R,KAAKqyD,GAAQv1D,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYmI,UAAW2+B,GAAI14C,EAAI,KAAQ6R,KAAKwmC,EAAe,IAAMz4C,EAAO4J,uBAAyB,GAAK,EAAGmvC,EAAG,EAAGC,MAAO,EAAGC,OAAQhnC,KAAKymC,KAEjL,IAAK,IAAIt4C,EAAY,EAAGA,EAAI,EAAGA,IAAK,CACnC,MAAMw4C,EAAuB5nC,EAAI4nC,KAAK,CAAEC,KAAM,eAAgBC,EAAI7mC,KAAKwmC,EAAmB,EAAJr4C,EAAQ,EAAI24C,EAAG,EAAGC,MAAO,EAAGC,OAAQhnC,KAAKymC,IAC/HzmC,KAAKuyD,GAAmB/jE,KAAKm4C,GAC7B3mC,KAAKwyD,GAA2B11D,YAAY6pC,GAG7C3mC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK+oC,IAClDhsC,SAASktC,iBAAiB,YAAajqC,KAAK0pC,IAC5C3sC,SAASktC,iBAAiB,UAAWjqC,KAAK6pC,IAE1C7pC,KAAK6nC,UAAUoC,iBAAiB,aAAcjqC,KAAKwpC,IACnDxpC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK4pC,IAClD5pC,KAAK6nC,UAAUoC,iBAAiB,WAAYjqC,KAAK6pC,IACjD7pC,KAAK6nC,UAAUoC,iBAAiB,cAAejqC,KAAK6pC,IAG7ChwC,GAASgtC,GAChB,OAAQ94C,EAAO4J,uBAAyB,GAAKkvC,GAAK7mC,KAAKwmC,EAAe,GAAK,GAGpE3sC,GAAQitC,GACf,OAAO/4C,EAAO+J,cAAgB,EAAIgvC,EAAI9mC,KAAKymC,GAqDpC5sC,KACP,GAAImG,KAAKgoC,EAAY,CACpB,MAAM9wB,EAAelX,KAAK8yD,GAAS9yD,KAAK+nC,GAClCmb,EAAcljD,KAAK+yD,GAAQ/yD,KAAKyhD,IAEhCjxC,EAAyBxQ,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAC1Fn7B,EAA+B/C,EAAW+C,cAEhD,GAAI2D,GAAQlX,KAAKyyD,GAAW,CAC3B,MAAM3sB,GAAiBod,EAAMljD,KAAK0yD,KAAax7C,EAAOlX,KAAKyyD,IACrDn9D,EAAiB0K,KAAK0yD,GAAW1yD,KAAKyyD,GAAY3sB,EAClDktB,EAAoBpkE,KAAKkgB,KAAKlgB,KAAKyB,IAAI2P,KAAKyyD,GAAWv7C,IACvD+7C,EAAoBrkE,KAAKsU,MAAMtU,KAAKsgB,IAAIlP,KAAKyyD,GAAWv7C,IAC9D,IAAK,IAAI/oB,EAAY6kE,EAAW7kE,GAAK8kE,EAAW9kE,IAC3CA,EAAI,GAAKA,GAAKJ,EAAO4J,yBACzB4b,EAAczX,UAAU3N,GAAKS,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAO+J,aAAclJ,KAAKmb,MAAM5b,EAAI23C,EAAQxwC,MAIhGie,EAAczX,UAAUlN,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAO4J,uBAAyB,EAAG/I,KAAKmb,MAAMmN,MAAWtoB,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAO+J,aAAclJ,KAAKmb,MAAMm5C,KAE3JljD,KAAKyyD,GAAYv7C,EACjBlX,KAAK0yD,GAAWxP,EAEhBljD,KAAK2yD,GAAU,IAAI7f,GAAgB9yC,KAAKsmC,EAAM91B,EAAY+C,GAC1DvT,KAAKsmC,EAAK4sB,qBAAqBlzD,KAAK2yD,KAY/B94D,SACN,MACM0Z,EADyBvT,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAChDn7B,cAC1C4/C,EAAwB3hD,IACrB,EAAKA,EAAQzjB,EAAO+J,cAAiBkI,KAAKymC,EAGnD,IAAIqc,EAAiBrpD,EAAauG,KAAKymC,GACnCgB,EAAe,GACnB,IAAK,IAAIt5C,EAAY,EAAGA,EAAIJ,EAAO4J,uBAAyB,EAAGxJ,IAAK,CACnE,GAAkC,GAA9BolB,EAAczX,UAAU3N,GAAS,SACrC,IAAIilE,EAAe35D,GAActL,EAAI,KAAQ6R,KAAKwmC,EAAe,IAAMz4C,EAAO4J,uBAAyB,IACvG8vC,GAAQ,KAAO2rB,EAAO,IAAMtQ,EAAS,IACrCrb,GAAQ,KAAO2rB,EAAO,IAAM35D,EAAa05D,EAAqB5/C,EAAczX,UAAU3N,KAAO,IAG9F,MAAMklE,EAAqBF,EAAqB5/C,EAAczX,UAAU/N,EAAO4J,uBAAyB,IACxG,IAAK,IAAIxJ,EAAY,EAAGA,EAAI,EAAGA,IAAK,CACnC,MAAMw4C,EAAuB3mC,KAAKuyD,GAAmBpkE,GACrDw4C,EAAK9oC,aAAa,IAAKpE,EAAa45D,IACpC1sB,EAAK9oC,aAAa,SAAUpE,EAAauG,KAAKymC,EAAgB4sB,IAG3DrzD,KAAK4yD,IAAiBnrB,IACzBznC,KAAK4yD,GAAgBnrB,EACrBznC,KAAKsyD,GAAOz0D,aAAa,IAAK4pC,IAE3BznC,KAAK6yD,IAAmB7yD,KAAKsmC,EAAKgtB,YACrCtzD,KAAK6yD,GAAkB7yD,KAAKsmC,EAAKgtB,UACjCtzD,KAAKqyD,GAAQ/zD,MAAMi1D,QAAUvzD,KAAKsmC,EAAKgtB,UAAY,GAAK,SCjL3D,MAAMvU,KAAEA,IAASrgD,QAEJ80D,GAKZ35D,YAA4BolD,EAA0C3Y,EAAqCmtB,GAA/EzzD,KAAAi/C,MAAAA,EAA0Cj/C,KAAAsmC,EAAAA,EAAqCtmC,KAAAyzD,GAAAA,EAJnGzzD,KAAA2yD,GAAyB,KACzB3yD,KAAA0zD,GAAiB,GACjB1zD,KAAA2zD,GAAoB,GAYpB3zD,KAAA4zD,GAAa,KACyB5zD,KAAKsmC,EAAKutB,cAAc7zD,KAAK2yD,MACxC3yD,KAAK2zD,GAAY3zD,KAAK0zD,IACxD1zD,KAAK2yD,GAAU3yD,KAAKyzD,GAAWzzD,KAAK2zD,GAAW3zD,KAAKi/C,MAAMvtD,OAC1DsO,KAAKsmC,EAAK4sB,qBAAqBlzD,KAAK2yD,KAG7B3yD,KAAA8zD,GAAc,KACrB9zD,KAAKsmC,EAAKqa,OAAO3gD,KAAK2yD,IACtB3yD,KAAK2yD,GAAU,MAlBf1T,EAAMhV,iBAAiB,QAASjqC,KAAK4zD,IACrC3U,EAAMhV,iBAAiB,SAAUjqC,KAAK8zD,IAGhCj6D,YAAYnI,GAClBsO,KAAK0zD,GAAShiE,EACdsO,KAAKi/C,MAAMvtD,MAAQssB,OAAOtsB,UAgBfqiE,GAMZl6D,YAA4BolD,EAA0C3Y,EAAqCmtB,EAAqEO,GAApJh0D,KAAAi/C,MAAAA,EAA0Cj/C,KAAAsmC,EAAAA,EAAqCtmC,KAAAyzD,GAAAA,EALnGzzD,KAAA2yD,GAAyB,KACzB3yD,KAAA0zD,GAAiB,EACjB1zD,KAAA2zD,GAAoB,EAepB3zD,KAAA4zD,GAAa,KACyB5zD,KAAKsmC,EAAKutB,cAAc7zD,KAAK2yD,MACxC3yD,KAAK2zD,GAAY3zD,KAAK0zD,IACjC,MAAnB1zD,KAAKyzD,KACRzzD,KAAK2yD,GAAU3yD,KAAKyzD,GAAWzzD,KAAK2zD,GAAWnE,SAASxvD,KAAKi/C,MAAMvtD,QACnEsO,KAAKsmC,EAAK4sB,qBAAqBlzD,KAAK2yD,MAI9B3yD,KAAA8zD,GAAc,KACE,MAAnB9zD,KAAKyzD,KACRzzD,KAAKsmC,EAAKqa,OAAO3gD,KAAK2yD,IACtB3yD,KAAK2yD,GAAU,OAtBhB3yD,KAAK6nC,UAAwBkX,GAAZ,EAAiB,CAAEjX,MAAO,UAAWxpC,MAAO,mCAAmD,CAAEA,MAAO,qBAAvB2gD,GAClGA,EAAMhV,iBAAiB,QAASjqC,KAAK4zD,IACrC3U,EAAMhV,iBAAiB,SAAUjqC,KAAK8zD,IAGhCj6D,YAAYnI,GAClBsO,KAAK0zD,GAAShiE,EACdsO,KAAKi/C,MAAMvtD,MAAQssB,OAAOtsB,UChDfuiE,GAIZp6D,YAAYipC,GAHJ9iC,KAAAiO,EAAqB,EAI5BjO,KAAKulD,GAAQziB,EAGPjpC,eACN,OAAOmG,KAAKiO,EAGNpU,aACN,GAAImG,KAAKiO,EAAa,EAAIjO,KAAKulD,GAAMf,WAAY,MAAM,IAAI50D,MAAM,uCACjE,MAAMgC,EAAiBoO,KAAKulD,GAAM2O,UAAUl0D,KAAKiO,GAAY,GAE7D,OADAjO,KAAKiO,GAAc,EACZrc,EAGDiI,aACN,OAAQmG,KAAKm0D,aAAe,GAAOn0D,KAAKm0D,aAAe,EAAMn0D,KAAKm0D,YAG5Dt6D,aACN,GAAImG,KAAKiO,EAAa,EAAIjO,KAAKulD,GAAMf,WAAY,MAAM,IAAI50D,MAAM,uCACjE,MAAMgC,EAAiBoO,KAAKulD,GAAM6O,UAAUp0D,KAAKiO,GAAY,GAE7D,OADAjO,KAAKiO,GAAc,EACZrc,EAGDiI,YACN,GAAImG,KAAKiO,EAAa,EAAIjO,KAAKulD,GAAMf,WAAY,MAAM,IAAI50D,MAAM,uCACjE,MAAMgC,EAAiBoO,KAAKulD,GAAM8O,SAASr0D,KAAKiO,GAEhD,OADAjO,KAAKiO,IACErc,EAGDiI,WACN,GAAImG,KAAKiO,EAAa,EAAIjO,KAAKulD,GAAMf,WAAY,MAAM,IAAI50D,MAAM,uCACjE,MAAMgC,EAAiBoO,KAAKulD,GAAM+O,QAAQt0D,KAAKiO,GAE/C,OADAjO,KAAKiO,IACErc,EAGDiI,YACN,GAAImG,KAAKiO,EAAa,EAAIjO,KAAKulD,GAAMf,WAAY,MAAM,IAAI50D,MAAM,uCACjE,OAAOoQ,KAAKulD,GAAM8O,SAASr0D,KAAKiO,GAG1BpU,gBACN,MAAMjI,EAAiBoO,KAAKm0D,YAE5B,OADIviE,GAAU,KAAMmM,QAAQtN,IAAI,wCAA0CmB,EAAS,WAAaoO,KAAKiO,GACrF,IAATrc,EAGDiI,yBACN,IAAIjI,EAAiB,EACrB,IAAK,IAAIzD,EAAY,EAAGA,EAAI,EAAGA,IAAK,CACnC,MAAMomE,EAAmBv0D,KAAKm0D,YAE9B,GADAviE,GAAqB,IAAX2iE,IACK,IAAXA,GAGH,MAFA3iE,IAAmB,EAKrB,OAAOA,EAGDiI,UAAUzL,GAChB4R,KAAKiO,GAAc7f,EAGbyL,UACN,OAAOmG,KAAKulD,GAAMf,WAAaxkD,KAAKiO,EAG9BpU,sBAAsBzL,GAC5B,GAAI4R,KAAKiO,EAAa7f,EAAS4R,KAAKulD,GAAMf,WAAY,MAAM,IAAI50D,MAAM,uCACtE,MAAMgC,EAA4B,IAAIqiE,GAAkB,IAAIzO,SAASxlD,KAAKulD,GAAM12C,OAAQ7O,KAAKulD,GAAMN,WAAajlD,KAAKiO,EAAY7f,IAEjI,OADA4R,KAAKw0D,UAAUpmE,GACRwD,GCvET,MAAMktD,OAAEA,GAAM9nB,EAAEA,GAACttB,IAAEA,GAAGs1C,GAAEA,GAAEC,MAAEA,IAAUvgD,QAEzB+1D,GAgBZ56D,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EAfHtmC,KAAA00D,GAA+BzV,GAAM,CAAEnqD,KAAM,OAAQ6/D,OAAQ,8DAC7D30D,KAAA4/C,GAAmCd,GAAO,CAAEhX,MAAO,iBAEpD9nC,KAAA6nC,UAA4Bn+B,GAAI,CAAEo+B,MAAO,qBAAsBxpC,MAAO,iBACrF0gD,GAAG,UACHhoB,GAAE,CAAE14B,MAAO,sCACV,2KAED04B,GAAE,CAAE14B,MAAO,sCACV,iKAED0B,KAAK00D,GACL10D,KAAK4/C,IAWE5/C,KAAA8/C,GAAS,KAChB9/C,KAAKsmC,EAAKqF,QAGJ3rC,KAAA+/C,QAAU,KAChB//C,KAAK00D,GAAW1U,oBAAoB,SAAUhgD,KAAK40D,IACnD50D,KAAK4/C,GAAcI,oBAAoB,QAAShgD,KAAK8/C,KAG9C9/C,KAAA40D,GAAoB,KAC3B,MAAMC,EAAa70D,KAAK00D,GAAWI,MAAO,GAC1C,IAAKD,EAAM,OAEX,MAAME,EAAoBF,EAAKljE,KAAKqtB,MAA+C,GAAxC61C,EAAKljE,KAAKqjE,YAAY,KAAO,IAAM,IAC9E,GAAiB,QAAbD,EAAqB,CACxB,MAAME,EAAqB,IAAIC,WAC/BD,EAAOhrB,iBAAiB,QAASzB,IAChCxoC,KAAKsmC,EAAKoa,OAAS,KACnB1gD,KAAKsmC,EAAK6uB,gBACVn1D,KAAKsmC,EAAKqa,OAAO,IAAI9G,GAAW75C,KAAKsmC,EAAc2uB,EAAOrjE,SAAS,GAAM,MAE1EqjE,EAAOG,WAAWP,QACZ,GAAiB,QAAbE,GAAoC,OAAbA,EAAoB,CACrD,MAAME,EAAqB,IAAIC,WAC/BD,EAAOhrB,iBAAiB,QAASzB,IAChCxoC,KAAKsmC,EAAKoa,OAAS,KACnB1gD,KAAKsmC,EAAK6uB,gBACVn1D,KAAKq1D,GAA4BJ,EAAOrjE,WAEzCqjE,EAAOK,kBAAkBT,QAEzB92D,QAAQ2yD,MAAM,gCACd1wD,KAAK8/C,MAvCN9/C,KAAK00D,GAAWvV,SAChB2B,YAAW,IAAM9gD,KAAK00D,GAAW3T,UAEjC/gD,KAAK00D,GAAWzqB,iBAAiB,SAAUjqC,KAAK40D,IAChD50D,KAAK4/C,GAAc3V,iBAAiB,QAASjqC,KAAK8/C,IAuC3CjmD,GAAegV,GAGtB,MAAMomD,EAAS,IAAIhB,GAAkB,IAAIzO,SAAS32C,IAClD,IAAI0mD,EAAyC,KAO7C,MAAMtH,EAAkB,GACxB,KAAOgH,EAAOO,WAAW,CACxB,MAAMC,EAAoBR,EAAOS,aAC3BC,EAAsBV,EAAOS,aACnC,GAAa,YAATD,EACiB,MAAhBF,EACHA,EAAeN,EAAOW,sBAAsBD,GAE5C53D,QAAQ2yD,MAAM,uDAET,GAAa,YAAT+E,EAAkC,CAC5C,MAAMI,EAAiCZ,EAAOW,sBAAsBD,GAChEE,EAAYL,WACfvH,EAAOz/D,KAAK,CACXymE,OAAQY,EACRC,kBAAmBD,EAAYE,yBAC/BloC,OAAO,EACPmoC,eAAgB,SAKlBf,EAAOT,UAAUmB,GAInB,GAAoB,MAAhBJ,EAGH,OAFAx3D,QAAQ2yD,MAAM,iDACd1wD,KAAK8/C,KAGN,MAAMmW,EAAqBV,EAAaW,aACRX,EAAaW,aAC7C,MAAMzI,EAA2B8H,EAAaW,aAK9C,IAAIC,EAAuC,EAC3C,MAAMC,EAAgC,GAChCC,EAAwC,GAAVJ,EACpC,GAAII,EACHD,EAAoB5nE,KAAK2nE,QAEzB,IAAK,IAAIG,EAAqB,EAAGA,EAAarI,EAAO7/D,OAAQkoE,IAC5DF,EAAoB5nE,KAAK8nE,GA0B3B,MAAMC,EAA0B,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KACrHC,EAA0B,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,KACrHC,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5EC,EAA8B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5EC,EAAqC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnFC,EAAqC,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACjHC,EAAkC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC/FC,EAA4B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACzFC,EAAsC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACnGC,EAAwC,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC3G,IAAIrJ,EAA8B,IAC9BryC,EAAsB,EACtBg0C,EAAoB,EACpBD,GAAmB,EAGnB4H,EAA0B,EAC9B,OAAa,CACZ,IAAInB,EAA4Bv/B,OAAO0H,UACnCi5B,GAA2B,EAC/B,IAAK,MAAMZ,KAAcF,EAAqB,CAG7C,MAAM1H,EAAeT,EAAOqI,GAC5B,MAAQ5H,EAAM7gC,OAAS6gC,EAAMoH,mBAAqBmB,GAAiB,CAOlE,MACME,EAAoC,IADfzI,EAAMuG,OAAOmC,YACU1I,EAAMuG,OAAOd,YAAczF,EAAMsH,cAC7EqB,EAAkC,IAAdF,EACpBG,EAAqC,GAAdH,EAChB,KAATE,IACH3I,EAAMsH,cAAgBmB,GAGvB,IAAII,GAA8B,EAElC,OAAQF,GACP,KAAA,IAA4B,CAC3B,MAAM/nD,EAAgBo/C,EAAMuG,OAAOuC,gBACL9I,EAAMuG,OAAOuC,gBAC3CV,EAAWQ,GAAc9oE,KAAK,CAAE+iE,SAAU0F,EAAiB3nD,MAAOA,EAAO2hD,SAAU,EAAK92D,SAAU,EAAG4rC,kBAAmB,EAAGmqB,eAAgB,EAAGuH,IAAI,IACjJ,MACF,KAAA,IAA2B,CAC1B,MAAMnoD,EAAgBo/C,EAAMuG,OAAOuC,gBAC7BvG,EAAmBvC,EAAMuG,OAAOuC,gBACtC,GAAgB,GAAZvG,EACH6F,EAAWQ,GAAc9oE,KAAK,CAAE+iE,SAAU0F,EAAiB3nD,MAAOA,EAAO2hD,SAAU,EAAK92D,SAAU,EAAG4rC,kBAAmB,EAAGmqB,eAAgB,EAAGuH,IAAI,QAC5I,CACN,MAAM5jE,EAAiBjF,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAO0H,YAAc,EAAG7G,KAAKmb,MACxE2e,GAAMgvC,6BAA6BzP,GAAuB2O,EAAyBU,QAE9E1kD,EAAchkB,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAO6H,OAAQhH,KAAKmb,QAC1D8sD,EAAsBS,GAAgB,IAAM,GAAK,GAAKvpE,EAAO4H,aAEhEmhE,EAAWQ,GAAc9oE,KAAK,CAC7B+iE,SAAU0F,EACV3nD,MAAOA,EACP2hD,SAAUriE,KAAKsgB,IAAI,EAAKtgB,KAAKyB,IAAI,GAAM4gE,EAAW,IAAM,KACxD92D,QAASw8D,EAAyBW,GAClCvxB,iBAAkBlyC,EAClBq8D,cAAet9C,EACf6kD,IAAI,KAGL,MACF,KAAA,IAC4B/I,EAAMuG,OAAOuC,gBACV9I,EAAMuG,OAAOuC,gBAC1C,MACF,KAAA,IAAkC,CACjC,MAAMvI,EAAkBP,EAAMuG,OAAOuC,gBAC/B9lE,EAAgBg9D,EAAMuG,OAAOuC,gBAGnC,OAAQvI,GACP,KAAA,EACgC,GAA3BsH,EAAce,IAA+F,GAA3Bd,EAAcc,KACnGb,EAAkBa,GAAgB5lE,GAElC,MACF,KAAA,EACCklE,EAAyBU,GAAgB5lE,EACxC,MACF,KAAA,GACCmlE,EAAsBS,GAAgB5lE,EACrC,MACF,KAAA,GACCslE,EAAiBM,GAAc9oE,KAAK,CAAE+iE,SAAU0F,EAAiBpjE,OAAQ60B,GAAMivC,wBLvF7C3xB,EKuF+Ft0C,ELtFlI9C,KAAKuB,IAAI61C,EAAa,IAAK,OKuFzB,MACF,KAAA,GACgC,GAA3BuwB,EAAce,IAA+F,GAA3Bd,EAAcc,KACnGZ,EAAkBY,GAAgB5lE,GAElC,MACF,KAAA,IACC8kE,EAAcc,GAAgB5lE,EAC7B,MACF,KAAA,IACC6kE,EAAce,GAAgB5lE,GAG/B,MACF,KAAA,IAAkC,CACjC,MAAMyI,EAAkBu0D,EAAMuG,OAAOuC,gBACrCb,EAAyBW,GAAgBn9D,EACxC,MACF,KAAA,IAC+Bu0D,EAAMuG,OAAOuC,gBAC1C,MACF,KAAA,IAA8B,CAC7B,MAAMI,EAAclJ,EAAMuG,OAAOuC,gBAK3Br8D,IAJcuzD,EAAMuG,OAAOuC,iBAEG,EAAKI,GAAO,KAAU,IAC3BnB,EAAkBa,GAAkD,IAAlCZ,EAAkBY,IAGnFP,EAAgBO,GAAc9oE,KAAK,CAAE+iE,SAAU0F,EAAiB97D,SAAUA,IACzE,MACF,KAAA,IACC,GAAe,KAAXg8D,EAAmC,CACtC,MAAMlI,EAAkBP,EAAMuG,OAAOuC,gBAC/BppE,EAAiBsgE,EAAMuG,OAAOc,yBAGpC,GAAW,IAAP9G,EACHsI,GAAqB,EACrB7I,EAAMuG,OAAOT,UAAUpmE,QACjB,GAAW,IAAP6gE,EACVtB,EAAsBe,EAAMuG,OAAO4C,aACnCnJ,EAAMuG,OAAOT,UAAUpmE,EAAS,QAC1B,GAAW,IAAP6gE,EAA+C,CACzD,MAAM6I,EAAoBpJ,EAAMuG,OAAOd,YACvC,IAAI4D,EAA8BrJ,EAAMuG,OAAOd,YAY/C,IAX4CzF,EAAMuG,OAAOd,YACHzF,EAAMuG,OAAOd,YACnEzF,EAAMuG,OAAOT,UAAUpmE,EAAS,GAKhCktB,EAA0B,EAAZw8C,EAIc,IAAN,EAAdx8C,KAA0By8C,EAAsB,GAAKz8C,EAAcvtB,EAAO8E,iBAAmByoB,GAAuC,EAAxBvtB,EAAO6E,gBAC1H0oB,IAA6B,EAC7By8C,GAA4C,EAE7Cz8C,EAAc1sB,KAAKsgB,IAAInhB,EAAO6E,eAAgBhE,KAAKyB,IAAItC,EAAO8E,eAAgByoB,SAC7D,IAAP2zC,GACVK,EAAYZ,EAAMuG,OAAO+C,WACzB3I,EAAsC,GAA5BX,EAAMuG,OAAOd,YACvBzF,EAAMuG,OAAOT,UAAUpmE,EAAS,IAGhCsgE,EAAMuG,OAAOT,UAAUpmE,OAGlB,CAAA,GAAmB,KAAf+oE,GAAsC,KAAfA,EAOjC,OAFAp5D,QAAQ2yD,MAAM,8BAAgCyG,QAC9Cn3D,KAAK8/C,KANiD,CAEtD,MAAM1xD,EAAiBsgE,EAAMuG,OAAOc,yBACpCrH,EAAMuG,OAAOT,UAAUpmE,IAMvB,MACF,QAGC,OAFA2P,QAAQ2yD,MAAM,4BAA8B2G,QAC5Cr3D,KAAK8/C,MAKFyX,GAAsB7I,EAAMuG,OAAOO,UACvC9G,EAAMoH,kBAAoBmB,EAAkBvI,EAAMuG,OAAOc,0BAEzDrH,EAAM7gC,OAAQ,EAGVwoC,IACHF,IACIA,EAA+BlI,EAAO7/D,SACzCgoE,EAAoB,GAAKD,EACzBlI,EAAOkI,GAA8BL,mBAAqBmB,EAC1DnB,EAAoBlnE,KAAKyB,IAAIylE,EAAmB7H,EAAOkI,GAA8BL,mBACrFoB,GAAkB,KAMjBxI,EAAM7gC,QACVqpC,GAAkB,EAClBpB,EAAoBlnE,KAAKyB,IAAIylE,EAAmBpH,EAAMoH,oBAIxD,IAAIoB,EAGH,MAFAD,EAAkBnB,MLzMqB9vB,EKgNzC,MACM5hB,EAAyBx1B,KAAKsgB,IAAInhB,EAAO0E,SAAU7D,KAAKyB,IAAItC,EAAO2E,SAAU9D,KAAKmb,MADlD,IACgF4jD,KAChHD,EAA2BD,EAAmB1/D,EAAOqF,aACrDooC,EAAsBztC,EAAOqF,aAAekoB,EAC5C28C,EAAwBrpE,KAAKkgB,KAAKmoD,EAAkBvJ,EAAmBlyB,GAE7E,SAAS08B,EAAuB3G,GAC/B,OAAO3iE,KAAKmb,MAAMwnD,EAAW7D,GAG9B,IAAI9vD,EAAc0xD,EAGlB,IAFID,IAASzxD,GAAO,GACH,IAAN,EAANA,KAAeA,GAAO,GACpBA,EAAM,GAAGA,GAAO,GACvBA,GAAY,GAGZ,MAAMuD,EAA2B,GAC3BE,EAA2B,GAC3BC,EAAyB,GAC/B,IAAK,IAAI6sD,EAAsB,EAAGA,EAAc,GAAIA,IAAe,CAClE,GAAsC,GAAlC2I,EAAW3I,GAAa//D,OAAa,SAEzC,MAAMgS,EAAmB,IAAImX,EAEvB4gD,EAAoCv+D,EAAaw+D,yBAAyBtB,EAAW3I,GAAa,GAAGh0D,SACrGk+D,EAAsD,MAAtBF,EAA8B,KAAOv+D,EAAak1C,cAAcqpB,GAEhGG,EAA4C,GAAfnK,EAC7Br9C,EAA0BwnD,GAAsC,MAAjBD,GAAkD,GAAzBA,EAAch9D,QACtF+W,EAA0C,MAAjBimD,GAAgD,GAAvBA,EAAcl+C,MAChEo+C,EAA2BznD,EAAiB/iB,EAAOwJ,kBAAoBxJ,EAAOsE,KAAKuL,GAAKrL,UACxFymC,EAAwBloB,EAAiB/iB,EAAOwK,cAAgB,EAChEigE,EAA4B1nD,EAAiB,GAAM,EACnD2nD,EAA0B3nD,EAAiB/iB,EAAO2K,UAAY,EAAI,GAAK3K,EAAO6K,aAGhFkY,EACCwnD,EACHj3D,EAAcgd,QAAQje,GAEtBiB,EAAc7S,KAAK4R,GAEVgS,EACV9Q,EAAY9S,KAAK4R,GAEjBe,EAAc3S,KAAK4R,GAGpB,IAAIs4D,EAA0B,EAC1BC,EAAyB,EACzBC,EAAkC,EAClCC,EAA+B9qE,EAAO4H,UAE1C,GAAI2iE,EAAkB,CACrB,MAAMQ,EAAwB,GAC9B,IAAI3sC,GAAsB,EACtBrQ,EAA0B,KAC1Bi9C,EAAwB,EACxBC,GAA+B,EAEnC,MAAMl/D,EAAsBF,EAAaggD,kBAAkB,oBACrDv/C,EAAiBT,EAAak1C,cAAch1C,GAC5C0W,EAAyB,IAAI2B,GAAW,GAAO,GACrD3B,EAAW2O,eAAe9kB,EAAOO,UAAU,GAAO,GAAO,GAAO,GAChE4V,EAAWnW,OAASP,EACpBsG,EAAQqX,YAAYjpB,KAAKgiB,GAEzB,IAAK,IAAIyoD,EAAyB,EAAGA,GAAkBnC,EAAW3I,GAAa//D,OAAQ6qE,IAAkB,CACxG,MACMC,EADuBD,GAAkBnC,EAAW3I,GAAa//D,OACrB,KAAO0oE,EAAW3I,GAAa8K,GAC3EE,EAAqC,MAAbD,EAAoB3iC,OAAO6iC,iBAAmBlB,EAAuBgB,EAAU3H,UAC7G,GAAIuH,EAAY1qE,OAAS,GAAK+qE,EAAgBJ,IAA+B,MAAbG,GAAqBA,EAAUzB,IAAK,CACnG,MAAM17C,EAAcntB,KAAKsU,MAAM61D,EAAgBv9B,GACzC+R,EAAuBxxB,EAAMyf,EAEnC,GAAIrP,GAAcpQ,GAAkB,MAAXD,EAAiB,CAEzC,IADAqQ,IACOA,EAAapQ,GACnB3b,EAAQuX,KAAKwU,GAAc,EAC3BA,IAEDrQ,EAAU,IAAIxL,EACdlQ,EAAQsX,SAASlpB,KAAKstB,GACtB1b,EAAQuX,KAAKwU,GAAc/rB,EAAQsX,SAAStpB,OAC5C0tB,EAAQtL,WAAa,IAOjBwoD,GAAuBxoD,EAAW3c,OAAS+kE,KAC/CpoD,EAAW3c,OAAS+kE,EACpBpoD,EAAWoC,IAAMimD,EACjBroD,EAAWqC,SAAW,EACtBmmD,GAAsB,GAGvB,MAAMK,EAAsB,GAC5B,IAAIC,EAAsBb,EACtBc,EAAsB,EACtBvzB,EAAqB,EACzB,IAAK,MAAM12B,KAASwpD,EAAa,CAChC,MAAMhjD,EAAkCqwC,GAAiB72C,IACf,GAAtC+pD,EAAU1kD,QAAQmB,EAAKna,YAC1B09D,EAAU7qE,KAAKsnB,EAAKna,WAErBqqC,EAAap3C,KAAKsgB,IAAI82B,EAAYp3C,KAAKmb,MAAM+L,EAAKjiB,OAAS6kE,IAC3DY,EAAc1qE,KAAKyB,IAAIipE,EAAaxjD,EAAK7F,UACzCspD,EAAc3qE,KAAKsgB,IAAIqqD,EAAazjD,EAAK7F,UAE1C,MAAMA,EAAmBrhB,KAAKyB,IAAIkpE,EAAa3qE,KAAKsgB,IAAIoqD,EAAa,IAC/DttB,EAAwB+sB,EAAgBxrB,EACxCtB,EAAsBr9C,KAAKyB,IAAImrC,EAAa5sC,KAAKyB,IAAI8oE,EAAgB5rB,EAAcvB,EAA2B,EAAX/7B,IAEnGQ,EAAa,IAAIpB,GAAM,EAAG28B,EAAeC,EAAajG,GAAY,GAExEv1B,EAAKf,QAAQthB,OAAS,EACtB,IAAK,IAAIowB,EAAqB,EAAGA,EAAa5vB,KAAKyB,IAAItC,EAAOwI,aAAc8iE,EAAUjrE,QAASowB,IAAc,CAC5G,MAAMg7C,EAAoBH,EAAU76C,EAAa5vB,KAAKsgB,IAAI,EAAGmqD,EAAUjrE,OAASL,EAAOwI,gBAC/C,GAApCka,EAAKf,QAAQiF,QAAQ6kD,IACxB/oD,EAAKf,QAAQlhB,KAAKgrE,GAGpB19C,EAAQvL,MAAM/hB,KAAKiiB,GAEnBqoD,EAAY1qE,OAAS,EAIL,MAAb8qE,GAAqBA,EAAUzB,IAA2CtqD,MAArCg5C,GAAiB+S,EAAU5pD,SACnEwpD,EAAYtqE,KAAK0qE,EAAU5pD,OAC3BypD,EAAgBI,EAChBT,EAAkBQ,EAAUjI,SAC5B2H,EAA0BM,EAAUnzB,iBACpC8yB,EAAuBK,EAAUhJ,oBAG7B,CAMN,IAAIuJ,EAA8B,EAC9BC,EAAgC,EAChCC,EAA8B,EAC9BC,EAA+B,EACnC,SAASC,EAA0BtI,GAClC,KAAOoI,EAAsB5C,EAAgB5I,GAAa//D,QAAU2oE,EAAgB5I,GAAawL,GAAqBpI,UAAYA,GACjIkI,EAAsB1C,EAAgB5I,GAAawL,GAAqBx+D,SACxEw+D,IAGF,SAASG,EAA4BvI,GACpC,KAAOqI,EAAuB5C,EAAiB7I,GAAa//D,QAAU4oE,EAAiB7I,GAAayL,GAAsBrI,UAAYA,GACrImI,EAAwB1C,EAAiB7I,GAAayL,GAAsB/lE,OAC5E+lE,IAIF,MAAMG,EAAoC,GACpCjB,EAAwB,GAC9B,IAAI3sC,GAAsB,EACtBrQ,EAA0B,KAC1Bk+C,EAA4B,EAC5BjB,EAAwB,EACxBkB,EAAmB,EACnB/oE,EAAqB,EAEzB,IAAK,IAAIgoE,KAAapC,EAAW3I,GAAc,CAC9C,MAAM2H,EAA4BoD,EAAU3H,SACtC4H,EAAwBjB,EAAuBpC,GAErD,GAAIgD,EAAY1qE,OAAS,GAAK+qE,EAAgBJ,EAAe,CAI5D,MAAM1rC,EAAmBz+B,KAAKsU,MAAM61D,EAAgBv9B,GAC9ClO,EAAiB1+B,KAAKkgB,KAAKqqD,EAAgB39B,GACjD,IAAK,IAAIzf,EAAcsR,EAAUtR,EAAMuR,EAAQvR,IAAO,CACrD,MAAMwxB,EAAuBxxB,EAAMyf,EAC7B0+B,EAA2Bn+C,EAAMT,EAAcmyC,EAC/C0M,GAA0Bp+C,EAAM,GAAKT,EAAcmyC,EAEnDzhB,EAAwBp9C,KAAKsgB,IAAI,EAAG6pD,EAAgBxrB,GACpDtB,EAAsBr9C,KAAKyB,IAAImrC,EAAa29B,EAAgB5rB,GAC5D6sB,EAA4BxrE,KAAKsgB,IAAIgrD,EAAkBF,GACvDK,EAA0BzrE,KAAKyB,IAAI8pE,EAAgBrE,GAEzD,GAAI9pB,EAAgBC,EAAa,CAChC,MAAMnyC,EAA6BF,EAAaw+D,yBAAyBO,GACnEt+D,EAAwC,MAAfP,EAAuB,KAAOF,EAAak1C,cAAch1C,GAGxF,GAAIqyB,GAAcpQ,GAAkB,MAAXD,EAAiB,CAEzC,IADAqQ,IACOA,EAAapQ,GACnB3b,EAAQuX,KAAKwU,GAAc,EAC3BA,IAQD,GANArQ,EAAU,IAAIxL,EACdlQ,EAAQsX,SAASlpB,KAAKstB,GACtB1b,EAAQuX,KAAKwU,GAAc/rB,EAAQsX,SAAStpB,OAID+e,MAAvC4sD,EAAoBpB,GAA8B,CACrD,MAAMnoD,EAAyB,IAAI2B,EAAWrB,EAAgBsB,GAC9D2nD,EAAoBpB,GAAkBnoD,EAEnB,MAAf1W,GAAiC,MAAVO,GAAqC,GAAlBA,EAAOgB,SAAoByV,GACxEN,EAAW2O,eAAe9kB,EAAOO,SAAUkW,EAAgBsB,GAAc,GAAO,GAChF5B,EAAWnW,OAASP,IAEpB0W,EAAWqE,gBAAgBzC,EAAY,EAAyBtB,EAAc,EAAA,EAAgDA,EAAgBsB,GAC9I5B,EAAWzV,MAAQ,GAGpByV,EAAW3c,OAAS+kE,EACpBpoD,EAAWoC,IAAMimD,EACjBroD,EAAWqC,SAAW,EAEtBzS,EAAQqX,YAAYjpB,KAAKgiB,GAG1BsL,EAAQtL,WAAapQ,EAAQqX,YAAY9C,QAAQolD,EAAoBpB,IAO3BxrD,MAAvC4sD,EAAoBpB,KACvBoB,EAAoBpB,GAAgB9kE,OAASjF,KAAKyB,IAAI0pE,EAAoBpB,GAAgB9kE,OAAQ+kE,GAClGmB,EAAoBpB,GAAgB/lD,IAAMhkB,KAAKyB,IAAI0pE,EAAoBpB,GAAgB/lD,IAAKimD,IAK7F,MAAMpoD,EAAa,IAAIpB,GAAM,EAAG28B,EAAeC,EAAa,GAAG,GAC/Dx7B,EAAKd,KAAKvhB,OAAS,EAEnByrE,EAA0BO,GAC1BN,EAA4BM,GAC5B,MAAME,EAA2BxB,EAAY,GAAKN,EAAoBD,EAChEgC,EAA8B3rE,KAAKmb,OAAOuwD,EAAmBb,GAAuBzgC,GACpFwhC,EAA0B5rE,KAAKmb,MAAM0vD,EAAsBlB,GACjE,IAAIkC,EAAoB1rD,EAAY,EAAG,EAAGngB,KAAKmb,MAAM2uD,EAAkBgB,IACvEjpD,EAAKd,KAAKnhB,KAAKisE,GASf,MAAMC,EAAgC,CACrC,CAAEtxC,KAAM,EAAG9Z,MAAOirD,EAAqB1mE,OAAQ4mE,EAAS5mE,OAAQ8mE,UAAU,EAAOC,WAAW,IAE7F,IAAIC,EAAuB,EAEvBC,GAAyBR,EAAmBb,GAAuBzgC,EACnE+hC,EAA6BrC,EAAkBgB,EACnD,IAAK,IAAItwC,EAAe4iB,EAAgB,EAAG5iB,GAAQ6iB,EAAa7iB,IAAQ,CACvE,MAAMmoC,EAAmB3iE,KAAKsgB,IAAIkrD,EAAmBxrE,KAAKyB,IAAIgqE,EAAkB,EAAGzrE,KAAKmb,MAAM2jD,GAAoBtkC,EAAOmkB,MACnHytB,EAA2B5xC,EAAO4iB,EAClCivB,EAAqB7xC,GAAQ6iB,EAKnC4tB,EAA0BtI,GAC1BuI,EAA4BvI,GAC5B,MAAM2J,GAAqBzB,EAAsBa,GAAoBthC,EAC/DmiC,EAAyBzC,EAAkBgB,EAE3C0B,EAAuBxsE,KAAKmb,MAAMmxD,GAClCG,EAA8BzsE,KAAKC,IAAIqsE,EAAYE,GAAgB,IACnEE,EAAgC1sE,KAAKC,IAAIisE,EAAgBlsE,KAAKmb,MAAM+wD,IAAkB,IACzFlsE,KAAKC,IAAIqsE,EAAYJ,IAAkB,EACvClsE,KAAKsU,MAAMg4D,IAActsE,KAAKsU,MAAM43D,GACjCH,EAAoBU,GAAsBC,EAE1CC,EAA4B3sE,KAAKmb,MAAMoxD,GACvCK,EAAmC5sE,KAAKC,IAAIssE,EAAiBI,GAAqB,IAClFE,EAAqC7sE,KAAKC,IAAIksE,EAAqBnsE,KAAKmb,MAAMgxD,IACjFnsE,KAAKC,IAAIssE,EAAiBJ,IAAuB,EACjDnsE,KAAKsU,MAAMi4D,IAAmBvsE,KAAKsU,MAAM63D,GACtCW,EAAyBF,GAA2BC,EAK1D,GAHAX,EAAgBI,EAChBH,EAAqBI,EAEjBR,GAAYe,GAAiBT,EAAU,CAC1C,MAAMU,EAA2B,CAAEvyC,KAAM4xC,EAAkB1rD,MAAO8rD,EAAcvnE,OAAQ0nE,EAAmBZ,SAAUA,GAAYM,EAAUL,UAAWc,GAAiBT,GACjK1uB,EAAwBmuB,EAAcG,GAK5C,IAAIe,GAAkB,EAClBC,EAAwBtlC,OAAO0H,UAEnC,GAAI09B,EAAWhB,SAAU,CACxB,MAAM70B,GAAiB61B,EAAWrsD,MAAQi9B,EAAQj9B,QAAUqsD,EAAWvyC,KAAOmjB,EAAQnjB,MACtF,IAAI0yC,EAAmCltE,KAAKC,IAAIi3C,GAC5Ci2B,GAA0B,EAC1BC,EAAgCzlC,OAAO0H,UAC3C,IAAK,IAAIg+B,EAAyBpB,EAAe,EAAGoB,EAAiBvB,EAActsE,OAAQ6tE,IAAkB,CAC5G,MAAMC,EAA6BxB,EAAcuB,GACjD,GAAIC,EAAavB,SAAU,CAC1B,MAAMwB,EAA+B5vB,EAAQj9B,MAAQw2B,GAASo2B,EAAa9yC,KAAOmjB,EAAQnjB,MACpFgzC,EAAmBxtE,KAAKC,IAAIstE,EAAuBD,EAAa5sD,OAClEwsD,EAA2BM,IAC9BN,EAA2BM,EAC3BL,GAAiB,EACjBC,EAAwBC,IAIvBF,IACHH,GAAS,EACTC,EAAgBjtE,KAAKyB,IAAIwrE,EAAeG,IAI1C,GAAIL,EAAWf,UAAW,CACzB,MAAM90B,GAAiB61B,EAAW9nE,OAAS04C,EAAQ14C,SAAW8nE,EAAWvyC,KAAOmjB,EAAQnjB,MACxF,IAAIizC,EAAiCztE,KAAKC,IAAIi3C,GAC1Cw2B,GAAwB,EACxBC,EAA8BhmC,OAAO0H,UACzC,IAAK,IAAIg+B,EAAyBpB,EAAe,EAAGoB,EAAiBvB,EAActsE,OAAQ6tE,IAAkB,CAC5G,MAAMC,EAA6BxB,EAAcuB,GACjD,GAAIC,EAAatB,UAAW,CAC3B,MAAM4B,EAA6BjwB,EAAQ14C,OAASiyC,GAASo2B,EAAa9yC,KAAOmjB,EAAQnjB,MACnFgzC,EAAmBxtE,KAAKC,IAAI2tE,EAAqBN,EAAaroE,QAChEwoE,EAAyBD,IAC5BC,EAAyBD,EACzBE,GAAe,EACfC,EAAsBN,IAIrBK,IACHV,GAAS,EACTC,EAAgBjtE,KAAKyB,IAAIwrE,EAAeU,IAI1C,GAAIX,EAAQ,CACX,MAAMa,EAA2B/B,EAAcmB,GAC/CprD,EAAKd,KAAKnhB,KAAKugB,EAAY0tD,EAAWntD,MAAQirD,EAAqBkC,EAAWrzC,KAAMqzC,EAAW5oE,SAC/FgnE,EAAegB,EAGhBnB,EAAclsE,KAAKmtE,IAKrB,MAAMe,EAA+BhC,EAAcA,EAActsE,OAAS,GAC1EqiB,EAAKd,KAAKnhB,KAAKugB,EAAY2tD,EAAeptD,MAAQirD,EAAqBmC,EAAetzC,KAAMszC,EAAe7oE,SAG3G,IAAIiF,EAAmB2/D,EACnBkE,EAAmB,EACvB,IAAK,MAAMC,KAAWnsD,EAAKd,KAC1B7W,EAAWlK,KAAKyB,IAAIyI,EAAU2/D,EAAkBmE,EAAQzhE,UACxDwhE,EAAW/tE,KAAKyB,IAAIssE,GAAWC,EAAQzhE,UAIxCsV,EAAKf,QAAQthB,OAAS,EACtB,IAAK,IAAIowB,EAAqB,EAAGA,EAAa5vB,KAAKyB,IAAItC,EAAOwI,aAAcuiE,EAAY1qE,QAASowB,IAAc,CAC9G,IAAIg7C,EAAoBV,EAAYt6C,EAAa5vB,KAAKsgB,IAAI,EAAG4pD,EAAY1qE,OAASL,EAAOwI,eAAiBiiE,EAC5F,MAAVn+D,GAAmD8S,MAAjC9S,EAAO0B,yBAC5By9D,GAAa,GAAKn/D,EAAO0B,wBAE1B,MAAM8gE,EAAuBjuE,KAAKsgB,IAAIytD,EAAU/tE,KAAKyB,IAAIyI,EAAUlK,KAAKmb,OAAOyvD,EAAYgB,GAAmBxhC,KAC9G,IAA2C,GAAvCvoB,EAAKf,QAAQiF,QAAQkoD,GAAqB,CAC7CpsD,EAAKf,QAAQlhB,KAAKquE,GAClB,MAAMttB,EAAiB9+B,EAAKjB,IAAMiB,EAAKlB,MACvC0qD,GAAY4C,EAAettB,EAC3Br+C,GAAcq+C,GAGhBzzB,EAAQvL,MAAM/hB,KAAKiiB,MAMuB,GAAzCqoD,EAAYnkD,QAAQukD,EAAU5pD,QACjCwpD,EAAY16C,OAAO06C,EAAYnkD,QAAQukD,EAAU5pD,OAAQ,GAEtD4pD,EAAUzB,KACbqB,EAAYtqE,KAAK0qE,EAAU5pD,OAC3BopD,EAAkBQ,EAAUjI,SAC5B0H,EAAiBO,EAAU/+D,QAC3By+D,EAA0BM,EAAUnzB,iBACpC8yB,EAAuBK,EAAUhJ,eAGlC8J,EAAoBlE,EACpBiD,EAAgBI,EAGjB,MAAM2D,EAAuB7C,EAAW/oE,EACxCkP,EAAQoX,OAAU1G,GAAkBsB,EAAgB,EAAIxjB,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAI2P,KAAKsmC,EAAKy2B,kBAAmBnuE,KAAKmb,MAAO+yD,EAAe,GAAM,OAG5I,KAAO18D,EAAQuX,KAAKvpB,OAAS6pE,GAC5B73D,EAAQuX,KAAKnpB,KAAK,GAMpB,SAASwuE,EAAgBjlD,EAAqBqiC,GAC7C,KAAOriC,EAAS3pB,OAASgsD,GAAW,CACnC,IAAI6iB,EAA4BllD,EAAS3pB,OAAS,EAC9C8uE,EAA4BnlD,EAAS3pB,OAAS,EAC9C+uE,EAA0B5mC,OAAO0H,UACjCm/B,EAAqB7mC,OAAO0H,UAChC,IAAK,IAAIo/B,EAAwB,EAAGA,EAAgBtlD,EAAS3pB,OAAS,EAAGivE,IACxE,IAAK,IAAIC,EAAwBD,EAAgB,EAAGC,EAAgBvlD,EAAS3pB,OAAQkvE,IAAiB,CACrG,MAAMC,EAAoBxlD,EAASslD,GAC7BG,EAAoBzlD,EAASulD,GACnC,IAAIG,EAAoB,EACpBC,EAAe,EACnB,IAAK,IAAIjnB,EAAmB,EAAGA,EAAW8mB,EAAS5lD,KAAKvpB,QAAUqoD,EAAW+mB,EAAS7lD,KAAKvpB,OAAQqoD,IACnE,GAA3B8mB,EAAS5lD,KAAK8+B,IAA6C,GAA3B+mB,EAAS7lD,KAAK8+B,IAAgBgnB,IACnC,GAA3BF,EAAS5lD,KAAK8+B,IAA6C,GAA3B+mB,EAAS7lD,KAAK8+B,IAAgBinB,IAE/DD,GAAaN,IACZM,EAAYN,GAAmBO,EAAON,KACzCH,EAAoBI,EACpBH,EAAoBI,EACpBH,EAAkBM,EAClBL,EAAaM,GAOjB,MAAMH,EAAoBxlD,EAASklD,GAC7BO,EAAoBzlD,EAASmlD,GAC7BS,EAAkCJ,EAAS9lD,YAAYrpB,OACvDwvE,EAA+BL,EAAS7lD,SAAStpB,OACvD,IAAK,MAAMoiB,KAAcgtD,EAAS/lD,YACjC8lD,EAAS9lD,YAAYjpB,KAAKgiB,GAE3B,IAAK,MAAMsL,KAAW0hD,EAAS9lD,SAC9BoE,EAAQtL,YAAcmtD,EACtBJ,EAAS7lD,SAASlpB,KAAKstB,GAExB,IAAK,IAAI26B,EAAmB,EAAGA,EAAW8mB,EAAS5lD,KAAKvpB,QAAUqoD,EAAW+mB,EAAS7lD,KAAKvpB,OAAQqoD,IACnE,GAA3B8mB,EAAS5lD,KAAK8+B,IAA6C,GAA3B+mB,EAAS7lD,KAAK8+B,KACjD8mB,EAAS5lD,KAAK8+B,GAAY+mB,EAAS7lD,KAAK8+B,GAAYmnB,GAKtD7lD,EAASqG,OAAO8+C,EAAmB,IAIrCF,EAAgB77D,EAAepT,EAAOmK,sBACtC8kE,EAAgB37D,EAAetT,EAAOqK,sBACtC4kE,EAAgB17D,EAAavT,EAAOuK,oBAwBpC0H,KAAKsmC,EAAK6uB,gBACV,IAAK,MAAM/0D,KAAWJ,KAAKsmC,EAAKnmC,KAAK4X,SAAU3X,EAAQwX,OAAQ,EAC/D5X,KAAKsmC,EAAKoa,OAAS,KACnB1gD,KAAKsmC,EAAKqa,OAAO,IAzBjB,cAA+BxV,GAC9BtxC,YAAY+yC,GACX9B,QACA,MAAM3qC,EAAaysC,EAAIzsC,KACvBA,EAAKqa,MAAQ4J,EACbjkB,EAAKmb,YAAcA,EACnBnb,EAAKvC,IAAMA,EACXuC,EAAK8a,MAAQ,GACb9a,EAAKib,OAAS,EACdjb,EAAKsb,OAAS,EAEd+xB,GAAwBrsC,GACxBqsC,GAAwBnsC,GACxBmsC,GAAwBlsC,GAExBtB,KAAKytC,OAAO,IAAIC,GAAsBd,EAAKzrC,EAAeE,EAAeC,IACzEnB,EAAK+a,UAAY,EACjB/a,EAAKgb,WAAahb,EAAKob,SACvBvb,KAAKsrC,KACLsB,EAAI9C,SAASC,YAMuB/pC,KAAKsmC,IAAO,GAAM,UCj2B7Cu3B,GAoJLhkE,qBAAqBikE,GAC3B,OAAQA,GACP,IAAK,SACJ99D,KAAKM,EAAc8F,YAAcpG,KAAK+9D,GACtC,MACD,IAAK,aACJ/9D,KAAKM,EAAc8F,YAAcpG,KAAKg+D,GACtC,MACD,IAAK,iBACJh+D,KAAKM,EAAc8F,YAAcpG,KAAKi+D,KA5JjBJ,GAAAE,GAAwB,SAGxBF,GAAAI,GAAgC,i5DA2DhCJ,GAAAG,GAA4B,yrEAmE7Bj+D,EAAY+H,sBAAsB/H,EAAYqH,mPAOnDrH,EAAYqH,gIAGNrH,EAAY+H,oDACZ/H,EAAYqH,8CAKZy2D,GAAAv9D,EAAkCvD,SAASwM,KAAKzM,YAAY4B,EAAKJ,MAAM,CAAExJ,KAAM,cC/IxG,MAAMgqD,OAAEA,GAAMp1C,IAAEA,GAAGs1C,GAAEA,GAAEC,MAAEA,GAAKE,OAAEA,GAAMC,OAAEA,IAAW1gD,QAEtCw/D,GA2BZrkE,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EA1BHtmC,KAAAm+D,GAAmClf,GAAM,CAAE3gD,MAAO,gCAAiCxJ,KAAM,SAAUyqD,KAAM,IAAK7tD,MAAO,MACrHsO,KAAAo+D,GAAmCjf,GAAO,CAAE7gD,MAAO,gBACnE8gD,GAAO,CAAE1tD,MAAO,UAAY,iBAC5B0tD,GAAO,CAAE1tD,MAAO,cAAgB,sBAChC0tD,GAAO,CAAE1tD,MAAO,kBAAoB,4BAEpBsO,KAAA4/C,GAAmCd,GAAO,CAAEhX,MAAO,iBACnD9nC,KAAA6/C,GAAiCf,GAAO,CAAEhX,MAAO,aAAcxpC,MAAO,cAAgB,QAEvF0B,KAAA6nC,UAA4Bn+B,GAAI,CAAEo+B,MAAO,qBAAsBxpC,MAAO,iBACrF0gD,GAAG,cACHt1C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,sBACZ,uBAED0B,KAAKm+D,IAENz0D,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,gBAAkB0B,KAAKo+D,KAE/D10D,GAAI,CAAEpL,MAAO,+EACZ0B,KAAK6/C,IAEN7/C,KAAK4/C,IAyBE5/C,KAAA8/C,GAAS,KAChB9/C,KAAKsmC,EAAKqF,QAGJ3rC,KAAA+/C,QAAU,KAChB//C,KAAK6/C,GAAYG,oBAAoB,QAAShgD,KAAKigD,IACnDjgD,KAAK4/C,GAAcI,oBAAoB,QAAShgD,KAAK8/C,IACrD9/C,KAAKm+D,GAAene,oBAAoB,OAAQke,GAAa/d,IAC7DngD,KAAK6nC,UAAUmY,oBAAoB,UAAWhgD,KAAKogD,KAG5CpgD,KAAAogD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQpiD,SAAwC,IAAjBuqC,EAAM8X,SACxDtgD,KAAKigD,MAUCjgD,KAAAigD,GAAe,KACtBx/B,OAAOC,aAAa6/B,QAAQ,aAAcvgD,KAAKo+D,GAAc1sE,OAC7D+uB,OAAOC,aAAa6/B,QAAQ,eAAgBvgD,KAAKm+D,GAAezsE,OAChEsO,KAAKsmC,EAAKoa,OAAS,KACnB1gD,KAAKsmC,EAAK+3B,WAAar+D,KAAKo+D,GAAc1sE,MAC1CmsE,GAAOS,cAAct+D,KAAKsmC,EAAK+3B,YAC/Br+D,KAAKsmC,EAAKi4B,gBAAuB99C,OAAOC,aAAaC,QAAQ,iBAAmB,KAAtD,EAC1B3gB,KAAKsmC,EAAKy2B,kBAAoBhvE,EAAO6K,aAAeoH,KAAKsmC,EAAKi4B,cAC9Dv+D,KAAKsmC,EAAKk4B,iBAAmBx+D,KAAKsmC,EAAKi4B,cAAgBv+D,KAAKsmC,EAAKnmC,KAAKkb,IAAM,EAE5Erb,KAAKsmC,EAAKqF,QAtDV3rC,KAAKm+D,GAAe9tE,IAAM,IAC1B2P,KAAKm+D,GAAejvD,IAAM,IAC1B,MAAMuvD,EAA6Bh+C,OAAOC,aAAaC,QAAQ,gBAC5C,MAAf89C,IACHz+D,KAAKm+D,GAAezsE,MAAQ+sE,GAG7B,MAAMC,EAA4Bj+C,OAAOC,aAAaC,QAAQ,cAC5C,MAAd+9C,IACH1+D,KAAKo+D,GAAc1sE,MAAQgtE,GAG5B1+D,KAAKm+D,GAAehf,SACpB2B,YAAW,IAAM9gD,KAAKm+D,GAAepd,UAErC/gD,KAAK6/C,GAAY5V,iBAAiB,QAASjqC,KAAKigD,IAChDjgD,KAAK4/C,GAAc3V,iBAAiB,QAASjqC,KAAK8/C,IAClD9/C,KAAKm+D,GAAel0B,iBAAiB,OAAQi0B,GAAa/d,IAC1DngD,KAAK6nC,UAAUoC,iBAAiB,UAAWjqC,KAAKogD,IAoBzCvmD,UAAuB2uC,GAC9B,MAAMyW,EAA4CzW,EAAM6X,OACxD,IAAI3uD,GAAiButD,EAAMvtD,MAC3ButD,EAAMvtD,MAAQ9C,KAAKsgB,KAAK+vC,EAAM5uD,IAAKzB,KAAKyB,KAAK4uD,EAAM/vC,IAAKxd,IAAU,ICrEpE,MAAMotD,OAAEA,GAAMp1C,IAAEA,GAAGs1C,GAAEA,GAAEC,MAAEA,IAAUvgD,QAEtBigE,GA0DZ9kE,YAAY+kE,GAzDK5+D,KAAAwmC,EAAuB,IACvBxmC,KAAAymC,EAAwB,GACxBzmC,KAAAgiD,GAAwBjjD,EAAI0oC,KAAK,CAAEb,KAAM7mC,EAAY+H,mBAAoBq/B,iBAAkB,SAC3FnnC,KAAAiiD,GAAwBljD,EAAImoC,IAAI,CAAEC,iBAAkB,SACpDnnC,KAAAkiD,GAA2BnjD,EAAImoC,IAAI,CAAEC,iBAAkB,SACvDnnC,KAAA6+D,GAA8B9/D,EAAI0oC,KAAK,CAAEb,KAAM,OAAQU,OAAQvnC,EAAY2H,cAAe6/B,eAAgB,EAAGJ,iBAAkB,SAC/HnnC,KAAA8+D,GAA8B//D,EAAIggE,OAAO,CAAEn4B,KAAM7mC,EAAY2H,cAAe4/B,OAAQ,OAAQ03B,EAAG,MAC/Fh/D,KAAAi/D,GAA4BlgE,EAAI0oC,KAAK,CAAEb,KAAM,OAAQU,OAAQvnC,EAAYwH,YAAaggC,eAAgB,EAAGJ,iBAAkB,SAC3HnnC,KAAAk/D,GAA8BngE,EAAI0oC,KAAK,CAAEb,KAAM,OAAQU,OAAQvnC,EAAY8H,WAAY0/B,eAAgB,EAAGJ,iBAAkB,SAC5HnnC,KAAAm/D,GAA8BpgE,EAAIggE,OAAO,CAAEn4B,KAAM7mC,EAAY8H,WAAYy/B,OAAQ,OAAQ03B,EAAG,MAC5Fh/D,KAAAo/D,GAA0BrgE,EAAI62C,KAAK,CAAE/O,EAAG,QAASC,EAAG,SAAUK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,yBAA2B,KAC7I5mC,KAAAs/D,GAA0BvgE,EAAI62C,KAAK,CAAE/O,EAAG,QAASC,EAAG,SAAUK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,yBAA2B,KAC7I5mC,KAAAu/D,GAA0BxgE,EAAI62C,KAAK,CAAE/O,EAAG,QAASC,EAAG,SAAUK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,yBAA2B,KAC7I5mC,KAAAw/D,GAA2BzgE,EAAI62C,KAAK,CAAE/O,EAAG,MAAOC,EAAG,SAAUK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,yBAA2B,MAC5I5mC,KAAAy/D,GAA4B1gE,EAAI62C,KAAK,CAAE/O,EAAG,MAAOC,EAAG,OAAQK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,yBAA2B,OAC3I5mC,KAAA0/D,GAA8B3gE,EAAI62C,KAAK,CAAE/O,EAAG,MAAOC,EAAG,OAAQK,iBAAkB,OAAQk4B,YAAa,MAAOz4B,KAAM,uBAAyB,UAC3I5mC,KAAA2/D,GAA8B5gE,EAAI62C,KAAK,CAAE/O,EAAG,QAASC,EAAG,OAAQK,iBAAkB,OAAQk4B,YAAa,MAAOO,UAAW,qBAAsBh5B,KAAM,uBAAyB,QAC9K5mC,KAAA6/D,GAA8B9gE,EAAI4nC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,OAAQC,OAAQ,MAAOH,EAAG,KAAMC,EAAG,OAAQF,KAAM7mC,EAAY+H,qBACvI9H,KAAA8/D,GAA+B/gE,EAAI4nC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,OAAQC,OAAQ,MAAOH,EAAG,KAAMC,EAAG,OAAQF,KAAM7mC,EAAY+H,qBACxI9H,KAAA+/D,GAA+BhhE,EAAI4nC,KAAK,CAAEQ,iBAAkB,OAAQH,OAAQ,MAAOH,EAAG,KAAMC,EAAG,OAAQF,KAAM,uBAC7G5mC,KAAAggE,GAA+BjhE,EAAI4nC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,MAAOC,OAAQ,MAAOF,EAAG,OAAQF,KAAM7mC,EAAYgI,gBAC9H/H,KAAAigE,GAAgClhE,EAAI4nC,KAAK,CAAEQ,iBAAkB,OAAQH,OAAQ,MAAOH,EAAG,KAAMC,EAAG,OAAQF,KAAM,uBAC9G5mC,KAAAkgE,GAAgCnhE,EAAI4nC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,MAAOC,OAAQ,MAAOF,EAAG,OAAQF,KAAM7mC,EAAYgI,gBAC/H/H,KAAAmgE,GAAyBphE,EAAIy4C,KAAK,CAAE4oB,aAAc,OAAQ9qE,OAAQ,QAClE0K,KAAAqgE,GAAyBthE,EAAIy4C,KAAK,CAAE4oB,aAAc,SAAU9qE,OAAQ,QACpE0K,KAAAsgE,GAAyBvhE,EAAIy4C,KAAK,CAAE4oB,aAAc,MAAO9qE,OAAQ,QACjE0K,KAAAugE,GAAgCxhE,EAAIyhE,eAAe,CAAEC,GAAI,aAAcC,cAAe,kBAAoB1gE,KAAKmgE,GAAQngE,KAAKqgE,GAAQrgE,KAAKsgE,IACzItgE,KAAA2gE,GAAwB5hE,EAAI6hE,KAAK,GAAI5gE,KAAKugE,IAC1CvgE,KAAA4nC,EAAsB7oC,EAAImoC,IAAI,CAAE5oC,MAAO,qBAAqByB,EAAYqH,2DAA4D2/B,MAAO,OAAQC,OAAQ,OAAQob,QAAS,OAASpiD,KAAKwmC,EAAe,IAAMxmC,KAAKymC,EAAe4b,oBAAqB,QACxQriD,KAAK2gE,GACL3gE,KAAKgiD,GACLhiD,KAAKiiD,GACLjiD,KAAKkiD,GACLliD,KAAK6+D,GACL7+D,KAAKi/D,GACLj/D,KAAKk/D,GACLl/D,KAAK8+D,GACL9+D,KAAKm/D,GACLn/D,KAAKo/D,GACLp/D,KAAKs/D,GACLt/D,KAAKu/D,GACLv/D,KAAKw/D,GACLx/D,KAAKy/D,GACLz/D,KAAK0/D,GACL1/D,KAAK2/D,GACL3/D,KAAK6/D,GACL7/D,KAAK8/D,GACL9/D,KAAK+/D,GACL//D,KAAKigE,GACLjgE,KAAKggE,GACLhgE,KAAKkgE,IAGUlgE,KAAA6nC,UAAyBnpC,EAAKgL,IAAI,CAAEo+B,MAAO,GAAIxpC,MAAO,mDAAqD0B,KAAK4nC,GAK/H,IAAK,IAAIz5C,EAAY,EAAGA,GAAK,EAAGA,IAC/B6R,KAAKiiD,GAAOnlD,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYkI,MAAO4+B,EAAI14C,EAAI6R,KAAKwmC,EAAe,EAAK,EAAGM,EAAG,EAAGC,MAAO,EAAGC,OAAQhnC,KAAKymC,KAE9H,IAAK,IAAIt4C,EAAY,EAAGA,GAAK,EAAGA,GAAK,EACpC6R,KAAKkiD,GAAUplD,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYmI,UAAW2+B,EAAI14C,EAAI6R,KAAKwmC,EAAe,EAAK,EAAGM,EAAG,EAAGC,MAAO,EAAGC,OAAQhnC,KAAKymC,KAGrIzmC,KAAK6gE,GAAiBjC,EAIhB/kE,cAAc0e,EAAqBuoD,EAAuBtoD,EAAsBuoD,GACtF/gE,KAAK+/D,GAAaliE,aAAa,QAAS,GAAKjP,KAAKyB,IAAI2P,KAAKwmC,EAAcjuB,GAAevY,KAAKwmC,EAAe,KAC5GxmC,KAAKggE,GAAaniE,aAAa,IAAK,GAAKjP,KAAKyB,IAAI2P,KAAKwmC,EAAcs6B,GAAiB9gE,KAAKwmC,EAAe,KAC1GxmC,KAAKigE,GAAcpiE,aAAa,QAAS,GAAKjP,KAAKyB,IAAI2P,KAAKwmC,EAAchuB,GAAgBxY,KAAKwmC,EAAe,KAC9GxmC,KAAKkgE,GAAcriE,aAAa,IAAK,GAAKjP,KAAKyB,IAAI2P,KAAKwmC,EAAcu6B,GAAkB/gE,KAAKwmC,EAAe,KAGtG3sC,SACN,MAAMs5D,EAAwB3hD,GACtB5iB,KAAKsgB,IAAI,GAAI,EAAKsC,EAAQ,IAAOxR,KAAKymC,EAAgB,GAAK,GAGnE,IAAIu6B,EAAoB,EACpBC,EAA4B,EAC5BC,GAA0B,EAC1Bz5B,EAAe,GACf05B,EAAqB,CAAC,GAAI,GAAI,IAClC,IAAK,IAAIhzE,EAAY,EAAGA,EAAI,GAAIA,IAAK,CAEpC,IAAIizE,GAAwBphE,KAAK6gE,GAAeQ,iBAAiB3vE,MACjE0vE,EAAgBA,EAAe,GAAKA,EAAe,GAAMA,EAAe,EACxE,IAAIE,GAA2BthE,KAAK6gE,GAAeU,uBAAuB7vE,MAC1E4vE,EAAmBA,EAAkB,GAAKA,EAAkB,GAAM,GAAKA,EAAkB,IAAM,GAC/F,IAAIE,GAA4BxhE,KAAK6gE,GAAeY,qBAAqB/vE,MACrEgwE,GAA+B1hE,KAAK6gE,GAAec,2BAA2BjwE,MAC9E6xB,EAAqB,EAAJp1B,EAAU,GAC3B+yB,EAAoB,EAAI,KACxBqC,GAAUi+C,EAEbtgD,EAAY,GAAK,MAAQqC,EAAS,EAAIi+C,GAAoBJ,GAAgB,EAAIA,IAEtE79C,EAASm+C,IAEjBxgD,EAAY,IAA2C,IAApCqC,EAAS,EAAIm+C,GAA6B,KAAQJ,EAAkB,MAAQ,EAAIA,KAI3F,GAALnzE,IACHs5C,GAAQ,OAAShuC,EAAa05D,EAAqBjyC,IAAc,KAI9D+/C,EAAoBC,IACnBA,GAAkB,IACrBC,EAASD,IAAmB,KAAOznE,EAAatL,EAAI6R,KAAKwmC,EAAe,IAAM,IAAM/sC,EAAa05D,EAAqBjyC,IAAc,KAErIigD,EAASF,IAAsB,KAAOxnE,EAAatL,EAAI6R,KAAKwmC,EAAe,IAAM,IAAM/sC,EAAa05D,EAAqBjyC,IAAc,KAE9G,GAArB+/C,GAA6C,GAAlBC,GAA4C,GAArBD,KACrDjhE,KAAK8+D,GAAUjhE,aAAa,KAAMpE,EAAatL,EAAI6R,KAAKwmC,EAAe,KACvExmC,KAAK8+D,GAAUjhE,aAAa,KAAMpE,EAAa05D,EAAqBjyC,MAE5C,GAArB+/C,IACHjhE,KAAKm/D,GAAUthE,aAAa,KAAMpE,EAAatL,EAAI6R,KAAKwmC,EAAe,KACvExmC,KAAKm/D,GAAUthE,aAAa,KAAMpE,EAAa05D,EAAqBjyC,MAGrEggD,EAAiBD,GAGD,GAAbD,GAA+B,GAAb9/C,GACrBumB,GAAQ,KACR05B,EAASF,IAAsB,OAE/Bx5B,GAAQ,KACR05B,EAASF,IAAsB,MAEhCx5B,GAAQhuC,EAAatL,EAAI6R,KAAKwmC,EAAe,IAAM,IAAM/sC,EAAa05D,EAAqBjyC,IAAc,IACzGigD,EAASF,IAAsBxnE,EAAatL,EAAI6R,KAAKwmC,EAAe,IAAM,IAAM/sC,EAAa05D,EAAqBjyC,IAAc,IAChI8/C,EAAY9/C,EAGa,GAArB+/C,GAA2B9yE,GAA2B,GAAtBuzE,EAA2B,GAC9DT,IAEwB,GAArBA,GAA2B9yE,GAAwB,GAAnBqzE,EAAwB,GAC3DP,IAIF,MAAM5N,EAAqBF,EAAqB6N,GAC5CA,EAAY,IACfv5B,GAAQ,MAAQznC,KAAKwmC,EAAe,GAAK,IAAM/sC,EAAa45D,GAAc,IAC1E8N,EAASF,IAAsB,MAAQjhE,KAAKwmC,EAAe,GAAK,IAAM/sC,EAAa45D,GAAc,KAGlGrzD,KAAK6+D,GAAYhhE,aAAa,IAAKsjE,EAAS,IAC5CnhE,KAAKi/D,GAAUphE,aAAa,IAAKsjE,EAAS,IAC1CnhE,KAAKk/D,GAAYrhE,aAAa,IAAKsjE,EAAS,IAC5CnhE,KAAKgiD,GAAMnkD,aAAa,IAAK4pC,EAAO,KAAOznC,KAAKwmC,EAAe,IAAM/sC,EAAa45D,GAAc,MAAQrzD,KAAKwmC,EAAe,IAAM/sC,EAAauG,KAAKymC,GAAiB,QAAUhtC,EAAauG,KAAKymC,GAAiB,cAIvMm7B,GAkGZ/nE,YAAoBysC,EAA4Bod,GAA5B1jD,KAAAsmC,EAAAA,EAA4BtmC,KAAA0jD,GAAAA,EAhGxC1jD,KAAA6hE,cAA+B,IAAIlD,GAAc3+D,MAEzCA,KAAA4jD,GAAiC9E,GAAO,CAAExgD,MAAO,cAAexJ,KAAM,WAEtEkL,KAAA8hE,iBAAqC7iB,GAAM,CAAEtjC,MAAO,cAAerd,MAAO,uCAAwCxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAK,KAAMxd,MAAO,IAAK6tD,KAAM,MACxKv/C,KAAA+hE,gBAAoC9iB,GAAM,CAAEtjC,MAAO,aAAcrd,MAAO,uCAAwCxJ,KAAM,QAASzE,IAAK,OAAQ6e,IAAK,QAASxd,MAAO,OAAQ6tD,KAAM,QAC/Kv/C,KAAA2hE,2BAA+C1iB,GAAM,CAAEtjC,MAAO,uBAAwBrd,MAAO,wCAAyCxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAK,MAAOxd,MAAO,IAAK6tD,KAAM,SAC7Lv/C,KAAAyhE,qBAAyCxiB,GAAM,CAAEtjC,MAAO,oBAAqBrd,MAAO,wCAAyCxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAK,IAAKxd,MAAO,IAAK6tD,KAAM,SAClLv/C,KAAAuhE,uBAA2CtiB,GAAM,CAAEtjC,MAAO,mBAAoBrd,MAAO,wCAAyCxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAK,KAAMxd,MAAO,KAAM6tD,KAAM,MACrLv/C,KAAAqhE,iBAAqCpiB,GAAM,CAAEtjC,MAAO,gBAAiBrd,MAAO,wCAAyCxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAK,KAAMxd,MAAO,KAAM6tD,KAAM,MAC5Kv/C,KAAAgiE,iBAAqC/iB,GAAM,CAAEtjC,MAAO,cAAerd,MAAO,uCAAwCxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAK,IAAKxd,MAAO,IAAK6tD,KAAM,SAU/Kv/C,KAAAiiE,sBAAgC,EAChCjiE,KAAAkiE,oBAA8B,EAC9BliE,KAAAmiE,uBAAiC,EACjCniE,KAAAoiE,qBAA+B,EAEtBpiE,KAAA4/C,GAAmCd,GAAO,CAAEhX,MAAO,iBACnD9nC,KAAA6/C,GAAiCf,GAAO,CAAEhX,MAAO,aAAcxpC,MAAO,cAAgB,QACtF0B,KAAAqiE,GAAkCvjB,GAAO,CAAExgD,MAAO,cAAgB,SAEnE0B,KAAA6nC,UAA4Bn+B,GAAI,CAAEo+B,MAAO,qBAAsBxpC,MAAO,iBACrF0gD,GAAG,mBACHt1C,GAAI,CAAEpL,MAAO,qHACZ0B,KAAK4jD,IAENl6C,GAAI,CAAEpL,MAAO,qFACZ0B,KAAK6hE,cAAch6B,WAEpBn+B,GAAI,CAAEpL,MAAO,uHACZoL,GAAI,CAAEpL,MAAO,6DAA6DyB,EAAYwH,gBACrF,IAEDmC,GAAI,CAAEpL,MAAO,8DAA8DyB,EAAY2H,kBACtF,SAEDgC,GAAI,CAAEpL,MAAO,4DAA4DyB,EAAY8H,eACpF,WAGF6B,GAAI,CAAEpL,MAAO,uHACZoL,GAAI,CAAEpL,MAAO,6DAA6DyB,EAAYwH,gBACrF,cAEDmC,GAAI,CAAEpL,MAAO,mCACZ0B,KAAK2hE,4BAENj4D,GAAI,CAAEpL,MAAO,iCACZ0B,KAAKyhE,uBAIP/3D,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,6DAA6DyB,EAAYwH,gBACrF,UAEDmC,GAAI,CAAEpL,MAAO,mCACZ0B,KAAKuhE,wBAEN73D,GAAI,CAAEpL,MAAO,iCACZ0B,KAAKqhE,mBAGP33D,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,8DAA8DyB,EAAYwH,gBACtF,gBAEDvH,KAAK8hE,kBAENp4D,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,8DAA8DyB,EAAYwH,gBACtF,eAEDvH,KAAK+hE,iBAENr4D,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,8DAA8DyB,EAAYwH,gBACtF,gBAEDvH,KAAKgiE,kBAENt4D,GAAI,CAAEpL,MAAO,+EACZ0B,KAAK6/C,GACL7/C,KAAKqiE,IAENriE,KAAK4/C,IA2CE5/C,KAAAsiE,GAAgB,KACvBtiE,KAAKiiE,wBACDjiE,KAAKiiE,uBAAyB,IACjCjiE,KAAKkiE,qBAAuB,KAEzBliE,KAAKsmC,EAAKnmC,KAAKoY,YAAcvY,KAAKkiE,sBACrCliE,KAAKkiE,oBAAsBliE,KAAKsmC,EAAKnmC,KAAKoY,YAC1CvY,KAAKiiE,sBAAwB,IAG9BjiE,KAAKmiE,yBACDniE,KAAKmiE,wBAA0B,IAClCniE,KAAKoiE,sBAAwB,KAE1BpiE,KAAKsmC,EAAKnmC,KAAKqY,aAAexY,KAAKoiE,uBACtCpiE,KAAKoiE,qBAAuBpiE,KAAKsmC,EAAKnmC,KAAKqY,aAC3CxY,KAAKmiE,uBAAyB,IAG/BniE,KAAK6hE,cAAcU,cAAcviE,KAAKsmC,EAAKnmC,KAAKoY,YAAavY,KAAKkiE,oBAAqBliE,KAAKsmC,EAAKnmC,KAAKqY,aAAcxY,KAAKoiE,sBAEzH3hD,OAAO+hD,sBAAsBxiE,KAAKsiE,KAG3BtiE,KAAA6jD,GAAc,KACjB7jD,KAAKsmC,EAAKzN,MAAM7L,SACnBhtB,KAAK0jD,GAAYI,KACjB9jD,KAAK+jD,qBAEL/jD,KAAKsmC,EAAKzN,MAAM5I,YAChBjwB,KAAK0jD,GAAYM,KACjBhkD,KAAK+jD,qBAkBC/jD,KAAA4zD,GAAa,MACf5zD,KAAKyhE,qBAAqB/vE,OAASsO,KAAK2hE,2BAA2BjwE,QACvEsO,KAAKyhE,qBAAqBzhB,oBAAoB,QAAShgD,KAAKyiE,IAC5DziE,KAAKyhE,qBAAqB/vE,MAAQsO,KAAK2hE,2BAA2BjwE,MAClEsO,KAAKyhE,qBAAqBx3B,iBAAiB,QAASjqC,KAAKyiE,KAE1DziE,KAAK6hE,cAAcrf,SACnBxiD,KAAK0iE,MAIE1iE,KAAAyiE,GAAgC,MAClCziE,KAAKyhE,qBAAqB/vE,OAASsO,KAAK2hE,2BAA2BjwE,QACvEsO,KAAK2hE,2BAA2B3hB,oBAAoB,QAAShgD,KAAK4zD,IAClE5zD,KAAK2hE,2BAA2BjwE,MAAQsO,KAAKyhE,qBAAqB/vE,MAClEsO,KAAK2hE,2BAA2B13B,iBAAiB,QAASjqC,KAAK4zD,KAEhE5zD,KAAK6hE,cAAcrf,SACnBxiD,KAAK0iE,MAGE1iE,KAAA8/C,GAAS,KAEhB9/C,KAAKqhE,iBAAiB3vE,MAAQ,GAAKsO,KAAK2iE,mBACxC3iE,KAAKuhE,uBAAuB7vE,MAAQ,GAAKsO,KAAK4iE,yBAC9C5iE,KAAKyhE,qBAAqB/vE,MAAQ,GAAKsO,KAAK6iE,uBAC5C7iE,KAAK2hE,2BAA2BjwE,MAAQ,GAAKsO,KAAK8iE,6BAClD9iE,KAAK8hE,iBAAiBpwE,MAAQ,GAAKsO,KAAK+iE,mBACxC/iE,KAAK+hE,gBAAgBrwE,MAAQ,GAAKsO,KAAKgjE,kBACvChjE,KAAKgiE,iBAAiBtwE,MAAQ,GAAKsO,KAAKijE,mBAExCjjE,KAAK0iE,KACL1iE,KAAKsmC,EAAKoa,OAAS,MAGb1gD,KAAA+/C,QAAU,KAChB//C,KAAK6/C,GAAYG,oBAAoB,QAAShgD,KAAKigD,IACnDjgD,KAAKqiE,GAAariB,oBAAoB,QAAShgD,KAAKkjE,IACpDljE,KAAK4/C,GAAcI,oBAAoB,QAAShgD,KAAK8/C,IACrD9/C,KAAK6nC,UAAUmY,oBAAoB,UAAWhgD,KAAKikD,gBACnDjkD,KAAK8hE,iBAAiB9hB,oBAAoB,QAAShgD,KAAK4zD,IACxD5zD,KAAK+hE,gBAAgB/hB,oBAAoB,QAAShgD,KAAK4zD,IACvD5zD,KAAKyhE,qBAAqBzhB,oBAAoB,QAAShgD,KAAKyiE,IAC5DziE,KAAKqhE,iBAAiBrhB,oBAAoB,QAAShgD,KAAK4zD,IACxD5zD,KAAKuhE,uBAAuBvhB,oBAAoB,QAAShgD,KAAK4zD,IAC9D5zD,KAAK2hE,2BAA2B3hB,oBAAoB,QAAShgD,KAAK4zD,IAClE5zD,KAAKgiE,iBAAiBhiB,oBAAoB,QAAShgD,KAAK4zD,IAExD5zD,KAAK4jD,GAAY5D,oBAAoB,QAAShgD,KAAK6jD,KAG7C7jD,KAAAikD,eAAkBzb,IACe,UAAzBA,EAAM6X,OAAQpiD,SAAwC,IAAjBuqC,EAAM8X,SACxDtgD,KAAKigD,KAEe,IAAjBzX,EAAM8X,UACTtgD,KAAK6jD,KACLrb,EAAMQ,mBAIAhpC,KAAAkjE,GAAiB,KAEW,MAA/BljE,KAAKqhE,iBAAiB3vE,OAA+C,QAA9BsO,KAAK+hE,gBAAgBrwE,OAAkD,KAA/BsO,KAAK8hE,iBAAiBpwE,OAAmD,KAAnCsO,KAAKyhE,qBAAqB/vE,OAAqD,MAArCsO,KAAKuhE,uBAAuB7vE,OAA0D,KAAzCsO,KAAK2hE,2BAA2BjwE,OAA+C,KAA/BsO,KAAKgiE,iBAAiBtwE,QAErRsO,KAAKqhE,iBAAiB3vE,MAAQ,KAC9BsO,KAAK+hE,gBAAgBrwE,MAAQ,OAC7BsO,KAAK8hE,iBAAiBpwE,MAAQ,IAC9BsO,KAAKyhE,qBAAqB/vE,MAAQ,IAClCsO,KAAKuhE,uBAAuB7vE,MAAQ,KACpCsO,KAAK2hE,2BAA2BjwE,MAAQ,IACxCsO,KAAKgiE,iBAAiBtwE,MAAQ,IAE9BsO,KAAK4zD,OAIC5zD,KAAA0iE,GAAiB,KAExB1iE,KAAKsmC,EAAKqa,OAAO,IAAIhQ,GAAsB3wC,KAAKsmC,GAC7CtmC,KAAKqhE,iBAAiB3vE,MAAQ,IAAMsO,KAAKqhE,iBAAiB3vE,MAAQ,IAAOsO,KAAKqhE,iBAAiB3vE,MAAQ,GACvGsO,KAAKuhE,uBAAuB7vE,MAAQ,IAAMsO,KAAKuhE,uBAAuB7vE,MAAQ,GAAM,IAAMsO,KAAKuhE,uBAAuB7vE,MAAQ,IAAM,IACrIsO,KAAKyhE,qBAAqB/vE,OAC1BsO,KAAK2hE,2BAA2BjwE,OAChCsO,KAAK+hE,gBAAgBrwE,OACrBsO,KAAK8hE,iBAAiBpwE,OACtBsO,KAAKgiE,iBAAiBtwE,QACrB,IAGIsO,KAAAigD,GAAe,KACtBjgD,KAAK0iE,KACL1iE,KAAKsmC,EAAKoa,OAAS,MAnLnB1gD,KAAK6/C,GAAY5V,iBAAiB,QAASjqC,KAAKigD,IAChDjgD,KAAKqiE,GAAap4B,iBAAiB,QAASjqC,KAAKkjE,IACjDljE,KAAK4/C,GAAc3V,iBAAiB,QAASjqC,KAAK8/C,IAClD9/C,KAAK6nC,UAAUoC,iBAAiB,UAAWjqC,KAAKikD,gBAEhDjkD,KAAKqhE,iBAAiB3vE,MAAQ,IAAMsO,KAAKsmC,EAAKnmC,KAAKkY,WAAa,EAAgC,GAA5BrY,KAAKsmC,EAAKnmC,KAAKkY,WAAkB,EAAIrY,KAAKsmC,EAAKnmC,KAAKkY,YACxHrY,KAAKuhE,uBAAuB7vE,MAAQ,IAAMsO,KAAKsmC,EAAKnmC,KAAKiY,iBAAmB,EAAsC,GAAlCpY,KAAKsmC,EAAKnmC,KAAKiY,iBAAwB,GAA6C,IAAvCpY,KAAKsmC,EAAKnmC,KAAKiY,iBAAmB,IAC/JpY,KAAKyhE,qBAAqB/vE,MAAQ,GAAKsO,KAAKsmC,EAAKnmC,KAAKgY,eACtDnY,KAAK2hE,2BAA2BjwE,MAAQ,GAAKsO,KAAKsmC,EAAKnmC,KAAK+X,qBAC5DlY,KAAK8hE,iBAAiBpwE,MAAQ,GAAKsO,KAAKsmC,EAAKnmC,KAAK6X,WAClDhY,KAAK+hE,gBAAgBrwE,MAAQ,GAAKsO,KAAKsmC,EAAKnmC,KAAK8X,UACjDjY,KAAKgiE,iBAAiBtwE,MAAQ,GAAKsO,KAAKsmC,EAAKnmC,KAAKmY,WAElDtY,KAAK2iE,oBAAsB3iE,KAAKqhE,iBAAiB3vE,MACjDsO,KAAK4iE,0BAA4B5iE,KAAKuhE,uBAAuB7vE,MAC7DsO,KAAK6iE,wBAA0B7iE,KAAKyhE,qBAAqB/vE,MACzDsO,KAAK8iE,8BAAgC9iE,KAAK2hE,2BAA2BjwE,MACrEsO,KAAK+iE,oBAAsB/iE,KAAK8hE,iBAAiBpwE,MACjDsO,KAAKgjE,mBAAqBhjE,KAAK+hE,gBAAgBrwE,MAC/CsO,KAAKijE,oBAAsBjjE,KAAKgiE,iBAAiBtwE,MAEjDsO,KAAK8hE,iBAAiB73B,iBAAiB,QAASjqC,KAAK4zD,IACrD5zD,KAAK+hE,gBAAgB93B,iBAAiB,QAASjqC,KAAK4zD,IACpD5zD,KAAKqhE,iBAAiBp3B,iBAAiB,QAASjqC,KAAK4zD,IACrD5zD,KAAKyhE,qBAAqBx3B,iBAAiB,QAASjqC,KAAKyiE,IACzDziE,KAAKuhE,uBAAuBt3B,iBAAiB,QAASjqC,KAAK4zD,IAC3D5zD,KAAK2hE,2BAA2B13B,iBAAiB,QAASjqC,KAAK4zD,IAC/D5zD,KAAKgiE,iBAAiB/3B,iBAAiB,QAASjqC,KAAK4zD,IAErD5zD,KAAK4jD,GAAY3Z,iBAAiB,QAASjqC,KAAK6jD,IAEhDpjC,OAAO+hD,sBAAsBxiE,KAAKsiE,IAElCtiE,KAAK+jD,mBAEL/jD,KAAK6hE,cAAcrf,SAsCb3oD,mBACFmG,KAAKsmC,EAAKzN,MAAM7L,SACnBhtB,KAAK4jD,GAAY/2C,UAAUsqB,OAAO,cAClCn3B,KAAK4jD,GAAY/2C,UAAUC,IAAI,eAC/B9M,KAAK4jD,GAAYjoC,MAAQ,gBACzB3b,KAAK4jD,GAAYM,UAAY,UAE7BlkD,KAAK4jD,GAAY/2C,UAAUsqB,OAAO,eAClCn3B,KAAK4jD,GAAY/2C,UAAUC,IAAI,cAC/B9M,KAAK4jD,GAAYjoC,MAAQ,eACzB3b,KAAK4jD,GAAYM,UAAY,eCrVnBif,GAgCZtpE,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EA/BHtmC,KAAAymC,EAAwB,GACxBzmC,KAAAojE,GAAqB,EACrBpjE,KAAAqjE,GAAmB,EACnBrjE,KAAAsjE,GAAoB,EAEpBtjE,KAAAujE,GAAwBxkE,EAAI0oC,KAAK,CAAEb,KAAM,OAAQU,OAAQvnC,EAAY6H,WAAY2/B,eAAgB,IACjGvnC,KAAAwjE,GAA6BzkE,EAAI0oC,KAAK,CAAEb,KAAM7mC,EAAYsH,aAAc8/B,iBAAkB,SAE1FnnC,KAAA4nC,EAAsB7oC,EAAImoC,IAAI,CAAE5oC,MAAO,qBAAqByB,EAAYqH,6DAA8D4/B,OAAQhnC,KAAKymC,GACnKzmC,KAAKujE,GACLvjE,KAAKwjE,IAGUxjE,KAAA6nC,UAAyBnpC,EAAKgL,IAAI,CAAEpL,MAAO,oDAAsD0B,KAAK4nC,GAE9G5nC,KAAAyjE,GAAoB,GACpBzjE,KAAA2yD,GAA6B,KAC7B3yD,KAAA0jE,GAAkB,CAAEr2C,UAAW,EAAGs2C,MAAO,GACzC3jE,KAAA+nC,EAAkB,EAElB/nC,KAAA4jE,GAAwB,EACxB5jE,KAAA6jE,GAAwB,EACxB7jE,KAAA8jE,IAA6B,EAC7B9jE,KAAA+jE,IAAiC,EACjC/jE,KAAAgoC,GAAsB,EACtBhoC,KAAAioC,GAAsB,EACtBjoC,KAAAgkE,IAA8B,EAC9BhkE,KAAAikE,IAA6B,EAC7BjkE,KAAAkkE,GAA4B,EAC5BlkE,KAAAmkE,IAA6B,EAgD7BnkE,KAAA4oC,GAAkBJ,IACrBxoC,KAAKioC,IACTjoC,KAAKioC,GAAa,EAClBjoC,KAAK6oC,OAGE7oC,KAAA8oC,GAAiBN,IACnBxoC,KAAKioC,IACVjoC,KAAKioC,GAAa,EAClBjoC,KAAK6oC,OAGE7oC,KAAA+oC,GAAqBP,IAC5BA,EAAMQ,iBACNhpC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,KAE7DrpC,KAAKokE,KACLpkE,KAAK6oC,KACL7oC,KAAK0pC,GAAgBlB,IAGdxoC,KAAAwpC,GAAqBhB,IAE5BxoC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,EAAUS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,KAEvDrpC,KAAKokE,KACLpkE,KAAK6oC,KAEL7oC,KAAK4jE,GAAgBp7B,EAAMiB,QAAQ,GAAGN,QACtCnpC,KAAK6jE,GAAgBr7B,EAAMiB,QAAQ,GAAGkZ,QACtC3iD,KAAK+jE,IAAwB,EAC7B/jE,KAAK8jE,IAAoB,GAGlB9jE,KAAA0pC,GAAmBlB,IAC1B,MAAMS,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,KAE7DrpC,KAAK2pC,MAGE3pC,KAAA4pC,GAAmBpB,IAC1B,IAAKxoC,KAAKgoC,EAAY,OACtB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,EAAUS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,KAGlDrpC,KAAK+jE,IAA0B/jE,KAAK8jE,KACpCl1E,KAAKC,IAAI25C,EAAMiB,QAAQ,GAAGkZ,QAAU3iD,KAAK6jE,IAAiB,GAC7D7jE,KAAK8jE,IAAoB,EACfl1E,KAAKC,IAAI25C,EAAMiB,QAAQ,GAAGN,QAAUnpC,KAAK4jE,IAAiB,KACpE5jE,KAAK+jE,IAAwB,IAI3B/jE,KAAK+jE,KACR/jE,KAAK2pC,KACLnB,EAAMQ,mBA0DAhpC,KAAAqkE,GAAsB77B,IAC7BA,EAAMQ,iBACDhpC,KAAK8jE,KACT9jE,KAAK2pC,KACL3pC,KAAKioC,GAAa,EAClBjoC,KAAK6pC,GAAoBrB,GACzBxoC,KAAK6oC,MAGN7oC,KAAKgoC,GAAa,GAGXhoC,KAAA6pC,GAAuBrB,IACV,MAAhBxoC,KAAK2yD,IAAiB3yD,KAAKsmC,EAAKqa,OAAO3gD,KAAK2yD,IAChD3yD,KAAK2yD,GAAU,KACf3yD,KAAKgoC,GAAa,EAClBhoC,KAAKokE,KACLpkE,KAAKskE,MAiCEtkE,KAAAukE,GAAmB,KAC1BvkE,KAAKskE,MAvNLtkE,KAAKokE,KACLpkE,KAAKskE,KACLtkE,KAAKsmC,EAAKwD,SAAS06B,MAAMxkE,KAAKukE,IAE9BvkE,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK+oC,IAClDhsC,SAASktC,iBAAiB,YAAajqC,KAAK0pC,IAC5C3sC,SAASktC,iBAAiB,UAAWjqC,KAAK6pC,IAC1C7pC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK4oC,IAClD5oC,KAAK6nC,UAAUoC,iBAAiB,WAAYjqC,KAAK8oC,IAEjD9oC,KAAK6nC,UAAUoC,iBAAiB,aAAcjqC,KAAKwpC,IACnDxpC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK4pC,IAClD5pC,KAAK6nC,UAAUoC,iBAAiB,WAAYjqC,KAAKqkE,IACjDrkE,KAAK6nC,UAAUoC,iBAAiB,cAAejqC,KAAKqkE,IAG7CxqE,KACP,MAAMkiB,EAAc/b,KAAK+nC,EAAU/nC,KAAKyjE,GACxCzjE,KAAK0jE,GAAQr2C,SAAWtR,EAEpBA,EAAM/b,KAAKsmC,EAAKnmC,KAAK+a,UAAY,KAAQa,EAAM/b,KAAKsmC,EAAKnmC,KAAK+a,UAAYlb,KAAKsmC,EAAKnmC,KAAKgb,WAAa,IACrGY,EAAM/b,KAAKsmC,EAAKnmC,KAAK+a,UAAwC,GAA5Blb,KAAKsmC,EAAKnmC,KAAKgb,WACnDnb,KAAK0jE,GAAQC,KAAO3jE,KAAKojE,GAEzBpjE,KAAK0jE,GAAQC,KAAO3jE,KAAKqjE,GAG1BrjE,KAAK0jE,GAAQC,KAAO3jE,KAAKsjE,GAInBzpE,GAAe4qE,GACtB,IAAIl1D,EAAgB3gB,KAAKmb,MAAM06D,EAASzkE,KAAKsmC,EAAKnmC,KAAKgb,WAAa,GAChE3L,EAAcD,EAAQvP,KAAKsmC,EAAKnmC,KAAKgb,WASzC,OARI5L,EAAQ,IACXC,GAAOD,EACPA,EAAQ,GAELC,EAAMxP,KAAKsmC,EAAKnmC,KAAKob,WACxBhM,GAASC,EAAMxP,KAAKsmC,EAAKnmC,KAAKob,SAC9B/L,EAAMxP,KAAKsmC,EAAKnmC,KAAKob,UAEf,CAAEhM,MAAOA,EAAOnhB,OAAQohB,EAAMD,GAoE9B1V,KACP,GAAImG,KAAKgoC,EAAY,CACpB,IAAI0J,EAAmB1xC,KAAKsmC,EAAKnmC,KAAK+a,UAClC0hC,EAAiB58C,KAAKsmC,EAAKnmC,KAAK+a,UAAYlb,KAAKsmC,EAAKnmC,KAAKgb,WAC3C,MAAhBnb,KAAK2yD,IAAmB3yD,KAAKsmC,EAAKutB,cAAc7zD,KAAK2yD,MACxDjhB,EAAW1xC,KAAK2yD,GAAQjhB,SACxBkL,EAASlL,EAAW1xC,KAAK2yD,GAAQpe,WAGlC,MAAMx4B,EAAc/b,KAAK+nC,EAAU/nC,KAAKyjE,GACxC,IAAIl0D,EACAC,EACA9C,EACJ,GAAI1M,KAAK0jE,GAAQC,MAAQ3jE,KAAKojE,GAC7B7zD,EAAQmiC,EAAW9iD,KAAKmb,MAAMgS,EAAM/b,KAAK0jE,GAAQr2C,UACjD7d,EAAMotC,EACFrtC,EAAQ,IAAGA,EAAQ,GACnBA,GAASvP,KAAKsmC,EAAKnmC,KAAKob,WAAUhM,EAAQvP,KAAKsmC,EAAKnmC,KAAKob,UACzDhM,GAASC,EACZD,EAAQC,EAAM,EACJD,EAAQC,IAClB9C,EAAO6C,EACPA,EAAQC,EACRA,EAAM9C,GAEP1M,KAAK2yD,GAAU,IAAIre,GAAWt0C,KAAKsmC,EAAMoL,EAAUkL,EAASlL,EAAUniC,EAAOC,EAAMD,QAC7E,GAAIvP,KAAK0jE,GAAQC,MAAQ3jE,KAAKqjE,GACpC9zD,EAAQmiC,EACRliC,EAAMotC,EAAShuD,KAAKmb,MAAMgS,EAAM/b,KAAK0jE,GAAQr2C,UACzC7d,EAAM,IAAGA,EAAM,GACfA,GAAOxP,KAAKsmC,EAAKnmC,KAAKob,WAAU/L,EAAMxP,KAAKsmC,EAAKnmC,KAAKob,UACrD/L,GAAOD,EACVC,EAAMD,EAAQ,EACJC,EAAMD,IAChB7C,EAAO6C,EACPA,EAAQC,EACRA,EAAM9C,GAEP1M,KAAK2yD,GAAU,IAAIre,GAAWt0C,KAAKsmC,EAAMoL,EAAUkL,EAASlL,EAAUniC,EAAOC,EAAMD,QAC7E,GAAIvP,KAAK0jE,GAAQC,MAAQ3jE,KAAKsjE,GAAW,CAC/C,MAAMoB,EAAuB1kE,KAAK2kE,GAAe5oD,GACjD/b,KAAK2yD,GAAU,IAAIre,GAAWt0C,KAAKsmC,EAAMoL,EAAUkL,EAASlL,EAAUgzB,EAAUn1D,MAAOm1D,EAAUt2E,QAElG4R,KAAKsmC,EAAKzN,MAAM+rC,eACZ5kE,KAAKsmC,EAAKu+B,YACb,IAAIjzB,GAAiB5xC,KAAKsmC,EAAMtmC,KAAKsmC,EAAKlmC,QAASxR,KAAKsU,MAAMlD,KAAKsmC,EAAKzN,MAAMvxB,WAAW,GAE1FtH,KAAKsmC,EAAK4sB,qBAAqBlzD,KAAK2yD,SAEpC3yD,KAAKokE,KACLpkE,KAAK6oC,KAwBChvC,KACP,MAAMirE,EAAyB9kE,KAAKioC,IAAejoC,KAAKgoC,EAGxD,GAFAhoC,KAAKwjE,GAAWllE,MAAMisC,WAAau6B,EAAgB,UAAY,SAE3DA,EAAe,CAClB,MAAMC,EAAiB/kE,KAAKymC,EAAgB,EAE5C,IAAIu+B,EAA0BhlE,KAAKsmC,EAAKnmC,KAAc,UAAIH,KAAKyjE,GAC3DwB,GAAyBjlE,KAAKsmC,EAAKnmC,KAAK+a,UAAYlb,KAAKsmC,EAAKnmC,KAAKgb,YAAcnb,KAAKyjE,GAC1F,GAAIzjE,KAAK0jE,GAAQC,MAAQ3jE,KAAKojE,GAC7B6B,EAAiBjlE,KAAKsmC,EAAKnmC,KAAc,UAAIH,KAAKyjE,GAAqB,EAATsB,OACxD,GAAI/kE,KAAK0jE,GAAQC,MAAQ3jE,KAAKqjE,GACpC2B,GAAkBhlE,KAAKsmC,EAAKnmC,KAAK+a,UAAYlb,KAAKsmC,EAAKnmC,KAAKgb,YAAcnb,KAAKyjE,GAAqB,EAATsB,MACrF,CACN,MAAML,EAAuB1kE,KAAK2kE,GAAe3kE,KAAK0jE,GAAQr2C,UAC9D23C,EAAkBN,EAAe,MAAI1kE,KAAKyjE,GAC1CwB,GAAiBP,EAAUn1D,MAAQm1D,EAAUt2E,QAAU4R,KAAKyjE,GAG7DzjE,KAAKwjE,GAAW3lE,aAAa,IAC5B,KAAKmnE,EAAiBD,SACjBE,EAAgBF,SAChBA,EAAS,KAAKA,EAAS,WAAoBE,EAAgBF,KAAU/kE,KAAKymC,EAAgB,OAC1Fu+B,EAAiBD,KAAU/kE,KAAKymC,EAAgB,OAChDs+B,EAAS,KAAKA,EAAS,WAAoBC,EAAiBD,UAU5DlrE,KACPmG,KAAKyjE,GAAYzjE,KAAKsmC,EAAKqC,cAE3B,MAAMo8B,EAAiB/kE,KAAKymC,EAAgB,EACtCvrB,EAAqBlb,KAAKsmC,EAAKnmC,KAAc,UAAIH,KAAKyjE,GACtDyB,GAAoBllE,KAAKsmC,EAAKnmC,KAAK+a,UAAYlb,KAAKsmC,EAAKnmC,KAAKgb,YAAcnb,KAAKyjE,GAEvF,GAAIzjE,KAAKkkE,IAAqBlkE,KAAKsmC,EAAKnmC,KAAKob,UAAYvb,KAAKmkE,IAAqBnkE,KAAKyjE,GAAW,CAClGzjE,KAAKkkE,GAAoBlkE,KAAKsmC,EAAKnmC,KAAKob,SACxCvb,KAAKmkE,GAAoBnkE,KAAKyjE,GAC9B,MAAM0B,EAAcnlE,KAAKyjE,GAAYzjE,KAAKsmC,EAAKnmC,KAAKob,SACpDvb,KAAK6nC,UAAUvpC,MAAMyoC,MAAQo+B,EAAc,KAC3CnlE,KAAK4nC,EAAK/pC,aAAa,QAASsnE,EAAc,IAG3CnlE,KAAKgkE,IAAsB9oD,GAAalb,KAAKikE,IAAqBiB,IACrEllE,KAAKgkE,GAAqB9oD,EAC1Blb,KAAKikE,GAAoBiB,EACzBllE,KAAKujE,GAAM1lE,aAAa,IACvB,KAAKqd,EAAY6pD,SACZG,EAAWH,SACXA,EAAS,KAAKA,EAAS,WAAoBG,EAAWH,KAAU/kE,KAAKymC,EAAgB,OACrFvrB,EAAY6pD,KAAU/kE,KAAKymC,EAAgB,OAC3Cs+B,EAAS,KAAKA,EAAS,WAAoB7pD,EAAY6pD,UAK9D/kE,KAAK6oC,MC/RP,MAAMiW,OAAEA,GAAMp1C,IAAEA,GAAGq1C,KAAEA,GAAIC,GAAEA,GAAEC,MAAEA,GAAKC,GAAEA,GAAEC,OAAEA,GAAMC,OAAEA,IAAW1gD,QAEhD0mE,GA4BZvrE,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EA3BHtmC,KAAAw/C,GAAkCP,GAAM,CAAE3gD,MAAO,gCAAiCxJ,KAAM,SAAUyqD,KAAM,OAAQ7tD,MAAO,MACvHsO,KAAAy/C,GAA+CN,GAAO,CAAE7gD,MAAO,gBAC/E8gD,GAAO,CAAE1tD,MAAO,YAAc,+BAC9B0tD,GAAO,CAAE1tD,MAAO,cAAgB,mCAEhBsO,KAAA4/C,GAAmCd,GAAO,CAAEhX,MAAO,iBACnD9nC,KAAA6/C,GAAiCf,GAAO,CAAEhX,MAAO,aAAcxpC,MAAO,cAAgB,QAEvF0B,KAAA6nC,UAA4Bn+B,GAAI,CAAEo+B,MAAO,qBAAsBxpC,MAAO,iBACrF0gD,GAAG,uBACHt1C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEpL,MAAO,sBACZ,iBACA4gD,KACAH,GAAK,CAAEzgD,MAAO,8BAA8ByB,EAAYyH,kBAAoB,0CAE7ExH,KAAKw/C,IAEN91C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,gBAAkB0B,KAAKy/C,KAE/D/1C,GAAI,CAAEpL,MAAO,+EACZ0B,KAAK6/C,IAEN7/C,KAAK4/C,IAqBE5/C,KAAA8/C,GAAS,KAChB9/C,KAAKsmC,EAAKqF,QAGJ3rC,KAAA+/C,QAAU,KAChB//C,KAAK6/C,GAAYG,oBAAoB,QAAShgD,KAAKigD,IACnDjgD,KAAK4/C,GAAcI,oBAAoB,QAAShgD,KAAK8/C,IACrD9/C,KAAKw/C,GAAcQ,oBAAoB,OAAQolB,GAAwBjlB,IACvEngD,KAAK6nC,UAAUmY,oBAAoB,UAAWhgD,KAAKogD,KAG5CpgD,KAAAogD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQpiD,SAAwC,IAAjBuqC,EAAM8X,SACxDtgD,KAAKigD,MAYCjgD,KAAAigD,GAAe,KACtBx/B,OAAOC,aAAa6/B,QAAQ,4BAA6BvgD,KAAKy/C,GAA0B/tD,OACxFsO,KAAKsmC,EAAKoa,OAAS,KACnB1gD,KAAKsmC,EAAKqa,OAAO,IAAInI,GAAwBx4C,KAAKsmC,GAAOtmC,KAAKw/C,GAAc9tD,MAAOsO,KAAKy/C,GAA0B/tD,QAAQ,IA7C1HsO,KAAKw/C,GAAcnvD,KAAQ2P,KAAKsmC,EAAKnmC,KAAKmb,YAAe,GACzDtb,KAAKw/C,GAActwC,IAAMlP,KAAKsmC,EAAKnmC,KAAKmb,YAAc,GAEtD,MAAMulC,EAA8BpgC,OAAOC,aAAaC,QAAQ,6BAC5C,MAAhBkgC,IACH7gD,KAAKy/C,GAA0B/tD,MAAQmvD,GAGxC7gD,KAAKw/C,GAAcL,SACnB2B,YAAW,IAAM9gD,KAAKw/C,GAAcuB,SAAS,KAE7C/gD,KAAK6/C,GAAY5V,iBAAiB,QAASjqC,KAAKigD,IAChDjgD,KAAK4/C,GAAc3V,iBAAiB,QAASjqC,KAAK8/C,IAClD9/C,KAAKw/C,GAAcvV,iBAAiB,OAAQm7B,GAAwBjlB,IACpEngD,KAAK6nC,UAAUoC,iBAAiB,UAAWjqC,KAAKogD,IAoBzCvmD,UAAuB2uC,GAC9B,MAAMyW,EAA4CzW,EAAM6X,OACxD,IAAI3uD,GAAiButD,EAAMvtD,MAC3BA,EAAQ9C,KAAKmb,MAAMrY,EAAQ3D,EAAOqF,cAAgBrF,EAAOqF,aACzD1B,EAAQ9C,KAAKmb,MAAc,IAARrY,GAAe,IAClCutD,EAAMvtD,MAAQ9C,KAAKsgB,KAAK+vC,EAAM5uD,IAAKzB,KAAKyB,KAAK4uD,EAAM/vC,IAAKxd,IAAU,UCrEvD2zE,GA6BZxrE,YAAoBysC,EAA4Bg/B,GAA5BtlE,KAAAsmC,EAAAA,EAA4BtmC,KAAAslE,GAAAA,EA5B/BtlE,KAAAulE,GAA6B,GAC7BvlE,KAAAwlE,GAAmC,GACnCxlE,KAAAylE,GAAsC/mE,EAAKgL,IAAI,CAAEpL,MAAO,qBAAqByB,EAAYgI,wKAAyK29D,MAAS3lE,EAAYwH,aAAe,IACvSvH,KAAA2lE,GAA8B,IAAInS,GAAS90D,EAAKugD,MAAM,CAAE3gD,MAAO,UAAUyB,EAAYwH,kCAAkCxH,EAAYgI,oHAAqH29D,MAAS3lE,EAAYwH,aAAe,IAAKvH,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAImP,GAAkBh+C,KAAKsmC,EAAM6L,EAAUtD,KAE9X7uC,KAAA4lE,GAAsClnE,EAAKygD,OAAO,CAAE7gD,MAAO,sEAE3EI,EAAK0gD,OAAO,CAAE1tD,MAAO,UAAY,aACjCgN,EAAK0gD,OAAO,CAAE1tD,MAAO,SAAW,mBAChCgN,EAAK0gD,OAAO,CAAE1tD,MAAO,WAAa,qBAClCgN,EAAK0gD,OAAO,CAAE1tD,MAAO,WAAa,gBAClCgN,EAAK0gD,OAAO,CAAE1tD,MAAO,WAAa,gBAClCgN,EAAK0gD,OAAO,CAAE1tD,MAAO,aAAe,wBACpCgN,EAAK0gD,OAAO,CAAE1tD,MAAO,aAAe,wBAGrBsO,KAAA6nC,UAAyBnpC,EAAKgL,IAAI,CAAEo+B,MAAO,aAAcxpC,MAAO,mCAAqCvQ,EAAOqL,gBAAkB,OAAS4G,KAAKylE,GAAqBzlE,KAAK2lE,GAAkB1mB,MAAOj/C,KAAK4lE,IAE5M5lE,KAAAymC,EAAwB,IACxBzmC,KAAA6lE,GAAgC,EAChC7lE,KAAA8lE,GAAiC,EACjC9lE,KAAA+lE,GAAiC,EACjC/lE,KAAAgmE,GAA+B,EAC/BhmE,KAAAimE,IAAkC,EAClCjmE,KAAAkmE,GAAkC,EAClClmE,KAAAmmE,IAAgC,EAChCnmE,KAAAomE,IAAqC,EAmBrCpmE,KAAAqmE,GAA6B,KACpC,IAAIx3B,EAAW7uC,KAAK2lE,GAAkB1mB,MAAMvtD,MACxCm9C,EAASzgD,OAAS,KACrB4R,KAAK2lE,GAAkB1mB,MAAMvtD,MAAQm9C,EAASvvB,UAAU,EAAG,MAIrDtf,KAAAsmE,GAA4B99B,IACnCA,EAAMia,mBAGCziD,KAAAumE,GAAwB,KAC/BvmE,KAAK2lE,GAAkB1mB,MAAM3gD,MAAMC,YAAY,UAAW,QAC1DyB,KAAKylE,GAAoBnnE,MAAMC,YAAY,UAAW,SAG/CyB,KAAAwmE,GAAyBh+B,IAChCxoC,KAAKmmE,IAAwBnmE,KAAKomE,GAClCpmE,KAAKymE,GAAkCj+B,IAIhCxoC,KAAA0mE,GAAuB,KAC9B1mE,KAAKmmE,IAAuB,EAC5BnmE,KAAKylE,GAAoBnnE,MAAMC,YAAY,UAAW,SAI/CyB,KAAAymE,GAAqCj+B,IAE5CxoC,KAAKomE,GAA4BpmE,KAAKmmE,GAEtCnmE,KAAKkmE,GAA0Bt3E,KAAKsU,MAAMtU,KAAKyB,IAAI2P,KAAK6lE,GAAuBj3E,KAAKsgB,IAAI,EAAGsgD,SAASxvD,KAAK4lE,GAAiBtnE,MAAMiC,iBAAiB,QAAUP,KAAKimE,MAChKjmE,KAAKsmC,EAAK2X,kBAAoBj+C,KAAKkmE,GAEnClmE,KAAKylE,GAAoBnnE,MAAMC,YAAY,UAAW,IAGjDyB,KAAKkmE,GAA0BlmE,KAAKsmC,EAAKnmC,KAAKe,mBAAqBlB,KAAKsmC,EAAKnmC,KAAKe,mBAAqBnT,EAAOmK,sBAC9G8H,KAAKkmE,IAA2BlmE,KAAKsmC,EAAKnmC,KAAKe,mBAAqBlB,KAAKkmE,GAA0BlmE,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,mBAAqBpB,KAAKsmC,EAAKnmC,KAAKiB,mBAAqBrT,EAAOqK,sBACrN4H,KAAKkmE,IAA2BlmE,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,mBAAqBpB,KAAKsmC,EAAKnmC,KAAK4a,iBAAmBhtB,EAAOuK,mBACpJ0H,KAAK4lE,GAAiBe,QAAQ,GAAGnc,UAAW,EAG5CxqD,KAAK4lE,GAAiBe,QAAQ,GAAGnc,UAAW,EAIT,GAAhCxqD,KAAKkmE,IAAgClmE,KAAKkmE,IAA2BlmE,KAAKsmC,EAAKnmC,KAAKe,mBAAqBlB,KAAKkmE,IAA2BlmE,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAC9LpB,KAAK4lE,GAAiBe,QAAQ,GAAGnc,UAAW,EAG5CxqD,KAAK4lE,GAAiBe,QAAQ,GAAGnc,UAAW,EAEzCxqD,KAAKkmE,IAA2BlmE,KAAKsmC,EAAKnmC,KAAKe,kBAAoB,GAAKlB,KAAKkmE,IAA2BlmE,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAoB,GAAKpB,KAAKkmE,IAA2BlmE,KAAKsmC,EAAKnmC,KAAK0b,kBAAoB,EACzP7b,KAAK4lE,GAAiBe,QAAQ,GAAGnc,UAAW,EAG5CxqD,KAAK4lE,GAAiBe,QAAQ,GAAGnc,UAAW,EAIL,GAApCxqD,KAAKsmC,EAAKnmC,KAAKe,mBAA0D,GAAhClB,KAAKkmE,GACjDlmE,KAAK4lE,GAAiBe,QAAQ,GAAGnc,UAAW,EAG5CxqD,KAAK4lE,GAAiBe,QAAQ,GAAGnc,UAAW,GAItCxqD,KAAA4mE,GAA2Bp+B,IAOlC,OANAxoC,KAAKylE,GAAoBnnE,MAAMC,YAAY,UAAW,QACtDyB,KAAK4lE,GAAiBtnE,MAAMC,YAAY,UAAW,QACnDyB,KAAKmmE,IAAuB,EAC5B39B,EAAMia,kBAGEziD,KAAK4lE,GAAiBl0E,OAC7B,IAAK,SACJsO,KAAK2lE,GAAkB1mB,MAAM3gD,MAAMC,YAAY,UAAW,IAC1DyB,KAAK2lE,GAAkB1mB,MAAM3gD,MAAMC,YAAY,YAAayB,KAAKylE,GAAoBnnE,MAAMiC,iBAAiB,cAChE,MAAxCP,KAAKylE,GAAoBr/D,YAC5BpG,KAAK2lE,GAAkB1mB,MAAMvtD,MAAQsO,KAAKylE,GAAoBr/D,YAG9DpG,KAAK2lE,GAAkB1mB,MAAMvtD,MAAQ,GAEtCsO,KAAK2lE,GAAkB1mB,MAAME,SAC7B,MACD,IAAK,QACJn/C,KAAKsmC,EAAKqa,OAAO,IAAI/P,GAAmB5wC,KAAKsmC,EAAMtmC,KAAKkmE,GAAyBlmE,KAAKkmE,GAA0B,IAChH,MACD,IAAK,UACJlmE,KAAKsmC,EAAKqa,OAAO,IAAI/P,GAAmB5wC,KAAKsmC,EAAMtmC,KAAKkmE,GAAyBlmE,KAAKkmE,GAA0B,IAChH,MACD,IAAK,UACJlmE,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKkmE,IAAyBtuD,OAAS5X,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKkmE,IAAyBtuD,MACrH5X,KAAKwiD,SACL,MACD,IAAK,UAAW,CAEf,IAAIqkB,GAAsB,EAC1B,IAAK,IAAIzmE,EAAkB,EAAGA,EAAUJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmBhB,IACxGJ,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASwX,QAAUxX,GAAWJ,KAAKkmE,MAC9DW,GAAa,EACbzmE,EAAUJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,mBAG9D,GAAIylE,EACH,IAAK,IAAIzmE,EAAkB,EAAGA,EAAUJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmBhB,IAC5GJ,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASwX,MAASxX,GAAWJ,KAAKkmE,QAI3D,IAAK,IAAI9lE,EAAkB,EAAGA,EAAUJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmBhB,IAC5GJ,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASwX,OAAQ,EAG3C5X,KAAKwiD,SACL,MAED,IAAK,YAAa,CAEjB,IAGIskB,EAHA51B,EAA+BlxC,KAAKsmC,EAAKnmC,KAAKe,kBAC9CiwC,EAA+BnxC,KAAKsmC,EAAKnmC,KAAKiB,kBAC9CgwC,EAA6BpxC,KAAKsmC,EAAKnmC,KAAK4a,gBAG5C/a,KAAKkmE,GAA0BlmE,KAAKsmC,EAAKnmC,KAAKe,mBACjDgwC,IACA41B,EAAY51B,GAEJlxC,KAAKkmE,GAA0BlmE,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,mBACzF+vC,IACA21B,EAAY51B,EAAuBC,IAGnCC,IACA01B,EAAY51B,EAAuBC,EAAuBC,GAG3DpxC,KAAKsmC,EAAKqa,OAAO,IAAI1P,GAAmBjxC,KAAKsmC,EAAM4K,EAAsBC,EAAsBC,IAE/F,IAAK,IAAIhxC,EAAkB0mE,EAAY,EAAG1mE,EAAUJ,KAAKkmE,GAA0B,EAAG9lE,IACrFJ,KAAKsmC,EAAKqa,OAAO,IAAI/P,GAAmB5wC,KAAKsmC,EAAMlmC,EAAU,EAAGA,IAAU,GAE3E,MAED,IAAK,YAAa,CACjB,IAAI8wC,EAA+BlxC,KAAKsmC,EAAKnmC,KAAKe,kBAC9CiwC,EAA+BnxC,KAAKsmC,EAAKnmC,KAAKiB,kBAC9CgwC,EAA6BpxC,KAAKsmC,EAAKnmC,KAAK4a,gBAChD,GAAI/a,KAAKkmE,GAA0BlmE,KAAKsmC,EAAKnmC,KAAKe,kBAAmB,CAEpEgwC,IACA,IAAK,IAAI9wC,EAAkBJ,KAAKkmE,GAAyB9lE,EAAU8wC,EAAsB9wC,IACxFJ,KAAKsmC,EAAKqa,OAAO,IAAI/P,GAAmB5wC,KAAKsmC,EAAMlmC,EAASA,EAAU,GAAIA,GAAWJ,KAAKkmE,SAGvF,GAAIlmE,KAAKkmE,IAA2BlmE,KAAKsmC,EAAKnmC,KAAKe,mBAAqBlB,KAAKkmE,GAA0BlmE,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmB,CAEhL+vC,IACA,IAAK,IAAI/wC,EAAkBJ,KAAKkmE,GAAyB9lE,EAAU8wC,EAAuBC,EAAsB/wC,IAC/GJ,KAAKsmC,EAAKqa,OAAO,IAAI/P,GAAmB5wC,KAAKsmC,EAAMlmC,EAASA,EAAU,GAAIA,GAAWJ,KAAKkmE,QAGvF,CAEJ90B,IACA,IAAK,IAAIhxC,EAAkBJ,KAAKkmE,GAAyB9lE,EAAU8wC,EAAuBC,EAAuBC,EAAoBhxC,IACpIJ,KAAKsmC,EAAKqa,OAAO,IAAI/P,GAAmB5wC,KAAKsmC,EAAMlmC,EAASA,EAAU,GAAIA,GAAWJ,KAAKkmE,IAG5FlmE,KAAKsmC,EAAKqa,OAAO,IAAI1P,GAAmBjxC,KAAKsmC,EAAM4K,EAAsBC,EAAsBC,IAAqB,GACpH,OAGiC,UAA/BpxC,KAAK4lE,GAAiBl0E,OACzBsO,KAAKslE,GAAQyB,eAEd/mE,KAAK4lE,GAAiBoB,eAAiB,GAGhChnE,KAAAinE,GAAYz+B,IAEnB,MAAMx5C,EAAQgR,KAAKulE,GAAS5wD,QAAwB6zB,EAAM6X,QAC1D,IAAc,GAAVrxD,EAAa,OACEw5C,EAAMW,QAAUnpC,KAAKulE,GAAS,GAAGr8B,wBAAwBG,KACjE,KACVrpC,KAAKsmC,EAAKnmC,KAAK4X,SAAS/oB,GAAO4oB,OAAS5X,KAAKsmC,EAAKnmC,KAAK4X,SAAS/oB,GAAO4oB,OAExE5X,KAAKsmC,EAAKwD,SAASC,WAGZ/pC,KAAAknE,GAAgB1+B,IACvB,MAAMx5C,EAAQgR,KAAKulE,GAAS5wD,QAAwB6zB,EAAM6X,QAC1D,IAAc,GAAVrxD,EAMH,YALKgR,KAAKmmE,IAAwB39B,EAAM6X,QAAUrgD,KAAKylE,IAAuBj9B,EAAM6X,QAAUrgD,KAAK4lE,KAClG5lE,KAAKylE,GAAoBnnE,MAAMC,YAAY,UAAW,QACtDyB,KAAK4lE,GAAiBtnE,MAAMC,YAAY,UAAW,QACnDyB,KAAK4lE,GAAiBtnE,MAAMC,YAAY,QAAS,SAKnD,GADmBiqC,EAAMW,QAAUnpC,KAAKulE,GAAS,GAAGr8B,wBAAwBG,MAChE,IACX,IAAKrpC,KAAKmmE,GAAsB,CAE/BnmE,KAAK4lE,GAAiBtnE,MAAMC,YAAY,UAAW,IACnD,IAAIyoC,EAAShnC,KAAKsmC,EAAK6gC,mBACvBnnE,KAAKylE,GAAoBnnE,MAAMC,YAAY,YAAa,oBAAsByoC,EAAS,EAAIA,EAASh4C,GAAS,OAElE,IAAvCgR,KAAKsmC,EAAKnmC,KAAK4X,SAAS/oB,GAAO2C,MAClCqO,KAAKylE,GAAoBr/D,YAAcpG,KAAKsmC,EAAKnmC,KAAK4X,SAAS/oB,GAAO2C,KACtEqO,KAAKylE,GAAoBnnE,MAAMC,YAAY,UAAW,MAGlDvP,EAAQgR,KAAKsmC,EAAKnmC,KAAKe,kBAC1BlB,KAAKylE,GAAoBr/D,YAAc,UAAYpX,EAAQ,GACjDA,EAAQgR,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBACpEpB,KAAKylE,GAAoBr/D,YAAc,UAAYpX,EAAQgR,KAAKsmC,EAAKnmC,KAAKe,kBAAoB,GAG9FlB,KAAKylE,GAAoBr/D,YAAc,QAAUpX,EAAQgR,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAoB,GAGhIpB,KAAKylE,GAAoBnnE,MAAMC,YAAY,UAAW,SAGvDyB,KAAK4lE,GAAiBtnE,MAAMukD,IAAO90D,EAAOqL,gBAAkB,EAAIpK,EAAQgR,KAAKimE,GAA0B,KACvGjmE,KAAK4lE,GAAiBtnE,MAAMC,YAAY,QAAS,cAI7CyB,KAAKmmE,KACTnmE,KAAKylE,GAAoBnnE,MAAMC,YAAY,UAAW,QACtDyB,KAAK4lE,GAAiBtnE,MAAMC,YAAY,UAAW,QACnDyB,KAAK4lE,GAAiBtnE,MAAMC,YAAY,QAAS,SAK5CyB,KAAAonE,GAAiB5+B,IACnBxoC,KAAKmmE,KACTnmE,KAAKylE,GAAoBnnE,MAAMC,YAAY,UAAW,QACtDyB,KAAK4lE,GAAiBtnE,MAAMC,YAAY,QAAS,SArQlDyB,KAAK6nC,UAAUoC,iBAAiB,QAASjqC,KAAKinE,IAC9CjnE,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAKknE,IAClDlnE,KAAK6nC,UAAUoC,iBAAiB,aAAcjqC,KAAKonE,IAEnDpnE,KAAK4lE,GAAiBoB,eAAiB,EACvChnE,KAAK4lE,GAAiB37B,iBAAiB,SAAUjqC,KAAK4mE,IACtD5mE,KAAK4lE,GAAiB37B,iBAAiB,YAAajqC,KAAKymE,IACzDzmE,KAAK4lE,GAAiB37B,iBAAiB,OAAQjqC,KAAK0mE,IACpD1mE,KAAK4lE,GAAiB37B,iBAAiB,QAASjqC,KAAKwmE,IAErDxmE,KAAK2lE,GAAkB1mB,MAAMhV,iBAAiB,SAAUjqC,KAAKumE,IAC7DvmE,KAAK2lE,GAAkB1mB,MAAMhV,iBAAiB,OAAQjqC,KAAKumE,IAC3DvmE,KAAK2lE,GAAkB1mB,MAAMhV,iBAAiB,YAAajqC,KAAKsmE,IAChEtmE,KAAK2lE,GAAkB1mB,MAAMhV,iBAAiB,QAASjqC,KAAKqmE,IA4PtDxsE,QAAQ2uC,GACd,OAAQA,EAAM8X,SACb,KAAK,GAKL,KAAK,GACJtgD,KAAKmmE,IAAuB,EAE5BnmE,KAAKylE,GAAoBnnE,MAAMC,YAAY,UAAW,SAOlD1E,SACN,IAAKmG,KAAKsmC,EAAK+gC,oBAAqB,OAEpC,MAAMnqB,EAAgBl9C,KAAKsmC,EAAK6gC,mBAEhC,GAAInnE,KAAK6lE,IAAyB7lE,KAAKsmC,EAAKnmC,KAAK0b,kBAAmB,CACnE,IAAK,IAAIirB,EAAY9mC,KAAK6lE,GAAuB/+B,EAAI9mC,KAAKsmC,EAAKnmC,KAAK0b,kBAAmBirB,IAAK,CAE3F,MAAMwgC,EAAmC5oE,EAAKgL,IAAI,CAAEo+B,MAAO,6BAA8BxpC,MAAO,gRAC1FipE,EAA6B7oE,EAAKgL,IAAI,CAAEo+B,MAAO,cAAexpC,MAAO,qGAErEkpE,EAAgC9oE,EAAKgL,IAAI,CAAEpL,MAAO,wHAA0H,CACjLipE,EACAD,IAEDtnE,KAAK6nC,UAAU/qC,YAAY0qE,GAC3BxnE,KAAKulE,GAASz+B,GAAK0gC,EACnBxnE,KAAKwlE,GAAe1+B,GAAKwgC,EAG1B,IAAK,IAAIxgC,EAAY9mC,KAAKsmC,EAAKnmC,KAAK0b,kBAAmBirB,EAAI9mC,KAAK6lE,GAAuB/+B,IACtF9mC,KAAK6nC,UAAU96B,YAAY/M,KAAKulE,GAASz+B,IAG1C9mC,KAAKulE,GAASn3E,OAAS4R,KAAKsmC,EAAKnmC,KAAK0b,kBAGvC,IAAK,IAAIirB,EAAY,EAAGA,EAAI9mC,KAAKsmC,EAAKnmC,KAAK0b,kBAAmBirB,IACzD9mC,KAAKsmC,EAAKnmC,KAAK4X,SAAS+uB,GAAGlvB,OAC9B5X,KAAKulE,GAASz+B,GAAG0c,SAAS,GAAG32C,UAAUC,IAAI,SAEvCg6B,EAAI9mC,KAAKsmC,EAAKnmC,KAAKe,kBACtBlB,KAAKwlE,GAAe1+B,GAAGxoC,MAAMonE,MAAQ3lE,EAAYwI,sBACzCu+B,EAAI9mC,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAC9DpB,KAAKwlE,GAAe1+B,GAAGxoC,MAAMonE,MAAQ3lE,EAAY0I,sBAEjDzI,KAAKwlE,GAAe1+B,GAAGxoC,MAAMonE,MAAQ3lE,EAAY4I,sBAGlD3I,KAAKulE,GAASz+B,GAAG0c,SAAS,GAAG32C,UAAUsqB,OAAO,SAE1C2P,EAAI9mC,KAAKsmC,EAAKnmC,KAAKe,kBACtBlB,KAAKwlE,GAAe1+B,GAAGxoC,MAAMonE,MAAQ3lE,EAAYuI,mBACzCw+B,EAAI9mC,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAC9DpB,KAAKwlE,GAAe1+B,GAAGxoC,MAAMonE,MAAQ3lE,EAAYyI,mBAEjDxI,KAAKwlE,GAAe1+B,GAAGxoC,MAAMonE,MAAQ3lE,EAAY2I,kBAIpD,GAAI1I,KAAKimE,IAA0B/oB,GAAiBl9C,KAAK6lE,IAAyB7lE,KAAKsmC,EAAKnmC,KAAK0b,kBAChG,IAAK,IAAIirB,EAAY,EAAGA,EAAI9mC,KAAKsmC,EAAKnmC,KAAK0b,kBAAmBirB,IAC7D9mC,KAAKulE,GAASz+B,GAAGxoC,MAAMmpE,WAAcvqB,EAAgB,IAAM,EAAK,KAChEl9C,KAAKulE,GAASz+B,GAAGxoC,MAAMopE,cAAiBxqB,EAAgB,IAAM,EAAK,KAIrE,GAAIl9C,KAAKgmE,IAAwBhmE,KAAKsmC,EAAKnmC,KAAK4a,iBAAmB/a,KAAK6lE,IAAyB7lE,KAAKsmC,EAAKnmC,KAAK0b,kBAC/G,IAAK,IAAIirB,EAAY,EAAGA,EAAI9mC,KAAKsmC,EAAKnmC,KAAK0b,kBAAmBirB,IACzDA,EAAI9mC,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBACzDpB,KAAKulE,GAASz+B,GAAG0c,SAAS,GAAG32C,UAAUsqB,OAAO,WAG9Cn3B,KAAKulE,GAASz+B,GAAG0c,SAAS,GAAG32C,UAAUC,IAAI,WAK9C,GAAI9M,KAAKgmE,IAAwBhmE,KAAKsmC,EAAKnmC,KAAK4a,iBAAmB/a,KAAK8lE,IAA0B9lE,KAAKsmC,EAAKnmC,KAAKe,mBAAqBlB,KAAK+lE,IAA0B/lE,KAAKsmC,EAAKnmC,KAAKiB,kBAAmB,CACtM,IAAK,IAAI0lC,EAAY,EAAGA,EAAI9mC,KAAKsmC,EAAKnmC,KAAK0b,kBAAmBirB,IAC7D,GAAIA,EAAI9mC,KAAKsmC,EAAKnmC,KAAKe,kBAAmB,CACzC,IAAIiO,EAAe23B,EAAI,EACvB9mC,KAAKwlE,GAAe1+B,GAAG1gC,YAAc+I,EAAM,GAC3CnP,KAAKwlE,GAAe1+B,GAAGxoC,MAAMqpE,SAAYx4D,GAAO,GAAM,WAAa,eAE/D,GAAI23B,EAAI9mC,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmB,CACjF,IAAI+N,EAAe23B,EAAI9mC,KAAKsmC,EAAKnmC,KAAKe,kBAAoB,EAC1DlB,KAAKwlE,GAAe1+B,GAAG1gC,YAAc+I,EAAM,GAC3CnP,KAAKwlE,GAAe1+B,GAAGxoC,MAAMqpE,SAAYx4D,GAAO,GAAM,WAAa,cAE/D,CACJ,IAAIA,EAAe23B,EAAI9mC,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAoB,EAC7FpB,KAAKwlE,GAAe1+B,GAAG1gC,YAAc+I,EAAM,GAC3CnP,KAAKwlE,GAAe1+B,GAAGxoC,MAAMqpE,SAAYx4D,GAAO,GAAM,WAAa,UAGrEnP,KAAK8lE,GAAyB9lE,KAAKsmC,EAAKnmC,KAAKe,kBAC7ClB,KAAK+lE,GAAyB/lE,KAAKsmC,EAAKnmC,KAAKiB,kBAC7CpB,KAAKgmE,GAAuBhmE,KAAKsmC,EAAKnmC,KAAK4a,gBAGxC/a,KAAKimE,IAA0B/oB,GAAiBl9C,KAAK6lE,IAAyB7lE,KAAKsmC,EAAKnmC,KAAK0b,oBAChG7b,KAAKimE,GAAyB/oB,EAC9Bl9C,KAAK6lE,GAAwB7lE,KAAKsmC,EAAKnmC,KAAK0b,kBAC5C7b,KAAKymC,EAAgB14C,EAAOqL,gBAAkB4G,KAAKsmC,EAAKnmC,KAAK0b,kBAAoBqhC,EACjFl9C,KAAKylE,GAAoBnnE,MAAMC,YAAY,UAAW,QACtDyB,KAAK6nC,UAAUvpC,MAAM0oC,OAAShnC,KAAKymC,EAAgB,KAE/CzmC,KAAKimE,GAAyB,IACjCjmE,KAAKylE,GAAoBnnE,MAAMC,YAAY,aAAc,QACzDyB,KAAK4lE,GAAiBtnE,MAAMC,YAAY,aAAc,QACtDyB,KAAK2lE,GAAkB1mB,MAAM3gD,MAAMC,YAAY,aAAc,SAGrDyB,KAAKimE,GAAyB,IACtCjmE,KAAKylE,GAAoBnnE,MAAMC,YAAY,aAAc,QACzDyB,KAAK4lE,GAAiBtnE,MAAMC,YAAY,aAAc,QACtDyB,KAAK2lE,GAAkB1mB,MAAM3gD,MAAMC,YAAY,aAAc,UAG7DyB,KAAKylE,GAAoBnnE,MAAMC,YAAY,aAAc,OACzDyB,KAAK4lE,GAAiBtnE,MAAMC,YAAY,aAAc,OACtDyB,KAAK2lE,GAAkB1mB,MAAM3gD,MAAMC,YAAY,aAAc,iBCzapDqpE,GA0BZ/tE,YAAoBysC,EAA4BuhC,GAA5B7nE,KAAAsmC,EAAAA,EAA4BtmC,KAAA6nE,GAAAA,EAzB/B7nE,KAAAwmC,EAAuB,GACvBxmC,KAAAymC,EAAwB,IACxBzmC,KAAA8nE,GAAuB,EACvB9nE,KAAA+nE,GAAuBh6E,EAAO6K,aAC9BoH,KAAAgoE,IAAyBhoE,KAAKymC,EAAgBzmC,KAAK8nE,IAAgB9nE,KAAK+nE,GACjF/nE,KAAAioE,GAAsBjoE,KAAKgoE,GAAgBhoE,KAAKsmC,EAAKi4B,cAAgBv+D,KAAK8nE,GACjE9nE,KAAAonC,EAA0BroC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAY+H,mBAAoB++B,EAAG,EAAGC,EAAG,EAAGC,MAAO/mC,KAAKwmC,EAAe,EAAGQ,OAAQhnC,KAAKioE,KAClIjoE,KAAAqnC,EAAmCtoC,EAAI4nC,KAAK,CAAEC,KAAM,OAAQU,OAAQvnC,EAAYsH,aAAckgC,eAAgB,EAAGJ,iBAAkB,OAAQN,EAAG,EAAGC,EAAG,EAAGC,MAAO/mC,KAAKwmC,EAAe,EAAGQ,OAAQhnC,KAAKioE,KAClMjoE,KAAAkoE,GAA+BnpE,EAAI0oC,KAAK,CAAEb,KAAM7mC,EAAYsH,aAAc8/B,iBAAkB,SAC5FnnC,KAAAmoE,GAAiCppE,EAAI0oC,KAAK,CAAEb,KAAM7mC,EAAYsH,aAAc8/B,iBAAkB,SAE9FnnC,KAAA4nC,EAAsB7oC,EAAImoC,IAAI,CAAE5oC,MAAO,8FAA+FyoC,MAAO/mC,KAAKwmC,EAAcQ,OAAQ,OAAQob,QAAS,UAAYpiD,KAAKymC,EAAe4b,oBAAqB,SAC/OriD,KAAA6nC,UAA4BnpC,EAAKgL,IAAI,CAAE+2D,GAAI,2BAA4BniE,MAAO,oFAAsF0B,KAAK4nC,GAGjL5nC,KAAAyhD,GAAkB,EAClBzhD,KAAAgoC,GAAsB,EACtBhoC,KAAAioC,GAAsB,EACtBjoC,KAAAkoC,IAAqB,EAGrBloC,KAAAooE,IAA8B,EAC9BpoE,KAAAqoE,IAA8B,EAC9BroE,KAAA2yD,GAA+B,KAoC/B3yD,KAAA4oC,GAAkBJ,IACrBxoC,KAAKioC,IACTjoC,KAAKioC,GAAa,EAClBjoC,KAAK6oC,OAGE7oC,KAAA8oC,GAAiBN,IACnBxoC,KAAKioC,IACVjoC,KAAKioC,GAAa,EAClBjoC,KAAK6oC,OAGE7oC,KAAA+oC,GAAqBP,IAC5BA,EAAMQ,iBACNhpC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAE3ClpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACpCzhD,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,UAAYJ,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,WACpGJ,KAAK6oC,KAED7oC,KAAKyhD,IAAWzhD,KAAKsoE,GAAatoE,KAAKioE,IAAcjoE,KAAKyhD,IAAWzhD,KAAKsoE,KAC7EtoE,KAAKkoC,IAAY,EACjBloC,KAAK2yD,GAAU,KACf3yD,KAAKupC,GAAavpC,KAAKyhD,MAIjBzhD,KAAAwpC,GAAqBhB,IAC5BA,EAAMQ,iBACNhpC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAE3ClpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACpCzhD,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,UAAYJ,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,WACpGJ,KAAK6oC,KAED7oC,KAAKyhD,IAAWzhD,KAAKsoE,GAAatoE,KAAKioE,IAAcjoE,KAAKyhD,IAAWzhD,KAAKsoE,KAC7EtoE,KAAKkoC,IAAY,EACjBloC,KAAK2yD,GAAU,KACf3yD,KAAKupC,GAAavpC,KAAKyhD,MAIjBzhD,KAAA0pC,GAAmBlB,IAC1B,MAAMS,EAA2BjpC,KAAK4nC,EAAKsB,wBAE3ClpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAK2pC,MAGE3pC,KAAA4pC,GAAmBpB,IAC1B,IAAKxoC,KAAKgoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2BjpC,KAAK4nC,EAAKsB,wBAE3ClpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAK2pC,MAmCE3pC,KAAA6pC,GAAuBrB,IAC9B,IAAKxoC,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,WAAaJ,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,UAAYJ,KAAKgoC,EACtH,GAAIhoC,KAAKkoC,GACY,MAAhBloC,KAAK2yD,IAAiB3yD,KAAKsmC,EAAKqa,OAAO3gD,KAAK2yD,QAC1C,CACN,MAAM4V,EAAgCvoE,KAAKsmC,EAAKutB,cAAc7zD,KAAK2yD,IAC7DxgB,EAAmBo2B,EAAuBvoE,KAAK2yD,GAASxgB,SAAWnyC,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASoX,OAC9GgxD,EAAwBxoE,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASoX,OAErExX,KAAKyhD,GAAUzhD,KAAKsoE,GAA+B,GAAlBtoE,KAAKioE,GACrCO,EAAgBxoE,KAAKsmC,EAAKy2B,oBAC7B/8D,KAAK2yD,GAAU,IAAIhe,GAAa30C,KAAKsmC,EAAM6L,EAAUq2B,EAAgB,GACrExoE,KAAKsmC,EAAKqa,OAAO3gD,KAAK2yD,GAAS4V,IAG5BC,EAAgB,IACnBxoE,KAAK2yD,GAAU,IAAIhe,GAAa30C,KAAKsmC,EAAM6L,EAAUq2B,EAAgB,GACrExoE,KAAKsmC,EAAKqa,OAAO3gD,KAAK2yD,GAAS4V,IAKnCvoE,KAAKgoC,GAAa,EAClBhoC,KAAKkoC,IAAY,EACjBloC,KAAK6oC,MAwBE7oC,KAAAukE,GAAmB,KAC1BvkE,KAAKsoE,GAAatoE,KAAKymC,EAAiBzmC,KAAKgoE,GAAgBhoE,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASoX,OACxGxX,KAAKskE,MAnLLtkE,KAAKsmC,EAAKwD,SAAS06B,MAAMxkE,KAAKukE,IAC9BvkE,KAAKukE,KAELvkE,KAAK4nC,EAAK9qC,YAAYkD,KAAKonC,GAG3B,IAAK,IAAIj5C,EAAY,EAAGA,GAAK6R,KAAK+nE,GAAc55E,IAC/C6R,KAAK4nC,EAAK9qC,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYkI,MAAO4+B,EAAG,EAAGC,EAAG34C,EAAI6R,KAAKgoE,GAAejhC,MAAO/mC,KAAKwmC,EAAcQ,OAAQhnC,KAAK8nE,MAGnI9nE,KAAK4nC,EAAK9qC,YAAYkD,KAAKqnC,GAC3BrnC,KAAK4nC,EAAK9qC,YAAYkD,KAAKkoE,IAC3BloE,KAAK4nC,EAAK9qC,YAAYkD,KAAKmoE,IAE3B,MAAMn+B,EAAqC,GAApBhqC,KAAKwmC,EAI5BxmC,KAAKkoE,GAAarqE,aAAa,IAAK,KAAKmsC,SAAmBA,EADjC,UACkEA,EADlE,UAE3BhqC,KAAKmoE,GAAetqE,aAAa,IAAK,KAAKmsC,KAAUhqC,KAAKymC,EAHtC,OAG+DuD,EAFxD,KAE+EhqC,KAAKymC,EAJ1F,QAIoHuD,EAF9G,KAEqIhqC,KAAKymC,EAJhJ,QAMrBzmC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK+oC,IAClDhsC,SAASktC,iBAAiB,YAAajqC,KAAK0pC,IAC5C3sC,SAASktC,iBAAiB,UAAWjqC,KAAK6pC,IAC1C7pC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK4oC,IAClD5oC,KAAK6nC,UAAUoC,iBAAiB,WAAYjqC,KAAK8oC,IAEjD9oC,KAAK6nC,UAAUoC,iBAAiB,aAAcjqC,KAAKwpC,IACnDxpC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK4pC,IAClD5pC,KAAK6nC,UAAUoC,iBAAiB,WAAYjqC,KAAK6pC,IACjD7pC,KAAK6nC,UAAUoC,iBAAiB,cAAejqC,KAAK6pC,IAmE7ChwC,KACP,IAAImG,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,WAAYJ,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAApG,CACA,GAAIJ,KAAKkoC,GAAW,CACnB,MAAMsgC,EAAwBxoE,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASoX,OAEnE26B,EADuCnyC,KAAKsmC,EAAKutB,cAAc7zD,KAAK2yD,IACnB3yD,KAAK2yD,GAASxgB,SAAWq2B,EAEhF,IAAIhxD,EAAiBgxD,EACrB,KAAOxoE,KAAKyhD,GAAUzhD,KAAKupC,GAAmC,IAArBvpC,KAAKgoE,IACzCxwD,EAASxX,KAAKsmC,EAAKy2B,mBACtBvlD,IACAxX,KAAKupC,IAAcvpC,KAAKgoE,GAK1B,KAAOhoE,KAAKyhD,GAAUzhD,KAAKupC,GAAkC,GAArBvpC,KAAKgoE,IACxCxwD,EAAS,GACZA,IACAxX,KAAKupC,IAAcvpC,KAAKgoE,GAM1BhoE,KAAK2yD,GAAU,IAAIhe,GAAa30C,KAAKsmC,EAAM6L,EAAU36B,GACrDxX,KAAKsmC,EAAK4sB,qBAAqBlzD,KAAK2yD,IAGjC3yD,KAAKioC,GAAYjoC,KAAK6oC,MA8BnBhvC,KAEP,IAAI4uE,GAA2B,EAC3BC,GAA6B,EAC7Bp+B,GAA+B,EAHJtqC,KAAKioC,IAAejoC,KAAKgoC,IAMnDhoC,KAAKyhD,GAAUzhD,KAAKsoE,GAAatoE,KAAKioE,GACzCQ,GAAkB,EACRzoE,KAAKyhD,GAAUzhD,KAAKsoE,GAC9BI,GAAoB,EAEpBp+B,GAAsB,GAIxBtqC,KAAKkoE,GAAa5pE,MAAMisC,WAAak+B,EAAkB,UAAY,SACnEzoE,KAAKmoE,GAAe7pE,MAAMisC,WAAam+B,EAAoB,UAAY,SACvE1oE,KAAKqnC,EAAiB/oC,MAAMisC,WAAaD,EAAsB,UAAY,SAQpEzwC,KAEPmG,KAAKioE,GAAcjoE,KAAKgoE,GAAgBhoE,KAAKsmC,EAAKi4B,cAAgBv+D,KAAK8nE,GAEvE9nE,KAAK4nC,EAAKtpC,MAAMisC,WAAcvqC,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,UAAYJ,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAAY,SAAW,UACjJJ,KAAKooE,IAAsBpoE,KAAKsoE,IAActoE,KAAKqoE,IAAsBroE,KAAKioE,KACjFjoE,KAAKooE,GAAqBpoE,KAAKsoE,GAC/BtoE,KAAKqoE,GAAqBroE,KAAKioE,GAC/BjoE,KAAKonC,EAAQvpC,aAAa,SAAU,GAAKmC,KAAKioE,IAC9CjoE,KAAKqnC,EAAiBxpC,aAAa,SAAU,GAAKmC,KAAKioE,IACvDjoE,KAAKonC,EAAQvpC,aAAa,IAAK,IAAMmC,KAAKsoE,GAAatoE,KAAKioE,KAC5DjoE,KAAKqnC,EAAiBxpC,aAAa,IAAK,IAAMmC,KAAKsoE,GAAatoE,KAAKioE,KAErEjoE,KAAK6nE,GAAOc,eAEb3oE,KAAK6oC,MCxNP,MAAM+/B,GAAN/uE,cACQmG,KAAA6oE,OAAiB,EACjB7oE,KAAA2lB,SAAwB,KACxB3lB,KAAA8oE,QAAuB,KACvB9oE,KAAA4lB,SAAwB,KACxB5lB,KAAAsP,MAAgB,EAChBtP,KAAAwe,YAAsB,EACtBxe,KAAA+oE,SAAmB,EACnB/oE,KAAAuP,MAAgB,EAChBvP,KAAAwP,IAAc,EACdxP,KAAAopB,KAAe,EACfppB,KAAAgpE,UAAoB,EACpBhpE,KAAAipE,aAAuB,EACvBjpE,KAAA2P,KAAkB,UAGbu5D,GA2FZrvE,YAAoBysC,EAA4B6iC,EAA+BC,GAA3DppE,KAAAsmC,EAAAA,EAA4BtmC,KAAAmpE,GAAAA,EAA+BnpE,KAAAopE,GAAAA,EA1FxEppE,KAAAqpE,aAAuB,EACvBrpE,KAAAspE,WAAqB,EACXtpE,KAAAupE,GAAwCxqE,EAAI+c,QAAQ,CAAE2kD,GAAI,8BAAgCzgE,KAAKopE,GAAYviC,EAAG,IAAKC,EAAG,IAAK0iC,aAAc,mBACzIxpE,KAAAypE,GAAwC1qE,EAAI+c,QAAQ,CAAE2kD,GAAI,8BAAgCzgE,KAAKopE,GAAYviC,EAAG,IAAKC,EAAG,IAAK0iC,aAAc,mBACzIxpE,KAAA0pE,GAAuC3qE,EAAI+c,QAAQ,CAAE2kD,GAAI,6BAA+BzgE,KAAKopE,GAAYviC,EAAG,IAAKC,EAAG,IAAK0iC,aAAc,mBACvIxpE,KAAA2pE,GAAiC5qE,EAAI4nC,KAAK,CAAEE,EAAG,IAAKC,EAAG,IAAKK,iBAAkB,OAAQP,KAAM,mCAAqC5mC,KAAKopE,GAAa,MAC5JppE,KAAA4pE,GAAmC7qE,EAAImoC,MAC9BlnC,KAAA6pE,GAA+B9qE,EAAI4nC,KAAK,CAAEE,EAAG,IAAKC,EAAG,IAAKC,MAAO,IAAKH,KAAM7mC,EAAYuH,SAAU6/B,iBAAkB,SACpHnnC,KAAA8pE,GAAiC/qE,EAAI4nC,KAAK,CAAEmB,MAAO,wBAAyBlB,KAAM7mC,EAAY4H,iBAAkB2/B,OAAQvnC,EAAYsH,aAAckgC,eAAgB,EAAGwiC,mBAAoB,OAAQC,eAAgB,MAAO7iC,iBAAkB,OAAQoD,WAAY,WAC9PvqC,KAAAiqE,GAA8BlrE,EAAI0oC,KAAK,CAAEb,KAAM,OAAQU,OAAQvnC,EAAYsH,aAAckgC,eAAgB,IAAKJ,iBAAkB,SAC1InnC,KAAAkqE,kBAAoCxrE,EAAKgL,IAAI,CAAEq9B,MAAO,KAAMojC,cAAe,QAASC,gBAAiB,OAAQ9rE,MAAO,uGAAwG+rE,oBAAqB,YACvOrqE,KAAA4nC,EAAsB7oC,EAAImoC,IAAI,CAAE5oC,MAAO,qBAAqByB,EAAYqH,4DAA6D2/B,MAAO,OAAQC,OAAQ,QAC5KjoC,EAAI6hE,KACH5gE,KAAKupE,GACLvpE,KAAKypE,GACLzpE,KAAK0pE,IAEN1pE,KAAK2pE,GACL3pE,KAAK8pE,GACL9pE,KAAK4pE,GACL5pE,KAAKiqE,GACLjqE,KAAK6pE,IAEU7pE,KAAA6nC,UAA4BnpC,EAAKgL,IAAI,CAAEpL,MAAO,oEAAsE0B,KAAK4nC,EAAM5nC,KAAKkqE,mBAEnIlqE,KAAAsqE,GAA4B,GAC5BtqE,KAAAuqE,GAAyC,GACzCvqE,KAAAwqE,GAAqCzrE,EAAI4nC,OACzC3mC,KAAAyqE,GAAoC1rE,EAAI4nC,OAIjD3mC,KAAA0qE,GAAiC,EACjC1qE,KAAA2qE,GAAgC,EAChC3qE,KAAA4qE,GAAkC,EACnC5qE,KAAA6qE,iBAA2B,EAC1B7qE,KAAA8qE,GAA6B,EAI7B9qE,KAAA+qE,GAA6B,EAC7B/qE,KAAAgrE,GAA6B,EAI7BhrE,KAAAirE,IAAwB,EAGxBjrE,KAAA+nC,EAAkB,EAClB/nC,KAAAyhD,GAAkB,EAClBzhD,KAAAgoC,GAAsB,EACtBhoC,KAAAioC,GAAsB,EACtBjoC,KAAAkrE,IAA0B,EAC1BlrE,KAAAmrE,IAA4B,EAC5BnrE,KAAAorE,IAAuB,EACvBprE,KAAAqrE,GAAkC,GAElCrrE,KAAAsrE,GAAuB,EACvBtrE,KAAAurE,GAAuB,EACvBvrE,KAAAwrE,GAAqB,EACrBxrE,KAAAyrE,IAAsB,EACtBzrE,KAAA0rE,IAA0B,EAC1B1rE,KAAA2rE,IAAqC,EACrC3rE,KAAA4rE,IAAmC,EACnC5rE,KAAA6rE,IAAsC,EACtC7rE,KAAA8rE,GAAoB,EACpB9rE,KAAA+rE,GAAqB,EACrB/rE,KAAAgsE,GAAsB,EACtBhsE,KAAAisE,IAAwB,EACxBjsE,KAAAksE,GAAqC,KACrClsE,KAAAmsE,GAAiD,KACjDnsE,KAAAosE,IAA0C,EAC1CpsE,KAAA0jE,GAAyB,IAAIkF,GAC7B5oE,KAAAqsE,GAAkC,GAClCrsE,KAAA86C,GAA2B,KAC3B96C,KAAAssE,GAAqB,EACrBtsE,KAAAusE,GAAwB,EACxBvsE,KAAAwsE,IAA0B,EAC1BxsE,KAAAysE,IAA2B,EAC3BzsE,KAAA0sE,IAA8B,EAC9B1sE,KAAA2sE,IAAgC,EAChC3sE,KAAA6yD,IAA2B,EAC3B7yD,KAAA4sE,IAA0B,EAC1B5sE,KAAA6sE,IAAwB,EACxB7sE,KAAA8sE,IAA2B,EAC3B9sE,KAAA+sE,IAAsC,EACtC/sE,KAAAgtE,IAAsC,EACtChtE,KAAAitE,IAAoC,EACpCjtE,KAAAktE,IAA8B,EA2C9BltE,KAAAmtE,GAA8B3kC,IACrC,MAAM4kC,EAAwC5kC,EAAM6X,OAGpD,IAAIgtB,EAAoB92C,OAAO62C,EAAMlpB,WACrC,MAAKnB,MAAMsqB,IAAcA,GAAa,GAAKA,EAAYrtE,KAAK+qE,KAIrC,IAAnBqC,EAAMlpB,WAAsC,KAAnBkpB,EAAMlpB,UAAkB,CAEhDnB,MAAMsqB,KACTA,EAAYrtE,KAAK+qE,GACjBqC,EAAMlpB,UAAY,GAAKlkD,KAAK+qE,IAG7B,IAAIuC,EAAoB1+E,KAAKsU,MAAMtU,KAAKsgB,IAAIqnB,OAAOv2B,KAAK+qE,IAAqBn8E,KAAKyB,IAAIkmC,OAAOv2B,KAAKgrE,IAAqBqC,KACnHD,EAAMlpB,WAAaopB,EAAY,KAClCF,EAAMlpB,UAAYopB,EAAY,IAG/B,IAAIC,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IACjHttE,KAAK0qE,IAA0BjxE,EAAa7K,KAAKsgB,IAAItgB,KAAKyB,IAAI2P,KAAKwmC,EAAe,GAAe,EAAV+mC,EAAavtE,KAAKwtE,IAAcxtE,KAAKytE,GAAal+D,MAAQvP,KAAK0tE,GAAY1+D,MAAQ,EAAc,EAAVu+D,GAAc,IAC5LvtE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,OAAayB,KAAK0qE,GAAyB,MAEpF,MAAM5mD,EAA2B,IAAIynB,GACrCvrC,KAAKksE,GAAcpoD,EACnB9jB,KAAKsmC,EAAK4sB,qBAAqBlzD,KAAKksE,IAEpCpoD,EAAS2pB,OAAO,IAAI6Q,GAAiBt+C,KAAKsmC,EAAMtmC,KAAKytE,GAAcztE,KAAK0tE,GAAY1+D,KAAMhP,KAAKsmC,EAAKnmC,KAAKoa,eAAe+yD,EAAWttE,KAAK2tE,IAAkB3tE,KAAK0tE,GAAYvyE,SAAU6E,KAAKspE,cAkYrLtpE,KAAA4tE,gBAAkB,KACxB,MAAMC,EAAsB7tE,KAAK8tE,KACjC,IAAIxzD,EAActa,KAAKsmC,EAAKnmC,KAAKsa,cAAa,GAC9Cza,KAAKqrE,GAAmBj9E,OAAS4R,KAAKsmC,EAAKnmC,KAAK0b,kBAChD7b,KAAKqsE,GAAoBj+E,OAAS4R,KAAKsmC,EAAKnmC,KAAK0b,kBACjD,IAAK,IAAI1tB,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKnmC,KAAKe,kBAAmB/S,IAC7D6R,KAAKqrE,GAAmBl9E,GAAK,CAAC4gB,EAAY,EAAG,EAAGuL,GAAMvL,EAAY,EAAG8+D,EAAavzD,IAClFta,KAAKqsE,GAAoBl+E,GAAK,CAACmsB,EAAKA,GAErC,IAAK,IAAInsB,EAAY6R,KAAKsmC,EAAKnmC,KAAKe,kBAAmB/S,EAAI6R,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmBjT,IAC/H6R,KAAKqrE,GAAmBl9E,GAAK,CAAC4gB,EAAY,EAAG,EAAGuL,GAAMvL,EAAY,EAAG8+D,EAAa,IAClF7tE,KAAKqsE,GAAoBl+E,GAAK,CAACmsB,EAAK,GAErC,IAAK,IAAInsB,EAAY6R,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmBjT,EAAI6R,KAAKsmC,EAAKnmC,KAAK0b,kBAAmB1tB,IAC/H6R,KAAKqrE,GAAmBl9E,GAAK,CAAC4gB,EAAY,EAAG,EAAGuL,GAAMvL,EAAY,EAAG8+D,EAAa,IAClF7tE,KAAKqsE,GAAoBl+E,GAAK,CAACmsB,EAAK,IAI9Bta,KAAA+tE,GAAoBC,IAEvBhuE,KAAKorE,KAAgBprE,KAAKspE,YAActpE,KAAKkrE,IAAkBlrE,KAAKgoC,GAAc3c,YAAYC,MAAQtrB,KAAKwrE,GAAa,KAAQxrE,KAAK0jE,GAAQmF,OAAS7oE,KAAKsmC,EAAKutB,cAAc7zD,KAAKksE,MACtLlsE,KAAKksE,GAAavgC,OAClB3rC,KAAKyrE,IAAa,EAClBzrE,KAAK0rE,IAAiB,EACtB1rE,KAAKiuE,KACLjuE,KAAKsmC,EAAKwD,SAASokC,kBAGpB,MAAMC,EAAsBv/E,KAAKsU,MAAMlD,KAAKsmC,EAAKzN,MAAMvxB,UAEvD,GAAItH,KAAKsmC,EAAKzN,MAAM7L,UAA8B,MAAjBhtB,KAAK86C,IAAoB96C,KAAKsmC,EAAKnmC,KAAKolB,WAAWvlB,KAAKsmC,EAAKlmC,QAASxR,KAAKsU,MAAMlD,KAAKsmC,EAAKzN,MAAMvxB,YAActH,KAAK86C,IAAalsD,KAAKsU,MAAMlD,KAAKsmC,EAAKzN,MAAMvxB,WAAatH,KAAKsmC,EAAKvqB,IAAM/b,KAAKopE,IAAa,CAC3OppE,KAAK6pE,GAAahsE,aAAa,aAAc,WAC7C,MAAMuwE,EAAsBpuE,KAAKsmC,EAAKzN,MAAMvxB,SAAW6mE,EACnDv/E,KAAKC,IAAIu/E,EAAcpuE,KAAKssE,IAAc,GAC7CtsE,KAAKssE,GAAa8B,EAElBpuE,KAAKssE,IAAgD,IAAjC8B,EAAcpuE,KAAKssE,IAExCtsE,KAAK6pE,GAAahsE,aAAa,IAAK,GAAKpE,EAAauG,KAAKssE,GAAatsE,KAAKwmC,EAAe,SAE5FxmC,KAAK6pE,GAAahsE,aAAa,aAAc,UAG1CmC,KAAKsmC,EAAKzN,MAAM7L,SAAWhtB,KAAKsmC,EAAKu+B,YAAc7kE,KAAKktE,IAAsBiB,IACjF,IAAIv8B,GAAiB5xC,KAAKsmC,EAAMtmC,KAAKsmC,EAAKlmC,QAAS+tE,GACnDnuE,KAAKsmC,EAAKwD,SAASokC,kBAEpBluE,KAAKktE,GAAqBiB,EAC1B1tD,OAAO+hD,sBAAsBxiE,KAAK+tE,KAG3B/tE,KAAA4oC,GAAkBJ,IACrBxoC,KAAKioC,IACTjoC,KAAKioC,GAAa,EAClBjoC,KAAKorE,IAAc,IAGZprE,KAAA8oC,GAAiBN,IACnBxoC,KAAKioC,IACVjoC,KAAKioC,GAAa,IAGXjoC,KAAA+oC,GAAqBP,IAC5BA,EAAMQ,iBACN,MAAMC,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7HrpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAKorE,IAAc,EACnBprE,KAAKyrE,GAAajjC,EAAM6lC,SACxBruE,KAAK0rE,IAAiB,EACtB1rE,KAAKiuE,MAGEjuE,KAAAwpC,GAAqBhB,IAC5BA,EAAMQ,iBACN,MAAMC,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvHrpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAKorE,IAAc,EACnBprE,KAAKyrE,GAAajjC,EAAM6lC,SACxBruE,KAAK0rE,IAAiB,EACtB1rE,KAAKwrE,GAAangD,YAAYC,MAC9BtrB,KAAKiuE,MA2HEjuE,KAAA0pC,GAAmBlB,IAC1B,MAAMS,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7HrpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAKorE,IAAc,EACnBprE,KAAK2pC,MAGE3pC,KAAA4pC,GAAmBpB,IAC1B,IAAKxoC,KAAKgoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvHrpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAK2pC,MA0WE3pC,KAAA6pC,GAAuBrB,IAC9B,IAAKxoC,KAAK0jE,GAAQmF,MAAO,OACzB,MAAMyF,EAA2BtuE,KAAKsmC,EAAKutB,cAAc7zD,KAAKksE,IAC9D,GAAIlsE,KAAKgoC,GAAcsmC,GAAuC,MAApBtuE,KAAKksE,GAC9C,GAAIlsE,KAAK6rE,GACR7rE,KAAKsmC,EAAKqa,OAAO3gD,KAAKksE,IACtBlsE,KAAKksE,GAAc,KAEE,MAAjBlsE,KAAK86C,IAAoB96C,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,UAAUJ,KAAK86C,GAASvqC,MAAM0d,MAAK,SAAUC,EAAGC,GAAK,OAAQD,EAAE3e,OAAS4e,EAAE5e,MAAS2e,EAAExe,QAAQ,GAAKye,EAAEze,QAAQ,GAAKwe,EAAE3e,MAAQ4e,EAAE5e,cAE7L,GAAIvP,KAAK2rE,IAA6B3rE,KAAK4rE,IAA2B5rE,KAAKyrE,GACjFzrE,KAAKuuE,GAAqBvuE,KAAKksE,IAC/BlsE,KAAKksE,GAAc,UACb,GAAIlsE,KAAKkrE,IAA0C,MAAxBlrE,KAAK0jE,GAAQoF,UAAoB9oE,KAAKksE,GAAY7gC,UAAYrrC,KAAK2rE,IAA6B3rE,KAAK4rE,IAA2B5rE,KAAK6rE,IAA8B7rE,KAAKyrE,GACzMzrE,KAAKsmC,EAAKqa,OAAO3gD,KAAKksE,IACtBlsE,KAAKksE,GAAc,KAEE,MAAjBlsE,KAAK86C,IAAoB96C,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,UAAUJ,KAAK86C,GAASvqC,MAAM0d,MAAK,SAAUC,EAAGC,GAAK,OAAQD,EAAE3e,OAAS4e,EAAE5e,MAAS2e,EAAExe,QAAQ,GAAKye,EAAEze,QAAQ,GAAKwe,EAAE3e,MAAQ4e,EAAE5e,aAE7L,CAEN,GAAqB,MAAjBvP,KAAK86C,GAAkB,MAAM,IAAIlrD,MAErC,MAAMk0B,EAA2B,IAAIynB,GAGrC,GAFAznB,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAM,EAAG,KAEzB,GAA5BtmC,KAAK0jE,GAAQllD,YAOhB,GANIxe,KAAK0jE,GAAQoF,QAAQp5D,QAAQthB,QAAUL,EAAOwI,cACjDutB,EAAS2pB,OAAO,IAAI+G,GAAiBx0C,KAAKsmC,EAAMtmC,KAAK0jE,GAAQoF,QAAS9oE,KAAK0jE,GAAQoF,QAAQp5D,QAAQ,GAAI,GAAG,IAE3GoU,EAAS2pB,OAAO,IAAI+G,GAAiBx0C,KAAKsmC,EAAMtmC,KAAK0jE,GAAQoF,QAAS9oE,KAAK0jE,GAAQp0D,MAAOtP,KAAK0jE,GAAQoF,QAAQp5D,QAAQthB,SACvH4R,KAAKwuE,GAAUxuE,KAAK0jE,GAAQoF,SAExB9oE,KAAKsmC,EAAKmoC,oBAAsBzuE,KAAKsmC,EAAKzN,MAAM7L,QAAS,CAC5D,MAAM/c,EAAmBrhB,KAAKyB,IAAItC,EAAOqF,aAAc4M,KAAK0jE,GAAQl0D,IAAMxP,KAAK0jE,GAAQn0D,OACvFvP,KAAKsmC,EAAKzN,MAAMjQ,kBAAoB3Y,EACpCjQ,KAAKsmC,EAAKzN,MAAM/P,iBAAmB9oB,KAAK0jE,GAAQoF,QAAQp5D,QAAQW,SAChErQ,KAAKsmC,EAAKzN,MAAMhQ,kBAAmB,QAGO,GAAvC7oB,KAAK0jE,GAAQoF,QAAQp5D,QAAQthB,OAChC01B,EAAS2pB,OAAO,IAAI6K,GAAgBt4C,KAAKsmC,EAAMtmC,KAAK86C,GAAU96C,KAAK0jE,GAAQoF,QAAS9oE,KAAK0jE,GAAQqF,UAAU,IAE3GjlD,EAAS2pB,OAAO,IAAI+G,GAAiBx0C,KAAKsmC,EAAMtmC,KAAK0jE,GAAQoF,QAAS9oE,KAAK0jE,GAAQp0D,MAAOtP,KAAK0jE,GAAQoF,QAAQp5D,QAAQiF,QAAQ3U,KAAK0jE,GAAQp0D,QAAQ,IAGtJtP,KAAKsmC,EAAKqa,OAAO78B,GAInB9jB,KAAKgoC,GAAa,EAClBhoC,KAAKkrE,IAAiB,EACtBlrE,KAAK2rE,IAA4B,EACjC3rE,KAAK4rE,IAA0B,EAC/B5rE,KAAK6rE,IAA6B,EAClC7rE,KAAKosE,IAAiC,EACtCpsE,KAAKkqE,kBAAkBrsE,aAAa,OAAQkC,EAAYyH,eACxDxH,KAAKokE,KACLpkE,KAAK6oC,MA/kCL,IAAK,IAAI16C,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKnmC,KAAKkb,IAAKltB,IAAK,CAEpD,MAAMugF,EAA4B3vE,EAAI4nC,OACtC+nC,EAAU7wE,aAAa,IAAK,KAC5B6wE,EAAU7wE,aAAa,OAAc,GAAL1P,EAAU4R,EAAYkI,MAAQlI,EAAYiI,iBAC1EhI,KAAKupE,GAAmBzsE,YAAY4xE,GACpC1uE,KAAKuqE,GAAqBp8E,GAAKugF,EAGhC1uE,KAAKwqE,GAAmB3sE,aAAa,IAAK,KAC1CmC,KAAKwqE,GAAmB3sE,aAAa,IAAK,KAC1CmC,KAAKwqE,GAAmB3sE,aAAa,OAAQkC,EAAYiI,iBACzDhI,KAAKypE,GAAmB3sE,YAAYkD,KAAKwqE,IACzCxqE,KAAKyqE,GAAkB5sE,aAAa,OAAQkC,EAAYiI,iBACxDhI,KAAK0pE,GAAkB5sE,YAAYkD,KAAKyqE,IAEpCzqE,KAAKmpE,IACRnpE,KAAKokE,KACLpkE,KAAK6oC,KACLpoB,OAAO+hD,sBAAsBxiE,KAAK+tE,IAClC/tE,KAAK4nC,EAAKqC,iBAAiB,YAAajqC,KAAK+oC,IAC7ChsC,SAASktC,iBAAiB,YAAajqC,KAAK0pC,IAC5C3sC,SAASktC,iBAAiB,UAAWjqC,KAAK6pC,IAC1C7pC,KAAK4nC,EAAKqC,iBAAiB,YAAajqC,KAAK4oC,IAC7C5oC,KAAK4nC,EAAKqC,iBAAiB,WAAYjqC,KAAK8oC,IAE5C9oC,KAAK4nC,EAAKqC,iBAAiB,aAAcjqC,KAAKwpC,IAC9CxpC,KAAK4nC,EAAKqC,iBAAiB,YAAajqC,KAAK4pC,IAC7C5pC,KAAK4nC,EAAKqC,iBAAiB,WAAYjqC,KAAK6pC,IAC5C7pC,KAAK4nC,EAAKqC,iBAAiB,cAAejqC,KAAK6pC,IAE/C7pC,KAAKkqE,kBAAkBjgC,iBAAiB,QAASjqC,KAAKmtE,MAEtDntE,KAAK6pE,GAAavrE,MAAMi1D,QAAU,OAClCvzD,KAAK4nC,EAAK9qC,YAAYiC,EAAI4nC,KAAK,CAAEE,EAAG,EAAGC,EAAG,EAAGC,MAAO,IAAOC,OAAQ,IAAOJ,KAAM7mC,EAAYqH,iBAAkB9I,MAAO,oBAGtH0B,KAAK4tE,kBAqCE/zE,KACP,MAAM80E,EAA6B5gF,EAAOwF,QAAQyM,KAAKsmC,EAAKnmC,KAAKsb,QAAQjoB,aACzE,OAAIm7E,EAAqB,GAAK,EAEtB5gF,EAAOqF,aAAe,EACnBu7E,EAAqB,GAAK,EAE7B5gF,EAAOqF,aAAe,EACnBu7E,EAAqB,GAAK,EAE7B5gF,EAAOqF,aAAe,EAEvBrF,EAAOqF,aAGPyG,KACP,OAAO9L,EAAOqF,aAAerF,EAAOwF,QAAQyM,KAAKsmC,EAAKnmC,KAAKsb,QAAQjoB,aAG5DqG,GAAmBolD,GAC1B,MAAMlH,EAAsB/3C,KAAK4uE,KACjC,OAAOhgF,KAAKsU,MAAM+7C,EAAQlH,GAAeA,EAGlCl+C,KAEP,GADAmG,KAAK0jE,GAAU,IAAIkF,GACf5oE,KAAK+nC,EAAU,GAAK/nC,KAAK+nC,EAAU/nC,KAAKwmC,GAAgBxmC,KAAKyhD,GAAU,GAAKzhD,KAAKyhD,GAAUzhD,KAAKymC,GAAiBzmC,KAAKirE,IAAgB,EAAG,OAE7I,MAAMlzB,EAAsB/3C,KAAK4uE,KACjC5uE,KAAK0jE,GAAQsF,UAAYhpE,KAAK+nC,EAAU/nC,KAAKwtE,GAC7CxtE,KAAK0jE,GAAQt6C,KACZx6B,KAAKsU,MACJtU,KAAKsgB,IAAI,EACRtgB,KAAKyB,IAAI2P,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,aAAe2kD,EAAa/3C,KAAK0jE,GAAQsF,YAErFjxB,GAAeA,EAEnB,IAAI82B,GAAqB,EAEzB,GAAqB,MAAjB7uE,KAAK86C,GAAkB,CAC1B,IAAK,MAAMrqC,KAAQzQ,KAAK86C,GAASvqC,MAChC,GAAIE,EAAKjB,KAAOxP,KAAK0jE,GAAQsF,UACxBhpE,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,UACxCqQ,EAAKf,QAAQ,IAAM9gB,KAAKsU,MAAMlD,KAAK8uE,GAAgB9uE,KAAKyhD,OAC3DzhD,KAAK0jE,GAAQ/9C,SAAWlV,GAEpBo+D,GACJ7uE,KAAK0jE,GAAQqF,aAGd/oE,KAAK0jE,GAAQ/9C,SAAWlV,EACxBzQ,KAAK0jE,GAAQqF,iBAER,GAAIt4D,EAAKlB,OAASvP,KAAK0jE,GAAQsF,WAAav4D,EAAKjB,IAAMxP,KAAK0jE,GAAQsF,UACtEhpE,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SACxCqQ,EAAKf,QAAQ,IAAM9gB,KAAKsU,MAAMlD,KAAK8uE,GAAgB9uE,KAAKyhD,MAC3DzhD,KAAK0jE,GAAQoF,QAAUr4D,EACvBo+D,GAAY,KAGHA,GAAsC,MAAxB7uE,KAAK0jE,GAAQoF,SAAmBr4D,EAAKlB,MAAQvP,KAAK0jE,GAAQoF,QAAQv5D,QACzFvP,KAAK0jE,GAAQqF,WAGd/oE,KAAK0jE,GAAQoF,QAAUr4D,OAElB,GAAIA,EAAKlB,MAAQvP,KAAK0jE,GAAQsF,UAAW,CAC/C,IAAIhpE,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAKtC,CACNJ,KAAK0jE,GAAQ99C,SAAWnV,EACxB,MANA,GAAIA,EAAKf,QAAQ,IAAM9gB,KAAKsU,MAAMlD,KAAK8uE,GAAgB9uE,KAAKyhD,KAAW,CACtEzhD,KAAK0jE,GAAQ99C,SAAWnV,EACxB,OASJ,GAAIzQ,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,WAAaJ,KAAK6qE,gBAE9D,GAAkD,MAA9C7qE,KAAK86C,GAASvqC,MAAMvQ,KAAK0jE,GAAQqF,WAA6C,MAAxB/oE,KAAK0jE,GAAQoF,QAAiB,CAEvF,IAAIp8C,EAAiB,EAErB,KAAO1sB,KAAK0jE,GAAQoF,QAAQv5D,MAAQvP,KAAK0jE,GAAQoF,QAAQn5D,KAAK+c,GAAQ1d,KAAOhP,KAAK0jE,GAAQsF,WAAat8C,EAAS1sB,KAAK0jE,GAAQoF,QAAQn5D,KAAKvhB,QACzIs+B,IAGGA,EAAS,GACR1sB,KAAK0jE,GAAQoF,QAAQv5D,MAAQvP,KAAK0jE,GAAQoF,QAAQn5D,KAAK+c,GAAQ1d,KAAOhP,KAAK0jE,GAAQsF,UAAYhpE,KAAK0jE,GAAQsF,WAAahpE,KAAK0jE,GAAQoF,QAAQv5D,MAAQvP,KAAK0jE,GAAQoF,QAAQn5D,KAAK+c,EAAS,GAAG1d,OAC/L0d,IAIF1sB,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,QAAS,WAClDyB,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,UAAW,IAEpD,IAAIuc,EAAsB9a,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,qBAAqB1uC,KAAKopE,KAAax1D,YAAY7lB,EAAO4K,SAAW,EAAIqH,KAAK0jE,GAAQoF,QAAQp5D,QAAQ,IAE7L49D,EAAoBttE,KAAKsmC,EAAKnmC,KAAKytB,eAAe5tB,KAAK0jE,GAAQoF,QAAQn5D,KAAK+c,GAAQ74B,OAAQinB,GAG5FyyD,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IAEjHttE,KAAK4qE,GAA0B,EAAc,EAAV2C,EACnCvtE,KAAK0qE,IAA0BjxE,EAAa7K,KAAKsgB,IAAItgB,KAAKyB,IAAI2P,KAAKwmC,EAAe,GAAe,EAAV+mC,EAAavtE,KAAKwtE,IAAcxtE,KAAK0jE,GAAQoF,QAAQv5D,MAAQvP,KAAK0jE,GAAQoF,QAAQn5D,KAAK+c,GAAQ1d,MAAQ,EAAc,EAAVu+D,GAAc,IAChNvtE,KAAK2qE,IAAyBlxE,EAAauG,KAAK+uE,GAAoB/uE,KAAK0jE,GAAQoF,QAAQp5D,QAAQ,GAAK1P,KAAKusE,IAAiB,IAAMvsE,KAAKirE,GAAejrE,KAAKgvE,IAAgB,GAE3KhvE,KAAK8qE,GAAqB9qE,KAAK0jE,GAAQoF,QAAQn5D,KAAK+c,GAAQ74B,OAC5DmM,KAAKytE,GAAeztE,KAAK0jE,GAAQoF,QACjC9oE,KAAK0tE,GAAc1tE,KAAK0jE,GAAQoF,QAAQn5D,KAAK+c,GAC7C1sB,KAAK+qE,GAAqB/qE,KAAKsmC,EAAKnmC,KAAKytB,eAAe,EAAG9S,GAC3D9a,KAAKgrE,GAAqBhrE,KAAKsmC,EAAKnmC,KAAKytB,eAAe5tB,KAAKsmC,EAAKnmC,KAAKsY,WAAWjX,IAAIsZ,GAAoBA,GAC1G9a,KAAK2tE,GAAkB7yD,EAEvB9a,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,OAAayB,KAAK0qE,GAAyB,MACpF1qE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,MAAYyB,KAAK2qE,GAAwB,MAClF3qE,KAAKkqE,kBAAkB9jE,YAAc,GAAKknE,OAI1CttE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,UAAW,QACpDyB,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAKkqE,kBAAkBrsE,aAAa,kBAAmB,cAG/CmC,KAAK6qE,kBACd7qE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,UAAW,QACpDyB,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAKkqE,kBAAkBrsE,aAAa,kBAAmB,eAIxDmC,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,UAAW,QACpDyB,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAKkqE,kBAAkBrsE,aAAa,kBAAmB,SAGxD,IAAIoxE,EAAqBjvE,KAAK8uE,GAAgB9uE,KAAKyhD,IAEnD,GAA4B,MAAxBzhD,KAAK0jE,GAAQoF,QAAiB,CAEjC9oE,KAAK0jE,GAAQn0D,MAAQvP,KAAK0jE,GAAQoF,QAAQv5D,MAC1CvP,KAAK0jE,GAAQl0D,IAAMxP,KAAK0jE,GAAQoF,QAAQt5D,IACxCxP,KAAK0jE,GAAQ/zD,KAAO3P,KAAK0jE,GAAQoF,QAAQn5D,KAEzC,IAEI48B,EAFApxC,EAAmB,EACnBu1D,EAAgB,EAEhBtkB,EAAmBpsC,KAAK0jE,GAAQoF,QAAQn5D,KAAK,GACjD,IAAK,IAAIlD,EAAY,EAAGA,EAAIzM,KAAK0jE,GAAQoF,QAAQn5D,KAAKvhB,OAAQqe,IAAK,CAClE8/B,EAAUH,EACVA,EAAUpsC,KAAK0jE,GAAQoF,QAAQn5D,KAAKlD,GACpC,MAAMyiE,EAAmBlvE,KAAKwtE,IAAcxtE,KAAK0jE,GAAQoF,QAAQv5D,MAAQg9B,EAAQv9B,MAC3EmgE,EAAoBnvE,KAAKwtE,IAAcxtE,KAAK0jE,GAAQoF,QAAQv5D,MAAQ68B,EAAQp9B,MAClF,GAAIhP,KAAK+nC,EAAUonC,EAAW,SAC9B,GAAInvE,KAAK+nC,EAAUmnC,EAAU,MAAM,IAAIt/E,MACvC,MAAMw/E,GAAyBpvE,KAAK+nC,EAAUmnC,IAAaC,EAAYD,GACjEG,EAAczgF,KAAKe,KAAK,EAAMf,KAAKe,KAAK,GAAOf,KAAKuB,IAAIi/E,EAAgB,GAAK,IAAQ,GACrFE,EAAqB1gF,KAAKC,IAAIu9C,EAAQjxC,SAAWoxC,EAAQpxC,UAC/DA,EAAWoxC,EAAQpxC,UAAY,EAAMi0E,GAAiBhjC,EAAQjxC,SAAWi0E,EACzE1e,EAAQ2e,EAAMC,EAAa,IAC3B,MAGD,IAAIC,EAAsBh5C,OAAO0H,UAC7BuxC,GAAuBj5C,OAAO0H,UAC9BwxC,EAAuBl5C,OAAO0H,UAClC,IAAK,MAAM9tB,KAAOnQ,KAAK0jE,GAAQoF,QAAQn5D,KAAM,CACxC4/D,EAAcp/D,EAAIhV,WAAUo0E,EAAcp/D,EAAIhV,UAC9Cq0E,EAAcr/D,EAAIhV,WAAUq0E,EAAcr/D,EAAIhV,UAClD,MAAMu0E,EAAsB9gF,KAAKC,IAAImR,KAAK0jE,GAAQoF,QAAQv5D,MAAQY,EAAInB,KAAOhP,KAAK+nC,EAAU/nC,KAAKwtE,IAC7FiC,EAAeC,IAClBD,EAAeC,EACf1vE,KAAK0jE,GAAQuF,aAAejpE,KAAK0jE,GAAQoF,QAAQn5D,KAAKgF,QAAQxE,IAShE,GALA8+D,GAAc9zE,EACd6E,KAAK0jE,GAAQp0D,MAAQtP,KAAK2vE,GAAaV,GAAaM,GAAcvvE,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SAAWrS,EAAO2K,UAAY,EAAIsH,KAAKsmC,EAAKnmC,KAAKrH,UAAY02E,IAIrKxvE,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SAAU,CACzD,IAAIwvE,EAAkBlf,EACtB,IAAK,IAAIviE,EAAY,EAAGA,EAAI6R,KAAK0jE,GAAQoF,QAAQp5D,QAAQthB,OAAQD,IAAK,CACrE,MAAMiuE,EAAmBxtE,KAAKC,IAAImR,KAAK0jE,GAAQoF,QAAQp5D,QAAQvhB,GAAK8gF,EAAa,IAC7E7S,EAAWwT,IACfA,EAAUxT,EACVp8D,KAAK0jE,GAAQp0D,MAAQtP,KAAK0jE,GAAQoF,QAAQp5D,QAAQvhB,KAIpD,IAAK,IAAIA,EAAY,EAAGA,EAAI6R,KAAK0jE,GAAQoF,QAAQp5D,QAAQthB,OAAQD,IAChE,GAAI6R,KAAK0jE,GAAQoF,QAAQp5D,QAAQvhB,IAAM6R,KAAK0jE,GAAQp0D,MAAO,CAC1DtP,KAAK0jE,GAAQllD,WAAarwB,EAC1B,WAGI,CAGN6R,KAAK0jE,GAAQp0D,MAAQtP,KAAK2vE,GAAaV,EAAY,EAAGjvE,KAAKsmC,EAAKnmC,KAAKrH,UAErE,MAAM+2E,EAAwB7vE,KAAK8vE,GAAY9vE,KAAK8vE,GAAY1hF,OAAS,GAAG4gB,KACtE+gE,EAAoBnhF,KAAKsU,MAAMlD,KAAK0jE,GAAQt6C,KAAOr7B,EAAOqF,cAC1Dy6E,EAAsB7tE,KAAK8tE,KAC3BkC,EAAmBhwE,KAAK0jE,GAAQt6C,KAAOr7B,EAAOqF,aACpD,GAAqB,GAAjBy8E,EACH7vE,KAAK0jE,GAAQn0D,MAAQvP,KAAK0jE,GAAQt6C,UAC5B,GAAIymD,EAAgB9hF,EAAOqF,aACjC4M,KAAK0jE,GAAQn0D,MAAQwgE,EAAYhiF,EAAOqF,kBAClC,GAAIy8E,GAAiB9hF,EAAOqF,aAClC4M,KAAK0jE,GAAQn0D,MAAQwgE,EAAYhiF,EAAOqF,aACpCy6E,EAAc9/E,EAAOqF,cAAgB48E,EAAWnC,IACnD7tE,KAAK0jE,GAAQn0D,OAAS3gB,KAAKsU,MAAM8sE,EAAWnC,GAAeA,OAEtD,CACN7tE,KAAK0jE,GAAQn0D,MAAQwgE,EAAYhiF,EAAOqF,aACxC,IAAI68E,EAAWliF,EAAOqF,aAAey8E,GAAiB,EAAIA,EAAgBjhF,KAAKyB,IAAIw/E,EAAehC,GAClG,KAAOoC,EAAWpC,GAAe9/E,EAAOqF,aAAe68E,GAAY,GAClEA,IAEDjwE,KAAK0jE,GAAQn0D,OAAS3gB,KAAKsU,MAAM8sE,EAAWC,GAAYA,EAEzDjwE,KAAK0jE,GAAQl0D,IAAMxP,KAAK0jE,GAAQn0D,MAAQsgE,EACxC,IAAIK,EAAqB,EACrBC,EAAmBnwE,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,aAqB3D,GApB6B,MAAzB4M,KAAK0jE,GAAQ/9C,WAChBuqD,EAAalwE,KAAK0jE,GAAQ/9C,SAASnW,KAEP,MAAzBxP,KAAK0jE,GAAQ99C,WAChBuqD,EAAWnwE,KAAK0jE,GAAQ99C,SAASrW,OAE9BvP,KAAK0jE,GAAQn0D,MAAQ2gE,GACxBlwE,KAAK0jE,GAAQn0D,MAAQ2gE,EACrBlwE,KAAK0jE,GAAQl0D,IAAMxP,KAAK0jE,GAAQn0D,MAAQsgE,EACpC7vE,KAAK0jE,GAAQl0D,IAAM2gE,IACtBnwE,KAAK0jE,GAAQl0D,IAAM2gE,IAEVnwE,KAAK0jE,GAAQl0D,IAAM2gE,IAC7BnwE,KAAK0jE,GAAQl0D,IAAM2gE,EACnBnwE,KAAK0jE,GAAQn0D,MAAQvP,KAAK0jE,GAAQl0D,IAAMqgE,EACpC7vE,KAAK0jE,GAAQn0D,MAAQ2gE,IACxBlwE,KAAK0jE,GAAQn0D,MAAQ2gE,IAInBlwE,KAAK0jE,GAAQl0D,IAAMxP,KAAK0jE,GAAQn0D,OAASsgE,EAC5C7vE,KAAK8vE,GAAc9vE,KAAKqrE,GAAmBrrE,KAAKsmC,EAAKlmC,SACrDJ,KAAK0jE,GAAQ/zD,KAAO3P,KAAK8vE,OACnB,CACN9vE,KAAK0jE,GAAQ/zD,KAAO,GACpB,IAAK,MAAMsnC,KAAUj3C,KAAK8vE,GAAa,CACtC,KAAI74B,EAAOjoC,MAAQhP,KAAK0jE,GAAQl0D,IAAMxP,KAAK0jE,GAAQn0D,OAG5C,CACNvP,KAAK0jE,GAAQ/zD,KAAKnhB,KAAKugB,EAAY,EAAG/O,KAAK0jE,GAAQl0D,IAAMxP,KAAK0jE,GAAQn0D,MAAO0nC,EAAOpjD,SACpF,MAHA,GADAmM,KAAK0jE,GAAQ/zD,KAAKnhB,KAAKugB,EAAY,EAAGkoC,EAAOjoC,KAAMioC,EAAOpjD,SACtDojD,EAAOjoC,MAAQhP,KAAK0jE,GAAQl0D,IAAMxP,KAAK0jE,GAAQn0D,MAAO,OAQ7D,GAAIvP,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAAU,CAEtD,GAAgC,MAA5BJ,KAAKqsE,IAA8E,MAA/CrsE,KAAKqsE,GAAoBrsE,KAAKsmC,EAAKlmC,SAC1E,IAAK,IAAI+P,EAAc,EAAGA,EAAMnQ,KAAK0jE,GAAQ/zD,KAAKvhB,OAAQ+hB,IACzDnQ,KAAK0jE,GAAQ/zD,KAAKQ,GAAKtc,OAASmM,KAAKqsE,GAAoBrsE,KAAKsmC,EAAKlmC,SAAS+P,GAK9E,IAAIigE,EAAoBpwE,KAAKsmC,EAAKnmC,KAAKsa,aAAaza,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAAUJ,KAAKsmC,EAAKlmC,QAASJ,KAAKsmC,EAAKoI,qBAAqB1uC,KAAKopE,IAAappE,KAAK0jE,GAAQp0D,OACpL+gE,EAAyB,EAC7B,IAAK,MAAMlgE,KAAOnQ,KAAK0jE,GAAQ/zD,KAC1BQ,EAAItc,OAASw8E,IAChBA,EAAiBlgE,EAAItc,QAIvB,GAAIw8E,EAAiBD,EACpB,IAAK,MAAMjgE,KAAOnQ,KAAK0jE,GAAQ/zD,KAC9BQ,EAAItc,OAASjF,KAAKmb,MAAMoG,EAAItc,QAAUu8E,EAAYC,KAOtDrwE,KAAK0jE,GAAQmF,OAAQ,EAIdhvE,KACP,OAAOmG,KAAK0jE,GAAQmF,OAAS7oE,KAAKsmC,EAAK0T,UAAU4B,wBAA0B57C,KAAKsmC,EAAK0T,UAAUsB,uBAAyBt7C,KAAK0jE,GAAQsF,WAAahpE,KAAK0jE,GAAQsF,WAAahpE,KAAKsmC,EAAK0T,UAAUuB,oBAGzL1hD,KACP,OAAOmG,KAAK0jE,GAAQmF,OAAS7oE,KAAKsmC,EAAK0T,UAAU4B,yBAAsD,GAA5B57C,KAAK0jE,GAAQllD,YAAoBxe,KAAKsmC,EAAK0T,UAAUsB,sBAAwB,GAAKt7C,KAAK0jE,GAAQsF,WAAahpE,KAAK0jE,GAAQsF,WAAahpE,KAAKsmC,EAAK0T,UAAUsB,sBAAwB,KAGtPzhD,KACP,OAAOmG,KAAK0jE,GAAQmF,OAAS7oE,KAAKsmC,EAAK0T,UAAU4B,yBAAsD,GAA5B57C,KAAK0jE,GAAQllD,YAAoBxe,KAAKsmC,EAAK0T,UAAUuB,oBAAsB,MAAQv7C,KAAK0jE,GAAQsF,WAAahpE,KAAK0jE,GAAQsF,WAAahpE,KAAKsmC,EAAK0T,UAAUuB,oBAAsB,EAGrP1hD,GAAgBy2E,GACvB,OAAO1hF,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAI2P,KAAKuwE,GAAc,EAAGvwE,KAAKuwE,GAAeD,EAAStwE,KAAKirE,KAAkBjrE,KAAKusE,GAGpG1yE,GAAa22E,EAAengF,EAAa6e,GAMhD,OALIshE,EAAQngF,IAAKmgF,EAAQngF,GACrBmgF,EAAQthE,IAAKshE,EAAQthE,GAIlBtgB,KAAKsU,MAAMstE,GAqCX32E,GAAU4W,GACjBzQ,KAAK8vE,GAAc,GACnB,IAAK,MAAM74B,KAAUxmC,EAAKd,KACzB3P,KAAK8vE,GAAYthF,KAAKugB,EAAY,EAAGkoC,EAAOjoC,KAAMioC,EAAOpjD,SAE1D,IAAK,IAAI1F,EAAY,EAAGA,EAAI6R,KAAK8vE,GAAY1hF,OAAS,GACjD4R,KAAK8vE,GAAY3hF,EAAI,GAAG0F,QAAUmM,KAAK8vE,GAAY3hF,GAAG0F,QACzDmM,KAAK8vE,GAAY3hF,GAAG0F,QAAUmM,KAAK8vE,GAAY3hF,EAAI,GAAG0F,OACtDmM,KAAK8vE,GAAY1xD,OAAOjwB,EAAG,GAE3BA,IAGF6R,KAAKqrE,GAAmBrrE,KAAKsmC,EAAKlmC,SAAWJ,KAAK8vE,GAElD9vE,KAAKqsE,GAAoBrsE,KAAKsmC,EAAKlmC,SAAW,GAC9C,IAAK,IAAI+P,EAAc,EAAGA,EAAMnQ,KAAK8vE,GAAY1hF,OAAQ+hB,IACxDnQ,KAAKqsE,GAAoBrsE,KAAKsmC,EAAKlmC,SAAS5R,KAAKwR,KAAK8vE,GAAY3/D,GAAKtc,QAIlEgG,sBACFmG,KAAKioC,IACRjoC,KAAKsmC,EAAKzN,MAAMvxB,SAAWtH,KAAKsmC,EAAKvqB,IAAM/b,KAAKopE,GAAcppE,KAAK+nC,EAAU/nC,KAAKwmC,GA8F7E3sC,oBAAoB42E,GAC1B,GAAIzwE,KAAK6qE,gBAAiB,CAIzB,GAHA7qE,KAAK6qE,iBAAkB,EACvB7qE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,iBAAkB,QAEvDkiB,OAAOiwD,aAAc,CACxB,IAAIC,EAAwBlwD,OAAOiwD,eACxB,MAAPC,GACHA,EAAIC,kBAGN,GAAIH,EAAgB,CACnBzwE,KAAK0tE,GAAY75E,OAASmM,KAAK8qE,GAE/B,IAAIwC,EAAoBttE,KAAKsmC,EAAKnmC,KAAKytB,eAAe5tB,KAAK8qE,GAAoB9qE,KAAK2tE,IAGhFJ,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IACjHttE,KAAK0qE,IAA0BjxE,EAAa7K,KAAKsgB,IAAItgB,KAAKyB,IAAI2P,KAAKwmC,EAAe,GAAe,EAAV+mC,EAAavtE,KAAKwtE,IAAcxtE,KAAKytE,GAAal+D,MAAQvP,KAAK0tE,GAAY1+D,MAAQ,EAAc,EAAVu+D,GAAc,IAC5LvtE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,OAAayB,KAAK0qE,GAAyB,MAEpF,MAAM5mD,EAA2B,IAAIynB,GACrCvrC,KAAKksE,GAAcpoD,EACnB9jB,KAAKsmC,EAAK4sB,qBAAqBlzD,KAAKksE,IAEpCpoD,EAAS2pB,OAAO,IAAI6Q,GAAiBt+C,KAAKsmC,EAAMtmC,KAAKytE,GAAcztE,KAAK0tE,GAAY1+D,KAAMhP,KAAK8qE,GAAoB9qE,KAAK0tE,GAAYvyE,SAAU6E,KAAKspE,YAEnJtpE,KAAKksE,GAAc,KAGalsE,KAAKsmC,EAAKutB,cAAc7zD,KAAKksE,KAErC,MAApBlsE,KAAKksE,KACRlsE,KAAKsmC,EAAKqa,OAAO3gD,KAAKksE,IACtBlsE,KAAKksE,GAAc,OAMfryE,KAEP,GAAImG,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,UAAwE,QAA5DJ,KAAKkqE,kBAAkB5rE,MAAMiC,iBAAiB,YACtGP,KAAK+nC,GAAW/nC,KAAK0qE,GAAyB,GAC9C1qE,KAAK+nC,GAAW/nC,KAAK0qE,GAAyB1qE,KAAK4qE,GAA0B,GAC7E5qE,KAAKyhD,IAAWzhD,KAAK2qE,GAAwB,GAC7C3qE,KAAKyhD,IAAWzhD,KAAK2qE,GAAwB,GAAI,CAIjD,GAFA3qE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAKkqE,kBAAkBrsE,aAAa,kBAAmB,QACnD4iB,OAAOiwD,aAAc,CACxB,IAAIC,EAAwBlwD,OAAOiwD,eACxB,MAAPC,GACHA,EAAIE,kBAAkB7wE,KAAKkqE,mBAG7BzpD,OAAOqgC,YAAW,KAAQ9gD,KAAKkqE,kBAAkBnpB,WACjD/gD,KAAK6qE,iBAAkB,MACjB,CACN7qE,KAAK8wE,qBAAoB,GACrB9wE,KAAKsmC,EAAKmoC,mBAAmBzuE,KAAKsmC,EAAKzN,MAAMk4C,oBACjD/wE,KAAKgoC,GAAa,EAClBhoC,KAAKsrE,GAAetrE,KAAK+nC,EACzB/nC,KAAKurE,GAAevrE,KAAKyhD,GACzBzhD,KAAKokE,KACLpkE,KAAK6oC,KACL,MAAM/kB,EAA2B,IAAIynB,GAKrC,GAJAvrC,KAAKksE,GAAcpoD,EACnB9jB,KAAKosE,GAAiCpsE,KAAKsmC,EAAKutB,cAAc7zD,KAAKmsE,IACnEnsE,KAAKsmC,EAAK4sB,qBAAqBlzD,KAAKksE,IAEhClsE,KAAKgxE,KACRhxE,KAAK2rE,IAA4B,OAC3B,GAAI3rE,KAAKixE,KACfjxE,KAAK4rE,IAA0B,OACzB,GAAI5rE,KAAKyrE,GACf,GAAKzrE,KAAKsmC,EAAK0T,UAAU4B,yBAAsD,GAA5B57C,KAAK0jE,GAAQllD,YAAqBxe,KAAKkxE,KACzFptD,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAM,EAAG,SAEzD,GAA4B,MAAxBtmC,KAAK0jE,GAAQoF,QAChBhlD,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAMtmC,KAAK0jE,GAAQoF,QAAQv5D,MAAOvP,KAAK0jE,GAAQoF,QAAQt5D,UACjG,CACN,MAAMD,EAAgB3gB,KAAKsgB,IAAI,EAAGtgB,KAAKyB,KAAK2P,KAAKsmC,EAAKnmC,KAAKmb,YAAc,GAAKvtB,EAAOqF,aAAcxE,KAAKsU,MAAMlD,KAAK0jE,GAAQsF,UAAYj7E,EAAOqF,cAAgBrF,EAAOqF,eAC/Joc,EAAcD,EAAQxhB,EAAOqF,aACnC0wB,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAM/2B,EAAOC,SAGzD,GAAIxP,KAAKkxE,KACflxE,KAAK6rE,IAA6B,OAC5B,GAAI7rE,KAAK0jE,GAAQmF,OAAiC,MAAxB7oE,KAAK0jE,GAAQoF,QAAiB,CAC9DhlD,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAM,EAAG,IAQzD,MAAM71B,EAAa,IAAIpB,EAAKrP,KAAK0jE,GAAQp0D,MAAOtP,KAAK0jE,GAAQn0D,MAAOvP,KAAK0jE,GAAQl0D,IAAK,EAAGxP,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,UACpIqQ,EAAKd,KAAO,GACZ,IAAK,MAAMsnC,KAAUj3C,KAAK0jE,GAAQ/zD,KACjCc,EAAKd,KAAKnhB,KAAKugB,EAAY,EAAGkoC,EAAOjoC,KAAMioC,EAAOpjD,SAEnDiwB,EAAS2pB,OAAO,IAAIuI,GAA0Bh2C,KAAKsmC,EAAMtmC,KAAKsmC,EAAKlmC,QAASJ,KAAKsmC,EAAKvqB,MACtF,MAAMD,EAA0B9b,KAAKsmC,EAAK6qC,kBAAkBnxE,KAAKopE,IACjE,GAAe,MAAXttD,EAAiB,MAAM,IAAIlsB,MAG/B,GAFAk0B,EAAS2pB,OAAO,IAAI6K,GAAgBt4C,KAAKsmC,EAAMxqB,EAASrL,EAAMzQ,KAAK0jE,GAAQqF,WAEvE/oE,KAAKsmC,EAAKmoC,oBAAsBzuE,KAAKsmC,EAAKzN,MAAM7L,QAAS,CAE5D,MAAM/c,EAAmBrhB,KAAKyB,IAAItC,EAAOqF,aAAc4M,KAAK0jE,GAAQl0D,IAAMxP,KAAK0jE,GAAQn0D,OACvFvP,KAAKsmC,EAAKzN,MAAMjQ,kBAAoB3Y,EACpCjQ,KAAKsmC,EAAKzN,MAAM/P,iBAAmB,CAAC9oB,KAAK0jE,GAAQp0D,OACjDtP,KAAKsmC,EAAKzN,MAAMhQ,kBAAmB,GAGrC7oB,KAAKoxE,MAyBCv3E,KACHmG,KAAKsmC,EAAKmoC,mBAAqBzuE,KAAKioC,GAAYjoC,KAAKsmC,EAAKzN,MAAMk4C,oBAMpE,MAAMzC,EAA2BtuE,KAAKsmC,EAAKutB,cAAc7zD,KAAKksE,IAE9D,IAAKlsE,KAAKkrE,IAAkBlrE,KAAKgoC,GAAchoC,KAAK0jE,GAAQmF,OAASyF,EAAiB,CACrF,MAAM+C,EAAarxE,KAAK+nC,EAAU/nC,KAAKsrE,GACjCgG,EAAatxE,KAAKyhD,GAAUzhD,KAAKurE,GACnC38E,KAAKe,KAAK0hF,EAAKA,EAAKC,EAAKA,GAAM,IAClCtxE,KAAKkrE,IAAiB,EACtBlrE,KAAKmrE,GAAmBv8E,KAAKC,IAAIwiF,IAAOziF,KAAKC,IAAIyiF,IAQnD,GAJItxE,KAAKyrE,IAAczrE,KAAKmrE,IAAoBv8E,KAAKC,IAAImR,KAAKsrE,GAAetrE,KAAK+nC,GAAW,IAC5F/nC,KAAK0rE,IAAiB,GAGnB1rE,KAAKkrE,IAAkBlrE,KAAKgoC,GAAchoC,KAAK0jE,GAAQmF,OAASyF,EAAiB,CACpFtuE,KAAKksE,GAAavgC,OAClB,MAAM7nB,EAA2B,IAAIynB,GACrCvrC,KAAKksE,GAAcpoD,EACnB9jB,KAAKsmC,EAAK4sB,qBAAqBlzD,KAAKksE,IAEpC,MAAMn0B,EAAsB/3C,KAAK4uE,KAC3B1iD,EAAsBlsB,KAAKuxE,GAAmBvxE,KAAK+nC,EAAU/nC,KAAKwtE,IACxE,GAAIxtE,KAAK2rE,GACR7nD,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAM13C,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAI2P,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,aAAc84B,IAAelsB,KAAKsmC,EAAK0T,UAAUuB,sBAChKv7C,KAAKoxE,UACC,GAAIpxE,KAAK4rE,GACf9nD,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAMtmC,KAAKsmC,EAAK0T,UAAUsB,sBAAuB1sD,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAI2P,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,aAAc84B,MACxKlsB,KAAKoxE,UACC,GAAIpxE,KAAK6rE,GAA4B,CAC3C,MAAM/vD,EAA0B9b,KAAKsmC,EAAK6qC,kBAAkBnxE,KAAKopE,IACjE,GAAIppE,KAAKkrE,IAA6B,MAAXpvD,EAAiB,CAC3C9b,KAAKksE,GAAavgC,OAClB,MAAM7nB,EAA2B,IAAIynB,GACrCvrC,KAAKksE,GAAcpoD,EACnB9jB,KAAKsmC,EAAK4sB,qBAAqBlzD,KAAKksE,IAEpC,MAAMsF,EAAuBzjF,EAAOmE,OAAO8N,KAAKsmC,EAAKnmC,KAAK8a,OAAO7oB,MAAMg1B,QAAOyf,GAAKA,IAAGz4C,OAChFqjF,EAAqBzxE,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SAAW,EAAIJ,KAAKsmC,EAAKnmC,KAAKkb,IAAMm2D,EAEpGE,EAAuB9iF,KAAKmb,OAAO/J,KAAK+nC,EAAU/nC,KAAKsrE,KAAiBtrE,KAAKwtE,GAAaz1B,IAAgBA,EAC1G45B,EAA2B/iF,KAAKmb,OAAO/J,KAAKurE,GAAevrE,KAAKyhD,KAAYzhD,KAAKirE,GAAewG,IACtG3tD,EAAS2pB,OAAO,IAAIgP,GAAwBz8C,KAAKsmC,EAAMtmC,KAAKsmC,EAAKlmC,QAAS0b,EAAS41D,EAAcC,UAG5F,GAAI3xE,KAAKyrE,IAAczrE,KAAK0rE,IAElC,GAAI1rE,KAAKkrE,GAAgB,CACxB,IAAI37D,EAAgB3gB,KAAKsgB,IAAI,EAAGtgB,KAAKyB,KAAK2P,KAAKsmC,EAAKnmC,KAAKmb,YAAc,GAAKvtB,EAAOqF,aAAcxE,KAAKsU,MAAMlD,KAAK0jE,GAAQsF,UAAYj7E,EAAOqF,cAAgBrF,EAAOqF,eAC/Joc,EAAcD,EAAQxhB,EAAOqF,aAOjC,GAN4B,MAAxB4M,KAAK0jE,GAAQoF,UAChBv5D,EAAQ3gB,KAAKsgB,IAAIK,EAAOvP,KAAK0jE,GAAQoF,QAAQv5D,OAC7CC,EAAM5gB,KAAKyB,IAAImf,EAAKxP,KAAK0jE,GAAQoF,QAAQt5D,MAItC0c,EAAc3c,EAAO,CACxBA,EAAQ,EACR,MAAMuM,EAA0B9b,KAAKsmC,EAAK6qC,kBAAkBnxE,KAAKopE,IACjE,GAAe,MAAXttD,EACH,IAAK,IAAI3tB,EAAY,EAAGA,EAAI2tB,EAAQvL,MAAMniB,OAAQD,IAC7C2tB,EAAQvL,MAAMpiB,GAAGohB,OAAS2c,IAC7B3c,EAAQuM,EAAQvL,MAAMpiB,GAAGohB,OAEtBuM,EAAQvL,MAAMpiB,GAAGqhB,KAAO0c,IAC3B3c,EAAQuM,EAAQvL,MAAMpiB,GAAGqhB,KAI5B,IAAK,IAAI2Z,EAAe,EAAGA,GAAQnpB,KAAKsmC,EAAKnmC,KAAKmb,YAAa6N,IAAQ,CACtE,MAAMC,EAAeD,EAAOp7B,EAAOqF,aAC/Bmc,GAAS6Z,GAAQA,GAAQ8C,IAC5B3c,EAAQ6Z,IAKX,GAAI8C,EAAc1c,EAAK,CACtBA,EAAMzhB,EAAOqF,aAAe4M,KAAKsmC,EAAKnmC,KAAKmb,YAC3C,MAAMQ,EAA0B9b,KAAKsmC,EAAK6qC,kBAAkBnxE,KAAKopE,IACjE,GAAe,MAAXttD,EACH,IAAK,IAAI3tB,EAAY,EAAGA,EAAI2tB,EAAQvL,MAAMniB,OAAQD,IAAK,CACtD,GAAI2tB,EAAQvL,MAAMpiB,GAAGohB,OAAS2c,EAAa,CAC1C1c,EAAMsM,EAAQvL,MAAMpiB,GAAGohB,MACvB,MAED,GAAIuM,EAAQvL,MAAMpiB,GAAGqhB,KAAO0c,EAAa,CACxC1c,EAAMsM,EAAQvL,MAAMpiB,GAAGqhB,IACvB,OAIH,IAAK,IAAI2Z,EAAe,EAAGA,GAAQnpB,KAAKsmC,EAAKnmC,KAAKmb,YAAa6N,IAAQ,CACtE,MAAMC,EAAeD,EAAOp7B,EAAOqF,aAC/B84B,EAAc9C,GAAQA,EAAO5Z,IAChCA,EAAM4Z,IAKTtF,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAM/2B,EAAOC,IAC7DxP,KAAKoxE,WAIN,GAA4B,MAAxBpxE,KAAK0jE,GAAQoF,QAAiB,CAIjC,IAAI8I,EACAC,EAJJ/tD,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAM,EAAG,IAKrDpa,EAAclsB,KAAK0jE,GAAQn0D,OAC9BqiE,GAAY,EACZC,EAAe7xE,KAAK0jE,GAAQn0D,MAAQ2c,IAEpC0lD,GAAY,EACZC,EAAe3lD,EAAclsB,KAAK0jE,GAAQn0D,MAAQwoC,GAGnD,IA2CIxoC,EACAC,EA5CAqgE,EAAwB93B,EAC5B,IAAK,IAAI5pD,EAAY4pD,EAAa5pD,GAAK6R,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,aAAcjF,GAAK4pD,EAAa,CAC1G,GAAmB,GAAfA,GACH,GAAI5pD,EAAI,QAED,GAAIA,GAAKJ,EAAOqF,aAAe,GACrC,GAAIjF,EAAI,GAAK,GAAKA,EAAI,GAAK,EAC1B,cAEK,GAAIA,GAA2B,IAAtBJ,EAAOqF,cACtB,GAAIjF,EAAI,GAAK,GAAKA,EAAI,GAAK,EAC1B,cAEK,GAAIA,EAAIJ,EAAOqF,cAAgB,EACrC,cAGD,GAAIjF,GAAK,EAAI4pD,GACZ5pD,EAAIJ,EAAOqF,cAAgB,GAC3BjF,GAA2B,EAAtBJ,EAAOqF,aAAqB,GACjCjF,GAA2B,EAAtBJ,EAAOqF,aAAqB,GACjCjF,GAA2B,EAAtBJ,EAAOqF,aAAqB,EACjC,SAIF,MAAM0+E,EAAwB3jF,EAC9B,GAAI2jF,GAAiBD,EAAc,CAClChC,EAAgBiC,EAChB,MAMD,GAJIA,EAAgBD,IACnBhC,EAAgBiC,GAGbA,EAAgBD,EAAc,CAC7BhC,EAAgBgC,EAAe95B,IAClC83B,EAAgBiC,GAEjB,OAiBF,GAVIF,GACHpiE,EAAMxP,KAAK0jE,GAAQn0D,MACnBA,EAAQC,EAAMqgE,IAEdtgE,EAAQvP,KAAK0jE,GAAQn0D,MACrBC,EAAMD,EAAQsgE,GAEXtgE,EAAQ,IAAGA,EAAQ,GACnBC,EAAMxP,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,eAAcoc,EAAMxP,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,cAElGmc,EAAQC,EAAK,CAChBsU,EAAS2pB,OAAO,IAAIuI,GAA0Bh2C,KAAKsmC,EAAMtmC,KAAKsmC,EAAKlmC,QAASJ,KAAKsmC,EAAKvqB,MACtF,MAAMD,EAA0B9b,KAAKsmC,EAAK6qC,kBAAkBnxE,KAAKopE,IACjE,GAAe,MAAXttD,EAAiB,MAAM,IAAIlsB,MAG/B,IAAIzB,EACJ,IAFA21B,EAAS2pB,OAAO,IAAIwH,GAAmBj1C,KAAKsmC,EAAMxqB,EAASvM,EAAOC,EAAK,IAAIH,EAAKrP,KAAK0jE,GAAQp0D,MAAO,EAAG,EAAG,KAErGnhB,EAAI,EAAGA,EAAI2tB,EAAQvL,MAAMniB,UACzB0tB,EAAQvL,MAAMpiB,GAAGohB,OAASC,GADOrhB,KAGtC,MAAM4jF,EAAgB,IAAI1iE,EAAKrP,KAAK0jE,GAAQp0D,MAAOC,EAAOC,EACzDxP,KAAKsmC,EAAKnmC,KAAK+Z,iBAAiBla,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAAUJ,KAAKsmC,EAAKlmC,QAASJ,KAAKsmC,EAAKoI,qBAAqB1uC,KAAKopE,IAAappE,KAAK0jE,GAAQp0D,OACpKtP,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,UAC5C0jB,EAAS2pB,OAAO,IAAI6K,GAAgBt4C,KAAKsmC,EAAMxqB,EAASi2D,EAAS5jF,IACjE6R,KAAKwuE,GAAUuD,GAEf/xE,KAAK8rE,GAAY8F,EAAYriE,EAAQC,EACrCxP,KAAK+rE,GAAa/rE,KAAK0jE,GAAQp0D,MAC/BtP,KAAKgsE,GAAc+F,EAAQpiE,KAAKiiE,EAAY,EAAI,GAAG/9E,OACnDmM,KAAKisE,IAAe,EAGrB,IAAI+F,EAA8BhyE,KAAK86C,GAEvC96C,KAAK86C,GAAW96C,KAAKsmC,EAAK6qC,kBAAkBnxE,KAAKopE,IAE5B,MAAjBppE,KAAK86C,IAAoB96C,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,UAAYJ,KAAKmpE,IAAgB6I,GAAehyE,KAAK86C,IAE1H96C,KAAK86C,GAASvqC,MAAM0d,MAAK,SAAUC,EAAGC,GAAK,OAAQD,EAAE3e,OAAS4e,EAAE5e,MAAS2e,EAAExe,QAAQ,GAAKye,EAAEze,QAAQ,GAAKwe,EAAE3e,MAAQ4e,EAAE5e,cAG9G,GAAIvP,KAAKmrE,GAAkB,CAGjCrnD,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAM,EAAG,IAEzD,MAAM5jB,GAAiB1iB,KAAK+nC,EAAU/nC,KAAKsrE,IAAgBtrE,KAAKwtE,GAE1DyE,EAAsBjyE,KAAK0jE,GAAQoF,QAAQn5D,KAAK3P,KAAK0jE,GAAQuF,cACnE,IAAIryB,EAAsBhoD,KAAKmb,OAAO/J,KAAK0jE,GAAQoF,QAAQv5D,MAAQ0iE,EAAWjjE,KAAO0T,GAASq1B,GAAeA,EAI7G,GAHInB,EAAc,IAAGA,EAAc,GAC/BA,EAAc52C,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,eAAcwjD,EAAc52C,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,cAEjG,MAAjB4M,KAAK86C,GAAkB,MAAM,IAAIlrD,MAErC,GAAIgnD,GAAe52C,KAAK0jE,GAAQoF,QAAQv5D,OAASvP,KAAK0jE,GAAQuF,cAAgBjpE,KAAK0jE,GAAQoF,QAAQn5D,KAAKvhB,OAAS,GAChHwoD,GAAe52C,KAAK0jE,GAAQoF,QAAQt5D,KAAoC,GAA7BxP,KAAK0jE,GAAQuF,aAExDnlD,EAAS2pB,OAAO,IAAI6K,GAAgBt4C,KAAKsmC,EAAMtmC,KAAK86C,GAAU96C,KAAK0jE,GAAQoF,QAAS9oE,KAAK0jE,GAAQqF,UAAU,IAE3G/oE,KAAKisE,IAAe,MACd,CACN,MAAM18D,EAAgB3gB,KAAKyB,IAAI2P,KAAK0jE,GAAQoF,QAAQv5D,MAAOqnC,GACrDpnC,EAAc5gB,KAAKsgB,IAAIlP,KAAK0jE,GAAQoF,QAAQt5D,IAAKonC,GAEvD52C,KAAK8rE,GAAYl1B,EACjB52C,KAAK+rE,GAAa/rE,KAAK0jE,GAAQoF,QAAQp5D,SAAoC,GAA5B1P,KAAK0jE,GAAQllD,WAAmB,EAAIxe,KAAK0jE,GAAQllD,YAAcxe,KAAK0jE,GAAQoF,QAAQn5D,KAAK3P,KAAK0jE,GAAQuF,cAAc9tE,SACnK6E,KAAKgsE,GAAchsE,KAAK0jE,GAAQoF,QAAQn5D,KAAK3P,KAAK0jE,GAAQuF,cAAcp1E,OACxEmM,KAAKisE,IAAe,EAEpBnoD,EAAS2pB,OAAO,IAAIwH,GAAmBj1C,KAAKsmC,EAAMtmC,KAAK86C,GAAUvrC,EAAOC,EAAKxP,KAAK0jE,GAAQoF,UAC1FhlD,EAAS2pB,OAAO,IAAIkJ,GAAc32C,KAAKsmC,EAAMtmC,KAAK0jE,GAAQoF,QAAS9oE,KAAK0jE,GAAQuF,aAAcryB,IAC9F52C,KAAKwuE,GAAUxuE,KAAK0jE,GAAQoF,eAEvB,IAAgC,GAA5B9oE,KAAK0jE,GAAQllD,YAAoBxe,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAAU,CAG9F0jB,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAM,EAAG,IAEzD,MAAMiY,EACL3vD,KAAKsgB,IAAIlP,KAAK0jE,GAAQoF,QAAQv5D,MAC7B3gB,KAAKyB,IAAI2P,KAAK0jE,GAAQoF,QAAQt5D,IAC7B5gB,KAAKmb,MAAM/J,KAAK+nC,GAAW/nC,KAAKwtE,GAAaz1B,IAAgBA,IAE3D/3C,KAAK0jE,GAAQoF,QAAQv5D,MAE1B,IAAIg9B,EACAH,EAAmBpsC,KAAK0jE,GAAQoF,QAAQn5D,KAAK,GAC7C6uC,EAAqB,EACrBC,EAAuB,EACvBnkC,EAActa,KAAKsmC,EAAKnmC,KAAKsa,aAAaza,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAAUJ,KAAKsmC,EAAKlmC,QAASJ,KAAKsmC,EAAKoI,qBAAqB1uC,KAAKopE,IAAappE,KAAK0jE,GAAQp0D,OAG9K4iE,EAAyB,GAAOtjF,KAAKuB,IAAImqB,EAAK,IAC9C63D,EAAyB,GAAOvjF,KAAKuB,IAAImqB,EAAK,IAC9C83D,EAAoBpyE,KAAKurE,GAAevrE,KAAKyhD,GAAU,GAAK,EAC5D4wB,EAAqBzjF,KAAKyB,IAAIzB,KAAKC,IAAImR,KAAKurE,GAAevrE,KAAKyhD,IAAWywB,EAAgB,GAAKtjF,KAAKsgB,IAAI,EAAGtgB,KAAKC,IAAImR,KAAKurE,GAAevrE,KAAKyhD,IAAW0wB,EAAiB,GAG1KE,EAAa,IAChBryE,KAAKyrE,IAAa,GAGnB,IAAK,IAAIt9E,EAAY,EAAGA,EAAI6R,KAAK0jE,GAAQoF,QAAQn5D,KAAKvhB,OAAQD,IAAK,CAGlE,GAFAo+C,EAAUH,EACVA,EAAUpsC,KAAK0jE,GAAQoF,QAAQn5D,KAAKxhB,GAChCowD,EAAWnS,EAAQp9B,KAAM,SAC7B,GAAIuvC,EAAWhS,EAAQv9B,KAAM,MAAM,IAAIpf,MACvC,MAAM0iF,GAAuB/zB,EAAWhS,EAAQv9B,OAASo9B,EAAQp9B,KAAOu9B,EAAQv9B,MAChFwvC,EAAa5vD,KAAKmb,MAAMwiC,EAAQ14C,QAAU,EAAMy+E,GAAelmC,EAAQv4C,OAASy+E,EAAcF,EAAWC,GAEjF,GAApBryE,KAAKqpE,aAAuD,GAA/BrpE,KAAKsmC,EAAKisC,mBAA+BvyE,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,WAClHo+C,EAA0C,EAA7B5vD,KAAKsU,MAAMs7C,EAAa,IAElCA,EAAa,IAAGA,EAAa,GAC7BA,EAAalkC,IAAKkkC,EAAalkC,GACnCmkC,EAAez+C,KAAK2vE,GAAapjC,EAAQpxC,UAAY,EAAMm3E,GAAelmC,EAAQjxC,SAAWm3E,EAActyE,KAAK0jE,GAAQoF,QAAQp5D,QAAQ,GAAI,EAAG1P,KAAKsmC,EAAKnmC,KAAKrH,UAAYkH,KAAK0jE,GAAQoF,QAAQp5D,QAAQ,GAEvM,MAGD1P,KAAK8rE,GAAY9rE,KAAK0jE,GAAQoF,QAAQv5D,MAAQgvC,EAC9Cv+C,KAAK+rE,GAAa/rE,KAAK0jE,GAAQoF,QAAQp5D,SAAoC,GAA5B1P,KAAK0jE,GAAQllD,WAAmB,EAAIxe,KAAK0jE,GAAQllD,YAAcigC,EAC9Gz+C,KAAKgsE,GAAcxtB,EACnBx+C,KAAKisE,IAAe,EAEpBnoD,EAAS2pB,OAAO,IAAI6Q,GAAiBt+C,KAAKsmC,EAAMtmC,KAAK0jE,GAAQoF,QAASvqB,EAAUC,EAAYC,EAAcz+C,KAAKspE,YAC/GtpE,KAAKwuE,GAAUxuE,KAAK0jE,GAAQoF,aACtB,CAMN,GAJAhlD,EAAS2pB,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAM,EAAG,IAEzDtmC,KAAKgsE,GAAchsE,KAAK0jE,GAAQoF,QAAQn5D,KAAK3P,KAAK0jE,GAAQuF,cAAcp1E,OAEnD,MAAjBmM,KAAK86C,GAAkB,MAAM,IAAIlrD,MAErC,IAAIwnD,EACAC,EACAr3C,KAAK+nC,GAAW/nC,KAAKsrE,IACxBl0B,EAAYxoD,KAAKsgB,IAAIlP,KAAK0jE,GAAQoF,QAAQv5D,MAAOvP,KAAK0jE,GAAQt6C,MAC9DiuB,EAAUnrB,EAAc6rB,IAExBX,EAAYxoD,KAAKyB,IAAI2P,KAAK0jE,GAAQoF,QAAQt5D,IAAKxP,KAAK0jE,GAAQt6C,KAAO2uB,GACnEV,EAAUnrB,GAEPmrB,EAAU,IAAGA,EAAU,GACvBA,EAAUr3C,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,eAAcikD,EAAUr3C,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,cAC1GikD,EAAUr3C,KAAK0jE,GAAQoF,QAAQt5D,KAClCsU,EAAS2pB,OAAO,IAAIwH,GAAmBj1C,KAAKsmC,EAAMtmC,KAAK86C,GAAU96C,KAAK0jE,GAAQoF,QAAQv5D,MAAO8nC,EAASr3C,KAAK0jE,GAAQoF,UAEhHzxB,EAAUr3C,KAAK0jE,GAAQoF,QAAQv5D,OAClCuU,EAAS2pB,OAAO,IAAIwH,GAAmBj1C,KAAKsmC,EAAMtmC,KAAK86C,GAAUzD,EAASr3C,KAAK0jE,GAAQoF,QAAQt5D,IAAKxP,KAAK0jE,GAAQoF,UAGlH,IAAInM,EAAmBpmC,OAAO0H,UAC1BnlC,GAAoBy9B,OAAO0H,UAC/B,IAAK,MAAM3uB,KAAStP,KAAK0jE,GAAQoF,QAAQp5D,QACpCitD,EAAWrtD,IAAOqtD,EAAWrtD,GAC7BxW,EAAWwW,IAAOxW,EAAWwW,GAKlC,GAHAqtD,GAAY38D,KAAK0jE,GAAQoF,QAAQp5D,QAAQ1P,KAAK0jE,GAAQllD,YACtD1lB,GAAYkH,KAAK0jE,GAAQoF,QAAQp5D,QAAQ1P,KAAK0jE,GAAQllD,YAEjDxe,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAMzC,CACJ,MAAMk3C,EAAiBt3C,KAAK2vE,GAAa3vE,KAAK+rE,IAAapP,EAAU5uE,EAAO4K,SAAW,GACvFmrB,EAAS2pB,OAAO,IAAI0J,GAAgBn3C,KAAKsmC,EAAMtmC,KAAK0jE,GAAQoF,QAAS1xB,EAAWC,EAASC,EAAQt3C,KAAK0jE,GAAQllD,aAC9Gxe,KAAK+rE,GAAaz0B,MATqC,CACvD,MAAMA,EAAiBt3C,KAAK2vE,GAAa3vE,KAAK8uE,GAAgB9uE,KAAKyhD,KAAWkb,GAAW38D,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SAAWrS,EAAO2K,UAAY,EAAIsH,KAAKsmC,EAAKnmC,KAAKrH,UAAYA,GAEjMgrB,EAAS2pB,OAAO,IAAI0J,GAAgBn3C,KAAKsmC,EAAMtmC,KAAK0jE,GAAQoF,QAAS1xB,EAAWC,EAASC,EAAQt3C,KAAK0jE,GAAQllD,aAC9Gxe,KAAK+rE,GAAaz0B,EAOnBt3C,KAAKwuE,GAAUxuE,KAAK0jE,GAAQoF,SAE5B9oE,KAAK8rE,GAAYz0B,EACjBr3C,KAAKisE,IAAe,GAIjBjsE,KAAKgoC,GAAchoC,KAAK0jE,GAAQmF,OAASyF,IAC9CtuE,KAAKokE,KACLpkE,KAAK6oC,MAiEChvC,GAAqBuxC,GAC5BprC,KAAKmsE,GAA0B/gC,EAC/BprC,KAAKsmC,EAAKqa,OAAO3gD,KAAKmsE,GAAyBnsE,KAAKosE,IAG7CvyE,KACP,GAAImG,KAAKorE,GACR,IAAKprE,KAAKgoC,IAAehoC,KAAK0jE,GAAQmF,QAAU7oE,KAAKkrE,KAAmBlrE,KAAKisE,IAAgBjsE,KAAKyrE,IAAczrE,KAAK2rE,IAA6B3rE,KAAK4rE,IAA2B5rE,KAAK6rE,GACtL7rE,KAAKiqE,GAAYpsE,aAAa,aAAc,UAEvCmC,KAAK6qE,kBACT7qE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,UAAW,QACpDyB,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAKkqE,kBAAkBrsE,aAAa,kBAAmB,cAGlD,CACNmC,KAAKiqE,GAAYpsE,aAAa,aAAc,WAE5C,MAAMgpC,EAAY7mC,KAAKwtE,GAAaxtE,KAAK8rE,GACnChlC,EAAY9mC,KAAK+uE,GAAoB/uE,KAAK+rE,GAAa/rE,KAAKusE,IAC5DxH,GAAkB/kE,KAAKirE,GAAejrE,KAAKgvE,IAAgB,EAC3DjoC,EAAgB,GAChBC,EAAiB,GACjB1sB,EAActa,KAAKsmC,EAAKnmC,KAAKsa,aAAaza,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAAUJ,KAAKsmC,EAAKlmC,QAASJ,KAAKsmC,EAAKoI,qBAAqB1uC,KAAKopE,IAAappE,KAAK0jE,GAAQp0D,OAGpL,IAAIkjE,EAAqB,GAEzBA,GAAc,KAAO/4E,EAAaotC,GAAK,IAAMptC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,IAAQ,IACnGk4D,GAAc,KAAO/4E,EAAaotC,GAAK,IAAMptC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,GAAO0sB,GAAU,IAC5GwrC,GAAc,KAAO/4E,EAAaotC,GAAK,IAAMptC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,IAAQ,IACnGk4D,GAAc,KAAO/4E,EAAaotC,GAAK,IAAMptC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,GAAO0sB,GAAU,IAC5GwrC,GAAc,KAAO/4E,EAAaotC,GAAK,IAAMptC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,IAAQ,IACnGk4D,GAAc,KAAO/4E,EAAaotC,EAAIE,GAAS,IAAMttC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,IAAQ,IAC3Gk4D,GAAc,KAAO/4E,EAAaotC,GAAK,IAAMptC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,IAAQ,IACnGk4D,GAAc,KAAO/4E,EAAaotC,EAAIE,GAAS,IAAMttC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,IAAQ,IAC3Gk4D,GAAc,KAAO/4E,EAAaotC,GAAK,IAAMptC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,IAAQ,IACnGk4D,GAAc,KAAO/4E,EAAaotC,EAAIE,GAAS,IAAMttC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,IAAQ,IAC3Gk4D,GAAc,KAAO/4E,EAAaotC,GAAK,IAAMptC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,IAAQ,IACnGk4D,GAAc,KAAO/4E,EAAaotC,EAAIE,GAAS,IAAMttC,EAAaqtC,EAAIi+B,GAAU/kE,KAAKgsE,GAAc1xD,IAAQ,IAE3Gta,KAAKiqE,GAAYpsE,aAAa,IAAK20E,QAGpC,GAAKxyE,KAAKioC,IAAcjoC,KAAKgoC,GAAehoC,KAAK0jE,GAAQmF,MAUxD,GAFA7oE,KAAKiqE,GAAYpsE,aAAa,aAAc,WAExCmC,KAAKgxE,KAA6B,CACrC,MAAMhnC,EAAiBhqC,KAAKwtE,GAAaxtE,KAAKsmC,EAAK0T,UAAUsB,sBACvDjS,EAAe5vC,EAAauwC,EAAS,GACrC0Y,EAAgBjpD,EAAauwC,EAAS,GACtC8Y,EAAiB9iD,KAAK+uE,IAAqB,IACjD/uE,KAAKiqE,GAAYpsE,aAAa,IAAK,KAAOwrC,EAAO,QAAUA,EAAO,IAAMyZ,EAAS,MAAQJ,EAAQ,IAAMI,EAAS,MAAQJ,EAAQ,aAC1H,GAAI1iD,KAAKixE,KAA2B,CAC1C,MAAMjnC,EAAiBhqC,KAAKwtE,GAAaxtE,KAAKsmC,EAAK0T,UAAUuB,oBACvDlS,EAAe5vC,EAAauwC,EAAS,GACrC0Y,EAAgBjpD,EAAauwC,EAAS,GACtC8Y,EAAiB9iD,KAAK+uE,IAAqB,IACjD/uE,KAAKiqE,GAAYpsE,aAAa,IAAK,KAAOwrC,EAAO,QAAUA,EAAO,IAAMyZ,EAAS,MAAQJ,EAAQ,IAAMI,EAAS,MAAQJ,EAAQ,aAC1H,GAAI1iD,KAAKkxE,KAAwB,CACvC,MAAM7nC,EAAe5vC,EAAauG,KAAKwtE,GAAaxtE,KAAKsmC,EAAK0T,UAAUsB,sBAAwB,GAC1FoH,EAAgBjpD,EAAauG,KAAKwtE,GAAaxtE,KAAKsmC,EAAK0T,UAAUuB,oBAAsB,GACzFuH,EAAiB9iD,KAAK+uE,IAAqB,IACjD/uE,KAAKiqE,GAAYpsE,aAAa,IAAK,KAAOwrC,EAAO,QAAUA,EAAO,IAAMyZ,EAAS,MAAQJ,EAAQ,IAAMI,EAAS,MAAQJ,EAAQ,aAEhI1iD,KAAKyyE,GAAUzyE,KAAKiqE,GAAajqE,KAAK0jE,GAAQp0D,MAAOtP,KAAK0jE,GAAQn0D,MAAOvP,KAAK0jE,GAAQ/zD,MAAO3P,KAAKirE,GAAejrE,KAAKgvE,IAAgB,EAAI,GAAG,EAAMhvE,KAAKusE,SA3BzJvsE,KAAKiqE,GAAYpsE,aAAa,aAAc,UACvCmC,KAAK6qE,kBACT7qE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,UAAW,QACpDyB,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAKkqE,kBAAkBrsE,aAAa,kBAAmB,UA6BnDhE,KACHmG,KAAKsmC,EAAK0T,UAAU4B,wBACvB57C,KAAK8pE,GAAejsE,aAAa,aAAc,WAC/CmC,KAAK8pE,GAAejsE,aAAa,IAAKmgB,OAAOhe,KAAKwtE,GAAaxtE,KAAKsmC,EAAK0T,UAAUsB,wBACnFt7C,KAAK8pE,GAAejsE,aAAa,QAASmgB,OAAOhe,KAAKwtE,IAAcxtE,KAAKsmC,EAAK0T,UAAUuB,oBAAsBv7C,KAAKsmC,EAAK0T,UAAUsB,0BAElIt7C,KAAK8pE,GAAejsE,aAAa,aAAc,UAI1ChE,eACN,MAAMg9B,EAA8B72B,KAAKsmC,EAAK6qC,kBAAkBnxE,KAAKopE,IAkBrE,GAhBIppE,KAAK86C,IAAYjkB,GAAgC,MAAjB72B,KAAK86C,KACpC96C,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,UAAYJ,KAAKmpE,IAA+B,MAAftyC,GAE7EA,EAAYtmB,MAAM0d,MAAK,SAAUC,EAAGC,GAAK,OAAQD,EAAE3e,OAAS4e,EAAE5e,MAAS2e,EAAExe,QAAQ,GAAKye,EAAEze,QAAQ,GAAKwe,EAAE3e,MAAQ4e,EAAE5e,SAElHvP,KAAKksE,GAAc,KACnBlsE,KAAK6pC,GAAoB,OAE1B7pC,KAAK86C,GAAWjkB,EAEhB72B,KAAKwmC,EAAexmC,KAAK6nC,UAAUj7B,YACnC5M,KAAKymC,EAAgBzmC,KAAK6nC,UAAU6qC,aACpC1yE,KAAKwtE,GAAaxtE,KAAKwmC,GAAgBxmC,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,cAC3E4M,KAAKusE,GAAgBvsE,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASoX,OAASxX,KAAKsmC,EAAKnmC,KAAKkb,IAGpFrb,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SAC9CJ,KAAKgvE,GAAe,EACpBhvE,KAAKuwE,GAAcxiF,EAAO2K,eAEtB,GAAIsH,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,UAIjD,GAHAJ,KAAKgvE,GAAehvE,KAAKsqE,GACzBtqE,KAAKuwE,GAAcxiF,EAAO4K,SAEL,MAAjBqH,KAAK86C,GAER,IAAK,MAAMrqC,KAAQzQ,KAAK86C,GAASvqC,MAAO,CACvC,IAAIjB,EAAQmB,EAAKf,QAAQ,GACrB0gE,EAAoBpwE,KAAKsmC,EAAKnmC,KAAKsa,cAAa,EAAMza,KAAKsmC,EAAKlmC,QAASJ,KAAKsmC,EAAKoI,qBAAqB1uC,KAAKopE,IAAa95D,GAC1H+gE,EAAyB,EAC7B,IAAK,MAAMlgE,KAAOM,EAAKd,KAClBQ,EAAItc,OAASw8E,IAChBA,EAAiBlgE,EAAItc,QAIvB,GAAIw8E,EAAiBD,EACpB,IAAK,MAAMjgE,KAAOM,EAAKd,KACtBQ,EAAItc,OAASjF,KAAKmb,MAAMoG,EAAItc,QAAUu8E,EAAYC,UAOtDrwE,KAAKgvE,GAAe,EAEpBhvE,KAAKuwE,GAAcvwE,KAAKsmC,EAAKnmC,KAAKkb,IAAMrb,KAAKsmC,EAAKi4B,cAAgB,EAGnEv+D,KAAKirE,GAAejrE,KAAKymC,EAAgBzmC,KAAKuwE,GAE1CvwE,KAAK8sE,IAAmB9sE,KAAKsmC,EAAKnmC,KAAKsb,QAC1Czb,KAAK+sE,IAA8B/sE,KAAKsmC,EAAKnmC,KAAKe,mBAClDlB,KAAKgtE,IAA8BhtE,KAAKsmC,EAAKnmC,KAAKiB,mBAClDpB,KAAKitE,IAA4BjtE,KAAKsmC,EAAKnmC,KAAK4a,kBAChD/a,KAAK8sE,GAAkB9sE,KAAKsmC,EAAKnmC,KAAKsb,OACtCzb,KAAK+sE,GAA6B/sE,KAAKsmC,EAAKnmC,KAAKe,kBACjDlB,KAAKgtE,GAA6BhtE,KAAKsmC,EAAKnmC,KAAKiB,kBACjDpB,KAAKitE,GAA2BjtE,KAAKsmC,EAAKnmC,KAAK4a,gBAC/C/a,KAAK4tE,mBAGN5tE,KAAK8vE,GAAc9vE,KAAKqrE,GAAmBrrE,KAAKsmC,EAAKlmC,SAEjDJ,KAAKwsE,IAAkBxsE,KAAKwmC,GAAgBxmC,KAAKysE,IAAmBzsE,KAAKymC,IAC5EzmC,KAAKwsE,GAAiBxsE,KAAKwmC,EAC3BxmC,KAAKysE,GAAkBzsE,KAAKymC,EAC5BzmC,KAAK2pE,GAAe9rE,aAAa,QAAS,GAAKmC,KAAKwmC,GACpDxmC,KAAK2pE,GAAe9rE,aAAa,SAAU,GAAKmC,KAAKymC,GACrDzmC,KAAK6pE,GAAahsE,aAAa,SAAU,GAAKmC,KAAKymC,GACnDzmC,KAAK8pE,GAAejsE,aAAa,IAAK,KACtCmC,KAAK8pE,GAAejsE,aAAa,SAAU,GAAKmC,KAAKymC,IAGtD,MAAMksC,EAAY3yE,KAAKwmC,EAAexmC,KAAKsmC,EAAKnmC,KAAKmb,YACrD,GAAItb,KAAK0sE,IAAsBiG,GAAa3yE,KAAK2sE,IAAwB3sE,KAAKirE,IAAgBjrE,KAAK6yD,IAAmB7yD,KAAKsmC,EAAKgtB,UAAW,CAC1ItzD,KAAK0sE,GAAqBiG,EAC1B3yE,KAAK2sE,GAAuB3sE,KAAKirE,GACjCjrE,KAAKupE,GAAmB1rE,aAAa,QAAS,GAAK80E,GACnD3yE,KAAKupE,GAAmB1rE,aAAa,SAAU,GAAMmC,KAAKirE,GAAejrE,KAAKsmC,EAAKnmC,KAAKkb,KAExFrb,KAAKypE,GAAmB5rE,aAAa,QAAS,GAAK80E,GACnD3yE,KAAKypE,GAAmB5rE,aAAa,SAAU,GAAKmC,KAAKirE,IACzDjrE,KAAK0pE,GAAkB7rE,aAAa,QAAS,GAAK80E,GAClD3yE,KAAK0pE,GAAkB7rE,aAAa,SAAU,GAAMmC,KAAiB,IACrEA,KAAK0pE,GAAkB7rE,aAAa,IAAK,GAAMmC,KAAKgvE,GAAe,GACnEhvE,KAAKwqE,GAAmB3sE,aAAa,QAAS,IAAM80E,EAAY,IAChE3yE,KAAKwqE,GAAmB3sE,aAAa,SAAU,IAAMmC,KAAKirE,GAAe,IACrEjrE,KAAKirE,GAAejrE,KAAKgvE,KAC5BhvE,KAAKyqE,GAAkB5sE,aAAa,QAAS,IAAM80E,EAAY,IAC/D3yE,KAAKyqE,GAAkB5sE,aAAa,SAAU,IAAMmC,KAAKirE,GAAejrE,KAAKgvE,MAG9EhvE,KAAK6yD,GAAkB7yD,KAAKsmC,EAAKgtB,UAIjC,IAAIsf,EAA2B5yE,KAAKsmC,EAAKnmC,KAAKkb,IAAMrb,KAAKupE,GAAmBsJ,kBAE5E,GAAgC,GAA5BD,EACH,GAAIA,EAA2B,EAC9B,IAAK,IAAInmE,EAAY,EAAGA,EAAI7d,KAAKC,IAAI+jF,GAA2BnmE,IAAK,CACpE,MAAMiiE,EAA4B3vE,EAAI4nC,OACtC+nC,EAAU7wE,aAAa,IAAK,KAC5B6wE,EAAU7wE,aAAa,OAAQkC,EAAYiI,iBAC3ChI,KAAKupE,GAAmBzsE,YAAY4xE,GACpC1uE,KAAKuqE,GAAqB/7E,KAAKkgF,QAIhC,IAAK,IAAIjiE,EAAY,EAAGA,EAAI7d,KAAKC,IAAI+jF,GAA2BnmE,IAC9B,QAAjCqmE,EAAA9yE,KAAKupE,GAAmBwJ,iBAAS,IAAAD,GAAAA,EAAE37C,SACnCn3B,KAAKuqE,GAAqBjsD,MAK7B,IAAK,IAAI7R,EAAY,EAAGA,EAAIzM,KAAKsmC,EAAKnmC,KAAKkb,IAAK5O,IAAK,CAEpD,MAAMiiE,EAA4B1uE,KAAKuqE,GAAqB99D,GACtDq6B,GAAa9mC,KAAKsmC,EAAKnmC,KAAKkb,IAAM5O,GAAKzM,KAAKsmC,EAAKnmC,KAAKkb,IAE5DqzD,EAAU7wE,aAAa,QAAS,IAAM80E,EAAY,IAClDjE,EAAU7wE,aAAa,IAAK,IAAMipC,EAAI9mC,KAAKirE,GAAe,IAC1DyD,EAAU7wE,aAAa,SAAU,IAAMmC,KAAKirE,GAAe,IAC3DyD,EAAU7wE,aAAa,OACrB4O,GAAK7d,KAAKmb,MAAM/J,KAAKsmC,EAAKnmC,KAAKkb,IAAMzsB,KAAKokF,KAAK,OAAWhzE,KAAKsmC,EAAKgtB,UAClEvzD,EAAYmI,UACN,GAALuE,EAAS1M,EAAYkI,MAAQlI,EAAYiI,kBAKhDhI,KAAK4pE,GAt6CP,SAAqDqJ,GACpD,MAAMviE,EAAcuiE,EAAKC,WAAU,GAEnC,OADAD,EAAKE,WAAYC,aAAa1iE,EAAOuiE,GAC9BviE,EAm6CmB2iE,CAA4BrzE,KAAK4pE,IAEtD5pE,KAAKmpE,KACHnpE,KAAKgoC,GAAYhoC,KAAKokE,KAC3BpkE,KAAK6oC,KACL7oC,KAAKoxE,MAGN,IAAK,IAAI3kE,EAAY,EAAGA,EAAIzM,KAAKsmC,EAAKnmC,KAAKkb,IAAK5O,IAI/CzM,KAAKuqE,GAAqB99D,GAAGnO,MAAMisC,WAAa,UAyBjD,GApBIvqC,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SACzCJ,KAAK4sE,KACT5sE,KAAK4sE,IAAiB,EACtB5sE,KAAK6sE,IAAe,EACpB7sE,KAAK2pE,GAAe9rE,aAAa,OAAQ,mCAAqCmC,KAAKopE,GAAa,MAEvFppE,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAC9CJ,KAAK6sE,KACT7sE,KAAK4sE,IAAiB,EACtB5sE,KAAK6sE,IAAe,EACpB7sE,KAAK2pE,GAAe9rE,aAAa,OAAQ,kCAAoCmC,KAAKopE,GAAa,OAG5FppE,KAAK4sE,IAAkB5sE,KAAK6sE,MAC/B7sE,KAAK4sE,IAAiB,EACtB5sE,KAAK6sE,IAAe,EACpB7sE,KAAK2pE,GAAe9rE,aAAa,OAAQ,mCAAqCmC,KAAKopE,GAAa,MAI9FppE,KAAKsmC,EAAKgtC,eACRtzE,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAC7C,IAAK,IAAIA,EAAkBJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAoB,EAAGhB,GAAW,EAAGA,IAAW,CAC5H,GAAIA,GAAWJ,KAAKsmC,EAAKlmC,QAAS,SAClC,GAAIJ,KAAKsmC,EAAKnmC,KAAK0c,kBAAkBzc,IAAYJ,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SAAU,SAEtG,MAAMmzE,EAA2BvzE,KAAKsmC,EAAKnmC,KAAKolB,WAAWnlB,EAASJ,KAAKsmC,EAAKvqB,IAAM/b,KAAKopE,IACzF,GAAgB,MAAZmK,EACJ,IAAK,MAAM9iE,KAAQ8iE,EAAShjE,MAC3B,IAAK,MAAMjB,KAASmB,EAAKf,QAAS,CACjC,MAAM8jE,EAA2Bz0E,EAAI0oC,OACrC+rC,EAAS31E,aAAa,OAAQkC,EAAYW,gBAAgBV,KAAKsmC,EAAKnmC,KAAMC,GAASY,eACnFwyE,EAAS31E,aAAa,iBAAkB,QACxCmC,KAAKyyE,GAAUe,EAAUlkE,EAAOmB,EAAKlB,MAAOkB,EAAKd,KAA0B,IAApB3P,KAAKirE,IAAqB,EAAOjrE,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASoX,OAASxX,KAAKsmC,EAAKnmC,KAAKkb,KAEjJrb,KAAK4pE,GAAkB9sE,YAAY02E,IAOxC,GAAqB,MAAjBxzE,KAAK86C,GACR,IAAK,MAAMrqC,KAAQzQ,KAAK86C,GAASvqC,MAAO,CACvC,IAAK,IAAIpiB,EAAY,EAAGA,EAAIsiB,EAAKf,QAAQthB,OAAQD,IAAK,CACrD,MAAMmhB,EAAgBmB,EAAKf,QAAQvhB,GACnC,IAAIqlF,EAA2Bz0E,EAAI0oC,OAWnC,GAVA+rC,EAAS31E,aAAa,OAAQkC,EAAYW,gBAAgBV,KAAKsmC,EAAKnmC,KAAMH,KAAKsmC,EAAKlmC,SAASY,eAC7FwyE,EAAS31E,aAAa,iBAAkB,QACxCmC,KAAKyyE,GAAUe,EAAUlkE,EAAOmB,EAAKlB,MAAOkB,EAAKd,MAAO3P,KAAKirE,GAAejrE,KAAKgvE,IAAgB,EAAI,GAAG,EAAOhvE,KAAKusE,IACpHvsE,KAAK4pE,GAAkB9sE,YAAY02E,GACnCA,EAAWz0E,EAAI0oC,OACf+rC,EAAS31E,aAAa,OAAQkC,EAAYW,gBAAgBV,KAAKsmC,EAAKnmC,KAAMH,KAAKsmC,EAAKlmC,SAASa,aAC7FuyE,EAAS31E,aAAa,iBAAkB,QACxCmC,KAAKyyE,GAAUe,EAAUlkE,EAAOmB,EAAKlB,MAAOkB,EAAKd,MAAO3P,KAAKirE,GAAejrE,KAAKgvE,IAAgB,EAAI,GAAG,EAAMhvE,KAAKusE,IACnHvsE,KAAK4pE,GAAkB9sE,YAAY02E,GAE/B/iE,EAAKf,QAAQthB,OAAS,EAAG,CAC5B,MACM2M,EADyBiF,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,qBAAqB1uC,KAAKopE,KAC1Fh1D,WAChC,IAAKrZ,EAAM7E,YAAc6E,EAAM3E,aAAe2E,EAAMzE,WAAa,EAAG,CACnE,IAAIm9E,EAAkC10E,EAAI62C,OAC1C69B,EAAgB51E,aAAa,IAAK,GAAKpE,EAAauG,KAAKwtE,GAAa/8D,EAAKlB,MAAQ,IACnFkkE,EAAgB51E,aAAa,IAAK,GAAKpE,EAAauG,KAAK+uE,GAAoBz/D,EAAQtP,KAAKusE,MAC1FkH,EAAgB51E,aAAa,QAAS,MACtC41E,EAAgB51E,aAAa,OAAQkC,EAAY0H,cACjDgsE,EAAgB51E,aAAa,cAAe,SAC5C41E,EAAgB51E,aAAa,oBAAqB,WAClD41E,EAAgB51E,aAAa,iBAAkB,QAC/C41E,EAAgBrtE,YAAc,IAAMjY,EAAI,GACxC6R,KAAK4pE,GAAkB9sE,YAAY22E,KAMtC,GAAIzzE,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,UAAYJ,KAAKkrE,KAAmBlrE,KAAKmrE,IAAoB16D,GAAQzQ,KAAK0jE,GAAQoF,QAAS,CAEvI9oE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,UAAW,IACpDyB,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,iBAAkB,QAC3DyB,KAAKkqE,kBAAkBrsE,aAAa,kBAAmB,SACvDmC,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,QAAS,WAElD,IAAI+uE,EAAoBttE,KAAKsmC,EAAKnmC,KAAKytB,eAAe5tB,KAAKgsE,GAAahsE,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,qBAAqB1uC,KAAKopE,KAAax1D,YAAY7lB,EAAO4K,SAAW,EAAI8X,EAAKf,QAAQ,KAG3N69D,IAAqBD,GAAa,OAAYA,GAAa,QAAaA,EAAY,MAAWA,IAAc,IAEjHttE,KAAK4qE,GAA0B,EAAc,EAAV2C,EACnCvtE,KAAK0qE,IAA0BjxE,EAAa7K,KAAKsgB,IAAItgB,KAAKyB,IAAI2P,KAAKwmC,EAAe,GAAe,EAAV+mC,EAAavtE,KAAKwtE,GAAaxtE,KAAK8rE,GAAY,EAAc,EAAVyB,GAAc,IACzJvtE,KAAK2qE,IAAyBlxE,EAAauG,KAAK+uE,GAAoBt+D,EAAKf,QAAQ,GAAK1P,KAAKusE,IAAiB,IAAMvsE,KAAKirE,GAAejrE,KAAKgvE,IAAgB,GAE3JhvE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,OAAayB,KAAK0qE,GAAyB,MACpF1qE,KAAKkqE,kBAAkB5rE,MAAMC,YAAY,MAAYyB,KAAK2qE,GAAwB,MAClF3qE,KAAKkqE,kBAAkB9jE,YAAc,GAAKknE,IAOtCzzE,GAAU65E,EAA4BpkE,EAAeC,EAAeI,EAAiBo1D,EAAgB4O,EAAqBr+E,GACjI,MAAMs+E,EAAqB5zE,KAAKwtE,IAAc79D,EAAKA,EAAKvhB,OAAS,GAAG4gB,KAAOW,EAAK,GAAGX,MAC7E6kE,EAAoB,GAAMjlF,KAAKyB,IAAI,EAAGujF,EAAa,GAEzD,IAAIxnC,EAAmBz8B,EAAK,GAE5B,MAAM2K,EAActa,KAAKsmC,EAAKnmC,KAAKsa,aAAaza,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAAUJ,KAAKsmC,EAAKlmC,QAASJ,KAAKsmC,EAAKoI,qBAAqB1uC,KAAKopE,IAAa95D,GAEvK,IAAIkjE,EAAqB,KAAO/4E,EAAauG,KAAKwtE,IAAcj+D,EAAQ68B,EAAQp9B,MAAQ6kE,GAAa,IAAMp6E,EAAauG,KAAK+uE,GAAoBz/D,EAAQha,GAAUyvE,GAAU4O,EAAavnC,EAAQv4C,OAASymB,EAAM,IAAQ,IAEzN,IAAK,IAAInsB,EAAY,EAAGA,EAAIwhB,EAAKvhB,OAAQD,IAAK,CAC7C,IAAIo+C,EAAmBH,EACvBA,EAAUz8B,EAAKxhB,GACf,IAAI2lF,EAAmB9zE,KAAKwtE,IAAcj+D,EAAQg9B,EAAQv9B,OAAc,GAAL7gB,EAAS0lF,EAAY,GACpFE,EAAmB/zE,KAAKwtE,IAAcj+D,EAAQ68B,EAAQp9B,OAAS7gB,GAAKwhB,EAAKvhB,OAAS,EAAIylF,EAAY,GAClGG,EAAqBh0E,KAAK+uE,GAAoBz/D,EAAQi9B,EAAQpxC,SAAW7F,GACzE2+E,EAAqBj0E,KAAK+uE,GAAoBz/D,EAAQ88B,EAAQjxC,SAAW7F,GACzEsiD,EAAqB+7B,EAAapnC,EAAQ14C,OAASymB,EAAM,EACzD45D,EAAqBP,EAAavnC,EAAQv4C,OAASymB,EAAM,EAC7Dk4D,GAAc,KAAO/4E,EAAaq6E,GAAY,IAAMr6E,EAAau6E,EAAajP,EAASntB,GAAc,IACjGrL,EAAQpxC,SAAWixC,EAAQjxC,WAAUq3E,GAAc,KAAO/4E,EAAaq6E,EAAW,GAAK,IAAMr6E,EAAau6E,EAAajP,EAASntB,GAAc,KAC9IrL,EAAQpxC,SAAWixC,EAAQjxC,WAAUq3E,GAAc,KAAO/4E,EAAas6E,EAAW,GAAK,IAAMt6E,EAAaw6E,EAAalP,EAASmP,GAAc,KAClJ1B,GAAc,KAAO/4E,EAAas6E,GAAY,IAAMt6E,EAAaw6E,EAAalP,EAASmP,GAAc,IAEtG,IAAK,IAAI/lF,EAAYwhB,EAAKvhB,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAClD,IAAIo+C,EAAmBH,EACvBA,EAAUz8B,EAAKxhB,GACf,IAAI2lF,EAAmB9zE,KAAKwtE,IAAcj+D,EAAQg9B,EAAQv9B,OAAS7gB,GAAKwhB,EAAKvhB,OAAS,EAAIylF,EAAY,GAClGE,EAAmB/zE,KAAKwtE,IAAcj+D,EAAQ68B,EAAQp9B,OAAc,GAAL7gB,EAAS0lF,EAAY,GACpFG,EAAqBh0E,KAAK+uE,GAAoBz/D,EAAQi9B,EAAQpxC,SAAW7F,GACzE2+E,EAAqBj0E,KAAK+uE,GAAoBz/D,EAAQ88B,EAAQjxC,SAAW7F,GACzEsiD,EAAqB+7B,EAAapnC,EAAQ14C,OAASymB,EAAM,EACzD45D,EAAqBP,EAAavnC,EAAQv4C,OAASymB,EAAM,EAC7Dk4D,GAAc,KAAO/4E,EAAaq6E,GAAY,IAAMr6E,EAAau6E,EAAajP,EAASntB,GAAc,IACjGrL,EAAQpxC,SAAWixC,EAAQjxC,WAAUq3E,GAAc,KAAO/4E,EAAaq6E,EAAW,GAAK,IAAMr6E,EAAau6E,EAAajP,EAASntB,GAAc,KAC9IrL,EAAQpxC,SAAWixC,EAAQjxC,WAAUq3E,GAAc,KAAO/4E,EAAas6E,EAAW,GAAK,IAAMt6E,EAAaw6E,EAAalP,EAASmP,GAAc,KAClJ1B,GAAc,KAAO/4E,EAAas6E,GAAY,IAAMt6E,EAAaw6E,EAAalP,EAASmP,GAAc,IAEtG1B,GAAc,IAEdkB,EAAW71E,aAAa,IAAK20E,GAGtB34E,GAAoByV,GAC3B,OAAOtP,KAAKirE,IAAgBjrE,KAAKuwE,GAAW,EAAa,WC3kD9C4D,GAsCZt6E,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EArCHtmC,KAAAo0E,GAAkC11E,EAAKgL,IAAI,CAAEpL,MAAO,oGACpD0B,KAAAq0E,GAAiC31E,EAAKgL,IAAI,CAAEpL,MAAO,oGACnD0B,KAAAs0E,GAAgC51E,EAAKgL,IAAI,CAAEpL,MAAO,oGAClD0B,KAAAu0E,GAA2B71E,EAAKgL,IAAI,CAAEpL,MAAO,gDAAgDyB,EAAYwH,mFAC1GvH,KAAA6nC,UAA4BnpC,EAAKgL,IAAI,CAAEpL,MAAO,wGAC7D0B,KAAKo0E,GACLp0E,KAAKq0E,GACLr0E,KAAKs0E,GACLt0E,KAAKu0E,IAEWv0E,KAAAymC,EAAwB,IACxBzmC,KAAAw0E,GAA+B,GAC/Bx0E,KAAAy0E,GAAiC,GACjCz0E,KAAA00E,GAAoC,GACpC10E,KAAA20E,GAAqC,GACrC30E,KAAA40E,GAAoC,GACpC50E,KAAA60E,GAAmC,GAK5C70E,KAAAyhD,GAAkB,EAClBzhD,KAAAgoC,GAAsB,EACtBhoC,KAAAioC,GAAsB,EAEtBjoC,KAAA80E,IAAwB,EACxB90E,KAAA+0E,IAA0B,EAC1B/0E,KAAA4sE,IAA0B,EAC1B5sE,KAAA6sE,IAAwB,EACxB7sE,KAAAg1E,IAAwB,EACxBh1E,KAAAi1E,IAA+B,EAsH/Bj1E,KAAA4oC,GAAkBJ,IACrBxoC,KAAKioC,IACTjoC,KAAKioC,GAAa,EAClBjoC,KAAK6oC,OAGE7oC,KAAA8oC,GAAiBN,IACnBxoC,KAAKioC,IACVjoC,KAAKioC,GAAa,EAClBjoC,KAAK6oC,OAGE7oC,KAAA+oC,GAAqBP,IAC5BA,EAAMQ,iBACNhpC,KAAKsmC,EAAKzN,MAAMk4C,oBAChB/wE,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK6nC,UAAUqB,wBAEhDlpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAKk1E,KACLl1E,KAAK6oC,MAGE7oC,KAAA0pC,GAAmBlB,KACtBxoC,KAAKgoC,GAAchoC,KAAKioC,IAAYjoC,KAAKsmC,EAAKzN,MAAMk4C,oBACxD,MAAM9nC,EAA2BjpC,KAAK6nC,UAAUqB,wBAEhDlpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAKm1E,KACDn1E,KAAKgoC,GAAYhoC,KAAKk1E,KAC1Bl1E,KAAK6oC,MAGE7oC,KAAAo1E,GAAsB5sC,IACzBxoC,KAAKgoC,GAAYhoC,KAAKq1E,KAC1Br1E,KAAKgoC,GAAa,EAClBhoC,KAAK6oC,MAGE7oC,KAAAwpC,GAAqBhB,IAC5BA,EAAMQ,iBACNhpC,KAAKsmC,EAAKzN,MAAMk4C,oBAChB/wE,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK6nC,UAAUqB,wBAEhDlpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAKm1E,KACLn1E,KAAKk1E,MAGEl1E,KAAA4pC,GAAmBpB,IAC1BA,EAAMQ,iBACNhpC,KAAKsmC,EAAKzN,MAAMk4C,oBAChB,MAAM9nC,EAA2BjpC,KAAK6nC,UAAUqB,wBAEhDlpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAKm1E,KACDn1E,KAAKgoC,GAAYhoC,KAAKk1E,MAGnBl1E,KAAAqkE,GAAsB77B,IAC7BA,EAAMQ,iBACNhpC,KAAKq1E,MAeEr1E,KAAAukE,GAAmB,KAC1B,MAAM+Q,EAAkBt1E,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SAC7D+Z,EAAiBna,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAchE,GAbIk1E,GACHt1E,KAAKirE,GAAe,GACpBjrE,KAAKuwE,GAAcxiF,EAAO2K,WAElByhB,GACRna,KAAKirE,GAAe,GACpBjrE,KAAKuwE,GAAcxiF,EAAO4K,WAG1BqH,KAAKirE,GAAgBjrE,KAAKymC,EAAgBzmC,KAAKsmC,EAAKk4B,iBACpDx+D,KAAKuwE,GAAcvwE,KAAKsmC,EAAKk4B,mBAGzB8W,IAAWn7D,EAAO,CACtB,IAAK,IAAIhsB,EAAY6R,KAAKi1E,GAAqB9mF,EAAI6R,KAAKsmC,EAAKk4B,iBAAkBrwE,IAAK,CACnF,MAAMonF,EAA6B72E,EAAKgL,IAAI,CAAEo+B,MAAO,cAAexpC,MAAO,uIACrEk3E,EAA2B92E,EAAKgL,IAAI,CAAEo+B,MAAO,eAAgBxpC,MAAO,qBAAuBi3E,GACjGv1E,KAAKo0E,GAAgBt3E,YAAY04E,GACjCx1E,KAAKy0E,GAAajmF,KAAK+mF,GACvBv1E,KAAKw0E,GAAWhmF,KAAKgnF,GACrBx1E,KAAKi1E,KAGN,IAAK,IAAI9mF,EAAY6R,KAAKi1E,GAAqB9mF,EAAI6R,KAAKsmC,EAAKk4B,iBAAkBrwE,IAC9E6R,KAAKo0E,GAAgBrnE,YAAY/M,KAAKo0E,GAAgBrB,WACtD/yE,KAAKy0E,GAAan2D,MAClBte,KAAKw0E,GAAWl2D,MAGjBte,KAAKi1E,GAAsBj1E,KAAKsmC,EAAKk4B,iBAGtCx+D,KAAKm1E,KACDn1E,KAAKgoC,GAAYhoC,KAAKk1E,KAC1Bl1E,KAAKsmC,EAAKzN,MAAM9P,iBAAmB/oB,KAAKsmC,EAAKlmC,QAC7CJ,KAAKskE,MAGEtkE,KAAAskE,GAAU,KACjB,IAAKtkE,KAAKsmC,EAAKmvC,YAAa,OAE5B,MAAMH,EAASt1E,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SACpD+Z,EAAQna,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SAEvD,GAAIJ,KAAK+0E,IAAkB/0E,KAAKsmC,EAAKnmC,KAAK8a,OAASjb,KAAKg1E,IAAgBh1E,KAAKsmC,EAAKnmC,KAAKvC,KAAOoC,KAAK4sE,IAAkB0I,GAAUt1E,KAAK6sE,IAAgB1yD,EAAO,OAC3Jna,KAAK+0E,GAAiB/0E,KAAKsmC,EAAKnmC,KAAK8a,MACrCjb,KAAKg1E,GAAeh1E,KAAKsmC,EAAKnmC,KAAKvC,IACnCoC,KAAK4sE,GAAiB0I,EACtBt1E,KAAK6sE,GAAe1yD,EACpB,MAAM3J,EAAyBxQ,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAMhG,GAJA1uC,KAAKo0E,GAAgB91E,MAAMi1D,QAAW+hB,GAAUn7D,EAAS,OAAS,OAClEna,KAAKq0E,GAAe/1E,MAAMi1D,QAAU+hB,EAAS,OAAS,OACtDt1E,KAAKs0E,GAAch2E,MAAMi1D,QAAUp5C,EAAQ,OAAS,OAE/Cm7D,GAAWn7D,GA0CX,GAAIA,EAAO,CACf,IAIIu7D,EAJAC,EAAmB,GACnBC,EAAoB,GACpBC,EAAwB91E,EAAYuJ,oBACpCwsE,EAAyB/1E,EAAYsJ,sBAEzC,IAAK,IAAIoD,EAAY,EAAGA,EAAI1e,EAAO4K,SAAU8T,IAAK,CAEjD,IAAIspE,GAA0B,EAC1BC,GAAoB,EACpBC,EAAwBzlE,EAAWmD,eAAe5lB,EAAO4K,SAAW8T,EAAI,GAAK,EAEjF,OAAQ+D,EAAWkD,YAAY3lB,EAAO4K,SAAW8T,EAAI,IACpD,KAAKqH,EAAUC,OACd4hE,EAAW,MACXI,GAAiB,EACjBD,EAAiB/1E,EAAYsJ,sBAC7B2sE,GAAW,EACX,MACD,KAAKliE,EAAUmJ,WACdy4D,EAAallE,EAAWlP,YAAYvT,EAAO4K,SAAW8T,EAAI,GAAK,EAC/DwpE,EAAgBzlE,EAAWmD,eAAe5lB,EAAO4K,SAAW8T,EAAI,GAAK,EAEjB,IAAhDzM,KAAKsmC,EAAKnmC,KAAK4X,SAAS29D,EAAa,GAAG/jF,KAEvCqO,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,EACtCg6D,GAAc,IAAMO,GAAiB,IACxCN,EAAW,IAAMD,EACjBC,GAAY,KAAOM,IAGnBN,EAAW,QAAUD,EACrBC,GAAY,OAASM,GAItBN,EAAW,SAAWD,EAOtBC,EADG31E,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,EAC/B,IAAMg6D,EAAa,IAAM11E,KAAKsmC,EAAKnmC,KAAK4X,SAAS29D,EAAa,GAAG/jF,KAAO,KAAOskF,EAG/E,IAAMP,EAAa,IAAM11E,KAAKsmC,EAAKnmC,KAAK4X,SAAS29D,EAAa,GAAG/jF,KAI9E,MACD,KAAKmiB,EAAUoJ,WACdw4D,EAAallE,EAAWlP,YAAYvT,EAAO4K,SAAW8T,EAAI,GAAK,EAC/DwpE,EAAgBzlE,EAAWmD,eAAe5lB,EAAO4K,SAAW8T,EAAI,GAAK,EAEjB,IAAhDzM,KAAKsmC,EAAKnmC,KAAK4X,SAAS29D,EAAa,GAAG/jF,KAEvCqO,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,EAEtCg6D,GAAc,IAAMO,GAAiB,IACxCN,EAAW,IAAMD,EACjBC,GAAY,KAAOM,IAGnBN,EAAW,QAAUD,EACrBC,GAAY,OAASM,GAItBN,EAAW,SAAWD,EAMtBC,EADG31E,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,EAC/B,IAAMg6D,EAAa,IAAM11E,KAAKsmC,EAAKnmC,KAAK4X,SAAS29D,EAAa,GAAG/jF,KAAO,KAAOskF,EAG/E,IAAMP,EAAa,IAAM11E,KAAKsmC,EAAKnmC,KAAK4X,SAAS29D,EAAa,GAAG/jF,KAI9E,MACD,KAAKmiB,EAAUgZ,UACd6oD,EAAW,OAKb,GAAII,EACH,OAAQvlE,EAAWoD,YAAY7lB,EAAO4K,SAAW8T,EAAI,IACpD,KAAKuH,EAAWC,QACf6hE,EAAiB/1E,EAAYsJ,sBAC7BusE,EAAY,OACZI,GAAW,EACX,MACD,KAAKhiE,EAAWgF,aACf48D,EAAY,aACZ,MACD,KAAK5hE,EAAWiF,cACf28D,EAAY,cACZ,MACD,KAAK5hE,EAAWsF,cACfs8D,EAAY,cACZ,MACD,KAAK5hE,EAAWkF,aACf08D,EAAY,OACZ,MACD,KAAK5hE,EAAWmF,aACfy8D,EAAY,OACZ,MACD,KAAK5hE,EAAWoF,aACfw8D,EAAY,OACZ,MACD,KAAK5hE,EAAWqF,aACfu8D,EAAY,OACZ,MACD,KAAK5hE,EAAW8E,aACf88D,EAAY,SACZ,MACD,KAAK5hE,EAAW6E,WACf+8D,EAAY,WACZ,MACD,KAAK5hE,EAAW+E,OACf68D,EAAY,MACZ,MACD,KAAK5hE,EAAWwF,UACfo8D,EAAY,SACZ,MACD,KAAK5hE,EAAWyF,gBACfm8D,EAAY,gBACZ,MACD,KAAK5hE,EAAW2F,gBACfi8D,EAAY,gBACZ,MACD,KAAK5hE,EAAW4F,gBACfg8D,EAAY,gBACZ,MACD,KAAK5hE,EAAW6F,iBACf+7D,EAAY,YACZ,MACD,KAAK5hE,EAAW+F,iBACf67D,EAAY,YACZ,MACD,KAAK5hE,EAAW8F,YACf87D,EAAY,YACZ,MACD,KAAK5hE,EAAWuF,cACfq8D,EAAY,cACZ,MACD,KAAK5hE,EAAW4E,UACfg9D,EAAY,SACZ,MACD,KAAK5hE,EAAW0E,cACfk9D,EAAY,SACZ,MACD,KAAK5hE,EAAW2E,SACfi9D,EAAY,QACZ,MACD,KAAK5hE,EAAW0F,cACfk8D,EAAY,SAKf,MAAMM,EAA6Bl2E,KAAK00E,GAAgBjoE,GAClD0pE,EAA8Bn2E,KAAK20E,GAAiBloE,GACpD2pE,EAAgCp2E,KAAK40E,GAAgBnoE,GACrD4pE,EAA+Br2E,KAAK60E,GAAepoE,GASzD,GARAypE,EAAW53E,MAAMsoC,KAAOivC,EACxBK,EAAW9vE,YAAcuvE,EACzBQ,EAAY73E,MAAMsoC,KAAOkvC,EACzBK,EAAY/vE,YAAc2vE,EAAiBH,EAAY,UACvDQ,EAAchwE,YAAc,IAAMrY,EAAO4K,SAAW8T,GACpD4pE,EAAa/3E,MAAMsoC,KAAOovC,EAAWj2E,EAAY+I,iBAAmB/I,EAAYsJ,sBAGK,IAAjFrJ,KAAKsmC,EAAKnmC,KAAK4X,SAASvH,EAAWlP,YAAYvT,EAAO4K,SAAW8T,EAAI,IAAI9a,KAAY,CACxF,IAAI2kF,EAAsB,IACtBtvC,EAAiBkvC,EAAWK,cAAeA,cAAertC,wBAAwBlC,OAClF54C,EAAiB8nF,EAAWM,wBAC5BC,EAAkB,EAWtB,IAVIroF,EAAS44C,EAAS,GACrBsvC,EAAc,OACdG,EAAU,GAEFroF,EAAS44C,EAAS,KAC1BsvC,EAAc,MACdG,EAAU,GAEXP,EAAW53E,MAAMshE,UAAY,8BAAgC,GAAK6W,EAAU7nF,KAAKmb,MAAMnb,KAAKsgB,IAAI,GAAI83B,EAAS,IAAM,KAAO,mBAAqBsvC,EAAc,OAEvI,QAAfA,GAAyBJ,EAAWM,wBAA0BxvC,EAAS,GAAG,CAChF,IAAI1xC,EAAS,GAAK2gF,GAAiB,GAAK,EAAI,GAC5CC,EAAW9vE,YAAc8vE,EAAW9vE,YAAYswE,OAAO,EAAGR,EAAW9vE,YAAYhY,OAASkH,GAAU4gF,EAAW9vE,YAAYswE,OAAOR,EAAW9vE,YAAYhY,OAASkH,EAAS,QAGxK,CACJ,IAAI0xC,EAAiBkvC,EAAWK,cAAeA,cAAertC,wBAAwBlC,OACtFkvC,EAAW53E,MAAMshE,UAAY,8BAAgC,GAAKhxE,KAAKmb,MAAMnb,KAAKsgB,IAAI,GAAI83B,EAAS,IAAM,KAAO,gCAhPlH,IAAK,IAAIv6B,EAAY,EAAGA,EAAIzM,KAAKuwE,GAAa9jE,IAAK,CAClD,MAAMkqE,GAA0BlqE,EAAI1e,EAAOsE,KAAK2N,KAAKsmC,EAAKnmC,KAAKvC,KAAKrL,WAAa,GAC3ED,EAAsBvE,EAAOsE,KAAKskF,GAAgBrkF,WAExD,GADA0N,KAAKw0E,GAAW/nE,GAAGnO,MAAMs4E,WAAatkF,EAAayN,EAAYoI,cAAgBpI,EAAYqI,cACtFra,EAAOmE,OAAO8N,KAAKsmC,EAAKnmC,KAAK8a,OAAO7oB,MAAMqa,EAAI,IAG5C,CAIN,IAAImpC,EAEJ,GALA51C,KAAKw0E,GAAW/nE,GAAGI,UAAUsqB,OAAO,YACpCn3B,KAAKy0E,GAAahoE,GAAGnO,MAAMi1D,QAAU,GAIjCxlE,EAAOsE,KAAKskF,GAAgBrkF,WAC/BsjD,EAAO7nD,EAAOsE,KAAKskF,GAAgBhlF,SAC7B,CACN,MAAMklF,EAAmB9oF,EAAOyE,oBAAoBia,EAAI,IACxDmpC,EAAO7nD,EAAOsE,MAAMskF,EAAiB,GAAKE,GAAY,IAAIllF,KAC1C,GAAZklF,EACHjhC,GAAQ,KACe,GAAbihC,IACVjhC,GAAQ,KAIV,MAAMw3B,EAAwBptE,KAAKy0E,GAAahoE,GAE3CA,EAAI,IAAO,GACfmpC,GAAQhnD,KAAKsU,MAAMuJ,EAAI,IAAMzM,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASoX,OACxE41D,EAAM9uE,MAAMshE,UAAY,wBAGxBwN,EAAM9uE,MAAMshE,UAAY,sBAIzBwN,EAAM9uE,MAAMonE,MAAQ33E,EAAOsE,KAAKskF,GAAgBrkF,WAAa,QAAU,QACvE86E,EAAMhnE,YAAcwvC,OAhCpB51C,KAAKw0E,GAAW/nE,GAAGI,UAAUC,IAAI,YACjC9M,KAAKy0E,GAAahoE,GAAGnO,MAAMi1D,QAAU,OA8OxCvzD,KAAK6oC,MA9eL,IAAK,IAAI16C,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKk4B,iBAAkBrwE,IAAK,CAC5D,MAAMonF,EAA6B72E,EAAKgL,IAAI,CAAEo+B,MAAO,cAAexpC,MAAO,uIACrEk3E,EAA2B92E,EAAKgL,IAAI,CAAEo+B,MAAO,eAAgBxpC,MAAO,qBAAuBi3E,GACjGv1E,KAAKo0E,GAAgBt3E,YAAY04E,GACjCx1E,KAAKy0E,GAAajmF,KAAK+mF,GACvBv1E,KAAKw0E,GAAWhmF,KAAKgnF,GAEtBx1E,KAAKi1E,GAAsBj1E,KAAKsmC,EAAKk4B,iBAErC,IAAK,IAAIrwE,EAAY,EAAGA,EAAIJ,EAAO2K,UAAWvK,IAAK,CAClD,MAAM8sB,EAAwD,KAAvC,EAAO9sB,EAAIJ,EAAO2K,UAAa,KAChDo+E,EAAqB,GAAQ3oF,EAAIJ,EAAO2K,UAAY,GAAO3K,EAAO2K,UAAa,GACrFsH,KAAKq0E,GAAev3E,YAAY4B,EAAKgL,IAAI,CAAEo+B,MAAO,cAAexpC,MAAO,oBAAoB2c,MAAUA,0BAA8B67D,QAGrI,IAAK,IAAI3oF,EAAY,EAAGA,EAAIJ,EAAO4K,SAAUxK,IAAK,CAGjD,MAAM4oF,EAA+Bh4E,EAAI62C,KAAK,CAAE9N,MAAO,kBAAmBqiC,cAAe,OAAQvjC,KAAM7mC,EAAYuJ,oBAAqBhL,MAAO,qKACzI04E,EAAgCj4E,EAAI62C,KAAK,CAAE9N,MAAO,kBAAmBqiC,cAAe,OAAQvjC,KAAM7mC,EAAYuJ,oBAAqBhL,MAAO,mKAC1I24E,EAA4Bl4E,EAAI62C,KAAK,CAAE9N,MAAO,0BAA2BlB,KAAM7mC,EAAYqJ,gBAAiB9K,MAAO,mKACnH44E,EAA4Bn4E,EAAI4nC,KAAK,CAAEI,MAAO,OAAQC,OAAQ,MAAOJ,KAAM7mC,EAAY+I,iBAAkBxK,MAAO,0DAEhH64E,EAA6Bp4E,EAAImoC,IAAI,CAAEkb,QAAS,YAAarb,MAAO,OAAQzoC,MAAO,uCAAyC,CACjIy4E,IAEKK,EAA0Br4E,EAAImoC,IAAI,CAAEkb,QAAS,YAAarb,MAAO,OAAQzoC,MAAO,yBAA2B,CAChH44E,EACAD,IAEKI,EAA8Bt4E,EAAImoC,IAAI,CAAEkb,QAAS,YAAarb,MAAO,OAAQzoC,MAAO,yBAA2B,CACpH04E,IAGKM,EAA2B54E,EAAKgL,IAAI,CAAEpL,MAAO,gGAAkG,CACpJ84E,EACAD,IAEKI,EAA2B74E,EAAKgL,IAAI,CAAEpL,MAAO,wGAA0G,CAC5J+4E,IAGKG,EAAgC94E,EAAKgL,IAAI,CAAEpL,MAAO,wJAA0J,CACjNg5E,EACAC,IAGKE,EAAyB/4E,EAAKgL,IAAI,CAAEo+B,MAAO,mBAAoBxpC,MAAO,eAAiByB,EAAYqJ,gBAAkB,KAAOouE,GAClIx3E,KAAKs0E,GAAcx3E,YAAY26E,GAC/Bz3E,KAAK00E,GAAgBlmF,KAAKuoF,GAC1B/2E,KAAK20E,GAAiBnmF,KAAKwoF,GAC3Bh3E,KAAK40E,GAAgBpmF,KAAKyoF,GAC1Bj3E,KAAK60E,GAAermF,KAAK0oF,GAG1Bl3E,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK+oC,IAClDhsC,SAASktC,iBAAiB,YAAajqC,KAAK0pC,IAC5C3sC,SAASktC,iBAAiB,UAAWjqC,KAAKo1E,IAC1Cp1E,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK4oC,IAClD5oC,KAAK6nC,UAAUoC,iBAAiB,WAAYjqC,KAAK8oC,IAEjD9oC,KAAK6nC,UAAUoC,iBAAiB,aAAcjqC,KAAKwpC,IACnDxpC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK4pC,IAClD5pC,KAAK6nC,UAAUoC,iBAAiB,WAAYjqC,KAAKqkE,IACjDrkE,KAAK6nC,UAAUoC,iBAAiB,cAAejqC,KAAKqkE,IAEpDrkE,KAAKsmC,EAAKwD,SAAS06B,MAAMxkE,KAAKukE,IAC9BvkE,KAAKukE,KAzEC1qE,cACNmG,KAAK+0E,IAAkB,EACvB/0E,KAAKskE,KA0EEzqE,KACP,MAAMohB,EAAgCltB,EAAOmE,OAAO8N,KAAKsmC,EAAKnmC,KAAK8a,OAAO7oB,MACpE68E,EAAqBrgF,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAI2P,KAAKuwE,GAAc,EAAGvwE,KAAKuwE,GAAevwE,KAAKyhD,GAAUzhD,KAAKirE,KAC9G,GAAIhwD,EAAMrsB,KAAKsU,MAAM+rE,GAAc,KAAOjvE,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SACpFJ,KAAK03E,GAAe9oF,KAAKsU,MAAM+rE,OACzB,CACN,IAAI0I,EAAmB/oF,KAAKsU,MAAM+rE,GAAc,EAC5C2I,EAAsBhpF,KAAKsU,MAAM+rE,GAAc,EACnD,MAAQh0D,EAAM08D,EAAW,KACxBA,IAED,MAAQ18D,EAAM,EAAgB,KAC7B28D,IAED,IAAIC,EAAmBF,EACnBG,EAAsBF,EAAc,EACpCD,EAAW,IAAM,GAAKA,EAAW,IAAM,IAC1CE,GAAY,IAETD,EAAc,IAAM,GAAKA,EAAc,IAAM,IAChDE,GAAe,IAEhB93E,KAAK03E,GAAezI,EAAa6I,EAAcD,EAAW5I,EAAa0I,EAAWC,GAI5E/9E,KACP,MAAM+jB,EAAuB5d,KAAK03E,GAAmE,GAApD13E,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASoX,OACxFxX,KAAK80E,IAAgBl3D,IACzB5d,KAAK80E,GAAel3D,EACpB5d,KAAKsmC,EAAKzN,MAAMjQ,kBAAoB2N,OAAO6iC,iBAC3Cp5D,KAAKsmC,EAAKzN,MAAM/P,iBAAmB,CAAC9oB,KAAK80E,IACzC90E,KAAKsmC,EAAKzN,MAAMhQ,kBAAmB,GAG5BhvB,KACPmG,KAAK80E,IAAgB,EACrB90E,KAAKsmC,EAAKzN,MAAMjQ,kBAAoB,EAwE7B/uB,KAEP,GADAmG,KAAKu0E,GAASj2E,MAAMisC,YAAevqC,KAAKioC,GAAcjoC,KAAKgoC,EAAc,SAAW,WAC/EhoC,KAAKioC,GAAcjoC,KAAKgoC,EAAY,OAEzC,MAAMiB,EAA2BjpC,KAAK6nC,UAAUqB,wBAC1C6uC,EAAsB/3E,KAAKirE,IAAgBjrE,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,MAE1G7iD,KAAKu0E,GAASj2E,MAAM+qC,KAAO,MAC3BrpC,KAAKu0E,GAASj2E,MAAMukD,IAAMk1B,GAAe/3E,KAAKuwE,GAAcvwE,KAAK03E,GAAe,GAAK,KACrF13E,KAAKu0E,GAASj2E,MAAM0oC,OAAS+wC,EAAc,MC1N7C,MAAMC,GAAgB,gBAStB,SAASC,GAAar6E,GACrB,OAAOwhB,KAAKC,MAAMzhB,EAAI0hB,UAAU04D,GAAc5pF,kBAG/B8pF,GAAaz9E,GAC5B,OAAOu9E,GAAgB54D,KAAK8yC,UAAUz3D,YAGvB09E,KAEf,OAASvpF,KAAKa,WAAa,IAAM,KAAQ,GAAG2oF,SAAS,IAGtD,SAASC,GAAanqD,EAAkBC,GACvC,OAAOA,EAAEmqD,SAAS,GAAGtpE,KAAOkf,EAAEoqD,SAAS,GAAGtpE,KAG3C,SAASupE,GAAgBrqD,EAAqBC,GAC7C,OAAOA,EAAEnf,KAAOkf,EAAElf,WAGNwpE,GAAb3+E,cAGSmG,KAAAy4E,GAAc,IAAI5gE,EAEnBhe,8BACN,MAAM6+E,EAAyB,GACzBC,EAAwC,GAC9C,IAAK,IAAIxqF,EAAI,EAAGA,EAAIuyB,aAAatyB,OAAQD,IAAK,CAC7C,MAAMyqF,EAAkBl4D,aAAa9iB,IAAIzP,GACzC,GAlCmC,GAkClByqF,EAlCRjkE,QAAQqjE,IAkCU,CAC1B,MAAMv9E,EAA4Bw9E,GAAaW,GAC/C,IAAIz4E,EAAkCw4E,EAAWl+E,EAAQo+E,KAC7C1rE,MAARhN,IACHA,EAAO,CAAEm4E,SAAU,IACnBK,EAAWl+E,EAAQo+E,KAAO14E,EAC1Bu4E,EAAMlqF,KAAK2R,IAEZA,EAAKm4E,SAAS9pF,KAAKiM,IAGrB,IAAK,MAAM0F,KAAQu4E,EAClBv4E,EAAKm4E,SAASrqD,KAAKsqD,IAGpB,OADAG,EAAMzqD,KAAKoqD,IACJK,EAGD7+E,YAAYg/E,EAAalnF,EAAcmnF,GAC7C,MAAMC,EAAkBpnF,EAClBymD,EAAkBxpD,KAAKmb,MAAMivE,KAAK1tD,OAExC2tD,aAAaj5E,KAAKk5E,IAClBl5E,KAAKk5E,GAA4Bp4B,YAAW,KAC3C,IAEC9gD,KAAKy4E,GAAM79D,iBAAiBk+D,GAC3B,MAAOpoB,GAER,YADAjwC,OAAO04D,MAAM,yLAA8LzoB,EAAQ,KAAOA,EAAM0oB,OAIjO,MAAMV,EAAyBF,GAAaa,uBAC5C,IAAIC,EAAoC,KACxC,IAAK,MAAMn5E,KAAQu4E,EACdv4E,EAAKm4E,SAAS,GAAGO,KAAOA,IAC3BS,EAAcn5E,GAGG,MAAfm5E,IACHA,EAAc,CAAEhB,SAAU,IAC1BI,EAAMr6D,QAAQi7D,IAEf,IAAIhB,EAA+BgB,EAAYhB,SAE3CiB,EAAkB,IACtB,GAAIjB,EAASlqF,OAAS,EAAG,CACxB,MAAMorF,EAAyBlB,EAAS,GAAGtpE,KAE3CuqE,EAD+BjB,EAAS,GAAGmB,KAChB7qF,KAAKyB,IAvFN,KAuFiC+nD,EAAUohC,GAGtE,MAAME,EAA+B,CAAEb,IAAKA,EAAKlnF,KAAMonF,EAAS/pE,KAAMopC,EAASqhC,KAAMF,GAC/EI,EAAiBzB,GAAawB,GACpCpB,EAASj6D,QAAQq7D,GACjBh5D,aAAa6/B,QAAQo5B,EAAQb,GAG7B,IAAIc,EA/FoB,IAgGxB,MAAMC,EAAmBjrF,KAAKuB,IAAI,EAAG,IACrC,IAAK,IAAIhC,EAAY,EAAGA,EAAImqF,EAASlqF,OAAQD,IAAK,CAIjD,GAH4BmqF,EAASnqF,GAAGsrF,MACbtrF,GAAKmqF,EAASlqF,OAAS,EAAK,EAAMkqF,EAASnqF,EAAI,GAAGsrF,MAE/CG,EAAS,CACtC,IAAIE,EAAyB3rF,EAC7B,GAAIA,EAAImqF,EAASlqF,OAAS,EAAG,CAC5B,MAAM2rF,EAAsBzB,EAASnqF,GAAG6gB,KAClCgrE,EAAoB1B,EAASnqF,EAAI,GAAG6gB,KAOrC+qE,EANqBzB,EAASnqF,EAAI,GAAG6gB,KAMV,IAAOgrE,EAAYD,KAClDD,EAAiB3rF,EAAI,GAGvBuyB,aAAau5D,WAAW/B,GAAaI,EAASwB,KAC9C,MAEDF,GAAWC,EAKZ,KAAOnB,EAAMtqF,OA9HS,GA8HkB,CACvC,IAAI8rF,EAA2C,KAC3CC,EAA0B5jD,OAAO6jD,kBACrC,IAAK,IAAIjsF,EAAYS,KAAKmb,MAAMswE,GAAuBlsF,EAAIuqF,EAAMtqF,OAAQD,IAAK,CAC7E,MAAMgS,EAAsBu4E,EAAMvqF,GAI5BmsF,EAAoB,IAHCliC,EAAUj4C,EAAKm4E,SAAS,GAAGtpE,MAGV,MAA4B,GAGlEugC,GADuBpvC,EAAKm4E,SAAS,GAAGmB,KAAO,KACfa,EAClCH,EAAkB5qC,IACrB4qC,EAAkB5qC,EAClB2qC,EAAqB/5E,GAGvB,IAAK,MAAM1F,KAAWy/E,EAAoB5B,SACzC53D,aAAau5D,WAAW/B,GAAaz9E,IAEtCi+E,EAAMt6D,OAAOs6D,EAAM/jE,QAAQulE,GAAsB,MAEhD,MC/JL,MAAMp7B,OAAEA,GAAMp1C,IAAEA,GAAGs1C,GAAEA,GAAEhoB,EAAEA,GAACmoB,OAAEA,GAAMC,OAAEA,GAAMm7B,OAAEA,IAAW77E,QAE1C87E,GAcZ3gF,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EAbHtmC,KAAAy6E,GAAiC/wE,KACjC1J,KAAA4/C,GAAmCd,GAAO,CAAEhX,MAAO,iBAEpD9nC,KAAA6nC,UAA4Bn+B,GAAI,CAAEo+B,MAAO,SAAUxpC,MAAO,iBACzE0gD,GAAG,iBACHt1C,GAAI,CAAEpL,MAAO,wCACZ04B,GAAE,uHACFh3B,KAAKy6E,GACLzjD,GAAE,gOAEHh3B,KAAK4/C,IAgCE5/C,KAAA8/C,GAAS,KAChB9/C,KAAKsmC,EAAKqF,QAGJ3rC,KAAA+/C,QAAU,KAChB//C,KAAK4/C,GAAcI,oBAAoB,QAAShgD,KAAK8/C,KAjCrD9/C,KAAK4/C,GAAc3V,iBAAiB,QAASjqC,KAAK8/C,IAElD,MAAM44B,EAAyBF,GAAaa,uBAExB,GAAhBX,EAAMtqF,QACT4R,KAAKy6E,GAAe39E,YAAYk6B,GAAE,mEAGnC,IAAK,MAAM72B,KAAQu4E,EAAO,CACzB,MAAMgC,EAAiCv7B,GAAO,CAAE7gD,MAAO,iBAEvD,IAAK,MAAM7D,KAAW0F,EAAKm4E,SAC1BoC,EAAY59E,YAAYsiD,GAAO,CAAE1tD,MAAO+I,EAAQuU,MAAQvU,EAAQ9I,KAAO,KAAO,IAAIqnF,KAAKv+E,EAAQuU,MAAM2rE,mBAGtG,MAAMC,EAA4BL,GAAO,CAAEj8E,MAAO,6DAClDs8E,EAAOrtB,IAAM,gBAAkB9sC,OAAOC,aAAaC,QAAQu3D,GAAa/3E,EAAKm4E,SAAS,KACtF,MAAMzwC,EAA4Bn+B,GAAI,CAAEpL,MAAO,kBAAoBoL,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,+BAAiCo8E,GAAcE,GACzJ56E,KAAKy6E,GAAe39E,YAAY+qC,GAEhC6yC,EAAYzwC,iBAAiB,UAAU,KACtC,MAAMxvC,EAA4B0F,EAAKm4E,SAASoC,EAAY1T,eAC5D4T,EAAOC,cAAe3xB,SAASvvD,QAAQ,gBAAkB8mB,OAAOC,aAAaC,QAAQu3D,GAAaz9E,KAClGmgF,EAAOC,cAAe9xB,cAAc,IAAI+xB,MAAM,0BCrCrCC,GA2BZlhF,YAAoBysC,EAA4B00C,GAA5Bh7E,KAAAsmC,EAAAA,EAA4BtmC,KAAAg7E,GAAAA,EA1B/Bh7E,KAAAwmC,EAAuB,IACvBxmC,KAAAymC,EAAwB,GACxBzmC,KAAAgiD,GAAwBjjD,EAAI0oC,KAAK,CAAEb,KAAM7mC,EAAY+H,mBAAoBq/B,iBAAkB,SAC3FnnC,KAAAoyD,GAA0BrzD,EAAImoC,IAAI,CAAEC,iBAAkB,SACtDnnC,KAAAqyD,GAAyBtzD,EAAImoC,IAAI,CAAEC,iBAAkB,SACrDnnC,KAAAsyD,GAAyBvzD,EAAI0oC,KAAK,CAAEb,KAAM,OAAQU,OAAQ,eAAgBC,eAAgB,EAAGJ,iBAAkB,SAC/GnnC,KAAAi7E,GAAyBl8E,EAAI0oC,KAAK,CAAEb,KAAM,eAAgBO,iBAAkB,SAC5EnnC,KAAA4nC,EAAsB7oC,EAAImoC,IAAI,CAAE5oC,MAAO,qBAAqByB,EAAYqH,2DAA4D2/B,MAAO,OAAQC,OAAQ,OAAQob,QAAS,OAASpiD,KAAKwmC,EAAe,IAAMxmC,KAAKymC,EAAe4b,oBAAqB,QACxQriD,KAAKgiD,GACLhiD,KAAKoyD,GACLpyD,KAAKqyD,GACLryD,KAAKsyD,GACLtyD,KAAKi7E,IAGUj7E,KAAA6nC,UAAyBnpC,EAAKgL,IAAI,CAAEo+B,MAAO,WAAYxpC,MAAO,gBAAkB0B,KAAK4nC,GAE7F5nC,KAAA+nC,EAAkB,EAClB/nC,KAAAyhD,GAAkB,EAClBzhD,KAAAyyD,GAAoB,EACpBzyD,KAAA0yD,GAAmB,EACnB1yD,KAAAgoC,GAAsB,EACtBhoC,KAAA2yD,GAAiC,KACjC3yD,KAAA4yD,GAAwB,GACxB5yD,KAAA6yD,IAA2B,EA4B3B7yD,KAAA+oC,GAAqBP,IAC5BA,EAAMQ,iBACNhpC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7HrpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GAExCzhD,KAAKyyD,GAAYzyD,KAAK8yD,GAAS9yD,KAAK+nC,GACpC/nC,KAAK0yD,GAAW1yD,KAAK+yD,GAAQ/yD,KAAKyhD,IAClCzhD,KAAK2pC,MAGE3pC,KAAAwpC,GAAqBhB,IAC5BA,EAAMQ,iBACNhpC,KAAKgoC,GAAa,EAClB,MAAMiB,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvHrpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GAExCzhD,KAAKyyD,GAAYzyD,KAAK8yD,GAAS9yD,KAAK+nC,GACpC/nC,KAAK0yD,GAAW1yD,KAAK+yD,GAAQ/yD,KAAKyhD,IAClCzhD,KAAK2pC,MAGE3pC,KAAA0pC,GAAmBlB,IAC1B,GAAmC,MAA/BxoC,KAAK6nC,UAAUmb,aAAsB,OACzC,MAAM/Z,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,IAAYS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MAC7HrpC,KAAKyhD,KAAYjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KAC1HE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAK2pC,MAGE3pC,KAAA4pC,GAAmBpB,IAC1B,GAAmC,MAA/BxoC,KAAK6nC,UAAUmb,aAAsB,OACzC,IAAKhjD,KAAKgoC,EAAY,OACtBQ,EAAMQ,iBACN,MAAMC,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,MAAQrpC,KAAKwmC,GAAgByC,EAAayZ,MAAQzZ,EAAaI,MACvHrpC,KAAKyhD,IAAWjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,KAAO7iD,KAAKymC,GAAiBwC,EAAa6Z,OAAS7Z,EAAa4Z,KACpHE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAK2pC,MAgCE3pC,KAAA6pC,GAAuBrB,IAC1BxoC,KAAKgoC,IACRhoC,KAAKsmC,EAAKqa,OAAO3gD,KAAK2yD,IACtB3yD,KAAK2yD,GAAU,MAEhB3yD,KAAKgoC,GAAa,GA7GlB,IAAK,IAAI75C,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,GAAKJ,EAAO0J,+BACrEuI,KAAKoyD,GAASt1D,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYkI,MAAO4+B,GAAI14C,EAAI,GAAK6R,KAAKwmC,GAAgBz4C,EAAOyJ,sBAAwB,GAAK,EAAGsvC,EAAG,EAAGC,MAAO,EAAGC,OAAQhnC,KAAKymC,KAErK,IAAK,IAAIt4C,EAAY,EAAGA,GAAKJ,EAAOyJ,sBAAuBrJ,GAAKJ,EAAO0J,+BACtEuI,KAAKqyD,GAAQv1D,YAAYiC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYmI,UAAW2+B,GAAI14C,EAAI,GAAK6R,KAAKwmC,GAAgBz4C,EAAOyJ,sBAAwB,GAAK,EAAGsvC,EAAG,EAAGC,MAAO,EAAGC,OAAQhnC,KAAKymC,KAGxKzmC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK+oC,IAClDhsC,SAASktC,iBAAiB,YAAajqC,KAAK0pC,IAC5C3sC,SAASktC,iBAAiB,UAAWjqC,KAAK6pC,IAE1C7pC,KAAK6nC,UAAUoC,iBAAiB,aAAcjqC,KAAKwpC,IACnDxpC,KAAK6nC,UAAUoC,iBAAiB,YAAajqC,KAAK4pC,IAClD5pC,KAAK6nC,UAAUoC,iBAAiB,WAAYjqC,KAAK6pC,IACjD7pC,KAAK6nC,UAAUoC,iBAAiB,cAAejqC,KAAK6pC,IAG7ChwC,GAASgtC,GAChB,OAAQ94C,EAAOyJ,sBAAwB,GAAKqvC,EAAI7mC,KAAKwmC,EAAe,EAG7D3sC,GAAQitC,GACf,OAAO/4C,EAAO6C,aAAe,GAAKk2C,EAAI,IAAM9mC,KAAKymC,EAAgB,IAqD1D5sC,KACP,GAAImG,KAAKgoC,EAAY,CACpB,MAAM9wB,EAAelX,KAAK8yD,GAAS9yD,KAAK+nC,GAClCmb,EAAcljD,KAAK+yD,GAAQ/yD,KAAKyhD,IAEhCjxC,EAAyBxQ,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAC1Fx6B,EAAqD,MAAvBlU,KAAKg7E,GAA0BxqE,EAAW0D,aAAe1D,EAAWiD,qBAAqBzT,KAAKg7E,IAElI,GAAI9jE,GAAQlX,KAAKyyD,GAAW,CAC3B,MAAM3sB,GAAiBod,EAAMljD,KAAK0yD,KAAax7C,EAAOlX,KAAKyyD,IACrDn9D,EAAiB0K,KAAK0yD,GAAW1yD,KAAKyyD,GAAY3sB,EAClDktB,EAAoBpkE,KAAKkgB,KAAKlgB,KAAKyB,IAAI2P,KAAKyyD,GAAWv7C,IACvD+7C,EAAoBrkE,KAAKsU,MAAMtU,KAAKsgB,IAAIlP,KAAKyyD,GAAWv7C,IAC9D,IAAK,IAAI/oB,EAAY6kE,EAAW7kE,GAAK8kE,EAAW9kE,IAC3CA,EAAI,GAAKA,GAAKJ,EAAOyJ,wBACzB0c,EAAahY,SAAS/N,GAAKS,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAO6C,YAAahC,KAAKmb,MAAM5b,EAAI23C,EAAQxwC,MAI7F4e,EAAahY,SAAStN,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAOyJ,sBAAwB,EAAG5I,KAAKmb,MAAMmN,MAAWtoB,KAAKsgB,IAAI,EAAGtgB,KAAKyB,IAAItC,EAAO6C,YAAahC,KAAKmb,MAAMm5C,KAEvJljD,KAAKyyD,GAAYv7C,EACjBlX,KAAK0yD,GAAWxP,EAEhBljD,KAAK2yD,GAAU,IAAI9f,GAAe7yC,KAAKsmC,EAAM91B,EAAY0D,GACzDlU,KAAKsmC,EAAK4sB,qBAAqBlzD,KAAK2yD,KAY/B94D,SACN,MAAM2W,EAAyBxQ,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAC1Fx6B,EAAqD,MAAvBlU,KAAKg7E,GAA0BxqE,EAAW0D,aAAe1D,EAAWiD,qBAAqBzT,KAAKg7E,IAC5H7nB,EAAwB3hD,IACrB,EAAKA,EAAQzjB,EAAO6C,cAAiBoP,KAAKymC,EAAgB,GAAK,EAGxE,IAAIu6B,EAAoB,EACpBv5B,EAAe,OAAShuC,EAAauG,KAAKymC,GAAiB,IAC/D,IAAK,IAAIt4C,EAAY,EAAGA,EAAIJ,EAAOyJ,sBAAuBrJ,IAAK,CAC9D,IAAI+yB,EAAoBhN,EAAahY,SAAS/N,GAE7Cs5C,GADgB,GAAbu5B,GAA+B,GAAb9/C,EACb,KAEA,KAETumB,GAAQhuC,GAActL,EAAI,GAAK6R,KAAKwmC,GAAgBz4C,EAAOyJ,sBAAwB,IAAM,IAAMiC,EAAa05D,EAAqBjyC,IAAc,IAC/I8/C,EAAY9/C,EAGb,MAAMmyC,EAAqBF,EAAqB6N,GAC5CA,EAAY,IACfv5B,GAAQ,MAAQznC,KAAKwmC,EAAe,GAAK,IAAM/sC,EAAa45D,GAAc,KAGvErzD,KAAK4yD,IAAiBnrB,IACzBznC,KAAK4yD,GAAgBnrB,EACrBznC,KAAKsyD,GAAOz0D,aAAa,IAAK4pC,GAC9BznC,KAAKgiD,GAAMnkD,aAAa,IAAK4pC,EAAO,KAAOznC,KAAKwmC,EAAe,IAAM/sC,EAAa45D,GAAc,MAAQrzD,KAAKwmC,EAAe,IAAM/sC,EAAauG,KAAKymC,GAAiB,QAAUhtC,EAAauG,KAAKymC,GAAiB,OAElNzmC,KAAKi7E,GAAOp9E,aAAa,IAAK,KAAOmC,KAAKwmC,EAAe,IAAM/sC,EAAa45D,GAAc,OAASrzD,KAAKwmC,EAAe,GAAK,IAAM/sC,EAAa45D,EAAa,GAAK,OAASrzD,KAAKwmC,EAAe,GAAK,IAAM/sC,EAAa45D,EAAa,GAAK,MACxOrzD,KAAKi7E,GAAO38E,MAAMi1D,QAAWyN,EAAY,EAAK,GAAK,QAEhDhhE,KAAK6yD,IAAmB7yD,KAAKsmC,EAAKgtB,YACrCtzD,KAAK6yD,GAAkB7yD,KAAKsmC,EAAKgtB,UACjCtzD,KAAKqyD,GAAQ/zD,MAAMi1D,QAAUvzD,KAAKsmC,EAAKgtB,UAAY,GAAK,SClL3D,MAAMxU,OAAEA,GAAMp1C,IAAEA,GAAGs1C,GAAEA,GAAEG,OAAEA,GAAMC,OAAEA,IAAW1gD,QAE/Bw8E,GA2BZrhF,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EA1BHtmC,KAAAm7E,GAAkCh8B,GAAO,CAAE7gD,MAAO,gBAClE8gD,GAAO,CAAE1tD,MAAO,gBAAkB,gBAClC0tD,GAAO,CAAE1tD,MAAO,iBAAmB,iBACnC0tD,GAAO,CAAE1tD,MAAO,oBAAsB,4BACtC0tD,GAAO,CAAE1tD,MAAO,mBAAqB,gBACrC0tD,GAAO,CAAE1tD,MAAO,iBAAmB,iBACnC0tD,GAAO,CAAE1tD,MAAO,oBAAsB,iBACtC0tD,GAAO,CAAE1tD,MAAO,UAAY,UAC5B0tD,GAAO,CAAE1tD,MAAO,UAAY,UAC5B0tD,GAAO,CAAE1tD,MAAO,YAAc,aAEdsO,KAAA4/C,GAAmCd,GAAO,CAAEhX,MAAO,iBACnD9nC,KAAA6/C,GAAiCf,GAAO,CAAEhX,MAAO,aAAcxpC,MAAO,cAAgB,QAEvF0B,KAAA6nC,UAA4Bn+B,GAAI,CAAEo+B,MAAO,qBAAsBxpC,MAAO,iBACrF0gD,GAAG,aACHt1C,GAAI,CAAEpL,MAAO,oGACZoL,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,gBAAkB0B,KAAKm7E,KAE/DzxE,GAAI,CAAEpL,MAAO,+EACZ0B,KAAK6/C,IAEN7/C,KAAK4/C,IAEW5/C,KAAAo7E,UAA2B36D,OAAOC,aAAaC,QAAQ,cAYhE3gB,KAAA8/C,GAAS,KACM,MAAlB9/C,KAAKo7E,UACRr7E,EAAYs7E,SAASr7E,KAAKo7E,WAE1Br7E,EAAYs7E,SAAS,gBAEtBr7E,KAAKsmC,EAAKqF,QAGJ3rC,KAAA+/C,QAAU,KAChB//C,KAAK6/C,GAAYG,oBAAoB,QAAShgD,KAAKigD,IACnDjgD,KAAK4/C,GAAcI,oBAAoB,QAAShgD,KAAK8/C,IACrD9/C,KAAK6nC,UAAUmY,oBAAoB,UAAWhgD,KAAKogD,KAG5CpgD,KAAAogD,GAAmB5X,IACa,UAAzBA,EAAM6X,OAAQpiD,SAAwC,IAAjBuqC,EAAM8X,SACxDtgD,KAAKigD,MAICjgD,KAAAigD,GAAe,KACtBx/B,OAAOC,aAAa6/B,QAAQ,aAAcvgD,KAAKm7E,GAAazpF,OAC5DsO,KAAKsmC,EAAKoa,OAAS,KACnB1gD,KAAKsmC,EAAKg1C,WAAat7E,KAAKm7E,GAAazpF,MACzCsO,KAAKsmC,EAAKqF,QAGH3rC,KAAAu7E,GAAgB,KACvBx7E,EAAYs7E,SAASr7E,KAAKm7E,GAAazpF,QAtCjB,MAAlBsO,KAAKo7E,YACRp7E,KAAKm7E,GAAazpF,MAAQsO,KAAKo7E,WAEhCp7E,KAAK6/C,GAAY5V,iBAAiB,QAASjqC,KAAKigD,IAChDjgD,KAAK4/C,GAAc3V,iBAAiB,QAASjqC,KAAK8/C,IAClD9/C,KAAK6nC,UAAUoC,iBAAiB,UAAWjqC,KAAKogD,IAChDpgD,KAAKm7E,GAAalxC,iBAAiB,SAAUjqC,KAAKu7E,KCrCpD,MAAMz8B,OAAEA,GAAMp1C,IAAEA,GAAGstB,EAAEA,GAACgoB,GAAEA,GAAEw8B,GAAEA,IAAO98E,QAEtB+8E,GAKZ5hF,YAAoBysC,EAAoBxxC,GACvC,IAAIm6D,EAEJ,OAHmBjvD,KAAAsmC,EAAAA,EAJHtmC,KAAA07E,GAAkC58B,GAAO,CAAEhX,MAAO,iBAoV3D9nC,KAAA8/C,GAAS,KAChB9/C,KAAKsmC,EAAKqF,QAGJ3rC,KAAA+/C,QAAU,KAChB//C,KAAK07E,GAAa17B,oBAAoB,QAAShgD,KAAK8/C,KAlV5ChrD,GACP,IAAK,QACJm6D,EAAUvlD,GACTs1C,GAAG,SACHhoB,GAAE,sdACFA,GAAE,6RAEF,MACF,IAAK,MACJi4B,EAAUvlD,GACTs1C,GAAG,YACHhoB,GAAE,+JAEF,MACF,IAAK,QACJi4B,EAAUvlD,GACTs1C,GAAG,cACHhoB,GAAE,gFAEF,MACF,IAAK,SACJi4B,EAAUvlD,GACTs1C,GAAG,UACHhoB,GAAE,0OAEF,MACF,IAAK,SACJi4B,EAAUvlD,GACTs1C,GAAG,UACHhoB,GAAE,0IAEF,MACF,IAAK,kBACJi4B,EAAUvlD,GACTs1C,GAAG,qBACHhoB,GAAE,gSAEF,MACF,IAAK,mBACJi4B,EAAUvlD,GACTs1C,GAAG,qBACHhoB,GAAE,yMACFA,GAAE,qRAEF,MACF,IAAK,MACJi4B,EAAUvlD,GACTs1C,GAAG,sBACHhoB,GAAE,0LACFA,GAAE,wUAEF,MACF,IAAK,WAEHi4B,EAAUvlD,GACTs1C,GAAG,gBACHhoB,GAAE,oPACFA,GAAE,sQAGJ,MACD,IAAK,gBAEHi4B,EAAUvlD,GACTs1C,GAAG,kBACHhoB,GAAE,yMAGJ,MACD,IAAK,kBAEHi4B,EAAUvlD,GACTs1C,GAAG,4BACHhoB,GAAE,qIAGJ,MACD,IAAK,SACJi4B,EAAUvlD,GACTs1C,GAAG,UACHhoB,GAAE,4EACFA,GAAE,uFAEF,MACF,IAAK,iBACJi4B,EAAUvlD,GACTs1C,GAAG,mBACHhoB,GAAE,iGACFA,GAAE,qJAEF,MACF,IAAK,eACJi4B,EAAUvlD,GACTs1C,GAAG,oCACHhoB,GAAE,oGACFA,GAAE,kWACFA,GAAE,2GAGF,MACF,IAAK,kBACJi4B,EAAUvlD,GACTs1C,GAAG,kCACHhoB,GAAE,gOACFA,GAAE,gQAGF,MACF,IAAK,iBACJi4B,EAAUvlD,GACTs1C,GAAG,4BACHhoB,GAAE,+HACFA,GAAE,oGAEF,MACF,IAAK,aACJi4B,EAAUvlD,GACTs1C,GAAG,cACHhoB,GAAE,0DACFA,GAAE,ySACFA,GAAE,sGAEF,MACF,IAAK,WACJi4B,EAAUvlD,GACTs1C,GAAG,aACHhoB,GAAE,mHAEF,MACF,IAAK,YACJi4B,EAAUvlD,GACTs1C,GAAG,SACHhoB,GAAE,+KAEF,MACF,IAAK,gBACJi4B,EAAUvlD,GACTs1C,GAAG,uBACHhoB,GAAE,mHACFA,GAAE,yGAEF,MACF,IAAK,aACJi4B,EAAUvlD,GACTs1C,GAAG,oBACHhoB,GAAE,+KAEF,MACF,IAAK,WACJi4B,EAAUvlD,GACTs1C,GAAG,uBACHhoB,GAAE,kMACFA,GAAE,gWACFA,GAAE,2KAEF,MACF,IAAK,SACJi4B,EAAUvlD,GACTs1C,GAAG,UACHhoB,GAAE,sKACFA,GAAE,mXACFA,GAAE,oOAEF,MACF,IAAK,UACJi4B,EAAUvlD,GACTs1C,GAAG,WACHhoB,GAAE,8GAEF,MACF,IAAK,eAEHi4B,EAAUvlD,GACTs1C,GAAG,iBACHhoB,GAAE,sHAEF,MACH,IAAK,eAEHi4B,EAAUvlD,GACTs1C,GAAG,iBACHhoB,GAAE,qMAEF,MACH,IAAK,eAEHi4B,EAAUvlD,GACTs1C,GAAG,iBACHhoB,GAAE,8GAGJ,MACD,IAAK,cAEHi4B,EAAUvlD,GACTs1C,GAAG,gBACHhoB,GAAE,gJAGJ,MACD,IAAK,YACJi4B,EAAUvlD,GACTs1C,GAAG,gBACHhoB,GAAE,mRACFA,GAAE,0KACFA,GAAE,yYAEF,MACF,IAAK,eACJi4B,EAAUvlD,GACTs1C,GAAG,YACHhoB,GAAE,6KAEF,MACF,IAAK,oBACJi4B,EAAUvlD,GACTs1C,GAAG,sBACHhoB,GAAE,gUACFA,GAAE,gJAEF,MACF,IAAK,iBACJi4B,EAAUvlD,GACTs1C,GAAG,mBACHhoB,GAAE,kIAEF,MACF,IAAK,mBACJi4B,EAAUvlD,GACTs1C,GAAG,qBACHhoB,GAAE,sHACFA,GAAE,qGAEF,MACF,IAAK,WACJi4B,EAAUvlD,GACTs1C,GAAG,YACHhoB,GAAE,2KACFA,GAAE,kJACFA,GAAE,yIAEF,MACF,IAAK,YACJi4B,EAAUvlD,GACTs1C,GAAG,aACHhoB,GAAE,mNACFA,GAAE,+IAEF,MACF,IAAK,UACJi4B,EAAUvlD,GACTs1C,GAAG,WACHhoB,GAAE,gHACFA,GAAE,sRACFA,GAAE,qJAEF,MACF,IAAK,kBACJi4B,EAAUvlD,GACTs1C,GAAG,oBACHhoB,GAAE,oIACFA,GAAE,4GAEF,MACF,IAAK,kBACJi4B,EAAUvlD,GACTs1C,GAAG,oBACHhoB,GAAE,oJACFA,GAAE,yIAEF,MACF,IAAK,iBACJi4B,EAAUvlD,GACT8xE,GAAG,6CACHxkD,GAAE,+IACFA,GAAE,mJAEF,MACF,IAAK,cACJi4B,EAAUvlD,GACT8xE,GAAG,0CACHxkD,GAAE,4IACFA,GAAE,gJAEF,MACF,IAAK,aACJi4B,EAAUvlD,GACTs1C,GAAG,qBACHhoB,GAAE,+HACFA,GAAE,0IAEF,MACF,IAAK,gBACJi4B,EAAUvlD,GACTs1C,GAAG,wBACHhoB,GAAE,+HACFA,GAAE,gHAEF,MACF,IAAK,SACJi4B,EAAUvlD,GACTs1C,GAAG,qBACHhoB,GAAE,8LACFA,GAAE,uNACFA,GAAE,4PAEF,MACF,IAAK,gBACJi4B,EAAUvlD,GACTs1C,GAAG,uBACHhoB,GAAE,gMAEF,MACF,IAAK,sBACJi4B,EAAUvlD,GACTs1C,GAAG,wBACHhoB,GAAE,0LAEF,MAEF,QAAS,MAAM,IAAIpnC,MAAM,6BAA+BkF,GAGzDkL,KAAK6nC,UAAYn+B,GAAI,CAAEo+B,MAAO,SAAUxpC,MAAO,iBAC9C2wD,EACAjvD,KAAK07E,IAGN56B,YAAW,IAAM9gD,KAAK07E,GAAa36B,UAEnC/gD,KAAK07E,GAAazxC,iBAAiB,QAASjqC,KAAK8/C,KC/UnD,MAAM67B,GAUL9hF,YAAYuG,EAAkCw7E,EAA6BC,EAAYnW,GAAzC1lE,KAAA47E,GAAAA,EAA6B57E,KAAA67E,GAAAA,EAT1D77E,KAAA87E,GAAc/+E,SAASC,eAAe,KACtCgD,KAAA+7E,GAAyBh9E,EAAI62C,KAAK,CAAEomC,cAAe,aAAc3c,YAAa,GAAI8K,cAAe,SAAU8R,cAAe,OAAQr1C,KAAM,OAAS5mC,KAAK87E,IACtJ97E,KAAAk8E,GAAwBn9E,EAAI4nC,KAAK,CAAEE,EAAG,EAAGC,EAAG,IAC7C9mC,KAAA6nC,UAA2B9oC,EAAImoC,IAAIlnC,KAAKk8E,GAAOl8E,KAAK+7E,IAC5D/7E,KAAAm8E,GAAyB,EACzBn8E,KAAAo8E,IAAwB,EACxBp8E,KAAAq8E,IAA6B,EAC7Br8E,KAAAs8E,GAAyB,GAGhCt8E,KAAKk8E,GAAMr+E,aAAa,OAAQkC,EAAY+H,oBAC5C9H,KAAK+7E,GAAOl+E,aAAa,OAAQ6nE,GAG3B7rE,QAAQktC,EAAeC,GAC7BhnC,KAAK6nC,UAAUhqC,aAAa,IAAK,GAAMmC,KAAK47E,GAAK70C,GACjD/mC,KAAK6nC,UAAUhqC,aAAa,IAAK,IAAM9P,EAAOqL,gBAAkB4G,KAAK67E,GAAK70C,IAC1EhnC,KAAKk8E,GAAMr+E,aAAa,QAAS,IAAMkpC,EAAQ,IAC/C/mC,KAAKk8E,GAAMr+E,aAAa,SAAU,IAAMmpC,EAAS,IACjDhnC,KAAK+7E,GAAOl+E,aAAa,IAAK,GAAMkpC,EAAQ,GAC5C/mC,KAAK+7E,GAAOl+E,aAAa,IAAK,GAAKjP,KAAKmb,MAAMi9B,EAAS,EAAI,IAGrDntC,SAAS7K,EAAeutF,EAAcC,EAAmB9W,EAAerqE,EAAkB8e,GAC5Fna,KAAKm8E,IAAkBntF,IACrBgR,KAAKq8E,IAAgC,GAATrtF,IAAuC,GAAvBgR,KAAKm8E,MACxC,GAATntF,EACHgR,KAAKk8E,GAAMr+E,aAAa,OAAQ,QAG5BxC,EACH2E,KAAKk8E,GAAMr+E,aAAa,OAAQ0+E,EAAMx8E,EAAY0I,sBAAwB1I,EAAYyI,oBAC9E2R,EACRna,KAAKk8E,GAAMr+E,aAAa,OAAQ0+E,EAAMx8E,EAAY4I,oBAAsB5I,EAAY2I,kBAEpF1I,KAAKk8E,GAAMr+E,aAAa,OAAQ0+E,EAAMx8E,EAAYwI,sBAAwBxI,EAAYuI,qBAKrFtZ,GAAS,KACZgR,KAAK+7E,GAAOl+E,aAAa,YAAa,MACtCmC,KAAK+7E,GAAOl+E,aAAa,QAAS,wCAGlCmC,KAAK+7E,GAAOl+E,aAAa,YAAa,MACtCmC,KAAK+7E,GAAOl+E,aAAa,QAAS,oCAGnCmC,KAAKm8E,GAAiBntF,EACtBgR,KAAK87E,GAAMh5C,KAAO,GAAK9zC,GAGpBgR,KAAKo8E,IAAgBG,GAAOv8E,KAAKs8E,IAAkB5W,IACtD1lE,KAAKo8E,GAAeG,EAChBC,EACHx8E,KAAK+7E,GAAOl+E,aAAa,OAAQkC,EAAY0H,eAE7CzH,KAAK+7E,GAAOl+E,aAAa,OAAQ6nE,GAEN,GAAvB1lE,KAAKm8E,GACRn8E,KAAKk8E,GAAMr+E,aAAa,OAAQkC,EAAYqH,kBAGxC/L,EACH2E,KAAKk8E,GAAMr+E,aAAa,OAAQ0+E,EAAMx8E,EAAY0I,sBAAwB1I,EAAYyI,oBAC9E2R,EACRna,KAAKk8E,GAAMr+E,aAAa,OAAQ0+E,EAAMx8E,EAAY4I,oBAAsB5I,EAAY2I,kBAEpF1I,KAAKk8E,GAAMr+E,aAAa,OAAQ0+E,EAAMx8E,EAAYwI,sBAAwBxI,EAAYuI,sBAKtFtI,KAAKq8E,IAAqBG,GAAYx8E,KAAKs8E,IAAkB5W,IAChE1lE,KAAKq8E,GAAoBG,EACrBA,GACHx8E,KAAKk8E,GAAMr+E,aAAa,OAAQ6nE,GAChC1lE,KAAK+7E,GAAOl+E,aAAa,OAAQkC,EAAY0H,gBAE7CzH,KAAK+7E,GAAOl+E,aAAa,OAAQ6nE,GAEN,GAAvB1lE,KAAKm8E,GACRn8E,KAAKk8E,GAAMr+E,aAAa,OAAQkC,EAAYqH,kBAGxC/L,EACH2E,KAAKk8E,GAAMr+E,aAAa,OAAQ0+E,EAAMx8E,EAAY0I,sBAAwB1I,EAAYyI,oBAC9E2R,EACRna,KAAKk8E,GAAMr+E,aAAa,OAAQ0+E,EAAMx8E,EAAY4I,oBAAsB5I,EAAY2I,kBAEpF1I,KAAKk8E,GAAMr+E,aAAa,OAAQ0+E,EAAMx8E,EAAYwI,sBAAwBxI,EAAYuI,sBAK1FtI,KAAKs8E,GAAiB5W,SAIX+W,GAwDZ5iF,YAAoBysC,EAA4Bod,GAA5B1jD,KAAAsmC,EAAAA,EAA4BtmC,KAAA0jD,GAAAA,EAvDhC1jD,KAAA08E,GAAkCh+E,EAAKygD,OAAO,CAAE7gD,MAAO,wBAA0BvQ,EAAOqL,gBAAkB,gDAEzHsF,EAAK0gD,OAAO,CAAE1tD,MAAO,aAAe,qBACpCgN,EAAK0gD,OAAO,CAAE1tD,MAAO,YAAc,oBACnCgN,EAAK0gD,OAAO,CAAE1tD,MAAO,aAAe,oBAEpBsO,KAAA28E,GAA6B59E,EAAI69E,IACjC58E,KAAA68E,GAAmC99E,EAAI69E,IACvC58E,KAAA0mC,EAA4B3nC,EAAI4nC,KAAK,CAAEC,KAAM7mC,EAAYuH,SAAUu/B,EAAG,EAAGC,EAAG,EAAGC,MAAO,EAAGC,OAAQ,MACjGhnC,KAAA88E,GAAgC/9E,EAAI4nC,KAAK,CAAEC,KAAM,OAAQU,OAAQvnC,EAAYsH,aAAckgC,eAAgB,EAAGJ,iBAAkB,OAAQN,EAAG,EAAGC,EAAG,EAAGC,MAAO,GAAIC,OAAQ,KACvKhnC,KAAAkoE,GAA+BnpE,EAAI0oC,KAAK,CAAEb,KAAM7mC,EAAY0H,aAAc6/B,OAAQvnC,EAAY0H,aAAc8/B,eAAgB,EAAGJ,iBAAkB,SACjJnnC,KAAAmoE,GAAiCppE,EAAI0oC,KAAK,CAAEb,KAAM7mC,EAAY0H,aAAc6/B,OAAQvnC,EAAY0H,aAAc8/B,eAAgB,EAAGJ,iBAAkB,SACnJnnC,KAAA+8E,GAAiCh+E,EAAI0oC,KAAK,CAAEb,KAAM7mC,EAAY+H,mBAAoBw/B,OAAQvnC,EAAY+H,mBAAoBy/B,eAAgB,EAAGJ,iBAAkB,SAC/JnnC,KAAA8pE,GAAiC/qE,EAAI4nC,KAAK,CAAEmB,MAAO,wBAAyBlB,KAAM7mC,EAAY4H,iBAAkB2/B,OAAQvnC,EAAYsH,aAAckgC,eAAgB,EAAGwiC,mBAAoB,OAAQC,eAAgB,MAAO7iC,iBAAkB,OAAQoD,WAAY,SAAU1D,EAAG,EAAGC,EAAG,EAAGC,MAAO,GAAIC,OAAQ,KACvShnC,KAAA4nC,EAAsB7oC,EAAImoC,IAAI,CAAE5oC,MAAO,qBAAqByB,EAAYqH,wCAAyC4/B,OAAQ,KACzIhnC,KAAK28E,GACL38E,KAAK+8E,GACL/8E,KAAK8pE,GACL9pE,KAAK68E,GACL78E,KAAK88E,GACL98E,KAAKkoE,GACLloE,KAAKmoE,GACLnoE,KAAK0mC,GAEW1mC,KAAAg9E,GAA6Bt+E,EAAKygD,OAAO,CAAErX,MAAO,iBAAkBxpC,MAAO,4JAC5E0B,KAAA6nC,UAAyBnpC,EAAKgL,IAAI,CAAEo+B,MAAO,cAAexpC,MAAO,uDAAyD0B,KAAK4nC,EAAM5nC,KAAKg9E,GAASh9E,KAAK08E,IAEvJ18E,KAAAi9E,GAAiB,GACjBj9E,KAAAk9E,GAAgC,GACzCl9E,KAAA+nC,EAAkB,EAClB/nC,KAAAyhD,GAAkB,EAMlBzhD,KAAAm9E,GAAyB,EACzBn9E,KAAAo9E,GAA6B,EAC7Bp9E,KAAAq9E,GAAoB,EACpBr9E,KAAAs9E,GAAwB,EACxBt9E,KAAAioC,GAAsB,EACtBjoC,KAAAu9E,IAAyB,EACzBv9E,KAAAkrE,IAAiB,EACjBlrE,KAAAyjE,GAAoB,GACpBzjE,KAAAw9E,GAAyB,GACzBx9E,KAAA6lE,GAAgC,EAChC7lE,KAAAkkE,GAA4B,EAC5BlkE,KAAAy9E,GAAgC,EAChCz9E,KAAA2nC,GAA6B,EAC7B3nC,KAAAmkE,IAA6B,EAC7BnkE,KAAAimE,IAAkC,EAClCjmE,KAAA09E,GAAsBrkF,EACtB2G,KAAA29E,GAA0B,EAC1B39E,KAAA49E,GAA0B,EAsC1B59E,KAAA69E,GAAiCr1C,IACxCxoC,KAAK29E,GAAkB/uF,KAAKsU,MAAMtU,KAAKyB,IAAI2P,KAAKsmC,EAAKnmC,KAAKob,SAAW,EAAG3sB,KAAKsgB,IAAI,EAAGlP,KAAK+nC,EAAU/nC,KAAKyjE,OAGjGzjE,KAAA89E,GAAuBt1C,IAE9B,IAAIu1C,EAA4C,aAA3B/9E,KAAK08E,GAAahrF,MAAwB,EAAI,EAEpC,aAA3BsO,KAAK08E,GAAahrF,OAAmD,YAA3BsO,KAAK08E,GAAahrF,OAI/DsO,KAAKsmC,EAAKvqB,IAAM/b,KAAK29E,GAAkB,EAAII,EAE3C/9E,KAAKsmC,EAAK0T,UAAUC,oBACpBj6C,KAAKsmC,EAAK0T,UAAUgkC,aAMhBh+E,KAAKsmC,EAAKzN,MAAMvxB,UAAYtH,KAAK29E,GAAkBI,IACtD/9E,KAAKsmC,EAAKzN,MAAMvxB,WAChBtH,KAAK0jD,GAAYu6B,GAAc51C,oBAIG,aAA3BroC,KAAK08E,GAAahrF,QAI1BsO,KAAKsmC,EAAKvqB,IAAM/b,KAAK29E,GAErB39E,KAAKsmC,EAAK0T,UAAUC,oBACpBj6C,KAAKsmC,EAAK0T,UAAUkkC,aAMhBl+E,KAAKsmC,EAAKzN,MAAMvxB,SAAWtH,KAAK29E,KACnC39E,KAAKsmC,EAAKzN,MAAMvxB,WAChBtH,KAAK0jD,GAAYu6B,GAAc51C,oBAKjCroC,KAAK08E,GAAa1V,eAAiB,GAG5BhnE,KAAAm+E,GAAqB,KAC5Bn+E,KAAKsmC,EAAK0T,UAAUokC,WAAWp+E,KAAKg9E,GAAQhW,gBAGrChnE,KAAA+tE,GAAoBC,IAC3B,MAAM1mE,EAAYtH,KAAKyjE,GAAYzjE,KAAKsmC,EAAKzN,MAAMvxB,SAAW,EAC1DtH,KAAK2nC,GAAqBrgC,IAC7BtH,KAAK2nC,EAAoBrgC,EACzBtH,KAAK0mC,EAAU7oC,aAAa,IAAK,GAAKyJ,IAEvCmZ,OAAO+hD,sBAAsBxiE,KAAK+tE,KAwB3B/tE,KAAAq+E,GAAsB71C,IAC7BxoC,KAAKu9E,IAAgB,EACrBv9E,KAAKkrE,IAAiB,EACtBlrE,KAAKs+E,GAAiB91C,GACtBxoC,KAAKm9E,GAAiBn9E,KAAKq9E,GAC3Br9E,KAAKo9E,GAAqBp9E,KAAKs9E,IAGxBt9E,KAAAu+E,GAAoB/1C,IAC3BxoC,KAAKs+E,GAAiB91C,GAClBxoC,KAAKm9E,IAAkBn9E,KAAKq9E,IAAar9E,KAAKo9E,IAAsBp9E,KAAKs9E,IAE5E90C,EAAMQ,iBAEHhpC,KAAKu9E,IAAev9E,KAAKw+E,KAC7Bx+E,KAAK6oC,MAGE7oC,KAAAy+E,GAAuBj2C,IAC9BxoC,KAAKu9E,IAAgB,EACrBv9E,KAAKkrE,IAAiB,EACtBlrE,KAAK6oC,MAGE7oC,KAAA4oC,GAAkBJ,IACrBxoC,KAAKioC,IACTjoC,KAAKioC,GAAa,IAGXjoC,KAAA8oC,GAAiBN,IACnBxoC,KAAKioC,IACVjoC,KAAKioC,GAAa,IAWXjoC,KAAA+oC,GAAqBP,IAC5BA,EAAMQ,iBACNhpC,KAAKu9E,IAAgB,EACrBv9E,KAAK0+E,GAAgBl2C,GACrBxoC,KAAKm9E,GAAiBn9E,KAAKq9E,GAC3Br9E,KAAKo9E,GAAqBp9E,KAAKs9E,GAG3Bt9E,KAAKyhD,IAAW1zD,EAAOqL,kBAEtBovC,EAAM6lC,UACTruE,KAAKkrE,IAAiB,EACtBlrE,KAAKsmC,EAAK0T,UAAU2kC,kBAAkB3+E,KAAKsmC,EAAK0T,UAAUkC,eAAgBl8C,KAAKq9E,GAAWr9E,KAAKsmC,EAAK0T,UAAUoC,eAAgBp8C,KAAKs9E,IACnIt9E,KAAKsmC,EAAK0T,UAAU4kC,qBAEpB5+E,KAAKkrE,IAAiB,EAClBlrE,KAAKsmC,EAAKlmC,SAAWJ,KAAKs9E,IAAiBt9E,KAAKsmC,EAAKvqB,KAAO/b,KAAKq9E,KACpEr9E,KAAKsmC,EAAK0T,UAAU6kC,cAAc7+E,KAAKs9E,GAAet9E,KAAKq9E,IAC3Dr9E,KAAKkrE,IAAiB,GAEvBlrE,KAAKsmC,EAAK0T,UAAUC,uBAKfj6C,KAAA0pC,GAAmBlB,IAC1BxoC,KAAK0+E,GAAgBl2C,GACjBxoC,KAAKu9E,KACJv9E,KAAKm9E,IAAkBn9E,KAAKq9E,IAAar9E,KAAKo9E,IAAsBp9E,KAAKs9E,KAC5Et9E,KAAKkrE,IAAiB,GAEvBlrE,KAAKw+E,MAENx+E,KAAK6oC,MAGE7oC,KAAAo1E,GAAsB5sC,IAC7B,GAAIxoC,KAAKu9E,KAAkBv9E,KAAKkrE,IAC3BlrE,KAAKsmC,EAAKlmC,SAAWJ,KAAKs9E,IAAiBt9E,KAAKsmC,EAAKvqB,KAAO/b,KAAKq9E,GAAW,CAC/E,MAAMyB,GAAgB9+E,KAAKyhD,GAAU1zD,EAAOqL,iBAAmB4G,KAAKw9E,GAAkBx9E,KAAKw9E,GAAiB,EACtGuB,EAAuB/+E,KAAKsmC,EAAKnmC,KAAKqb,mBAC5Cxb,KAAKsmC,EAAK0T,UAAUokC,YAAYp+E,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKs9E,IAAe3lE,KAAK3X,KAAKq9E,KAAcyB,EAAK,EAAIC,KAAkBA,EAAe,IAGhJ/+E,KAAKu9E,IAAgB,EACrBv9E,KAAKkrE,IAAiB,EACtBlrE,KAAK6oC,MA/MLpoB,OAAO+hD,sBAAsBxiE,KAAK+tE,IAClC/tE,KAAK4nC,EAAKqC,iBAAiB,YAAajqC,KAAK+oC,IAC7ChsC,SAASktC,iBAAiB,YAAajqC,KAAK0pC,IAC5C3sC,SAASktC,iBAAiB,UAAWjqC,KAAKo1E,IAC1Cp1E,KAAK4nC,EAAKqC,iBAAiB,YAAajqC,KAAK4oC,IAC7C5oC,KAAK4nC,EAAKqC,iBAAiB,WAAYjqC,KAAK8oC,IAE5C9oC,KAAKg9E,GAAQ/yC,iBAAiB,SAAUjqC,KAAKm+E,IAC7Cn+E,KAAKg9E,GAAQ/yC,iBAAiB,aAAcjqC,KAAKq+E,IACjDr+E,KAAKg9E,GAAQ/yC,iBAAiB,YAAajqC,KAAKu+E,IAChDv+E,KAAKg9E,GAAQ/yC,iBAAiB,WAAYjqC,KAAKy+E,IAC/Cz+E,KAAKg9E,GAAQ/yC,iBAAiB,cAAejqC,KAAKy+E,IAElD,IAAIO,GAAgC,EACpCjiF,SAASktC,iBAAiB,aAAa,KACjC+0C,IACJh/E,KAAK09E,IAAa,EAClB19E,KAAK6oC,MAENm2C,GAAuB,KACrB,GACHjiF,SAASktC,iBAAiB,cAAc,KAClC+0C,IACJh/E,KAAK09E,IAAa,EAClB19E,KAAK6oC,MAENm2C,GAAuB,KACrB,GAEHh/E,KAAK08E,GAAa1V,eAAiB,EACnChnE,KAAK08E,GAAazyC,iBAAiB,SAAUjqC,KAAK89E,IAClD99E,KAAK08E,GAAazyC,iBAAiB,YAAajqC,KAAK69E,IAmE/ChkF,sBACFmG,KAAKioC,IACRjoC,KAAKsmC,EAAKzN,MAAMvxB,SAAWtH,KAAKq9E,GAAar9E,KAAK+nC,EAAU/nC,KAAKyjE,GAAazjE,KAAKyjE,IAI7E5pE,KACPmG,KAAKsmC,EAAK0T,UAAU2kC,kBAAkB3+E,KAAKsmC,EAAK0T,UAAUkC,eAAgBl8C,KAAKq9E,GAAWr9E,KAAKsmC,EAAK0T,UAAUoC,eAAgBp8C,KAAKs9E,IACnIt9E,KAAKsmC,EAAK0T,UAAU4kC,mBAGb/kF,GAAiB2uC,GACxB,MAAMS,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,EAAUS,EAAMiB,QAAQ,GAAGN,QAAUF,EAAaI,KACvDrpC,KAAKyhD,GAAUjZ,EAAMiB,QAAQ,GAAGkZ,QAAU1Z,EAAa4Z,IACnDE,MAAM/iD,KAAK+nC,KAAU/nC,KAAK+nC,EAAU,GACpCgb,MAAM/iD,KAAKyhD,MAAUzhD,KAAKyhD,GAAU,GACxCzhD,KAAKq9E,GAAYzuF,KAAKsU,MAAMtU,KAAKyB,IAAI2P,KAAKsmC,EAAKnmC,KAAKob,SAAW,EAAG3sB,KAAKsgB,IAAI,EAAGlP,KAAK+nC,EAAU/nC,KAAKyjE,MAClGzjE,KAAKs9E,GAAgB1uF,KAAKsU,MAAMtU,KAAKyB,IAAI2P,KAAKsmC,EAAKnmC,KAAK0b,kBAAoB,EAAGjtB,KAAKsgB,IAAI,GAAIlP,KAAKyhD,GAAU1zD,EAAOqL,iBAAmB4G,KAAKw9E,MAqCnI3jF,GAAgB2uC,GACvB,MAAMS,EAA2BjpC,KAAK4nC,EAAKsB,wBAC3ClpC,KAAK+nC,GAAWS,EAAMW,SAAWX,EAAMY,OAASH,EAAaI,KAC7DrpC,KAAKyhD,IAAWjZ,EAAMma,SAAWna,EAAMoa,OAAS3Z,EAAa4Z,IAC7D7iD,KAAKq9E,GAAYzuF,KAAKsU,MAAMtU,KAAKyB,IAAI2P,KAAKsmC,EAAKnmC,KAAKob,SAAW,EAAG3sB,KAAKsgB,IAAI,EAAGlP,KAAK+nC,EAAU/nC,KAAKyjE,MAClGzjE,KAAKs9E,GAAgB1uF,KAAKsU,MAAMtU,KAAKyB,IAAI2P,KAAKsmC,EAAKnmC,KAAK0b,kBAAoB,EAAGjtB,KAAKsgB,IAAI,GAAIlP,KAAKyhD,GAAU1zD,EAAOqL,iBAAmB4G,KAAKw9E,MAoDnI3jF,KACP,IAAIuG,EAAkBJ,KAAKs9E,GACvBvhE,EAAc/b,KAAKq9E,GAEnBr9E,KAAK09E,KACR3hE,EAAM/b,KAAKsmC,EAAKvqB,IAChB3b,EAAUJ,KAAKsmC,EAAKlmC,SAGrB,MAAMo8E,EAAqBzgE,GAAO/b,KAAKsmC,EAAKvqB,KAAO3b,GAAWJ,KAAKsmC,EAAKlmC,QAClE6+E,EAA4Bj/E,KAAKyhD,IAAW1zD,EAAOqL,gBAEzD,GAAI4G,KAAKkrE,IAAkBlrE,KAAKm9E,IAAkBn9E,KAAKq9E,GAAW,CAGjE,IAAIrP,EAAoBgL,KAAK1tD,MAEzB0iD,EAAYhuE,KAAK49E,IAAmB,KAEnC7hE,EAAM/b,KAAKsmC,EAAKmC,aAAezoC,KAAKsmC,EAAKgD,iBAAmB,GAAKtpC,KAAKsmC,EAAKmC,aAAezoC,KAAKsmC,EAAKnmC,KAAKob,SAAWvb,KAAKsmC,EAAKgD,kBAEjItpC,KAAK0jD,GAAYw7B,mBAAmB,GAEjCnjE,EAAM/b,KAAKsmC,EAAKmC,cAAgBzoC,KAAKsmC,EAAKmC,aAAe,GAE5DzoC,KAAK0jD,GAAYw7B,oBAAoB,GAGtCl/E,KAAK49E,GAAkB5P,GAqBzB,GAfIhuE,KAAKioC,IAAejoC,KAAKu9E,KAAkBf,GAAYyC,GAC1Dj/E,KAAK88E,GAAcj/E,aAAa,IAAK,IAAM,EAAImC,KAAKyjE,GAAY1nD,IAChE/b,KAAK88E,GAAcj/E,aAAa,IAAK,IAAM,EAAI9P,EAAOqL,gBAAmB4G,KAAKw9E,GAAiBp9E,IAC/FJ,KAAK88E,GAAcj/E,aAAa,SAAU,IAAMmC,KAAKw9E,GAAiB,IACtEx9E,KAAK88E,GAAcj/E,aAAa,QAAS,IAAMmC,KAAKyjE,GAAY,IAChEzjE,KAAK88E,GAAcx+E,MAAMisC,WAAa,YAC3BvqC,KAAKioC,GAAgBjoC,KAAK+nC,GAAWhsB,EAAM/b,KAAKyjE,IAAezjE,KAAK+nC,EAAUhsB,EAAM/b,KAAKyjE,GAAYzjE,KAAKyjE,IAAezjE,KAAKyhD,GAAU,KAAUw9B,GAC7Jj/E,KAAK88E,GAAcj/E,aAAa,IAAK,IAAM,EAAImC,KAAKyjE,GAAY1nD,IAChE/b,KAAK88E,GAAcj/E,aAAa,IAAK,KACrCmC,KAAK88E,GAAcj/E,aAAa,SAAU,IAAM9P,EAAOqL,gBAAkB,IACzE4G,KAAK88E,GAAcx+E,MAAMisC,WAAa,WAEtCvqC,KAAK88E,GAAcx+E,MAAMisC,WAAa,UAGlCvqC,KAAKioC,GAAcjoC,KAAK09E,KAAelB,GAAYyC,EAAiB,CACxE,MAAMH,GAAgB9+E,KAAKyhD,GAAU1zD,EAAOqL,iBAAmB4G,KAAKw9E,GAAkBx9E,KAAKw9E,GAAiB,EACtGxzC,EAAiBhqC,KAAKyjE,IAAa1nD,EAAM,IACzC0oD,EAAiB12E,EAAOqL,gBAAkB4G,KAAKw9E,IAAkBp9E,EAAU,IAC3EK,EAAqC,GAAtBT,KAAKw9E,GACpB2B,EAAoC,GAAtBn/E,KAAKw9E,GACnBz2C,EAAsC,KAAtB/mC,KAAKw9E,GAE3Bx9E,KAAKkoE,GAAarqE,aAAa,OAAQihF,IAAO9+E,KAAK09E,GAAa39E,EAAYsH,aAAetH,EAAY0H,cACvGzH,KAAKmoE,GAAetqE,aAAa,OAASihF,GAAO9+E,KAAK09E,GAAwC39E,EAAY0H,aAAvC1H,EAAYsH,cAE/ErH,KAAKkoE,GAAarqE,aAAa,IAAK,KAAKmsC,KAAUy6B,EAAS0a,OAASn1C,EAASjD,KAAS09B,EAAShkE,OAAUupC,EAASjD,KAAS09B,EAAShkE,OACrIT,KAAKmoE,GAAetqE,aAAa,IAAK,KAAKmsC,KAAUy6B,EAAS0a,OAASn1C,EAASjD,KAAS09B,EAAShkE,OAAUupC,EAASjD,KAAS09B,EAAShkE,OAEvIT,KAAKkoE,GAAa5pE,MAAMisC,WAAa,UACrCvqC,KAAKmoE,GAAe7pE,MAAMisC,WAAa,eAEvCvqC,KAAKkoE,GAAa5pE,MAAMisC,WAAa,SACrCvqC,KAAKmoE,GAAe7pE,MAAMisC,WAAa,SAGxCvqC,KAAK8pE,GAAexrE,MAAM+qC,KAAQrpC,KAAKyjE,GAAYzjE,KAAKsmC,EAAKvqB,IAAO,KACpE/b,KAAK8pE,GAAexrE,MAAMukD,IAAO90D,EAAOqL,gBAAmB4G,KAAKw9E,GAAiBx9E,KAAKsmC,EAAKlmC,QAAY,KAEvGJ,KAAKg9E,GAAQ1+E,MAAM+qC,KAAQrpC,KAAKyjE,GAAYzjE,KAAKsmC,EAAKvqB,IAAO,KAE7D/b,KAAKg9E,GAAQ1+E,MAAMyoC,MAAQ/mC,KAAKyjE,GAAY,KAC5CzjE,KAAKg9E,GAAQ1+E,MAAMukD,IAAO90D,EAAOqL,gBAAkB4G,KAAKw9E,GAAiBx9E,KAAKsmC,EAAKlmC,QAAW,KAC9FJ,KAAKg9E,GAAQ1+E,MAAM0oC,OAAShnC,KAAKw9E,GAAiB,KAElDx9E,KAAK08E,GAAap+E,MAAM+qC,KAAQrpC,KAAKyjE,GAAY1nD,EAAO,KAExD,MAAMgjE,EAAuB/+E,KAAKsmC,EAAKnmC,KAAKqb,mBAAqB,EACjE,IAAK,IAAIrtB,EAAY6R,KAAKy9E,GAAuBtvF,EAAI4wF,EAAc5wF,IAClE6R,KAAKg9E,GAAQlgF,YAAY4B,EAAK0gD,OAAO,CAAE1tD,MAAOvD,GAAKA,IAEpD,IAAK,IAAIA,EAAY4wF,EAAc5wF,EAAI6R,KAAKy9E,GAAuBtvF,IAClE6R,KAAKg9E,GAAQjwE,YAAkB/M,KAAKg9E,GAAQjK,WAE7C/yE,KAAKy9E,GAAwBsB,EAC7B,MAAMK,EAA0Bp/E,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASuX,KAAK3X,KAAKsmC,EAAKvqB,KACtF/b,KAAKg9E,GAAQhW,eAAiBoY,IAAiBp/E,KAAKg9E,GAAQhW,cAAgBoY,GAG1EvlF,SAKN,GAHAmG,KAAKyjE,GAAYzjE,KAAKsmC,EAAKqC,cAC3B3oC,KAAKw9E,GAAiBx9E,KAAKsmC,EAAK6gC,mBAE5BnnE,KAAK6lE,IAAyB7lE,KAAKsmC,EAAKnmC,KAAK0b,kBAAmB,CAGnE,IAAK,IAAIirB,EAAY9mC,KAAK6lE,GAAuB/+B,EAAI9mC,KAAKsmC,EAAKnmC,KAAK0b,kBAAmBirB,IAAK,CAC3F9mC,KAAKi9E,GAAMn2C,GAAK,GAChB,IAAK,IAAID,EAAY,EAAGA,EAAI7mC,KAAKkkE,GAAmBr9B,IAAK,CACxD,MAAMw4C,EAAW,IAAI1D,GAAI70C,EAAGD,EAAGC,EAAG/mC,EAAYW,gBAAgBV,KAAKsmC,EAAKnmC,KAAM2mC,GAAGlmC,kBACjFy+E,EAAIC,QAAQt/E,KAAKyjE,GAAWzjE,KAAKw9E,IACjCx9E,KAAK28E,GAAc7/E,YAAYuiF,EAAIx3C,WACnC7nC,KAAKi9E,GAAMn2C,GAAGD,GAAKw4C,GAKrB,IAAK,IAAIv4C,EAAY9mC,KAAKsmC,EAAKnmC,KAAK0b,kBAAmBirB,EAAI9mC,KAAK6lE,GAAuB/+B,IACtF,IAAK,IAAID,EAAY,EAAGA,EAAI7mC,KAAKkkE,GAAmBr9B,IACnD7mC,KAAK28E,GAAc5vE,YAAY/M,KAAKi9E,GAAMn2C,GAAGD,GAAGgB,WAIlD7nC,KAAKi9E,GAAM7uF,OAAS4R,KAAKsmC,EAAKnmC,KAAK0b,kBACnC7b,KAAKu9E,IAAgB,EAGtB,GAAIv9E,KAAKkkE,IAAqBlkE,KAAKsmC,EAAKnmC,KAAKob,UAAYvb,KAAKmkE,IAAqBnkE,KAAKyjE,GAAW,CAClG,IAAK,IAAI38B,EAAY,EAAGA,EAAI9mC,KAAKsmC,EAAKnmC,KAAK0b,kBAAmBirB,IAAK,CAClE,IAAK,IAAID,EAAY7mC,KAAKkkE,GAAmBr9B,EAAI7mC,KAAKsmC,EAAKnmC,KAAKob,SAAUsrB,IAAK,CAC9E,MAAMw4C,EAAW,IAAI1D,GAAI70C,EAAGD,EAAGC,EAAG/mC,EAAYW,gBAAgBV,KAAKsmC,EAAKnmC,KAAM2mC,GAAGlmC,kBACjFy+E,EAAIC,QAAQt/E,KAAKyjE,GAAWzjE,KAAKw9E,IACjCx9E,KAAK28E,GAAc7/E,YAAYuiF,EAAIx3C,WACnC7nC,KAAKi9E,GAAMn2C,GAAGD,GAAKw4C,EAEpB,IAAK,IAAIx4C,EAAY7mC,KAAKsmC,EAAKnmC,KAAKob,SAAUsrB,EAAI7mC,KAAKkkE,GAAmBr9B,IACzE7mC,KAAK28E,GAAc5vE,YAAY/M,KAAKi9E,GAAMn2C,GAAGD,GAAGgB,WAEjD7nC,KAAKi9E,GAAMn2C,GAAG14C,OAAS4R,KAAKsmC,EAAKnmC,KAAKob,SAOvC,IAAIi3D,EAAa,GAEjB,IAAK,IAAI3rC,EAAY,EAAGA,EAAI7mC,KAAKsmC,EAAKnmC,KAAKob,SAAUsrB,IAAK,CACzD,IAAI04C,EAAW14C,EAAI7mC,KAAKyjE,GAAY,EAKpC+O,GAAc,KAAK+M,SAHH14C,EAAI7mC,KAAKyjE,GAAYzjE,KAAKyjE,GAAY,OACrC11E,EAAOqL,gBAAkB,OAEiCmmF,WAK5E,GAFAv/E,KAAK+8E,GAAel/E,aAAa,IAAK20E,GAElCxyE,KAAKkkE,GAAoBlkE,KAAKsmC,EAAKnmC,KAAKob,SAAU,CACrDvb,KAAKk9E,GAAY9uF,OAAS4R,KAAKsmC,EAAKnmC,KAAKob,SACzC,IAAK,IAAIikE,EAAMx/E,KAAKkkE,GAAmBsb,EAAMx/E,KAAKk9E,GAAY9uF,OAAQoxF,IACrEx/E,KAAKk9E,GAAYsC,GAAOzgF,EAAI62C,KAAK,CAAEomC,cAAe,aAAc3c,YAAa,MAAO8K,cAAe,SAAU8R,cAAe,OAAQp1C,EAAM24C,EAAMx/E,KAAKyjE,GAAYzjE,KAAKyjE,GAAY,EAAK,KAAM38B,EAAK,MAAOF,KAAM7mC,EAAYyH,eAAiB,IAAMg4E,EAAM,IACpPA,EAAM,GAAK,GAEdx/E,KAAKk9E,GAAYsC,GAAK3hF,aAAa,OAAQkC,EAAYwH,aAExDvH,KAAK68E,GAAoB//E,YAAYkD,KAAKk9E,GAAYsC,SAGnD,GAAIx/E,KAAKkkE,GAAoBlkE,KAAKsmC,EAAKnmC,KAAKob,SAAU,CAC1D,IAASikE,EAAMx/E,KAAKkkE,GAAoB,EAAGsb,GAAOx/E,KAAKsmC,EAAKnmC,KAAKob,SAAUikE,IAC1Ex/E,KAAK68E,GAAoB9vE,YAAY/M,KAAKk9E,GAAYsC,IAEvDx/E,KAAKk9E,GAAY9uF,OAAS4R,KAAKsmC,EAAKnmC,KAAKob,SAI1C,GAAIvb,KAAKmkE,IAAqBnkE,KAAKyjE,GAClC,IAAS+b,EAAM,EAAGA,EAAMx/E,KAAKk9E,GAAY9uF,OAAQoxF,IAChDx/E,KAAKk9E,GAAYsC,GAAK3hF,aAAa,IAAM2hF,EAAMx/E,KAAKyjE,GAAYzjE,KAAKyjE,GAAY,EAAK,MAKxFzjE,KAAKkkE,GAAoBlkE,KAAKsmC,EAAKnmC,KAAKob,SACxC,MAAM4pD,EAAcnlE,KAAKyjE,GAAYzjE,KAAKsmC,EAAKnmC,KAAKob,SACpDvb,KAAK6nC,UAAUvpC,MAAMyoC,MAAQo+B,EAAc,KAC3CnlE,KAAK4nC,EAAK/pC,aAAa,QAASsnE,EAAc,IAC9CnlE,KAAKu9E,IAAgB,EAGtB,GAAIv9E,KAAKimE,IAA0BjmE,KAAKw9E,IAAkBx9E,KAAKmkE,IAAqBnkE,KAAKyjE,GAAW,CACnGzjE,KAAKmkE,GAAoBnkE,KAAKyjE,GAC9B,IAAK,IAAI38B,EAAY,EAAGA,EAAI9mC,KAAKsmC,EAAKnmC,KAAK0b,kBAAmBirB,IAC7D,IAAK,IAAID,EAAY,EAAGA,EAAI7mC,KAAKkkE,GAAmBr9B,IACnD7mC,KAAKi9E,GAAMn2C,GAAGD,GAAGy4C,QAAQt/E,KAAKyjE,GAAWzjE,KAAKw9E,IAGhDx9E,KAAKu9E,IAAgB,EAGtB,GAAIv9E,KAAKimE,IAA0BjmE,KAAKw9E,IAAkBx9E,KAAK6lE,IAAyB7lE,KAAKsmC,EAAKnmC,KAAK0b,kBAAmB,CACzH7b,KAAKimE,GAAyBjmE,KAAKw9E,GACnCx9E,KAAK6lE,GAAwB7lE,KAAKsmC,EAAKnmC,KAAK0b,kBAC5C,MAAM4jE,EAAuB1xF,EAAOqL,gBAAkB4G,KAAKsmC,EAAKnmC,KAAK0b,kBAAoB7b,KAAKw9E,GAC9Fx9E,KAAK4nC,EAAK/pC,aAAa,SAAU,GAAK4hF,GACtCz/E,KAAK0mC,EAAU7oC,aAAa,SAAU,GAAK4hF,GAC3Cz/E,KAAK6nC,UAAUvpC,MAAM0oC,OAASy4C,EAAe,KAG9C,IAAK,IAAIhzE,EAAY,EAAGA,EAAIzM,KAAKsmC,EAAKnmC,KAAK0b,kBAAmBpP,IAC7D,IAAK,IAAIte,EAAY,EAAGA,EAAI6R,KAAKkkE,GAAmB/1E,IAAK,CACxD,MAAM2tB,EAA0B9b,KAAKsmC,EAAKnmC,KAAKolB,WAAW9Y,EAAGte,GACvDquF,EAAqBruF,GAAK6R,KAAKsmC,EAAKvqB,KAAOtP,GAAKzM,KAAKsmC,EAAKlmC,QAC1Dm8E,EAA2B,MAAXzgE,GAA2C,GAAxBA,EAAQvL,MAAMniB,OAEjDixF,EAAWr/E,KAAKi9E,GAAMxwE,GAAGte,GAC/B,GAAIA,EAAI6R,KAAKsmC,EAAKnmC,KAAKob,SAAU,CAChC,MAAMmkE,EAAwB3/E,EAAYW,gBAAgBV,KAAKsmC,EAAKnmC,KAAMsM,GAC1E4yE,EAAIM,SAAS3/E,KAAKsmC,EAAKnmC,KAAK4X,SAAStL,GAAGkL,KAAKxpB,GAAIouF,EAAKC,EAAUD,IAAQC,EAAWkD,EAAO9+E,iBAAmB8+E,EAAO3+E,eAAgB0L,GAAKzM,KAAKsmC,EAAKnmC,KAAKe,mBAAqBuL,EAAIzM,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmBqL,GAAKzM,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,mBAC7Si+E,EAAIx3C,UAAUvpC,MAAMisC,WAAa,eAEjC80C,EAAIx3C,UAAUvpC,MAAMisC,WAAa,SAMpCvqC,KAAKg9E,GAAQ1+E,MAAMi1D,QAAUvzD,KAAK09E,GAAa,GAAK,OAEhD19E,KAAKsmC,EAAK0T,UAAU4lC,kBAAoB,GAAK5/E,KAAKsmC,EAAK0T,UAAU6lC,mBAAqB,GAIzF7/E,KAAK8pE,GAAejsE,aAAa,IAAKmgB,OAAOhe,KAAKyjE,GAAYzjE,KAAKsmC,EAAK0T,UAAU8lC,gBAAkB,IACpG9/E,KAAK8pE,GAAejsE,aAAa,IAAKmgB,OAAOjwB,EAAOqL,gBAAkB4G,KAAKw9E,GAAiBx9E,KAAKsmC,EAAK0T,UAAU+lC,oBAAsB,IACtI//E,KAAK8pE,GAAejsE,aAAa,QAASmgB,OAAOhe,KAAKyjE,GAAYzjE,KAAKsmC,EAAK0T,UAAU4lC,kBAAoB,IAC1G5/E,KAAK8pE,GAAejsE,aAAa,SAAUmgB,OAAOhe,KAAKw9E,GAAiBx9E,KAAKsmC,EAAK0T,UAAU6lC,mBAAqB,IACjH7/E,KAAK8pE,GAAejsE,aAAa,aAAc,YAE/CmC,KAAK8pE,GAAejsE,aAAa,aAAc,UAGhDmC,KAAK6oC,MCrkBP,MAAMiW,OAAEA,GAAMp1C,IAAEA,GAAGu1C,MAAEA,GAAKE,OAAEA,GAAMJ,KAAEA,GAAIihC,SAAEA,GAAQ5gC,OAAEA,GAAM6gC,OAAEA,IAAWvhF,EAEvE,SAASwhF,GAAaC,EAAyBC,GAC9C,IAAK,IAAIpxF,EAAgB,EAAGA,EAAQoxF,EAAMhyF,OAAQY,IACjDmxF,EAAKrjF,YAAYsiD,GAAO,CAAE1tD,MAAO1C,GAASoxF,EAAMpxF,KAEjD,OAAOmxF,EAeR,SAASE,GAAmBhlF,EAAkBilF,GAC7C,MAAMH,EAA0BhhC,GAAO,CAAEshB,GAAI6f,IAIzCjlF,GACH8kF,EAAKrjF,YAAYsiD,GAAO,CAAE1tD,MAAK,GAA0BkI,EAAak1C,cAAa,GAAwBn9C,OAC3GwuF,EAAKrjF,YAAYsiD,GAAO,CAAE1tD,MAAK,GAA6BkI,EAAak1C,cAAa,GAA2Bn9C,OACjHwuF,EAAKrjF,YAAYsiD,GAAO,CAAE1tD,MAAK,GAA4BkI,EAAak1C,cAAa,GAA0Bn9C,SAE/GwuF,EAAKrjF,YAAYsiD,GAAO,CAAE1tD,MAAK,GAAyBkI,EAAak1C,cAAa,GAAuBn9C,OACzGwuF,EAAKrjF,YAAYsiD,GAAO,CAAE1tD,MAAK,GAAwBkI,EAAak1C,cAAa,GAAsBn9C,OACvGwuF,EAAKrjF,YAAYsiD,GAAO,CAAE1tD,MAAK,GAA8BkI,EAAak1C,cAAa,GAA4Bn9C,OACnHwuF,EAAKrjF,YAAYsiD,GAAO,CAAE1tD,MAAK,GAA6BkI,EAAak1C,cAAa,GAA2Bn9C,OACjHwuF,EAAKrjF,YAAYsiD,GAAO,CAAE1tD,MAAK,GAAuBkI,EAAak1C,cAAa,GAAqBn9C,OACrGwuF,EAAKrjF,YAAYsiD,GAAO,CAAE1tD,MAAK,GAAmCkI,EAAak1C,cAAa,GAAiCn9C,QAG9H,MAAM4uF,EAA2BP,GAAS,CAAE5S,MAAO,gBACnDmT,EAAYzjF,YAAYsiD,GAAO,CAAE1tD,MAAO,gBAAkB,kBAC1D6uF,EAAYzjF,YAAYsiD,GAAO,CAAE1tD,MAAO,mBAAqB,qBAC7DyuF,EAAKrjF,YAAYyjF,GAGjB,IAAK,IAAIxmF,EAAwB,EAAGA,EAAgBH,EAAaK,iBAAiB7L,OAAQ2L,IAAiB,CAC1G,MAAMK,EAA2BR,EAAaK,iBAAiBF,GACzDymD,EAAqBw/B,GAAS,CAAE5S,MAAOhzE,EAASzI,KAAO,OAC7D,IAAI6uF,GAAoB,EACxB,IAAK,IAAIxmF,EAAsB,EAAGA,EAAcI,EAASF,QAAQ9L,OAAQ4L,IAAe,CACvF,MAAMK,EAAiBD,EAASF,QAAQF,GACjB,GAAlBK,EAAOgB,SAAoBA,IAC/BmlD,EAAM1jD,YAAYsiD,GAAO,CAAE1tD,OAAQqI,GAAiB,GAAKC,GAAeK,EAAO1I,OAC/E6uF,GAAW,GAKb,GAAqB,kBAAjBpmF,EAASzI,MAA4B6uF,EAAU,CAGlD,IAAIC,EAAcjgC,EAAMzzC,YAAYyzC,EAAMgD,SAAS,KACnDhD,EAAMkgC,aAAaD,EAAajgC,EAAMgD,SAAS,IAGhD,GAAqB,iBAAjBppD,EAASzI,MAA2B6uF,EAAU,CAGjD,IAAIG,EAAangC,EAAMzzC,YAAYyzC,EAAMgD,SAAS,KAClDhD,EAAMkgC,aAAaC,EAAYngC,EAAMgD,SAAS,IAG/C,GAAqB,oBAAjBppD,EAASzI,MAA8B6uF,EAAU,CAGpD,IAAII,EAAkBpgC,EAAMzzC,YAAYyzC,EAAMgD,SAAS,IACvDhD,EAAMkgC,aAAaE,EAAiBpgC,EAAMgD,SAAS,IAGhDg9B,GAAUL,EAAKrjF,YAAY0jD,GAGhC,OAAO2/B,EAGR,SAASU,GAAiBV,EAAyBzuF,GAClD,MAAMovF,EAAcpvF,EAAM0mF,WACtB+H,EAAKzuF,OAASovF,IAAaX,EAAKzuF,MAAQovF,GAGxCC,EAAEZ,GAAMr9C,KAAK,YAChBi+C,EAAEZ,GAAMhxE,IAAIzd,GAAOsvF,QAAQ,kBAI7B,MAAMC,GASLpnF,YAA4BomF,EAA4C35C,EAAqCmtB,GAAjFzzD,KAAAigF,OAAAA,EAA4CjgF,KAAAsmC,EAAAA,EAAqCtmC,KAAAyzD,GAAAA,EAFrGzzD,KAAA2yD,GAAyB,KAiDzB3yD,KAAAknE,GAAgB1+B,IACvB,GAAIxoC,KAAKkhF,UAAW,CAEnB,IAAIr6C,GAAK2B,EAAMW,SAAWX,EAAMY,OAASppC,KAAKigF,OAAO/2C,wBAAwBG,KACzEvC,EAAIl4C,KAAKsU,OAAOslC,EAAMma,SAAWna,EAAMoa,OAAS5iD,KAAKigF,OAAO/2C,wBAAwB2Z,KAEpF/b,EAAI,IAAGA,EAAI,GACXA,EAAI,KAAIA,EAAI,IAEhB,IAAIq6C,EAAMnhF,KAAKigF,OAAOmB,WAAW,MAEjC,GAA2B,GAAvBphF,KAAKqhF,gBAA0BzyF,KAAKC,IAAImR,KAAKshF,MAAQz6C,GAAK,GAAI,CAEjE,IAAI06C,EAAc16C,EAAI7mC,KAAKshF,MAASz6C,EAAI7mC,KAAKshF,MACzCE,EAAc36C,EAAI7mC,KAAKshF,MAASthF,KAAKshF,MAAQz6C,EAEjD,IAAK,IAAI14C,EAAIozF,EAAYpzF,GAAKqzF,EAAYrzF,GAAK,EAAG,CAEjD,IAAIszF,EAAY7yF,KAAKC,IAAIg4C,EAAI7mC,KAAKshF,OAAS,EAASz6C,EAAI7mC,KAAKshF,MAC5D,GAAQnzF,EAAIozF,IAAeC,EAAaD,IACpCpzF,EAAIozF,IAAeC,EAAaD,GAAgB,EACjD90E,EAAI7d,KAAKmb,MAAM+8B,GAAK9mC,KAAK0hF,MAAQ56C,GAAK26C,GAE1CN,EAAIQ,UAAY5hF,EAAYc,YAAY,uBACxCsgF,EAAIS,SAA6B,EAApBhzF,KAAKsU,MAAM/U,EAAI,GAAQ,EAAG,EAAG,IAC1CgzF,EAAIQ,UAAY5hF,EAAYc,YAAY,0BACxCsgF,EAAIS,SAA6B,EAApBhzF,KAAKsU,MAAM/U,EAAI,GAAQ,GAAI,EAAG,GAC3CgzF,EAAIQ,UAAY5hF,EAAYc,YAAY,+BACxCsgF,EAAIS,SAA6B,EAApBhzF,KAAKsU,MAAM/U,EAAI,GAAQ,GAAI,EAAG,GAC3CgzF,EAAIS,SAA6B,EAApBhzF,KAAKsU,MAAM/U,EAAI,GAAQ,GAAI,EAAG,GAC3CgzF,EAAIQ,UAAY5hF,EAAY8hF,wBAAwB7hF,KAAKsmC,EAAKnmC,KAAMH,KAAKsmC,EAAKlmC,SAASa,YACvFkgF,EAAIS,SAA6B,EAApBhzF,KAAKsU,MAAM/U,EAAI,GAAQse,EAAI,EAAG,EAAG,GAG9CzM,KAAKwuC,SAAS5/C,KAAKsU,MAAM/U,EAAI,IAAOse,EAAI,SAMzC00E,EAAIQ,UAAY5hF,EAAYc,YAAY,uBACxCsgF,EAAIS,SAA6B,EAApBhzF,KAAKsU,MAAM2jC,EAAI,GAAQ,EAAG,EAAG,IAC1Cs6C,EAAIQ,UAAY5hF,EAAYc,YAAY,0BACxCsgF,EAAIS,SAA6B,EAApBhzF,KAAKsU,MAAM2jC,EAAI,GAAQ,GAAI,EAAG,GAC3Cs6C,EAAIQ,UAAY5hF,EAAYc,YAAY,+BACxCsgF,EAAIS,SAA6B,EAApBhzF,KAAKsU,MAAM2jC,EAAI,GAAQ,GAAI,EAAG,GAC3Cs6C,EAAIS,SAA6B,EAApBhzF,KAAKsU,MAAM2jC,EAAI,GAAQ,GAAI,EAAG,GAC3Cs6C,EAAIQ,UAAY5hF,EAAY8hF,wBAAwB7hF,KAAKsmC,EAAKnmC,KAAMH,KAAKsmC,EAAKlmC,SAASa,YACvFkgF,EAAIS,SAA6B,EAApBhzF,KAAKsU,MAAM2jC,EAAI,GAAQC,EAAI,EAAG,EAAG,GAG9C9mC,KAAKwuC,SAAS5/C,KAAKsU,MAAM2jC,EAAI,IAAOC,EAAI,GAIzC9mC,KAAKqhF,gBAAiB,EACtBrhF,KAAKshF,MAAQz6C,EACb7mC,KAAK0hF,MAAQ56C,EAGb,IAAIt2B,EAAyBxQ,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAE1FxgD,EAAc,EAClB,IAAK,IAAIC,EAAY,EAAGA,EAAI6R,KAAKwuC,SAASpgD,OAAQD,IACjDD,GAAO8R,KAAKwuC,SAASrgD,GAEtB,MAAME,EAAkBH,EAAM8R,KAAKwuC,SAASpgD,OAG5C,IAAIE,EAAqB,EACrBC,EAAmB,EACvB,IAAK,IAAIJ,EAAY,EAAGA,EAAI6R,KAAKwuC,SAASpgD,OAAQD,IACjDG,GAAcC,EACdA,EAAWyR,KAAKwuC,SAASrgD,GAAKE,EAC9BmiB,EAAW8C,uBAAuBnlB,GAAKG,EAGxCkiB,EAAW8C,uBAAuB,IAAM,IAKlCtT,KAAA8hF,GAAgBt5C,IACvBxoC,KAAKkhF,WAAY,EAGjBlhF,KAAKknE,GAAa1+B,IAEXxoC,KAAA+hF,GAAa,KACpB/hF,KAAKkhF,WAAY,EACjBlhF,KAAKqhF,gBAAiB,EAEtBrhF,KAAK8zD,MAGE9zD,KAAA8zD,GAAc,KACrB9zD,KAAK2yD,GAAU3yD,KAAKyzD,GAAWzzD,KAAKwuC,UAEpCxuC,KAAKsmC,EAAKqa,OAAO3gD,KAAK2yD,IAEtB3yD,KAAK2yD,GAAU,MAhJfstB,EAAOh2C,iBAAiB,YAAajqC,KAAKknE,IAC1C+Y,EAAOh2C,iBAAiB,YAAajqC,KAAK8hF,IAC1C7B,EAAOh2C,iBAAiB,UAAWjqC,KAAK+hF,IACxC9B,EAAOh2C,iBAAiB,aAAcjqC,KAAK+hF,IAE3C/hF,KAAKkhF,WAAY,EACjBlhF,KAAKqhF,gBAAiB,EACtBrhF,KAAKshF,MAAQ,EACbthF,KAAK0hF,MAAQ,EAEb1hF,KAAKwuC,SAAW,IAAI//C,aAAa,IAGjCuR,KAAKgiF,eAICnoF,eACN,IAAIsnF,EAAMnhF,KAAKigF,OAAOmB,WAAW,MAGjCD,EAAIQ,UAAY5hF,EAAYc,YAAY,uBACxCsgF,EAAIS,SAAS,EAAG,EAAG,IAAK,IAGxBT,EAAIQ,UAAY5hF,EAAYc,YAAY,0BACxCsgF,EAAIS,SAAS,EAAG,GAAI,IAAK,GAGzBT,EAAIQ,UAAY5hF,EAAYc,YAAY,+BACxCsgF,EAAIS,SAAS,EAAG,GAAI,IAAK,GACzBT,EAAIS,SAAS,EAAG,GAAI,IAAK,GAGzBT,EAAIQ,UAAY5hF,EAAY8hF,wBAAwB7hF,KAAKsmC,EAAKnmC,KAAMH,KAAKsmC,EAAKlmC,SAASa,YAEvF,IAAK,IAAI4lC,EAAY,EAAGA,EAAI,GAAIA,IAAK,CACpC,IAAIC,EAAY9mC,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAAwB7yC,eAAegrC,GAAK,GAC7Hs6C,EAAIS,SAAa,EAAJ/6C,EAAOC,EAAI,EAAG,EAAG,GAE9B9mC,KAAKwuC,SAAS3H,GAAKC,EAAI,WA6Gbm7C,GAiaZpoF,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EAhabtmC,KAAA0gD,OAAwB,KAEd1gD,KAAAkiF,GAAoC,IAAIhZ,GAAclpE,KAAKsmC,GAAM,GAAQ,GACzEtmC,KAAAmiF,GAAgC,IAAIjZ,GAAclpE,KAAKsmC,GAAM,EAAM,GACnEtmC,KAAAoiF,GAAoC,IAAIlZ,GAAclpE,KAAKsmC,GAAM,EAAO,GACxEtmC,KAAAqiF,GAA4B,IAAI5F,GAAYz8E,KAAKsmC,EAAMtmC,MACvDA,KAAAsiF,GAA0B,IAAIjd,GAAWrlE,KAAKsmC,EAAMtmC,MACpDA,KAAAuiF,GAA0B,IAAIpf,GAAWnjE,KAAKsmC,GAC9CtmC,KAAA6nE,GAAgB,IAAIsM,GAAMn0E,KAAKsmC,GAC/BtmC,KAAAwiF,GAAoC,IAAI5a,GAAgB5nE,KAAKsmC,EAAMtmC,KAAK6nE,IACxE7nE,KAAA4jD,GAAiC9E,GAAO,CAAExgD,MAAO,eAAgBxJ,KAAM,WACvEkL,KAAAyiF,GAAoC3jC,GAAO,CAAEhX,MAAO,gBAAiBxpC,MAAO,eAAgBxJ,KAAM,SAAU6mB,MAAO,gCACnH3b,KAAA0iF,GAAoC5jC,GAAO,CAAEhX,MAAO,gBAAiBxpC,MAAO,eAAgBxJ,KAAM,SAAU6mB,MAAO,6BACnH3b,KAAA2iF,GAAwB,IAAI5uB,GAAO9U,GAAM,CAAEtjC,MAAO,cAAerd,MAAO,uCAAwCxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAK,KAAMxd,MAAO,KAAM6tD,KAAM,MAAQv/C,KAAKsmC,EAAM,MAAM,GAChMtmC,KAAA4iF,GAAkC7jF,EAAI4nC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,MAAOC,OAAQ,MAAOH,EAAG,KAAMC,EAAG,MAAOF,KAAM7mC,EAAY+H,qBACzI9H,KAAAigE,GAAgClhE,EAAI4nC,KAAK,CAAEQ,iBAAkB,OAAQH,OAAQ,MAAOD,MAAO,KAAMF,EAAG,KAAMC,EAAG,MAAOF,KAAM,wBAC1H5mC,KAAAkgE,GAAgCnhE,EAAI4nC,KAAK,CAAEQ,iBAAkB,OAAQJ,MAAO,MAAOC,OAAQ,MAAOH,EAAG,KAAMC,EAAG,MAAOF,KAAM7mC,EAAYgI,gBACvI/H,KAAAmgE,GAAyBphE,EAAIy4C,KAAK,CAAE4oB,aAAc,OAAQ9qE,OAAQ,QAClE0K,KAAAqgE,GAAyBthE,EAAIy4C,KAAK,CAAE4oB,aAAc,SAAU9qE,OAAQ,QACpE0K,KAAAsgE,GAAyBvhE,EAAIy4C,KAAK,CAAE4oB,aAAc,MAAO9qE,OAAQ,SACjE0K,KAAAugE,GAAgCxhE,EAAIyhE,eAAe,CAAEC,GAAI,cAAeC,cAAe,kBAAoB1gE,KAAKmgE,GAAQngE,KAAKqgE,GAAQrgE,KAAKsgE,IAC1ItgE,KAAA2gE,GAAwB5hE,EAAI6hE,KAAK,GAAI5gE,KAAKugE,IAC1CvgE,KAAA6iF,GAAqC9jF,EAAImoC,IAAI,CAAE5oC,MAAO,wEAAyEyoC,MAAO,QAASC,OAAQ,OAAQqb,oBAAqB,OAAQD,QAAS,cACrNpiD,KAAK2gE,GACL3gE,KAAK4iF,GACL5iF,KAAKigE,GACLjgE,KAAKkgE,IAEWlgE,KAAA8iF,GAAgCp5E,GAAI,CAAEo+B,MAAO,sBAAuBxpC,MAAO,qCAC3F0B,KAAK6iF,IAEW7iF,KAAA+iF,GAA+B5jC,GAAO,CAAE7gD,MAAO,gBAC/D8gD,GAAO,CAAEo9B,UAAU,EAAMhyB,UAAU,EAAMw4B,QAAQ,GAAS,QAC1D5jC,GAAO,CAAE1tD,MAAO,OAAS,oBACzB0tD,GAAO,CAAE1tD,MAAO,UAAY,oBAC5B0tD,GAAO,CAAE1tD,MAAO,UAAY,oBAC5B0tD,GAAO,CAAE1tD,MAAO,WAAa,mBAC7B0tD,GAAO,CAAE1tD,MAAO,YAAc,oBAC9B0tD,GAAO,CAAE1tD,MAAO,cAAgB,sBAChC0tD,GAAO,CAAE1tD,MAAO,cAAgB,yBAChC0tD,GAAO,CAAE1tD,MAAO,aAAe,0BAC/B0tD,GAAO,CAAE1tD,MAAO,gBAAkB,6BAElBsO,KAAAijF,GAA+B9jC,GAAO,CAAE7gD,MAAO,gBAC/D8gD,GAAO,CAAEo9B,UAAU,EAAMhyB,UAAU,EAAMw4B,QAAQ,GAAS,QAC1D5jC,GAAO,CAAE1tD,MAAO,QAAU,YAC1B0tD,GAAO,CAAE1tD,MAAO,QAAU,YAC1B0tD,GAAO,CAAE1tD,MAAO,QAAU,oBAC1B0tD,GAAO,CAAE1tD,MAAO,cAAgB,2BAChC0tD,GAAO,CAAE1tD,MAAO,gBAAkB,8BAClC0tD,GAAO,CAAE1tD,MAAO,cAAgB,kCAChC0tD,GAAO,CAAE1tD,MAAO,cAAgB,2BAChC0tD,GAAO,CAAE1tD,MAAO,aAAe,kBAC/B0tD,GAAO,CAAE1tD,MAAO,iBAAmB,uBACnC0tD,GAAO,CAAE1tD,MAAO,qBAAuB,iCACvC0tD,GAAO,CAAE1tD,MAAO,eAAiB,qBACjC0tD,GAAO,CAAE1tD,MAAO,iBAAmB,uBACnC0tD,GAAO,CAAE1tD,MAAO,qBAAuB,kCACvC0tD,GAAO,CAAE1tD,MAAO,gBAAkB,wBAGlC0tD,GAAO,CAAE1tD,MAAO,mBAAqB,2BACrC0tD,GAAO,CAAE1tD,MAAO,mBAAqB,6BAErBsO,KAAAkjF,GAAkC/jC,GAAO,CAAE7gD,MAAO,gBAClE8gD,GAAO,CAAEo9B,UAAU,EAAMhyB,UAAU,EAAMw4B,QAAQ,GAAS,eAC1D5jC,GAAO,CAAE1tD,MAAO,YAAc,qBAC9B0tD,GAAO,CAAE1tD,MAAO,cAAgB,qBAChC0tD,GAAO,CAAE1tD,MAAO,qBAAuB,uBACvC0tD,GAAO,CAAE1tD,MAAO,eAAiB,mBACjC0tD,GAAO,CAAE1tD,MAAO,aAAe,2BAC/B0tD,GAAO,CAAE1tD,MAAO,gBAAkB,qBAClC0tD,GAAO,CAAE1tD,MAAO,iBAAmB,qBACnC0tD,GAAO,CAAE1tD,MAAO,qBAAuB,yBACvC0tD,GAAO,CAAE1tD,MAAO,uBAAyB,yBACzC0tD,GAAO,CAAE1tD,MAAO,qBAAuB,4BACvC0tD,GAAO,CAAE1tD,MAAO,oBAAsB,wBACtC0tD,GAAO,CAAE1tD,MAAO,cAAgB,iBAChC0tD,GAAO,CAAE1tD,MAAO,cAAgB,iBAGhBsO,KAAAmjF,GAAkCjD,GAAa/gC,KAAUpxD,EAAOmE,OAAOkxF,KAAInoE,GAASA,EAAMtpB,QAC1FqO,KAAAqjF,GAAgCnD,GAAa/gC,KAAUpxD,EAAOsE,KAAK+wF,KAAIxlF,GAAOA,EAAIjM,OAAM2xF,WACxFtjF,KAAAujF,GAAuB,IAAIxvB,GAAO9U,GAAM,CAAE3gD,MAAO,qCAAsCxJ,KAAM,QAASzE,IAAK,KAAM6e,IAAK,MAAOxd,MAAO,MAAO6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIoK,GAAYj5C,KAAKsmC,EAAM6L,EAAUtD,KAAW,GAC5P7uC,KAAAwjF,GAAkCvkC,GAAM,CAAE3gD,MAAO,0EAA2ExJ,KAAM,SAAUyqD,KAAM,MAClJv/C,KAAAyjF,GAAwB,IAAI1vB,GAAO9U,GAAM,CAAE3gD,MAAO,aAAcxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAKnhB,EAAO4E,YAAc,EAAGjB,MAAO,IAAK6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIgM,GAAa76C,KAAKsmC,EAAM6L,EAAUtD,KAAW,GACpP7uC,KAAA0jF,GAAmCxD,GAAa/gC,KAAUpxD,EAAOwF,QAAQ6vF,KAAI3nE,GAAUA,EAAO9pB,QAC9FqO,KAAA2jF,GAA0CtD,IAAmB,EAAO,qBACpErgF,KAAA4jF,GAAuCvD,IAAmB,EAAM,oBAChErgF,KAAA6jF,GAAsC3D,GAAa/gC,KAAUpxD,EAAO0I,WAAW2sF,KAAI9nF,GAAaA,EAAU3J,QAC1GqO,KAAA8jF,GAAsCp6E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,cAAgB,eAAgBt6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAK6jF,KAC9L7jF,KAAAikF,GAAuC9kC,KACvCn/C,KAAAkkF,GAAuCx6E,GAAI,CAAEo+B,MAAO,YAAaxpC,MAAO,kBAAoBygD,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,oBAAsB,gBAAiBt6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKikF,KAC/NjkF,KAAAmkF,GAAkC,IAAIpwB,GAAO9U,GAAM,CAAE3gD,MAAO,+BAAgCxJ,KAAM,QAASzE,IAAKzB,KAAKsU,OAAOnV,EAAO0H,YAAc,GAAIyZ,IAAKtgB,KAAKsU,MAAMnV,EAAO0H,YAAc,GAAI/D,MAAO,IAAK6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIiP,GAAa99C,KAAKsmC,EAAM6L,EAAUtD,KAAW,GAC5T7uC,KAAAokF,GAAoDnlC,GAAM,CAAE3gD,MAAO,6BAA8BmiE,GAAI,uBAAwB3rE,KAAM,SAAUyqD,KAAM,IAAKlvD,IAAKzB,KAAKsU,OAAOnV,EAAO0H,YAAc,GAAIyZ,IAAKtgB,KAAKsU,MAAMnV,EAAO0H,YAAc,GAAI/D,MAAO,MAClPsO,KAAAqkF,GAA6C36E,GAAI,CAAEo+B,MAAO,YAAaxpC,MAAO,eAAiBygD,GAAK,CAAEjX,MAAO,MAAOxpC,MAAO,sBAAuBylF,QAAS,IAAM/jF,KAAKgkF,GAAY,qBAAuB,aACzMhkF,KAAAskF,GAA6C56E,GAAI,CAAEo+B,MAAO,aAAep+B,GAAI,GAC7FA,GAAI,CAAEpL,MAAO,UAAYyB,EAAYyH,cAAgB,KAAOu3C,GAAK,CAAEjX,MAAO,OAAS9nC,KAAKqkF,KACxF36E,GAAI,CAAEpL,MAAO,UAAYyB,EAAYyH,cAAgB,uBAAyBxH,KAAKokF,KACjFpkF,KAAKmkF,GAAwBt8C,WACf7nC,KAAAukF,GAAqB,IAAIxwB,GAAO9U,GAAM,CAAE3gD,MAAO,aAAckmF,SAAU,UAAW1vF,KAAM,QAASzE,IAAK,IAAK6e,IAAKnhB,EAAO6H,OAAQlE,MAAO3D,EAAO4H,UAAW4pD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIsP,GAAUn+C,KAAKsmC,EAAM6L,EAAUtD,KAAW,GACvQ7uC,KAAAykF,GAAkC3lC,GAAO,CAAExgD,MAAO,4EAA6EylF,QAAS,IAAM/jF,KAAK0kF,GAAoB,IAAM,KAC7K1kF,KAAA2kF,GAAuC1lC,GAAM,CAAE3gD,MAAO,+BAAgCmiE,GAAI,oBAAqB3rE,KAAM,SAAUyqD,KAAM,IAAKlvD,IAAK,IAAK6e,IAAK,MAAOxd,MAAO,MACvKsO,KAAA4kF,GAAgCl7E,GAAI,CAAEo+B,MAAO,aAAep+B,GAAI,GAChFq1C,GAAK,CAAEjX,MAAO,MAAO+8C,SAAU,IAAKvmF,MAAO,kCAAmCylF,QAAS,IAAM/jF,KAAKgkF,GAAY,QAAU,SACxHt6E,GAAI,CAAEpL,MAAO,UAAYyB,EAAYyH,cAAgB,uBAAyBxH,KAAK2kF,KACjF3kF,KAAKykF,GAAczkF,KAAKukF,GAAW18C,WACrB7nC,KAAA8kF,GAA0B,IAAI/wB,GAAO9U,GAAM,CAAE3gD,MAAO,aAAcxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAKlP,KAAKsmC,EAAKnmC,KAAKsY,WAAWjX,IAAIwS,EAAW8F,aAAcpoB,MAAO,IAAK6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIuP,GAAep+C,KAAKsmC,EAAM6L,EAAUtD,KAAW,GACvR7uC,KAAA+kF,GAA4Br7E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOxpC,MAAO,oBAAqBylF,QAAS,IAAM/jF,KAAKgkF,GAAY,aAAe,UAAWhkF,KAAK8kF,GAAgBj9C,WACxL7nC,KAAAglF,GAAiCt7E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAK+kF,IACxE/kF,KAAAilF,GAAwB,IAAIlxB,GAAO9U,GAAM,CAAE3gD,MAAO,aAAcxJ,KAAM,QAASzE,IAAKtC,EAAO8H,UAAWqZ,IAAKnhB,EAAO+H,UAAWpE,MAAO,EAAG6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIwP,GAAar+C,KAAKsmC,EAAM6L,EAAUtD,KAAW,GACzP7uC,KAAAklF,GAA0CjmC,GAAM,CAAE3gD,MAAO,+BAAgCmiE,GAAI,uBAAwB3rE,KAAM,SAAUyqD,KAAM,IAAKlvD,IAAK,GAAKtC,EAAO8H,UAAWqZ,IAAK,GAAKnhB,EAAO+H,UAAWpE,MAAO,MAC/MsO,KAAAmlF,GAAmCz7E,GAAI,CAAEo+B,MAAO,aAAep+B,GAAI,GACnFq1C,GAAK,CAAEjX,MAAO,MAAOxpC,MAAO,kCAAmCylF,QAAS,IAAM/jF,KAAKgkF,GAAY,WAAa,YAC5Gt6E,GAAI,CAAEpL,MAAO,UAAYyB,EAAYyH,cAAgB,uBAAyBxH,KAAKklF,KACjFllF,KAAKilF,GAAcp9C,WACL7nC,KAAAolF,GAAqClF,GAAa/gC,KAAUpxD,EAAO6F,UAAUwvF,KAAIn1F,GAAQA,EAAK0D,QAC9FqO,KAAAqlF,GAAsCnF,GAAa/gC,KAAUpxD,EAAOoB,WAAWi0F,KAAIn1F,GAAQA,EAAK0D,QAChGqO,KAAAslF,GAAqC57E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,aAAe,UAAWt6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKolF,KACvLplF,KAAAulF,GAAsC77E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,cAAgB,WAAYt6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKqlF,KAC1LrlF,KAAAwlF,GAAuCtF,GAAa/gC,KAAUpxD,EAAOuG,YAAY8uF,KAAIvoF,GAAcA,EAAWlJ,QAC9GqO,KAAAylF,GAAyC3mC,GAAO,CAAExgD,MAAO,4EAA6EylF,QAAS,IAAM/jF,KAAK0kF,GAAoB,IAAM,KACpL1kF,KAAA0lF,GAAiCh8E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,eAAiB,eAAgBhkF,KAAKylF,GAAqB/7E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKwlF,KACpNxlF,KAAA2lF,GAA0C1mC,GAAM,CAAEnqD,KAAM,WAAYwJ,MAAO,+CAC3E0B,KAAA4lF,GAAqCl8E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOxpC,MAAO,oBAAqBylF,QAAS,IAAM/jF,KAAKgkF,GAAY,kBAAoB,kBAAmBhkF,KAAK2lF,IAC9L3lF,KAAA6lF,GAA4C5mC,GAAM,CAAEnqD,KAAM,WAAYwJ,MAAO,+CAC7E0B,KAAA8lF,GAAuCp8E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOxpC,MAAO,oBAAqBylF,QAAS,IAAM/jF,KAAKgkF,GAAY,wBAA0B,cAAehkF,KAAK6lF,IAClM7lF,KAAA+lF,GAAwCr8E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAK4lF,GAAuB5lF,KAAK8lF,IAC3G9lF,KAAAgmF,GAAoC9F,GAAa/gC,KAAUpxD,EAAOyH,cAClEwK,KAAAimF,GAA8B,IAAIlyB,GAAO9U,GAAM,CAAE3gD,MAAO,aAAcxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAKnhB,EAAOqG,kBAAoB,EAAG1C,MAAO,IAAK6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIwE,GAAmBrzC,KAAKsmC,EAAM6L,EAAUtD,KAAW,GAC/Q7uC,KAAAkmF,GAAmCx8E,GAAI,CAAEo+B,MAAO,YAAansB,MAAO,oCAAsCojC,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,iBAAmB,eAAgBhkF,KAAKimF,GAAoBp+C,WAClN7nC,KAAAmmF,GAAiC,IAAIpyB,GAAO9U,GAAM,CAAE3gD,MAAO,aAAcxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAKnhB,EAAOsG,qBAAuB,EAAG3C,MAAO,IAAK6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIyE,GAAsBtzC,KAAKsmC,EAAM6L,EAAUtD,KAAW,GACxR7uC,KAAAomF,GAAsC18E,GAAI,CAAEo+B,MAAO,YAAansB,MAAO,kCAAoCojC,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,oBAAsB,gBAAiBhkF,KAAKmmF,GAAuBt+C,WAC1N7nC,KAAAqmF,GAA2CnG,GAAa/gC,KAAUpxD,EAAOoJ,UAAUisF,KAAIxnF,GAAYA,EAASjK,QACrHqO,KAAAsmF,GAAqC58E,GAAI,CAAEo+B,MAAO,YAAansB,MAAO,4BAA8BojC,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,mBAAqB,eAAgBt6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKqmF,KAC5NrmF,KAAAumF,GAA0CrG,GAAa/gC,KAAUpxD,EAAOoJ,UAAUisF,KAAIxnF,GAAYA,EAASjK,QACpHqO,KAAAwmF,GAAoC98E,GAAI,CAAEo+B,MAAO,YAAansB,MAAO,kCAAoCojC,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,kBAAoB,cAAet6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKumF,KAC/NvmF,KAAAymF,GAA4B,IAAI1yB,GAAO9U,GAAM,CAAE3gD,MAAO,aAAcxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAKnhB,EAAOiK,gBAAiBtG,MAAO,IAAK6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIsE,GAAiBnzC,KAAKsmC,EAAM6L,EAAUtD,KAAW,GACrQ7uC,KAAA0mF,GAAiCh9E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,eAAiB,gBAAiBhkF,KAAKymF,GAAkB5+C,WAClK7nC,KAAA2mF,GAAqCzG,GAAa/gC,KAAUpxD,EAAOqH,UAAUguF,KAAIjoF,GAAYA,EAASxJ,QACtGqO,KAAA4mF,GAAkCl9E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,aAAe,aAAct6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAK2mF,KACvL3mF,KAAA6mF,GAAkC3G,GAAa/gC,KAAUpxD,EAAOkI,OAAOmtF,KAAIroF,GAASA,EAAMpJ,QAC1FqO,KAAA8mF,GAAoChoC,GAAO,CAAExgD,MAAO,4EAA6EylF,QAAS,IAAM/jF,KAAK0kF,GAAoB,IAAM,KAC/K1kF,KAAA+mF,GAA+Br9E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,WAAa,WAAYhkF,KAAK8mF,GAAgBp9E,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,iBAAmB0B,KAAK6mF,KAC7N7mF,KAAAgnF,GAA+B,IAAIjzB,GAAO9U,GAAM,CAAE3gD,MAAO,aAAcxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAKlP,KAAKsmC,EAAKnmC,KAAKsY,WAAWjX,IAAIwS,EAAW6F,kBAAmBnoB,MAAO,IAAK6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAI4D,GAAoBzyC,KAAKsmC,EAAM6L,EAAUtD,KAAW,GACtS7uC,KAAAinF,GAAiCv9E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOxpC,MAAO,oBAAqBylF,QAAS,IAAM/jF,KAAKgkF,GAAY,kBAAoB,UAAWhkF,KAAKgnF,GAAqBn/C,WACvM7nC,KAAAknF,GAAmCjoC,GAAM,CAAEnqD,KAAM,WAAYwJ,MAAO,+CACpE0B,KAAAmnF,GAA8Bz9E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOxpC,MAAO,oBAAqBylF,QAAS,IAAM/jF,KAAKgkF,GAAY,oBAAsB,kBAAmBhkF,KAAKknF,IACzLlnF,KAAAonF,GAAmC19E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKinF,GAAmBjnF,KAAKmnF,IAClGnnF,KAAAqnF,GAAoCnH,GAAa/gC,KAAUpxD,EAAO8G,SAASuuF,KAAIhoF,GAAWA,EAAQzJ,QAClGqO,KAAAsnF,GAAsCxoC,GAAO,CAAExgD,MAAO,4EAA6EylF,QAAS,IAAM/jF,KAAK0kF,GAAoB,IAAM,KACjL1kF,KAAAunF,GAAiC79E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,YAAc,YAAahkF,KAAKsnF,GAAkB59E,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,iBAAmB0B,KAAKqnF,KACnOrnF,KAAAwnF,GAA8B,IAAIzzB,GAAO9U,GAAM,CAAE3gD,MAAO,aAAcxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAKlP,KAAKsmC,EAAKnmC,KAAKsY,WAAWjX,IAAIwS,EAAWyF,iBAAkB/nB,MAAO,IAAK6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIqD,GAAmBlyC,KAAKsmC,EAAM6L,EAAUtD,KAAW,GACnS7uC,KAAAynF,GAAgC/9E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOxpC,MAAO,oBAAqBylF,QAAS,IAAM/jF,KAAKgkF,GAAY,iBAAmB,UAAWhkF,KAAKwnF,GAAoB3/C,WACpM7nC,KAAA0nF,GAA8B,IAAI3zB,GAAO9U,GAAM,CAAE3gD,MAAO,aAAcxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAKlP,KAAKsmC,EAAKnmC,KAAKsY,WAAWjX,IAAIwS,EAAW2F,iBAAkBjoB,MAAO,IAAK6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIyD,GAAmBtyC,KAAKsmC,EAAM6L,EAAUtD,KAAW,GACnS7uC,KAAA2nF,GAAgCj+E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOxpC,MAAO,oBAAqBylF,QAAS,IAAM/jF,KAAKgkF,GAAY,iBAAmB,UAAWhkF,KAAK0nF,GAAoB7/C,WACpM7nC,KAAA4nF,GAA8B,IAAI7zB,GAAO9U,GAAM,CAAE3gD,MAAO,aAAcxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAKlP,KAAKsmC,EAAKnmC,KAAKsY,WAAWjX,IAAIwS,EAAW4F,iBAAkBloB,MAAO,IAAK6tD,KAAM,MAAQv/C,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAI0D,GAAmBvyC,KAAKsmC,EAAM6L,EAAUtD,KAAW,GACnS7uC,KAAA6nF,GAAgCn+E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOxpC,MAAO,oBAAqBylF,QAAS,IAAM/jF,KAAKgkF,GAAY,iBAAmB,UAAWhkF,KAAK4nF,GAAoB//C,WACpM7nC,KAAA8nF,GAAwC5H,GAAa/gC,KAAUpxD,EAAOiH,aAAaouF,KAAIhoF,GAAWA,EAAQzJ,QAC1GqO,KAAA+nF,GAAqCr+E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOxpC,MAAO,oBAAqBylF,QAAS,IAAM/jF,KAAKgkF,GAAY,gBAAkB,SAAUt6E,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,iBAAmB0B,KAAK8nF,KAC7O9nF,KAAAgoF,GAAqCt+E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKynF,GAAkBznF,KAAK2nF,GAAkB3nF,KAAK6nF,GAAkB7nF,KAAK+nF,IACjJ/nF,KAAAioF,GAA8Bv+E,GAAI,CAAEo+B,MAAO,oBAC3C9nC,KAAAkoF,GAAyChI,GAAa/gC,KAAUpxD,EAAOsJ,UAAU+rF,KAAIxsE,GAAYA,EAASjlB,QAC1GqO,KAAAmoF,GAAgCz+E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,iBAAmB,aAAct6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKkoF,KACzLloF,KAAAooF,GAAkC,IAAIrN,GAAe/6E,KAAKsmC,EAAM,MAChEtmC,KAAAqoF,GAA4B3+E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,aAAe,aAAchkF,KAAKooF,GAAgBvgD,WAC/J7nC,KAAAsoF,GAAoC,IAAIn2B,GAAgBnyD,KAAKsmC,GAC7DtmC,KAAAuoF,GAA6B7+E,GAAI,CAAEo+B,MAAO,aAAeiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,cAAgB,cAAehkF,KAAKsoF,GAAiBzgD,WACnK7nC,KAAAwoF,GAA6B9+E,GAAI,CAAEo+B,MAAO,oBAC1C9nC,KAAAyoF,GAA+B/+E,GAAI,CAAEo+B,MAAO,oBAO5C9nC,KAAA0oF,GAA2C5pC,GAAO,CAAExgD,MAAO,kBAAmBwpC,MAAO,cAAgB,CACrH,OAEA/oC,EAAImoC,IAAI,CAAE5oC,MAAO,iGAAkGyoC,MAAO,MAAOC,OAAQ,MAAOob,QAAS,gBAAkB,CAC1KrjD,EAAI0oC,KAAK,CAAEkhD,EAAG,mJAAoJ/hD,KAAM,qBAGzJ5mC,KAAA4oF,GAA4C9pC,GAAO,CAAExgD,MAAO,kBAAmBwpC,MAAO,eAAiB,CACvH,QAEA/oC,EAAImoC,IAAI,CAAE5oC,MAAO,iGAAkGyoC,MAAO,MAAOC,OAAQ,MAAOob,QAAS,aAAe,CACvKrjD,EAAI0oC,KAAK,CAAEkhD,EAAG,0EAA2ErhD,OAAQ,eAAgBV,KAAM,SACvH7nC,EAAI0oC,KAAK,CAAEkhD,EAAG,oEAAqE/hD,KAAM,qBAI1E5mC,KAAA6oF,GAA0C,IAAI5H,GAAiBhB,GAAO,CAAEl5C,MAAO,IAAKC,OAAQ,GAAI1oC,MAAO,oBAAsByB,EAAY+H,mBAAoB24D,GAAI,yBAA2BzgE,KAAKsmC,GAAOkI,GAA2B,IAAID,GAAiBvuC,KAAKsmC,EAAMkI,KACnQxuC,KAAA8oF,GAtblB,SAA8BC,EAAgB5I,EAAyBC,GACtED,EAAKrjF,YAAYsiD,GAAO,CAAEo9B,UAAU,EAAMhyB,UAAU,EAAM94D,MAAOq3F,GAAUA,IAE3E,IAAK,MAAMv5C,KAAQ4wC,EAClBD,EAAKrjF,YAAYsiD,GAAO,CAAE1tD,MAAO89C,GAAQA,IAE1C,OAAO2wC,EAgbqD6I,CAAqB,cAAe7pC,GAAO,CAAE7gD,MAAO,2EAC/GvQ,EAAO6F,UAAUwvF,KAAIn1F,GAAQA,EAAK0D,QAElBqO,KAAAipF,GAAqCnqC,GAAO,CAAExgD,MAAO,oDAAqDylF,QAAS,IAAM/jF,KAAKgkF,GAAY,uBAAyB,KAEnKhkF,KAAAkpF,GAAkCx/E,GAAI,CAAEpL,MAAO,mDAAqD,CACpHoL,GAAI,CAAEpL,MAAO,sDAAwD,CAAC0B,KAAK6oF,GAAsB5I,SACjGv2E,GAAI,CAAEpL,MAAO,yDAA2D,CAAC0B,KAAK8oF,GAAuB9oF,KAAKipF,OAG1FjpF,KAAAmpF,GAA+B,IAAI31B,GAASvU,GAAM,CAAE3gD,MAAO,oJAAqJgrD,UAAW,KAAMx0D,KAAM,OAAQpD,MAAOkI,EAAac,qBAAuBsF,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIkP,GAAgB/9C,KAAKsmC,EAAM6L,EAAUtD,KAGtX7uC,KAAAopF,GAAmC,IAAIr1B,GAAO9U,GAAM,CAAE3gD,MAAO,yBAA0BxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAKnhB,EAAO+I,qBAAsBpF,MAAO,IAAK6tD,KAAM,IAAK5jC,MAAO,uBAAyB3b,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIkF,GAAwB/zC,KAAKsmC,EAAM6L,EAAUtD,KAAW,GACxT7uC,KAAAqpF,GAA6CnJ,GAAa/gC,GAAO,CAAE7gD,MAAO,eAAgBqd,MAAO,sBAAwB5tB,EAAOoJ,UAAUisF,KAAIxnF,GAAYA,EAASjK,QACnKqO,KAAAspF,GAAgC5/E,GAAI,CAAEo+B,MAAO,eAC7Dp+B,GAAI,CAAEpL,MAAO,2CAA6C,MAC1DoL,GAAI,CAAEpL,MAAO,oCACb0B,KAAKopF,GAAyBvhD,UAC9Bn+B,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,kCAAoC0B,KAAKqpF,KAUhErpF,KAAAupF,GAAiD7/E,GAAI,CAAEo+B,MAAO,mBAC9E9nC,KAAKslF,GACLtlF,KAAKulF,GACLvlF,KAAKmlF,GACLnlF,KAAKkpF,GACLlpF,KAAKkmF,GACLlmF,KAAKomF,GACLpmF,KAAKsmF,GACLtmF,KAAK0lF,GACL1lF,KAAK+lF,GAELr8E,GAAI,CAAEo+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,YAAc,YACnEt6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKgmF,KAExChmF,KAAK+mF,GACL/mF,KAAKonF,GACLpnF,KAAKunF,GACLvnF,KAAKgoF,GACLhoF,KAAK4mF,GACL5mF,KAAK8jF,GACL9jF,KAAKioF,GACLjoF,KAAKmoF,GACLnoF,KAAKspF,GACLtpF,KAAKqoF,GACLroF,KAAKuoF,GACLvoF,KAAKwoF,GACLxoF,KAAKwmF,GACLxmF,KAAK0mF,IAEW1mF,KAAAwpF,GAAuC9/E,GAAI,CAAEo+B,MAAO,mBACpEp+B,GAAI,CAAEo+B,MAAO,aACZ9nC,KAAK0oF,GACL1oF,KAAK4oF,KAGU5oF,KAAAypF,GAA6C//E,GAAI,CAAE+2D,GAAI,yBAA0BniE,MAAO,8DAA8DyB,EAAYyH,kBAClL,uBAEgBxH,KAAA0pF,GAA2ChgF,GAAI,CAAEo+B,MAAO,mBACxE9nC,KAAKypF,GACLzpF,KAAKkkF,GACLx6E,GAAI,CAAEo+B,MAAO,YAAa24B,GAAI,iBAC7B1hB,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,mBAAqB,UAC1Et6E,GACCA,GAAI,CAAEo+B,MAAO,eAAiB9nC,KAAK2jF,IACnCj6E,GAAI,CAAEo+B,MAAO,cAAgB9nC,KAAK4jF,MAGpC5jF,KAAKskF,GACLtkF,KAAK4kF,GACL5kF,KAAKglF,GAELhlF,KAAKupF,IAEWvpF,KAAA2pF,GAAoC5qF,EAAI0oC,KAAK,CAAEkhD,EAAG,8FAA+F/hD,KAAM7mC,EAAYgJ,mBAAoB6gF,YAAa,YACpM5pF,KAAA6pF,GAAuC9qF,EAAI0oC,KAAK,CAAEkhD,EAAG,uGAAwG/hD,KAAM7mC,EAAYgJ,qBAE/K/I,KAAA8pF,GAAmCpgF,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,mBAC1E0B,KAAA+pF,GAAoCrgF,GAAI,CAAEpL,MAAO,oFACjE0B,KAAKkiF,GAAmBr6C,UACxB7nC,KAAKmiF,GAAet6C,UACpB7nC,KAAKoiF,GAAmBv6C,WAER7nC,KAAAgqF,GAA+BtgF,GAAI,CAAEo+B,MAAO,gBAC5D9nC,KAAK6nE,GAAOhgC,UACZ7nC,KAAK+pF,GACL/pF,KAAKwiF,GAAiB36C,WAEN7nC,KAAAumC,EAAkC78B,GAAI,CAAEo+B,MAAO,kBAC/D9nC,KAAKqiF,GAAax6C,UAClB7nC,KAAKuiF,GAAY16C,WAED7nC,KAAAiqF,GAAyCvgF,GAAI,CAAEo+B,MAAO,yBACtE9nC,KAAKsiF,GAAYz6C,UACjB7nC,KAAKumC,GAEUvmC,KAAAi+E,GAA8B,IAAI53C,GAAarmC,KAAKsmC,EAAMtmC,KAAKumC,GAC9DvmC,KAAAkqF,GAA6BxgF,GAAI,CAAEo+B,MAAO,cAC1D9nC,KAAKiqF,GACLjqF,KAAKi+E,GAAcp2C,WAGJ7nC,KAAAmqF,GAAgCzgF,GAAI,CAAEo+B,MAAO,6BAC5Dp+B,GAAI,CAAEo+B,MAAO,gBACZp+B,GAAI,CAAEpL,MAAO,4DAA8D,CAAC0B,KAAKmpF,GAAmBlqC,SAErGv1C,GAAI,CAAEo+B,MAAO,mBACZ9nC,KAAK8iF,GACLp5E,GAAI,CAAEo+B,MAAO,yBACZ9nC,KAAK4jD,GACL5jD,KAAKyiF,GACLziF,KAAK0iF,IAENh5E,GAAI,CAAEo+B,MAAO,4BACZiX,GAAK,CAAEjX,MAAO,mBACd9nC,KAAK2iF,GAAc96C,YAGrBn+B,GAAI,CAAEo+B,MAAO,aACZp+B,GAAI,CAAEo+B,MAAO,6BACZ9nC,KAAK+iF,IAENr5E,GAAI,CAAEo+B,MAAO,6BACZ9nC,KAAKijF,IAENv5E,GAAI,CAAEo+B,MAAO,oCACZ9nC,KAAKkjF,KAGPx5E,GAAI,CAAEo+B,MAAO,sBACZp+B,GAAI,CAAEo+B,MAAO,mBACZp+B,GAAI,CAAEo+B,MAAO,wBACZp+B,GAAI,CAAEpL,MAAO,+FACZoL,GAAI,CAAEo+B,MAAO,MAAOxpC,MAAO,gFAAiFylF,QAAS,IAAM/jF,KAAKgkF,GAAY,gBAC3IjlF,EAAImoC,IAAI,CAAE5oC,MAAO,6EAA8EyoC,MAAO,OAAQC,OAAQ,OAAQojD,eAAgB,QAAShoC,QAAS,eAC/JpiD,KAAK2pF,KAGPjgF,GAAI,CAAEo+B,MAAO,MAAOxpC,MAAO,oFAAqFylF,QAAS,IAAM/jF,KAAKgkF,GAAY,mBAC/IjlF,EAAImoC,IAAI,CAAE5oC,MAAO,6EAA8EyoC,MAAO,OAAQC,OAAQ,OAAQojD,eAAgB,MAAOhoC,QAAS,eAC7JpiD,KAAK6pF,KAGP,qBAOFngF,GAAI,CAAEo+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,UAAY,WACjEt6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKmjF,KAExCz5E,GAAI,CAAEo+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,QAAU,SAC/Dt6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAKqjF,KAExC35E,GAAI,CAAEo+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,UAAY,WACjEjlC,GAAK,CAAEzgD,MAAO,kBACb0B,KAAKujF,GAAa17C,UAClB7nC,KAAKwjF,KAGP95E,GAAI,CAAEo+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,WAAa,YAClEhkF,KAAKyjF,GAAc57C,WAEpBn+B,GAAI,CAAEo+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,WAAa,YAClEt6E,GAAI,CAAEo+B,MAAO,mBAAqB9nC,KAAK0jF,OAI1Ch6E,GAAI,CAAEo+B,MAAO,4BACZ9nC,KAAK0pF,GACL1pF,KAAKyoF,KAISzoF,KAAAqqF,UAA4B3gF,GAAI,CAAEo+B,MAAO,gBAAiBwiD,SAAU,KACnFtqF,KAAKgqF,GACLhqF,KAAKkqF,GACLlqF,KAAKmqF,GACLnqF,KAAK8pF,IAGE9pF,KAAAuqF,IAAuB,EACvBvqF,KAAAwqF,GAAoC,KAC3BxqF,KAAAyqF,GAAkC,GAClCzqF,KAAA0qF,GAAsC,GACtC1qF,KAAA2qF,GAAgD,GAChD3qF,KAAA4qF,GAAiD,GACjD5qF,KAAA6qF,GAA4C,GAC5C7qF,KAAA8qF,GAA+C,GACxD9qF,KAAA+qF,GAA6B,GAC7B/qF,KAAAgrF,GAAgC,GAChChrF,KAAAirF,GAA6B,GAC7BjrF,KAAAkrF,IAAgC,EAChClrF,KAAAmrF,GAA2B,EAC3BnrF,KAAAorF,GAAwB,EACxBprF,KAAAqrF,GAA8B,EAE9BrrF,KAAAsrF,IAA4B,EAC5BtrF,KAAAurF,IAAgC,EAChCvrF,KAAAwrF,IAA8B,EAC9BxrF,KAAAyrF,IAAmC,EAEnCzrF,KAAAmiE,uBAAiC,EACjCniE,KAAAoiE,qBAA+B,EAC/BpiE,KAAA0rF,iBAA2B,EAyd5B1rF,KAAA+mE,aAAe,KACrB/mE,KAAKqqF,UAAUtpC,MAAM,CAAE4qC,eAAe,KAI/B3rF,KAAA4rF,GAA0B,KAC5B5rF,KAAKmiF,GAAetX,iBACxB7qE,KAAKqqF,UAAUtpC,MAAM,CAAE4qC,eAAe,KAOjC3rF,KAAA6rF,YAAc,KACpB7rF,KAAKsiF,GAAYz6C,UAAUvpC,MAAMi1D,QAAUvzD,KAAKsmC,EAAK+gC,oBAAsB,GAAK,OAChF,MAAMykB,EAAc9rF,KAAKumC,EAAgB2C,wBAezC,GAdAlpC,KAAKsmC,EAAKgD,iBAAmB16C,KAAKsU,OAAO4oF,EAAYppC,MAAQopC,EAAYziD,MAAQrpC,KAAKsmC,EAAKqC,eAC3F3oC,KAAKi+E,GAAcz7B,SACnBxiD,KAAKsiF,GAAY9/B,SACjBxiD,KAAKqiF,GAAa7/B,SAEdzlD,SAASgvF,eAAiB/rF,KAAKmiF,GAAejY,mBAAqBlqE,KAAKmiF,GAAetX,iBAC1F7qE,KAAKmiF,GAAerR,qBAAoB,GAGzC9wE,KAAK6nE,GAAOhgC,UAAUvpC,MAAMi1D,QAAUvzD,KAAKsmC,EAAKmvC,YAAc,GAAK,OACnEz1E,KAAKwiF,GAAiB36C,UAAUvpC,MAAMi1D,QAAUvzD,KAAKsmC,EAAK0lD,cAAgB,GAAK,OAC/EhsF,KAAKi+E,GAAcp2C,UAAUvpC,MAAMi1D,QAAUvzD,KAAKsmC,EAAKnmC,KAAKob,SAAWvb,KAAKsmC,EAAKgD,iBAAmB,GAAK,OACzGtpC,KAAK8iF,GAAcxkF,MAAMi1D,QAAUvzD,KAAKsmC,EAAK2lD,iBAAmB,GAAK,OAEjEjsF,KAAKsmC,EAAK4lD,gBAAiB,CAC9B,MACMC,EADyBnsF,KAAK+pF,GAAkBrX,aAAe1yE,KAAKsmC,EAAKk4B,iBAC9Bx+D,KAAKsmC,EAAKnmC,KAAKkb,IAAM,EAAE,GAElE+wE,EAAuBpsF,KAAK+pF,GAAkBn9E,aAA4C,EAA7B5M,KAAKsmC,EAAKnmC,KAAKmb,aAC5E+wE,EAAuBrsF,KAAK+pF,GAAkBn9E,aAAe5M,KAAKsmC,EAAKnmC,KAAKmb,YAAc,GAE1FgxE,EADoB19F,KAAKsgB,IAAIk9E,EAAcx9F,KAAKyB,IAAIg8F,EAAcF,IACzBnsF,KAAKsmC,EAAKnmC,KAAKmb,YAE9Dtb,KAAKkiF,GAAmBr6C,UAAUvpC,MAAMyoC,MAAQulD,EAAqB,KACrEtsF,KAAKmiF,GAAet6C,UAAUvpC,MAAMyoC,MAAQulD,EAAqB,KACjEtsF,KAAKoiF,GAAmBv6C,UAAUvpC,MAAMyoC,MAAQulD,EAAqB,KACrEtsF,KAAKkiF,GAAmBr6C,UAAUvpC,MAAMiuF,WAAa,IACrDvsF,KAAKmiF,GAAet6C,UAAUvpC,MAAMiuF,WAAa,IACjDvsF,KAAKoiF,GAAmBv6C,UAAUvpC,MAAMiuF,WAAa,IACrDvsF,KAAKkiF,GAAmBr6C,UAAUvpC,MAAMi1D,QAAU,GAClDvzD,KAAKoiF,GAAmBv6C,UAAUvpC,MAAMi1D,QAAU,GAClDvzD,KAAKkiF,GAAmB1/B,SACxBxiD,KAAKoiF,GAAmB5/B,cAExBxiD,KAAKmiF,GAAet6C,UAAUvpC,MAAMyoC,MAAQ,GAC5C/mC,KAAKmiF,GAAet6C,UAAUvpC,MAAMiuF,WAAa,GACjDvsF,KAAKkiF,GAAmBr6C,UAAUvpC,MAAMi1D,QAAU,OAClDvzD,KAAKoiF,GAAmBv6C,UAAUvpC,MAAMi1D,QAAU,OAEnDvzD,KAAKmiF,GAAe3/B,SAEpB,MAAMgqC,EAAwC,EAC5CxsF,KAAKsmC,EAAKmmD,SAAW,KAAO,IAAM,qBAClCzsF,KAAKsmC,EAAKu+B,WAAa,KAAO,IAAM,qBACpC7kE,KAAKsmC,EAAKmoC,kBAAoB,KAAO,IAAM,uBAC3CzuE,KAAKsmC,EAAKmvC,YAAc,KAAO,IAAM,mBACrCz1E,KAAKsmC,EAAKgtB,UAAY,KAAO,IAAM,2BACnCtzD,KAAKsmC,EAAKgtC,aAAe,KAAO,IAAM,qBACtCtzE,KAAKsmC,EAAK0lD,cAAgB,KAAO,IAAM,qBACvChsF,KAAKsmC,EAAKisC,kBAAoB,KAAO,IAAM,yBAC3CvyE,KAAKsmC,EAAK+gC,oBAAsB,KAAO,IAAM,yBAC7CrnE,KAAKsmC,EAAKomD,kBAAoB,KAAO,IAAM,4BAC3C1sF,KAAKsmC,EAAK2lD,iBAAmB,KAAO,IAAM,uBAC3C,gBACA,gBAGD,IAAK,IAAI99F,EAAY,EAAGA,EAAIq+F,EAAep+F,OAAQD,IAAK,CACvD,MAAMixD,EAA+Cp/C,KAAKkjF,GAAa1/B,SAASr1D,EAAI,GAChFixD,EAAO8E,WAAasoC,EAAer+F,KAAIixD,EAAO8E,UAAYsoC,EAAer+F,IAG9E,MAAMiS,EAAmBJ,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SACrD0b,EAA0B9b,KAAKsmC,EAAK6qC,oBACpCp0D,EAA0B/c,KAAKsmC,EAAKoI,uBACpCl+B,EAAyBpQ,EAAQqX,YAAYsF,GAC7C4vE,EAAqB3sF,KAAKqqF,UAAUuC,SAAS7vF,SAASgvF,eACtDA,EAAgChvF,SAASgvF,cAY/C,GAVAlL,GAAiB7gF,KAAKmjF,GAAcnjF,KAAKsmC,EAAKnmC,KAAK8a,OACnDjb,KAAKmjF,GAAaxnE,MAAQ5tB,EAAOmE,OAAO8N,KAAKsmC,EAAKnmC,KAAK8a,OAAO9oB,SAC9D0uF,GAAiB7gF,KAAKqjF,GAAYt1F,EAAOsE,KAAKjE,OAAS,EAAI4R,KAAKsmC,EAAKnmC,KAAKvC,KAC1EoC,KAAKujF,GAAasJ,YAAYj+F,KAAKsgB,IAAI,EAAGtgB,KAAKmb,MAAM/J,KAAKsmC,EAAKnmC,KAAKqa,SACpExa,KAAKwjF,GAAc9xF,MAAQ9C,KAAKmb,MAAM/J,KAAKsmC,EAAKnmC,KAAKqa,OAAO49D,WAC5Dp4E,KAAKmpF,GAAmB0D,YAAY7sF,KAAKsmC,EAAKnmC,KAAKwb,OACnD3b,KAAKyjF,GAAcoJ,YAAY7sF,KAAKsmC,EAAKnmC,KAAKib,QAE9CylE,GAAiB7gF,KAAK0jF,GAAe1jF,KAAKsmC,EAAKnmC,KAAKsb,QAE/Czb,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB9c,KAAKsmC,EAAKlmC,SA2QzC,CACA0sF,GAAc,EACdC,GAAiB,EAErB,IAAIC,EAAqBp+F,KAAKyB,IAAI2P,KAAKsmC,EAAK0T,UAAUkC,eAAgBl8C,KAAKsmC,EAAK0T,UAAUmC,gBACtF8wC,EAAsBr+F,KAAKsgB,IAAIlP,KAAKsmC,EAAK0T,UAAUkC,eAAgBl8C,KAAKsmC,EAAK0T,UAAUmC,gBACvF+wC,EAAqBt+F,KAAKyB,IAAI2P,KAAKsmC,EAAK0T,UAAUoC,eAAgBp8C,KAAKsmC,EAAK0T,UAAUqC,gBACtF8wC,EAAsBv+F,KAAKsgB,IAAIlP,KAAKsmC,EAAK0T,UAAUoC,eAAgBp8C,KAAKsmC,EAAK0T,UAAUqC,gBAE3F,GAAmC,GAA/Bj8C,EAAQuX,KAAK3X,KAAKsmC,EAAKvqB,KAE1B,IAAK,IAAI5tB,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKnmC,KAAKob,SAAUptB,IAEhDiS,EAAQuX,KAAKxpB,IAAMiS,EAAQuX,KAAK3X,KAAKsmC,EAAKvqB,MAAQ5tB,GAAK6R,KAAKsmC,EAAKvqB,MACnE5tB,EAAI6+F,GAAc7+F,EAAI8+F,GAAejtF,KAAKsmC,EAAKlmC,QAAU8sF,GAAcltF,KAAKsmC,EAAKlmC,QAAU+sF,KAE5FL,GAAc,EACd3+F,EAAI6R,KAAKsmC,EAAKnmC,KAAKob,UAItB,IAAK,IAAIptB,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKnmC,KAAKob,SAAUptB,IAE7B,GAAnBiS,EAAQuX,KAAKxpB,IAAW6R,KAAKsmC,EAAKnmC,KAAKksB,qBAAqBrsB,KAAKsmC,EAAKlmC,QAASjS,IAAM4uB,GAAmB5uB,GAAK6R,KAAKsmC,EAAKvqB,MACzH5tB,EAAI6+F,GAAc7+F,EAAI8+F,GAAejtF,KAAKsmC,EAAKlmC,QAAU8sF,GAAcltF,KAAKsmC,EAAKlmC,QAAU+sF,KAE5FJ,GAAiB,EACjB5+F,EAAI6R,KAAKsmC,EAAKnmC,KAAKob,UAIjBuxE,EACH9sF,KAAK2pF,GAAsBrrF,MAAMC,YAAY,OAAQwB,EAAY+I,kBAGjE9I,KAAK2pF,GAAsBrrF,MAAMC,YAAY,OAAQwB,EAAYgJ,oBAG9DgkF,EACH/sF,KAAK6pF,GAAyBvrF,MAAMC,YAAY,OAAQwB,EAAY+I,kBAGpE9I,KAAK6pF,GAAyBvrF,MAAMC,YAAY,OAAQwB,EAAYgJ,oBAGrE/I,KAAK2jF,GAAqBrlF,MAAMi1D,QAAU,OAC1CvzD,KAAK4jF,GAAkBtlF,MAAMi1D,QAAU,OACvCwtB,EAAE,sBAAsBqM,SAASC,OACjCtM,EAAE,qBAAqBqM,SAASC,OAChCrtF,KAAKyoF,GAAgB3rF,YAAYkD,KAAKwpF,IACtCxpF,KAAKyoF,GAAgB/H,aAAa1gF,KAAKkkF,GAAsBlkF,KAAKyoF,GAAgBnpF,YAClFU,KAAKyoF,GAAgB/H,aAAa1gF,KAAKypF,GAA4BzpF,KAAKyoF,GAAgBnpF,YACjC,IAAnDU,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASzO,KAC9CqO,KAAKypF,GAA2BrjF,YAAc,qBAG9CpG,KAAKypF,GAA2BrjF,YAAcpG,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASzO,KAG1FqO,KAAKulF,GAAoBjnF,MAAMi1D,QAAU,OACzCvzD,KAAKslF,GAAmBhnF,MAAMi1D,QAAU,OACxCvzD,KAAKqoF,GAAa/pF,MAAMi1D,QAAU,OAClCvzD,KAAKuoF,GAAcjqF,MAAMi1D,QAAU,OACnCvzD,KAAK0lF,GAAepnF,MAAMi1D,QAAU,OACpCvzD,KAAK+mF,GAAgBzoF,MAAMi1D,QAAU,OACrCvzD,KAAKonF,GAAoB9oF,MAAMi1D,QAAU,OACzCvzD,KAAKkmF,GAAiB5nF,MAAMi1D,QAAU,OACtCvzD,KAAKomF,GAAoB9nF,MAAMi1D,QAAU,OACzCvzD,KAAKsmF,GAAmBhoF,MAAMi1D,QAAU,OACxCvzD,KAAKwoF,GAAclqF,MAAMi1D,QAAU,OACnCvzD,KAAKkpF,GAAgB5qF,MAAMi1D,QAAU,OACrCvzD,KAAK8jF,GAAoBxlF,MAAMi1D,QAAU,OACzCvzD,KAAKioF,GAAe3pF,MAAMi1D,QAAU,OACpCvzD,KAAKmoF,GAAc7pF,MAAMi1D,QAAU,OACnCvzD,KAAKspF,GAAchrF,MAAMi1D,QAAU,OACnCvzD,KAAKwmF,GAAkBloF,MAAMi1D,QAAU,OACvCvzD,KAAK0mF,GAAepoF,MAAMi1D,QAAU,OACpCvzD,KAAKunF,GAAkBjpF,MAAMi1D,QAAU,OACvCvzD,KAAKgoF,GAAsB1pF,MAAMi1D,QAAU,OAC3CvzD,KAAK4mF,GAAmBtoF,MAAMi1D,QAAU,OACxCvzD,KAAKmlF,GAAiB7mF,MAAMi1D,QAAU,OACtCvzD,KAAK4kF,GAActmF,MAAMi1D,QAAU,OACnCvzD,KAAKglF,GAAkB1mF,MAAMi1D,QAAU,OAEvCvzD,KAAKyoF,GAAgBnqF,MAAMi1D,QAAU,GACrCvzD,KAAKyoF,GAAgBnqF,MAAMonE,MAAQ3lE,EAAYW,gBAAgBV,KAAKsmC,EAAKnmC,KAAMH,KAAKsmC,EAAKlmC,SAASa,YAElG,IAAK,IAAI4S,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAAO,CAEvD,IAAIrD,EAAyBxQ,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAC1F1xB,EAAoBxM,EAAWkD,YAAYG,GAC3CuG,EAAqB5J,EAAWlP,YAAYuS,IAASmJ,GAAalJ,EAAUoJ,WAAcld,KAAKsmC,EAAKnmC,KAAKe,kBAAoB,GAC7HmZ,EAAwB7J,EAAWmD,eAAeE,GAmBtD,GAhBIwG,GAAiBra,KAAKsmC,EAAKnmC,KAAKub,wBACnCrB,EAAgB,EAChB7J,EAAWmD,eAAeE,GAAO,EACjCrD,EAAWoD,YAAYC,GAAO,GAE3BuG,GAAcpa,KAAKsmC,EAAKnmC,KAAKe,mBAAsB8b,GAAalJ,EAAUmJ,aAC7ED,EAAYlJ,EAAUC,OACtBvD,EAAWkD,YAAYG,GAAOC,EAAUC,OACxCvD,EAAWoD,YAAYC,GAAOG,EAAWC,SAEtCmG,GAAcpa,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,mBAAsB4b,GAAalJ,EAAUoJ,aAChH1M,EAAWkD,YAAYG,GAAOC,EAAUC,OACxCvD,EAAWoD,YAAYC,GAAOG,EAAWC,SAItCjU,KAAKsmC,EAAK4X,oBAAsBl+C,KAAKstF,GAAiBz5E,GAAK2vC,SAASp1D,QAAU,EAAI4R,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmB,CAC1J,KAAOpB,KAAKstF,GAAiBz5E,GAAKvU,YAAYU,KAAKstF,GAAiBz5E,GAAKsjB,OAAO,GAChF,MAAMo2D,EAAwB,GAC9BA,EAAY/+F,KAAK,QACjB++F,EAAY/+F,KAAK,QACjB,IAAK,IAAIL,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKnmC,KAAKe,kBAAmB/S,IACtB,IAAnC6R,KAAKsmC,EAAKnmC,KAAK4X,SAAS5pB,GAAGwD,KAC9B47F,EAAY/+F,KAAK,UAAYL,EAAI,IAGjCo/F,EAAY/+F,KAAKwR,KAAKsmC,EAAKnmC,KAAK4X,SAAS5pB,GAAGwD,MAG9C,IAAK,IAAIxD,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKnmC,KAAKiB,kBAAmBjT,IACa,IAAtE6R,KAAKsmC,EAAKnmC,KAAK4X,SAAS5pB,EAAI6R,KAAKsmC,EAAKnmC,KAAKe,mBAAmBvP,KACjE47F,EAAY/+F,KAAK,UAAYL,EAAI,IAGjCo/F,EAAY/+F,KAAKwR,KAAKsmC,EAAKnmC,KAAK4X,SAAS5pB,EAAI6R,KAAKsmC,EAAKnmC,KAAKe,mBAAmBvP,MAGjFuuF,GAAalgF,KAAKstF,GAAiBz5E,GAAM05E,GAkB1C,GAdI/8E,EAAWkD,YAAYG,IAAQC,EAAUC,OAC5C/T,KAAKstF,GAAiBz5E,GAAKmzD,cAAgB,EAEnCx2D,EAAWkD,YAAYG,IAAQC,EAAUgZ,UACjD9sB,KAAKstF,GAAiBz5E,GAAKmzD,cAAgB,EAEnCx2D,EAAWkD,YAAYG,IAAQC,EAAUmJ,WACjDjd,KAAKstF,GAAiBz5E,GAAKmzD,cAAgBx2D,EAAWlP,YAAYuS,GAAO,EAGzE7T,KAAKstF,GAAiBz5E,GAAKmzD,cAAgBx2D,EAAWlP,YAAYuS,GAAO,EAAI7T,KAAKsmC,EAAKnmC,KAAKe,kBAIzFlB,KAAKwtF,GAAoB35E,GAAK2vC,SAASp1D,QAAU4R,KAAKsmC,EAAKnmC,KAAKub,sBAAuB,CAC1F,KAAO1b,KAAKwtF,GAAoB35E,GAAKvU,YAAYU,KAAKwtF,GAAoB35E,GAAKsjB,OAAO,GACtF,MAAMs2D,EAA2B,GACjC,IAAK,IAAIt/F,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKnmC,KAAKub,sBAAuBvtB,IACjEs/F,EAAej/F,KAAKL,EAAI,GAEzB+xF,GAAalgF,KAAKwtF,GAAoB35E,GAAM45E,GAQ7C,GAJAztF,KAAKwtF,GAAoB35E,GAAKmzD,cAAgBx2D,EAAWmD,eAAeE,GAIpEmJ,GAAalJ,EAAUC,OAAQ,CAElC,IAAI2hC,EAA4B11C,KAAKsmC,EAAKnmC,KAAK4X,SAASqC,GAAY3C,YAAY4C,GAEhF,KAAOra,KAAK0tF,GAAa75E,GAAKvU,YAAYU,KAAK0tF,GAAa75E,GAAKsjB,OAAO,GACxE,MAAMw2D,EAAwB,GAC9BA,EAAYn/F,KAAK,QAG+B,GAA5CwR,KAAKstF,GAAiBz5E,GAAKmzD,eAC9B2mB,EAAYn/F,KAAK,eACjBm/F,EAAYn/F,KAAK,SACjBm/F,EAAYn/F,KAAK,UACjBm/F,EAAYn/F,KAAK,YACjBm/F,EAAYn/F,KAAK,iBAKjBm/F,EAAYn/F,KAAK,UACjBm/F,EAAYn/F,KAAK,OACjBm/F,EAAYn/F,KAAK,aACjBm/F,EAAYn/F,KAAK,cACjBm/F,EAAYn/F,KAAK,eACjBm/F,EAAYn/F,KAAK,UACjBm/F,EAAYn/F,KAAK,kBACjBm/F,EAAYn/F,KAAK,kBACK,GAAlBknD,EAAc5gD,MAAiD,GAAlB4gD,EAAc5gD,MAA+C,GAAlB4gD,EAAc5gD,MAAsD,GAAlB4gD,EAAc5gD,MAAgD,GAAlB4gD,EAAc5gD,OACvM64F,EAAYn/F,KAAK,iBACjBm/F,EAAYn/F,KAAK,iBACjBm/F,EAAYn/F,KAAK,kBAEI,GAAlBknD,EAAc5gD,KACjB64F,EAAYn/F,KAAK,eAES,GAAlBknD,EAAc5gD,OACtB64F,EAAYn/F,KAAK,eACjBm/F,EAAYn/F,KAAK,eACjBm/F,EAAYn/F,KAAK,eACjBm/F,EAAYn/F,KAAK,eACjBm/F,EAAYn/F,KAAK,iBAInB0xF,GAAalgF,KAAK0tF,GAAa75E,GAAM85E,GAErC,IAAIC,GAAqB,EACrBjO,EAAmB,EAIvB,OAAQnvE,EAAWoD,YAAYC,IAE9B,KAAKG,EAAW0E,cACXsE,GAAalJ,EAAUgZ,UAC1B6yD,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAW2E,SACXqE,GAAalJ,EAAUgZ,UAC1B6yD,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAW4E,UACXoE,GAAalJ,EAAUgZ,UAC1B6yD,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAW6E,WACXmE,GAAalJ,EAAUgZ,UAC1B6yD,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAW0F,cACXsD,GAAalJ,EAAUgZ,UAC1B6yD,EAAW,EAEXiO,GAAY,EACb,MAED,KAAK55E,EAAW8E,aACXkE,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,WAC/DyiE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAW+E,OACXiE,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,WAC/DyiE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAW8F,YACXkD,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,WAC/DyiE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAWgF,aACXgE,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,WAC/DyiE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAWiF,cACX+D,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,WAC/DyiE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAWwF,UACXwD,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,WAC/DyiE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAW6F,iBACXmD,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,WAC/DyiE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAW+F,iBACXiD,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,WAC/DyiE,EAAW,EAEXiO,GAAY,EACb,MAED,KAAK55E,EAAWyF,gBACXuD,GAAalJ,EAAUmJ,WAC1B0iE,EAAW,EAEXiO,GAAY,EACb,MACD,KAAK55E,EAAW2F,gBACXqD,GAAalJ,EAAUmJ,WAC1B0iE,EAAW,GAEXiO,GAAY,EACb,MACD,KAAK55E,EAAW4F,gBACXoD,GAAalJ,EAAUmJ,WAC1B0iE,EAAW,GAEXiO,GAAY,EACb,MACD,KAAK55E,EAAWuF,cACVyD,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,YAAiC,GAAlBw4B,EAAc5gD,KAG7F84F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAK3rE,EAAWkF,aACV8D,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,YAAiC,GAAlBw4B,EAAc5gD,KAG7F84F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAK3rE,EAAWmF,aACV6D,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,YAAiC,GAAlBw4B,EAAc5gD,KAG7F84F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAK3rE,EAAWoF,aACV4D,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,YAAiC,GAAlBw4B,EAAc5gD,KAG7F84F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAK3rE,EAAWqF,aACV2D,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,YAAiC,GAAlBw4B,EAAc5gD,KAG7F84F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAK3rE,EAAWsF,cACV0D,GAAalJ,EAAUmJ,YAAcD,GAAalJ,EAAUoJ,YAAiC,GAAlBw4B,EAAc5gD,KAG7F84F,GAAY,EAFZjO,EAAW,GAGZ,MACD,KAAK3rE,EAAWC,SAMb25E,GACH5tF,KAAK0tF,GAAa75E,GAAKmzD,cAAgB,EACvCx2D,EAAWoD,YAAYC,GAAOG,EAAWC,QACzCjU,KAAK6tF,GAAmBh6E,IAGxB7T,KAAK0tF,GAAa75E,GAAKmzD,cAAgB2Y,OAG9BnvE,EAAWoD,YAAYC,IAAQG,EAAWC,UACpDjU,KAAK0tF,GAAa75E,GAAKmzD,cAAgB,EACvChnE,KAAK6tF,GAAmBh6E,IAKrB7T,KAAKstF,GAAiBz5E,GAAKmzD,eAAiB,GAC7ChnE,KAAKwtF,GAAoB35E,GAAkB,cAAqBvV,MAAMi1D,QAAU,OAClFwtB,EAAE,qBAAuBltE,GAAKrS,IAAI,GAAGlD,MAAMi1D,QAAU,OACrDwtB,EAAE,kBAAoBltE,GAAKrS,IAAI,GAAG0iD,UAAY,WAGE,GAA5ClkD,KAAKstF,GAAiBz5E,GAAKmzD,eAC9B+Z,EAAE,kBAAoBltE,GAAKrS,IAAI,GAAGlD,MAAMi1D,QAAU,OAChDvzD,KAAK0tF,GAAa75E,GAAkB,cAAqBvV,MAAMi1D,QAAU,SAG3EwtB,EAAE,kBAAoBltE,GAAKrS,IAAI,GAAGlD,MAAMi1D,QAAU,GAChDvzD,KAAK0tF,GAAa75E,GAAkB,cAAqBvV,MAAMi1D,QAAU,MAI1EvzD,KAAKwtF,GAAoB35E,GAAkB,cAAqBvV,MAAMi1D,QAAWvzD,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,EAAK,GAAK,OACpIqlE,EAAE,qBAAuBltE,GAAKrS,IAAI,GAAGlD,MAAMi1D,QAAWvzD,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,EAAK,GAAK,OACvGqlE,EAAE,kBAAoBltE,GAAKrS,IAAI,GAAG0iD,UAAalkD,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,EAAK,MAAQ,WACnGqlE,EAAE,kBAAoBltE,GAAKrS,IAAI,GAAGlD,MAAMi1D,QAAU,GAChDvzD,KAAK0tF,GAAa75E,GAAkB,cAAqBvV,MAAMi1D,QAAU,IAK7EvzD,KAAKsmC,EAAK4X,oBAAqB,EAE/B,IAAK,IAAI4vC,EAAqB,EAAGA,EAAa//F,EAAOkI,OAAO7H,OAAQ0/F,IAAc,CACjF,MAAM1uC,EAAkBp/C,KAAK6mF,GAAarjC,SAASsqC,GAC9C1uC,EAAO2uC,aAAa,WACxB3uC,EAAOvhD,aAAa,SAAU,IAKhCmC,KAAKkkF,GAAqB5lF,MAAMi1D,QAAU,OAE1CvzD,KAAKupF,GAA+BjrF,MAAMi1D,QAAU,OACpDvzD,KAAK4kF,GAActmF,MAAMi1D,QAAU,OACnCvzD,KAAKglF,GAAkB1mF,MAAMi1D,QAAU,OACvCvzD,KAAKskF,GAA2BhmF,MAAMi1D,QAAU,OAChDwtB,EAAE,kBAAkBiN,IAAI,UAAW,QAEnChuF,KAAK0pF,GAAyBprF,MAAMonE,MAAQ3lE,EAAYW,gBAAgBV,KAAKsmC,EAAKnmC,KAAMH,KAAKsmC,EAAKlmC,SAASa,YAGvGjB,KAAKsmC,EAAKlmC,SAAWJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,mBAC1EpB,KAAK6nE,GAAOc,kBA/qB0C,CAEvD3oE,KAAKupF,GAA+BjrF,MAAMi1D,QAAU,GACpDvzD,KAAK4kF,GAActmF,MAAMi1D,QAAU,GACnCvzD,KAAKglF,GAAkB1mF,MAAMi1D,QAAWvzD,KAAKsrF,GAAmB,GAAK,OACrEtrF,KAAKmlF,GAAiB7mF,MAAMi1D,QAAU,GACtCvzD,KAAKskF,GAA2BhmF,MAAMi1D,QAAU,GAChDwtB,EAAE,kBAAkBiN,IAAI,UAAW,IACnChuF,KAAK0pF,GAAyB5sF,YAAYkD,KAAKwpF,IAC/CxpF,KAAK0pF,GAAyBhJ,aAAa1gF,KAAKkkF,GAAsBlkF,KAAK0pF,GAAyBpqF,YACpGU,KAAK0pF,GAAyBhJ,aAAa1gF,KAAKypF,GAA4BzpF,KAAK0pF,GAAyBpqF,YAEnD,IAAnDU,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASzO,KAC9CqO,KAAKypF,GAA2BrjF,YAAc,sBAG9CpG,KAAKypF,GAA2BrjF,YAAcpG,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASzO,KAG1FqO,KAAKyoF,GAAgBnqF,MAAMi1D,QAAU,OAIrC,IAAIw5B,GAAiB,EACjBD,GAAc,EAElB,GAAmC,GAA/B1sF,EAAQuX,KAAK3X,KAAKsmC,EAAKvqB,KAAW,CAErC,IAAIixE,EAAqBp+F,KAAKyB,IAAI2P,KAAKsmC,EAAK0T,UAAUkC,eAAgBl8C,KAAKsmC,EAAK0T,UAAUmC,gBACtF8wC,EAAsBr+F,KAAKsgB,IAAIlP,KAAKsmC,EAAK0T,UAAUkC,eAAgBl8C,KAAKsmC,EAAK0T,UAAUmC,gBACvF+wC,EAAqBt+F,KAAKyB,IAAI2P,KAAKsmC,EAAK0T,UAAUoC,eAAgBp8C,KAAKsmC,EAAK0T,UAAUqC,gBACtF8wC,EAAsBv+F,KAAKsgB,IAAIlP,KAAKsmC,EAAK0T,UAAUoC,eAAgBp8C,KAAKsmC,EAAK0T,UAAUqC,gBAE3F,IAAK,IAAIluD,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKnmC,KAAKob,SAAUptB,IAEhDiS,EAAQuX,KAAKxpB,IAAMiS,EAAQuX,KAAK3X,KAAKsmC,EAAKvqB,MAAQ5tB,GAAK6R,KAAKsmC,EAAKvqB,MACnE5tB,EAAI6+F,GAAc7+F,EAAI8+F,GAAejtF,KAAKsmC,EAAKlmC,QAAU8sF,GAAcltF,KAAKsmC,EAAKlmC,QAAU+sF,KAE5FL,GAAc,EACd3+F,EAAI6R,KAAKsmC,EAAKnmC,KAAKob,UAIrB,IAAK,IAAIptB,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKnmC,KAAKob,SAAUptB,IAE7B,GAAnBiS,EAAQuX,KAAKxpB,IAAW6R,KAAKsmC,EAAKnmC,KAAKksB,qBAAqBrsB,KAAKsmC,EAAKlmC,QAASjS,IAAM4uB,GAAmB5uB,GAAK6R,KAAKsmC,EAAKvqB,MACzH5tB,EAAI6+F,GAAc7+F,EAAI8+F,GAAejtF,KAAKsmC,EAAKlmC,QAAU8sF,GAAcltF,KAAKsmC,EAAKlmC,QAAU+sF,KAE5FJ,GAAiB,EACjB5+F,EAAI6R,KAAKsmC,EAAKnmC,KAAKob,UAsCtB,GAhCIuxE,EACH9sF,KAAK2pF,GAAsBrrF,MAAMC,YAAY,OAAQwB,EAAY+I,kBAGjE9I,KAAK2pF,GAAsBrrF,MAAMC,YAAY,OAAQwB,EAAYgJ,oBAE9DgkF,EACH/sF,KAAK6pF,GAAyBvrF,MAAMC,YAAY,OAAQwB,EAAY+I,kBAGpE9I,KAAK6pF,GAAyBvrF,MAAMC,YAAY,OAAQwB,EAAYgJ,oBAGjE/I,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,UAC9CJ,KAAK2jF,GAAqBrlF,MAAMi1D,QAAU,OAC1CvzD,KAAK4jF,GAAkBtlF,MAAMi1D,QAAU,GAEvCwtB,EAAE,sBAAsBqM,SAASC,OACjCtM,EAAE,qBAAqBqM,SAASa,OAEhCpN,GAAiB7gF,KAAK4jF,GAAmBpzE,EAAWnW,UAEpD2F,KAAK2jF,GAAqBrlF,MAAMi1D,QAAU,GAC1CvzD,KAAK4jF,GAAkBtlF,MAAMi1D,QAAU,OAGvCwtB,EAAE,sBAAsBqM,SAASa,OACjClN,EAAE,qBAAqBqM,SAASC,OAEhCxM,GAAiB7gF,KAAK2jF,GAAsBnzE,EAAWnW,SAGnD2F,KAAKsmC,EAAK4nD,oBAAsB19E,EAAWnW,QAAUmW,EAAW1b,KAG9D,CAwBN,GApBmB,GAAf0b,EAAW1b,MACdkL,KAAKulF,GAAoBjnF,MAAMi1D,QAAU,GACzCstB,GAAiB7gF,KAAKqlF,GAAkB70E,EAAW8B,YAEnDtS,KAAKulF,GAAoBjnF,MAAMi1D,QAAU,OAEvB,GAAf/iD,EAAW1b,MACdkL,KAAKslF,GAAmBhnF,MAAMi1D,QAAU,OACxCvzD,KAAKqoF,GAAa/pF,MAAMi1D,QAAU,GAClCvzD,KAAKooF,GAAgB5lC,UAErBxiD,KAAKqoF,GAAa/pF,MAAMi1D,QAAU,OAEhB,GAAf/iD,EAAW1b,MACdkL,KAAKslF,GAAmBhnF,MAAMi1D,QAAU,OACxCvzD,KAAKuoF,GAAcjqF,MAAMi1D,QAAU,GACnCvzD,KAAKsoF,GAAiB9lC,UAEtBxiD,KAAKuoF,GAAcjqF,MAAMi1D,QAAU,OAEjB,GAAf/iD,EAAW1b,KAAgC,CAC9CkL,KAAKslF,GAAmBhnF,MAAMi1D,QAAU,OACxCvzD,KAAKwoF,GAAclqF,MAAMi1D,QAAU,GACnCvzD,KAAK0lF,GAAepnF,MAAMi1D,QAAU,OACpCvzD,KAAK+lF,GAAyBznF,MAAMi1D,QAAU,OAC9CvzD,KAAK+mF,GAAgBzoF,MAAMi1D,QAAU,OACrCvzD,KAAKonF,GAAoB9oF,MAAMi1D,QAAU,OACzCvzD,KAAKkmF,GAAiB5nF,MAAMi1D,QAAU,OACtCvzD,KAAKomF,GAAoB9nF,MAAMi1D,QAAU,OACzCvzD,KAAKsmF,GAAmBhoF,MAAMi1D,QAAU,OACxC,IAAK,IAAIplE,EAAY,EAAGA,EAAIJ,EAAO2K,UAAWvK,IAC7C0yF,GAAiB7gF,KAAK8qF,GAAwB38F,GAAIqiB,EAAWgD,iBAAiBrlB,IAC9E6R,KAAK6qF,GAAwB18F,GAAGq0D,cAGjCxiD,KAAKwoF,GAAclqF,MAAMi1D,QAAU,OACnCvzD,KAAK0lF,GAAepnF,MAAMi1D,QAAU,GACpCvzD,KAAK+lF,GAAyBznF,MAAMi1D,QAAWvzD,KAAKyrF,GAA0B,GAAK,OACnFzrF,KAAK+mF,GAAgBzoF,MAAMi1D,QAAU,GACrCvzD,KAAKonF,GAAoB9oF,MAAMi1D,QAAWvzD,KAAKwrF,IAA0C,GAApBh7E,EAAWzV,MAAa,GAAK,OAClGiF,KAAK8mF,GAAexoF,MAAMi1D,QAA+B,GAApB/iD,EAAWzV,MAAa,GAAK,OAClEiF,KAAKkmF,GAAiB5nF,MAAMi1D,QAAU,GACtCvzD,KAAKomF,GAAoB9nF,MAAMi1D,QAAU,GACzCvzD,KAAKsmF,GAAmBhoF,MAAMi1D,QAAU,GA4BzC,GA1BmB,GAAf/iD,EAAW1b,OACdkL,KAAKslF,GAAmBhnF,MAAMi1D,QAAU,GACxCstB,GAAiB7gF,KAAKolF,GAAiB50E,EAAW6B,WAGhC,GAAf7B,EAAW1b,MACdkL,KAAKkpF,GAAgB5qF,MAAMi1D,QAAU,GACrCvzD,KAAKslF,GAAmBhnF,MAAMi1D,QAAU,QAGxCvzD,KAAKkpF,GAAgB5qF,MAAMi1D,QAAU,OAGnB,GAAf/iD,EAAW1b,MACdkL,KAAKslF,GAAmBhnF,MAAMi1D,QAAU,OACxCvzD,KAAKwmF,GAAkBloF,MAAMi1D,QAAU,GACvCvzD,KAAK0mF,GAAepoF,MAAMi1D,QAAU,GACpCvzD,KAAKymF,GAAkBxnC,MAAMtjC,MAAQliB,EAAa+W,EAAWxU,YAAc,IAC3E6kF,GAAiB7gF,KAAKumF,GAAsB/1E,EAAWvU,eACvD+D,KAAKymF,GAAkBoG,YAAYr8E,EAAWxU,cAE9CgE,KAAKwmF,GAAkBloF,MAAMi1D,QAAU,OACvCvzD,KAAK0mF,GAAepoF,MAAMi1D,QAAU,QAIlB,GAAf/iD,EAAW1b,KAA2B,CACzCkL,KAAK8jF,GAAoBxlF,MAAMi1D,QAAU,GACzCvzD,KAAKioF,GAAe3pF,MAAMi1D,QAAU,GACpCvzD,KAAKmoF,GAAc7pF,MAAMi1D,QAAU,GACnCvzD,KAAKspF,GAAchrF,MAAMi1D,QAAU,GACnCvzD,KAAKslF,GAAmBhnF,MAAMi1D,QAAU,OACxCstB,GAAiB7gF,KAAK6jF,GAAkBrzE,EAAWlV,WACnDulF,GAAiB7gF,KAAKkoF,GAAqB13E,EAAWjV,cACtDyE,KAAKopF,GAAyByD,YAAYr8E,EAAWhV,mBACrDqlF,GAAiB7gF,KAAKqpF,GAAyB74E,EAAW/U,kBAC1DuE,KAAKqpF,GAAwB9S,cAAej4E,MAAMonE,MAASl1D,EAAWhV,kBAAoB,EAAK,GAAKuE,EAAYyH,cAChH,IAAK,IAAIrZ,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IAAK,CACtD,MAAMggG,EAAsBhgG,EAAIJ,EAAO0I,WAAW+Z,EAAWlV,WAAW5E,aACxEsJ,KAAKyqF,GAAct8F,GAAGmQ,MAAMonE,MAAQyoB,EAAYpuF,EAAYwH,YAAc,GAC1Es5E,GAAiB7gF,KAAK4qF,GAA0Bz8F,GAAIqiB,EAAW9U,UAAUvN,GAAGwN,WAC5EqE,KAAK0qF,GAA0Bv8F,GAAG0+F,YAAYr8E,EAAW9U,UAAUvN,GAAGwC,WACtEkwF,GAAiB7gF,KAAK2qF,GAAyBx8F,GAAIqiB,EAAW9U,UAAUvN,GAAGyN,UAC3E,MAAMwyF,GAAwBD,EAAY,SAAW,eAAiBhgG,EAAI,GAC1E6R,KAAK4qF,GAA0Bz8F,GAAGwtB,MAAQyyE,EAAe,aACzDpuF,KAAK0qF,GAA0Bv8F,GAAG8wD,MAAMtjC,MAAQyyE,GAAgBD,EAAY,UAAY,cACxFnuF,KAAK2qF,GAAyBx8F,GAAGwtB,MAAQyyE,EAAe,YACxDpuF,KAAK2qF,GAAyBx8F,GAAGooF,cAAej4E,MAAMonE,MAASl1D,EAAW9U,UAAUvN,GAAGwC,UAAY,EAAK,GAAKoP,EAAYyH,oBAI1HxH,KAAK8jF,GAAoBxlF,MAAMi1D,QAAU,OACzCvzD,KAAKioF,GAAe3pF,MAAMi1D,QAAU,OACpCvzD,KAAKmoF,GAAc7pF,MAAMi1D,QAAU,OACnCvzD,KAAKspF,GAAchrF,MAAMi1D,QAAU,OAGjB,GAAf/iD,EAAW1b,MACdkL,KAAKslF,GAAmBhnF,MAAMi1D,QAAU,OACxCvzD,KAAKunF,GAAkBjpF,MAAMi1D,QAAU,OACvCvzD,KAAKgoF,GAAsB1pF,MAAMi1D,QAAU,OAC3CvzD,KAAK4mF,GAAmBtoF,MAAMi1D,QAAU,QACf,GAAf/iD,EAAW1b,MACrBkL,KAAKunF,GAAkBjpF,MAAMi1D,QAAU,OACvCvzD,KAAK4mF,GAAmBtoF,MAAMi1D,QAAU,OACxCvzD,KAAKgoF,GAAsB1pF,MAAMi1D,QAAU,SAE3CvzD,KAAKunF,GAAkBjpF,MAAMi1D,QAAU,GAEpB,GAAf/iD,EAAW1b,MAAkD,GAAf0b,EAAW1b,MAA4C,GAAf0b,EAAW1b,KACpGkL,KAAK4mF,GAAmBtoF,MAAMi1D,QAAU,OAGxCvzD,KAAK4mF,GAAmBtoF,MAAMi1D,QAAU,GAEzCvzD,KAAKgoF,GAAsB1pF,MAAMi1D,QAAWvzD,KAAKurF,GAAuB,GAAK,aAI/E,IAAK,IAAIuC,EAAqB,EAAGA,EAAa//F,EAAOkI,OAAO7H,OAAQ0/F,IAAc,CACjF,MAAM9K,GAAmBj1F,EAAO4F,iCAAiC6c,EAAW1b,OAAQ/G,EAAOkI,OAAO63F,GAAYz3F,iBACxG+oD,EAAkBp/C,KAAK6mF,GAAarjC,SAASsqC,GAC/C9K,EACE5jC,EAAO2uC,aAAa,WACxB3uC,EAAOvhD,aAAa,SAAU,IAG/BuhD,EAAO5gD,gBAAgB,UAIzBwB,KAAK0pF,GAAyBprF,MAAMonE,MAAQ3lE,EAAYW,gBAAgBV,KAAKsmC,EAAKnmC,KAAMH,KAAKsmC,EAAKlmC,SAASa,YAE3GjB,KAAKimF,GAAoB4G,YAAYr8E,EAAW+B,cAChDvS,KAAKmmF,GAAuB0G,YAAYr8E,EAAWvV,iBACnD4lF,GAAiB7gF,KAAKqmF,GAAuB71E,EAAWtV,gBACxD2lF,GAAiB7gF,KAAKwlF,GAAmBh1E,EAAW3V,YACpDgmF,GAAiB7gF,KAAKgmF,GAAgBx1E,EAAW1V,SACjD+lF,GAAiB7gF,KAAKqnF,GAAgB72E,EAAWpV,SACjDylF,GAAiB7gF,KAAK8nF,GAAoBt3E,EAAWmC,aACrDkuE,GAAiB7gF,KAAK2mF,GAAiBn2E,EAAWrV,UAClD0lF,GAAiB7gF,KAAK6mF,GAAcr2E,EAAWzV,OAC/CiF,KAAK2kF,GAAmBjzF,MAAQ8e,EAAWoC,IAAM,GACjD5S,KAAKklF,GAAsBxzF,MAAQ8e,EAAW0C,OAAS,GACvDlT,KAAKmkF,GAAwB0I,YAAYr8E,EAAW3c,QACpDmM,KAAKokF,GAAgC1yF,MAAQ,GAAM8e,EAAiB,OACpExQ,KAAKwnF,GAAoBqF,YAAYj+F,KAAKmb,MAAgC,GAA1ByG,EAAWgC,eAC3DxS,KAAK4nF,GAAoBiF,YAAYr8E,EAAWkC,cAChD1S,KAAK0nF,GAAoBmF,YAAYr8E,EAAWiC,cAChDouE,GAAiB7gF,KAAK8nF,GAAoBt3E,EAAWmC,aACrD3S,KAAKgnF,GAAqB6F,YAAYr8E,EAAWsC,eACjD9S,KAAK8kF,GAAgB+H,YAAYr8E,EAAWqC,UAC5C7S,KAAK4nF,GAAoB3oC,MAAMtjC,MAAQ,GAAKnL,EAAWkC,aACvD1S,KAAKwnF,GAAoBvoC,MAAMtjC,MAAQ,GAAKnL,EAAWgC,aACvDxS,KAAK0nF,GAAoBzoC,MAAMtjC,MAAQ,GAAKnL,EAAWiC,aACvDzS,KAAK8kF,GAAgB7lC,MAAMtjC,MAAQ,GAAKnL,EAAWqC,SACnD7S,KAAKgnF,GAAqB/nC,MAAMtjC,MAAQ,IAAMliB,EAAa1L,EAAOoH,cAAcqb,EAAWsC,gBAExE,GAAftC,EAAW1b,OACdkL,KAAK6oF,GAAsB7G,eAEvBhiF,KAAK0gD,kBAAkB+C,IAC1BzjD,KAAK0gD,OAAOiD,iBAAiBnB,UAibhC,GAFAxiD,KAAKkkF,GAAqB5lF,MAAMi1D,QAAWvzD,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,EAAK,GAAK,OAC5F1b,KAAKkkF,GAAqB5lF,MAAMisC,WAAyB,MAAXzuB,EAAmB,SAAW,GACxE9b,KAAKikF,GAAkBzgC,SAASp1D,QAAU4R,KAAKsmC,EAAKnmC,KAAKub,sBAAuB,CACnF,KAAO1b,KAAKikF,GAAkB3kF,YAAYU,KAAKikF,GAAkBl3E,YAAY/M,KAAKikF,GAAkB3kF,YACpG,MAAMmuF,EAA2B,GACjC,IAAK,IAAIt/F,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKnmC,KAAKub,sBAAuBvtB,IACjEs/F,EAAej/F,KAAKL,EAAI,GAEzB+xF,GAAalgF,KAAKikF,GAAmBwJ,GAGtCztF,KAAK0pF,GAAyBprF,MAAMonE,MAAQ3lE,EAAYW,gBAAgBV,KAAKsmC,EAAKnmC,KAAMH,KAAKsmC,EAAKlmC,SAASa,YAE3GjB,KAAKimF,GAAoB4G,YAAYr8E,EAAW+B,cAChDvS,KAAKmmF,GAAuB0G,YAAYr8E,EAAWvV,iBACnD4lF,GAAiB7gF,KAAKqmF,GAAuB71E,EAAWtV,gBACxD2lF,GAAiB7gF,KAAKwlF,GAAmBh1E,EAAW3V,YACpDgmF,GAAiB7gF,KAAKgmF,GAAgBx1E,EAAW1V,SACjD+lF,GAAiB7gF,KAAKqnF,GAAgB72E,EAAWpV,SACjDylF,GAAiB7gF,KAAK8nF,GAAoBt3E,EAAWmC,aACrDkuE,GAAiB7gF,KAAK2mF,GAAiBn2E,EAAWrV,UAClD0lF,GAAiB7gF,KAAK6mF,GAAcr2E,EAAWzV,OAC/CiF,KAAKmkF,GAAwB0I,YAAYr8E,EAAW3c,QACpDmM,KAAKukF,GAAWsI,YAAYr8E,EAAWoC,KACvC5S,KAAKilF,GAAc4H,YAAYr8E,EAAW0C,QAC1ClT,KAAKknF,GAAe38B,UAAU/5C,EAAWuC,eACzC/S,KAAK2lF,GAAsBp7B,UAAU/5C,EAAWwC,kBAChDhT,KAAK6lF,GAAwBt7B,UAAU/5C,EAAWyC,oBAClD4tE,GAAiB7gF,KAAKikF,GAAmBlnE,GAEzC/c,KAAK2iF,GAAckK,YAAY7sF,KAAKsmC,EAAKzyC,QAIrC84F,GAA8B,MAAjBZ,GAAsD,GAA7BA,EAAcn/E,aACvD5M,KAAK+mE,eAGN/mE,KAAKquF,GAAWruF,KAAKsmC,EAAKoa,QAEtB1gD,KAAKsmC,EAAKu+B,aAAe7kE,KAAKsmC,EAAKzN,MAAM7L,SAC5ChtB,KAAKsmC,EAAKzN,MAAMy1D,QAAQtuF,KAAKsmC,EAAKvqB,MAkB5B/b,KAAAuuF,GAAc/lD,IACrBxoC,KAAKsiF,GAAYkM,QAAQhmD,GACJ,IAAjBA,EAAM8X,QACTtgD,KAAKmiF,GAAe9Y,aAAc,EAET,IAAjB7gC,EAAM8X,UACdtgD,KAAKmiF,GAAe7Y,WAAY,IAI1BtpE,KAAAyuF,GAAkCjmD,IAGzC,OAAQA,EAAM8X,SACb,KAAK,EACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACL,KAAK,GACJ9X,EAAMia,oBAKDziD,KAAAogD,GAAmB5X,IAC1B,GAAIxoC,KAAK0gD,OAQR,OAPI1gD,KAAK0gD,kBAAkB+C,IAAoBzjD,KAAK0gD,kBAAkBkhB,KACrE5hE,KAAK0gD,OAAOuD,eAAezb,QAEP,IAAjBA,EAAM8X,SAETtgD,KAAKsmC,EAAKqF,QAMZ,GAAI5uC,SAASgvF,eAAiB/rF,KAAKmpF,GAAmBlqC,OAASj/C,KAAKmiF,GAAetX,iBAAmB9tE,SAASgvF,eAAiB/rF,KAAKsiF,GAAY3c,GAAkB1mB,MAE7I,IAAjBzW,EAAM8X,SAAkC,IAAjB9X,EAAM8X,UAChCtgD,KAAKqqF,UAAUtpC,QACf/gD,KAAKmiF,GAAerR,oBAAqC,IAAjBtoC,EAAM8X,eAOhD,GAAIvjD,SAASgvF,eAAiB/rF,KAAK2kF,IAAsB5nF,SAASgvF,eAAiB/rF,KAAKklF,IAAyBnoF,SAASgvF,eAAiB/rF,KAAKokF,GAUhJ,OAAQ57C,EAAM8X,SACb,KAAK,GACJ,IAAIvG,GAAuB/5C,KAAKsmC,EAAM,EAAG,GACzCtmC,KAAKsmC,EAAK0T,UAAUC,oBACpB,MACD,KAAK,GACJj6C,KAAKmiF,GAAe7Y,WAAY,EAChC,MACD,KAAK,GACJtpE,KAAKmiF,GAAe9Y,aAAc,EAClC,MACD,KAAK,GAEA7gC,EAAMkmD,SAAWlmD,EAAM6lC,UACrBruE,KAAKsmC,EAAKzN,MAAM7L,SACpBhtB,KAAK6jD,KAEN7jD,KAAKqiF,GAAasM,sBAClB3uF,KAAKmiF,GAAewM,uBAGpB3uF,KAAK6jD,KAENrb,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,SACTruE,KAAKsmC,EAAKoF,OAEV1rC,KAAKsmC,EAAKqF,OAEXnD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAKoF,OACVlD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAUoB,OACpB,IAAIrB,GAAuB/5C,KAAKsmC,EAAM,EAAG,GACzCtmC,KAAKsmC,EAAK0T,UAAUC,oBAEpBzR,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAUgkC,aACpBx1C,EAAMQ,iBACN,MACD,KAAK,EACJhpC,KAAKsmC,EAAK0T,UAAUkkC,aACpBl+E,KAAKi+E,GAAc51C,kBACnBG,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,SACTruE,KAAKsmC,EAAK0T,UAAU40C,gBAEpB5uF,KAAKsmC,EAAK0T,UAAU60C,YAErBrmD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAU80C,oBACpBtmD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAKzN,MAAMk2D,WAChB/uF,KAAKi+E,GAAc51C,kBACfroC,KAAKsmC,EAAKu+B,YACb,IAAIjzB,GAAiB5xC,KAAKsmC,EAAMtmC,KAAKsmC,EAAKlmC,QAASxR,KAAKsU,MAAMlD,KAAKsmC,EAAKzN,MAAMvxB,WAE/EkhC,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAKzN,MAAMm2D,iBAAiBhvF,KAAKsmC,EAAKvqB,KAC3C/b,KAAKi+E,GAAc51C,kBACnB,IAAIuJ,GAAiB5xC,KAAKsmC,EAAMtmC,KAAKsmC,EAAKlmC,QAASxR,KAAKsU,MAAMlD,KAAKsmC,EAAKzN,MAAMvxB,WAC9EkhC,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,UACTruE,KAAKgkF,GAAY,mBAKlB,MACD,KAAK,GACAhkF,KAAKsmC,EAAK+gC,sBACbrnE,KAAKsmC,EAAK0T,UAAUi1C,aAAazmD,EAAM6lC,UACvC7lC,EAAMQ,kBAEP,MACD,KAAK,GAIJ,MAAMwX,EAAqB,IAAIrV,GAE/B,GAAI3C,EAAM6lC,UAAY7lC,EAAMkmD,QAAS,CACpC,IAAIQ,EAAoB,EACxB,KAAOA,EAAYlvF,KAAKsmC,EAAKnmC,KAAKqb,oBAAsBxb,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASsX,SAASw3E,GAAW3+E,MAAMniB,OAAS,GACrI8gG,IAEDA,IAGIA,GAAanhG,EAAOgF,cAEnBm8F,EAAYlvF,KAAKsmC,EAAKnmC,KAAKqb,oBAG9BglC,EAAM/S,OAAO,IAAIoI,GAAyB71C,KAAKsmC,EAAM4oD,IAItD1uC,EAAM/S,OAAO,IAAIyC,GAAqBlwC,KAAKsmC,EAAM4oD,EAAWlvF,KAAKsmC,EAAKvqB,IAAK/b,KAAKsmC,EAAKlmC,QAAS,EAAG,SAK9F,CACJ,IAAI+uF,EAAqB,EACzB,MAA+E,GAAxEnvF,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASuX,KAAKhD,QAAQw6E,IAC3DA,GAAcnvF,KAAKsmC,EAAKnmC,KAAKqb,oBAChC2zE,IAGGA,GAAcphG,EAAOgF,cAEpBo8F,EAAanvF,KAAKsmC,EAAKnmC,KAAKqb,oBAG/BglC,EAAM/S,OAAO,IAAIoI,GAAyB71C,KAAKsmC,EAAM6oD,IAItD3uC,EAAM/S,OAAO,IAAIyC,GAAqBlwC,KAAKsmC,EAAM6oD,EAAYnvF,KAAKsmC,EAAKvqB,IAAK/b,KAAKsmC,EAAKlmC,QAAS,EAAG,KAMpGJ,KAAKsmC,EAAKqa,OAAOH,GAEjBhY,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKgkF,GAAY,mBACjB,MACD,KAAK,GACAhkF,KAAKsmC,EAAK+gC,sBACT7+B,EAAM6lC,SACTruE,KAAKsmC,EAAK0T,UAAUi1C,cAAa,GAEjCjvF,KAAKsmC,EAAK0T,UAAUo1C,eAErB5mD,EAAMQ,kBAEP,MACD,KAAK,GACAR,EAAM6lC,SACTruE,KAAKsmC,EAAK0T,UAAUq1C,eAEpBrvF,KAAKsmC,EAAK0T,UAAUs1C,aAErB9mD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKgkF,GAAY,qBACjB,MACD,KAAK,GACJ,GAAIx7C,EAAM6lC,SAAU,CACnB,MACMl6D,EADyBnU,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBACvDxrB,sBAClC/O,EAAyB,cACzBA,EAAsB,WACtBA,EAAyB,OAChCnU,KAAKuvF,GAAqBnwE,KAAK8yC,UAAU/9C,IAE1Cq0B,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,SACTruE,KAAKwvF,KAELxvF,KAAKyvF,KAGNjnD,EAAMQ,iBAEN,MACD,KAAK,GACJhpC,KAAKgkF,GAAY,gBACjB,MACD,KAAK,IACJhkF,KAAKsmC,EAAKzN,MAAM62D,UACZ1vF,KAAKsmC,EAAKu+B,YACb,IAAIjzB,GAAiB5xC,KAAKsmC,EAAMtmC,KAAKsmC,EAAKlmC,QAASxR,KAAKsU,MAAMlD,KAAKsmC,EAAKzN,MAAMvxB,WAE/EtH,KAAKi+E,GAAc51C,kBACnBG,EAAMQ,iBACN,MACD,KAAK,IACJhpC,KAAKsmC,EAAKzN,MAAMozB,UACZjsD,KAAKsmC,EAAKu+B,YACb,IAAIjzB,GAAiB5xC,KAAKsmC,EAAMtmC,KAAKsmC,EAAKlmC,QAASxR,KAAKsU,MAAMlD,KAAKsmC,EAAKzN,MAAMvxB,WAE/EtH,KAAKi+E,GAAc51C,kBACnBG,EAAMQ,iBACN,MACD,KAAK,IACL,KAAK,IACJhpC,KAAKsmC,EAAK0T,UAAU2C,WAAU,EAAOnU,EAAM6lC,UAAY7lC,EAAMkmD,SAC7DlmD,EAAMQ,iBACN,MACD,KAAK,IACL,KAAK,GACL,KAAK,IACJhpC,KAAKsmC,EAAK0T,UAAU2C,WAAU,EAAMnU,EAAM6lC,UAAY7lC,EAAMkmD,SAC5DlmD,EAAMQ,iBACN,MACD,KAAK,GACJ,GAAIR,EAAMkmD,QAAS,CAElB,GAAyB,GAArB1uF,KAAKsmC,EAAKlmC,SAAgBJ,KAAKsmC,EAAKlmC,SAAWJ,KAAKsmC,EAAKnmC,KAAKe,mBAAqBlB,KAAKsmC,EAAKlmC,SAAWJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAC7J,MAEDpB,KAAKsmC,EAAKqa,OAAO,IAAI/P,GAAmB5wC,KAAKsmC,EAAMtmC,KAAKsmC,EAAKlmC,QAAU,EAAGJ,KAAKsmC,EAAKlmC,UAAU,GAC9FJ,KAAKsmC,EAAK0T,UAAU6kC,cAAe7+E,KAAKsmC,EAAKlmC,QAAU,EAAIJ,KAAKsmC,EAAKvqB,UAE7DysB,EAAM6lC,UACdruE,KAAKsmC,EAAK0T,UAAUqC,eAAiBztD,KAAKsgB,IAAI,EAAGlP,KAAKsmC,EAAK0T,UAAUqC,eAAiB,GACtFr8C,KAAKsmC,EAAK0T,UAAU4kC,qBAEpB5+E,KAAKsmC,EAAK0T,UAAU6kC,eAAe7+E,KAAKsmC,EAAKlmC,QAAU,EAAIJ,KAAKsmC,EAAKnmC,KAAK0b,mBAAqB7b,KAAKsmC,EAAKnmC,KAAK0b,kBAAmB7b,KAAKsmC,EAAKvqB,KAC3I/b,KAAKsmC,EAAK0T,UAAUC,qBAErBzR,EAAMQ,iBACN,MACD,KAAK,GACJ,GAAIR,EAAMkmD,QAAS,CAElB,GAAI1uF,KAAKsmC,EAAKlmC,SAAWJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoB,GAAKlB,KAAKsmC,EAAKlmC,SAAWJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAoB,GAAKpB,KAAKsmC,EAAKlmC,SAAWJ,KAAKsmC,EAAKnmC,KAAK0b,kBAAoB,EACxN,MAED7b,KAAKsmC,EAAKqa,OAAO,IAAI/P,GAAmB5wC,KAAKsmC,EAAMtmC,KAAKsmC,EAAKlmC,QAASJ,KAAKsmC,EAAKlmC,QAAU,IAAI,GAC9FJ,KAAKsmC,EAAK0T,UAAU6kC,cAAe7+E,KAAKsmC,EAAKlmC,QAAU,EAAIJ,KAAKsmC,EAAKvqB,UAE7DysB,EAAM6lC,UACdruE,KAAKsmC,EAAK0T,UAAUqC,eAAiBztD,KAAKyB,IAAI2P,KAAKsmC,EAAKnmC,KAAK0b,kBAAoB,EAAG7b,KAAKsmC,EAAK0T,UAAUqC,eAAiB,GACzHr8C,KAAKsmC,EAAK0T,UAAU4kC,qBAEpB5+E,KAAKsmC,EAAK0T,UAAU6kC,eAAe7+E,KAAKsmC,EAAKlmC,QAAU,GAAKJ,KAAKsmC,EAAKnmC,KAAK0b,kBAAmB7b,KAAKsmC,EAAKvqB,KACxG/b,KAAKsmC,EAAK0T,UAAUC,qBAErBzR,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,UACTruE,KAAKsmC,EAAK0T,UAAUmC,eAAiBvtD,KAAKsgB,IAAI,EAAGlP,KAAKsmC,EAAK0T,UAAUmC,eAAiB,GACtFn8C,KAAKsmC,EAAK0T,UAAU21C,oBACpB3vF,KAAKsmC,EAAK0T,UAAU4kC,qBAEpB5+E,KAAKsmC,EAAK0T,UAAU6kC,cAAc7+E,KAAKsmC,EAAKlmC,SAAUJ,KAAKsmC,EAAKvqB,IAAM/b,KAAKsmC,EAAKnmC,KAAKob,SAAW,GAAKvb,KAAKsmC,EAAKnmC,KAAKob,UACpHvb,KAAKsmC,EAAK0T,UAAUC,qBAErBzR,EAAMQ,iBACN,MACD,KAAK,GACAR,EAAM6lC,UACTruE,KAAKsmC,EAAK0T,UAAUmC,eAAiBvtD,KAAKyB,IAAI2P,KAAKsmC,EAAKnmC,KAAKob,SAAW,EAAGvb,KAAKsmC,EAAK0T,UAAUmC,eAAiB,GAChHn8C,KAAKsmC,EAAK0T,UAAU21C,oBACpB3vF,KAAKsmC,EAAK0T,UAAU4kC,qBAEpB5+E,KAAKsmC,EAAK0T,UAAU6kC,cAAc7+E,KAAKsmC,EAAKlmC,SAAUJ,KAAKsmC,EAAKvqB,IAAM,GAAK/b,KAAKsmC,EAAKnmC,KAAKob,UAC1Fvb,KAAKsmC,EAAK0T,UAAUC,qBAErBzR,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAUn7B,OAAS,GAC7B7e,KAAKsmC,EAAK0T,UAAU41C,UAAU,KAAK,GACnC,MACD,KAAK,GACJ5vF,KAAKsmC,EAAK0T,UAAU41C,UAAU,IAAKpnD,EAAM6lC,UAAY7lC,EAAMkmD,SAC3DlmD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAU41C,UAAU,IAAKpnD,EAAM6lC,UAAY7lC,EAAMkmD,SAC3DlmD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAU41C,UAAU,IAAKpnD,EAAM6lC,UAAY7lC,EAAMkmD,SAC3DlmD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAU41C,UAAU,IAAKpnD,EAAM6lC,UAAY7lC,EAAMkmD,SAC3DlmD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAU41C,UAAU,IAAKpnD,EAAM6lC,UAAY7lC,EAAMkmD,SAC3DlmD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAU41C,UAAU,IAAKpnD,EAAM6lC,UAAY7lC,EAAMkmD,SAC3DlmD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAU41C,UAAU,IAAKpnD,EAAM6lC,UAAY7lC,EAAMkmD,SAC3DlmD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAU41C,UAAU,IAAKpnD,EAAM6lC,UAAY7lC,EAAMkmD,SAC3DlmD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAU41C,UAAU,IAAKpnD,EAAM6lC,UAAY7lC,EAAMkmD,SAC3DlmD,EAAMQ,iBACN,MACD,KAAK,GACJhpC,KAAKsmC,EAAK0T,UAAU41C,UAAU,IAAKpnD,EAAM6lC,UAAY7lC,EAAMkmD,SAC3DlmD,EAAMQ,iBACN,MACD,QACChpC,KAAKsmC,EAAK0T,UAAUn7B,OAAS,GAC7B7e,KAAKsmC,EAAK0T,UAAU61C,iBAAmB,QA9UnB,IAAjBrnD,EAAM8X,SAAkC,IAAjB9X,EAAM8X,SAChCtgD,KAAKqqF,UAAUtpC,SAuWV/gD,KAAA8vF,GAAsB,KAC7B9vF,KAAKsmC,EAAKzN,MAAM62D,UAChB1vF,KAAKi+E,GAAc51C,mBAGZroC,KAAA+vF,GAAsB,KAC7B/vF,KAAKsmC,EAAKzN,MAAMozB,UAChBjsD,KAAKi+E,GAAc51C,mBAGZroC,KAAA6jD,GAAc,KACjB7jD,KAAKsmC,EAAKzN,MAAM7L,QACnBhtB,KAAK8jD,MAEL9jD,KAAKsmC,EAAKzN,MAAM5I,YAChBjwB,KAAKgkD,OAyBAhkD,KAAAgwF,GAAW,KAEjBhwF,KAAKiwF,KAEDjwF,KAAKsmC,EAAK2lD,kBACbjsF,KAAKsiE,KAGNtiE,KAAKi+E,GAAc51C,kBAEnB5nB,OAAO+hD,sBAAsBxiE,KAAKgwF,KAG5BhwF,KAAAsiE,GAAgB,KACtBtiE,KAAKmiE,yBACDniE,KAAKmiE,wBAA0B,IAClCniE,KAAKoiE,sBAAwB,KAE1BpiE,KAAKsmC,EAAKnmC,KAAKqY,aAAexY,KAAKoiE,uBACtCpiE,KAAKoiE,qBAAuBpiE,KAAKsmC,EAAKnmC,KAAKqY,aAC3CxY,KAAKmiE,uBAAyB,IAG3BniE,KAAKsmC,EAAKnmC,KAAKqY,cAAgBxY,KAAK0rF,mBACvC1rF,KAAK0rF,iBAAmB1rF,KAAKsmC,EAAKnmC,KAAKqY,aACvCxY,KAAKkwF,GAAelwF,KAAKsmC,EAAKnmC,KAAKqY,aAAcxY,KAAKoiE,wBAShDpiE,KAAAmwF,GAAmB,KAC1BnwF,KAAKsmC,EAAK8pD,UAAU75D,OAAOv2B,KAAK2iF,GAAc1jC,MAAMvtD,SAgC7CsO,KAAAqwF,GAAgB,KACvBrwF,KAAKsmC,EAAKqa,OAAO,IAAI1H,GAAYj5C,KAAKsmC,GAAO,EAAwC,EAArCkpB,SAASxvD,KAAKwjF,GAAc9xF,UAGrEsO,KAAAswF,GAAgB,KACvB,GAAIvtC,MAAuB/iD,KAAKmjF,GAAazxF,OAAQ,CACpD,OAAQsO,KAAKmjF,GAAazxF,OACzB,IAAK,aACJsO,KAAKsmC,EAAK0T,UAAUu2C,aAGtBvwF,KAAKsmC,EAAKwD,SAASC,eAEnB/pC,KAAKsmC,EAAKqa,OAAO,IAAIzH,GAAYl5C,KAAKsmC,EAAMtmC,KAAKmjF,GAAanc,iBAIxDhnE,KAAAwwF,GAAc,KACrB,GAAIztC,MAAuB/iD,KAAKqjF,GAAW3xF,OAAQ,CAClD,OAAQsO,KAAKqjF,GAAW3xF,OACvB,IAAK,YACJsO,KAAKsmC,EAAKqa,OAAO,IAAIxH,GAAgBn5C,KAAKsmC,IAG5CtmC,KAAKsmC,EAAKwD,SAASC,eAEnB/pC,KAAKsmC,EAAKqa,OAAO,IAAItM,GAAUr0C,KAAKsmC,EAAMv4C,EAAOsE,KAAKjE,OAAS,EAAI4R,KAAKqjF,GAAWrc,iBAI7EhnE,KAAAywF,GAAiB,KACxB,GAAI1tC,MAAuB/iD,KAAK0jF,GAAchyF,OAAQ,CACrD,OAAQsO,KAAK0jF,GAAchyF,OAC1B,IAAK,cACJsO,KAAKsmC,EAAK0T,UAAU02C,cAGtB1wF,KAAKsmC,EAAKwD,SAASC,eAEnB/pC,KAAKsmC,EAAKqa,OAAO,IAAI/L,GAAa50C,KAAKsmC,EAAMtmC,KAAK0jF,GAAc1c,iBAI3DhnE,KAAA2wF,GAAW,KAEjB,IAAIC,EAAU5wF,KACd8gD,YAAW,WAAc8vC,EAAQvG,UAAUtpC,UAAY,KAGjD/gD,KAAA6wF,GAAwB,KAC9B7wF,KAAK8wF,GAAW/P,EAAE,sBAAsB5xE,MAAQ,KAG1CnP,KAAA+wF,GAAqB,KAC3B/wF,KAAK8wF,GAAW/P,EAAE,qBAAqB5xE,MAAQ,KAyBxCnP,KAAAgxF,GAAuB,KAC9BhxF,KAAKsmC,EAAKqa,OAAO,IAAIlN,GAAmBzzC,KAAKsmC,EAAMtmC,KAAKkoF,GAAoBlhB,iBAGrEhnE,KAAAixF,GAA2B,KAClCjxF,KAAKsmC,EAAKqa,OAAO,IAAIjN,GAAuB1zC,KAAKsmC,EAAMtmC,KAAKqpF,GAAwBriB,iBAG7EhnE,KAAAkxF,GAAoB,KAC3BlxF,KAAKsmC,EAAKqa,OAAO,IAAInN,GAAgBxzC,KAAKsmC,EAAMtmC,KAAK6jF,GAAiB7c,iBAG/DhnE,KAAAmxF,GAAqB,KAC5BnxF,KAAKsmC,EAAK0T,UAAUo3C,cAAcpxF,KAAKikF,GAAkBjd,eAGrDhnE,KAAKsmC,EAAKlmC,SAAWJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,mBAC1EpB,KAAK6nE,GAAOc,eAIN3oE,KAAAqxF,GAAsBx9E,IAC7B7T,KAAKsmC,EAAK0T,UAAUs3C,cAAcz9E,EAAK7T,KAAKstF,GAAiBz5E,GAAKmzD,eAGlEhnE,KAAK6nE,GAAOc,eAGL3oE,KAAAuxF,GAAyB19E,IAChC7T,KAAKsmC,EAAK0T,UAAUw3C,iBAAiB39E,EAAK7T,KAAKwtF,GAAoB35E,GAAKmzD,eAGxEhnE,KAAK6nE,GAAOc,eAGL3oE,KAAA6tF,GAAsBh6E,IAG7B7T,KAAKsmC,EAAK0T,UAAUy3C,cAAc59E,EAAK7T,KAAK0tF,GAAa75E,GAAK2vC,SAASxjD,KAAK0tF,GAAa75E,GAAKmzD,eAAe5gE,aAS7GpG,KAAK6nE,GAAOc,eAQL3oE,KAAA0xF,GAAmB,KAC1B1xF,KAAKsmC,EAAKqa,OAAO,IAAI/B,GAAe5+C,KAAKsmC,EAAMtmC,KAAKolF,GAAgBpe,iBAG7DhnE,KAAA2xF,GAAoB,KAC3B3xF,KAAKsmC,EAAKqa,OAAO,IAAI9B,GAAgB7+C,KAAKsmC,EAAMtmC,KAAKqlF,GAAiBre,iBAG/DhnE,KAAA4xF,GAAyB,KAChC5xF,KAAKsmC,EAAKqa,OAAO,IAAIpN,GAAqBvzC,KAAKsmC,EAAMtmC,KAAKqmF,GAAsBrf,iBAGzEhnE,KAAA6xF,GAAwB,KAC/B7xF,KAAKsmC,EAAKqa,OAAO,IAAIvN,GAAoBpzC,KAAKsmC,EAAMtmC,KAAKumF,GAAqBvf,iBAGvEhnE,KAAA8xF,GAAqB,KAC5B9xF,KAAKsmC,EAAKqa,OAAO,IAAI3Q,GAAiBhwC,KAAKsmC,EAAMtmC,KAAKwlF,GAAkBxe,iBAGjEhnE,KAAA+xF,GAAkB,KACzB/xF,KAAKsmC,EAAKqa,OAAO,IAAI1Q,GAAcjwC,KAAKsmC,EAAMtmC,KAAKgmF,GAAehf,iBAG3DhnE,KAAAgyF,GAAkB,KACzBhyF,KAAKsmC,EAAKqa,OAAO,IAAI1O,GAAcjyC,KAAKsmC,EAAMtmC,KAAKqnF,GAAergB,iBAG3DhnE,KAAAiyF,GAAsB,KAC7BjyF,KAAKsmC,EAAKqa,OAAO,IAAInO,GAAkBxyC,KAAKsmC,EAAMtmC,KAAK8nF,GAAmB9gB,iBAGnEhnE,KAAAkyF,GAAmB,KAC1BlyF,KAAKsmC,EAAKqa,OAAO,IAAI5O,GAAe/xC,KAAKsmC,EAAMtmC,KAAK2mF,GAAgB3f,iBAG7DhnE,KAAAmyF,GAAgB,KACvBnyF,KAAKsmC,EAAKqa,OAAO,IAAI3O,GAAYhyC,KAAKsmC,EAAMtmC,KAAK6mF,GAAa7f,iBAGvDhnE,KAAAoyF,GAAoB5pD,IAC3B,OAAQxoC,KAAK+iF,GAAUrxF,OACtB,IAAK,MACJsO,KAAKsmC,EAAK6uB,gBACV,IAAK,MAAM/0D,KAAWJ,KAAKsmC,EAAKnmC,KAAK4X,SAAU3X,EAAQwX,OAAQ,EAC/D5X,KAAKsmC,EAAKqa,OAAO,IAAI9G,GAAW75C,KAAKsmC,EAAM,KAAK,GAAO,GACvD,MACD,IAAK,SACJtmC,KAAKgkF,GAAY,UACjB,MACD,IAAK,SACJhkF,KAAKgkF,GAAY,UACjB,MACD,IAAK,UACJhkF,KAAKuvF,GAAqB,IAAI5mC,IAAI,IAAM3oD,KAAKsmC,EAAKnmC,KAAKkyF,iBAAkBnpC,SAASJ,MAAMA,MACxF,MACD,IAAK,WACEvvD,UAAW+4F,MAAM,CAAE5pC,IAAK,IAAIC,IAAI,IAAM3oD,KAAKsmC,EAAKnmC,KAAKkyF,iBAAkBnpC,SAASJ,MAAMA,OAC5F,MACD,IAAK,aACJroC,OAAOwoC,KAAK,0CAA4C7sC,mBAAmB,IAAIusC,IAAI,IAAM3oD,KAAKsmC,EAAKnmC,KAAKkyF,iBAAkBnpC,SAASJ,MAAMA,OACzI,MACD,IAAK,aACJI,SAASJ,KAAO,gBAAkB9oD,KAAKsmC,EAAKnmC,KAAKkyF,iBACjD,MACD,IAAK,YACJryF,KAAKuvF,GAAqB,8DAA8D,IAAI5mC,IAAI,gBAAkB3oD,KAAKsmC,EAAKnmC,KAAKkyF,iBAAkBnpC,SAASJ,MAAMA,mBAClK,MACD,IAAK,eACJ9oD,KAAKgkF,GAAY,gBAGnBhkF,KAAK+iF,GAAU/b,cAAgB,GAGxBhnE,KAAAuyF,GAAoB/pD,IAC3B,OAAQxoC,KAAKijF,GAAUvxF,OACtB,IAAK,OACJsO,KAAKsmC,EAAKqF,OACV,MACD,IAAK,OACJ3rC,KAAKsmC,EAAKoF,OACV,MACD,IAAK,OACJ1rC,KAAKsmC,EAAK0T,UAAUoB,OACpB,MACD,IAAK,aACJp7C,KAAKsmC,EAAK0T,UAAUgkC,aACpB,MACD,IAAK,aACJh+E,KAAKsmC,EAAK0T,UAAUkkC,aACpB,MACD,IAAK,aACJl+E,KAAKsmC,EAAK0T,UAAUs1C,aACpB,MACD,IAAK,eACJtvF,KAAKsmC,EAAK0T,UAAUq1C,eACpB,MACD,IAAK,cACJrvF,KAAKsmC,EAAK0T,UAAU2C,WAAU,GAAM,GACpC,MACD,IAAK,gBACJ38C,KAAKsmC,EAAK0T,UAAU2C,WAAU,GAAO,GACrC,MACD,IAAK,YACJ38C,KAAKsmC,EAAK0T,UAAU60C,YACpB,MACD,IAAK,gBACJ7uF,KAAKsmC,EAAK0T,UAAU40C,gBACpB,MACD,IAAK,oBACJ5uF,KAAKsmC,EAAK0T,UAAU80C,oBACpB,MACD,IAAK,eACJ9uF,KAAKgkF,GAAY,gBACjB,MAOD,IAAK,oBACJhkF,KAAKgkF,GAAY,qBACjB,MACD,IAAK,kBACJhkF,KAAKgkF,GAAY,mBACjB,MACD,IAAK,kBACJhkF,KAAKgkF,GAAY,mBAGnBhkF,KAAKijF,GAAUjc,cAAgB,GAGxBhnE,KAAAwyF,GAAuBhqD,IAC9B,OAAQxoC,KAAKkjF,GAAaxxF,OACzB,IAAK,WACJsO,KAAKsmC,EAAKmmD,UAAYzsF,KAAKsmC,EAAKmmD,SAChC,MACD,IAAK,aACJzsF,KAAKsmC,EAAKu+B,YAAc7kE,KAAKsmC,EAAKu+B,WAClC,MACD,IAAK,oBACJ7kE,KAAKsmC,EAAKmoC,mBAAqBzuE,KAAKsmC,EAAKmoC,kBACzC,MACD,IAAK,cACJzuE,KAAKsmC,EAAKmvC,aAAez1E,KAAKsmC,EAAKmvC,YACnC,MACD,IAAK,YACJz1E,KAAKsmC,EAAKgtB,WAAatzD,KAAKsmC,EAAKgtB,UACjC,MACD,IAAK,eACJtzD,KAAKsmC,EAAKgtC,cAAgBtzE,KAAKsmC,EAAKgtC,aACpC,MACD,IAAK,gBACJtzE,KAAKsmC,EAAK0lD,eAAiBhsF,KAAKsmC,EAAK0lD,cACrC,MACD,IAAK,oBACJhsF,KAAKsmC,EAAKisC,mBAAqBvyE,KAAKsmC,EAAKisC,kBACzC,MACD,IAAK,sBACJvyE,KAAKsmC,EAAK+gC,qBAAuBrnE,KAAKsmC,EAAK+gC,oBAC3C,IAAK,MAAMjnE,KAAWJ,KAAKsmC,EAAKnmC,KAAK4X,SAAU3X,EAAQwX,OAAQ,EAC/D,MACD,IAAK,oBACJ5X,KAAKsmC,EAAKmsD,0BACV,MACD,IAAK,mBACJzyF,KAAKsmC,EAAK2lD,kBAAoBjsF,KAAKsmC,EAAK2lD,iBACxC,MACD,IAAK,aACJjsF,KAAKgkF,GAAY,UACjB,MACD,IAAK,aACJhkF,KAAKgkF,GAAY,SAGnBhkF,KAAKkjF,GAAalc,cAAgB,EAClChnE,KAAKsmC,EAAKwD,SAASC,UACnB/pC,KAAKsmC,EAAKosD,mBAGH1yF,KAAA2yF,GAA4BnqD,IAGnC,IAAIoqD,EAAgC,IAAInkG,aAAa,IACjDO,EAAgBgR,KAAK8oF,GAAsB9hB,cAAgB,EAC3D6rB,EAAmBt8D,OAAOu8D,UAC1B3kF,EAAmBooB,OAAO0H,UAC1B80D,EAAqB,EACrBC,GAAqBjlG,EAAO6F,UAAU5E,GAAOI,QAAQhB,OAAS,GAAK,GAEvE,IAAK,IAAID,EAAY,EAAGA,EAAI,GAAIA,IAE/BykG,EAAgBzkG,IAAMJ,EAAO6F,UAAU5E,GAAOI,QAAQR,KAAKsU,MAAM6vF,IAAehlG,EAAO6F,UAAU5E,GAAOI,QAASR,KAAKsU,MAAM6vF,GAAc,IAAOC,EAE7IJ,EAAgBzkG,GAAKggB,IACxBA,EAAWykF,EAAgBzkG,IAExBykG,EAAgBzkG,GAAK0kG,IACxBA,EAAWD,EAAgBzkG,IAG5B4kG,GAAcC,EAGf,IAAK,IAAI7kG,EAAY,EAAGA,EAAI,GAAIA,IAE/BykG,EAAgBzkG,IAAMggB,EAEtBykF,EAAgBzkG,IAAO0kG,EAAW1kF,EAElCykF,EAAgBzkG,IAAM,GAEtBykG,EAAgBzkG,IAAM,GAEtBykG,EAAgBzkG,GAAKS,KAAKkgB,KAAK8jF,EAAgBzkG,IAG/C6R,KAAK6oF,GAAsBr6C,SAASrgD,GAAKykG,EAAgBzkG,GAK1D6R,KAAKsmC,EAAKqa,OAAO,IAAIpS,GAAiBvuC,KAAKsmC,EAAMssD,IACjD5yF,KAAKsmC,EAAKqa,OAAO,IAAI7C,GAAa99C,KAAKsmC,GAAOtmC,KAAKmkF,GAAwBllC,MAAMvtD,OAAQ3D,EAAO0H,YAAc,EAAI7G,KAAKmb,MAAMnb,KAAKe,KAAK5B,EAAO6F,UAAU5E,GAAO6E,QAAU9F,EAAO0H,YAAc,KAE9LuK,KAAK8oF,GAAsB9hB,cAAgB,EAC3ChnE,KAAKsmC,EAAKwD,SAASC,UACnB/pC,KAAKsmC,EAAKosD,mBAjqEV1yF,KAAKsmC,EAAKwD,SAAS06B,MAAMxkE,KAAK6rF,aAC9BprE,OAAOwpB,iBAAiB,SAAUjqC,KAAK6rF,aAEjC,UAAWtyF,WAChByG,KAAK+iF,GAAUh2E,YAAY/M,KAAK+iF,GAAUx8E,cAAc,uBAGzDvG,KAAKmjF,GAAarmF,YAAYkjF,GAAS,CAAE5S,MAAO,QAC/ChuB,GAAO,CAAE1tD,MAAO,cAAgB,yBAEjCsO,KAAKqjF,GAAWvmF,YAAYkjF,GAAS,CAAE5S,MAAO,QAC7ChuB,GAAO,CAAE1tD,MAAO,aAAe,gBAEhCsO,KAAK0jF,GAAc5mF,YAAYkjF,GAAS,CAAE5S,MAAO,QAChDhuB,GAAO,CAAE1tD,MAAO,eAAiB,0BAGlCsO,KAAKqnF,GAAevqF,YAAYsiD,GAAO,CAAE4jC,QAAQ,EAAMtxF,MAAO,GAAK,WAGnEsO,KAAK+qF,GAAkB,IAAI9tF,MAAe+W,EAAWgG,aACrDha,KAAKirF,GAAmB,IAAIhuF,MAAc+W,EAAWgG,aAErDha,KAAKioF,GAAenrF,YAAY4M,GAAI,CAAEo+B,MAAO,cAAexpC,MAAO,wEAClEoL,GAAI,CAAEpL,MAAO,2CAA6C,MAC1DoL,GAAI,CAAEpL,MAAO,kCAAmCwpC,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,sBAAwB,SACtHt6E,GAAI,CAAEpL,MAAO,yBAA0BwpC,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,mBAAqB,WAC1Gt6E,GAAI,CAAEpL,MAAO,iCAAkCwpC,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,qBAAuB,eAErH,IAAK,IAAI71F,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IAAK,CACtD,MAAMylD,EAAwBzlD,EACxB8kG,EAAiCvpF,GAAI,CAAEpL,MAAO,8BAAgCyB,EAAYyH,cAAgB,KAAOrZ,EAAI,EAAI,KACzH+kG,EAAqChT,GAAa/gC,GAAO,CAAE7gD,MAAO,eAAgBqd,MAAO,cAAgB5tB,EAAOgJ,oBAAoBqsF,KAAIlsE,GAAQA,EAAKvlB,QACrJwhG,EAA0B,IAAIp/B,GAAO9U,GAAM,CAAE3gD,MAAO,yBAA0BxJ,KAAM,QAASzE,IAAK,IAAK6e,IAAKnhB,EAAO+I,qBAAsBpF,MAAO,IAAK6tD,KAAM,IAAK5jC,MAAO,WAAa3b,KAAKsmC,GAAM,CAAC6L,EAAkBtD,IAAqB,IAAIiF,GAAwB9zC,KAAKsmC,EAAMsN,EAAezB,EAAUtD,KAAW,GAClTukD,EAAoClT,GAAa/gC,GAAO,CAAE7gD,MAAO,eAAgBqd,MAAO,aAAe5tB,EAAOoJ,UAAUisF,KAAIxnF,GAAYA,EAASjK,QACjJ0hG,EAAsB3pF,GAAI,CAAEo+B,MAAO,eACxCmrD,EACAvpF,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,mCAAqC40F,GAC5EC,EAAgBtrD,UAChBn+B,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,kCAAoC80F,IAE5EpzF,KAAKioF,GAAenrF,YAAYu2F,GAChCrzF,KAAKyqF,GAAct8F,GAAKklG,EACxBrzF,KAAK0qF,GAA0Bv8F,GAAKglG,EACpCnzF,KAAK2qF,GAAyBx8F,GAAKilG,EACnCpzF,KAAK4qF,GAA0Bz8F,GAAK+kG,EAEpCE,EAAenpD,iBAAiB,UAAU,KACzCjqC,KAAKsmC,EAAKqa,OAAO,IAAIhN,GAAuB3zC,KAAKsmC,EAAMsN,EAAew/C,EAAepsB,mBAEtFksB,EAAgBjpD,iBAAiB,UAAU,KAC1CjqC,KAAKsmC,EAAKqa,OAAO,IAAI9M,GAAwB7zC,KAAKsmC,EAAMsN,EAAes/C,EAAgBlsB,mBAIzFhnE,KAAKwoF,GAAc1rF,YAClB4M,GAAI,CAAEo+B,MAAO,aACZiX,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,oBAAsB,aAC3EjlC,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,oBAAsB,eAG7E,IAAK,IAAI71F,EAAYJ,EAAO2K,UAAY,EAAGvK,GAAK,EAAGA,IAAK,CACvD,MAAM6kD,EAAoB7kD,EACpBmlG,EAAiC,IAAIvY,GAAe/6E,KAAKsmC,EAAM0M,GACrEsgD,EAAezrD,UAAUoC,iBAAiB,YAAajqC,KAAK+mE,cAC5D/mE,KAAK6qF,GAAwB18F,GAAKmlG,EAElC,MAAMF,EAAoClT,GAAa/gC,GAAO,CAAE7gD,MAAO,eAAgBqd,MAAO,oBAAsB5tB,EAAOoJ,UAAUisF,KAAIxnF,GAAYA,EAASjK,QAC9JqO,KAAK8qF,GAAwB38F,GAAKilG,EAClCA,EAAenpD,iBAAiB,UAAU,KACzCjqC,KAAKsmC,EAAKqa,OAAO,IAAI5N,GAAsB/yC,KAAKsmC,EAAM0M,EAAWogD,EAAepsB,mBAGjF,MAAMqsB,EAAsB3pF,GAAI,CAAEo+B,MAAO,aACxCp+B,GAAI,CAAEo+B,MAAO,kBAAmBxpC,MAAO,mCAAqC80F,GAC5EpzF,KAAK6qF,GAAwB18F,GAAG05C,WAEjC7nC,KAAKwoF,GAAc1rF,YAAYu2F,GAGhCrzF,KAAKuzF,GAAe,GACpBvzF,KAAKstF,GAAmB,GACxBttF,KAAKwtF,GAAsB,GAC3BxtF,KAAKwzF,GAAc,GACnBxzF,KAAK0tF,GAAe,GACpB,IAAK,IAAI75E,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAAO,CAEvD,IAAI4/E,EAAmCt0C,GAAO,CAAE7gD,MAAO,8DACnDo1F,EAAsCv0C,GAAO,CAAE7gD,MAAO,sCAEtDq1F,EAA6BjqF,GAAI,CAAEo+B,MAAO,cAAexpC,MAAO,uCACnEoL,GAAI,CAAEo+B,MAAO,MAAOxpC,MAAO,kDAAmDmiE,GAAI,iBAAmB5sD,EAAKkwE,QAAS,IAAM/jF,KAAKgkF,GAAY,eAAiB,OAC3Jt6E,GAAI,CAAEo+B,MAAO,mBAAqB2rD,GAClC/pF,GAAI,CAAEo+B,MAAO,MAAOxpC,MAAO,oCAAqCmiE,GAAI,oBAAsB5sD,EAAKkwE,QAAS,IAAM/jF,KAAKgkF,GAAY,kBAAoB,QACnJt6E,GAAI,CAAEo+B,MAAO,mBAAqB4rD,IAG/BE,EAA+Bz0C,KAC/B00C,EAA4BnqF,GAAI,CAAEo+B,MAAO,YAAa24B,GAAI,iBAAmB5sD,EAAKvV,MAAO,8CAAgDygD,GAAK,CAAEjX,MAAO,MAAOi8C,QAAS,IAAM/jF,KAAKgkF,GAAY,WAAa,aAAct6E,GAAI,CAAEo+B,MAAO,mBAAqB8rD,IAE/P5zF,KAAKuzF,GAAa/kG,KAAKmlG,GACvB3zF,KAAKstF,GAAiB9+F,KAAKilG,GAC3BzzF,KAAKwtF,GAAoBh/F,KAAKklG,GAC9B1zF,KAAKwzF,GAAYhlG,KAAKqlG,GACtB7zF,KAAK0tF,GAAal/F,KAAKolG,GAEvB5zF,KAAKyoF,GAAgB3rF,YAAY4M,GAAI,CAAEpL,MAAO,sFAAwFyB,EAAYyH,cAAgB,iBAAmBzH,EAAY+H,mBAAqB,KAAO,cAAgB+L,EAAM,KACnP7T,KAAKyoF,GAAgB3rF,YAAY62F,GACjC3zF,KAAKyoF,GAAgB3rF,YAAY+2F,GAIlC7zF,KAAK+iF,GAAU94C,iBAAiB,SAAUjqC,KAAKoyF,IAC/CpyF,KAAKijF,GAAUh5C,iBAAiB,SAAUjqC,KAAKuyF,IAC/CvyF,KAAKkjF,GAAaj5C,iBAAiB,SAAUjqC,KAAKwyF,IAClDxyF,KAAK8oF,GAAsB7+C,iBAAiB,SAAUjqC,KAAK2yF,IAC3D3yF,KAAKwjF,GAAcv5C,iBAAiB,SAAUjqC,KAAKqwF,IACnDrwF,KAAKmjF,GAAal5C,iBAAiB,SAAUjqC,KAAKswF,IAClDtwF,KAAKqjF,GAAWp5C,iBAAiB,SAAUjqC,KAAKwwF,IAChDxwF,KAAK0jF,GAAcz5C,iBAAiB,SAAUjqC,KAAKywF,IAGnDzwF,KAAK6jF,GAAiB55C,iBAAiB,SAAUjqC,KAAKkxF,IACtDlxF,KAAKikF,GAAkBh6C,iBAAiB,SAAUjqC,KAAKmxF,IAEvDnxF,KAAKkoF,GAAoBj+C,iBAAiB,SAAUjqC,KAAKgxF,IACzDhxF,KAAKqpF,GAAwBp/C,iBAAiB,SAAUjqC,KAAKixF,IAC7DjxF,KAAKolF,GAAgBn7C,iBAAiB,SAAUjqC,KAAK0xF,IACrD1xF,KAAKqlF,GAAiBp7C,iBAAiB,SAAUjqC,KAAK2xF,IACtD3xF,KAAKwlF,GAAkBv7C,iBAAiB,SAAUjqC,KAAK8xF,IACvD9xF,KAAKgmF,GAAe/7C,iBAAiB,SAAUjqC,KAAK+xF,IACpD/xF,KAAKqmF,GAAsBp8C,iBAAiB,SAAUjqC,KAAK4xF,IAC3D5xF,KAAKumF,GAAqBt8C,iBAAiB,SAAUjqC,KAAK6xF,IAC1D7xF,KAAK2mF,GAAgB18C,iBAAiB,SAAUjqC,KAAKkyF,IACrDlyF,KAAK6mF,GAAa58C,iBAAiB,SAAUjqC,KAAKmyF,IAClDnyF,KAAKqnF,GAAep9C,iBAAiB,SAAUjqC,KAAKgyF,IACpDhyF,KAAK8nF,GAAmB79C,iBAAiB,SAAUjqC,KAAKiyF,IACxDjyF,KAAK4jD,GAAY3Z,iBAAiB,QAASjqC,KAAK6jD,IAChD7jD,KAAKyiF,GAAex4C,iBAAiB,QAASjqC,KAAK8vF,IACnD9vF,KAAK0iF,GAAez4C,iBAAiB,QAASjqC,KAAK+vF,IACnD/vF,KAAK2iF,GAAc1jC,MAAMhV,iBAAiB,QAASjqC,KAAKmwF,IACxDnwF,KAAKgqF,GAAa//C,iBAAiB,YAAajqC,KAAK4rF,IACrD5rF,KAAKkqF,GAAWjgD,iBAAiB,YAAajqC,KAAK+mE,cAGnD/mE,KAAK2iF,GAAc96C,UAAUvpC,MAAMC,YAAY,YAAa,KAC5DyB,KAAK2iF,GAAc96C,UAAUvpC,MAAMC,YAAY,UAAW,QAE1DyB,KAAK6iF,GAAoBvkF,MAAMC,YAAY,YAAa,KACxDyB,KAAK6iF,GAAoBvkF,MAAMC,YAAY,UAAW,QAGtDyB,KAAK2iF,GAAc96C,UAAUvpC,MAAMC,YAAY,cAAewB,EAAY6I,yBAC1E5I,KAAK2iF,GAAc96C,UAAUvpC,MAAMC,YAAY,sBAAuB,OACtEyB,KAAKmkF,GAAwBt8C,UAAUvpC,MAAMC,YAAY,cAAewB,EAAY6I,yBACpF5I,KAAKmkF,GAAwBt8C,UAAUvpC,MAAMC,YAAY,sBAAuB,OAChFyB,KAAKopF,GAAyBvhD,UAAUvpC,MAAMC,YAAY,cAAewB,EAAY6I,yBACrF5I,KAAKopF,GAAyBvhD,UAAUvpC,MAAMC,YAAY,sBAAuB,OACjF,IAAK,IAAIpQ,EAAY,EAAGA,EAAIJ,EAAOyI,cAAerI,IACjD6R,KAAK0qF,GAA0Bv8F,GAAG05C,UAAUvpC,MAAMC,YAAY,cAAewB,EAAY6I,yBACzF5I,KAAK0qF,GAA0Bv8F,GAAG05C,UAAUvpC,MAAMC,YAAY,sBAAuB,OAItF,IAAK,IAAIsV,EAAc,EAAGA,EAAM9lB,EAAO4K,SAAUkb,IAAO,CACvD,IAAIigF,EAAsB9zF,KAC1BA,KAAKstF,GAAiBz5E,GAAKo2B,iBAAiB,UAAU,WAAc6pD,EAAQzC,GAAmBx9E,MAC/F7T,KAAKwtF,GAAoB35E,GAAKo2B,iBAAiB,UAAU,WAAc6pD,EAAQvC,GAAsB19E,MACrG7T,KAAK0tF,GAAa75E,GAAKo2B,iBAAiB,UAAU,WAAc6pD,EAAQjG,GAAmBh6E,MA0B5F,GAvBA7T,KAAKgqF,GAAa//C,iBAAiB,YAAajqC,KAAK+mE,cACrD/mE,KAAKooF,GAAgBvgD,UAAUoC,iBAAiB,YAAajqC,KAAK+mE,cAClE/mE,KAAKsoF,GAAiBzgD,UAAUoC,iBAAiB,YAAajqC,KAAK+mE,cACnE/mE,KAAKwjF,GAAcv5C,iBAAiB,UAAWjqC,KAAKyuF,IAAgC,GACpFzuF,KAAKqqF,UAAUpgD,iBAAiB,UAAWjqC,KAAKogD,IAChDpgD,KAAKqqF,UAAUpgD,iBAAiB,QAASjqC,KAAKuuF,IAC9CvuF,KAAK0oF,GAAsBz+C,iBAAiB,QAASjqC,KAAK+zF,GAAgBC,KAAKh0F,OAC/EA,KAAK4oF,GAAuB3+C,iBAAiB,QAASjqC,KAAKi0F,GAAiBD,KAAKh0F,OAEjFA,KAAKokF,GAAgCn6C,iBAAiB,SAAS,KAAQjqC,KAAKsmC,EAAKqa,OAAO,IAAI7C,GAAa99C,KAAKsmC,EAAMtmC,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAAwB76C,OAAQjF,KAAKyB,IAAI,GAAMzB,KAAKsgB,KAAK,GAAMtgB,KAAKmb,OAAO/J,KAAKokF,GAAgC1yF,cACrSsO,KAAK2kF,GAAmB16C,iBAAiB,SAAS,KAAQjqC,KAAKsmC,EAAKqa,OAAO,IAAIxC,GAAUn+C,KAAKsmC,EAAMtmC,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAAwB97B,IAAKhkB,KAAKyB,IAAI,IAAOzB,KAAKsgB,IAAI,EAAKtgB,KAAKmb,OAAO/J,KAAK2kF,GAAmBjzF,cACpQsO,KAAKklF,GAAsBj7C,iBAAiB,SAAS,KAAQjqC,KAAKsmC,EAAKqa,OAAO,IAAItC,GAAar+C,KAAKsmC,EAAMtmC,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAAwBx7B,OAAQtkB,KAAKyB,IAAItC,EAAO+H,UAAWlH,KAAKsgB,IAAInhB,EAAO8H,UAAWjH,KAAKmb,OAAO/J,KAAKklF,GAAsBxzF,cACxSsO,KAAKkpF,GAAgBj/C,iBAAiB,SAAS,KAAQjqC,KAAKsmC,EAAKqa,OAAO,IAAIpS,GAAiBvuC,KAAKsmC,EAAMtmC,KAAK6oF,GAAsBr6C,cACnIxuC,KAAKknF,GAAej9C,iBAAiB,SAAS,KAAQjqC,KAAKsmC,EAAKqa,OAAO,IAAIjO,GAAqB1yC,KAAKsmC,EAAMtmC,KAAKknF,GAAe38B,aAC/HvqD,KAAK2lF,GAAsB17C,iBAAiB,SAAS,KAAQjqC,KAAKsmC,EAAKqa,OAAO,IAAIhO,GAAwB3yC,KAAKsmC,EAAMtmC,KAAK2lF,GAAsBp7B,aAChJvqD,KAAK6lF,GAAwB57C,iBAAiB,SAAS,KAAQjqC,KAAKsmC,EAAKqa,OAAO,IAAI/N,GAA0B5yC,KAAKsmC,EAAMtmC,KAAK6lF,GAAwBt7B,aAEtJvqD,KAAK8pF,GAAiB7/C,iBAAiB,SAAUzB,IAC5CA,EAAM6X,QAAUrgD,KAAK8pF,IACxB9pF,KAAKsmC,EAAKqF,UAIRtyC,EAAU,CACb,MAAM66F,EAAuDl0F,KAAKkjF,GAAa38E,cAAc,oBAC7F2tF,EAAe1pC,UAAW,EAC1B0pC,EAAer2F,aAAa,SAAU,IAIvC,GAAI4iB,OAAO0zE,OAAOC,WAAa,IAA4C,CAC1E,MAAMC,EAAyDr0F,KAAKkjF,GAAa38E,cAAc,sBAC/F8tF,EAAiB7pC,UAAW,EAC5B6pC,EAAiBx2F,aAAa,SAAU,KAIlChE,GAAoBy6F,GAC3B,IAAIj0C,EAA4BrgD,KAAKsnF,GACjC9mC,EAAqBxgD,KAAKgoF,GAC9B,OAAQsM,GACP,KAAK,EACJj0C,EAASrgD,KAAKsnF,GACdtnF,KAAKurF,IAAuBvrF,KAAKurF,GACjC/qC,EAAQxgD,KAAKgoF,GACb,MACD,KAAK,EACJ3nC,EAASrgD,KAAKykF,GACdzkF,KAAKsrF,IAAmBtrF,KAAKsrF,GAC7B9qC,EAAQxgD,KAAKglF,GACb,MACD,KAAK,EACJ3kC,EAASrgD,KAAK8mF,GACd9mF,KAAKwrF,IAAqBxrF,KAAKwrF,GAC/BhrC,EAAQxgD,KAAKonF,GACb,MACD,KAAK,EACJ/mC,EAASrgD,KAAKylF,GACdzlF,KAAKyrF,IAA0BzrF,KAAKyrF,GACpCjrC,EAAQxgD,KAAK+lF,GAGW,KAAtB1lC,EAAOj6C,aACVi6C,EAAOj6C,YAAc,KACjBo6C,GAASxgD,KAAKonF,IAGyF,GAAlGpnF,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SAASqX,YAAYzX,KAAKsmC,EAAKoI,wBAAwB3zC,SAFjGylD,EAAMliD,MAAMi1D,QAAU,MAOvBlT,EAAOj6C,YAAc,IACrBo6C,EAAMliD,MAAMi1D,QAAU,QAIhB15D,KAEP,GAAKmG,KAAKsmC,EAAKzN,MAAM7L,QAiBhB,CAEJ,IAAIxc,EAAqBxQ,KAAKsmC,EAAKoI,uBACnC,MAAM6lD,EAAwBv0F,KAAKsmC,EAAKzN,MAAM27D,eAAex0F,KAAKsmC,EAAKlmC,QAASoQ,GAGhF,GAAI+jF,EAAc,CAEjB,IAAI/jF,EAAqBxQ,KAAKsmC,EAAKoI,uBAEnC,SAAS+lD,EAAgBC,EAAoBC,EAAgB75E,EAAqB1a,EAAiBoQ,GAClG,MAAMue,EAAmB2lE,EAAOpuD,EAAKzN,MAAM14B,KAAMy0F,iBAAiB95E,GAClE,GAAI45E,EAAOpuD,EAAKzN,MAAM7J,YAAYlU,EAASiU,EAAS3uB,EAASoQ,GAAa,CACzE,IAAIqkF,EAAqBH,EAAOpuD,EAAKzN,MAAM14B,KAAMoa,eAAem6E,EAAOpuD,EAAKzN,MAAMzH,YAAYtW,EAASiU,EAAS3uB,EAASoQ,GAAY,GAAQsK,GAAW45E,EAAOpuD,EAAKnmC,KAAKsY,WAAWjX,IAAIsZ,GAKxL,OAJI+5E,GAAcH,EAAOzJ,GAAiBnwE,KACzC45E,EAAOzJ,GAAiBnwE,GAAW+5E,EACnCF,EAAO9sD,UAAUvpC,MAAMC,YAAY,iBAAgC,GAAbs2F,EAAoB,EAAO,OAE3E,EAER,OAAO,EAIR,IAAK,IAAI/5E,EAAkB,EAAGA,EAAU9G,EAAWgG,YAAac,IAAW,CAE1E9a,KAAKgrF,GAAmBlwE,GAAW9a,KAAK+qF,GAAgBjwE,GAGxD,IAAI65E,EAAwB30F,KAAK80F,GAAwBh6E,GAC3C,MAAV65E,IACH30F,KAAKgrF,GAAmBlwE,GAAW25E,EAAgBz0F,KAAM20F,EAAQ75E,EAAS9a,KAAKsmC,EAAKlmC,QAASoQ,UAK3F,GAAIxQ,KAAKkrF,GAEb,IAAK,IAAIpwE,EAAkB,EAAGA,EAAU9G,EAAWgG,YAAac,IAC/D9a,KAAKgrF,GAAmBlwE,IAAW,EAKrC,GAAIy5E,GAAgBv0F,KAAKkrF,GAAsB,CAE9C,IAAI6J,GAA2B,EAE/B,IAAK,IAAIj6E,EAAkB,EAAGA,EAAU9G,EAAWgG,YAAac,IAAW,CAC1E,GAAI9a,KAAKgrF,GAAmBlwE,IAAY9a,KAAK+qF,GAAgBjwE,GAAU,CACtE9a,KAAK+qF,GAAgBjwE,GAAW9a,KAAKgrF,GAAmBlwE,GACxD,IAAI65E,EAAwB30F,KAAK80F,GAAwBh6E,GAE3C,MAAV65E,IAEkC,GAAjC30F,KAAK+qF,GAAgBjwE,GACxB65E,EAAO9sD,UAAUh7B,UAAUC,IAAI,aAG/B6nF,EAAO9sD,UAAUh7B,UAAUsqB,OAAO,cAMG,GAApCn3B,KAAKgrF,GAAmBlwE,KAC3Bi6E,GAAkB,GAGpB/0F,KAAKkrF,GAAuB6J,OAtFA,CAC7B/0F,KAAKkrF,IAAuB,EAE5B,IAAK,IAAIpwE,EAAkB,EAAGA,EAAU9G,EAAWgG,YAAac,IAC/D,GAAqC,GAAjC9a,KAAK+qF,GAAgBjwE,GAAkB,CAC1C9a,KAAK+qF,GAAgBjwE,IAAW,EAChC9a,KAAKgrF,GAAmBlwE,IAAW,EACnC,IAAI65E,EAAwB30F,KAAK80F,GAAwBh6E,GAE3C,MAAV65E,GAEHA,EAAO9sD,UAAUh7B,UAAUsqB,OAAO,eAmF/Bt9B,GAAwBihB,GAC/B,OAAQA,GACP,KAAK9G,EAAW+E,OACf,OAAO/Y,KAAKukF,GACb,KAAKvwE,EAAWwF,UACf,OAAOxZ,KAAKilF,GACb,KAAKjxE,EAAWkF,aACf,OAAOlZ,KAAK0qF,GAA0B,GACvC,KAAK12E,EAAWmF,aACf,OAAOnZ,KAAK0qF,GAA0B,GACvC,KAAK12E,EAAWoF,aACf,OAAOpZ,KAAK0qF,GAA0B,GACvC,KAAK12E,EAAWqF,aACf,OAAOrZ,KAAK0qF,GAA0B,GACvC,KAAK12E,EAAWsF,cACf,OAAOtZ,KAAKopF,GACb,KAAKp1E,EAAWuF,cACf,OAAOvZ,KAAKymF,GACb,KAAKzyE,EAAWiF,cACf,OAAOjZ,KAAKmmF,GACb,KAAKnyE,EAAWgF,aACf,OAAOhZ,KAAKimF,GACb,KAAKjyE,EAAW8E,aACf,OAAO9Y,KAAKmkF,GACb,KAAKnwE,EAAWyF,gBACf,OAAOzZ,KAAKwnF,GACb,KAAKxzE,EAAW2F,gBACf,OAAO3Z,KAAK0nF,GACb,KAAK1zE,EAAW4F,gBACf,OAAO5Z,KAAK4nF,GACb,KAAK5zE,EAAW6F,iBACf,OAAO7Z,KAAKgnF,GACb,KAAKhzE,EAAW8F,YACf,OAAO9Z,KAAK8kF,GACb,KAAK9wE,EAAW2E,SACf,OAAO3Y,KAAKujF,GACb,KAAKvvE,EAAW4E,UACf,OAAO5Y,KAAKyjF,GACb,KAAKzvE,EAAW0E,cACf,OAAO1Y,KAAK2iF,GACb,QACC,OAAO,MAKH9oF,iBAAiB7K,GACvBgR,KAAKikF,GAAkBjd,cAAgBh4E,EACvCgR,KAAKmxF,KAGEt3F,GAAYm7F,GACnBh1F,KAAKsmC,EAAK2uD,WAAWD,GACrBh1F,KAAKquF,GAAW2G,GAGTn7F,GAAWm7F,GAClB,GAAIh1F,KAAKwqF,IAAsBwK,IAC/Bh1F,KAAKwqF,GAAqBwK,EAEtBh1F,KAAK0gD,SACJ1gD,KAAKuqF,MAAiBvqF,KAAK0gD,kBAAkB+6B,IAAaz7E,KAAK0gD,kBAAkBkhB,IAAiB5hE,KAAK0gD,kBAAkB+C,KAC5HzjD,KAAKgkD,KAENhkD,KAAKuqF,IAAc,EACnBvqF,KAAK8pF,GAAiBxrF,MAAMi1D,QAAU,OACtCvzD,KAAK8pF,GAAiB/8E,YAAY/M,KAAK0gD,OAAO7Y,WAC9C7nC,KAAK0gD,OAAOX,UACZ//C,KAAK0gD,OAAS,KACd1gD,KAAK+mE,gBAGFiuB,GAAY,CACf,OAAQA,GACP,IAAK,SACJh1F,KAAK0gD,OAAS,IAAIyI,GAAanpD,KAAKsmC,GACpC,MACD,IAAK,SACJtmC,KAAK0gD,OAAS,IAAI+T,GAAaz0D,KAAKsmC,GACpC,MACD,IAAK,eACJtmC,KAAK0gD,OAAS,IAAI85B,GAAmBx6E,KAAKsmC,GAC1C,MACD,IAAK,eACJtmC,KAAK0gD,OAAS,IAAIrB,GAAmBr/C,KAAKsmC,GAC1C,MAOD,IAAK,oBACJtmC,KAAK0gD,OAAS,IAAI0kB,GAAwBplE,KAAKsmC,GAC/C,MACD,IAAK,kBACJtmC,KAAK0gD,OAAS,IAAIQ,GAAsBlhD,KAAKsmC,GAC7C,MACD,IAAK,kBACJtmC,KAAK0gD,OAAS,IAAIkhB,GAAc5hE,KAAKsmC,EAAMtmC,MAC3C,MACD,IAAK,qBACJA,KAAK0gD,OAAS,IAAI+C,GAAiBzjD,KAAKsmC,EAAMtmC,MAC9C,MACD,IAAK,QACJA,KAAK0gD,OAAS,IAAIw6B,GAAYl7E,KAAKsmC,GACnC,MACD,IAAK,SACJtmC,KAAK0gD,OAAS,IAAIwd,GAAal+D,KAAKsmC,GACpC,MACD,QACCtmC,KAAK0gD,OAAS,IAAI+6B,GAAUz7E,KAAKsmC,EAAM0uD,GAIrCh1F,KAAK0gD,SACF1gD,KAAK0gD,kBAAkB+6B,IAAaz7E,KAAK0gD,kBAAkBkhB,IAAiB5hE,KAAK0gD,kBAAkB+C,KACxGzjD,KAAKuqF,GAAcvqF,KAAKsmC,EAAKzN,MAAM7L,QACnChtB,KAAK8jD,MAEN9jD,KAAK8pF,GAAiBxrF,MAAMi1D,QAAU,GACtCvzD,KAAK8pF,GAAiBhtF,YAAYkD,KAAK0gD,OAAO7Y,aAe1ChuC,mBAAmBvE,GACzB0K,KAAKi+E,GAAciX,UAAU5/F,GAszBvBuE,mBACFmG,KAAKsmC,EAAKzN,MAAM7L,SACnBhtB,KAAK4jD,GAAY/2C,UAAUsqB,OAAO,cAClCn3B,KAAK4jD,GAAY/2C,UAAUC,IAAI,eAC/B9M,KAAK4jD,GAAYjoC,MAAQ,gBACzB3b,KAAK4jD,GAAYM,UAAY,UAE7BlkD,KAAK4jD,GAAY/2C,UAAUsqB,OAAO,eAClCn3B,KAAK4jD,GAAY/2C,UAAUC,IAAI,cAC/B9M,KAAK4jD,GAAYjoC,MAAQ,eACzB3b,KAAK4jD,GAAYM,UAAY,QAoZvBrqD,GAAqB+7C,GAE5B,IAAIu/C,EAGJ,GAFAA,EAAM57F,UAEF47F,EAAIC,WAAaD,EAAIC,UAAUC,UAIlC,YAHAF,EAAIC,UAAUC,UAAUz/C,GAAM0/C,OAAM,KACnC70E,OAAOigC,OAAO,qBAAsB9K,MAItC,MAAM2/C,EAAiCx4F,SAAS0C,cAAc,YAC9D81F,EAAUrxC,UAAYtO,EACtB74C,SAAS0M,KAAK3M,YAAYy4F,GAC1BA,EAAUp2C,SACV,MAAMq2C,EAAqBz4F,SAAS04F,YAAY,QAChDF,EAAUp+D,SACVn3B,KAAK+mE,eACAyuB,GAAW/0E,OAAOigC,OAAO,aAAc9K,GAsBtC/7C,KACNmG,KAAKsmC,EAAKzN,MAAM68D,OAChB11F,KAAK+jD,mBACLtjC,OAAO+hD,sBAAsBxiE,KAAKgwF,IAG5Bn2F,KACNmG,KAAKsmC,EAAKzN,MAAMpI,QAChBzwB,KAAKsmC,EAAKzN,MAAMzB,eACZp3B,KAAKsmC,EAAKu+B,YACb7kE,KAAKsmC,EAAKzN,MAAMy1D,QAAQtuF,KAAKsmC,EAAKvqB,KAEnC/b,KAAKsmC,EAAKzN,MAAM5I,YAChBjwB,KAAK+jD,mBACLtjC,OAAOk1E,cAAc31F,KAAKmrF,IAC1B1qE,OAAOk1E,cAAc31F,KAAKorF,IAC1B3qE,OAAOk1E,cAAc31F,KAAKqrF,IAC1B5qE,OAAO+hD,sBAAsBxiE,KAAKgwF,IAClChwF,KAAKoiE,qBAAuB,EAgCrBvoE,GAAe2e,EAAsBuoD,GAC5C/gE,KAAKigE,GAAcpiE,aAAa,QAAS,GAAKjP,KAAKyB,IAAI,IAAoB,IAAfmoB,IAC5DxY,KAAKkgE,GAAcriE,aAAa,IAAK,IAAM,EAAIjP,KAAKyB,IAAI,IAAsB,IAAjB0wE,KAOtDlnE,KACP,MAEMw7C,EAFmBr1C,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SACpBqX,YAAYzX,KAAKsmC,EAAKoI,wBACtBxrB,eACvCmyB,EAAuB,OAAIr1C,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SACtEqgB,OAAOC,aAAa6/B,QAAQ,iBAAkBnhC,KAAK8yC,UAAU7c,IAC7Dr1C,KAAK+mE,eAGEltE,KACP,MACM2W,EADmBxQ,KAAKsmC,EAAKnmC,KAAK4X,SAAS/X,KAAKsmC,EAAKlmC,SACpBqX,YAAYzX,KAAKsmC,EAAKoI,wBACvD2G,EAAsBj2B,KAAKC,MAAMrB,OAAOyC,OAAOC,aAAaC,QAAQ,oBACpD,MAAlB00B,GAA0BA,EAAuB,QAAKr1C,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,UACpGJ,KAAKsmC,EAAKqa,OAAO,IAAIvL,GAAsBp1C,KAAKsmC,EAAM91B,EAAY6kC,IAEnEr1C,KAAK+mE,eAGEltE,KACP,MAAMwB,EAAmB2E,KAAKsmC,EAAKnmC,KAAK0c,kBAAkB7c,KAAKsmC,EAAKlmC,SACpEJ,KAAKsmC,EAAKqa,OAAO,IAAI/R,GAAa5uC,KAAKsmC,EAAMqL,GAAsBt2C,KAG5DxB,KACPmG,KAAKsmC,EAAKqa,OAAO,IAAIzR,GAAgClvC,KAAKsmC,IA6DnDzsC,GAAWQ,GAClB,GAAI0oD,MAAuB1oD,GAAS,CACnC,OAAQA,GACP,IAAK,iBACJ2F,KAAK+zF,KACL,MACD,IAAK,kBACJ/zF,KAAKi0F,KACL,MACD,IAAK,eACJj0F,KAAKyvF,KACL,MACD,IAAK,kBACJzvF,KAAKwvF,KAGPxvF,KAAKsmC,EAAKwD,SAASC,eAEnB/pC,KAAKsmC,EAAKqa,OAAO,IAAI/R,GAAa5uC,KAAKsmC,EAAMkpB,SAASn1D,YC9iF5Cu7F,GAcZ/7F,YAAoBysC,GAAAtmC,KAAAsmC,EAAAA,EAbbtmC,KAAAk8C,eAAyB,EACzBl8C,KAAAo8C,eAAyB,EACzBp8C,KAAAm8C,eAAyB,EACzBn8C,KAAAq8C,eAAyB,EACzBr8C,KAAA6e,OAAiB,GACjB7e,KAAA6vF,iBAA2B,GAC3B7vF,KAAAs7C,sBAAgC,EAChCt7C,KAAAu7C,oBAA8B,EAC9Bv7C,KAAA47C,wBAAkC,EAEjC57C,KAAA61F,GAAuC,KACvC71F,KAAA81F,GAAmC,KAIpCj8F,SACN,MAAO,CACNk8F,GAAM/1F,KAAKk8C,eACX85C,GAAMh2F,KAAKm8C,eACX85C,GAAMj2F,KAAKo8C,eACX85C,GAAMl2F,KAAKq8C,eACX9sC,MAASvP,KAAKs7C,sBACd9rC,IAAOxP,KAAKu7C,qBAIP1hD,SAASs8F,GACH,MAARA,IACJn2F,KAAKk8C,gBAAkBi6C,EAAS,GAChCn2F,KAAKm8C,gBAAkBg6C,EAAS,GAChCn2F,KAAKo8C,gBAAkB+5C,EAAS,GAChCn2F,KAAKq8C,gBAAkB85C,EAAS,GAChCn2F,KAAKs7C,uBAAyB66C,EAAY,MAC1Cn2F,KAAKu7C,qBAAuB46C,EAAU,IACtCn2F,KAAK6e,OAAS,GACd7e,KAAK6vF,iBAAmB,GACxB7vF,KAAK47C,uBAAyB57C,KAAKs7C,sBAAwBt7C,KAAKu7C,qBAG1D1hD,mBACNmG,KAAKsmC,EAAKwD,SAASC,UACnB/pC,KAAK6e,OAAS,GACd7e,KAAK6vF,iBAAmB,GAGzB/P,sBACC,OAAOlxF,KAAKyB,IAAI2P,KAAKk8C,eAAgBl8C,KAAKm8C,gBAE3C4jC,0BACC,OAAOnxF,KAAKyB,IAAI2P,KAAKo8C,eAAgBp8C,KAAKq8C,gBAE3CujC,wBACC,OAAOhxF,KAAKC,IAAImR,KAAKk8C,eAAiBl8C,KAAKm8C,gBAAkB,EAE9D0jC,yBACC,OAAOjxF,KAAKC,IAAImR,KAAKo8C,eAAiBp8C,KAAKq8C,gBAAkB,EAEvDxiD,oBACNmG,KAAKsmC,EAAKmC,aAAe75C,KAAKyB,IAAI2P,KAAKsmC,EAAKmC,aAAczoC,KAAKm8C,gBAC/Dn8C,KAAKsmC,EAAKmC,aAAe75C,KAAKsgB,IAAIlP,KAAKsmC,EAAKmC,aAAczoC,KAAKm8C,gBAAkBn8C,KAAKsmC,EAAKgD,iBAAmB,IAGxGzvC,cAAcuG,EAAiB2b,GAErC/b,KAAK81F,GAAe,IAAI3qD,GACxBnrC,KAAK81F,GAAaroD,OAAO,IAAImE,GAAiB5xC,KAAKsmC,EAAMlmC,EAAS2b,IAClE/b,KAAKsmC,EAAKqa,OAAO3gD,KAAK81F,IAHgB,GAItC91F,KAAK4+E,mBAGC/kF,WAAWiiB,GACjB9b,KAAKsmC,EAAKqa,OAAO,IAAIzQ,GAAqBlwC,KAAKsmC,EAAMxqB,EAAS9b,KAAK8/E,gBAAiB9/E,KAAK+/E,oBAAqB//E,KAAK4/E,kBAAmB5/E,KAAK6/E,qBAGrIhmF,UAAUu8F,EAAeC,GAC/B,GAAIA,EAAe,CAClBr2F,KAAK6vF,kBAAoBuG,EACzB,IAAIE,EAAS9mC,SAASxvD,KAAK6vF,kBACvB/zE,EAA0B9b,KAAKsmC,EAAK6qC,oBACxC,GAAc,GAAVmlB,GAAeA,GAAUt2F,KAAKsmC,EAAKnmC,KAAKub,uBAAoC,MAAXI,EAEpE,YADA9b,KAAKoxF,cAAckF,EAAS,GAK7B,GAFAt2F,KAAK6vF,iBAAmBuG,EAEV,IADdE,EAAS9mC,SAASxvD,KAAK6vF,oBACJyG,GAAUt2F,KAAKsmC,EAAKnmC,KAAKub,uBAAoC,MAAXI,EAEpE,YADA9b,KAAKoxF,cAAckF,EAAS,GAG7Bt2F,KAAK6vF,iBAAmB,OAEpB,CACJ7vF,KAAK6e,QAAUu3E,EACf,IAAIE,EAAiB9mC,SAASxvD,KAAK6e,QACnC,GAAIy3E,GAAUt2F,KAAKsmC,EAAKnmC,KAAKqb,mBAI5B,YAFAxb,KAAKo+E,WAAWkY,GAOjB,GAFAt2F,KAAK6e,OAASu3E,EACdE,EAAS9mC,SAASxvD,KAAK6e,QACnBy3E,GAAUt2F,KAAKsmC,EAAKnmC,KAAKqb,mBAI5B,YAFAxb,KAAKo+E,WAAWkY,GAKjBt2F,KAAK6e,OAAS,IAIThlB,cAAcga,EAAa7kB,GACjCgR,KAAKsmC,EAAKqa,OAAO,IAAIpL,GAAiBv1C,KAAKsmC,EAAMzyB,EAAK7kB,IAGhD6K,iBAAiBga,EAAarD,GACpCxQ,KAAKsmC,EAAKqa,OAAO,IAAIlL,GAAoBz1C,KAAKsmC,EAAMzyB,EAAKrD,IAGnD3W,cAAcga,EAAa+hC,GACjC51C,KAAKsmC,EAAKqa,OAAO,IAAIhL,GAAiB31C,KAAKsmC,EAAMzyB,EAAK+hC,IAGhD/7C,aACNmG,KAAKsmC,EAAKqa,OAAO,IAAInQ,GAAiBxwC,KAAKsmC,EAAMtmC,KAAK8/E,gBAAkB9/E,KAAK4/E,kBAAmB5/E,KAAK4/E,oBACrG,MAAM74C,EAAgB/mC,KAAK4/E,kBAC3B5/E,KAAKk8C,gBAAkBnV,EACvB/mC,KAAKm8C,gBAAkBpV,EAIjBltC,aACN,MAAM2mD,EAAqB,IAAIrV,GAC/B,GAAInrC,KAAKsmC,EAAK0T,UAAU4B,uBAAwB,EAE3C57C,KAAK4/E,kBAAoB,GAAK5/E,KAAK6/E,mBAAqB,IAC3Dr/B,EAAM/S,OAAO,IAAIqP,GAAsC98C,KAAKsmC,EAAMtmC,KAAK8/E,gBAAiB9/E,KAAK4/E,kBAAmB5/E,KAAK+/E,oBAAqB//E,KAAK6/E,qBAGhJ,IAAK,MAAMz/E,KAAWJ,KAAKu2F,KAC1B,IAAK,MAAMz6E,KAAW9b,KAAKw2F,GAAqBp2F,GAC/CogD,EAAM/S,OAAO,IAAIwH,GAAmBj1C,KAAKsmC,EAAMxqB,EAAS9b,KAAKsmC,EAAK0T,UAAUsB,sBAAuBt7C,KAAKsmC,EAAK0T,UAAUuB,sBAGzHiF,EAAM/S,OAAO,IAAIsM,GAAuB/5C,KAAKsmC,EAAM,EAAG,QAChD,CACNka,EAAM/S,OAAO,IAAIiD,GAAiB1wC,KAAKsmC,EAAMtmC,KAAK8/E,gBAAiB9/E,KAAK4/E,oBACxE,MAAM74C,EAAgB/mC,KAAK4/E,kBAC3B5/E,KAAKk8C,eAAiBttD,KAAKsgB,IAAI,EAAGlP,KAAKk8C,eAAiBnV,GACxD/mC,KAAKm8C,eAAiBvtD,KAAKsgB,IAAI,EAAGlP,KAAKm8C,eAAiBpV,GAEzD/mC,KAAKsmC,EAAKqa,OAAOH,GAIV3mD,MACP,IAAK,IAAIuG,EAAkBJ,KAAK+/E,oBAAqB3/E,EAAUJ,KAAK+/E,oBAAsB//E,KAAK6/E,mBAAoBz/E,UAC5GA,EAIAvG,MACP,IAAK,IAAIkiB,EAAc/b,KAAK8/E,gBAAiB/jE,EAAM/b,KAAK8/E,gBAAkB9/E,KAAK4/E,kBAAmB7jE,UAC3FA,EAIAliB,IAAuBuG,GAC9B,MAAMq2F,EAAuC,GAC7C,IAAK,MAAM16E,KAAO/b,KAAK02F,KAAoB,CAC1C,MAAMt5C,EAA8Bp9C,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASuX,KAAKoE,GAC1E,GAA2B,GAAvBqhC,EAA0B,SAC9B,GAAIq5C,EAAgBz4E,OAAOo/B,IAAuB,SAClDq5C,EAAgBz4E,OAAOo/B,KAAwB,EAC/C,MAAMthC,EAA0B9b,KAAKsmC,EAAKnmC,KAAKolB,WAAWnlB,EAAS2b,GACnE,GAAe,MAAXD,EAAiB,MAAM,IAAIlsB,YACzBksB,GAIAjiB,GAAsBuG,EAAiBklB,GAC9C,IAAK,IAAIn3B,EAAY,EAAGA,EAAI6R,KAAKsmC,EAAKnmC,KAAKob,SAAUptB,IACpD,GAAI6R,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASuX,KAAKxpB,IAAMm3B,EAC/C,OAAO,EAGT,OAAO,EAGDzrB,OACN,MAAMke,EAA0B,GAEhC,IAAK,MAAM3X,KAAWJ,KAAKu2F,KAAwB,CAClD,MAAM7+E,EAAoC,GACpCC,EAAiB,GAEvB,IAAK,MAAMoE,KAAO/b,KAAK02F,KAAoB,CAC1C,MAAMC,EAAwB32F,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASuX,KAAKoE,GAEpE,GADApE,EAAKnpB,KAAKmoG,GAC6BxpF,MAAnCuK,EAASsG,OAAO24E,IAA8B,CACjD,MAAM76E,EAA0B9b,KAAKsmC,EAAKnmC,KAAKolB,WAAWnlB,EAAS2b,GACnE,IAAIvL,EAAqB,EACrBD,EAAgB,GACpB,GAAe,MAAXuL,EAGH,GAFAtL,EAAasL,EAAQtL,WAEjBxQ,KAAK47C,uBACR,IAAK,MAAMnrC,KAAQqL,EAAQ86E,aACtBnmF,EAAKjB,KAAOxP,KAAKs7C,uBACjB7qC,EAAKlB,OAASvP,KAAKu7C,uBACnB9qC,EAAKlB,MAAQvP,KAAKs7C,uBAAyB7qC,EAAKjB,IAAMxP,KAAKu7C,sBAC9D,IAAIpG,GAAiB,KAAM1kC,EAAM7hB,KAAKsgB,IAAIuB,EAAKlB,MAAOvP,KAAKs7C,uBAAwB1sD,KAAKyB,IAAI2P,KAAKu7C,oBAAqB9qC,EAAKjB,MAE5HiB,EAAKlB,OAASvP,KAAKs7C,sBACnB7qC,EAAKjB,KAAOxP,KAAKs7C,sBACjB/qC,EAAM/hB,KAAKiiB,SAGZF,EAAQuL,EAAQvL,MAGlBmH,EAASsG,OAAO24E,IAAkB,CAAEnmF,WAAcA,EAAYD,MAASA,IAIzE,MAAMsmF,EAA2B,CAChCx7F,QAAW2E,KAAKsmC,EAAKnmC,KAAK0c,kBAAkBzc,GAC5C+Z,MAASna,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB1c,GACxCsX,SAAYA,EACZC,KAAQA,GAETI,EAASvpB,KAAKqoG,GAGf,MAAMC,EAA+B,CACpCC,aAAgB/2F,KAAK47C,uBAAyB57C,KAAKu7C,oBAAsBv7C,KAAKs7C,sBAAwBt7C,KAAKsmC,EAAKnmC,KAAKmb,YAAcvtB,EAAOqF,aAC1I2kB,SAAYA,GAEb0I,OAAOC,aAAa6/B,QAAQ,gBAAiBnhC,KAAK8yC,UAAU4kC,IAQtDj9F,aACN,MAAMi9F,EAAsC13E,KAAKC,MAAMrB,OAAOyC,OAAOC,aAAaC,QAAQ,mBAC1F,GAAqB,MAAjBm2E,EAAuB,OAC3B,MAAME,EAA+BF,EAAwB,UAAK,GAC5DG,EAA6BH,EAA4B,eAAM,EAE/Dt2C,EAAqB,IAAIrV,GACzB+rD,EAA0Bl3F,KAAK4/E,kBAAoB,GAAK5/E,KAAK6/E,mBAAqB,EAElFsX,EAAsBD,EAAgBl3F,KAAK6/E,mBAAqBjxF,KAAKyB,IAAI2mG,EAAc5oG,OAAQ4R,KAAKsmC,EAAKnmC,KAAK0b,kBAAoB7b,KAAK+/E,qBAC7I,IAAK,IAAIqX,EAAuB,EAAGA,EAAeD,EAAaC,IAAgB,CAC9E,MAAMP,EAA2BG,EAAcI,EAAeJ,EAAc5oG,QACtEgS,EAAkBJ,KAAK+/E,oBAAsBqX,EAE7C/7F,IAAqBw7F,EAAqB,QAC1C18E,IAAmB08E,EAAmB,MACtCQ,EAAyCR,EAAsB,UAAK,GACpES,EAAuBT,EAAkB,MAAK,GACpD,GAAyB,GAArBS,EAAWlpG,OAAa,SAC5B,GAAIiN,GAAW2E,KAAKsmC,EAAKnmC,KAAK0c,kBAAkBzc,GAAU,SAC1D,GAAI+Z,GAASna,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB1c,GAAU,SAEtD,MAAMm3F,EAAqBL,EAAgBl3F,KAAK4/E,kBAAoBhxF,KAAKyB,IAAIinG,EAAWlpG,OAAQ4R,KAAKsmC,EAAKnmC,KAAKob,SAAWvb,KAAK8/E,iBAC/H,GAAKoX,GAAsC,GAArBI,EAAWlpG,QAAuC,GAAxB4oG,EAAc5oG,OA4BvD,GAAI4R,KAAK47C,uBAAwB,CACvC,MAAMuB,EAAuC,GACvCq6C,EAAoC,GAE1Ch3C,EAAM/S,OAAO,IAAIqP,GAAsC98C,KAAKsmC,EAAMtmC,KAAK8/E,gBAAiByX,EAAYv3F,KAAK+/E,oBAAqBoX,IAE9H,IAAK,IAAIM,EAAmB,EAAGA,EAAWF,EAAYE,IAAY,CACjE,MAAM17E,EAAc/b,KAAK8/E,gBAAkB2X,EACrCC,EAA6BJ,EAAWG,EAAWH,EAAWlpG,UAAY,EAC1EgvD,EAA8Bp9C,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASuX,KAAKoE,GACpE47E,EAAsB,CAACD,EAAoBt6C,GAAqBt/C,KAAK,KAC3E,GAA0B,GAAtB45F,GAAkD,GAAvBt6C,EAA0B,SACzD,GAAqCjwC,MAAjCgwC,EAAiBw6C,GAA2B,CAC/Cn3C,EAAM/S,OAAO,IAAIyC,GAAqBlwC,KAAKsmC,EAAM6W,EAAiBw6C,GAAc57E,EAAK3b,EAAS,EAAG,IACjG,SAGD,GAA2B,GAAvBg9C,EAA0B,CAC7BoD,EAAM/S,OAAO,IAAIuI,GAA0Bh2C,KAAKsmC,EAAMlmC,EAAS2b,IAC/D,MAAM67E,EAA2BP,EAAcr5E,OAAO05E,IAChDriD,EAAyBzmD,KAAKyB,IAAIunG,EAAwB,aAAM,EAAG53F,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,GAC1GI,EAAmB9b,KAAKsmC,EAAKnmC,KAAKolB,WAAWnlB,EAAS2b,GAC5DykC,EAAM/S,OAAO,IAAI6H,GAAwBt1C,KAAKsmC,EAAM+O,EAAgBv5B,QAC9D,CACN,MAAMA,EAA0B9b,KAAKsmC,EAAKnmC,KAAKolB,WAAWnlB,EAAS2b,GACnE,GAAe,MAAXD,EAAiB,MAAM,IAAIlsB,MAE/B,GAAK4nG,EAAax5E,OAAOo/B,IAElB,CAGNoD,EAAM/S,OAAO,IAAIyC,GAAqBlwC,KAAKsmC,EAAM,EAAGvqB,EAAK3b,EAAS,EAAG,IACrEogD,EAAM/S,OAAO,IAAIuI,GAA0Bh2C,KAAKsmC,EAAMlmC,EAAS2b,IAC/D,MAAM6F,EAA6B5hB,KAAKsmC,EAAKnmC,KAAKolB,WAAWnlB,EAAS2b,GACtE,GAAkB,MAAd6F,EAAoB,MAAM,IAAIhyB,MAClC4wD,EAAM/S,OAAO,IAAI6H,GAAwBt1C,KAAKsmC,EAAMxqB,EAAQtL,WAAYoR,IACxE,IAAK,MAAMnR,KAAQqL,EAAQ86E,aAC1Bp2C,EAAM/S,OAAO,IAAI6K,GAAgBt4C,KAAKsmC,EAAM1kB,EAAYnR,EAAMmR,EAAWrR,MAAMniB,QAAQ,SAVxFopG,EAAax5E,OAAOo/B,KAAwB,EAe9C,MAAMthC,EAA0B9b,KAAKsmC,EAAKnmC,KAAKolB,WAAWnlB,EAAS2b,GACnE,GAAe,MAAXD,EAAiB,MAAM,IAAIlsB,MAC/B,GAA0B,GAAtB8nG,EACHl3C,EAAM/S,OAAO,IAAIwH,GAAmBj1C,KAAKsmC,EAAMxqB,EAAS9b,KAAKs7C,sBAAuBt7C,KAAKu7C,0BACnF,CACN,MAAMq8C,EAA2BP,EAAcr5E,OAAO05E,IACtDl3C,EAAM/S,OAAO,IAAIoH,GAAY70C,KAAKsmC,EAAMxqB,EAAS87E,EAAmB,MAAG53F,KAAKs7C,sBAAuBt7C,KAAKu7C,oBAAqB07C,IAG9H95C,EAAiBw6C,GAAe33F,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASuX,KAAKoE,QAEjE,CACN,IAAK,IAAI07E,EAAmB,EAAGA,EAAWF,EAAYE,IAAY,CACjE,MAAM17E,EAAc/b,KAAK8/E,gBAAkB2X,EACrCI,EAAyB73F,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASuX,KAAKoE,GAC/C,GAAlB87E,IACHr3C,EAAM/S,OAAO,IAAIyC,GAAqBlwC,KAAKsmC,EAAM,EAAGvqB,EAAK3b,EAAS,EAAG,IACjEJ,KAAK83F,GAAsB13F,EAASy3F,KAGvC73F,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASsX,SAASmgF,EAAiB,GAAGtnF,MAAMniB,OAAS,IAKhF,MAAM+uD,EAAuC,GAC7C,IAAK,IAAIs6C,EAAmB,EAAGA,EAAWF,EAAYE,IAAY,CACjE,MAAM17E,EAAc/b,KAAK8/E,gBAAkB2X,EACrCC,EAA6BJ,EAAWG,EAAWH,EAAWlpG,UAAY,EAC1EupG,EAAsB35E,OAAO05E,GACnC,GAA0B,GAAtBA,EAAyB,SAC7B,GAAqCvqF,MAAjCgwC,EAAiBw6C,GAA2B,CAC/Cn3C,EAAM/S,OAAO,IAAIyC,GAAqBlwC,KAAKsmC,EAAM6W,EAAiBw6C,GAAc57E,EAAK3b,EAAS,EAAG,IACjG,SAED,MAAMw3F,EAA2BP,EAAcr5E,OAAO05E,IAChDriD,EAAyBzmD,KAAKyB,IAAIunG,EAAwB,aAAM,EAAG53F,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,GAC1Gq8E,EAAuC/3F,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASsX,SAASggF,EAAqB,GAE5G,GAAuBvqF,MAAnB4qF,GACHd,GAAsBlpG,EAAOqF,aAAe4M,KAAKsmC,EAAKnmC,KAAKmb,aAC3Dm/B,GAAoBm9C,EAAmB,MAAGG,EAAgBxnF,QAC1D8kC,GAAkB0iD,EAAgBvnF,WAClCgwC,EAAM/S,OAAO,IAAIyC,GAAqBlwC,KAAKsmC,EAAMoxD,EAAoB37E,EAAK3b,EAAS,EAAG,QAChF,CACiB+M,MAAnB4qF,GAAgC/3F,KAAK83F,GAAsB13F,EAASs3F,GACvEl3C,EAAM/S,OAAO,IAAIyC,GAAqBlwC,KAAKsmC,EAAMoxD,EAAoB37E,EAAK3b,EAAS,EAAG,IAEtFogD,EAAM/S,OAAO,IAAIuI,GAA0Bh2C,KAAKsmC,EAAMlmC,EAAS2b,IAEhE,MAAMD,EAA0B9b,KAAKsmC,EAAKnmC,KAAKolB,WAAWnlB,EAAS2b,GACnE,GAAe,MAAXD,EAAiB,MAAM,IAAIlsB,MAC/B4wD,EAAM/S,OAAO,IAAIoH,GAAY70C,KAAKsmC,EAAMxqB,EAAS87E,EAAmB,MAAG53F,KAAK47C,uBAAyB57C,KAAKs7C,sBAAwB,EAAGt7C,KAAK47C,uBAAyB57C,KAAKu7C,oBAAsBxtD,EAAOqF,aAAe4M,KAAKsmC,EAAKnmC,KAAKmb,YAAa27E,IAChPz2C,EAAM/S,OAAO,IAAI6H,GAAwBt1C,KAAKsmC,EAAM+O,EAAgBv5B,IAGrEqhC,EAAiBw6C,GAAe33F,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASuX,KAAKoE,QA/HG,CAG1E,MAAM27E,EAA6BJ,EAAW,KAAO,EAC/Cv7E,EAAc/b,KAAK8/E,gBACnB1iC,EAA8Bp9C,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASuX,KAAKoE,GAC1E,GAA0B,GAAtB27E,GAAkD,GAAvBt6C,EAA0B,SAEzD,MAAMw6C,EAA2BP,EAAcr5E,OAAO05E,IAEhDriD,EAAyBzmD,KAAKyB,IAAIunG,EAAwB,aAAM,EAAG53F,KAAKsmC,EAAKnmC,KAAKub,sBAAwB,GAEhH,GAA2B,GAAvB0hC,EAA0B,CAC7B,MAAM26C,EAAuC/3F,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASsX,SAASggF,EAAqB,GACrFvqF,MAAnB4qF,IACF/3F,KAAK47C,yBACJnB,GAAoBm9C,EAAmB,MAAGG,EAAgBxnF,QAAU8kC,GAAkB0iD,EAAgBvnF,YACvGxQ,KAAK83F,GAAsB13F,EAASs3F,IACrCl3C,EAAM/S,OAAO,IAAIyC,GAAqBlwC,KAAKsmC,EAAMoxD,EAAoB37E,EAAK3b,EAAS,EAAG,IAEtFogD,EAAM/S,OAAO,IAAIuI,GAA0Bh2C,KAAKsmC,EAAMlmC,EAAS2b,IAIjE,MAAMD,EAA0B9b,KAAKsmC,EAAKnmC,KAAKolB,WAAWnlB,EAAS2b,GACnE,GAAe,MAAXD,EAAiB,MAAM,IAAIlsB,MAC/B4wD,EAAM/S,OAAO,IAAIoH,GAAY70C,KAAKsmC,EAAMxqB,EAAS87E,EAAmB,MAAG53F,KAAK47C,uBAAyB57C,KAAKs7C,sBAAwB,EAAGt7C,KAAK47C,uBAAyB57C,KAAKu7C,oBAAsBxtD,EAAOqF,aAAe4M,KAAKsmC,EAAKnmC,KAAKmb,YAAa27E,IAChPz2C,EAAM/S,OAAO,IAAI6H,GAAwBt1C,KAAKsmC,EAAM+O,EAAgBv5B,KA0GtE9b,KAAKsmC,EAAKqa,OAAOH,GAGX3mD,eACN,MAAMi9F,EAAsC13E,KAAKC,MAAMrB,OAAOyC,OAAOC,aAAaC,QAAQ,mBAC1F,GAAqB,MAAjBm2E,EAAuB,OAC3B,MAAME,EAA+BF,EAAwB,UAAK,GAE5Dt2C,EAAqB,IAAIrV,GACzB+rD,EAA0Bl3F,KAAK4/E,kBAAoB,GAAK5/E,KAAK6/E,mBAAqB,EAElFsX,EAAsBD,EAAgBl3F,KAAK6/E,mBAAqBjxF,KAAKyB,IAAI2mG,EAAc5oG,OAAQ4R,KAAKsmC,EAAKnmC,KAAK0b,kBAAoB7b,KAAK+/E,qBAC7I,IAAK,IAAIqX,EAAuB,EAAGA,EAAeD,EAAaC,IAAgB,CAC9E,MAAMP,EAA2BG,EAAcI,EAAeJ,EAAc5oG,QACtEgS,EAAkBJ,KAAK+/E,oBAAsBqX,EAE7CE,EAAuBT,EAAkB,MAAK,GACpD,GAAyB,GAArBS,EAAWlpG,OAAa,SAE5B,MAAMmpG,EAAqBL,EAAgBl3F,KAAK4/E,kBAAoBhxF,KAAKyB,IAAIinG,EAAWlpG,OAAQ4R,KAAKsmC,EAAKnmC,KAAKob,SAAWvb,KAAK8/E,iBAC/H,IAAK,IAAI2X,EAAmB,EAAGA,EAAWF,EAAYE,IAAY,CACjE,MAAMC,EAA6BJ,EAAWG,EAAWH,EAAWlpG,UAAY,EAC1E2tB,EAAc/b,KAAK8/E,gBAAkB2X,EAEvCC,EAAqB13F,KAAKsmC,EAAKnmC,KAAKqb,oBACvCglC,EAAM/S,OAAO,IAAIoI,GAAyB71C,KAAKsmC,EAAMoxD,IAGtDl3C,EAAM/S,OAAO,IAAIyC,GAAqBlwC,KAAKsmC,EAAMoxD,EAAoB37E,EAAK3b,EAAS,EAAG,KAIxFJ,KAAKsmC,EAAKqa,OAAOH,GAGX3mD,YACN,IAAIkgD,GAAuB/5C,KAAKsmC,EAAM,EAAG,GACb,GAAxBtmC,KAAK8/E,iBACoB,GAA5B9/E,KAAK+/E,qBACL//E,KAAK4/E,mBAAqB5/E,KAAKsmC,EAAKnmC,KAAKob,UACzCvb,KAAK6/E,oBAAsB7/E,KAAKsmC,EAAKnmC,KAAK0b,kBAC1C7b,KAAK2+E,kBAAkB3+E,KAAKsmC,EAAKvqB,IAAK/b,KAAKsmC,EAAKvqB,IAAK/b,KAAKsmC,EAAKlmC,QAASJ,KAAKsmC,EAAKlmC,SAElFJ,KAAK2+E,kBAAkB,EAAG3+E,KAAKsmC,EAAKnmC,KAAKob,SAAW,EAAG,EAAGvb,KAAKsmC,EAAKnmC,KAAK0b,kBAAoB,GAE9F7b,KAAK4+E,mBAGC/kF,gBACN,IAAIkgD,GAAuB/5C,KAAKsmC,EAAM,EAAG,GACb,GAAxBtmC,KAAK8/E,iBAAwB9/E,KAAK4/E,mBAAqB5/E,KAAKsmC,EAAKnmC,KAAKob,SACzEvb,KAAK2+E,kBAAkB3+E,KAAKsmC,EAAKvqB,IAAK/b,KAAKsmC,EAAKvqB,IAAK/b,KAAKo8C,eAAgBp8C,KAAKq8C,gBAE/Er8C,KAAK2+E,kBAAkB,EAAG3+E,KAAKsmC,EAAKnmC,KAAKob,SAAW,EAAGvb,KAAKo8C,eAAgBp8C,KAAKq8C,gBAElFr8C,KAAK4+E,mBAGC/kF,oBACNmG,KAAKsmC,EAAKqa,OAAO,IAAI7D,GAAsC98C,KAAKsmC,EAAMtmC,KAAK8/E,gBAAiB9/E,KAAK4/E,kBAAmB5/E,KAAK+/E,oBAAqB//E,KAAK6/E,qBAG7IhmF,aAAam+F,GACnB,GAAIA,EAAa,CAChB,IAAIC,GAAoB,EACxB,IAAK,IAAI73F,EAAkB,EAAGA,EAAUJ,KAAKsmC,EAAKnmC,KAAK4X,SAAS3pB,OAAQgS,IACvE,GAAIJ,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASwX,MAAO,CAC3CqgF,GAAW,EACX,MAGF,IAAK,IAAI73F,EAAkB,EAAGA,EAAUJ,KAAKsmC,EAAKnmC,KAAK4X,SAAS3pB,OAAQgS,IACvEJ,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASwX,OAASqgF,MAErC,CACN,IAAIC,GAAsB,EAC1B,IAAK,MAAM93F,KAAWJ,KAAKu2F,KAC1B,IAAKv2F,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASwX,MAAO,CAC5CsgF,GAAa,EACb,MAGF,IAAK,MAAM93F,KAAWJ,KAAKu2F,KAC1Bv2F,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASwX,MAAQsgF,EAI3Cl4F,KAAKsmC,EAAKwD,SAASC,UAGblwC,eACN,IAAIs+F,GAAyB,EAE7B,IAAK,IAAI/3F,EAAkB,EAAGA,EAAUJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmBhB,IAAW,CACvH,MAAMg4F,EAAyBh4F,EAAUJ,KAAK+/E,qBAAuB3/E,GAAWJ,KAAK+/E,oBAAsB//E,KAAK6/E,mBAChH,GAAI7/E,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASwX,OAASwgF,EAAe,CAC5DD,GAAgB,EAChB,OAIF,GAAIA,EACH,IAAK,IAAI/3F,EAAkB,EAAGA,EAAUJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmBhB,IAC5GJ,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASwX,OAAQ,OAG1C,IAAK,IAAIxX,EAAkB,EAAGA,EAAUJ,KAAKsmC,EAAKnmC,KAAKe,kBAAoBlB,KAAKsmC,EAAKnmC,KAAKiB,kBAAmBhB,IAC5GJ,KAAKsmC,EAAKnmC,KAAK4X,SAAS3X,GAASwX,MAAQxX,EAAUJ,KAAK+/E,qBAAuB3/E,GAAWJ,KAAK+/E,oBAAsB//E,KAAK6/E,mBAI5H7/E,KAAKsmC,EAAKwD,SAASC,UAGblwC,cACN,MAAM2mD,EAAqB,IAAIrV,IAE3BnrC,KAAK4/E,kBAAoB,GAAK5/E,KAAK6/E,mBAAqB,IAC3Dr/B,EAAM/S,OAAO,IAAIqP,GAAsC98C,KAAKsmC,EAAMtmC,KAAK8/E,gBAAiB9/E,KAAK4/E,kBAAmB5/E,KAAK+/E,oBAAqB//E,KAAK6/E,qBAGhJ,IAAK,MAAMz/E,KAAWJ,KAAKu2F,KAC1B,IAAK,MAAMz6E,KAAW9b,KAAKw2F,GAAqBp2F,GAC/CogD,EAAM/S,OAAO,IAAIqK,GAAoB93C,KAAKsmC,EAAMxqB,IAIlD9b,KAAKsmC,EAAKqa,OAAOH,GAGX3mD,aACN,MAAM2mD,EAAqB,IAAIrV,IAE3BnrC,KAAK4/E,kBAAoB,GAAK5/E,KAAK6/E,mBAAqB,IAC3Dr/B,EAAM/S,OAAO,IAAIqP,GAAsC98C,KAAKsmC,EAAMtmC,KAAK8/E,gBAAiB9/E,KAAK4/E,kBAAmB5/E,KAAK+/E,oBAAqB//E,KAAK6/E,qBAGhJ,MAAMwY,EAAwB,EAAC,GAAM,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAAO,GAC3G,IAAK,MAAMj4F,KAAWJ,KAAKu2F,KAC1B,IAAIv2F,KAAKsmC,EAAKnmC,KAAK0c,kBAAkBzc,KAAYJ,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB1c,GAChF,IAAK,MAAM0b,KAAW9b,KAAKw2F,GAAqBp2F,GAC/CwrC,GAAiB9vB,EAASu8E,GAI5B,MAAM56C,W3BziByB66C,EAAuCC,GACvE,MAAMC,EAAwCzqG,EAAOmE,OAAOqmG,GAAenmG,MACrEqmG,EAAqB,GACrBC,EAAqB,GAC3B,IAAK,IAAIvqG,EAAY,EAAGA,EAAI,GAAIA,IAC3BmqG,EAAcnqG,IAAIsqG,EAASjqG,KAAKL,GAChCqqG,EAAcrqG,IAAIuqG,EAASlqG,KAAKL,GAErC,MAAMwqG,EAA2BF,EAASrqG,OAASsqG,EAAStqG,OACtDwqG,EAAyBD,EAAkBD,EAAWD,EACtDI,EAAwBF,EAAkBF,EAAWC,EAErDI,EAAkB,CAAC,OAAQ,SAAU,SAAU,QAAS,QAAS,SAAU,UAAW,QAAS,QAAS,QAAS,UAAW,UAAW,QAC7I,IAAIC,EAAoBxiE,OAAO6iC,iBAC3B4/B,EAAyB,GAC7B,MAAM5f,EAAoB,CAAC,CAAC,IAE5B,KAAOA,EAAMhrF,OAAS,GAAG,CACxB,MAAM6qG,EAAqB7f,EAAM96D,MAEjC,GAAI26E,EAAS7qG,QAAUwqG,EAAaxqG,OAAQ,CAE3C,IAAI8qG,EAAgB,EACpB,IAAK,IAAI/qG,EAAY,EAAGA,EAAI8qG,EAAS7qG,OAAQD,IAC5C+qG,GAAStqG,KAAKC,IAAI+pG,EAAazqG,GAAK0qG,EAAYI,EAAS9qG,KACrD2qG,EAAMF,EAAazqG,KAAO2qG,EAAMD,EAAYI,EAAS9qG,OAExD+qG,GAAS,KAGPH,EAAYG,IACfH,EAAYG,EACZF,EAAeC,OAEV,CAEN,MAAM/oG,EAAmB+oG,EAASA,EAAS7qG,OAAS,GAAK,EACnDgC,EAAoByoG,EAAYzqG,OAASwqG,EAAaxqG,OAAS6qG,EAAS7qG,OAC9E,IAAK,IAAID,EAAY+B,EAAU/B,GAAKiC,EAAWjC,IAC9CirF,EAAM5qF,KAAKyqG,EAAS5oF,OAAOliB,KAK9B,MAAMgrG,EAA6B,GACnC,IAAK,IAAIhrG,EAAY,EAAGA,EAAI6qG,EAAa5qG,OAAQD,IAAK,CACrD,MAAMirG,EAAoBR,EAAazqG,GACjCkrG,EAAmBR,EAAYG,EAAa7qG,IAClDgrG,EAAehrG,GAAKwqG,EACjB,CAACU,EAAkBD,GACnB,CAACA,EAAmBC,GAIxBF,EAAe3qG,KAAK,CAAC,GAAI,KACzBkqG,EAASlqG,KAAK,IAEd,IAAI8qG,EAAsB,EAC1B,MAAMC,EAAyB,GAC/B,IAAK,IAAIprG,EAAY,EAAGA,EAAI,GAAIA,IAAK,CACpC,MAAMqrG,EAAiBL,EAAeG,GAAa,GAC7CG,EAAiBN,EAAeG,GAAa,GAC7CI,EAAkBP,EAAeG,EAAc,GAAG,GAClDK,EAAkBR,EAAeG,EAAc,GAAG,GACpDnrG,GAAKurG,EAAU,GAAGJ,IAEtB,MAAM17C,GAA4BzvD,EAAIqrG,IAAWG,EAAUF,IAAWC,EAAUF,GAAUC,EAE1F,IAAIr+B,EAAuB,EACvBw+B,EAA+BrjE,OAAO6iC,iBAC1C,IAAK,MAAMygC,KAAYnB,EAAU,CAChC,IAAIt8B,EAAmBxtE,KAAKC,IAAIgrG,EAAWj8C,GACvCk7C,EAAMe,IAAaf,EAAM3qG,KAE5BiuE,GAAY,IAETw9B,EAAuBx9B,IAC1Bw9B,EAAuBx9B,EACvBhB,EAAey+B,GAIjBN,EAAaprG,GAAKitE,EAGnB,OAAOm+B,E2BodqBO,CAAiBzB,EAAYr4F,KAAKsmC,EAAKnmC,KAAK8a,OAEvE,IAAK,MAAM7a,KAAWJ,KAAKu2F,KAC1B,IAAIv2F,KAAKsmC,EAAKnmC,KAAK0c,kBAAkBzc,KAAYJ,KAAKsmC,EAAKnmC,KAAK2c,gBAAgB1c,GAChF,IAAK,MAAM0b,KAAW9b,KAAKw2F,GAAqBp2F,GAC/CogD,EAAM/S,OAAO,IAAI+P,GAAmBx9C,KAAKsmC,EAAMxqB,EAAS2hC,IAI1Dz9C,KAAKsmC,EAAKqa,OAAOH,GAGX3mD,kBAAkBiiD,EAAeC,EAAeC,EAAeC,GAErEj8C,KAAK81F,GAAe,IAAI3qD,GACxBnrC,KAAK81F,GAAaroD,OAAO,IAAIoO,GAAqB77C,KAAKsmC,EAAMwV,EAAOC,EAAOC,EAAOC,IAClFj8C,KAAKsmC,EAAKqa,OAAO3gD,KAAK81F,IAHgB,GAMhCj8F,UAAU4hD,EAAiBjkC,GACjC,MAAM+wD,EAAgCvoE,KAAKsmC,EAAKutB,cAAc7zD,KAAK61F,IACnE71F,KAAK61F,GAAmB,IAAI1qD,IAExBnrC,KAAK4/E,kBAAoB,GAAK5/E,KAAK6/E,mBAAqB,IAC3D7/E,KAAK61F,GAAiBpoD,OAAO,IAAIqP,GAAsC98C,KAAKsmC,EAAMtmC,KAAK8/E,gBAAiB9/E,KAAK4/E,kBAAmB5/E,KAAK+/E,oBAAqB//E,KAAK6/E,qBAGhK,IAAK,MAAMz/E,KAAWJ,KAAKu2F,KAC1B,IAAK,MAAMz6E,KAAW9b,KAAKw2F,GAAqBp2F,GAC/CJ,KAAK61F,GAAiBpoD,OAAO,IAAIgM,GAAgBz5C,KAAKsmC,EAAMlmC,EAAS0b,EAAS2/B,GAAQ,EAAOjkC,IAI/FxX,KAAKsmC,EAAKqa,OAAO3gD,KAAK61F,GAAkBttB,GAGlC1uE,cAAc2W,GACpB,MAAMgwC,EAAqB,IAAIrV,IAE3BnrC,KAAK4/E,kBAAoB,GAAK5/E,KAAK6/E,mBAAqB,IAC3Dr/B,EAAM/S,OAAO,IAAIqP,GAAsC98C,KAAKsmC,EAAMtmC,KAAK8/E,gBAAiB9/E,KAAK4/E,kBAAmB5/E,KAAK+/E,oBAAqB//E,KAAK6/E,qBAGhJ,IAAK,MAAMz/E,KAAWJ,KAAKu2F,KAC1B,IAAK,MAAMz6E,KAAW9b,KAAKw2F,GAAqBp2F,GAC/CogD,EAAM/S,OAAO,IAAI6H,GAAwBt1C,KAAKsmC,EAAM91B,EAAYsL,IAIlE9b,KAAKsmC,EAAKqa,OAAOH,GAGX3mD,oBACNmG,KAAKk8C,eAAiBl8C,KAAKm8C,eAAiBn8C,KAAKsmC,EAAKvqB,IACtD/b,KAAKo8C,eAAiBp8C,KAAKq8C,eAAiBr8C,KAAKsmC,EAAKlmC,eCpnB3C25F,GAAblgG,cACSmG,KAAAg6F,GAA4B,GAC5Bh6F,KAAAi6F,IAAkB,EAEnBpgG,MAAMqgG,IAC4B,GAApCl6F,KAAKg6F,GAAUrlF,QAAQulF,IAC1Bl6F,KAAKg6F,GAAUxrG,KAAK0rG,GAIfrgG,QAAQqgG,GACd,MAAMlrG,EAAgBgR,KAAKg6F,GAAUrlF,QAAQulF,IAC/B,GAAVlrG,GACHgR,KAAKg6F,GAAU57E,OAAOpvB,EAAO,GAIxB6K,UACNmG,KAAKi6F,IAAS,EAGRpgG,iBACN,GAAKmG,KAAKi6F,GAAV,CACAj6F,KAAKi6F,IAAS,EACd,IAAK,MAAMC,KAAWl6F,KAAKg6F,GAAU3pF,SACpC6pF,YCJUC,GAwCZtgG,cArCOmG,KAAA8pC,SAA2B,IAAIiwD,GAC/B/5F,KAAAg6C,UAAuB,IAAI47C,GAAU51F,MACrCA,KAAAI,QAAkB,EAClBJ,KAAAi+C,kBAA4B,EAC5Bj+C,KAAA+b,IAAc,EASd/b,KAAAuyE,mBAA6B,EAC7BvyE,KAAAkuF,oBAA8B,EAK9BluF,KAAAisF,kBAA4B,EAC5BjsF,KAAAnM,OAAiB,GACjBmM,KAAAspC,iBAA2B,GAC3BtpC,KAAAyoC,aAAuB,EACvBzoC,KAAA0gD,OAAwB,KACxB1gD,KAAAu+D,gBAA+B99C,OAAOC,aAAaC,QAAQ,iBAAmB,KAAtD,EACxB3gB,KAAA+8D,kBAA4BhvE,EAAO6K,aAAeoH,KAAKu+D,cAEvDv+D,KAAAw+D,iBAA2Bx+D,KAAKu+D,cAAgBxwE,EAAO0K,iBAAmB,EAEzEuH,KAAAo6F,GAA0B,IAAI5hB,GAE9Bx4E,KAAAq6F,GAA+B,KAC/Br6F,KAAAs6F,GAA0B,EAC1Bt6F,KAAAu6F,IAAgC,EAChCv6F,KAAAw6F,IAA4B,EAC7Bx6F,KAAAy6F,IAAiC,EAoJhCz6F,KAAA06F,GAA2B,KAClC,GAA4B,MAAxBj6E,OAAOk6E,QAAQC,OAAyC,IAAxBn6E,OAAOyoC,SAAS2xC,KAAY,CAE/D76F,KAAKs6F,KACLt6F,KAAK86F,KACL,MAAMF,EAAsB,CAAEG,SAAS,EAAMC,eAAgBh7F,KAAKs6F,GAAiBv+E,IAAK/b,KAAK+b,IAAK3b,QAASJ,KAAKI,QAAS66F,YAAaj7F,KAAKk7F,GAAcx6C,OAAQ,KAAM1G,UAAWh6C,KAAKg6C,UAAUmhD,UAUjM,OATA,IAAIthD,GAAW75C,KAAMygB,OAAOyoC,SAAS2xC,MACrC76F,KAAK0gD,OAASk6C,EAAMl6C,OAChB1gD,KAAK0sF,kBACR1sF,KAAKo7F,GAAcR,EAAO56F,KAAKG,KAAKkyF,kBAEpCryF,KAAKq7F,GAAWT,EAAO56F,KAAKG,KAAKkyF,kBAElCryF,KAAKs7F,wBACLt7F,KAAK8pC,SAASokC,iBAIf,MAAM0sB,EAA6B56F,KAAKu7F,KACxC,GAAa,MAATX,EAAe,MAAM,IAAIhrG,MAAM,0BAG/BgrG,EAAMI,gBAAkBh7F,KAAKs6F,KAEjCt6F,KAAK+b,IAAM6+E,EAAM7+E,IACjB/b,KAAKI,QAAUw6F,EAAMx6F,QACrBJ,KAAKs6F,GAAkBM,EAAMI,eAC7Bh7F,KAAK0gD,OAASk6C,EAAMl6C,OACpB,IAAI7G,GAAW75C,KAAMA,KAAKw7F,MAE1Bx7F,KAAKk7F,GAAeN,EAAMK,YAC1Bj7F,KAAKg6C,UAAUyhD,SAASb,EAAM5gD,WAI9Bh6C,KAAKs7F,mBACLt7F,KAAK8pC,SAASokC,mBAGPluE,KAAA07F,GAAiB,KACxB17F,KAAK8pC,SAASokC,kBAGPluE,KAAA27F,GAAsB,OAIvB37F,KAAK64B,MAAM7L,UAAYhtB,KAAK+b,IAAM/b,KAAKg6C,UAAU8lC,iBAAmB9/E,KAAKg6C,UAAU8lC,gBAAkB9/E,KAAKg6C,UAAU4lC,mBAAqB5/E,KAAK+b,MACnJ/b,KAAKI,QAAUJ,KAAKg6C,UAAU+lC,qBAC9B//E,KAAKg6C,UAAU+lC,oBAAsB//E,KAAKg6C,UAAU6lC,oBAAsB7/E,KAAKI,SAC/EJ,KAAKG,KAAKob,SAAWvb,KAAKg6C,UAAU8lC,gBAAkB9/E,KAAKg6C,UAAU4lC,mBACrE5/E,KAAKG,KAAK0b,kBAAoB7b,KAAKg6C,UAAU+lC,oBAAsB//E,KAAKg6C,UAAU6lC,oBAC7C,GAApC7/E,KAAKg6C,UAAU4lC,mBAA+D,GAArC5/E,KAAKg6C,UAAU6lC,qBACzD7/E,KAAKg6C,UAAUC,qBAITj6C,KAAA47F,GAAsB,KAC7B57F,KAAKy6F,IAAwB,EAC7B,MAAMI,EAAe76F,KAAKG,KAAKkyF,iBAC3BryF,KAAKu6F,IAAsBv6F,KAAKs6F,KAChCt6F,KAAKw6F,GACRx6F,KAAK86F,KAEL96F,KAAKo6F,GAAUyB,YAAY77F,KAAKk7F,GAAcl7F,KAAKG,KAAKwb,MAAOk/E,GAEhE,IAAID,EAAsB,CAAEG,SAAS,EAAMC,eAAgBh7F,KAAKs6F,GAAiBv+E,IAAK/b,KAAK+b,IAAK3b,QAASJ,KAAKI,QAAS66F,YAAaj7F,KAAKk7F,GAAcx6C,OAAQ1gD,KAAK0gD,OAAQ1G,UAAWh6C,KAAKg6C,UAAUmhD,UAClMn7F,KAAKu6F,GACRv6F,KAAKq7F,GAAWT,EAAOC,GAEvB76F,KAAKo7F,GAAcR,EAAOC,GAE3B76F,KAAKu6F,IAAuB,EAC5Bv6F,KAAKw6F,IAAmB,GA1NxBx6F,KAAK8pC,SAAS06B,MAAMxkE,KAAK27F,IAEzB37F,KAAKysF,SAAsD,QAA3ChsE,OAAOC,aAAaC,QAAQ,YAC5C3gB,KAAK6kE,WAA0D,QAA7CpkD,OAAOC,aAAaC,QAAQ,cAC9C3gB,KAAKyuE,kBAAwE,QAApDhuD,OAAOC,aAAaC,QAAQ,qBACrD3gB,KAAKszD,UAAwD,QAA5C7yC,OAAOC,aAAaC,QAAQ,aAC7C3gB,KAAKy1E,YAA4D,QAA9Ch1D,OAAOC,aAAaC,QAAQ,eAC/C3gB,KAAKszE,aAA8D,QAA/C7yD,OAAOC,aAAaC,QAAQ,gBAChD3gB,KAAKgsF,cAAgE,QAAhDvrE,OAAOC,aAAaC,QAAQ,iBACjD3gB,KAAKuyE,kBAAwE,QAApD9xD,OAAOC,aAAaC,QAAQ,qBACrD3gB,KAAKqnE,oBAA4E,QAAtD5mD,OAAOC,aAAaC,QAAQ,uBACvD3gB,KAAK0sF,kBAAwE,SAApDjsE,OAAOC,aAAaC,QAAQ,qBACrD3gB,KAAKisF,iBAAsE,SAAnDxrE,OAAOC,aAAaC,QAAQ,oBACpD3gB,KAAKq+D,WAAa59C,OAAOC,aAAaC,QAAQ,eAAiB,SAC/D3gB,KAAKs7E,WAAa76D,OAAOC,aAAaC,QAAQ,eAAiB,mBAE/D5gB,EAAYs7E,SAASr7E,KAAKs7E,YAC1Bzd,GAAOS,cAAct+D,KAAKq+D,YAEmB,MAAzC59C,OAAOC,aAAaC,QAAQ,YAC/B3gB,KAAKnM,OAASjF,KAAKyB,IAASowB,OAAOC,aAAaC,QAAQ,YAAc,EAAG,KAGjB,MAArDF,OAAOq7E,eAAen7E,QAAQ,sBACjCF,OAAOq7E,eAAev7C,QAAQ,mBAAoB,KAClD9/B,OAAOq7E,eAAev7C,QAAQ,kBAAmB,KACjD9/B,OAAOq7E,eAAev7C,QAAQ,kBAAmB,MAGlD,IAAIw7C,EAAqBt7E,OAAOyoC,SAAS2xC,KACvB,IAAdkB,IACHA,EAAa/7F,KAAKw7F,MAEnBx7F,KAAKG,KAAO,IAAI0X,EAAKkkF,GACH,IAAdA,GAAkC5uF,MAAd4uF,GAAyBpiD,GAAsB35C,KAAKG,MAC5E47F,EAAa/7F,KAAKG,KAAKkyF,iBACvBryF,KAAK64B,MAAQ,IAAInQ,GAAM1oB,KAAKG,MAC5BH,KAAK64B,MAAMhlC,OAASmM,KAAKg8F,KAGzB,IAAIpB,EAA6B56F,KAAKu7F,KACzB,MAATX,IAEHA,EAAQ,CAAEG,SAAS,EAAOC,eAAgB,EAAGj/E,IAAK,EAAG3b,QAAS,EAAG66F,YAAa9iB,KAAez3B,OAAQ,KAAM1G,UAAWh6C,KAAKg6C,UAAUmhD,WAE7GhuF,MAArBytF,EAAMK,cAA0BL,EAAMK,YAAc9iB,MACxDn4E,KAAKo7F,GAAcR,EAAOmB,GAC1Bt7E,OAAOwpB,iBAAiB,aAAcjqC,KAAK06F,IAC3Cj6E,OAAOwpB,iBAAiB,WAAYjqC,KAAK06F,IAEzC16F,KAAK+b,IAAM6+E,EAAM7+E,IACjB/b,KAAKI,QAAUw6F,EAAMx6F,QACrBJ,KAAKk7F,GAAeN,EAAMK,YAC1Bj7F,KAAKyoC,aAAe75C,KAAKsgB,IAAI,EAAGlP,KAAK+b,KAAO/b,KAAKspC,iBAAmB,IACpEtpC,KAAK0gD,OAASk6C,EAAMl6C,OACpB1gD,KAAKg6C,UAAUyhD,SAASb,EAAM5gD,WAM9B,IAAK,MAAMiiD,IAAa,CAAC,QAAS,SAAU,QAAS,QAAS,UAAW,YAAa,YAAa,UAAW,aAAc,YAAa,WAAY,eACpJx7E,OAAOwpB,iBAAiBgyD,EAAWj8F,KAAK07F,IAInC7hG,0BACN,MAAM+gG,EAAsB56F,KAAKu7F,KACjCv7F,KAAK0sF,mBAAqB1sF,KAAK0sF,kBAC/B1sF,KAAKo7F,GAAcR,EAAO56F,KAAKG,KAAKkyF,kBAG7Bx4F,KACP,GAAImG,KAAK0sF,kBACR,OAAOjsE,OAAOk6E,QAAQC,MAChB,CACN,MAAMzE,EAAY/2E,KAAKC,MAAMoB,OAAOq7E,eAAen7E,QAAQF,OAAOq7E,eAAen7E,QAAQ,sBACzF,OAAe,MAARw1E,EAAe,KAAOA,EAAKyE,OAI5B/gG,KACP,GAAImG,KAAK0sF,kBACR,OAAOjsE,OAAOyoC,SAAS2xC,KACjB,CACN,MAAM1E,EAAY/2E,KAAKC,MAAMoB,OAAOq7E,eAAen7E,QAAQF,OAAOq7E,eAAen7E,QAAQ,sBACzF,OAAe,MAARw1E,EAAe,GAAKA,EAAK0E,MAI1BhhG,GAAc+gG,EAAqBC,GACtC76F,KAAK0sF,kBACRjsE,OAAOk6E,QAAQuB,aAAatB,EAAO,GAAI,IAAMC,IAE7Cp6E,OAAOq7E,eAAev7C,QAAQ9/B,OAAOq7E,eAAen7E,QAAQ,qBAAuB,IAAKvB,KAAK8yC,UAAU,CAAE0oC,MAAAA,EAAOC,KAAAA,KAChHp6E,OAAOk6E,QAAQuB,aAAa,KAAM,GAAIhzC,SAASizC,WAIzCtiG,GAAW+gG,EAAqBC,GACvC,GAAI76F,KAAK0sF,kBACRjsE,OAAOk6E,QAAQyB,UAAUxB,EAAO,GAAI,IAAMC,OACpC,CACN,IAAIwB,EAAuB9lE,OAAO9V,OAAOq7E,eAAen7E,QAAQ,qBAC5D27E,EAAsB/lE,OAAO9V,OAAOq7E,eAAen7E,QAAQ,oBAC/D07E,GAAgBA,EAAe,GAAKlC,GAAaoC,GACjD97E,OAAOq7E,eAAev7C,QAAQ,mBAAoBviC,OAAOq+E,IACzD57E,OAAOq7E,eAAev7C,QAAQ,kBAAmBviC,OAAOq+E,IACpDA,GAAgBC,IACnBA,GAAeA,EAAc,GAAKnC,GAAaoC,GAC/C97E,OAAOq7E,eAAev7C,QAAQ,kBAAmBviC,OAAOs+E,KAEzD77E,OAAOq7E,eAAev7C,QAAQviC,OAAOq+E,GAAej9E,KAAK8yC,UAAU,CAAE0oC,MAAAA,EAAOC,KAAAA,KAC5Ep6E,OAAOk6E,QAAQuB,aAAa,KAAM,GAAIhzC,SAASizC,WAIzCtiG,KACP,GAAImG,KAAK0sF,kBACRjsE,OAAOk6E,QAAQ6B,cACT,CACN,IAAIH,EAAuB9lE,OAAO9V,OAAOq7E,eAAen7E,QAAQ,qBAE5D07E,GADsB9lE,OAAO9V,OAAOq7E,eAAen7E,QAAQ,sBAE9D07E,GAAgBA,EAAe,GAAKlC,GAAaoC,GACjD97E,OAAOq7E,eAAev7C,QAAQ,mBAAoBviC,OAAOq+E,IACzDv7C,WAAW9gD,KAAK06F,MAKX7gG,KACP,GAAImG,KAAK0sF,kBACRjsE,OAAOk6E,QAAQ8B,WACT,CACN,IAAIJ,EAAuB9lE,OAAO9V,OAAOq7E,eAAen7E,QAAQ,qBAE5D07E,GADsB9lE,OAAO9V,OAAOq7E,eAAen7E,QAAQ,sBAE9D07E,GAAgBA,EAAelC,GAAaoC,GAAsB,GAAKpC,GAAaoC,GACpF97E,OAAOq7E,eAAev7C,QAAQ,mBAAoBviC,OAAOq+E,IACzDv7C,WAAW9gD,KAAK06F,MAiFZ7gG,OAAOuxC,EAAgBzxC,GAAmB,EAAO+iG,GAAmB,GACtEtxD,EAAOC,UACVrrC,KAAKq6F,GAAgB,KACjB1gG,GAASqG,KAAK28F,OAElBvxD,EAAOwxD,SACP58F,KAAKq6F,GAAgBjvD,EACrBprC,KAAKu6F,GAAuBv6F,KAAKu6F,KAAyB5gG,EAC1DqG,KAAKw6F,GAAmBx6F,KAAKw6F,IAAoBkC,EAC5C18F,KAAKy6F,KAITh6E,OAAO+hD,sBAAsBxiE,KAAK47F,IAClC57F,KAAKy6F,IAAwB,IAKxB5gG,KACPmG,KAAKk7F,GAAe/iB,KAGdt+E,WAAW6mD,GACjB1gD,KAAK0gD,OAASA,EACd,MAAMm6C,EAAe76F,KAAKG,KAAKkyF,iBAC/BryF,KAAKs6F,KACL,MAAMM,EAAQ,CAAEG,SAAS,EAAMC,eAAgBh7F,KAAKs6F,GAAiBv+E,IAAK/b,KAAK+b,IAAK3b,QAASJ,KAAKI,QAAS66F,YAAaj7F,KAAKk7F,GAAcx6C,OAAQ1gD,KAAK0gD,OAAQ1G,UAAWh6C,KAAKg6C,UAAUmhD,UAC1Ln7F,KAAKq7F,GAAWT,EAAOC,GAGjBhhG,OACsBmG,KAAKu7F,KACvBR,SAAS/6F,KAAK28F,KAGlB9iG,OACNmG,KAAK68F,KAGChjG,qBAAqBuxC,GAC3BprC,KAAKq6F,GAAgBjvD,EAGfvxC,mBACNmG,KAAKq6F,GAAgB,KAGfxgG,cAAcuxC,GACpB,OAAiB,MAAVA,GAAkBA,GAAUprC,KAAKq6F,GAGlCxgG,gBACNmG,KAAKI,QAAU,EACfJ,KAAK+b,IAAM,EACX/b,KAAKyoC,aAAe,EACpBzoC,KAAK8pC,SAASC,UACd/pC,KAAK64B,MAAMikE,cACX98F,KAAK8pC,SAASC,UAGRlwC,kBACN4mB,OAAOC,aAAa6/B,QAAQ,WAAYvgD,KAAKysF,SAAW,OAAS,SACjEhsE,OAAOC,aAAa6/B,QAAQ,aAAcvgD,KAAK6kE,WAAa,OAAS,SACrEpkD,OAAOC,aAAa6/B,QAAQ,oBAAqBvgD,KAAKyuE,kBAAoB,OAAS,SACnFhuD,OAAOC,aAAa6/B,QAAQ,YAAavgD,KAAKszD,UAAY,OAAS,SACnE7yC,OAAOC,aAAa6/B,QAAQ,cAAevgD,KAAKy1E,YAAc,OAAS,SACvEh1D,OAAOC,aAAa6/B,QAAQ,eAAgBvgD,KAAKszE,aAAe,OAAS,SACzE7yD,OAAOC,aAAa6/B,QAAQ,gBAAiBvgD,KAAKgsF,cAAgB,OAAS,SAC3EvrE,OAAOC,aAAa6/B,QAAQ,oBAAqBvgD,KAAKuyE,kBAAoB,OAAS,SACnF9xD,OAAOC,aAAa6/B,QAAQ,sBAAuBvgD,KAAKqnE,oBAAsB,OAAS,SACvF5mD,OAAOC,aAAa6/B,QAAQ,oBAAqBvgD,KAAK0sF,kBAAoB,OAAS,SACnFjsE,OAAOC,aAAa6/B,QAAQ,mBAAoBvgD,KAAKisF,iBAAmB,OAAS,SACjFxrE,OAAOC,aAAa6/B,QAAQ,aAAcvgD,KAAKq+D,YAC/C59C,OAAOC,aAAa6/B,QAAQ,aAAcvgD,KAAKs7E,YAC/C76D,OAAOC,aAAa6/B,QAAQ,SAAUviC,OAAOhe,KAAKnM,SAG5CgG,UAAUsV,GAChBnP,KAAKnM,OAASsb,EACdnP,KAAK0yF,kBACL1yF,KAAK64B,MAAMhlC,OAASmM,KAAKg8F,KAGlBniG,KACP,OAAOjL,KAAKyB,IAAI,EAAKzB,KAAKuB,IAAI6P,KAAKnM,OAAS,GAAM,KAAQjF,KAAKuB,IAAI,GAAM6P,KAAKnM,OAAS,IAAQ,IAGzFgG,kBAAkBkjG,EAAoB,GAC5C,OAAO/8F,KAAKG,KAAKolB,WAAWvlB,KAAKI,QAASJ,KAAK+b,IAAMghF,GAG/CljG,qBAAqBkjG,EAAoB,GAC/C,MAAMjhF,EAA0B9b,KAAKmxE,kBAAkB4rB,GACvD,OAAkB,MAAXjhF,EAAkB,EAAIA,EAAQtL,WAG/B3W,kBACN,MAA2B,kBAAnBmG,KAAKq+D,WAAkC59C,OAAOu8E,YAAc,IAAOv8E,OAAOu8E,YAAc,IAG1FnjG,cAEN,OAASmG,KAAKi9F,oBAAqBj9F,KAAKqnE,qBAAyBrnE,KAAKksF,iBAAsC,kBAAnBlsF,KAAKq+D,WAAwC,GAAL,GAG3HxkE,mBACN,MAAMqjG,EAAoBl9F,KAAKi9F,mBAAqBj9F,KAAKG,KAAK0b,kBAAoB,GAAM7b,KAAKG,KAAKob,SAAWvb,KAAKspC,kBAAoBtpC,KAAKG,KAAK0b,kBAAoB,EAGpK,OAD+B7b,KAAKi9F,oBAA2C,kBAAnBj9F,KAAKq+D,YAAmCr+D,KAAKG,KAAK0b,kBAAoB,IAAO7b,KAAKG,KAAK0b,kBAAoB,IACjJ,GAAMqhF,EAAW,GAAK,GAGtCrjG,gBACN,OAAQmG,KAAKi9F,mBAAyC,UAAnBj9F,KAAKq+D,YAzVjB87B,GAAAoC,GAA8B,ICxCvD,MAAM3vD,GAAoB,IAAIutD,GACxBzF,GAAqB,IAAIzS,GAAWr1C,IA6E1C,GA5E4C7vC,SAASogG,eAAe,0BAC7CrgG,YAAY43F,GAAOrK,WAC1CqK,GAAO7I,cAGP6I,GAAOrK,UAAU+S,WAAa,QAC9B1I,GAAOrK,UAAUgT,uBAAuB,gBAAgB,GAAGD,WAAa,QACxE1I,GAAOrK,UAAUgT,uBAAuB,iBAAiB,GAAGD,WAAa,QACzE1I,GAAOrK,UAAUgT,uBAAuB,wBAAwB,GAAGD,WAAa,QAChF1I,GAAOrK,UAAUgT,uBAAuB,4BAA4B,GAAGD,WAAa,QACpF1I,GAAOrK,UAAUgT,uBAAuB,yBAAyB,GAAGD,WAAa,QACjF1I,GAAOrK,UAAUgT,uBAAuB,gBAAgB,GAAGD,WAAa,QAGxErc,EAAE,sBAAsBuc,QAAQ,CAAEC,mBAAmB,IACrDxc,EAAE,qBAAqBuc,QAAQ,CAAEC,mBAAmB,IAGpDxc,EAAE,QAAQtpB,GAAG,QAAS,oDAAoD,WACzEspB,EAAE/gF,MAAMw9F,WAAWC,YAIpB1c,EAAE,sBAAsBtpB,GAAG,gBAAgB,WAC1CspB,EAAE,4BAA4BiN,IAAI,UAAW,GAC7CjN,EAAE,qBAAqBiN,IAAI,UAAW,GACtCjN,EAAE,sBACFjgC,YAAW,KACV,IAAI48C,EAAS3c,EAAE,oDACXpa,EAAUoa,EAAE,qDAEhBA,EAAE4c,KAAKD,GAAQ,CAAC1uG,EAAO4uG,KACtB7c,EAAE6c,GAAGJ,WAAWnQ,OAChBtM,EAAE6c,GAAG,GAAG//F,aAAa,QAAS,UAAYkC,EAAYW,gBAAgBksC,GAAIzsC,KAAMysC,GAAIxsC,SAASa,YAAc,QAE5G8/E,EAAE4c,KAAKh3B,GAAS,CAAC33E,EAAO4uG,KACvB7c,EAAE6c,GAAG,GAAG//F,aAAa,QAAS,UAAYkC,EAAYW,gBAAgBksC,GAAIzsC,KAAMysC,GAAIxsC,SAASa,YAAc,QAG5G8/E,EAAE,4BAA4BiN,IAAI,UAAW,KAC3C,MAIJjN,EAAE,qBAAqBtpB,GAAG,gBAAgB,WACzCspB,EAAE,4BAA4BiN,IAAI,UAAW,GAC7CjN,EAAE,qBAAqBiN,IAAI,UAAW,GACtCjN,EAAE,qBACFjgC,YAAW,KACV,IAAI48C,EAAS3c,EAAE,oDACXpa,EAAUoa,EAAE,qDAEhBA,EAAE4c,KAAKD,GAAQ,CAAC1uG,EAAO4uG,KACtB7c,EAAE6c,GAAGJ,WAAWnQ,OAChBtM,EAAE6c,GAAG,GAAG//F,aAAa,QAAS,UAAYkC,EAAYW,gBAAgBksC,GAAIzsC,KAAMysC,GAAIxsC,SAASa,YAAc,QAE5G8/E,EAAE4c,KAAKh3B,GAAS,CAAC33E,EAAO4uG,KACvB7c,EAAE6c,GAAG,GAAG//F,aAAa,QAAS,UAAYkC,EAAYW,gBAAgBksC,GAAIzsC,KAAMysC,GAAIxsC,SAASa,YAAc,QAG5G8/E,EAAE,4BAA4BiN,IAAI,UAAW,KAC3C,MAKJjN,EAAE,sBAAsBtpB,GAAG,SAAUi9B,GAAO7D,IAC5C9P,EAAE,sBAAsBtpB,GAAG,gBAAiBi9B,GAAO/D,IAEnD5P,EAAE,qBAAqBtpB,GAAG,SAAUi9B,GAAO3D,IAC3ChQ,EAAE,qBAAqBtpB,GAAG,gBAAiBi9B,GAAO/D,IAGlD+D,GAAOrK,UAAUtpC,SAGZ1nD,GAAYuzC,GAAI6/C,SAAU,CAC9B,SAASoR,KACH9gG,SAASimF,SACbp2C,GAAI/T,MAAM68D,OACVhB,GAAO3wC,mBACPtjC,OAAOu/B,oBAAoB,mBAAoB69C,KAG7C9gG,SAASimF,OAEZviE,OAAOwpB,iBAAiB,mBAAoB4zD,IAE5CA,WAOE,sBAAuBlD,UAASA,QAAQmD,kBAAoB,UAEhEpJ,GAAO3wC,mBAEH,kBAAmBxqD,WACtBA,UAAUwkG,cAAcC,SAAS,qBAAsB,CAAEC,eAAgB,MAAOC,MAAO,MAAO5I,OAAM","sourcesContent":["/*!\r\nCopyright (C) 2020 John Nesky\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n*/\r\n\r\n//namespace beepbox {\r\nexport interface Dictionary<T> {\r\n\t[K: string]: T;\r\n}\r\n\r\nexport interface DictionaryArray<T> extends ReadonlyArray<T> {\r\n\tdictionary: Dictionary<T>;\r\n}\r\n\r\nexport const enum EnvelopeType {\r\n\tcustom,\r\n\tsteady,\r\n\tpunch,\r\n\tflare,\r\n\ttwang,\r\n\tswell,\r\n\ttremolo,\r\n\ttremolo2,\r\n\tdecay,\r\n}\r\n\r\nexport const enum InstrumentType {\r\n\tchip = 0,\r\n\tfm = 1,\r\n\tnoise = 2,\r\n\tspectrum = 3,\r\n\tdrumset = 4,\r\n\tharmonics = 5,\r\n\tpwm = 6,\r\n\tcustomChipWave = 7,\r\n\tmod = 8,\r\n\tlength,\r\n}\r\n\r\nexport interface BeepBoxOption {\r\n\treadonly index: number;\r\n\treadonly name: string;\r\n}\r\n\r\nexport interface Scale extends BeepBoxOption {\r\n\treadonly flags: ReadonlyArray<boolean>;\r\n\treadonly realName: string;\r\n}\r\n\r\nexport interface Key extends BeepBoxOption {\r\n\treadonly isWhiteKey: boolean;\r\n\treadonly basePitch: number;\r\n}\r\n\r\nexport interface Rhythm extends BeepBoxOption {\r\n\treadonly stepsPerBeat: number;\r\n\t//readonly ticksPerArpeggio: number;\r\n\t//readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>>;\r\n\treadonly roundUpThresholds: number[] | null;\r\n}\r\n\r\nexport interface ChipWave extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly samples: Float64Array;\r\n}\r\n\r\nexport interface ChipNoise extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly basePitch: number;\r\n\treadonly pitchFilterMult: number;\r\n\treadonly isSoft: boolean;\r\n\tsamples: Float32Array | null;\r\n}\r\n\r\nexport interface Transition extends BeepBoxOption {\r\n\treadonly isSeamless: boolean;\r\n\treadonly attackSeconds: number;\r\n\treadonly releases: boolean;\r\n\treadonly releaseTicks: number;\r\n\treadonly slides: boolean;\r\n\treadonly slideTicks: number;\r\n}\r\n\r\nexport interface Vibrato extends BeepBoxOption {\r\n\treadonly amplitude: number;\r\n\treadonly type: number;\r\n\treadonly delayParts: number;\r\n}\r\n\r\nexport interface VibratoType extends BeepBoxOption {\r\n\treadonly periodsSeconds: number[];\r\n\treadonly period: number;\r\n}\r\n\r\nexport interface Interval extends BeepBoxOption {\r\n\treadonly spread: number;\r\n\treadonly offset: number;\r\n\treadonly volume: number;\r\n\treadonly sign: number;\r\n}\r\n\r\nexport interface Chord extends BeepBoxOption {\r\n\treadonly harmonizes: boolean;\r\n\treadonly customInterval: boolean;\r\n\treadonly arpeggiates: boolean;\r\n\treadonly isCustomInterval: boolean;\r\n\treadonly strumParts: number;\r\n}\r\n\r\nexport interface Algorithm extends BeepBoxOption {\r\n\treadonly carrierCount: number;\r\n\treadonly associatedCarrier: ReadonlyArray<number>;\r\n\treadonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface OperatorFrequency extends BeepBoxOption {\r\n\treadonly mult: number;\r\n\treadonly hzOffset: number;\r\n\treadonly amplitudeSign: number;\r\n}\r\n\r\nexport interface Envelope extends BeepBoxOption {\r\n\treadonly type: EnvelopeType;\r\n\treadonly speed: number;\r\n}\r\n\r\nexport interface Feedback extends BeepBoxOption {\r\n\treadonly indices: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport class Config {\r\n\t// Params for post-processing compressor\r\n\tpublic static thresholdVal: number = -10;\r\n\tpublic static kneeVal: number = 40;\r\n\tpublic static ratioVal: number = 12;\r\n\tpublic static attackVal: number = 0;\r\n\tpublic static releaseVal: number = 0.25;\r\n\r\n\tpublic static readonly scales: DictionaryArray<Scale> = toNameMap([\r\n\r\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\r\n\t\t{ name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n\t\t{ name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\r\n\t\t{ name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\r\n\t\t{ name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\r\n\t\t{ name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\r\n\t\t{ name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\r\n\t\t{ name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\r\n\t\t{ name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\r\n\t\t{ name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\r\n\t\t{ name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\r\n\t\t{ name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\r\n\t\t{ name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\r\n\t\t{ name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\r\n\t\t{ name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\r\n\t\t{ name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\r\n\t\t{ name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\r\n\t\t{ name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\r\n\t\t{ name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\r\n\t\t{ name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\r\n\t\t{ name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\r\n\r\n\r\n\t]);\r\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\r\n\t\t{ name: \"0\", isWhiteKey: true, basePitch: 0 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\r\n\t\t{ name: \"1\", isWhiteKey: false, basePitch: 1 }, // TODO: I lowered these by 12, idk if I still want to have midi import so I might have to adjust if I don't.\r\n\t\t{ name: \"2\", isWhiteKey: true, basePitch: 2 },\r\n\t\t{ name: \"3\", isWhiteKey: false, basePitch: 3 },\r\n\t\t{ name: \"4\", isWhiteKey: true, basePitch: 4 },\r\n\t\t{ name: \"5\", isWhiteKey: true, basePitch: 5 },\r\n\t\t{ name: \"6\", isWhiteKey: false, basePitch: 6 },\r\n\t\t{ name: \"7\", isWhiteKey: true, basePitch: 7 },\r\n\t\t{ name: \"8\", isWhiteKey: false, basePitch: 8 },\r\n\t\t{ name: \"9\", isWhiteKey: true, basePitch: 9 },\r\n\t\t{ name: \"A\", isWhiteKey: false, basePitch: 10 },\r\n\t\t{ name: \"B\", isWhiteKey: true, basePitch: 11 },\r\n\t]);\r\n\t// public static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1]; // key relic (TODO)\r\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1];\r\n\tpublic static readonly tempoMin: number = 16;\r\n\tpublic static readonly tempoMax: number = 512;\r\n\tpublic static readonly reverbRange: number = 32;\r\n\tpublic static readonly beatsPerBarMin: number = 1;\r\n\tpublic static readonly beatsPerBarMax: number = 32;\r\n\tpublic static readonly barCountMin: number = 1;\r\n\tpublic static readonly barCountMax: number = 512;\r\n\tpublic static readonly edoMin: number = 1;\r\n\tpublic static readonly edoMax: number = 53; // want 72\r\n\tpublic static readonly instrumentsPerChannelMin: number = 1;\r\n\tpublic static readonly instrumentsPerChannelMax: number = 16;\r\n\tpublic static readonly partsPerBeat: number = 48; // prev 24;\r\n\tpublic static readonly ticksPerPart: number = 2;\r\n\tpublic static readonly ticksPerArpeggio: number = 3;\r\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7]];\r\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\r\n\t\t{ name: \"÷1 (singlets '_')\", stepsPerBeat: 1, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷2 (duplets)\", stepsPerBeat: 2, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\r\n\t\t{ name: \"÷5\", stepsPerBeat: 5, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷6\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷8\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷9\", stepsPerBeat: 9, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷12\", stepsPerBeat: 12, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷16\", stepsPerBeat: 16, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷24 (freehand)\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t]);\r\n\r\n\tpublic static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"custom chip\", \"mod\"];\r\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, true];\r\n\tpublic static readonly chipWaves: DictionaryArray<ChipWave> = toNameMap([\r\n\t\t{ name: \"rounded\", volume: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\r\n\t\t{ name: \"triangle\", volume: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\r\n\t\t{ name: \"square\", volume: 0.5, samples: centerWave([1.0, -1.0]) },\r\n\t\t{ name: \"1/4 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"1/8 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"sawtooth\", volume: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n\t\t{ name: \"double saw\", volume: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n\t\t{ name: \"double pulse\", volume: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"spiky\", volume: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\r\n\t\t{ name: \"sine\", volume: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\r\n\t\t{ name: \"flute\", volume: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\r\n\t\t{ name: \"harp\", volume: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\r\n\t\t{ name: \"sharp clarinet\", volume: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\r\n\t\t{ name: \"soft clarinet\", volume: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n\t\t{ name: \"alto sax\", volume: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\r\n\t\t{ name: \"bassoon\", volume: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\r\n\t\t{ name: \"trumpet\", volume: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\r\n\t\t{ name: \"electric guitar\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\r\n\t\t{ name: \"organ\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\r\n\t\t{ name: \"pan flute\", volume: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\r\n\t\t{ name: \"glitch\", volume: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n\t]);\r\n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\r\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\r\n\t\t{ name: \"retro\", volume: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"white\", volume: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\r\n\t\t{ name: \"clang\", volume: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"buzz\", volume: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"hollow\", volume: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\r\n\t\t{ name: \"shine\", volume: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"deep\", volume: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\r\n\t\t{ name: \"cutter\", volume: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"metallic\", volume: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t]);\r\n\tpublic static readonly filterCutoffMaxHz: number = 8000; // This is carefully calculated to correspond to no change when filtering at 48000 samples per second.\r\n\tpublic static readonly filterCutoffMinHz: number = 1;\r\n\tpublic static readonly filterMax: number = 0.95;\r\n\tpublic static readonly filterMaxResonance: number = 0.95;\r\n\tpublic static readonly filterCutoffRange: number = 11;\r\n\tpublic static readonly filterResonanceRange: number = 8;\r\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\r\n\t\t{ name: \"seamless\", isSeamless: true, attackSeconds: 0.0, releases: false, releaseTicks: 1, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard\", isSeamless: false, attackSeconds: 0.0, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"soft\", isSeamless: false, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"slide\", isSeamless: true, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: true, slideTicks: 3 },\r\n\t\t{ name: \"cross fade\", isSeamless: false, attackSeconds: 0.04, releases: true, releaseTicks: 6, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard fade\", isSeamless: false, attackSeconds: 0.0, releases: true, releaseTicks: 48, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"medium fade\", isSeamless: false, attackSeconds: 0.0125, releases: true, releaseTicks: 72, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"soft fade\", isSeamless: false, attackSeconds: 0.06, releases: true, releaseTicks: 96, slides: false, slideTicks: 6 },\r\n\t]);\r\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\r\n\t\t{ name: \"none\", amplitude: 0.0, type: 0, delayParts: 0 },\r\n\t\t{ name: \"light\", amplitude: 0.15, type: 0, delayParts: 0 },\r\n\t\t{ name: \"delayed\", amplitude: 0.3, type: 0, delayParts: 18 },\r\n\t\t{ name: \"heavy\", amplitude: 0.45, type: 0, delayParts: 0 },\r\n\t\t{ name: \"shaky\", amplitude: 0.1, type: 1, delayParts: 0 },\r\n\t]);\r\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\r\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\r\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\r\n\t]);\r\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\r\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\r\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\r\n\tpublic static readonly intervals: DictionaryArray<Interval> = toNameMap([\r\n\t\t{ name: \"union\", spread: 0.0, offset: 0.0, volume: 0.7, sign: 1.0 },\r\n\t\t{ name: \"shimmer\", spread: 0.018, offset: 0.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"hum\", spread: 0.045, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"honky tonk\", spread: 0.09, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"dissonant\", spread: 0.25, offset: 0.0, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"fifth\", spread: 3.5, offset: 3.5, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"octave\", spread: 6.0, offset: 6.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"bowed\", spread: 0.02, offset: 0.0, volume: 1.0, sign: -1.0 },\r\n\t\t{ name: \"piano\", spread: 0.01, offset: 0.0, volume: 1.0, sign: 0.7 },\r\n\t]);\r\n\tpublic static readonly effectsNames: ReadonlyArray<string> = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\r\n\tpublic static readonly volumeRange: number = 50;\r\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\r\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\r\n\tpublic static readonly volumeLogScale: number = 0.1428;\r\n\tpublic static readonly panCenter: number = 50;\r\n\tpublic static readonly panMax: number = Config.panCenter * 2;\r\n\tpublic static readonly detuneMin: number = -50;\r\n\tpublic static readonly detuneMax: number = 50;\r\n\tpublic static readonly songDetuneMin: number = -250;\r\n\tpublic static readonly songDetuneMax: number = 250;\r\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\r\n\t\t{ name: \"harmony\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 0 },\r\n\t\t{ name: \"strum\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 1 },\r\n\t\t{ name: \"arpeggio\", harmonizes: false, customInterval: false, arpeggiates: true, isCustomInterval: false, strumParts: 0 },\r\n\t\t{ name: \"custom interval\", harmonizes: true, customInterval: true, arpeggiates: true, isCustomInterval: true, strumParts: 0 },\r\n\t]);\r\n\tpublic static readonly maxChordSize: number = 9; // Pandora's box... ?0_0\r\n\tpublic static readonly operatorCount: number = 4;\r\n\tpublic static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\r\n\t\t{ name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\r\n\t\t{ name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\r\n\t\t{ name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\r\n\t\t{ name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\r\n\t\t{ name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\r\n\t\t{ name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\r\n\t\t{ name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\r\n\t\t{ name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\r\n\t\t{ name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\r\n\t\t{ name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\r\n\t\t{ name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\r\n\t]);\r\n\tpublic static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091];\r\n\tpublic static readonly operatorAmplitudeMax: number = 15;\r\n\tpublic static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\r\n\t\t{ name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\r\n\t\t{ name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\r\n\t\t{ name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t]);\r\n\tpublic static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\r\n\t\t{ name: \"custom\", type: EnvelopeType.custom, speed: 0.0 },\r\n\t\t{ name: \"steady\", type: EnvelopeType.steady, speed: 0.0 },\r\n\t\t{ name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\r\n\t\t{ name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\r\n\t\t{ name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\r\n\t\t{ name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\r\n\t\t{ name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\r\n\t\t{ name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\r\n\t\t{ name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\r\n\t\t{ name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\r\n\t\t{ name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\r\n\t\t{ name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\r\n\t\t{ name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\r\n\t\t{ name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\r\n\t\t{ name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\r\n\t\t{ name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\r\n\t\t{ name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\r\n\t\t{ name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\r\n\t\t{ name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\r\n\t\t{ name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\r\n\t\t{ name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\r\n\t]);\r\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\r\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\r\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\r\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\r\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\r\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\r\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\r\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\r\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\r\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\r\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\r\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\r\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\r\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\r\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\r\n\t\t{ name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\r\n\t]);\r\n\tpublic static readonly chipNoiseLength: number = 1 << 15; // 32768\r\n\tpublic static readonly spectrumBasePitch: number = 24;\r\n\tpublic static readonly spectrumControlPoints: number = 30;\r\n\tpublic static readonly spectrumControlPointsPerOctave: number = 7;\r\n\tpublic static readonly spectrumControlPointBits: number = 3;\r\n\tpublic static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\r\n\tpublic static readonly harmonicsControlPoints: number = 28;\r\n\tpublic static readonly harmonicsRendered: number = 64;\r\n\tpublic static readonly harmonicsControlPointBits: number = 3;\r\n\tpublic static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\r\n\tpublic static readonly harmonicsWavelength: number = 1 << 11; // 2048\r\n\tpublic static readonly pulseWidthRange: number = 50;\r\n\tpublic static readonly pitchChannelCountMin: number = 1;\r\n\tpublic static readonly pitchChannelCountMax: number = 32;\r\n\tpublic static readonly noiseChannelCountMin: number = 0;\r\n\tpublic static readonly noiseChannelCountMax: number = 8;\r\n\tpublic static readonly modChannelCountMin: number = 0;\r\n\tpublic static readonly modChannelCountMax: number = 8;\r\n\tpublic static readonly noiseInterval: number = 6;\r\n\tpublic static readonly centerFrequency = 425.85465642512778279\r\n\tpublic static readonly pitchesPerOctave: number = 12;\r\n\tpublic static readonly drumCount: number = 12;\r\n\tpublic static readonly modCount: number = 6;\r\n\tpublic static readonly pitchOctaves: number = 9; // prev 8\r\n\tpublic static readonly maxScrollableOctaves: number = 5; // Largest number possible with any config setting\r\n\tpublic static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\r\n\tpublic static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\r\n\tpublic static readonly sineWaveLength: number = 1 << 8; // 256\r\n\tpublic static readonly sineWaveMask: number = Config.sineWaveLength - 1;\r\n\tpublic static readonly sineWave: Float64Array = generateSineWave();\r\n\r\n\t// Height of the small editor column for inserting/deleting rows, in pixels.\r\n\tpublic static readonly barEditorHeight: number = 10;\r\n\r\n}\r\n\r\nfunction centerWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = wave[i] - average;\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\nfunction centerAndNormalizeWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tlet magn: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t\tmagn += Math.abs(wave[i]);\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\tconst magnAvg: number = magn / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = (wave[i] - average) / (magnAvg);\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\n\r\n// The function arguments will be defined in FFT.ts, but I want\r\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\r\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\r\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\r\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\r\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null = null, scaleElementsByFactor: Function | null = null): Float32Array {\r\n\tlet wave: Float32Array | null = Config.chipNoises[index].samples;\r\n\tif (wave == null) {\r\n\t\twave = new Float32Array(Config.chipNoiseLength + 1);\r\n\t\tConfig.chipNoises[index].samples = wave;\r\n\r\n\t\tif (index == 0) {\r\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 1 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 1) {\r\n\t\t\t// White noise is just random values for each sample.\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\r\n\t\t\t}\r\n\t\t} else if (index == 2) {\r\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 2 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 3) {\r\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 4) {\r\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\r\n\t\t\tdrawNoiseSpectrum(wave, 10, 11, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 11, 14, .6578, .6578, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 5) {\r\n\t\t\t// \"Shine\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 6) {\r\n\t\t\t// \"Deep\" drums from modbox!\r\n\t\t\tdrawNoiseSpectrum(wave, 1, 10, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 20, 14, -2, -2, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 7) {\r\n\t\t\t// \"Cutter\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1);\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 15 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 8) {\r\n\t\t\t// \"Metallic\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < 32768; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 + 0.5;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer -= 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\r\n\t\t}\r\n\r\n\t\twave[Config.chipNoiseLength] = wave[0];\r\n\t}\r\n\r\n\treturn wave;\r\n}\r\n\r\nexport function drawNoiseSpectrum(wave: Float32Array, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\r\n\tconst referenceOctave: number = 11;\r\n\tconst referenceIndex: number = 1 << referenceOctave;\r\n\tconst lowIndex: number = Math.pow(2, lowOctave) | 0;\r\n\tconst highIndex: number = Math.min(Config.chipNoiseLength >> 1, Math.pow(2, highOctave) | 0);\r\n\tconst retroWave: Float32Array = getDrumWave(0);\r\n\tlet combinedAmplitude: number = 0.0;\r\n\tfor (let i: number = lowIndex; i < highIndex; i++) {\r\n\r\n\t\tlet lerped: number = lowPower + (highPower - lowPower) * (Math.log(i) / Math.LN2 - lowOctave) / (highOctave - lowOctave);\r\n\t\t//let amplitude: number = Math.pow(2, lerped);\r\n\t\t//let amplitude: number = Math.pow((lerped + 5) / 7, 4);\r\n\t\tlet amplitude: number = Math.pow(2, (lerped - 1) * Config.spectrumMax + 1) * lerped;\r\n\r\n\t\tamplitude *= Math.pow(i / referenceIndex, overallSlope);\r\n\r\n\t\tcombinedAmplitude += amplitude;\r\n\r\n\t\t// Add two different sources of psuedo-randomness to the noise\r\n\t\t// (individually they aren't random enough) but in a deterministic\r\n\t\t// way so that live spectrum editing doesn't result in audible pops.\r\n\t\t// Multiple all the sine wave amplitudes by 1 or -1 based on the \r\n\t\t// LFSR retro wave (effectively random), and also rotate the phase\r\n\t\t// of each sine wave based on the golden angle to disrupt the symmetry.\r\n\t\tamplitude *= retroWave[i];\r\n\t\tconst radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\r\n\r\n\t\twave[i] = Math.cos(radians) * amplitude;\r\n\t\twave[Config.chipNoiseLength - i] = Math.sin(radians) * amplitude;\r\n\t}\r\n\r\n\treturn combinedAmplitude;\r\n}\r\n\r\nfunction generateSineWave(): Float64Array {\r\n\tconst wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n\tfor (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n\t\twave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n\t}\r\n\treturn wave;\r\n}\r\n\r\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\r\n\tlet arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\r\n\tif (arpeggioPattern != null) {\r\n\t\tif (pitchCount == 2 && useFastTwoNoteArp == false) {\r\n\t\t\tarpeggioPattern = [0, 0, 1, 1];\r\n\t\t}\r\n\t\treturn arpeggioPattern[arpeggio % arpeggioPattern.length];\r\n\t} else {\r\n\t\treturn arpeggio % pitchCount;\r\n\t}\r\n}\r\n\r\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\r\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\r\n\tconst dictionary: Dictionary<T> = {};\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tconst value: any = array[i];\r\n\t\tvalue.index = i;\r\n\t\tdictionary[value.name] = <T>value;\r\n\t}\r\n\tconst result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\r\n\tresult.dictionary = dictionary;\r\n\treturn result;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nexport interface PresetCategory extends BeepBoxOption {\r\n\treadonly presets: DictionaryArray<Preset>;\r\n}\r\n\r\nexport interface Preset extends BeepBoxOption {\r\n\treadonly isNoise?: boolean;\r\n\treadonly isMod?: boolean;\r\n\treadonly generalMidi?: boolean;\r\n\treadonly midiProgram?: number;\r\n\treadonly midiSubharmonicOctaves?: number;\r\n\treadonly customType?: InstrumentType;\r\n\treadonly settings?: any;\r\n}\r\n\r\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\nexport function prettyNumber(value: number): string {\r\n\treturn value.toFixed(2).replace(/\\.?0*$/, \"\");\r\n}\r\n\r\nexport class EditorConfig {\r\n\tpublic static readonly version: string = \"2.3\"; // Not using patch versions in display right now, maybe someday.\r\n\tpublic static readonly versionDisplayName: string = \"MicroBox Alpha \" + EditorConfig.version;\r\n\r\n\tpublic static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"chip wave\", customType: InstrumentType.chip },\r\n\t\t\t\t{ name: \"FM (expert)\", customType: InstrumentType.fm },\r\n\t\t\t\t{ name: \"basic noise\", customType: InstrumentType.noise },\r\n\t\t\t\t{ name: \"spectrum\", customType: InstrumentType.spectrum },\r\n\t\t\t\t{ name: \"drumset\", customType: InstrumentType.drumset },\r\n\t\t\t\t{ name: \"harmonics\", customType: InstrumentType.harmonics },\r\n\t\t\t\t{ name: \"pulse width\", customType: InstrumentType.pwm },\r\n\t\t\t\t{ name: \"custom chip\", customType: InstrumentType.customChipWave },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"triangle\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\r\n\t\t\t\t{ name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\r\n\t\t\t\t{ name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\r\n\t\t\t\t{ name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\r\n\t\t\t\t{ name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\r\n\t\t\t\t{ name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57] } },\r\n\t\t\t\t{ name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 86, 86, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"wave\": \"1/8 pulse\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"interval\": \"honky tonk\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 43, 43, 43, 43, 43, 29, 43, 43, 43, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"interval\": \"shimmer\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0] } },\r\n\t\t\t\t{ name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 14, 14, 14, 14, 14, 14, 43, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14] } },\r\n\t\t\t\t{ name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\r\n\t\t\t\t{ name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }, { \"frequency\": \"~2×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 2, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 1\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"pulseWidth\": 18, \"pulseEnvelope\": \"punch\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"distorted synth 2\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 3\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 4\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 50, \"pulseEnvelope\": \"swell 1\", \"vibrato\": \"delayed\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"transition\": \"slide\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t\t{ name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14] } },\r\n\t\t\t\t{ name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0] } },\r\n\t\t\t\t{ name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"flare 3\" }] } },\r\n\t\t\t\t{ name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"swell 2\" }, { \"frequency\": \"11×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 3\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"octave\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"tremolo1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 5, \"envelope\": \"twang 3\" }, { \"frequency\": \"11×\", \"amplitude\": 8, \"envelope\": \"tremolo5\" }] } },\r\n\t\t\t\t{ name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"tremolo1\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\r\n\t\t\t\t{ name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"flare 1\" }, { \"frequency\": \"3×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }] } },\r\n\t\t\t\t{ name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 3, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [0, 0, 0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0] } },\r\n\t\t\t\t{ name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 57, \"filterEnvelope\": \"swell 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\r\n\t\t\t\t{ name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"interval\": \"hum\", \"vibrato\": \"heavy\", \"harmonics\": [0, 0, 14, 100, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"tremolo1\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\r\n\t\t\t\t{ name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 4, \"pulseEnvelope\": \"tremolo6\", \"vibrato\": \"shaky\" } },\r\n\t\t\t\t{ name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\r\n\t\t\t\t{ name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\r\n\t\t\t\t{ name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"heavy\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static valueToPreset(presetValue: number): Preset | null {\r\n\t\tconst categoryIndex: number = presetValue >> 6;\r\n\t\tconst presetIndex: number = presetValue & 0x3F;\r\n\t\treturn EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\r\n\t}\r\n\tpublic static midiProgramToPresetValue(program: number): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static nameToPresetValue(presetName: string): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nexport interface ChannelColors extends BeepBoxOption {\r\n\treadonly secondaryChannel: string;\r\n\treadonly primaryChannel: string;\r\n\treadonly secondaryNote: string;\r\n\treadonly primaryNote: string;\r\n}\r\n\r\nexport class ColorConfig {\r\n\tpublic static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\r\n\r\n\tpublic static readonly themes: { [name: string]: string } = {\r\n\t\t\"dark classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t\t--tonic: #864;\r\n\t\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"dark competition\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #ddd;\r\n\t\t\t\t\t--playhead: #ddd;\r\n\t\t\t\t\t--primary-text: #ddd;\r\n\t\t\t\t\t--secondary-text: #8e695b;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\r\n\t\t\t\t\t--loop-accent: #bf15ba;\r\n\t\t\t\t\t--link-accent: #f888ff;\r\n\t\t\t\t\t--ui-widget-background: #443a3a;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #353333;\r\n\t\t\t\t\t--tonic: #884a44;\r\n\t\t\t\t\t--fifth-note: #415498;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"light classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t\t--editor-background: white;\r\n\t\t\t\t\t--hover-preview: black;\r\n\t\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t\t--primary-text: black;\r\n\t\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t\t--inverted-text: white;\r\n\t\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t\t--pitch7-secondary-channel: #CBE24B;\r\n\t\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t\t--noise4-secondary-note:    #AB87C8;\r\n\t\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"jummbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"forest\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #010c03;\r\n\t\t\t\t\t--editor-background: #010c03;\r\n\t\t\t\t\t--hover-preview: #efe;\r\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\r\n\t\t\t\t\t--primary-text: #efe;\r\n\t\t\t\t\t--secondary-text: #70A070;\r\n\t\t\t\t\t--inverted-text: #280228;\r\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\r\n\t\t\t\t\t--box-selection-fill: #267aa3;\r\n\t\t\t\t\t--loop-accent: #ffe845;\r\n\t\t\t\t\t--link-accent: #9f8;\r\n\t\t\t\t\t--ui-widget-background: #203829;\r\n\t\t\t\t\t--ui-widget-focus: #487860;\r\n\t\t\t\t\t--pitch-background: #203829;\r\n\t\t\t\t\t--tonic: #2b8d20;\r\n\t\t\t\t\t--fifth-note: #385840;\r\n\t\t\t\t\t--white-piano-key: #bda;\r\n\t\t\t\t\t--black-piano-key: #573;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\r\n\t\t\t\t\t--track-editor-bg-noise: #304050;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\r\n\t\t\t\t\t--track-editor-bg-mod: #506030;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\r\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\r\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\r\n\t\t\t\t\t--indicator-primary: #dcd866;\r\n\t\t\t\t\t--indicator-secondary: #203829;\r\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\r\n\t\t\t\t\t--input-box-outline: #242;\r\n\t\t\t\t\t--mute-button-normal: #49e980;\r\n\t\t\t\t\t--mute-button-mod: #c2e502;\r\n\t\t\t\t\t--mod-label-primary: #133613;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\r\n\t\t\t\t\t--mod-label-primary-text: #efe;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"canyon\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t\t--editor-background: #0a0000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t\t--secondary-text: #934050;\r\n\t\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t\t--ui-widget-background: #533137;\r\n\t\t\t\t\t--ui-widget-focus: #743e4b;\r\n\t\t\t\t\t--pitch-background: #4f3939;\r\n\t\t\t\t\t--tonic: #9e4145;\r\n\t\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t\t--white-piano-key: #d89898;\r\n\t\t\t\t\t--black-piano-key: #572b29;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\r\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"midnight\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #757575;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #acacac;\r\n\t\t\t--inverted-text: #290505;\r\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\r\n\t\t\t--box-selection-fill: #79797970;\r\n\t\t\t--loop-accent: #646464;\r\n\t\t\t--link-accent: #707070;\r\n\t\t\t--ui-widget-background: #353535;\r\n\t\t\t--ui-widget-focus: #464646;\r\n\t\t\t--pitch-background: #222121;\r\n\t\t\t--tonic: #1a1818;\r\n\t\t\t--fifth-note: #555955;\r\n\t\t\t--white-piano-key: #a89e9e;\r\n\t\t\t--black-piano-key: #2d2424;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #373737;\r\n\t\t\t--track-editor-bg-pitch-dim: #131313;\r\n\t\t\t--track-editor-bg-noise: #484848;\r\n\t\t\t--track-editor-bg-noise-dim: #131313;\r\n\t\t\t--track-editor-bg-mod: #373737;\r\n\t\t\t--track-editor-bg-mod-dim: #131313;\r\n\t\t\t--multiplicative-mod-slider: #555;\r\n\t\t\t--overwriting-mod-slider: #464545;\r\n\t\t\t--indicator-primary: #e0e0e0;\r\n\t\t\t--indicator-secondary: #404040;\r\n\t\t\t--select2-opt-group: #3c3b3b;\r\n\t\t\t--input-box-outline: #757575;\r\n\t\t\t--mute-button-normal: #8e8d8d;\r\n\t\t\t--mute-button-mod: #ddd;\r\n\t\t\t--mod-label-primary: #262526;\r\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\r\n\t\t\t--mod-label-primary-text: #b9b9b9;\r\n\t\t\t--pitch-secondary-channel-hue: 240;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\r\n\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 25;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 240;\r\n\t\t\t--pitch-primary-channel-hue-scale: 228;\r\n\t\t\t--pitch-primary-channel-sat: 80;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 60.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 240;\r\n\t\t\t--pitch-secondary-note-hue-scale: 228;\r\n\t\t\t--pitch-secondary-note-sat: 73.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 32;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 240;\r\n\t\t\t--pitch-primary-note-hue-scale: 228;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 80.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 160;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 160;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 160;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 62;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 30;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 62;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 62;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 34;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 62;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t}\r\n\t`,\r\n\t\t\"microbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000000;\r\n\t\t\t\t\t--editor-background: #000000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #93B6AD;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(47,255,250,0.99);\r\n\t\t\t\t\t--box-selection-fill: #03B068;\r\n\t\t\t\t\t--loop-accent: #FF0061;\r\n\t\t\t\t\t--link-accent: #FFC800;\r\n\t\t\t\t\t--ui-widget-background: #38554E;\r\n\t\t\t\t\t--ui-widget-focus: #2A7E69;\r\n\t\t\t\t\t--pitch-background: #281F23;\r\n\t\t\t\t\t--tonic: #004634;\r\n\t\t\t\t\t--fifth-note: #463400;\r\n\t\t\t\t\t--white-piano-key: #edc;\r\n\t\t\t\t\t--black-piano-key: #456;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #333333;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-noise: #463400;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-mod: #004634;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #000000;\r\n\t\t\t\t\t--multiplicative-mod-slider: #FFC800;\r\n\t\t\t\t\t--overwriting-mod-slider: #00ffc0;\r\n\t\t\t\t\t--indicator-primary: #333333;\r\n\t\t\t\t\t--indicator-secondary: #00ffc0;\r\n\t\t\t\t\t--select2-opt-group: #2B2B2B;\r\n\t\t\t\t\t--input-box-outline: #69BFC6;\r\n\t\t\t\t\t--mute-button-normal: #00ffc0;\r\n\t\t\t\t\t--mute-button-mod: #FFC800;\r\n\t\t\t\t\t--mod-label-primary: #38554E;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(0, 43, 45);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t`,\r\n\t\t\"jummbox light\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #fefdff;\r\n\t\t\t\t\t--editor-background: #fefdff;\r\n\t\t\t\t\t--hover-preview: #302880;\r\n\t\t\t\t\t--playhead: rgba(62, 32, 120, 0.9);\r\n\t\t\t\t\t--primary-text: #401890;\r\n\t\t\t\t\t--secondary-text: #8769af;\r\n\t\t\t\t\t--inverted-text: #fefdff;\r\n\t\t\t\t\t--text-selection: rgba(255,160,235,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\r\n\t\t\t\t\t--loop-accent: #4c35d4;\r\n\t\t\t\t\t--link-accent: #7af;\r\n\t\t\t\t\t--ui-widget-background: #bf9cec;\r\n\t\t\t\t\t--ui-widget-focus: #e9c4ff;\r\n\t\t\t\t\t--pitch-background: #e2d9f9;\r\n\t\t\t\t\t--tonic: #c288cc;\r\n\t\t\t\t\t--fifth-note: #d8c9fd;\r\n\t\t\t\t\t--white-piano-key: #e2e2ff;\r\n\t\t\t\t\t--black-piano-key: #66667a;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #d9e5ec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\r\n\t\t\t\t\t--track-editor-bg-noise: #ffc3ae;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\r\n\t\t\t\t\t--track-editor-bg-mod: #c9accc;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\r\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t\t\t--indicator-secondary: #bbd4ec;\r\n\t\t\t\t\t--select2-opt-group: #c1b7f1;\r\n\t\t\t\t\t--input-box-outline: #bbb;\r\n\t\t\t\t\t--mute-button-normal: #e9b752;\r\n\t\t\t\t\t--mute-button-mod: #9558ee;\r\n\t\t\t\t\t--mod-label-primary: #ececff;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\r\n\t\t\t\t\t--mod-label-primary-text: #302880;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 53.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 72;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 97;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 45.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 95;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 43.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 100;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t};\r\n\r\n\tpublic static readonly pageMargin: string = \"var(--page-margin)\";\r\n\tpublic static readonly editorBackground: string = \"var(--editor-background)\";\r\n\tpublic static readonly hoverPreview: string = \"var(--hover-preview)\";\r\n\tpublic static readonly playhead: string = \"var(--playhead)\";\r\n\tpublic static readonly primaryText: string = \"var(--primary-text)\";\r\n\tpublic static readonly secondaryText: string = \"var(--secondary-text)\";\r\n\tpublic static readonly invertedText: string = \"var(--inverted-text)\";\r\n\tpublic static readonly textSelection: string = \"var(--text-selection)\";\r\n\tpublic static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\r\n\tpublic static readonly loopAccent: string = \"var(--loop-accent)\";\r\n\tpublic static readonly linkAccent: string = \"var(--link-accent)\";\r\n\tpublic static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\r\n\tpublic static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\r\n\tpublic static readonly pitchBackground: string = \"var(--pitch-background)\";\r\n\tpublic static readonly tonic: string = \"var(--tonic)\";\r\n\tpublic static readonly fifthNote: string = \"var(--fifth-note)\";\r\n\tpublic static readonly whitePianoKey: string = \"var(--white-piano-key)\";\r\n\tpublic static readonly blackPianoKey: string = \"var(--black-piano-key)\";\r\n\tpublic static readonly useColorFormula: string = \"var(--use-color-formula)\";\r\n\tpublic static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\r\n\tpublic static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\r\n\tpublic static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\r\n\tpublic static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\r\n\tpublic static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\r\n\tpublic static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\r\n\tpublic static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\r\n\tpublic static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\r\n\tpublic static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\r\n\tpublic static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\r\n\tpublic static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\r\n\tpublic static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\r\n\tpublic static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\r\n\tpublic static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\r\n\tpublic static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\r\n\tpublic static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\r\n\tpublic static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\r\n\tpublic static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\r\n\tpublic static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\r\n\tpublic static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\r\n\tpublic static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\r\n\tpublic static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\r\n\tpublic static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\r\n\tpublic static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\r\n\tpublic static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\r\n\tpublic static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\r\n\tpublic static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\r\n\tpublic static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\r\n\tpublic static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\r\n\tpublic static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\r\n\tpublic static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\r\n\tpublic static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\r\n\tpublic static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\r\n\tpublic static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\r\n\tpublic static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\r\n\tpublic static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\r\n\tpublic static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\r\n\tpublic static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\r\n\tpublic static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\r\n\tpublic static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\r\n\tpublic static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\r\n\tpublic static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\r\n\tpublic static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\r\n\tpublic static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\r\n\tpublic static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\r\n\tpublic static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\r\n\tpublic static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\r\n\tpublic static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\r\n\tpublic static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\r\n\tpublic static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\r\n\tpublic static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\r\n\tpublic static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\r\n\tpublic static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\r\n\tpublic static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\r\n\tpublic static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\r\n\tpublic static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\r\n\tpublic static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\r\n\tpublic static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\r\n\tpublic static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\r\n\tpublic static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\r\n\tpublic static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\r\n\tpublic static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\r\n\tpublic static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\r\n\tpublic static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\r\n\tpublic static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\r\n\tpublic static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\r\n\tpublic static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\r\n\tpublic static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\r\n\tpublic static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\r\n\tpublic static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\r\n\tpublic static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\r\n\tpublic static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\r\n\r\n\tpublic static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"pitch1\", // cyan\r\n\t\t\tsecondaryChannel: \"var(--pitch1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch2\", // yellow\r\n\t\t\tsecondaryChannel: \"var(--pitch2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch3\", // orange\r\n\t\t\tsecondaryChannel: \"var(--pitch3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch4\", // green\r\n\t\t\tsecondaryChannel: \"var(--pitch4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch4-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch5\", // purple\r\n\t\t\tsecondaryChannel: \"var(--pitch5-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch5-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch5-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch5-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch6\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch6-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch6-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch6-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch6-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch7\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch7-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch7-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch7-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch7-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch8\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch8-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch8-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch8-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch8-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch9\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch9-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch9-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch9-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch9-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch10\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch10-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch10-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch10-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch10-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"noise1\", // gray\r\n\t\t\tsecondaryChannel: \"var(--noise1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise2\", // brown\r\n\t\t\tsecondaryChannel: \"var(--noise2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise3\", // azure\r\n\t\t\tsecondaryChannel: \"var(--noise3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise4\",\r\n\t\t\tsecondaryChannel: \"var(--noise4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"mod1\",\r\n\t\t\tsecondaryChannel: \"var(--mod1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod2\",\r\n\t\t\tsecondaryChannel: \"var(--mod2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod3\",\r\n\t\t\tsecondaryChannel: \"var(--mod3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod4\",\r\n\t\t\tsecondaryChannel: \"var(--mod4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static resetColors() {\r\n\t\tthis.colorLookup.clear();\r\n\t}\r\n\r\n\t// Same as below, but won't return var colors\r\n\tpublic static getComputedChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\tlet base: ChannelColors = ColorConfig.getChannelColor(song, channel);\r\n\t\t\t// Trim away \"var(...)\"\r\n\t\t\tvar regex = /\\(([^)]+)\\)/;\r\n\t\t\tlet newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\treturn <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ColorConfig.getChannelColor(song, channel);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic static getChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\t// Set colors, not defined by formula\r\n\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\treturn ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length];\r\n\t\t\t} else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\treturn ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length];\r\n\t\t\t} else {\r\n\t\t\t\treturn ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Determine if color is cached\r\n\t\t\tif (ColorConfig.colorLookup.has(channel)) {\r\n\t\t\t\treturn ColorConfig.colorLookup.get(channel) as ChannelColors;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Formulaic color definition\r\n\t\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\t\t// Pitch formula\r\n\t\t\t\t\tconst pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n\t\t\t\t\tconst pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\t\t// Noise formula\r\n\t\t\t\t\tconst noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n\t\t\t\t\tconst noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n\t\t\t\t\tconst noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n\t\t\t\t\tconst noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n\t\t\t\t\tconst noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n\t\t\t\t\tconst noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n\t\t\t\t\tconst noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n\t\t\t\t\tconst noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Mod formula\r\n\t\t\t\t\tconst modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n\t\t\t\t\tconst modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n\t\t\t\t\tconst modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n\t\t\t\t\tconst modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n\t\t\t\t\tconst modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n\t\t\t\t\tconst modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n\t\t\t\t\tconst modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n\t\t\t\t\tconst modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n\t\t\t\t\tconst modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n\t\t\t\t\tconst modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n\t\t\t\t\tconst modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n\t\t\t\t\tconst modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n\t\t\t\t\tconst modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setTheme(name: string): void {\r\n\t\tthis._styleElement.textContent = this.themes[name];\r\n\t\tconst themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\r\n\t\tif (themeColor != null) {\r\n\t\t\tthemeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\r\n\t\t}\r\n\r\n\t\tthis.resetColors();\r\n\t}\r\n\r\n\tpublic static getComputed(name: string): string {\r\n\t\treturn getComputedStyle(this._styleElement).getPropertyValue(name);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\n// Determine if the user's browser/OS adds scrollbars that occupy space.\r\n// See: https://www.filamentgroup.com/lab/scrollbars/\r\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({ style: \"width:30px; height:30px; overflow: auto;\" },\r\n\tHTML.div({ style: \"width:100%;height:40px\" }),\r\n));\r\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\r\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\r\n}\r\ndocument.body.removeChild(scrollBarTest);\r\n\r\n\r\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\r\n\r\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\r\n:root {\r\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -8 L -4 8 L 9 0 z\" fill=\"gray\"/></svg>');\r\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-4\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/><rect x=\"5\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/></svg>');\r\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\r\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\r\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\r\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\r\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\r\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\r\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\r\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\r\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\r\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t</g> \\\r\n\t\t</svg>');\r\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\r\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -6 L -6 -8 L 0 -2  L 6 -8 L 8 -6 L 2 0 L 8 6 L 6 8 L 0 2 L -6 8 L -8 6 L -2 0 z\"/></svg>');\r\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\r\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"membrane\"> \\\r\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\r\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\r\n\t\t</svg>');\r\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\r\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n  --mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\r\n\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n}\r\n\r\n\r\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\r\n\tscrollbar-width: thin;\r\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\r\n\twidth: 12px;\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\r\n\tbackground: ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\r\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\tborder: 3px solid ${ColorConfig.editorBackground};\r\n}\r\n\r\n@-moz-document url-prefix() {\r\n\t.muteButtonText {\r\n\t\ttransform: translate(3px, 1px) !important;\r\n\t}\r\n}\r\n\r\n.beepboxEditor {\r\n\tdisplay: grid;\r\n    grid-template-columns: minmax(0, 1fr) max-content;\r\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n    grid-template-areas: \"pattern-area settings-area\" \"track-area settings-area\";\r\n\tgrid-column-gap: 6px;\r\n\tgrid-row-gap: 6px;\r\n\tposition: relative;\r\n\ttouch-action: manipulation;\r\n\tcursor: default;\r\n\tfont-size: small;\r\n\toverflow: hidden;\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tbackground: ${ColorConfig.editorBackground};\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.2s ease-in;\r\n    -moz-transition: opacity 0.2s ease-in;\r\n    -o-transition: opacity 0.2s ease-in;\r\n    -ms-transition: opacity 0.2s ease-in;\r\n    transition: opacity 0.2s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.pattern-area {\r\n     opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.15s;\r\n}\r\n\r\n.editor-song-settings {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.35s;\r\n}\r\n\r\n.instrument-settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.45s;\r\n}\r\n\r\n.trackAndMuteContainer {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.4s;\r\n}\r\n\r\n.barScrollBar {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.5s;\r\n}\r\n\r\n\r\n\r\n.load {\r\n    opacity: 1;\r\n}\r\n\r\n.beepboxEditor .noSelection {\r\n\t-webkit-touch-callout: none;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n}\r\n\r\n.beepboxEditor div {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n.beepboxEditor .pattern-area {\r\n\tgrid-area: pattern-area;\r\n\theight: 481px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n}\r\n\r\n.beepboxEditor .track-area {\r\n\tgrid-area: track-area;\r\n}\r\n\r\n.beepboxEditor .settings-area {\r\n\tgrid-area: settings-area;\r\n\tdisplay: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: min-content min-content min-content min-content min-content;\r\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\r\n\tgrid-column-gap: 6px;\r\n}\r\n\r\n.beepboxEditor .version-area{ grid-area: version-area; }\r\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\r\n.beepboxEditor .menu-area{ grid-area: menu-area; }\r\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\r\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\r\n\r\n.beepboxEditor .tip {\r\n\tcursor: help;\r\n}\r\n\r\n.beepboxEditor .tip:hover {\r\n\tcolor: ${ColorConfig.linkAccent};\r\n\ttext-decoration: underline;\r\n}\r\n.beepboxEditor .tip:active {\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor .volume-speaker {\r\n\tflex-shrink: 0;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: ${ColorConfig.secondaryText};\r\n\t-webkit-mask-image: var(--volume-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--volume-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .drum-button {\r\n\tflex: 1;\r\n\tbackground-color: transparent;\r\n\tbackground-image: var(--drum-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n}\r\n\r\n.beepboxEditor .modulator-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .modulator-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--mod-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 102%;\r\n}\r\n\r\n.beepboxEditor .piano-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .piano-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--piano-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 115.38%;\r\n}\r\n.beepboxEditor .piano-button.disabled::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 0;\r\n\twidth: 70%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .customize-instrument {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .customize-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--customize-dial-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--customize-dial-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.file::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--file-page-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--file-page-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.edit::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--edit-pencil-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--edit-pencil-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.preferences::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--preferences-gear-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--preferences-gear-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .mute-button {\r\n\tbackground: transparent;\r\n\tborder: none;\r\n  padding-right: 0px;\r\n  padding-left: 0px;\r\n  box-shadow: none;\r\n}\r\n\r\n.beepboxEditor .mute-button:focus {\r\n  background: transparent;\r\n\tborder: none;\r\n}\r\n\r\n.beepboxEditor .mute-button::before {\r\n\tcontent: \"\";\r\n\tpointer-events: none;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: inline-block;\r\n  background: var(--mute-button-normal);\r\n\t-webkit-mask-image: var(--unmuted-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\t-webkit-mask-size: cover;\r\n  mask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\tmask-size: cover;\r\n  mask-image: var(--unmuted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute::before {\r\n  background: var(--mute-button-mod);\r\n}\r\n\r\n\r\n.beepboxEditor .promptContainer {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .promptContainer::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\topacity: 0.5;\r\n\tdisplay: flex;\r\n}\r\n\r\n.beepboxEditor .prompt {\r\n\tmargin: auto;\r\n\ttext-align: center;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\tborder-radius: 15px;\r\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tpadding: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\r\n}\r\n\r\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\r\n\tmargin-top: 1.5em;\r\n}\r\n\r\n.beepboxEditor .prompt h2 {\r\n\tfont-size: 2em;\r\n\tmargin: 0 16px;\r\n\tfont-weight: normal;\r\n}\r\n\r\n.beepboxEditor .prompt p {\r\n\ttext-align: left;\r\n\tmargin: 1em 0;\r\n}\r\n\r\n.beepboxEditor .selectContainer {\r\n\tposition: relative;\r\n}\r\n.beepboxEditor .selectContainer:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 1.1em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--select-arrows-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--select-arrows-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor .selectContainer.menu::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--menu-down-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--menu-down-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor select {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n  height: auto;\r\n}\r\n\r\n.select2-container {\r\n  width: -moz-available !important;\r\n  width: -webkit-fill-available !important;\r\n}\r\n\r\n.select2-container--default .select2-selection--single{\r\n  border-radius: 0px;\r\n  border: 0px;\r\n  background-color: transparent;\r\n  outline: none;\r\n}\r\n\r\n.select2-selection__rendered:not(.menu)::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\ttop: 0.4em;\r\n\tborder-bottom: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\tbottom: 0.4em;\r\n\tborder-top: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit !important;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.select2-selection__arrow b{\r\n    display:none !important;\r\n}\r\n\r\n.select2-selection__rendered--focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.select2-search__field {\r\n    background: ${ColorConfig.uiWidgetBackground};\r\n    color: inherit !important;\r\n    font-size: small;\r\n    font-family: inherit;\r\n    border: 0px !important;\r\n    padding: 1px !important;\r\n}\r\n.select2-dropdown {\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 0;\r\n    font-size: small;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    background-color: ${ColorConfig.uiWidgetFocus};\r\n}\r\n\r\n.select2-container--default .select2-results>.select2-results__options {\r\n    max-height: 430px;\r\n    overflow-x: hidden;\r\n}\r\n.select2-container--default .select2-results__group {\r\n    cursor: default;\r\n    display: block;\r\n    padding: 1px;\r\n    background: ${ColorConfig.select2OptGroup};\r\n}\r\n.select2-results__option {\r\n    padding: 2px;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n.select2-container--default .select2-results__option .select2-results__option {\r\n    padding-left: 0.1em;\r\n}\r\n.select2-container--default .select2-results__option[aria-selected=true] {\r\n  background-color: transparent !important;\r\n}\r\n\r\n.beepboxEditor .menu select {\r\n\tpadding: 0 2em;\r\n}\r\n.beepboxEditor select:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.beepboxEditor .menu select {\r\n\ttext-align: center;\r\n\ttext-align-last: center;\r\n}\r\n.beepboxEditor .settings-area select {\r\n       width: 100%;\r\n}\r\n\r\n/* This makes it look better in firefox on my computer... What about others?\r\n@-moz-document url-prefix() {\r\n\t.beepboxEditor select { padding: 0 2px; }\r\n}\r\n*/\r\n.beepboxEditor button {\r\n\tmargin: 0;\r\n\tposition: relative;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor button:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n\r\n.beepboxEditor button.cancelButton {\r\n\tfloat: right;\r\n\twidth: 2em;\r\n\tposition: absolute;\r\n\ttop: 8px;\r\n\tright: 8px;\r\n}\r\n\r\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\r\n\tpadding-left: 2em;\r\n}\r\n.beepboxEditor button.playButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--play-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--play-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.pauseButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--pause-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--pause-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.prevBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--prev-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--prev-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.nextBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--next-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--next-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.cancelButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor button.okayButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--checkmark-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--checkmark-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.exportButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--export-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--export-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n\tdisplay: block;\r\n  cursor: crosshair;\r\n}\r\n\r\n@keyframes dash-animation {\r\n  to {\r\n    stroke-dashoffset: -100;\r\n  }\r\n}\r\n\r\n.beepboxEditor .dash-move {\r\n  animation: dash-animation 20s infinite linear;\r\n}\r\n\r\n.beepboxEditor .trackContainer {\r\n\toverflow-x: hidden;\r\n\tflex-grow: 1;\r\n}\r\n\r\n.beepboxEditor .trackAndMuteContainer {\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n}\r\n\r\n.beepboxEditor .muteEditor {\r\n\theight: 128px;\r\n\twidth: 32px;\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n}\r\n\r\n.beepboxEditor .selectRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n}\r\n\r\n.beepboxEditor .tip {\r\n\tcolor: ${ColorConfig.secondaryText};\r\n}\r\n\r\n.beepboxEditor .selectRow > :nth-child(2) {\r\n\twidth: 61.5%;\r\n}\r\n\r\n.beepboxEditor .operatorRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .operatorRow > * {\r\n\tflex-grow: 1;\r\n\tflex-shrink: 1;\r\n}\r\n\r\n.beepboxEditor .menu-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n.beepboxEditor .menu-area > * {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .menu-area > button {\r\n\tpadding: 0 2em;\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.beepboxEditor .song-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-controls {\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .instrument-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\r\n\tfont-size: inherit;\r\n\tfont-weight: inherit;\r\n\tfont-family: inherit;\r\n\tbackground: transparent;\r\n\ttext-align: center;\r\n\tborder: 1px solid ${ColorConfig.inputBoxOutline};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\r\n\tbackground-color: ${ColorConfig.textSelection};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=checkbox] {\r\n  transform: scale(1.5);\r\n}\r\n\r\n.beepboxEditor input[type=range] {\r\n\t-webkit-appearance: none;\r\n\tcolor: inherit;\r\n\twidth: 100%;\r\n\theight: 2em;\r\n\tfont-size: inherit;\r\n\tmargin: 0;\r\n\tcursor: pointer;\r\n\tbackground-color: ${ColorConfig.editorBackground};\r\n\ttouch-action: pan-y;\r\n  position: relative;\r\n}\r\n.beepboxEditor input[type=range]:focus {\r\n\toutline: none;\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n\r\n.beepboxEditor span.midTick:after {\r\n    content: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: currentColor;\r\n    width: 2%;\r\n    left: 49%;\r\n    height: 0.5em;\r\n    top: 32%;\r\n    z-index: 1;\r\n\t\tpointer-events: none;\r\n}\r\n.beepboxEditor span.modSlider {\r\n\t--mod-position: 20%;\r\n\t--mod-color: ${ColorConfig.overwritingModSlider};\r\n  --mod-border-radius: 0%;\r\n}\r\n.beepboxEditor span.modSlider:before {\r\n\tcontent: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: var(--mod-color);\r\n    width: 4%;\r\n    left: var(--mod-position);\r\n    height: 0.8em;\r\n    top: 28%;\r\n    z-index: 2;\r\n\t\ttransform: translate(-50%, 0%);\r\n\t\tpointer-events: none;\r\n\t\tborder: 40%;\r\n\t\tborder-radius: var(--mod-border-radius);\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n\t-webkit-appearance: none;\r\n\tmargin-top: -0.75em;\r\n}\r\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n.beepboxEditor input[type=range]:focus::-moz-range-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tborder: none;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor input[type=range]::-ms-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tborder-color: transparent;\r\n}\r\n.beepboxEditor input[type=range]:focus::-ms-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-ms-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor .hintButton {\r\n\tborder: 1px solid currentColor;\r\n\tborder-radius: 50%;\r\n\ttext-decoration: none;\r\n\twidth: 1em;\r\n\theight: 1em;\r\n\ttext-align: center;\r\n\tmargin-left: auto;\r\n\tmargin-right: .4em;\r\n\tcursor: pointer;\r\n}\r\n\r\nli.select2-results__option[role=group] > strong:hover {\r\n  background-color: #516fbb;\r\n}\r\n\r\n/* wide screen */\r\n@media (min-width: 701px) {\r\n\t#beepboxEditorContainer {\r\n\t\tdisplay: table;\r\n\t}\r\n\t.beepboxEditor {\r\n\t\tflex-direction: row;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\t.beepboxEditor .trackAndMuteContainer {\r\n\t\twidth: 512px;\r\n\t}\r\n\t.beepboxEditor .trackSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n    .beepboxEditor .muteButtonSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t\talign-items: center;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton {\r\n\t\tflex-grow: 1;\r\n\t\tmargin-left: 10px;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\twidth: 14em;\r\n\t}\r\n}\r\n\r\n/* narrow screen */\r\n@media (max-width: 700px) {\r\n\t.beepboxEditor {\r\n\t\tgrid-template-columns: minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content 6px min-content min-content;\r\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\r\n\t\tgrid-row-gap: 0;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\r\n\t\tgrid-template-areas:\r\n\t\t\t\"play-pause-area play-pause-area\"\r\n\t\t\t\"menu-area instrument-settings-area\"\r\n\t\t\t\"song-settings-area instrument-settings-area\"\r\n\t\t\t\"version-area version-area\";\r\n\t\tgrid-column-gap: 8px;\r\n\t\tmargin: 0 4px;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: none;\r\n\t}\r\n\t.beepboxEditor .pattern-area {\r\n\t\tmax-height: 75vh;\r\n\t}\r\n\t.beepboxEditor .trackContainer {\r\n\t\toverflow-x: auto;\r\n\t}\r\n\t.beepboxEditor .barScrollBar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t\r\n\t.beepboxEditor .soundIcon {\r\n\t  background: ${ColorConfig.editorBackground};\r\n\t  display: inline-block;\r\n\t  height: 10px;\r\n\t  margin-left: 0px;\r\n\t  margin-top: 8px;\r\n\t\tposition: relative;\r\n\t\twidth: 10px;\r\n\t}\r\n\t.beepboxEditor .soundIcon:before {\r\n\t  border-bottom: 6px solid transparent;\r\n\t  border-top: 6px solid transparent;\r\n\t  border-right: 10px solid ${ColorConfig.editorBackground};\r\n\t  content: \"\";\r\n\t  height: 10px;\r\n\t  left: 6px;\r\n\t  position: absolute;\r\n\t  top: -6px;\r\n\t  width: 0;\r\n\t}\r\n}\r\n\r\n`));\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\r\ninterface NumberArray {\r\n\tlength: number;\r\n\t[index: number]: number;\r\n}\r\n\r\n// A basic FFT operation scales the overall magnitude of elements by the\r\n// square root of the length of the array, √N. Performing a forward FFT and\r\n// then an inverse FFT results in the original array, but multiplied by N.\r\n// This helper function can be used to compensate for that. \r\nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tarray[i] *= factor;\r\n\t}\r\n}\r\n\r\nfunction isPowerOf2(n: number): boolean {\r\n\treturn !!n && !(n & (n - 1));\r\n}\r\n\r\nfunction countBits(n: number): number {\r\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\treturn Math.round(Math.log(n) / Math.log(2));\r\n}\r\n\r\n// Rearranges the elements of the array, swapping the element at an index\r\n// with an element at an index that is the bitwise reverse of the first\r\n// index in base 2. Useful for computing the FFT.\r\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\r\n\tconst bitCount: number = countBits(fullArrayLength);\r\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\r\n\tconst finalShift: number = 16 - bitCount;\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\r\n\t\tlet j: number;\r\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\r\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\r\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\r\n\t\tj = ((j >> 8) | ((j & 0xff) << 8)) >> finalShift;\r\n\t\tif (j > i) {\r\n\t\t\tlet temp: number = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Provided for educational purposes. Easier to read than\r\n// fastFourierTransform(), but computes the same result.\r\n// Takes two parallel arrays representing the real and imaginary elements,\r\n// respectively, and returns an array containing two new arrays, which\r\n// contain the complex result of the transform.\r\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\tconst realOut: number[] = [];\r\n\tconst imagOut: number[] = [];\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\trealOut[i] = 0.0;\r\n\t\timagOut[i] = 0.0;\r\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\r\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\r\n\t\t\tconst c: number = Math.cos(radians);\r\n\t\t\tconst s: number = Math.sin(radians);\r\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\r\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\r\n\t\t}\r\n\t}\r\n\treturn [realOut, imagOut];\r\n}\r\n\r\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\r\n// input real and imaginary arrays. Can be used for both forward and inverse\r\n// transforms: swap the order of the arguments for the inverse.\r\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\r\n\treverseIndexBits(realArray, fullArrayLength);\r\n\treverseIndexBits(imagArray, fullArrayLength);\r\n\r\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\r\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\r\n\t\tconst startIndex1: number = startIndex + 1;\r\n\t\tconst startIndex2: number = startIndex + 2;\r\n\t\tconst startIndex3: number = startIndex + 3;\r\n\t\tconst real0: number = realArray[startIndex];\r\n\t\tconst real1: number = realArray[startIndex1];\r\n\t\tconst real2: number = realArray[startIndex2];\r\n\t\tconst real3: number = realArray[startIndex3];\r\n\t\tconst imag0: number = imagArray[startIndex];\r\n\t\tconst imag1: number = imagArray[startIndex1];\r\n\t\tconst imag2: number = imagArray[startIndex2];\r\n\t\tconst imag3: number = imagArray[startIndex3];\r\n\t\tconst realTemp0: number = real0 + real1;\r\n\t\tconst realTemp1: number = real0 - real1;\r\n\t\tconst realTemp2: number = real2 + real3;\r\n\t\tconst realTemp3: number = real2 - real3;\r\n\t\tconst imagTemp0: number = imag0 + imag1;\r\n\t\tconst imagTemp1: number = imag0 - imag1;\r\n\t\tconst imagTemp2: number = imag2 + imag3;\r\n\t\tconst imagTemp3: number = imag2 - imag3;\r\n\t\trealArray[startIndex] = realTemp0 + realTemp2;\r\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\r\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\r\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\r\n\t\timagArray[startIndex] = imagTemp0 + imagTemp2;\r\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\r\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\r\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\r\n\t}\r\n\r\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\r\n\t\tconst halfLength: number = stride >>> 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tlet c: number = 1.0;\r\n\t\t\tlet s: number = 0.0;\r\n\t\t\tlet cPrev: number = cosIncrement;\r\n\t\t\tlet sPrev: number = sinIncrement;\r\n\t\t\tconst secondHalf: number = startIndex + halfLength;\r\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\r\n\t\t\t\tconst j: number = i + halfLength;\r\n\t\t\t\tconst real0: number = realArray[i];\r\n\t\t\t\tconst imag0: number = imagArray[i];\r\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\r\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\r\n\t\t\t\trealArray[i] = real0 + real1;\r\n\t\t\t\timagArray[i] = imag0 + imag1;\r\n\t\t\t\trealArray[j] = real0 - real1;\r\n\t\t\t\timagArray[j] = imag0 - imag1;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the Fourier transform from an array of real-valued time-domain\r\n// samples. The output is specially formatted for space efficieny: elements\r\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\r\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\r\n// descending frequency. Overwrites the input array.\r\nexport function forwardRealFourierTransform(array: NumberArray): void {\r\n\tconst fullArrayLength: number = array.length;\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n\r\n\t// First and second pass.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\t// no imaginary elements yet since the input is fully real.\r\n\t\tconst tempA: number = real0 + real1;\r\n\t\tconst tempB: number = real2 + real3;\r\n\t\tarray[index] = tempA + tempB;\r\n\t\tarray[index1] = real0 - real1;\r\n\t\tarray[index2] = tempA - tempB;\r\n\t\tarray[index3] = real2 - real3;\r\n\t}\r\n\r\n\t// Third pass.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst imag3: number = array[index3];\r\n\t\tconst real4: number = array[index4];\r\n\t\tconst real5: number = array[index5];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\r\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\r\n\t\tarray[index] = real0 + real4;\r\n\t\tarray[index1] = real1 + tempA;\r\n\t\tarray[index3] = real1 - tempA;\r\n\t\tarray[index4] = real0 - real4;\r\n\t\tarray[index5] = tempB - imag3;\r\n\t\tarray[index7] = tempB + imag3;\r\n\t}\r\n\r\n\t// Handle remaining passes.\r\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst realStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + realStartB;\r\n\t\t\tarray[startIndexB] = realStartA - realStartB;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst imag0: number = array[indexA1];\r\n\t\t\t\tconst real1: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\r\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\r\n\t\t\t\tarray[indexA0] = real0 + tempA;\r\n\t\t\t\tarray[indexA1] = real0 - tempA;\r\n\t\t\t\tarray[indexB0] = -imag0 - tempB;\r\n\t\t\t\tarray[indexB1] = imag0 - tempB;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the inverse Fourier transform from a specially formatted array of\r\n// scalar values. Elements 0 through N/2 are expected to be the real values of\r\n// the corresponding complex elements, representing cosine wave amplitudes in\r\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\r\n// imaginary values, representing sine wave amplitudes in descending frequency.\r\n// Generates real-valued time-domain samples. Overwrites the input array.\r\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\t// Perform all but the last few passes in reverse.\r\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst imagStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\r\n\t\t\tarray[midIndexA] *= 2;\r\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\r\n\t\t\tarray[midIndexB] *= 2;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst real1: number = array[indexA1];\r\n\t\t\t\tconst imag0: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real0 - real1;\r\n\t\t\t\tconst tempB: number = imag0 + imag1;\r\n\t\t\t\tarray[indexA0] = real0 + real1;\r\n\t\t\t\tarray[indexA1] = imag1 - imag0;\r\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\r\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t// Commented out this block (and compensated with an extra pass above)\r\n\t// because it's slower in my testing so far.\r\n\t// Pass with stride 8.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index6: number = index + 6;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\tconst imag4: number = array[index4];\r\n\t\tconst imag5: number = array[index5];\r\n\t\tconst imag6: number = array[index6];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = real1 - real3;\r\n\t\tconst tempB: number = imag5 + imag7;\r\n\t\tarray[index ] = real0 + imag4;\r\n\t\tarray[index1] = real1 + real3;\r\n\t\tarray[index2] = real2 * 2;\r\n\t\tarray[index3] = imag7 - imag5;\r\n\t\tarray[index4] = real0 - imag4;\r\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\r\n\t\tarray[index6] = imag6 * 2;\r\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\r\n\t}\r\n\t*/\r\n\t// The final passes with strides 4 and 2, combined into one loop.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1] * 2;\r\n\t\tconst imag2: number = array[index2];\r\n\t\tconst imag3: number = array[index3] * 2;\r\n\t\tconst tempA: number = real0 + imag2;\r\n\t\tconst tempB: number = real0 - imag2;\r\n\t\tarray[index] = tempA + real1;\r\n\t\tarray[index1] = tempA - real1;\r\n\t\tarray[index2] = tempB + imag3;\r\n\t\tarray[index3] = tempB - imag3;\r\n\t}\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Deque<T> {\r\n\tprivate _capacity: number = 1;\r\n\tprivate _buffer: Array<T | undefined> = [undefined];\r\n\tprivate _mask: number = 0;\r\n\tprivate _offset: number = 0;\r\n\tprivate _count: number = 0;\r\n\r\n\tpublic pushFront(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._offset = (this._offset - 1) & this._mask;\r\n\t\tthis._buffer[this._offset] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic pushBack(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic popFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tconst element: T = <T>this._buffer[this._offset];\r\n\t\tthis._buffer[this._offset] = undefined;\r\n\t\tthis._offset = (this._offset + 1) & this._mask;\r\n\t\tthis._count--;\r\n\t\treturn element;\r\n\t}\r\n\tpublic popBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tthis._count--;\r\n\t\tconst index: number = (this._offset + this._count) & this._mask;\r\n\t\tconst element: T = <T>this._buffer[index];\r\n\t\tthis._buffer[index] = undefined;\r\n\t\treturn element;\r\n\t}\r\n\tpublic peakFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[this._offset];\r\n\t}\r\n\tpublic peakBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\r\n\t}\r\n\tpublic count(): number {\r\n\t\treturn this._count;\r\n\t}\r\n\tpublic set(index: number, element: T): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\r\n\t}\r\n\tpublic get(index: number): T {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\r\n\t}\r\n\tpublic remove(index: number): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tif (index <= (this._count >> 1)) {\r\n\t\t\twhile (index > 0) {\r\n\t\t\t\tthis.set(index, this.get(index - 1));\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t\tthis.popFront();\r\n\t\t} else {\r\n\t\t\tindex++;\r\n\t\t\twhile (index < this._count) {\r\n\t\t\t\tthis.set(index - 1, this.get(index));\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\tthis.popBack();\r\n\t\t}\r\n\t}\r\n\tprivate _expandCapacity(): void {\r\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\r\n\t\tthis._capacity = this._capacity << 1;\r\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\r\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\r\n\t\tconst size: number = this._count | 0;\r\n\t\tconst offset: number = this._offset | 0;\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\r\n\t\t}\r\n\t\tfor (let i = size; i < this._capacity; i++) {\r\n\t\t\tnewBuffer[i] = undefined;\r\n\t\t}\r\n\t\tthis._offset = 0;\r\n\t\tthis._buffer = newBuffer;\r\n\t\tthis._mask = this._capacity - 1;\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex } from \"./SynthConfig\";\r\nimport { EditorConfig } from \"../editor/EditorConfig\";\r\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\r\nimport { Deque } from \"./Deque\";\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tAudioContext: any;\r\n\t\twebkitAudioContext: any;\r\n\t}\r\n}\r\n\r\n//namespace beepbox {\r\n// For performance debugging:\r\n//let samplesAccumulated: number = 0;\r\n//let samplePerformance: number = 0;\r\n\r\nconst enum CharCode {\r\n\tSPACE = 32,\r\n\tHASH = 35,\r\n\tPERCENT = 37,\r\n\tAMPERSAND = 38,\r\n\tPLUS = 43,\r\n\tDASH = 45,\r\n\tDOT = 46,\r\n\tNUM_0 = 48,\r\n\tNUM_1 = 49,\r\n\tNUM_2 = 50,\r\n\tNUM_3 = 51,\r\n\tNUM_4 = 52,\r\n\tNUM_5 = 53,\r\n\tNUM_6 = 54,\r\n\tNUM_7 = 55,\r\n\tNUM_8 = 56,\r\n\tNUM_9 = 57,\r\n\tEQUALS = 61,\r\n\tA = 65,\r\n\tB = 66,\r\n\tC = 67,\r\n\tD = 68,\r\n\tE = 69,\r\n\tF = 70,\r\n\tG = 71,\r\n\tH = 72,\r\n\tI = 73,\r\n\tJ = 74,\r\n\tK = 75,\r\n\tL = 76,\r\n\tM = 77,\r\n\tN = 78,\r\n\tO = 79,\r\n\tP = 80,\r\n\tQ = 81,\r\n\tR = 82,\r\n\tS = 83,\r\n\tT = 84,\r\n\tU = 85,\r\n\tV = 86,\r\n\tW = 87,\r\n\tX = 88,\r\n\tY = 89,\r\n\tZ = 90,\r\n\tUNDERSCORE = 95,\r\n\ta = 97,\r\n\tb = 98,\r\n\tc = 99,\r\n\td = 100,\r\n\te = 101,\r\n\tf = 102,\r\n\tg = 103,\r\n\th = 104,\r\n\ti = 105,\r\n\tj = 106,\r\n\tk = 107,\r\n\tl = 108,\r\n\tm = 109,\r\n\tn = 110,\r\n\to = 111,\r\n\tp = 112,\r\n\tq = 113,\r\n\tr = 114,\r\n\ts = 115,\r\n\tt = 116,\r\n\tu = 117,\r\n\tv = 118,\r\n\tw = 119,\r\n\tx = 120,\r\n\ty = 121,\r\n\tz = 122,\r\n\tLEFT_CURLY_BRACE = 123,\r\n\tRIGHT_CURLY_BRACE = 125,\r\n}\r\n\r\nconst enum SongTagCode {\r\n\tbeatCount = CharCode.a,\r\n\tbars = CharCode.b,\r\n\tvibrato = CharCode.c,\r\n\ttransition = CharCode.d,\r\n\tloopEnd = CharCode.e,\r\n\tfilterCutoff = CharCode.f,\r\n\tbarCount = CharCode.g,\r\n\tinterval = CharCode.h,\r\n\tinstrumentCount = CharCode.i,\r\n\tpatternCount = CharCode.j,\r\n\tkey = CharCode.k,\r\n\tloopStart = CharCode.l,\r\n\treverb = CharCode.m,\r\n\tchannelCount = CharCode.n,\r\n\tchannelOctave = CharCode.o,\r\n\tpatterns = CharCode.p,\r\n\teffects = CharCode.q,\r\n\trhythm = CharCode.r,\r\n\tscale = CharCode.s,\r\n\ttempo = CharCode.t,\r\n\tpreset = CharCode.u,\r\n\tvolume = CharCode.v,\r\n\twave = CharCode.w,\r\n\r\n\tfilterResonance = CharCode.y,\r\n\tfilterEnvelope = CharCode.z,\r\n\talgorithm = CharCode.A,\r\n\tfeedbackAmplitude = CharCode.B,\r\n\tchord = CharCode.C,\r\n\tdetune = CharCode.D,\r\n\toperatorEnvelopes = CharCode.E,\r\n\tfeedbackType = CharCode.F,\r\n\tarpeggioSpeed = CharCode.G,\r\n\tharmonics = CharCode.H,\r\n\r\n\tsquareDuty = CharCode.K,\r\n\tpanning = CharCode.L,\r\n\tcustomChipWave = CharCode.M,\r\n\tsongTitle = CharCode.N,\r\n\tlimiterSettings = CharCode.O,\r\n\toperatorAmplitudes = CharCode.P,\r\n\toperatorFrequencies = CharCode.Q,\r\n\r\n\tspectrum = CharCode.S,\r\n\tstartInstrument = CharCode.T,\r\n\tchannelNames = CharCode.U,\r\n\tfeedbackEnvelope = CharCode.V,\r\n\tpulseWidth = CharCode.W,\r\n\tedo = CharCode.X,\r\n}\r\n\r\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\r\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\r\n\r\nclass BitFieldReader {\r\n\tprivate _bits: number[] = [];\r\n\tprivate _readIndex: number = 0;\r\n\r\n\tconstructor(source: string, startIndex: number, stopIndex: number) {\r\n\t\tfor (let i: number = startIndex; i < stopIndex; i++) {\r\n\t\t\tconst value: number = base64CharCodeToInt[source.charCodeAt(i)];\r\n\t\t\tthis._bits.push((value >> 5) & 0x1);\r\n\t\t\tthis._bits.push((value >> 4) & 0x1);\r\n\t\t\tthis._bits.push((value >> 3) & 0x1);\r\n\t\t\tthis._bits.push((value >> 2) & 0x1);\r\n\t\t\tthis._bits.push((value >> 1) & 0x1);\r\n\t\t\tthis._bits.push(value & 0x1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic read(bitCount: number): number {\r\n\t\tlet result: number = 0;\r\n\t\twhile (bitCount > 0) {\r\n\t\t\tresult = result << 1;\r\n\t\t\tresult += this._bits[this._readIndex++];\r\n\t\t\tbitCount--;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readLongTail(minValue: number, minBits: number): number {\r\n\t\tlet result: number = minValue;\r\n\t\tlet numBits: number = minBits;\r\n\t\twhile (this._bits[this._readIndex++]) {\r\n\t\t\tresult += 1 << numBits;\r\n\t\t\tnumBits++;\r\n\t\t}\r\n\t\twhile (numBits > 0) {\r\n\t\t\tnumBits--;\r\n\t\t\tif (this._bits[this._readIndex++]) {\r\n\t\t\t\tresult += 1 << numBits;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readPartDuration(): number {\r\n\t\treturn this.readLongTail(1, 3);\r\n\t}\r\n\r\n\tpublic readLegacyPartDuration(): number {\r\n\t\treturn this.readLongTail(1, 2);\r\n\t}\r\n\r\n\tpublic readPinCount(): number {\r\n\t\treturn this.readLongTail(1, 0);\r\n\t}\r\n\r\n\tpublic readPitchInterval(): number {\r\n\t\tif (this.read(1)) {\r\n\t\t\treturn -this.readLongTail(1, 3);\r\n\t\t} else {\r\n\t\t\treturn this.readLongTail(1, 3);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass BitFieldWriter {\r\n\tprivate _index: number = 0;\r\n\tprivate _bits: number[] = [];\r\n\r\n\tpublic clear() {\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic write(bitCount: number, value: number): void {\r\n\t\tbitCount--;\r\n\t\twhile (bitCount >= 0) {\r\n\t\t\tthis._bits[this._index++] = (value >>> bitCount) & 1;\r\n\t\t\tbitCount--;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeLongTail(minValue: number, minBits: number, value: number): void {\r\n\t\tif (value < minValue) throw new Error(\"value out of bounds\");\r\n\t\tvalue -= minValue;\r\n\t\tlet numBits: number = minBits;\r\n\t\twhile (value >= (1 << numBits)) {\r\n\t\t\tthis._bits[this._index++] = 1;\r\n\t\t\tvalue -= 1 << numBits;\r\n\t\t\tnumBits++;\r\n\t\t}\r\n\t\tthis._bits[this._index++] = 0;\r\n\t\twhile (numBits > 0) {\r\n\t\t\tnumBits--;\r\n\t\t\tthis._bits[this._index++] = (value >>> numBits) & 1;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writePartDuration(value: number): void {\r\n\t\tthis.writeLongTail(1, 3, value);\r\n\t}\r\n\r\n\tpublic writePinCount(value: number): void {\r\n\t\tthis.writeLongTail(1, 0, value);\r\n\t}\r\n\r\n\tpublic writePitchInterval(value: number): void {\r\n\t\tif (value < 0) {\r\n\t\t\tthis.write(1, 1); // sign\r\n\t\t\tthis.writeLongTail(1, 3, -value);\r\n\t\t} else {\r\n\t\t\tthis.write(1, 0); // sign\r\n\t\t\tthis.writeLongTail(1, 3, value);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic concat(other: BitFieldWriter): void {\r\n\t\tfor (let i: number = 0; i < other._index; i++) {\r\n\t\t\tthis._bits[this._index++] = other._bits[i];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic encodeBase64(buffer: number[]): number[] {\r\n\r\n\t\tfor (let i: number = 0; i < this._index; i += 6) {\r\n\t\t\tconst value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\r\n\t\t\tbuffer.push(base64IntToCharCode[value]);\r\n\t\t}\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic lengthBase64(): number {\r\n\t\treturn Math.ceil(this._index / 6);\r\n\t}\r\n}\r\n\r\nexport interface NotePin {\r\n\tinterval: number;\r\n\ttime: number;\r\n\tvolume: number;\r\n}\r\n\r\nexport function makeNotePin(interval: number, time: number, volume: number): NotePin {\r\n\treturn { interval: interval, time: time, volume: volume };\r\n}\r\n\r\nfunction clamp(min: number, max: number, val: number): number {\r\n\tmax = max - 1;\r\n\tif (val <= max) {\r\n\t\tif (val >= min) return val;\r\n\t\telse return min;\r\n\t} else {\r\n\t\treturn max;\r\n\t}\r\n}\r\n\r\nfunction validateRange(min: number, max: number, val: number): number {\r\n\tif (min <= val && val <= max) return val;\r\n\tthrow new Error(`Value ${val} not in range [${min}, ${max}]`);\r\n}\r\n\r\nexport class Note {\r\n\tpublic pitches: number[];\r\n\tpublic pins: NotePin[];\r\n\tpublic start: number;\r\n\tpublic end: number;\r\n\r\n\tpublic constructor(pitch: number, start: number, end: number, volume: number, fadeout: boolean = false) {\r\n\t\tthis.pitches = [pitch];\r\n\t\tthis.pins = [makeNotePin(0, 0, volume), makeNotePin(0, end - start, fadeout ? 0 : volume)];\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\t}\r\n\r\n\tpublic pickMainInterval(): number {\r\n\t\tlet longestFlatIntervalDuration: number = 0;\r\n\t\tlet mainInterval: number = 0;\r\n\t\tfor (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\r\n\t\t\tconst pinA: NotePin = this.pins[pinIndex - 1];\r\n\t\t\tconst pinB: NotePin = this.pins[pinIndex];\r\n\t\t\tif (pinA.interval == pinB.interval) {\r\n\t\t\t\tconst duration: number = pinB.time - pinA.time;\r\n\t\t\t\tif (longestFlatIntervalDuration < duration) {\r\n\t\t\t\t\tlongestFlatIntervalDuration = duration;\r\n\t\t\t\t\tmainInterval = pinA.interval;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (longestFlatIntervalDuration == 0) {\r\n\t\t\tlet loudestVolume: number = 0;\r\n\t\t\tfor (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\r\n\t\t\t\tconst pin: NotePin = this.pins[pinIndex];\r\n\t\t\t\tif (loudestVolume < pin.volume) {\r\n\t\t\t\t\tloudestVolume = pin.volume;\r\n\t\t\t\t\tmainInterval = pin.interval;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mainInterval;\r\n\t}\r\n\r\n\tpublic clone(): Note {\r\n\t\tconst newNote: Note = new Note(-1, this.start, this.end, 6);\r\n\t\tnewNote.pitches = this.pitches.concat();\r\n\t\tnewNote.pins = [];\r\n\t\tfor (const pin of this.pins) {\r\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n\t\t}\r\n\t\treturn newNote;\r\n\t}\r\n}\r\n\r\nexport class Pattern {\r\n\tpublic notes: Note[] = [];\r\n\tpublic instrument: number = 0;\r\n\r\n\tpublic cloneNotes(): Note[] {\r\n\t\tconst result: Note[] = [];\r\n\t\tfor (const note of this.notes) {\r\n\t\t\tresult.push(note.clone());\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic reset(): void {\r\n\t\tthis.notes.length = 0;\r\n\t\tthis.instrument = 0;\r\n\t}\r\n}\r\n\r\nexport class Operator {\r\n\tpublic frequency: number = 0;\r\n\tpublic amplitude: number = 0;\r\n\tpublic envelope: number = 0;\r\n\r\n\tconstructor(index: number) {\r\n\t\tthis.reset(index);\r\n\t}\r\n\r\n\tpublic reset(index: number): void {\r\n\t\tthis.frequency = 0;\r\n\t\tthis.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\r\n\t\tthis.envelope = (index == 0) ? 0 : 1;\r\n\t}\r\n\r\n\tpublic copy(other: Operator): void {\r\n\t\tthis.frequency = other.frequency;\r\n\t\tthis.amplitude = other.amplitude;\r\n\t\tthis.envelope = other.envelope;\r\n\t}\r\n}\r\n\r\nexport class SpectrumWave {\r\n\tpublic spectrum: number[] = [];\r\n\tprivate _wave: Float32Array | null = null;\r\n\tprivate _waveIsReady: boolean = false;\r\n\r\n\tconstructor(isNoiseChannel: boolean) {\r\n\t\tthis.reset(isNoiseChannel);\r\n\t}\r\n\r\n\tpublic reset(isNoiseChannel: boolean): void {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tthis.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\r\n\t\t\t} else {\r\n\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\r\n\t\t\t\tthis.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic markCustomWaveDirty(): void {\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic getCustomWave(lowestOctave: number): Float32Array {\r\n\t\tif (!this._waveIsReady || this._wave == null) {\r\n\t\t\tlet waveLength: number = Config.chipNoiseLength;\r\n\r\n\t\t\tif (this._wave == null || this._wave.length != waveLength + 1) {\r\n\t\t\t\tthis._wave = new Float32Array(waveLength + 1);\r\n\t\t\t}\r\n\t\t\tconst wave: Float32Array = this._wave;\r\n\r\n\t\t\tfor (let i: number = 0; i < waveLength; i++) {\r\n\t\t\t\twave[i] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst highestOctave: number = 14;\r\n\t\t\tconst falloffRatio: number = 0.25;\r\n\t\t\t// Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\r\n\t\t\tconst pitchTweak: number[] = [0, 1 / 7, Math.log(5 / 4) / Math.LN2, 3 / 7, Math.log(3 / 2) / Math.LN2, 5 / 7, 6 / 7];\r\n\t\t\tfunction controlPointToOctave(point: number): number {\r\n\t\t\t\treturn lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\r\n\t\t\t}\r\n\r\n\t\t\tlet combinedAmplitude: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\r\n\t\t\t\tconst value1: number = (i <= 0) ? 0 : this.spectrum[i - 1];\r\n\t\t\t\tconst value2: number = (i >= Config.spectrumControlPoints) ? this.spectrum[Config.spectrumControlPoints - 1] : this.spectrum[i];\r\n\t\t\t\tconst octave1: number = controlPointToOctave(i - 1);\r\n\t\t\t\tlet octave2: number = controlPointToOctave(i);\r\n\t\t\t\tif (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\r\n\t\t\t\tif (value1 == 0 && value2 == 0) continue;\r\n\r\n\t\t\t\tcombinedAmplitude += 0.02 * drawNoiseSpectrum(wave, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\r\n\t\t\t}\r\n\t\t\tif (this.spectrum[Config.spectrumControlPoints - 1] > 0) {\r\n\t\t\t\tcombinedAmplitude += 0.02 * drawNoiseSpectrum(wave, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, this.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\r\n\t\t\t}\r\n\r\n\t\t\tinverseRealFourierTransform(wave, waveLength);\r\n\t\t\tscaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\r\n\r\n\t\t\t// Duplicate the first sample at the end for easier wrap-around interpolation.\r\n\t\t\twave[waveLength] = wave[0];\r\n\r\n\t\t\tthis._waveIsReady = true;\r\n\t\t}\r\n\t\treturn this._wave;\r\n\t}\r\n}\r\n\r\nexport class HarmonicsWave {\r\n\tpublic harmonics: number[] = [];\r\n\tprivate _wave: Float32Array | null = null;\r\n\tprivate _waveIsReady: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tpublic reset(): void {\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\tthis.harmonics[i] = 0;\r\n\t\t}\r\n\t\tthis.harmonics[0] = Config.harmonicsMax;\r\n\t\tthis.harmonics[3] = Config.harmonicsMax;\r\n\t\tthis.harmonics[6] = Config.harmonicsMax;\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic markCustomWaveDirty(): void {\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic getCustomWave(): Float32Array {\r\n\t\tif (!this._waveIsReady || this._wave == null) {\r\n\t\t\tlet waveLength: number = Config.harmonicsWavelength;\r\n\t\t\tconst retroWave: Float32Array = getDrumWave(0);\r\n\r\n\t\t\tif (this._wave == null || this._wave.length != waveLength + 1) {\r\n\t\t\t\tthis._wave = new Float32Array(waveLength + 1);\r\n\t\t\t}\r\n\t\t\tconst wave: Float32Array = this._wave;\r\n\r\n\t\t\tfor (let i: number = 0; i < waveLength; i++) {\r\n\t\t\t\twave[i] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst overallSlope: number = -0.25;\r\n\t\t\tlet combinedControlPointAmplitude: number = 1;\r\n\r\n\t\t\tfor (let harmonicIndex: number = 0; harmonicIndex < Config.harmonicsRendered; harmonicIndex++) {\r\n\t\t\t\tconst harmonicFreq: number = harmonicIndex + 1;\r\n\t\t\t\tlet controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? this.harmonics[harmonicIndex] : this.harmonics[Config.harmonicsControlPoints - 1];\r\n\t\t\t\tif (harmonicIndex >= Config.harmonicsControlPoints) {\r\n\t\t\t\t\tcontrolValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (Config.harmonicsRendered - Config.harmonicsControlPoints);\r\n\t\t\t\t}\r\n\t\t\t\tconst normalizedValue: number = controlValue / Config.harmonicsMax;\r\n\t\t\t\tlet amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\r\n\t\t\t\tif (harmonicIndex < Config.harmonicsControlPoints) {\r\n\t\t\t\t\tcombinedControlPointAmplitude += amplitude;\r\n\t\t\t\t}\r\n\t\t\t\tamplitude *= Math.pow(harmonicFreq, overallSlope);\r\n\r\n\t\t\t\t// Multiple all the sine wave amplitudes by 1 or -1 based on the LFSR\r\n\t\t\t\t// retro wave (effectively random) to avoid egregiously tall spikes.\r\n\t\t\t\tamplitude *= retroWave[harmonicIndex + 589];\r\n\r\n\t\t\t\twave[waveLength - harmonicFreq] = amplitude;\r\n\t\t\t}\r\n\r\n\t\t\tinverseRealFourierTransform(wave, waveLength);\r\n\r\n\t\t\t// Limit the maximum wave amplitude.\r\n\t\t\tconst mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = wave[i] * mult;\r\n\t\t\t\twave[i] = cumulative;\r\n\t\t\t}\r\n\t\t\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\t\t\twave[waveLength] = wave[0];\r\n\r\n\t\t\tthis._waveIsReady = true;\r\n\t\t}\r\n\t\treturn this._wave;\r\n\t}\r\n}\r\n\r\nexport class Instrument {\r\n\tpublic type: InstrumentType = InstrumentType.chip;\r\n\tpublic preset: number = 0;\r\n\tpublic chipWave: number = 2;\r\n\tpublic chipNoise: number = 1;\r\n\tpublic filterCutoff: number = 12;\r\n\tpublic filterResonance: number = 0;\r\n\tpublic filterEnvelope: number = 1;\r\n\tpublic transition: number = 1;\r\n\tpublic vibrato: number = 0;\r\n\tpublic vibratoDepth: number = 0;\r\n\tpublic vibratoSpeed: number = 10;\r\n\tpublic vibratoDelay: number = 0;\r\n\tpublic vibratoType: number = 0;\r\n\tpublic interval: number = 0;\r\n\tpublic effects: number = 0;\r\n\tpublic chord: number = 1;\r\n\tpublic volume: number = 0;\r\n\tpublic pan: number = Config.panCenter;\r\n\tpublic panDelay: number = 10;\r\n\tpublic arpeggioSpeed: number = 12;\r\n\tpublic fastTwoNoteArp: boolean = false;\r\n\tpublic tieNoteTransition: boolean = false;\r\n\tpublic clicklessTransition: boolean = false;\r\n\tpublic detune: number = 0;\r\n\tpublic pulseWidth: number = Config.pulseWidthRange;\r\n\tpublic pulseEnvelope: number = 1;\r\n\tpublic algorithm: number = 0;\r\n\tpublic feedbackType: number = 0;\r\n\tpublic feedbackAmplitude: number = 0;\r\n\tpublic feedbackEnvelope: number = 1;\r\n\tpublic LFOtime: number = 0;\r\n\tpublic nextLFOtime: number = 0;\r\n\tpublic arpTime: number = 0;\r\n\tpublic customChipWave: Float64Array = new Float64Array(64);\r\n\tpublic customChipWaveIntegral: Float64Array = new Float64Array(65); // One extra element for wrap-around in chipSynth.\r\n\tpublic readonly operators: Operator[] = [];\r\n\tpublic readonly spectrumWave: SpectrumWave;\r\n\tpublic readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\r\n\tpublic readonly drumsetEnvelopes: number[] = [];\r\n\tpublic readonly drumsetSpectrumWaves: SpectrumWave[] = [];\r\n\tpublic modChannels: number[] = [];\r\n\tpublic modStatuses: ModStatus[] = [];\r\n\tpublic modInstruments: number[] = [];\r\n\tpublic modSettings: ModSetting[] = [];\r\n\r\n\tconstructor(isNoiseChannel: boolean, isModChannel: boolean) {\r\n\r\n\t\tif (isModChannel) {\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tthis.modChannels.push(0);\r\n\t\t\t\tthis.modStatuses.push(ModStatus.msNone);\r\n\t\t\t\tthis.modInstruments.push(0);\r\n\t\t\t\tthis.modSettings.push(ModSetting.mstNone);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.spectrumWave = new SpectrumWave(isNoiseChannel);\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis.operators[i] = new Operator(i);\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tthis.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\tthis.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < 64; i++) {\r\n\t\t\tthis.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\r\n\t\t}\r\n\r\n\t\tlet sum: number = 0.0;\r\n\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\tsum += this.customChipWave[i];\r\n\t\t}\r\n\t\tconst average: number = sum / this.customChipWave.length;\r\n\r\n\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\tlet cumulative: number = 0;\r\n\t\tlet wavePrev: number = 0;\r\n\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\tcumulative += wavePrev;\r\n\t\t\twavePrev = this.customChipWave[i] - average;\r\n\t\t\tthis.customChipWaveIntegral[i] = cumulative;\r\n\t\t}\r\n\r\n\t\t// 65th, last sample is for anti-aliasing\r\n\t\tthis.customChipWaveIntegral[64] = 0.0;\r\n\r\n\t}\r\n\r\n\tpublic setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n\t\t// Mod channels are forced to one type.\r\n\t\tif (isModChannel) type = InstrumentType.mod;\r\n\t\tthis.type = type;\r\n\t\tthis.preset = type;\r\n\t\tthis.volume = 0;\r\n\t\tthis.pan = Config.panCenter;\r\n\t\tthis.panDelay = 10;\r\n\t\tthis.arpeggioSpeed = 12;\r\n\t\tthis.detune = 0;\r\n\t\tthis.tieNoteTransition = false;\r\n\t\tthis.clicklessTransition = false;\r\n\t\tswitch (type) {\r\n\t\t\tcase InstrumentType.chip:\r\n\t\t\t\tthis.chipWave = 2;\r\n\t\t\t\tthis.filterCutoff = 6;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.customChipWave:\r\n\t\t\t\tthis.chipWave = 2;\r\n\t\t\t\tthis.filterCutoff = 6;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t\t\tthis.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet sum: number = 0.0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tsum += this.customChipWave[i];\r\n\t\t\t\t}\r\n\t\t\t\tconst average: number = sum / this.customChipWave.length;\r\n\r\n\t\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\t\tlet cumulative: number = 0;\r\n\t\t\t\tlet wavePrev: number = 0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\t\twavePrev = this.customChipWave[i] - average;\r\n\t\t\t\t\tthis.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.customChipWaveIntegral[64] = 0.0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.fm:\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 3;\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = 1;\r\n\t\t\t\tthis.algorithm = 0;\r\n\t\t\t\tthis.feedbackType = 0;\r\n\t\t\t\tthis.feedbackAmplitude = 0;\r\n\t\t\t\tthis.feedbackEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tfor (let i: number = 0; i < this.operators.length; i++) {\r\n\t\t\t\t\tthis.operators[i].reset(i);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.noise:\r\n\t\t\t\tthis.chipNoise = 1;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.effects = 0;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.spectrum:\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 0;\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.spectrumWave.reset(isNoiseChannel);\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.drumset:\r\n\t\t\t\tthis.effects = 0;\r\n\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\tthis.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\t\t\tif (this.drumsetSpectrumWaves[i] == undefined) {\r\n\t\t\t\t\t\tthis.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.drumsetSpectrumWaves[i].reset(isNoiseChannel);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.harmonics:\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 0;\r\n\t\t\t\tthis.harmonicsWave.reset();\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.pwm:\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange;\r\n\t\t\t\tthis.pulseEnvelope = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.mod:\r\n\t\t\t\tthis.transition = 0;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 0;\r\n\t\t\t\tthis.chord = 0;\r\n\t\t\t\tthis.modChannels = [];\r\n\t\t\t\tthis.modStatuses = [];\r\n\t\t\t\tthis.modInstruments = [];\r\n\t\t\t\tthis.modSettings = [];\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tthis.modChannels.push(0);\r\n\t\t\t\t\tthis.modStatuses.push(ModStatus.msNone);\r\n\t\t\t\t\tthis.modInstruments.push(0);\r\n\t\t\t\t\tthis.modSettings.push(ModSetting.mstNone);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unrecognized instrument type: \" + type);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toJsonObject(): Object {\r\n\t\tconst instrumentObject: any = {\r\n\t\t\t\"type\": Config.instrumentTypeNames[this.type],\r\n\t\t\t\"volume\": this.volume,\r\n\t\t\t\"pan\": (this.pan - Config.panCenter) * 100 / Config.panCenter,\r\n\t\t\t\"panDelay\": this.panDelay,\r\n\t\t\t\"arpeggioSpeed\": this.arpeggioSpeed,\r\n\t\t\t\"fastTwoNoteArp\": this.fastTwoNoteArp,\r\n\t\t\t\"tieNoteTransition\": this.tieNoteTransition,\r\n\t\t\t\"clicklessTransition\": this.clicklessTransition,\r\n\t\t\t\"vibrato\": this.vibrato,\r\n\t\t\t\"vibratoDepth\": this.vibratoDepth,\r\n\t\t\t\"vibratoDelay\": this.vibratoDelay,\r\n\t\t\t\"vibratoSpeed\": this.vibratoSpeed,\r\n\t\t\t\"vibratoType\": this.vibratoType,\r\n\t\t\t\"detune\": this.detune,\r\n\t\t\t\"effects\": Config.effectsNames[this.effects],\r\n\t\t};\r\n\r\n\t\tif (this.preset != this.type) {\r\n\t\t\tinstrumentObject[\"preset\"] = this.preset;\r\n\t\t}\r\n\r\n\t\tif (this.type != InstrumentType.drumset) {\r\n\t\t\tinstrumentObject[\"transition\"] = Config.transitions[this.transition].name;\r\n\t\t\tinstrumentObject[\"chord\"] = this.getChord().name;\r\n\t\t\tinstrumentObject[\"filterCutoffHz\"] = Math.round(Config.filterCutoffMaxHz * Math.pow(2.0, this.getFilterCutoffOctaves()));\r\n\t\t\tinstrumentObject[\"filterResonance\"] = Math.round(100 * this.filterResonance / (Config.filterResonanceRange - 1));\r\n\t\t\tinstrumentObject[\"filterEnvelope\"] = this.getFilterEnvelope().name;\r\n\t\t}\r\n\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\tinstrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\tinstrumentObject[\"spectrum\"] = [];\r\n\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\tinstrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.drumset) {\r\n\t\t\tinstrumentObject[\"drums\"] = [];\r\n\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\tspectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\r\n\t\t\t\t}\r\n\t\t\t\tinstrumentObject[\"drums\"][j] = {\r\n\t\t\t\t\t\"filterEnvelope\": this.getDrumsetEnvelope(j).name,\r\n\t\t\t\t\t\"spectrum\": spectrum,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.chip) {\r\n\t\t\tinstrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n\t\t\tinstrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.customChipWave) {\r\n\t\t\tinstrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n\t\t\tinstrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t\tinstrumentObject[\"customChipWave\"] = new Float64Array(64);\r\n\t\t\tinstrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\r\n\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\tinstrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\r\n\t\t\t\t// Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\r\n\t\t\t\t//instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\r\n\t\t\t}\r\n\r\n\t\t\tinstrumentObject[\"customChipWaveIntegral\"][64] = 0;\r\n\t\t} else if (this.type == InstrumentType.pwm) {\r\n\t\t\tinstrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n\t\t\tinstrumentObject[\"pulseEnvelope\"] = Config.envelopes[this.pulseEnvelope].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.harmonics) {\r\n\t\t\tinstrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t\tinstrumentObject[\"harmonics\"] = [];\r\n\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\tinstrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.fm) {\r\n\t\t\tconst operatorArray: Object[] = [];\r\n\t\t\tfor (const operator of this.operators) {\r\n\t\t\t\toperatorArray.push({\r\n\t\t\t\t\t\"frequency\": Config.operatorFrequencies[operator.frequency].name,\r\n\t\t\t\t\t\"amplitude\": operator.amplitude,\r\n\t\t\t\t\t\"envelope\": Config.envelopes[operator.envelope].name,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t\tinstrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\r\n\t\t\tinstrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\r\n\t\t\tinstrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n\t\t\tinstrumentObject[\"feedbackEnvelope\"] = Config.envelopes[this.feedbackEnvelope].name;\r\n\t\t\tinstrumentObject[\"operators\"] = operatorArray;\r\n\t\t} else if (this.type == InstrumentType.mod) {\r\n\t\t\tinstrumentObject[\"modChannels\"] = [];\r\n\t\t\tinstrumentObject[\"modInstruments\"] = [];\r\n\t\t\tinstrumentObject[\"modSettings\"] = [];\r\n\t\t\tinstrumentObject[\"modStatuses\"] = [];\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tinstrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\r\n\t\t\t\tinstrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\r\n\t\t\t\tinstrumentObject[\"modSettings\"][mod] = this.modSettings[mod];\r\n\t\t\t\tinstrumentObject[\"modStatuses\"][mod] = this.modStatuses[mod];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized instrument type\");\r\n\t\t}\r\n\t\treturn instrumentObject;\r\n\t}\r\n\r\n\tpublic fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean): void {\r\n\t\tif (instrumentObject == undefined) instrumentObject = {};\r\n\r\n\t\tlet type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\r\n\t\tif (type.valueOf() == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\r\n\t\tthis.setTypeAndReset(type, isNoiseChannel, isModChannel);\r\n\r\n\t\tif (instrumentObject[\"preset\"] != undefined) {\r\n\t\t\tthis.preset = instrumentObject[\"preset\"] >>> 0;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"volume\"] != undefined) {\r\n\t\t\tthis.volume = clamp(-Config.volumeRange / 2, Config.volumeRange / 2, instrumentObject[\"volume\"] | 0);\r\n\t\t} else {\r\n\t\t\tthis.volume = 0;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"pan\"] != undefined) {\r\n\t\t\tthis.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\r\n\t\t} else {\r\n\t\t\tthis.pan = Config.panCenter;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"panDelay\"] != undefined) {\r\n\t\t\tthis.panDelay = (instrumentObject[\"panDelay\"] | 0);\r\n\t\t} else {\r\n\t\t\tthis.panDelay = 10;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"detune\"] != undefined) {\r\n\t\t\tthis.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.detune = 0;\r\n\t\t}\r\n\r\n\t\tconst oldTransitionNames: Dictionary<number> = { \"binary\": 0, \"sudden\": 1, \"smooth\": 2 };\r\n\t\tconst transitionObject = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so try that too.\r\n\t\tthis.transition = oldTransitionNames[transitionObject] != undefined ? oldTransitionNames[transitionObject] : Config.transitions.findIndex(transition => transition.name == transitionObject);\r\n\t\tif (this.transition == -1) this.transition = 1;\r\n\r\n\t\tthis.effects = Config.effectsNames.indexOf(instrumentObject[\"effects\"]);\r\n\t\tif (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\r\n\r\n\t\tif (instrumentObject[\"filterCutoffHz\"] != undefined) {\r\n\t\t\tthis.filterCutoff = clamp(0, Config.filterCutoffRange, Math.round((Config.filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / Config.filterCutoffMaxHz) / Math.LN2));\r\n\t\t} else {\r\n\t\t\tthis.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\r\n\t\t}\r\n\t\tif (instrumentObject[\"filterResonance\"] != undefined) {\r\n\t\t\tthis.filterResonance = clamp(0, Config.filterResonanceRange, Math.round((Config.filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.filterResonance = 0;\r\n\t\t}\r\n\t\tthis.filterEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"filterEnvelope\"]);\r\n\t\tif (this.filterEnvelope == -1) this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\r\n\t\tif (instrumentObject[\"filter\"] != undefined) {\r\n\t\t\tconst legacyToCutoff: number[] = [20, 12, 6, 0, 16, 10, 4];\r\n\t\t\tconst legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n\t\t\tconst filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n\t\t\tconst oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\r\n\t\t\tlet legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\r\n\t\t\tif (legacyFilter == -1) legacyFilter = 0;\r\n\t\t\tthis.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\tthis.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\tthis.filterResonance = 0;\r\n\t\t}\r\n\r\n\t\tconst legacyEffectNames: ReadonlyArray<string> = [\"none\", \"vibrato light\", \"vibrato delayed\", \"vibrato heavy\"];\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\tthis.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n\t\t\tif (this.chipNoise == -1) this.chipNoise = 1;\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 2;\r\n\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\tif (instrumentObject[\"spectrum\"] != undefined) {\r\n\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\tthis.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 0;\r\n\r\n\t\t} else if (this.type == InstrumentType.drumset) {\r\n\t\t\tif (instrumentObject[\"drums\"] != undefined) {\r\n\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\tconst drum: any = instrumentObject[\"drums\"][j];\r\n\t\t\t\t\tif (drum == undefined) continue;\r\n\r\n\t\t\t\t\tif (drum[\"filterEnvelope\"] != undefined) {\r\n\t\t\t\t\t\tthis.drumsetEnvelopes[j] = Config.envelopes.findIndex(envelope => envelope.name == drum[\"filterEnvelope\"]);\r\n\t\t\t\t\t\tif (this.drumsetEnvelopes[j] == -1) this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (drum[\"spectrum\"] != undefined) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\tthis.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.harmonics) {\r\n\t\t\tif (instrumentObject[\"harmonics\"] != undefined) {\r\n\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\tthis.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"interval\"] != undefined) {\r\n\t\t\t\tthis.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 0;\r\n\t\t} else if (this.type == InstrumentType.pwm) {\r\n\t\t\tif (instrumentObject[\"pulseWidth\"] != undefined) {\r\n\t\t\t\tthis.pulseWidth = clamp(0, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\r\n\t\t\t} else {\r\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"pulseEnvelope\"] != undefined) {\r\n\t\t\t\tthis.pulseEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"pulseEnvelope\"]);\r\n\t\t\t\tif (this.pulseEnvelope == -1) this.pulseEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 0;\r\n\t\t} else if (this.type == InstrumentType.chip) {\r\n\t\t\tconst legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\r\n\t\t\tthis.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n\t\t\tif (this.chipWave == -1) this.chipWave = 1;\r\n\r\n\t\t\tif (instrumentObject[\"interval\"] != undefined) {\r\n\t\t\t\tthis.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t} else if (instrumentObject[\"chorus\"] != undefined) {\r\n\t\t\t\tconst legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n\t\t\t\tthis.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t} else if (instrumentObject[\"effect\"] != undefined) {\r\n\t\t\t\tthis.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 2;\r\n\r\n\t\t\t// The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n\t\t\tif (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.chord = 3;\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.fm) {\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t} else if (instrumentObject[\"effect\"] != undefined) {\r\n\t\t\t\tthis.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 3;\r\n\r\n\t\t\tthis.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\r\n\t\t\tif (this.algorithm == -1) this.algorithm = 0;\r\n\t\t\tthis.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\r\n\t\t\tif (this.feedbackType == -1) this.feedbackType = 0;\r\n\t\t\tif (instrumentObject[\"feedbackAmplitude\"] != undefined) {\r\n\t\t\t\tthis.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\r\n\t\t\t} else {\r\n\t\t\t\tthis.feedbackAmplitude = 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst legacyEnvelopeNames: Dictionary<number> = { \"pluck 1\": 6, \"pluck 2\": 7, \"pluck 3\": 8 };\r\n\t\t\tthis.feedbackEnvelope = legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] != undefined ? legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"feedbackEnvelope\"]);\r\n\t\t\tif (this.feedbackEnvelope == -1) this.feedbackEnvelope = 0;\r\n\r\n\t\t\tfor (let j: number = 0; j < Config.operatorCount; j++) {\r\n\t\t\t\tconst operator: Operator = this.operators[j];\r\n\t\t\t\tlet operatorObject: any = undefined;\r\n\t\t\t\tif (instrumentObject[\"operators\"]) operatorObject = instrumentObject[\"operators\"][j];\r\n\t\t\t\tif (operatorObject == undefined) operatorObject = {};\r\n\r\n\t\t\t\toperator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\r\n\t\t\t\tif (operator.frequency == -1) operator.frequency = 0;\r\n\t\t\t\tif (operatorObject[\"amplitude\"] != undefined) {\r\n\t\t\t\t\toperator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\toperator.amplitude = 0;\r\n\t\t\t\t}\r\n\t\t\t\toperator.envelope = legacyEnvelopeNames[operatorObject[\"envelope\"]] != undefined ? legacyEnvelopeNames[operatorObject[\"envelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == operatorObject[\"envelope\"]);\r\n\t\t\t\tif (operator.envelope == -1) operator.envelope = 0;\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.customChipWave) {\r\n\t\t\tif (instrumentObject[\"interval\"] != undefined) {\r\n\t\t\t\tthis.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t} else if (instrumentObject[\"chorus\"] != undefined) {\r\n\t\t\t\tconst legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n\t\t\t\tthis.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t} else if (instrumentObject[\"effect\"] != undefined) {\r\n\t\t\t\tthis.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 2;\r\n\r\n\t\t\t// The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n\t\t\tif (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.chord = 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"customChipWave\"]) {\r\n\r\n\t\t\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t\t\tthis.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tlet sum: number = 0.0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tsum += this.customChipWave[i];\r\n\t\t\t\t}\r\n\t\t\t\tconst average: number = sum / this.customChipWave.length;\r\n\r\n\t\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\t\tlet cumulative: number = 0;\r\n\t\t\t\tlet wavePrev: number = 0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\t\twavePrev = this.customChipWave[i] - average;\r\n\t\t\t\t\tthis.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 65th, last sample is for anti-aliasing\r\n\t\t\t\tthis.customChipWaveIntegral[64] = 0.0;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.type == InstrumentType.mod) {\r\n\t\t\tif (instrumentObject[\"modChannels\"] != undefined) {\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tthis.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\r\n\t\t\t\t\tthis.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\r\n\t\t\t\t\tthis.modSettings[mod] = instrumentObject[\"modSettings\"][mod];\r\n\t\t\t\t\tthis.modStatuses[mod] = instrumentObject[\"modStatuses\"][mod];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized instrument type.\");\r\n\t\t}\r\n\r\n\t\tif (this.type != InstrumentType.mod) {\r\n\t\t\t// Arpeggio speed\r\n\t\t\tif (this.chord == 2 && instrumentObject[\"arpeggioSpeed\"] != undefined) {\r\n\t\t\t\tthis.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\r\n\t\t\t\tthis.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.fastTwoNoteArp = useFastTwoNoteArp;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"tieNoteTransition\"] != undefined) {\r\n\t\t\t\tthis.tieNoteTransition = instrumentObject[\"tieNoteTransition\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.tieNoteTransition = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"clicklessTransition\"] != undefined) {\r\n\t\t\t\tthis.clicklessTransition = instrumentObject[\"clicklessTransition\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.clicklessTransition = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// public static frequencyFromPitch(pitch: number, _centerFeq: number, _edo: number): number {\r\n\tpublic static frequencyFromPitch(pitch: number): number {\r\n\t\t// the pitch relative to 1, then offset by half number of octaves, so that center frequency is in the center.\r\n\t\t// return _centerFeq * Math.pow(2.0, pitch / _edo - Math.round(Config.pitchOctaves/2) );\r\n\t\treturn Config.centerFrequency * Math.pow(2.0, pitch / Config.pitchesPerOctave - Math.round(Config.pitchOctaves/2) );\r\n\t}\r\n\r\n\tpublic static drumsetIndexReferenceDelta(index: number): number { // this pretends that the song is 440hz 12edo for now\r\n\t\t// 44100 is common sampling frequency, 6 is the drum spacing interval needed to span from the spectrum Base Pitch to the max pitch (I think at least)\r\n\t\t// return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * (Config.pitchOctaves * _edo - Config.spectrumBasePitch) / Config.drumCount, 440, 12) / 44100;\r\n\t\t// return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * (8 * 12 - Config.spectrumBasePitch) / Config.drumCount, 440, 12) / 44100;\r\n\t\treturn Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * (8 * 12 - Config.spectrumBasePitch) / Config.drumCount) / 44100;\r\n\t}\r\n\r\n\tprivate static _drumsetIndexToSpectrumOctave(index: number) { // this pretends that the song is 440hz 12edo for now\r\n\t\t// 15 + (a negative (drumsetIndexReferenceDelta is less than 2^0)), I have no idea what 15 means here.\r\n\t\treturn 15 + Math.log(Instrument.drumsetIndexReferenceDelta(index)) / Math.LN2;\r\n\t}\r\n\r\n\tpublic warmUp(): void {\r\n\t\tthis.LFOtime = 0;\r\n\t\tthis.nextLFOtime = 0;\r\n\t\tthis.arpTime = 0;\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\tgetDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n\t\t} else if (this.type == InstrumentType.harmonics) {\r\n\t\t\tthis.harmonicsWave.getCustomWave();\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\tthis.spectrumWave.getCustomWave(8);\r\n\t\t} else if (this.type == InstrumentType.drumset) {\r\n\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\tthis.drumsetSpectrumWaves[i].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getDrumWave(): Float32Array {\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\treturn getDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\treturn this.spectrumWave.getCustomWave(8);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unhandled instrument type in getDrumWave\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getDrumsetWave(pitch: number): Float32Array {\r\n\t\tif (this.type == InstrumentType.drumset) {\r\n\t\t\treturn this.drumsetSpectrumWaves[pitch].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(pitch));\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unhandled instrument type in getDrumWave\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getTransition(): Transition {\r\n\t\treturn this.type == InstrumentType.drumset ? Config.transitions.dictionary[\"hard fade\"] :\r\n\t\t\tthis.type == InstrumentType.mod ? Config.transitions.dictionary[\"seamless\"] : Config.transitions[this.transition];\r\n\t}\r\n\tpublic getChord(): Chord {\r\n\t\treturn this.type == InstrumentType.drumset ? Config.chords.dictionary[\"harmony\"] : Config.chords[this.chord];\r\n\t}\r\n\tpublic getFilterCutoffOctaves(): number {\r\n\t\treturn this.type == InstrumentType.drumset ? 0 : (this.filterCutoff - (Config.filterCutoffRange - 1)) * 0.5;\r\n\t}\r\n\tpublic getFilterIsFirstOrder(): boolean {\r\n\t\treturn this.type == InstrumentType.drumset ? false : this.filterResonance == 0;\r\n\t}\r\n\tpublic getFilterResonance(): number {\r\n\t\treturn this.type == InstrumentType.drumset ? 1 : this.filterResonance;\r\n\t}\r\n\tpublic getFilterEnvelope(): Envelope {\r\n\t\tif (this.type == InstrumentType.drumset) throw new Error(\"Can't getFilterEnvelope() for drumset.\");\r\n\t\treturn Config.envelopes[this.filterEnvelope];\r\n\t}\r\n\tpublic getDrumsetEnvelope(pitch: number): Envelope {\r\n\t\tif (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\r\n\t\treturn Config.envelopes[this.drumsetEnvelopes[pitch]];\r\n\t}\r\n}\r\n\r\nexport enum ModStatus {\r\n\tmsForPitch = 0,\r\n\tmsForNoise = 1,\r\n\tmsForSong = 2,\r\n\tmsNone = 3,\r\n}\r\n\r\nexport enum ModSetting {\r\n\tmstNone = 0,\r\n\tmstSongVolume = 1,\r\n\tmstTempo = 2,\r\n\tmstReverb = 3,\r\n\tmstNextBar = 4,\r\n\tmstInsVolume = 5,\r\n\tmstPan = 6,\r\n\tmstFilterCut = 7,\r\n\tmstFilterPeak = 8,\r\n\tmstFMSlider1 = 9,\r\n\tmstFMSlider2 = 10,\r\n\tmstFMSlider3 = 11,\r\n\tmstFMSlider4 = 12,\r\n\tmstFMFeedback = 13,\r\n\tmstPulseWidth = 14,\r\n\tmstDetune = 15,\r\n\tmstVibratoDepth = 16,\r\n\tmstSongDetune = 17,\r\n\tmstVibratoSpeed = 18,\r\n\tmstVibratoDelay = 19,\r\n\tmstArpeggioSpeed = 20,\r\n\tmstPanDelay = 21,\r\n\tmstResetArpeggio = 22,\r\n\tmstMaxValue = 23,\r\n}\r\n\r\nexport class Channel {\r\n\tpublic octave: number = 0;\r\n\tpublic readonly instruments: Instrument[] = [];\r\n\tpublic readonly patterns: Pattern[] = [];\r\n\tpublic readonly bars: number[] = [];\r\n\tpublic muted: boolean = false;\r\n\tpublic name: string = \"\";\r\n}\r\n\r\nexport class Song {\r\n\tprivate static readonly _format: string = \"BeepBox\";\r\n\tprivate static readonly _oldestBeepboxVersion: number = 2;\r\n\tprivate static readonly _latestBeepboxVersion: number = 8;\r\n\tprivate static readonly _oldestJummBoxVersion: number = 1;\r\n\tprivate static readonly _latestJummBoxVersion: number = 4;\r\n\t// private static readonly _oldestMicroBoxVersion: number = 0;\r\n\t// private static readonly _latestMicroBoxVersion: number = 0;\r\n\t// One-character variant detection at the start of URL to distinguish variants such as JummBox.\r\n\tprivate static readonly _variant = 0x6A; // \"j\" ~ jummbox\r\n\t// private static readonly _variant = 0x6D; // \"m\" ~ microbox\r\n\r\n\tpublic title: string;\r\n\tpublic scale: number;\r\n\t// public key: number; // this is frequency offset for different edos (TODO)\r\n\tpublic key: number;\r\n\tpublic tempo: number;\r\n\tpublic reverb: number;\r\n\tpublic centerFrequency: number;\r\n\tpublic edo: number;\r\n\tpublic maxPitch: number;\r\n\tpublic beatsPerBar: number;\r\n\tpublic barCount: number;\r\n\tpublic patternsPerChannel: number;\r\n\tpublic rhythm: number;\r\n\tpublic instrumentsPerChannel: number;\r\n\tpublic loopStart: number;\r\n\tpublic loopLength: number;\r\n\tpublic pitchChannelCount: number;\r\n\tpublic noiseChannelCount: number;\r\n\tpublic modChannelCount: number;\r\n\tpublic readonly channels: Channel[] = [];\r\n\tpublic limitDecay: number = 4.0;\r\n\tpublic limitRise: number = 4000.0;\r\n\tpublic compressionThreshold: number = 1.0;\r\n\tpublic limitThreshold: number = 1.0;\r\n\tpublic compressionRatio: number = 1.0;\r\n\tpublic limitRatio: number = 1.0;\r\n\tpublic masterGain: number = 1.0;\r\n\tpublic inVolumeCap: number = 0.0;\r\n\tpublic outVolumeCap: number = 0.0;\r\n\r\n\t// Maximum value possible for the mod (total number of possible positions)\r\n\tpublic mstMaxVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n\t\t[ModSetting.mstNone, 6],\r\n\t\t[ModSetting.mstSongVolume, 100],\r\n\t\t[ModSetting.mstTempo, Config.tempoMax - Config.tempoMin],\r\n\t\t[ModSetting.mstReverb, Config.reverbRange - 1],\r\n\t\t[ModSetting.mstNextBar, 1],\r\n\t\t[ModSetting.mstInsVolume, Config.volumeRange],\r\n\t\t[ModSetting.mstPan, Config.panMax],\r\n\t\t[ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n\t\t[ModSetting.mstFilterPeak, Config.filterResonanceRange - 1],\r\n\t\t[ModSetting.mstFMSlider1, 15],\r\n\t\t[ModSetting.mstFMSlider2, 15],\r\n\t\t[ModSetting.mstFMSlider3, 15],\r\n\t\t[ModSetting.mstFMSlider4, 15],\r\n\t\t[ModSetting.mstFMFeedback, 15],\r\n\t\t[ModSetting.mstPulseWidth, Config.pulseWidthRange],\r\n\t\t[ModSetting.mstDetune, Config.detuneMax - Config.detuneMin],\r\n\t\t[ModSetting.mstVibratoDepth, 50],\r\n\t\t[ModSetting.mstSongDetune, Config.songDetuneMax - Config.songDetuneMin],\r\n\t\t[ModSetting.mstVibratoSpeed, 30],\r\n\t\t[ModSetting.mstVibratoDelay, 50],\r\n\t\t[ModSetting.mstArpeggioSpeed, 50],\r\n\t\t[ModSetting.mstPanDelay, 20],\r\n\t\t[ModSetting.mstResetArpeggio, 1],\r\n\t\t[ModSetting.mstMaxValue, 6],\r\n\t]\r\n\t);\r\n\r\n\t// When creating a new note, this is the value to set a mod note to (generally the most \"neutral\" value possible)\r\n\tpublic mstNewNoteVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n\t\t[ModSetting.mstNone, 6],\r\n\t\t[ModSetting.mstSongVolume, 100],\r\n\t\t[ModSetting.mstTempo, Math.ceil((Config.tempoMax - Config.tempoMin) / 2)],\r\n\t\t[ModSetting.mstReverb, 0],\r\n\t\t[ModSetting.mstNextBar, 1],\r\n\t\t[ModSetting.mstInsVolume, Math.ceil(Config.volumeRange / 2)],\r\n\t\t[ModSetting.mstPan, Math.ceil(Config.panMax / 2)],\r\n\t\t[ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n\t\t[ModSetting.mstFilterPeak, 0],\r\n\t\t[ModSetting.mstFMSlider1, 15],\r\n\t\t[ModSetting.mstFMSlider2, 15],\r\n\t\t[ModSetting.mstFMSlider3, 15],\r\n\t\t[ModSetting.mstFMSlider4, 15],\r\n\t\t[ModSetting.mstFMFeedback, 15],\r\n\t\t[ModSetting.mstPulseWidth, Math.ceil(Config.pulseWidthRange)],\r\n\t\t[ModSetting.mstDetune, Math.ceil((Config.detuneMax - Config.detuneMin) / 2)],\r\n\t\t[ModSetting.mstVibratoDepth, 0],\r\n\t\t[ModSetting.mstSongDetune, Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2)],\r\n\t\t[ModSetting.mstVibratoSpeed, 0],\r\n\t\t[ModSetting.mstVibratoDelay, 0],\r\n\t\t[ModSetting.mstArpeggioSpeed, 10],\r\n\t\t[ModSetting.mstPanDelay, 10],\r\n\t\t[ModSetting.mstResetArpeggio, 1],\r\n\t\t[ModSetting.mstMaxValue, 6],\r\n\t])\r\n\r\n\tconstructor(string?: string) {\r\n\t\tif (string != undefined) {\r\n\t\t\tthis.fromBase64String(string);\r\n\t\t} else {\r\n\t\t\tthis.initToDefault(true);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic modValueToReal(value: number, setting: ModSetting): number {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\tvalue += Config.tempoMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\tvalue -= Config.volumeRange / 2.0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\tvalue += Config.detuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\tvalue += Config.songDetuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\tcase ModSetting.mstNone:\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic isSettingForSong(setting: ModSetting): boolean {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\treturn true;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic realToModValue(value: number, setting: ModSetting): number {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\tvalue -= Config.tempoMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\tvalue += Config.volumeRange / 2.0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\tvalue -= Config.detuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\tvalue -= Config.songDetuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\tcase ModSetting.mstNone:\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t// Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\r\n\tpublic getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n\t\tif (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n\t\t\treturn 6;\r\n\t\telse {\r\n\t\t\t// Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n\t\t\tmodCount = Config.modCount - modCount - 1;\r\n\r\n\t\t\tlet cap: number | undefined = this.mstNewNoteVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n\r\n\t\t\t// For tempo, actually use user defined tempo\r\n\t\t\tif (this.channels[modChannel].instruments[modInstrument].modSettings[modCount] == ModSetting.mstTempo) {\r\n\t\t\t\tcap = this.realToModValue(this.tempo, ModSetting.mstTempo);\r\n\t\t\t}\r\n\r\n\t\t\tif (cap != undefined)\r\n\t\t\t\treturn cap;\r\n\t\t\telse\r\n\t\t\t\treturn 6;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n\t\tif (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n\t\t\treturn 6;\r\n\t\telse {\r\n\t\t\t// Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n\t\t\tmodCount = Config.modCount - modCount - 1;\r\n\r\n\t\t\tlet cap: number | undefined = this.mstMaxVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n\t\t\tif (cap != undefined)\r\n\t\t\t\treturn cap;\r\n\t\t\telse\r\n\t\t\t\treturn 6;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getVolumeCapForSetting = (isMod: boolean, modSetting: ModSetting): number => {\r\n\t\tif (!isMod)\r\n\t\t\treturn 6;\r\n\t\telse {\r\n\t\t\tlet cap: number | undefined = this.mstMaxVols.get(modSetting);\r\n\t\t\tif (cap != undefined)\r\n\t\t\t\treturn cap;\r\n\t\t\telse\r\n\t\t\t\treturn 6;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getChannelCount(): number {\r\n\t\treturn this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\r\n\t}\r\n\r\n\tpublic getChannelIsNoise(channel: number): boolean {\r\n\t\treturn (channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount);\r\n\t}\r\n\r\n\tpublic getChannelIsMod(channel: number): boolean {\r\n\t\treturn (channel >= this.pitchChannelCount + this.noiseChannelCount);\r\n\t}\r\n\r\n\tpublic initToDefault(andResetChannels: boolean = true): void {\r\n\t\tthis.scale = 0;\r\n\t\tthis.key = 0;\r\n\t\tthis.loopStart = 0;\r\n\t\tthis.loopLength = 4;\r\n\t\tthis.tempo = 100;\r\n\t\tthis.reverb = 0;\r\n\t\tthis.centerFrequency = 425.85465642512778279; // very specific :}\r\n\t\tthis.edo = 12;\r\n\t\tthis.maxPitch = this.edo * Config.pitchOctaves;\r\n\t\tthis.beatsPerBar = 6;\r\n\t\t// this.beatsPerBar = 8;\r\n\t\tthis.barCount = 16;\r\n\t\tthis.patternsPerChannel = 16;\r\n\t\tthis.rhythm = 3; // div4 standard\r\n\t\tthis.instrumentsPerChannel = 2;\r\n\t\t// this.patternsPerChannel = 8;\r\n\t\t// this.rhythm = 1;\r\n\t\t// this.instrumentsPerChannel = 1;\r\n\r\n\t\tthis.title = \"Unnamed\";\r\n\t\tdocument.title = EditorConfig.versionDisplayName;\r\n\r\n\t\tif (andResetChannels) {\r\n\t\t\tthis.pitchChannelCount = 4;\r\n\t\t\tthis.noiseChannelCount = 2;\r\n\t\t\tthis.modChannelCount = 1;\r\n\t\t\tfor (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n\t\t\t\tif (this.channels.length <= channelIndex) {\r\n\t\t\t\t\tthis.channels[channelIndex] = new Channel();\r\n\t\t\t\t}\r\n\t\t\t\tconst channel: Channel = this.channels[channelIndex];\r\n\t\t\t\tchannel.octave = Math.max(4 - channelIndex, 0); // [4, 3, 2, 1, 0, ...]; Descending octaves with drums at zero in last channel and onward.\r\n\r\n\t\t\t\tfor (let pattern = 0; pattern < this.patternsPerChannel; pattern++) {\r\n\t\t\t\t\tif (channel.patterns.length <= pattern) {\r\n\t\t\t\t\t\tchannel.patterns[pattern] = new Pattern();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchannel.patterns[pattern].reset();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchannel.patterns.length = this.patternsPerChannel;\r\n\r\n\t\t\t\tconst isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\tconst isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\tfor (let instrument = 0; instrument < this.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\tif (channel.instruments.length <= instrument) {\r\n\t\t\t\t\t\tchannel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchannel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.length = this.instrumentsPerChannel;\r\n\r\n\t\t\t\tfor (let bar = 0; bar < this.barCount; bar++) {\r\n\t\t\t\t\tchannel.bars[bar] = bar < 4 ? 1 : 0;\r\n\t\t\t\t}\r\n\t\t\t\tchannel.bars.length = this.barCount;\r\n\t\t\t}\r\n\t\t\tthis.channels.length = this.getChannelCount();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toBase64String(): string {\r\n\t\tlet bits: BitFieldWriter;\r\n\t\tlet buffer: number[] = [];\r\n\r\n\t\tbuffer.push(Song._variant); // TODO: Replace _variant Jummbox with variant Microbox\r\n\t\tbuffer.push(base64IntToCharCode[Song._latestJummBoxVersion]);\r\n\t\t// buffer.push(base64IntToCharCode[Song._latestMicroBoxVersion]);\r\n\r\n\t\tbuffer.push(SongTagCode.songTitle);\r\n\r\n\t\t// Length of the song name string\r\n\t\tvar encodedSongTitle: string = encodeURIComponent(this.title);\r\n\t\tbuffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\r\n\r\n\t\t// Actual encoded string follows\r\n\t\tfor (let i: number = 0; i < encodedSongTitle.length; i++) {\r\n\t\t\tbuffer.push(encodedSongTitle.charCodeAt(i));\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\r\n\t\tbuffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\r\n\t\t// buffer.push(SongTagCode.key, base64IntToCharCode[this.key]); // key relic (TODO)\r\n\t\tbuffer.push(SongTagCode.key, base64IntToCharCode[0]);\r\n\t\tbuffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\r\n\t\tbuffer.push(SongTagCode.reverb, base64IntToCharCode[this.reverb]);\r\n\t\tbuffer.push(SongTagCode.edo, base64IntToCharCode[this.edo]);\r\n\t\tbuffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\r\n\t\tbuffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.instrumentCount, base64IntToCharCode[this.instrumentsPerChannel - 1]);\r\n\t\tbuffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\r\n\r\n\t\t// Push limiter settings, but only if they aren't the default!\r\n\t\tbuffer.push(SongTagCode.limiterSettings);\r\n\t\tif (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\r\n\t\t\tbuffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbuffer.push(base64IntToCharCode[0x3f]); // Not using limiter\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.channelNames);\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t// Length of the channel name string\r\n\t\t\tvar encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\r\n\t\t\tbuffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\r\n\r\n\t\t\t// Actual encoded string follows\r\n\t\t\tfor (let i: number = 0; i < encodedChannelName.length; i++) {\r\n\t\t\t\tbuffer.push(encodedChannelName.charCodeAt(i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.channelOctave);\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tbuffer.push(base64IntToCharCode[this.channels[channel].octave]);\r\n\t\t}\r\n\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\tbuffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\r\n\t\t\t\tbuffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\r\n\t\t\t\tbuffer.push(SongTagCode.panning, base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\r\n\t\t\t\tbuffer.push(base64IntToCharCode[instrument.panDelay]); // Piggybacks after panning to reduce song tag code usage :P\r\n\t\t\t\tbuffer.push(SongTagCode.detune, base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3f]);\r\n\t\t\t\tbuffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\r\n\t\t\t\tbuffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects]);\r\n\r\n\r\n\t\t\t\tif (instrument.type != InstrumentType.drumset) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.transition, base64IntToCharCode[instrument.transition]);\r\n\t\t\t\t\t// Transition info follows transition song tag\r\n\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.tieNoteTransition]);\r\n\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterCutoff, base64IntToCharCode[instrument.filterCutoff]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterResonance, base64IntToCharCode[instrument.filterResonance]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterEnvelope, base64IntToCharCode[instrument.filterEnvelope]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.chord, base64IntToCharCode[instrument.chord]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.feedbackEnvelope, base64IntToCharCode[instrument.feedbackEnvelope]);\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.operatorFrequencies);\r\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.operatorAmplitudes);\r\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.operatorEnvelopes);\r\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.operators[o].envelope]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.customChipWave);\r\n\t\t\t\t\t// Push custom wave values\r\n\t\t\t\t\tfor (let j: number = 0; j < 64; j++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.spectrum);\r\n\t\t\t\t\tconst spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tspectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tspectrumBits.encodeBase64(buffer);\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterEnvelope);\r\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.spectrum);\r\n\t\t\t\t\tconst spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\tspectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tspectrumBits.encodeBase64(buffer);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.harmonics);\r\n\t\t\t\t\tconst harmonicsBits: BitFieldWriter = new BitFieldWriter();\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\tharmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tharmonicsBits.encodeBase64(buffer);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth], base64IntToCharCode[instrument.pulseEnvelope]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\t\t\t// Handled down below. Could be moved, but meh.\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error(\"Unknown instrument type.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.bars);\r\n\t\tbits = new BitFieldWriter();\r\n\t\tlet neededBits: number = 0;\r\n\t\twhile ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) for (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\tbits.write(neededBits, this.channels[channel].bars[i]);\r\n\t\t}\r\n\t\tbits.encodeBase64(buffer);\r\n\r\n\t\tbuffer.push(SongTagCode.patterns);\r\n\t\tbits = new BitFieldWriter();\r\n\t\tconst shapeBits: BitFieldWriter = new BitFieldWriter();\r\n\t\tlet neededInstrumentBits: number = 0;\r\n\t\twhile ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\r\n\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n\t\t\tconst isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n\t\t\t// Some info about modulator settings immediately follows in mod channels.\r\n\t\t\tif (isModChannel) {\r\n\t\t\t\tfor (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n\t\t\t\t\tlet instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\tconst modStatus: ModStatus = instrument.modStatuses[mod];\r\n\t\t\t\t\t\tconst modChannel: number = instrument.modChannels[mod];\r\n\t\t\t\t\t\tconst modInstrument: number = instrument.modInstruments[mod];\r\n\t\t\t\t\t\tconst modSetting: number = instrument.modSettings[mod];\r\n\r\n\t\t\t\t\t\tbits.write(2, modStatus);\r\n\r\n\t\t\t\t\t\t// Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) {\r\n\t\t\t\t\t\t\tbits.write(8, modChannel);\r\n\t\t\t\t\t\t\tbits.write(neededInstrumentBits, modInstrument);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Mod setting is only used if the status isn't \"none\".\r\n\t\t\t\t\t\tif (modStatus != ModStatus.msNone) {\r\n\t\t\t\t\t\t\tbits.write(6, modSetting);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * this.edo;\r\n\t\t\t// let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : this.edo) + octaveOffset;\r\n\t\t\tconst octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * Config.pitchesPerOctave;\r\n\t\t\tlet lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : Config.pitchesPerOctave) + octaveOffset;\r\n\t\t\tconst recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n\t\t\tconst recentShapes: any[] = [];\r\n\r\n\t\t\tfor (let i: number = 0; i < recentPitches.length; i++) {\r\n\t\t\t\trecentPitches[i] += octaveOffset;\r\n\t\t\t}\r\n\t\t\tfor (const pattern of this.channels[channel].patterns) {\r\n\t\t\t\tbits.write(neededInstrumentBits, pattern.instrument);\r\n\r\n\t\t\t\tif (pattern.notes.length > 0) {\r\n\t\t\t\t\tbits.write(1, 1);\r\n\r\n\t\t\t\t\tlet curPart: number = 0;\r\n\t\t\t\t\tfor (const note of pattern.notes) {\r\n\r\n\t\t\t\t\t\t// For mod channels, a negative offset may be necessary.\r\n\t\t\t\t\t\tif (note.start < curPart && isModChannel) {\r\n\t\t\t\t\t\t\tbits.write(2, 0); // rest, then...\r\n\t\t\t\t\t\t\tbits.write(1, 1); // negative offset\r\n\t\t\t\t\t\t\tbits.writePartDuration(curPart - note.start);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (note.start > curPart) {\r\n\t\t\t\t\t\t\tbits.write(2, 0); // rest, then...\r\n\t\t\t\t\t\t\tif (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\r\n\t\t\t\t\t\t\tbits.writePartDuration(note.start - curPart);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tshapeBits.clear();\r\n\r\n\t\t\t\t\t\t// Old format was:\r\n\t\t\t\t\t\t// 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\r\n\t\t\t\t\t\t// New format is:\r\n\t\t\t\t\t\t//\t  0: 1 pitch\r\n\t\t\t\t\t\t// 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n\t\t\t\t\t\tif (note.pitches.length == 1) {\r\n\t\t\t\t\t\t\tshapeBits.write(1, 0);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tshapeBits.write(1, 1);\r\n\t\t\t\t\t\t\tshapeBits.write(3, note.pitches.length - 2);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tshapeBits.writePinCount(note.pins.length - 1);\r\n\r\n\t\t\t\t\t\tif (!isModChannel) {\r\n\t\t\t\t\t\t\tshapeBits.write(3, note.pins[0].volume); // volume\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tshapeBits.write(9, note.pins[0].volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet shapePart: number = 0;\r\n\t\t\t\t\t\tlet startPitch: number = note.pitches[0];\r\n\t\t\t\t\t\tlet currentPitch: number = startPitch;\r\n\t\t\t\t\t\tconst pitchBends: number[] = [];\r\n\t\t\t\t\t\tfor (let i: number = 1; i < note.pins.length; i++) {\r\n\t\t\t\t\t\t\tconst pin: NotePin = note.pins[i];\r\n\t\t\t\t\t\t\tconst nextPitch: number = startPitch + pin.interval;\r\n\t\t\t\t\t\t\tif (currentPitch != nextPitch) {\r\n\t\t\t\t\t\t\t\tshapeBits.write(1, 1);\r\n\t\t\t\t\t\t\t\tpitchBends.push(nextPitch);\r\n\t\t\t\t\t\t\t\tcurrentPitch = nextPitch;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tshapeBits.write(1, 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tshapeBits.writePartDuration(pin.time - shapePart);\r\n\t\t\t\t\t\t\tshapePart = pin.time;\r\n\r\n\t\t\t\t\t\t\tif (!isModChannel) {\r\n\t\t\t\t\t\t\t\tshapeBits.write(3, pin.volume); // volume\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tshapeBits.write(9, pin.volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\r\n\t\t\t\t\t\tconst shapeIndex: number = recentShapes.indexOf(shapeString);\r\n\t\t\t\t\t\tif (shapeIndex == -1) {\r\n\t\t\t\t\t\t\tbits.write(2, 1); // new shape\r\n\t\t\t\t\t\t\tbits.concat(shapeBits);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbits.write(1, 1); // old shape\r\n\t\t\t\t\t\t\tbits.writeLongTail(0, 0, shapeIndex);\r\n\t\t\t\t\t\t\trecentShapes.splice(shapeIndex, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trecentShapes.unshift(shapeString);\r\n\t\t\t\t\t\tif (recentShapes.length > 10) recentShapes.pop();\r\n\r\n\t\t\t\t\t\tconst allPitches: number[] = note.pitches.concat(pitchBends);\r\n\t\t\t\t\t\tfor (let i: number = 0; i < allPitches.length; i++) {\r\n\t\t\t\t\t\t\tconst pitch: number = allPitches[i];\r\n\t\t\t\t\t\t\tconst pitchIndex: number = recentPitches.indexOf(pitch);\r\n\t\t\t\t\t\t\tif (pitchIndex == -1) {\r\n\t\t\t\t\t\t\t\tlet interval: number = 0;\r\n\t\t\t\t\t\t\t\tlet pitchIter: number = lastPitch;\r\n\t\t\t\t\t\t\t\tif (pitchIter < pitch) {\r\n\t\t\t\t\t\t\t\t\twhile (pitchIter != pitch) {\r\n\t\t\t\t\t\t\t\t\t\tpitchIter++;\r\n\t\t\t\t\t\t\t\t\t\tif (recentPitches.indexOf(pitchIter) == -1) interval++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\twhile (pitchIter != pitch) {\r\n\t\t\t\t\t\t\t\t\t\tpitchIter--;\r\n\t\t\t\t\t\t\t\t\t\tif (recentPitches.indexOf(pitchIter) == -1) interval--;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbits.write(1, 0);\r\n\t\t\t\t\t\t\t\tbits.writePitchInterval(interval);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbits.write(1, 1);\r\n\t\t\t\t\t\t\t\tbits.write(4, pitchIndex);\r\n\t\t\t\t\t\t\t\trecentPitches.splice(pitchIndex, 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trecentPitches.unshift(pitch);\r\n\t\t\t\t\t\t\tif (recentPitches.length > 16) recentPitches.pop();\r\n\r\n\t\t\t\t\t\t\tif (i == note.pitches.length - 1) {\r\n\t\t\t\t\t\t\t\tlastPitch = note.pitches[0];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlastPitch = pitch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurPart = note.end;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\t\t\t\t\t\tbits.write(2, 0); // rest, then...\r\n\t\t\t\t\t\tif (isModChannel) bits.write(1, 0); // positive offset\r\n\t\t\t\t\t\tbits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbits.write(1, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet stringLength: number = bits.lengthBase64();\r\n\t\tlet digits: number[] = [];\r\n\t\twhile (stringLength > 0) {\r\n\t\t\tdigits.unshift(base64IntToCharCode[stringLength & 0x3f]);\r\n\t\t\tstringLength = stringLength >> 6;\r\n\t\t}\r\n\t\tbuffer.push(base64IntToCharCode[digits.length]);\r\n\t\tArray.prototype.push.apply(buffer, digits); // append digits to buffer.\r\n\t\tbits.encodeBase64(buffer);\r\n\r\n\t\tconst maxApplyArgs: number = 64000;\r\n\t\tif (buffer.length < maxApplyArgs) {\r\n\t\t\t// Note: Function.apply may break for long argument lists.\r\n\t\t\treturn String.fromCharCode.apply(null, buffer);\r\n\t\t} else {\r\n\t\t\tlet result: string = \"\";\r\n\t\t\tfor (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\r\n\t\t\t\tresult += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic fromBase64String(compressed: string): void {\r\n\t\tif (compressed == null || compressed == \"\") {\r\n\t\t\tthis.initToDefault(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet charIndex: number = 0;\r\n\t\t// skip whitespace.\r\n\t\twhile (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\r\n\t\t// skip hash mark.\r\n\t\tif (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\r\n\t\t// if it starts with curly brace, treat it as JSON.\r\n\t\tif (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\r\n\t\t\tthis.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst variantTest: number = compressed.charCodeAt(charIndex);\r\n\t\tvar variant: string = \"beepbox\";\r\n\r\n\t\t// Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\r\n\t\tif (variantTest == 0x6A) { //\"j\"\r\n\t\t\tvariant = \"jummbox\";\r\n\t\t\tcharIndex++;\r\n\t\t}\r\n\t\t// if (variantTest == 0x6D) { //\"m\"\r\n\t\t// \tvariant = \"microbox\";\r\n\t\t// \tcharIndex++;\r\n\t\t// }\r\n\r\n\t\tconst version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\tif (variant == \"beepbox\" && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\r\n\t\tif (variant == \"jummbox\" && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\r\n\t\t// if (variant == \"microbox\" && (version == -1 || version > Song._latestMicroBoxVersion || version < Song._oldestMicroBoxVersion)) return;\r\n\r\n\r\n\t\tconst beforeTwo: boolean = version < 2;\r\n\t\tconst beforeThree: boolean = version < 3;\r\n\t\tconst beforeFour: boolean = version < 4;\r\n\t\tconst beforeFive: boolean = version < 5;\r\n\t\tconst beforeSix: boolean = version < 6;\r\n\t\tconst beforeSeven: boolean = version < 7;\r\n\t\tconst beforeEight: boolean = version < 8;\r\n\t\tthis.initToDefault(variant == \"beepbox\" && beforeSix);\r\n\r\n\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t// Originally, the only instrument transition was \"seamless\" and the only drum wave was \"retro\".\r\n\t\t\tfor (const channel of this.channels) channel.instruments[0].transition = 0;\r\n\t\t\tthis.channels[3].instruments[0].chipNoise = 0;\r\n\t\t}\r\n\r\n\t\tlet instrumentChannelIterator: number = 0;\r\n\t\tlet instrumentIndexIterator: number = -1;\r\n\t\tlet toSetOctaves: number[] = [];\r\n\t\tlet command: number;\r\n\t\tlet channel: number;\r\n\t\tlet useSlowerArpSpeed: boolean = false;\r\n\t\tlet useFastTwoNoteArp: boolean = false;\r\n\t\twhile (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\r\n\t\t\tcase SongTagCode.songTitle: {\r\n\t\t\t\t// Length of song name string\r\n\t\t\t\tvar songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tthis.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\r\n\t\t\t\tdocument.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n\r\n\t\t\t\tcharIndex += songNameLength;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.channelCount: {\r\n\t\t\t\tthis.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tthis.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tif (variant == \"beepbox\" || beforeTwo) {\r\n\t\t\t\t\t// No mod channel support before jummbox v2\r\n\t\t\t\t\tthis.modChannelCount = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t}\r\n\t\t\t\tthis.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\r\n\t\t\t\tthis.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\r\n\t\t\t\tthis.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\r\n\r\n\t\t\t\tfor (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\r\n\t\t\t\t\tthis.channels[channelIndex] = new Channel();\r\n\t\t\t\t}\r\n\t\t\t\tthis.channels.length = this.getChannelCount();\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.scale: {\r\n\t\t\t\tthis.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t// All the scales were jumbled around by Jummbox. Just convert to free.\r\n\t\t\t\tif (variant == \"beepbox\") this.scale = 0;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.key: {\r\n\t\t\t\t// if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t// \tthis.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \tthis.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t// } // key relic (TODO)\r\n\t\t\t\tcharIndex++;\r\n\t\t\t\tthis.key = 0;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.loopStart: {\r\n\t\t\t\tif (beforeFive && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.loopEnd: {\r\n\t\t\t\tif (beforeFive && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.tempo: {\r\n\t\t\t\tif (beforeFour && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.reverb: {\r\n\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\tthis.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 8;\r\n\t\t\t\t\tthis.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.edo: {\r\n\t\t\t\t// if (beforeEight && ( variant == \"beepbox\" || variant == \"jummbox\")) {\r\n\t\t\t\t// \tthis.edo = 12;\r\n\t\t\t\t// \tcharIndex++;\r\n\t\t\t\t// } else {\r\n\t\t\t\t// \tthis.edo = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t// }\r\n\t\t\t\tthis.edo = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.beatCount: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.barCount: {\r\n\t\t\t\tconst barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\tthis.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\r\n\t\t\t\tfor (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\tfor (let bar = this.channels[channel].bars.length; bar < this.barCount; bar++) {\r\n\t\t\t\t\t\tthis.channels[channel].bars[bar] = (bar < 4) ? 1 : 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[channel].bars.length = this.barCount;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.patternCount: {\r\n\t\t\t\tif (variant == \"beepbox\" && beforeEight) {\r\n\t\t\t\t\tthis.patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.patternsPerChannel = validateRange(1, Config.barCountMax, this.patternsPerChannel);\r\n\t\t\t\tfor (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\tfor (let pattern = this.channels[channel].patterns.length; pattern < this.patternsPerChannel; pattern++) {\r\n\t\t\t\t\t\tthis.channels[channel].patterns[pattern] = new Pattern();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[channel].patterns.length = this.patternsPerChannel;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.instrumentCount: {\r\n\t\t\t\tconst instrumentsPerChannel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\tthis.instrumentsPerChannel = validateRange(Config.instrumentsPerChannelMin, Config.instrumentsPerChannelMax, instrumentsPerChannel);\r\n\t\t\t\tfor (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\tconst isNoiseChannel: boolean = channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\t\tconst isModChannel: boolean = channel >= this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\t\tfor (let instrumentIndex = this.channels[channel].instruments.length; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\t\t\t\t\t\tthis.channels[channel].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[channel].instruments.length = this.instrumentsPerChannel;\r\n\t\t\t\t\tif (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\t\tfor (let instrumentIndex = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.rhythm: {\r\n\t\t\t\tthis.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t// Port all arpeggio speeds over to match what they were, before arpeggio speed was decoupled from rhythm.\r\n\t\t\t\tif (variant == \"jummbox\" && beforeThree || variant == \"beepbox\") {\r\n\t\t\t\t\t// These are all the rhythms that had 4 ticks/arpeggio instead of 3.\r\n\t\t\t\t\tif (this.rhythm == 0 || this.rhythm == 2) {\r\n\t\t\t\t\t\tuseSlowerArpSpeed = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Use faster two note arp on these rhythms\r\n\t\t\t\t\tif (this.rhythm >= 2) {\r\n\t\t\t\t\t\tuseFastTwoNoteArp = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.channelOctave: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t// Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n\t\t\t\t\tthis.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\ttoSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\t// Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n\t\t\t\t\t\tthis.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\ttoSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.startInstrument: {\r\n\t\t\t\tinstrumentIndexIterator++;\r\n\t\t\t\tif (instrumentIndexIterator >= this.instrumentsPerChannel) {\r\n\t\t\t\t\tinstrumentChannelIterator++;\r\n\t\t\t\t\tinstrumentIndexIterator = 0;\r\n\t\t\t\t}\r\n\t\t\t\tvalidateRange(0, this.channels.length - 1, instrumentChannelIterator);\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tconst instrumentType: number = clamp(0, InstrumentType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\tinstrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\r\n\t\t\t\tif (useSlowerArpSpeed) {\r\n\t\t\t\t\tinstrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\r\n\t\t\t\t}\r\n\t\t\t\tif (useFastTwoNoteArp) {\r\n\t\t\t\t\tinstrument.fastTwoNoteArp = true;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.preset: {\r\n\t\t\t\tconst presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.wave: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n\t\t\t\t\tconst channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.channels[channel].instruments[0].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tif (channel >= this.pitchChannelCount) {\r\n\t\t\t\t\t\t\t\tthis.channels[channel].instruments[i].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.channels[channel].instruments[i].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n\t\t\t\t\tif (instrumentChannelIterator >= this.pitchChannelCount) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (instrumentChannelIterator >= this.pitchChannelCount) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.filterCutoff: {\r\n\t\t\t\tif (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n\t\t\t\t\tconst legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n\t\t\t\t\tconst filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n\r\n\t\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[0];\r\n\t\t\t\t\t\tconst legacyFilter: number = [1, 3, 4, 5][clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n\t\t\t\t\t\tinstrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\t\t\t\t\tconst legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n\t\t\t\t\t\t\t\tif (channel < this.pitchChannelCount) {\r\n\t\t\t\t\t\t\t\t\tinstrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\t\t\t\t\t\t\tinstrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\t\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tinstrument.filterCutoff = 10;\r\n\t\t\t\t\t\t\t\t\tinstrument.filterEnvelope = 1;\r\n\t\t\t\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\t\tinstrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.filterCutoff = clamp(0, Config.filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.filterResonance: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].filterResonance = clamp(0, Config.filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.filterEnvelope: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\t\tinstrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstrument.filterEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.pulseWidth: {\r\n\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t// Convert back from beepbox's weird pulse width storage formula, rounding. The \"7\" in there is the old\r\n\t\t\t\t\t// piece of the formula \"beepbox.Config.pulseWidthRange - 1\".\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.pulseWidth = Math.round(clamp(0, Config.pulseWidthRange + 1, Math.pow(0.5, (7 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 0.5) * 50));\r\n\t\t\t\t\tinstrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.pulseWidth = clamp(0, Config.pulseWidthRange + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tinstrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.transition: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.channels[channel].instruments[0].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].instruments[i].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeFour || variant == \"beepbox\") {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].tieNoteTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.vibrato: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyEffects: number[] = [0, 3, 2, 0];\r\n\t\t\t\t\tconst legacyEnvelopes: number[] = [1, 1, 1, 13];\r\n\t\t\t\t\tconst channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[0];\r\n\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\r\n\t\t\t\t\tinstrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n\t\t\t\t\t\t? legacyEnvelopes[effect]\r\n\t\t\t\t\t\t: instrument.filterEnvelope;\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n\t\t\t\t\tconst legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\r\n\t\t\t\t\t\t\tinstrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n\t\t\t\t\t\t\t\t? legacyEnvelopes[effect]\r\n\t\t\t\t\t\t\t\t: instrument.filterEnvelope;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n\t\t\t\t\tconst legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\r\n\t\t\t\t\tinstrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n\t\t\t\t\t\t? legacyEnvelopes[effect]\r\n\t\t\t\t\t\t: instrument.filterEnvelope;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.vibrato = vibrato;\r\n\t\t\t\t\t// Custom vibrato\r\n\t\t\t\t\tif (vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tinstrument.vibratoDepth = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDepth)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\r\n\t\t\t\t\t\tinstrument.vibratoSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\tinstrument.vibratoDelay = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDelay)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\tinstrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Enforce standard vibrato settings\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinstrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n\t\t\t\t\t\tinstrument.vibratoSpeed = 10; // Normal speed\r\n\t\t\t\t\t\tinstrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\t\t\t\tinstrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.arpeggioSpeed: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tinstrument.arpeggioSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstArpeggioSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\tinstrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.interval: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.channels[channel].instruments[0].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tconst originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t\t\tlet interval: number = clamp(0, Config.intervals.length, originalValue);\r\n\t\t\t\t\t\t\tif (originalValue == 8) {\r\n\t\t\t\t\t\t\t\t// original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n\t\t\t\t\t\t\t\tinterval = 2;\r\n\t\t\t\t\t\t\t\tthis.channels[channel].instruments[i].chord = 3;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.channels[channel].instruments[i].interval = interval;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tlet interval: number = clamp(0, Config.intervals.length, originalValue);\r\n\t\t\t\t\tif (originalValue == 8) {\r\n\t\t\t\t\t\t// original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n\t\t\t\t\t\tinterval = 2;\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = interval;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.chord: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.effects: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].effects = clamp(0, Config.effectsNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.volume: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[0];\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n\t\t\t\t} else if (variant == \"beepbox\") {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\t// Beepbox v7's volume range is 0-7 (0 is max, 7 is mute)\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\t// Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.panning: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t// Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n\t\t\t\t\tinstrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tinstrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Now, pan delay follows on new versions of jummbox.\r\n\t\t\t\tif (variant == \"jummbox\" && !beforeThree)\r\n\t\t\t\t\tinstrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.detune: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n\t\t\t\tinstrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) + Config.detuneMin);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.customChipWave: {\r\n\t\t\t\tlet instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t// Pop custom wave values\r\n\t\t\t\tfor (let j: number = 0; j < 64; j++) {\r\n\t\t\t\t\tinstrument.customChipWave[j]\r\n\t\t\t\t\t\t= clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet sum: number = 0.0;\r\n\t\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\t\tsum += instrument.customChipWave[i];\r\n\t\t\t\t}\r\n\t\t\t\tconst average: number = sum / instrument.customChipWave.length;\r\n\r\n\t\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\t\tlet cumulative: number = 0;\r\n\t\t\t\tlet wavePrev: number = 0;\r\n\t\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\t\twavePrev = instrument.customChipWave[i] - average;\r\n\t\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 65th, last sample is for anti-aliasing\r\n\t\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.limiterSettings: {\r\n\t\t\t\tlet nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\t\t\t// Check if limiter settings are used... if not, restore to default\r\n\t\t\t\tif (nextValue == 0x3f) {\r\n\t\t\t\t\t// Limiter isn't used\r\n\t\t\t\t\tthis.compressionRatio = 1.0;\r\n\t\t\t\t\tthis.limitRatio = 1.0;\r\n\t\t\t\t\tthis.limitRise = 4000.0;\r\n\t\t\t\t\tthis.limitDecay = 4.0;\r\n\t\t\t\t\tthis.limitThreshold = 1.0;\r\n\t\t\t\t\tthis.compressionThreshold = 1.0;\r\n\t\t\t\t\tthis.masterGain = 1.0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Limiter is used, grab values\r\n\t\t\t\t\tthis.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\r\n\t\t\t\t\tnextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\r\n\t\t\t\t\tthis.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\r\n\t\t\t\t\tthis.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n\t\t\t\t\tthis.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n\t\t\t\t\tthis.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.channelNames: {\r\n\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t// Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\r\n\t\t\t\t\tvar channelNameLength;\r\n\t\t\t\t\tif (beforeFour)\r\n\t\t\t\t\t\tchannelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tchannelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tthis.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\r\n\r\n\t\t\t\t\tcharIndex += channelNameLength;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.algorithm: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.feedbackType: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.feedbackAmplitude: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.feedbackEnvelope: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.operatorFrequencies: {\r\n\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.operatorAmplitudes: {\r\n\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.operatorEnvelopes: {\r\n\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].envelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.spectrum: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tconst byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t\tcharIndex += byteCount;\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tconst byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\tinstrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tinstrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcharIndex += byteCount;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"Unhandled instrument type for spectrum song tag code.\");\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.harmonics: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tconst byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\r\n\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\r\n\t\t\t\t}\r\n\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\r\n\t\t\t\tcharIndex += byteCount;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.bars: {\r\n\t\t\t\tlet subStringLength: number;\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tconst barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tsubStringLength = Math.ceil(barCount * 0.5);\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n\t\t\t\t\tfor (let i: number = 0; i < barCount; i++) {\r\n\t\t\t\t\t\tthis.channels[channel].bars[i] = bits.read(3) + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeFive && variant == \"beepbox\") {\r\n\t\t\t\t\tlet neededBits: number = 0;\r\n\t\t\t\t\twhile ((1 << neededBits) < this.patternsPerChannel) neededBits++;\r\n\t\t\t\t\tsubStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].bars[i] = bits.read(neededBits) + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet neededBits: number = 0;\r\n\t\t\t\t\twhile ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n\t\t\t\t\tsubStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].bars[i] = bits.read(neededBits);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcharIndex += subStringLength;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.patterns: {\r\n\t\t\t\tlet bitStringLength: number = 0;\r\n\t\t\t\tlet channel: number;\r\n\t\t\t\tlet largerChords: boolean = !((beforeFour && variant == \"jummbox\") || variant == \"beepbox\");\r\n\t\t\t\tlet recentPitchBitLength: number = (largerChords ? 4 : 3);\r\n\t\t\t\tlet recentPitchLength: number = (largerChords ? 16 : 8);\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\t\t\t\t// The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default.\r\n\t\t\t\t\tcharIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\t\t\t\tbitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tbitStringLength = bitStringLength << 6;\r\n\t\t\t\t\tbitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchannel = 0;\r\n\t\t\t\t\tlet bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\twhile (bitStringLengthLength > 0) {\r\n\t\t\t\t\t\tbitStringLength = bitStringLength << 6;\r\n\t\t\t\t\t\tbitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t\tbitStringLengthLength--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\r\n\t\t\t\tcharIndex += bitStringLength;\r\n\r\n\t\t\t\tlet neededInstrumentBits: number = 0;\r\n\t\t\t\twhile ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n\t\t\t\t\tconst isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n\t\t\t\t\t// Some info about modulator settings immediately follows in mod channels.\r\n\t\t\t\t\tif (isModChannel) {\r\n\t\t\t\t\t\tfor (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n\t\t\t\t\t\t\tlet instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n\t\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\t\tinstrument.modStatuses[mod] = bits.read(2);\r\n\r\n\t\t\t\t\t\t\t\t// Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msForPitch || instrument.modStatuses[mod] == ModStatus.msForNoise) {\r\n\r\n\t\t\t\t\t\t\t\t\t// Clamp to pitch/noise max\r\n\t\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n\t\t\t\t\t\t\t\t\t\tinstrument.modChannels[mod] = clamp(0, this.pitchChannelCount + 1, bits.read(8));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tinstrument.modChannels[mod] = clamp(0, this.noiseChannelCount + 1, bits.read(8));\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tinstrument.modInstruments[mod] = clamp(0, this.instrumentsPerChannel + 1, bits.read(neededInstrumentBits));\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Mod setting is only used if the status isn't \"none\".\r\n\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] != ModStatus.msNone) {\r\n\t\t\t\t\t\t\t\t\tinstrument.modSettings[mod] = bits.read(6);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * this.edo;\r\n\t\t\t\t\tconst octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * Config.pitchesPerOctave;\r\n\t\t\t\t\tlet note: Note | null = null;\r\n\t\t\t\t\tlet pin: NotePin | null = null;\r\n\t\t\t\t\t// let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : this.edo) + octaveOffset;\r\n\t\t\t\t\tlet lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : Config.pitchesPerOctave) + octaveOffset;\r\n\t\t\t\t\tconst recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n\t\t\t\t\tconst recentShapes: any[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < recentPitches.length; i++) {\r\n\t\t\t\t\t\trecentPitches[i] += octaveOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n\t\t\t\t\t\tconst newPattern: Pattern = this.channels[channel].patterns[i];\r\n\t\t\t\t\t\tnewPattern.reset();\r\n\t\t\t\t\t\tnewPattern.instrument = bits.read(neededInstrumentBits);\r\n\r\n\t\t\t\t\t\tif (!(variant == \"beepbox\" && beforeThree) && bits.read(1) == 0) continue;\r\n\r\n\t\t\t\t\t\tlet curPart: number = 0;\r\n\t\t\t\t\t\tconst newNotes: Note[] = newPattern.notes;\r\n\t\t\t\t\t\t// Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\r\n\t\t\t\t\t\twhile (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\r\n\t\t\t\t\t\t\tconst useOldShape: boolean = bits.read(1) == 1;\r\n\t\t\t\t\t\t\tlet newNote: boolean = false;\r\n\t\t\t\t\t\t\tlet shapeIndex: number = 0;\r\n\t\t\t\t\t\t\tif (useOldShape) {\r\n\t\t\t\t\t\t\t\tshapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnewNote = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (!useOldShape && !newNote) {\r\n\t\t\t\t\t\t\t\t// For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\r\n\t\t\t\t\t\t\t\tif (isModChannel) {\r\n\t\t\t\t\t\t\t\t\tconst isBackwards: boolean = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t\t\tconst restLength: number = bits.readPartDuration();\r\n\t\t\t\t\t\t\t\t\tif (isBackwards) {\r\n\t\t\t\t\t\t\t\t\t\tcurPart -= restLength;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcurPart += restLength;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconst restLength: number = (beforeSeven && variant == \"beepbox\")\r\n\t\t\t\t\t\t\t\t\t\t? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n\t\t\t\t\t\t\t\t\t\t: bits.readPartDuration();\r\n\t\t\t\t\t\t\t\t\tcurPart += restLength;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlet shape: any;\r\n\t\t\t\t\t\t\t\tlet pinObj: any;\r\n\t\t\t\t\t\t\t\tlet pitch: number;\r\n\t\t\t\t\t\t\t\tif (useOldShape) {\r\n\t\t\t\t\t\t\t\t\tshape = recentShapes[shapeIndex];\r\n\t\t\t\t\t\t\t\t\trecentShapes.splice(shapeIndex, 1);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tshape = {};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!largerChords) {\r\n\t\t\t\t\t\t\t\t\t\t// Old format: X 1's followed by a 0 => X+1 pitches, up to 4\r\n\t\t\t\t\t\t\t\t\t\tshape.pitchCount = 1;\r\n\t\t\t\t\t\t\t\t\t\twhile (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t// New format is:\r\n\t\t\t\t\t\t\t\t\t\t//\t  0: 1 pitch\r\n\t\t\t\t\t\t\t\t\t\t// 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n\t\t\t\t\t\t\t\t\t\tif (bits.read(1) == 1) {\r\n\t\t\t\t\t\t\t\t\t\t\tshape.pitchCount = bits.read(3) + 2;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tshape.pitchCount = 1;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tshape.pinCount = bits.readPinCount();\r\n\r\n\t\t\t\t\t\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t\t\t\t\t\tshape.initialVolume = bits.read(2) * 2;\r\n\t\t\t\t\t\t\t\t\t} else if (!isModChannel) {\r\n\t\t\t\t\t\t\t\t\t\tshape.initialVolume = bits.read(3);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tshape.initialVolume = bits.read(9);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tshape.pins = [];\r\n\t\t\t\t\t\t\t\t\tshape.length = 0;\r\n\t\t\t\t\t\t\t\t\tshape.bendCount = 0;\r\n\t\t\t\t\t\t\t\t\tfor (let j: number = 0; j < shape.pinCount; j++) {\r\n\t\t\t\t\t\t\t\t\t\tpinObj = {};\r\n\t\t\t\t\t\t\t\t\t\tpinObj.pitchBend = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t\t\t\tif (pinObj.pitchBend) shape.bendCount++;\r\n\t\t\t\t\t\t\t\t\t\tshape.length += (beforeSeven && variant == \"beepbox\")\r\n\t\t\t\t\t\t\t\t\t\t\t? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n\t\t\t\t\t\t\t\t\t\t\t: bits.readPartDuration();\r\n\t\t\t\t\t\t\t\t\t\tpinObj.time = shape.length;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t\t\t\t\t\t\tpinObj.volume = bits.read(2) * 2;\r\n\t\t\t\t\t\t\t\t\t\t} else if (!isModChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\tpinObj.volume = bits.read(3);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tpinObj.volume = bits.read(9);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tshape.pins.push(pinObj);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\trecentShapes.unshift(shape);\r\n\t\t\t\t\t\t\t\tif (recentShapes.length > 10) recentShapes.pop();\r\n\r\n\t\t\t\t\t\t\t\tnote = new Note(0, curPart, curPart + shape.length, shape.initialVolume);\r\n\t\t\t\t\t\t\t\tnote.pitches = [];\r\n\t\t\t\t\t\t\t\tnote.pins.length = 1;\r\n\t\t\t\t\t\t\t\tconst pitchBends: number[] = [];\r\n\t\t\t\t\t\t\t\tfor (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\r\n\t\t\t\t\t\t\t\t\tconst useOldPitch: boolean = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t\t\tif (!useOldPitch) {\r\n\t\t\t\t\t\t\t\t\t\tconst interval: number = bits.readPitchInterval();\r\n\t\t\t\t\t\t\t\t\t\tpitch = lastPitch;\r\n\t\t\t\t\t\t\t\t\t\tlet intervalIter: number = interval;\r\n\t\t\t\t\t\t\t\t\t\twhile (intervalIter > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpitch++;\r\n\t\t\t\t\t\t\t\t\t\t\twhile (recentPitches.indexOf(pitch) != -1) pitch++;\r\n\t\t\t\t\t\t\t\t\t\t\tintervalIter--;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\twhile (intervalIter < 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpitch--;\r\n\t\t\t\t\t\t\t\t\t\t\twhile (recentPitches.indexOf(pitch) != -1) pitch--;\r\n\t\t\t\t\t\t\t\t\t\t\tintervalIter++;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tconst pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\r\n\t\t\t\t\t\t\t\t\t\tpitch = recentPitches[pitchIndex];\r\n\t\t\t\t\t\t\t\t\t\trecentPitches.splice(pitchIndex, 1);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\trecentPitches.unshift(pitch);\r\n\t\t\t\t\t\t\t\t\tif (recentPitches.length > recentPitchLength) recentPitches.pop();\r\n\r\n\t\t\t\t\t\t\t\t\tif (j < shape.pitchCount) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tpitchBends.push(pitch);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (j == shape.pitchCount - 1) {\r\n\t\t\t\t\t\t\t\t\t\tlastPitch = note.pitches[0];\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tlastPitch = pitch;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tpitchBends.unshift(note.pitches[0]);\r\n\r\n\t\t\t\t\t\t\t\tfor (const pinObj of shape.pins) {\r\n\t\t\t\t\t\t\t\t\tif (pinObj.pitchBend) pitchBends.shift();\r\n\t\t\t\t\t\t\t\t\tpin = makeNotePin(pitchBends[0] - note.pitches[0], pinObj.time, pinObj.volume);\r\n\t\t\t\t\t\t\t\t\tnote.pins.push(pin);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcurPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\r\n\t\t\t\t\t\t\t\tnewNotes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchannel++;\r\n\t\t\t\t\t\tif (channel >= this.getChannelCount()) break;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // while (true)\r\n\t\t\t} break;\r\n\t\t\tdefault: {\r\n\t\t\t\tthrow new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1));\r\n\t\t\t} break;\r\n\t\t}\r\n\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tif (toSetOctaves[channel] != null) {\r\n\t\t\t\tthis.channels[channel].octave = toSetOctaves[channel];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\r\n\t\tconst channelArray: Object[] = [];\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tconst instrumentArray: Object[] = [];\r\n\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n\t\t\tconst isModChannel: boolean = this.getChannelIsMod(channel);\r\n\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\tinstrumentArray.push(this.channels[channel].instruments[i].toJsonObject());\r\n\t\t\t}\r\n\r\n\t\t\tconst patternArray: Object[] = [];\r\n\t\t\tfor (const pattern of this.channels[channel].patterns) {\r\n\t\t\t\tconst noteArray: Object[] = [];\r\n\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\tlet volumeCap: number = this.getVolumeCapForSetting(isModChannel, this.channels[channel].instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n\t\t\t\t\tconst pointArray: Object[] = [];\r\n\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\tlet useVol: number = isModChannel ? Math.round(pin.volume) : Math.round(pin.volume * 100 / volumeCap);\r\n\t\t\t\t\t\tpointArray.push({\r\n\t\t\t\t\t\t\t\"tick\": (pin.time + note.start) * Config.rhythms[this.rhythm].stepsPerBeat / Config.partsPerBeat,\r\n\t\t\t\t\t\t\t\"pitchBend\": pin.interval,\r\n\t\t\t\t\t\t\t\"volume\": useVol,\r\n\t\t\t\t\t\t\t\"forMod\": isModChannel,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnoteArray.push({\r\n\t\t\t\t\t\t\"pitches\": note.pitches,\r\n\t\t\t\t\t\t\"points\": pointArray,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpatternArray.push({\r\n\t\t\t\t\t\"instrument\": pattern.instrument + 1,\r\n\t\t\t\t\t\"notes\": noteArray,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst sequenceArray: number[] = [];\r\n\t\t\tif (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\r\n\t\t\t\tsequenceArray.push(this.channels[channel].bars[i]);\r\n\t\t\t}\r\n\t\t\tfor (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\r\n\t\t\t\tsequenceArray.push(this.channels[channel].bars[i]);\r\n\t\t\t}\r\n\t\t\tif (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\r\n\t\t\t\tsequenceArray.push(this.channels[channel].bars[i]);\r\n\t\t\t}\r\n\r\n\t\t\tchannelArray.push({\r\n\t\t\t\t\"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\r\n\t\t\t\t\"octaveScrollBar\": this.channels[channel].octave,\r\n\t\t\t\t\"instruments\": instrumentArray,\r\n\t\t\t\t\"patterns\": patternArray,\r\n\t\t\t\t\"sequence\": sequenceArray,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t\"name\": this.title,\r\n\t\t\t\"format\": Song._format,\r\n\t\t\t\"version\": Song._latestJummBoxVersion,\r\n\t\t\t// \"scale\": Config.scales[this.scale].name,\r\n\t\t\t// \"key\": Config.keys[this.key].name, // key relic (TODO)\r\n\t\t\t\"centerFrequency\": this.centerFrequency,\r\n\t\t\t\"edo\": this.edo,\r\n\t\t\t\"introBars\": this.loopStart,\r\n\t\t\t\"loopBars\": this.loopLength,\r\n\t\t\t\"beatsPerBar\": this.beatsPerBar,\r\n\t\t\t\"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\r\n\t\t\t\"beatsPerMinute\": this.tempo,\r\n\t\t\t\"reverb\": this.reverb,\r\n\t\t\t//\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\r\n\t\t\t//\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\r\n\t\t\t//\"instrumentsPerChannel\": this.instrumentsPerChannel, //derive this from instrument arrays?\r\n\t\t\t\"channels\": channelArray,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic fromJsonObject(jsonObject: any): void { //TODO: edo decoding\r\n\t\tthis.initToDefault(true);\r\n\t\tif (!jsonObject) return;\r\n\r\n\t\t//const version: number = jsonObject[\"version\"] | 0;\r\n\t\t//if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\r\n\r\n\t\tif (jsonObject[\"name\"] != undefined) {\r\n\t\t\tthis.title = jsonObject[\"name\"];\r\n\t\t}\r\n\r\n\t\tthis.scale = 0; // default to free.\r\n\t\t// if (jsonObject[\"scale\"] != undefined) {\r\n\t\t// \tconst oldScaleNames: Dictionary<string> = {\r\n\t\t// \t\t\"romani :)\": \"dbl harmonic :)\",\r\n\t\t// \t\t\"romani :(\": \"dbl harmonic :(\",\r\n\t\t// \t\t\"enigma\": \"strange\",\r\n\t\t// \t};\r\n\t\t// \tconst scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\r\n\t\t// \tconst scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\r\n\t\t// \tif (scale != -1) this.scale = scale;\r\n\t\t// }\r\n\r\n\t\t// TODO: Change key to song frequency offset\r\n\t\t// if (jsonObject[\"key\"] != undefined) {\r\n\t\t// \tif (typeof (jsonObject[\"key\"]) == \"number\") {\r\n\t\t// \t\tthis.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\r\n\t\t// \t} else if (typeof (jsonObject[\"key\"]) == \"string\") {\r\n\t\t// \t\tconst key: string = jsonObject[\"key\"];\r\n\t\t// \t\tconst letter: string = key.charAt(0).toUpperCase();\r\n\t\t// \t\tconst symbol: string = key.charAt(1).toLowerCase();\r\n\t\t// \t\tconst letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\r\n\t\t// \t\tconst accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\r\n\t\t// \t\tlet index: number | undefined = letterMap[letter];\r\n\t\t// \t\tconst offset: number | undefined = accidentalMap[symbol];\r\n\t\t// \t\tif (index != undefined) {\r\n\t\t// \t\t\tif (offset != undefined) index += offset;\r\n\t\t// \t\t\tif (index < 0) index += 12;\r\n\t\t// \t\t\tindex = index % 12;\r\n\t\t// \t\t\tthis.key = index;\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// }\r\n\t\tthis.key = 0; // key relic (TODO)\r\n\r\n\t\tif (jsonObject[\"centerFrequency\"] != undefined) {\r\n\t\t\tthis.centerFrequency = jsonObject[\"centerFrequency\"];\r\n\t\t}\r\n\r\n\t\tif (jsonObject[\"edo\"] != undefined) {\r\n\t\t\tthis.edo = jsonObject[\"edo\"];\r\n\t\t}\r\n\r\n\t\tif (jsonObject[\"beatsPerMinute\"] != undefined) {\r\n\t\t\tthis.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\r\n\t\t}\r\n\r\n\t\tif (jsonObject[\"reverb\"] != undefined) {\r\n\t\t\tthis.reverb = clamp(0, Config.reverbRange, jsonObject[\"reverb\"] | 0);\r\n\t\t}\r\n\r\n\t\tif (jsonObject[\"beatsPerBar\"] != undefined) {\r\n\t\t\tthis.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\r\n\t\t}\r\n\r\n\t\tlet importedPartsPerBeat: number = 4;\r\n\t\tif (jsonObject[\"ticksPerBeat\"] != undefined) {\r\n\t\t\timportedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\r\n\t\t\tthis.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\r\n\t\t\tif (this.rhythm == -1) {\r\n\t\t\t\tthis.rhythm = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet maxInstruments: number = 1;\r\n\t\tlet maxPatterns: number = 1;\r\n\t\tlet maxBars: number = 1;\r\n\t\tif (jsonObject[\"channels\"]) {\r\n\t\t\tfor (const channelObject of jsonObject[\"channels\"]) {\r\n\t\t\t\tif (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\r\n\t\t\t\tif (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\r\n\t\t\t\tif (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.instrumentsPerChannel = Math.min(maxInstruments, Config.instrumentsPerChannelMax);\r\n\t\tthis.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\r\n\t\tthis.barCount = Math.min(maxBars, Config.barCountMax);\r\n\r\n\t\tif (jsonObject[\"introBars\"] != undefined) {\r\n\t\t\tthis.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\r\n\t\t}\r\n\t\tif (jsonObject[\"loopBars\"] != undefined) {\r\n\t\t\tthis.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\r\n\t\t}\r\n\r\n\t\tconst newPitchChannels: Channel[] = [];\r\n\t\tconst newNoiseChannels: Channel[] = [];\r\n\t\tconst newModChannels: Channel[] = [];\r\n\t\tif (jsonObject[\"channels\"]) {\r\n\t\t\tfor (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n\t\t\t\tlet channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n\r\n\t\t\t\tconst channel: Channel = new Channel();\r\n\r\n\t\t\t\tlet isNoiseChannel: boolean = false;\r\n\t\t\t\tlet isModChannel: boolean = false;\r\n\t\t\t\tif (channelObject[\"type\"] != undefined) {\r\n\t\t\t\t\tisNoiseChannel = (channelObject[\"type\"] == \"drum\");\r\n\t\t\t\t\tisModChannel = (channelObject[\"type\"] == \"mod\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// for older files, assume drums are channel 3.\r\n\t\t\t\t\tisNoiseChannel = (channelIndex >= 3);\r\n\t\t\t\t}\r\n\t\t\t\tif (isNoiseChannel) {\r\n\t\t\t\t\tnewNoiseChannels.push(channel);\r\n\t\t\t\t} else if (isModChannel) {\r\n\t\t\t\t\tnewModChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewPitchChannels.push(channel);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (channelObject[\"octaveScrollBar\"] != undefined) {\r\n\t\t\t\t\tchannel.octave = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, channelObject[\"octaveScrollBar\"] | 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = channel.instruments.length; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\tchannel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.length = this.instrumentsPerChannel;\r\n\r\n\t\t\t\tfor (let i: number = channel.patterns.length; i < this.patternsPerChannel; i++) {\r\n\t\t\t\t\tchannel.patterns[i] = new Pattern();\r\n\t\t\t\t}\r\n\t\t\t\tchannel.patterns.length = this.patternsPerChannel;\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\tchannel.bars[i] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tchannel.bars.length = this.barCount;\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\tconst instrument: Instrument = channel.instruments[i];\r\n\t\t\t\t\tinstrument.fromJsonObject(channelObject[\"instruments\"][i], isNoiseChannel, isModChannel, this.rhythm == 0 || this.rhythm == 2, this.rhythm >= 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n\t\t\t\t\tconst pattern: Pattern = channel.patterns[i];\r\n\r\n\t\t\t\t\tlet patternObject: any = undefined;\r\n\t\t\t\t\tif (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\r\n\t\t\t\t\tif (patternObject == undefined) continue;\r\n\r\n\t\t\t\t\tpattern.instrument = clamp(0, this.instrumentsPerChannel, (patternObject[\"instrument\"] | 0) - 1);\r\n\r\n\t\t\t\t\tif (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\r\n\t\t\t\t\t\tconst maxNoteCount: number = Math.min(this.beatsPerBar * Config.partsPerBeat, patternObject[\"notes\"].length >>> 0);\r\n\r\n\t\t\t\t\t\t//let tickClock: number = 0;\r\n\t\t\t\t\t\tfor (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\r\n\t\t\t\t\t\t\tif (j >= maxNoteCount) break;\r\n\r\n\t\t\t\t\t\t\tconst noteObject = patternObject[\"notes\"][j];\r\n\t\t\t\t\t\t\tif (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst note: Note = new Note(0, 0, 0, 0);\r\n\t\t\t\t\t\t\tnote.pitches = [];\r\n\t\t\t\t\t\t\tnote.pins = [];\r\n\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\r\n\t\t\t\t\t\t\t\tconst pitch: number = noteObject[\"pitches\"][k] | 0;\r\n\t\t\t\t\t\t\t\tif (note.pitches.indexOf(pitch) != -1) continue;\r\n\t\t\t\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t\t\t\t\tif (note.pitches.length >= Config.maxChordSize) break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (note.pitches.length < 1) continue;\r\n\r\n\t\t\t\t\t\t\t//let noteClock: number = tickClock;\r\n\t\t\t\t\t\t\tlet startInterval: number = 0;\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < noteObject[\"points\"].length; k++) {\r\n\t\t\t\t\t\t\t\tconst pointObject: any = noteObject[\"points\"][k];\r\n\t\t\t\t\t\t\t\tif (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\r\n\t\t\t\t\t\t\t\tconst interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\r\n\r\n\t\t\t\t\t\t\t\tconst time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\r\n\r\n\t\t\t\t\t\t\t\tlet volumeCap: number = this.getVolumeCapForSetting(isModChannel, channel.instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n\r\n\t\t\t\t\t\t\t\t// The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\r\n\t\t\t\t\t\t\t\t// A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\r\n\t\t\t\t\t\t\t\tlet volume: number;\r\n\t\t\t\t\t\t\t\tif (pointObject[\"volume\"] == undefined) {\r\n\t\t\t\t\t\t\t\t\tvolume = volumeCap;\r\n\t\t\t\t\t\t\t\t} else if (pointObject[\"forMod\"] == undefined) {\r\n\t\t\t\t\t\t\t\t\tvolume = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tvolume = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (time > this.beatsPerBar * Config.partsPerBeat) continue;\r\n\t\t\t\t\t\t\t\tif (note.pins.length == 0) {\r\n\t\t\t\t\t\t\t\t\t//if (time < noteClock) continue;\r\n\t\t\t\t\t\t\t\t\tnote.start = time;\r\n\t\t\t\t\t\t\t\t\tstartInterval = interval;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//if (time <= noteClock) continue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//noteClock = time;\r\n\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(interval - startInterval, time - note.start, volume));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (note.pins.length < 2) continue;\r\n\r\n\t\t\t\t\t\t\tnote.end = note.pins[note.pins.length - 1].time + note.start;\r\n\r\n\t\t\t\t\t\t\t// const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : this.maxPitch;\r\n\t\t\t\t\t\t\tconst maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n\t\t\t\t\t\t\tlet lowestPitch: number = maxPitch;\r\n\t\t\t\t\t\t\tlet highestPitch: number = 0;\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pitches.length; k++) {\r\n\t\t\t\t\t\t\t\tnote.pitches[k] += startInterval;\r\n\t\t\t\t\t\t\t\tif (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\r\n\t\t\t\t\t\t\t\t\tnote.pitches.splice(k, 1);\r\n\t\t\t\t\t\t\t\t\tk--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\r\n\t\t\t\t\t\t\t\tif (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (note.pitches.length < 1) continue;\r\n\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pins.length; k++) {\r\n\t\t\t\t\t\t\t\tconst pin: NotePin = note.pins[k];\r\n\t\t\t\t\t\t\t\tif (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\r\n\t\t\t\t\t\t\t\tif (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\r\n\t\t\t\t\t\t\t\tif (k >= 2) {\r\n\t\t\t\t\t\t\t\t\tif (pin.interval == note.pins[k - 1].interval &&\r\n\t\t\t\t\t\t\t\t\t\tpin.interval == note.pins[k - 2].interval &&\r\n\t\t\t\t\t\t\t\t\t\tpin.volume == note.pins[k - 1].volume &&\r\n\t\t\t\t\t\t\t\t\t\tpin.volume == note.pins[k - 2].volume) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pins.splice(k - 1, 1);\r\n\t\t\t\t\t\t\t\t\t\tk--;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t//tickClock = note.end;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\tchannel.bars[i] = channelObject[\"sequence\"] ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\r\n\t\tif (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\r\n\t\tif (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\r\n\t\tthis.pitchChannelCount = newPitchChannels.length;\r\n\t\tthis.noiseChannelCount = newNoiseChannels.length;\r\n\t\tthis.modChannelCount = newModChannels.length;\r\n\t\tthis.channels.length = 0;\r\n\t\tArray.prototype.push.apply(this.channels, newPitchChannels);\r\n\t\tArray.prototype.push.apply(this.channels, newNoiseChannels);\r\n\t\tArray.prototype.push.apply(this.channels, newModChannels);\r\n\t}\r\n\r\n\tpublic getPattern(channel: number, bar: number): Pattern | null {\r\n\t\tif (bar < 0 || bar >= this.barCount) return null;\r\n\t\tconst patternIndex: number = this.channels[channel].bars[bar];\r\n\t\tif (patternIndex == 0) return null;\r\n\t\treturn this.channels[channel].patterns[patternIndex - 1];\r\n\t}\r\n\r\n\tpublic getPatternInstrument(channel: number, bar: number): number {\r\n\t\tconst pattern: Pattern | null = this.getPattern(channel, bar);\r\n\t\treturn pattern == null ? 0 : pattern.instrument;\r\n\t}\r\n\r\n\tpublic getBeatsPerMinute(): number {\r\n\t\treturn this.tempo;\r\n\t}\r\n\r\n}\r\n\r\nclass Tone {\r\n\tpublic instrument: Instrument;\r\n\tpublic readonly pitches: number[] = [0, 0, 0, 0];\r\n\tpublic pitchCount: number = 0;\r\n\tpublic chordSize: number = 0;\r\n\tpublic drumsetPitch: number = 0;\r\n\tpublic note: Note | null = null;\r\n\tpublic prevNote: Note | null = null;\r\n\tpublic nextNote: Note | null = null;\r\n\tpublic prevNotePitchIndex: number = 0;\r\n\tpublic nextNotePitchIndex: number = 0;\r\n\tpublic active: boolean = false;\r\n\tpublic noteStart: number = 0;\r\n\tpublic noteEnd: number = 0;\r\n\tpublic noteLengthTicks: number = 0;\r\n\tpublic ticksSinceReleased: number = 0;\r\n\tpublic liveInputSamplesHeld: number = 0;\r\n\tpublic lastInterval: number = 0;\r\n\tpublic lastVolume: number = 0;\r\n\tpublic stereoVolume1: number = 0.0;\r\n\tpublic stereoVolume2: number = 0.0;\r\n\tpublic stereoOffset: number = 0.0;\r\n\tpublic stereoDelay: number = 0.0;\r\n\tpublic sample: number = 0.0;\r\n\tpublic readonly phases: number[] = [];\r\n\tpublic readonly phaseDeltas: number[] = [];\r\n\tpublic readonly volumeStarts: number[] = [];\r\n\tpublic readonly volumeDeltas: number[] = [];\r\n\tpublic volumeStart: number = 0.0;\r\n\tpublic volumeDelta: number = 0.0;\r\n\tpublic phaseDeltaScale: number = 0.0;\r\n\tpublic pulseWidth: number = 0.0;\r\n\tpublic pulseWidthDelta: number = 0.0;\r\n\tpublic filter: number = 0.0;\r\n\tpublic filterScale: number = 0.0;\r\n\tpublic filterSample0: number = 0.0;\r\n\tpublic filterSample1: number = 0.0;\r\n\tpublic vibratoScale: number = 0.0;\r\n\tpublic intervalMult: number = 0.0;\r\n\tpublic intervalVolumeMult: number = 1.0;\r\n\tpublic feedbackOutputs: number[] = [];\r\n\tpublic feedbackMult: number = 0.0;\r\n\tpublic feedbackDelta: number = 0.0;\r\n\tpublic stereoVolumeLStart: number = 0.0;\r\n\tpublic stereoVolumeRStart: number = 0.0;\r\n\tpublic stereoVolumeLDelta: number = 0.0;\r\n\tpublic stereoVolumeRDelta: number = 0.0;\r\n\tpublic stereoDelayStart: number = 0.0;\r\n\tpublic stereoDelayEnd: number = 0.0;\r\n\tpublic stereoDelayDelta: number = 0.0;\r\n\tpublic customVolumeStart: number = 0.0;\r\n\tpublic customVolumeEnd: number = 0.0;\r\n\tpublic filterResonanceStart: number = 0.0;\r\n\tpublic filterResonanceDelta: number = 0.0;\r\n\tpublic isFirstOrder: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tpublic reset(): void {\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis.phases[i] = 0.0;\r\n\t\t\tthis.feedbackOutputs[i] = 0.0;\r\n\t\t}\r\n\t\tthis.sample = 0.0;\r\n\t\tthis.filterSample0 = 0.0;\r\n\t\tthis.filterSample1 = 0.0;\r\n\t\tthis.liveInputSamplesHeld = 0.0;\r\n\t}\r\n\r\n}\r\n\r\nexport class Synth {\r\n\r\n\tpublic warmUpSynthesizer(song: Song | null): void {\r\n\t\t// Don't bother to generate the drum waves unless the song actually\r\n\t\t// uses them, since they may require a lot of computation.\r\n\t\tif (song != null) {\r\n\t\t\tfor (let channel: number = 0; channel < song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrument: number = 0; instrument < song.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\tSynth.getInstrumentSynthFunction(song.channels[channel].instruments[instrument]);\r\n\t\t\t\t\tsong.channels[channel].instruments[instrument].warmUp();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic computeLatestModValues(): void {\r\n\r\n\t\tif (this.song != null && this.song.modChannelCount > 0) {\r\n\r\n\t\t\t// Clear all mod values, and set up temp variables for the time a mod would be set at.\r\n\t\t\tlet latestModTimes: (number | null)[] = [];\r\n\t\t\tlet latestModInsTimes: (number | null)[][][] = [];\r\n\t\t\tthis.modValues = [];\r\n\t\t\tthis.nextModValues = [];\r\n\t\t\tthis.modInsValues = [];\r\n\t\t\tthis.nextModInsValues = [];\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\tlatestModInsTimes[channel] = [];\r\n\t\t\t\tthis.modInsValues[channel] = [];\r\n\t\t\t\tthis.nextModInsValues[channel] = [];\r\n\t\t\t\tfor (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\tthis.modInsValues[channel][instrument] = [];\r\n\t\t\t\t\tthis.nextModInsValues[channel][instrument] = [];\r\n\t\t\t\t\tlatestModInsTimes[channel][instrument] = [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Find out where we're at in the fraction of the current bar.\r\n\t\t\tlet currentPart: number = this.beat * Config.partsPerBeat + this.part;\r\n\r\n\t\t\t// For mod channels, calculate last set value for each mod\r\n\t\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\t\tif (!(this.song.channels[channel].muted)) {\r\n\r\n\t\t\t\t\tlet pattern: Pattern | null;\r\n\r\n\t\t\t\t\tfor (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\r\n\t\t\t\t\t\tpattern = this.song.getPattern(channel, currentBar);\r\n\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tlet instrumentIdx: number = this.song.getPatternInstrument(channel, currentBar);\r\n\t\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\t\tlet latestPinParts: number[] = [];\r\n\t\t\t\t\t\t\tlet latestPinValues: number[] = [];\r\n\r\n\t\t\t\t\t\t\tlet partsInBar: number = (currentBar == this.bar)\r\n\t\t\t\t\t\t\t\t? currentPart\r\n\t\t\t\t\t\t\t\t: this.findPartsInBar(currentBar);\r\n\r\n\t\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\t\tif (note.start < partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\r\n\t\t\t\t\t\t\t\t\tif (note.end <= partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\tlatestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\r\n\t\t\t\t\t\t\t\t\t\tlatestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].volume;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tlatestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\r\n\t\t\t\t\t\t\t\t\t\t// Find the pin where bar change happens, and compute where pin volume would be at that time\r\n\t\t\t\t\t\t\t\t\t\tfor (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx].time + note.start > partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tlatestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n\t\t\t\t\t\t\t\t\t\t\t\tpinIdx = note.pins.length;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Set modulator value, if it wasn't set in another pattern already scanned\r\n\t\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\t\tif (latestPinParts[mod] != null) {\r\n\t\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\t\t\t\tif (latestModTimes[instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modSettings[mod]] as number)) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n\t\t\t\t\t\t\t\t\t\t\tlatestModTimes[instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] as number)) {\r\n\t\t\t\t\t\t\t\t\t\tthis.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n\t\t\t\t\t\t\t\t\t\tlatestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static operatorAmplitudeCurve(amplitude: number): number {\r\n\t\treturn (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\r\n\t}\r\n\r\n\tpublic samplesPerSecond: number = 44100;\r\n\r\n\tpublic song: Song | null = null;\r\n\tpublic liveInputDuration: number = 0;\r\n\tpublic liveInputStarted: boolean = false;\r\n\tpublic liveInputPitches: number[] = [];\r\n\tpublic liveInputChannel: number = 0;\r\n\tpublic loopRepeatCount: number = -1;\r\n\tpublic volume: number = 1.0;\r\n\r\n\tprivate wantToSkip: boolean = false;\r\n\tprivate playheadInternal: number = 0.0;\r\n\tprivate bar: number = 0;\r\n\tprivate beat: number = 0;\r\n\tprivate part: number = 0;\r\n\tprivate tick: number = 0;\r\n\tprivate tickSampleCountdown: number = 0;\r\n\tprivate modValues: (number | null)[];\r\n\tprivate modInsValues: (number | null)[][][];\r\n\tprivate nextModValues: (number | null)[];\r\n\tprivate nextModInsValues: (number | null)[][][];\r\n\tprivate isPlayingSong: boolean = false;\r\n\tprivate liveInputEndTime: number = 0.0;\r\n\tprivate readonly tonePool: Deque<Tone> = new Deque<Tone>();\r\n\tprivate readonly activeTones: Array<Deque<Tone>> = [];\r\n\tprivate tyingOver: number[] = [];\r\n\tprivate readonly activeModTones: Array<Array<Deque<Tone>>> = [];\r\n\t//private readonly releasedModTones: Array<Array<Deque<Tone>>> = [];\r\n\tprivate readonly releasedTones: Array<Deque<Tone>> = [];\r\n\tprivate readonly liveInputTones: Deque<Tone> = new Deque<Tone>();\r\n\r\n\t//private highpassInput: number = 0.0;\r\n\t//private highpassOutput: number = 0.0;\r\n\tprivate limit: number = 0.0;\r\n\r\n\tprivate stereoBufferIndex: number = 0;\r\n\tprivate samplesForNone: Float32Array | null = null;\r\n\tprivate samplesForReverb: Float32Array | null = null;\r\n\tprivate samplesForChorus: Float32Array | null = null;\r\n\tprivate samplesForChorusReverb: Float32Array | null = null;\r\n\r\n\tprivate chorusDelayLine: Float32Array = new Float32Array(2048);\r\n\tprivate chorusDelayPos: number = 0;\r\n\tprivate chorusPhase: number = 0;\r\n\r\n\tprivate reverbDelayLine: Float32Array = new Float32Array(16384);\r\n\tprivate reverbDelayPos: number = 0;\r\n\tprivate reverbFeedback0: number = 0.0;\r\n\tprivate reverbFeedback1: number = 0.0;\r\n\tprivate reverbFeedback2: number = 0.0;\r\n\tprivate reverbFeedback3: number = 0.0;\r\n\r\n\tprivate audioCtx: any | null = null;\r\n\tprivate scriptNode: any | null = null;\r\n\r\n\tpublic get playing(): boolean {\r\n\t\treturn this.isPlayingSong;\r\n\t}\r\n\r\n\tpublic get playhead(): number {\r\n\t\treturn this.playheadInternal;\r\n\t}\r\n\r\n\tpublic set playhead(value: number) {\r\n\t\tif (this.song != null) {\r\n\t\t\tthis.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\r\n\t\t\tlet remainder: number = this.playheadInternal;\r\n\t\t\tthis.bar = Math.floor(remainder);\r\n\t\t\tremainder = this.song.beatsPerBar * (remainder - this.bar);\r\n\t\t\tthis.beat = Math.floor(remainder);\r\n\t\t\tremainder = Config.partsPerBeat * (remainder - this.beat);\r\n\t\t\tthis.part = Math.floor(remainder);\r\n\t\t\tremainder = Config.ticksPerPart * (remainder - this.part);\r\n\t\t\tthis.tick = Math.floor(remainder);\r\n\t\t\tconst samplesPerTick: number = this.getSamplesPerTick();\r\n\t\t\tremainder = samplesPerTick * (remainder - this.tick);\r\n\t\t\tthis.tickSampleCountdown = samplesPerTick - remainder;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getSamplesPerBar(): number {\r\n\t\tif (this.song == null) throw new Error();\r\n\t\treturn this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\r\n\t}\r\n\r\n\t// Calculate the total number of parts that will be played in the current bar before any next bar mods trigger.\r\n\tprivate findPartsInBar(bar: number): number {\r\n\t\tif (this.song == null) return 0;\r\n\t\tlet partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\tlet pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n\t\t\tif (pattern != null) {\r\n\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tif (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\tif (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n\t\t\t\t\t\t\t\t// Find the earliest next bar note.\r\n\t\t\t\t\t\t\t\tif (partsInBar > note.start)\r\n\t\t\t\t\t\t\t\t\tpartsInBar = note.start;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn partsInBar;\r\n\t}\r\n\r\n\t// Returns the total samples in the song\r\n\tpublic getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\r\n\t\tif (this.song == null)\r\n\t\t\treturn -1;\r\n\r\n\t\t// Compute the window to be checked (start bar to end bar)\r\n\t\tlet startBar: number = enableIntro ? 0 : this.song.loopStart;\r\n\t\tlet endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\r\n\t\tlet hasTempoMods: boolean = false;\r\n\t\tlet hasNextBarMods: boolean = false;\r\n\t\tlet prevTempo: number = this.song.tempo;\r\n\r\n\t\t// Determine if any tempo or next bar mods happen anywhere in the window\r\n\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\tlet pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\tif (instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\thasTempoMods = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\thasNextBarMods = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\r\n\t\tif (startBar > 0) {\r\n\t\t\tlet latestTempoPin: number | null = null;\r\n\t\t\tlet latestTempoValue: number = 0;\r\n\r\n\t\t\tfor (let bar: number = startBar - 1; bar >= 0; bar--) {\r\n\t\t\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\t\t\tlet pattern = this.song.getPattern(channel, bar);\r\n\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tlet instrumentIdx: number = this.song.getPatternInstrument(channel, bar);\r\n\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\r\n\t\t\t\t\t\tlet partsInBar: number = this.findPartsInBar(bar);\r\n\r\n\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\tif (instrument.modSettings[Config.modCount - 1 - note.pitches[0]] == ModSetting.mstTempo && instrument.modStatuses[Config.modCount - 1 - note.pitches[0]] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\t\tif (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\r\n\t\t\t\t\t\t\t\t\tif (note.end <= partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\tlatestTempoPin = note.end;\r\n\t\t\t\t\t\t\t\t\t\tlatestTempoValue = note.pins[note.pins.length - 1].volume;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tlatestTempoPin = partsInBar;\r\n\t\t\t\t\t\t\t\t\t\t// Find the pin where bar change happens, and compute where pin volume would be at that time\r\n\t\t\t\t\t\t\t\t\t\tfor (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx].time + note.start > partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tlatestTempoValue = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n\t\t\t\t\t\t\t\t\t\t\t\tpinIdx = note.pins.length;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Done once you process a pattern where tempo mods happened, since the search happens backward\r\n\t\t\t\tif (latestTempoPin != null) {\r\n\t\t\t\t\tprevTempo = this.song.modValueToReal(latestTempoValue, ModSetting.mstTempo);\r\n\t\t\t\t\tbar = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (hasTempoMods || hasNextBarMods) {\r\n\t\t\t// Run from start bar to end bar and observe looping, computing average tempo across each bar\r\n\t\t\tlet bar: number = startBar;\r\n\t\t\tlet ended: boolean = false;\r\n\t\t\tlet totalSamples: number = 0;\r\n\r\n\t\t\twhile (!ended) {\r\n\t\t\t\t// Compute the subsection of the pattern that will play\r\n\t\t\t\tlet partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n\t\t\t\tlet currentPart: number = 0;\r\n\r\n\t\t\t\tif (hasNextBarMods) {\r\n\t\t\t\t\tpartsInBar = this.findPartsInBar(bar);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Compute average tempo in this tick window, or use last tempo if nothing happened\r\n\t\t\t\tif (hasTempoMods) {\r\n\t\t\t\t\tlet foundMod: boolean = false;\r\n\t\t\t\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tif (foundMod == false) {\r\n\t\t\t\t\t\t\tlet pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n\t\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n\t\t\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\t\t\tif (foundMod == false && instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong\r\n\t\t\t\t\t\t\t\t\t\t&& pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\r\n\t\t\t\t\t\t\t\t\t\t// Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\r\n\t\t\t\t\t\t\t\t\t\tfoundMod = true;\r\n\t\t\t\t\t\t\t\t\t\t// Need to re-sort the notes by start time to make the next part much less painful.\r\n\t\t\t\t\t\t\t\t\t\tpattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t\t\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Compute samples up to this note\r\n\t\t\t\t\t\t\t\t\t\t\t\ttotalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (note.start < partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Compute samples up to this pin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst prevPinTempo: number = this.song.modValueToReal(note.pins[pinIdx - 1].volume, ModSetting.mstTempo);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet currPinTempo: number = this.song.modValueToReal(note.pins[pinIdx].volume, ModSetting.mstTempo);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx].time + note.start > partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrPinTempo = this.song.modValueToReal(note.pins[pinIdx - 1].volume + (note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time), ModSetting.mstTempo);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (currPinTempo != prevPinTempo) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The starting formula is\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Substituting BPM for a step variable that moves with respect to the current tick, we get\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// No tempo change between the two pins.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprevTempo = currPinTempo;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Compute samples for the rest of the bar\r\n\t\t\t\ttotalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n\t\t\t\tbar++;\r\n\t\t\t\tif (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\t\t\tbar = this.song.loopStart;\r\n\t\t\t\t\tif (loop > 0) loop--;\r\n\t\t\t\t}\r\n\t\t\t\tif (bar >= endBar) {\r\n\t\t\t\t\tended = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn Math.ceil(totalSamples);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// No tempo or next bar mods... phew! Just calculate normally.\r\n\t\t\treturn this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\r\n\t\tif (this.song == null) throw new Error();\r\n\t\tlet bars: number = this.song.loopLength * (useLoopCount + 1);\r\n\t\tif (enableIntro) bars += this.song.loopStart;\r\n\t\tif (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\r\n\t\treturn bars;\r\n\t}\r\n\r\n\tconstructor(song: Song | string | null = null) {\r\n\t\tif (song != null) this.setSong(song);\r\n\t}\r\n\r\n\tpublic setSong(song: Song | string): void {\r\n\t\tif (typeof (song) == \"string\") {\r\n\t\t\tthis.song = new Song(song);\r\n\t\t} else if (song instanceof Song) {\r\n\t\t\tthis.song = song;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setModValue(volumeStart: number, volumeEnd: number, mod: number, instrument: Instrument, setting: ModSetting): number {\r\n\t\tlet val: number;\r\n\t\tlet nextVal: number;\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\tval = (this.song as Song).modValueToReal(volumeStart, setting);\r\n\t\t\t\tnextVal = (this.song as Song).modValueToReal(volumeEnd, setting);\r\n\t\t\t\tif (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\r\n\t\t\t\t\tthis.modValues[setting] = val;\r\n\t\t\t\t\tthis.nextModValues[setting] = nextVal;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\tval = this.song!.modValueToReal(volumeStart, setting);\r\n\t\t\t\tnextVal = this.song!.modValueToReal(volumeEnd, setting);\r\n\t\t\t\tlet channelAdjust: number = instrument.modChannels[mod] + ((instrument.modStatuses[mod] == ModStatus.msForNoise) ? this.song!.pitchChannelCount : 0);\r\n\r\n\t\t\t\tif (this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] == null\r\n\t\t\t\t\t|| this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != val\r\n\t\t\t\t\t|| this.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != nextVal) {\r\n\t\t\t\t\tthis.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = val;\r\n\t\t\t\t\tthis.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = nextVal;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\tval = (this.song as Song).modValueToReal(volumeStart, setting);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstNone:\r\n\t\t\tdefault:\r\n\t\t\t\tval = -1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn val;\r\n\t}\r\n\r\n\tpublic getModValue(setting: ModSetting, forSong: boolean, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\r\n\t\tif (forSong) {\r\n\t\t\tif (this.modValues[setting] != null && this.nextModValues[setting] != null) {\r\n\t\t\t\treturn nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\r\n\t\t\t}\r\n\t\t} else if (channel != undefined && instrument != undefined) {\r\n\t\t\tif (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n\t\t\t\treturn nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t// Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\r\n\tpublic isAnyModActive(channel: number, instrument: number): boolean {\r\n\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\tif ((this.modValues != undefined && this.modValues[setting] != null)\r\n\t\t\t\t|| (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic unsetMod(setting: ModSetting, channel?: number, instrument?: number) {\r\n\t\tif (this.isModActive(setting, true) || (channel != undefined && instrument != undefined && this.isModActive(setting, false, channel, instrument))) {\r\n\t\t\tthis.modValues[setting] = null;\r\n\t\t\tthis.nextModValues[setting] = null;\r\n\t\t\tif (channel != undefined && instrument != undefined) {\r\n\t\t\t\tthis.modInsValues[channel][instrument][setting] = null;\r\n\t\t\t\tthis.nextModInsValues[channel][instrument][setting] = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic isModActive(setting: ModSetting, forSong: boolean, channel?: number, instrument?: number): boolean {\r\n\t\tif (forSong) {\r\n\t\t\treturn (this.modValues != undefined && this.modValues[setting] != null);\r\n\t\t} else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null && this.modInsValues[channel][instrument][setting] != null) {\r\n\t\t\treturn (this.modInsValues[channel][instrument][setting] != null);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate activateAudio(): void {\r\n\t\tif (this.audioCtx == null || this.scriptNode == null) {\r\n\t\t\tthis.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)();\r\n\t\t\tthis.samplesPerSecond = this.audioCtx.sampleRate;\r\n\t\t\tthis.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(2048, 0, 2) : this.audioCtx.createJavaScriptNode(2048, 0, 2); // 2048, 0 input channels, 2 output channels\r\n\t\t\tthis.scriptNode.onaudioprocess = this.audioProcessCallback;\r\n\t\t\tthis.scriptNode.channelCountMode = 'explicit';\r\n\t\t\tthis.scriptNode.channelInterpretation = 'speakers';\r\n\t\t\tthis.scriptNode.connect(this.audioCtx.destination);\r\n\t\t}\r\n\t\tthis.audioCtx.resume();\r\n\t}\r\n\r\n\tprivate deactivateAudio(): void {\r\n\t\tif (this.audioCtx != null && this.scriptNode != null) {\r\n\t\t\tthis.scriptNode.disconnect(this.audioCtx.destination);\r\n\t\t\tthis.scriptNode = null;\r\n\t\t\tif (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\r\n\t\t\tthis.audioCtx = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic maintainLiveInput(): void {\r\n\t\tthis.activateAudio();\r\n\t\tthis.liveInputEndTime = performance.now() + 10000.0;\r\n\t}\r\n\r\n\tpublic play(): void {\r\n\t\tif (this.isPlayingSong) return;\r\n\t\tthis.isPlayingSong = true;\r\n\t\tthis.warmUpSynthesizer(this.song);\r\n\t\tthis.computeLatestModValues();\r\n\t\tthis.activateAudio();\r\n\t}\r\n\r\n\tpublic pause(): void {\r\n\t\tif (!this.isPlayingSong) return;\r\n\t\tthis.isPlayingSong = false;\r\n\t\tif (this.song != null) {\r\n\t\t\tthis.song.inVolumeCap = 0.0;\r\n\t\t\tthis.song.outVolumeCap = 0.0;\r\n\t\t}\r\n\t\tthis.modValues = [];\r\n\t\tthis.modInsValues = [];\r\n\t\tthis.nextModValues = [];\r\n\t\tthis.nextModInsValues = [];\r\n\t\tthis.tyingOver = [];\r\n\t}\r\n\r\n\tpublic snapToStart(): void {\r\n\t\tthis.bar = 0;\r\n\t\tthis.snapToBar();\r\n\t}\r\n\r\n\tpublic goToBar(bar: number): void {\r\n\t\tthis.bar = bar;\r\n\t\tthis.playheadInternal = this.bar;\r\n\t}\r\n\r\n\tpublic snapToBar(): void {\r\n\t\tthis.playheadInternal = this.bar;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\t\tthis.tick = 0;\r\n\t\tthis.tickSampleCountdown = 0;\r\n\t}\r\n\r\n\tpublic resetEffects(): void {\r\n\t\tthis.reverbDelayPos = 0;\r\n\t\tthis.reverbFeedback0 = 0.0;\r\n\t\tthis.reverbFeedback1 = 0.0;\r\n\t\tthis.reverbFeedback2 = 0.0;\r\n\t\tthis.reverbFeedback3 = 0.0;\r\n\t\t//this.highpassInput = 0.0;\r\n\t\t//this.highpassOutput = 0.0;\r\n\t\tthis.freeAllTones();\r\n\t\tfor (let i: number = 0; i < this.reverbDelayLine.length; i++) this.reverbDelayLine[i] = 0.0;\r\n\t\tfor (let i: number = 0; i < this.chorusDelayLine.length; i++) this.chorusDelayLine[i] = 0.0;\r\n\t\tif (this.samplesForNone != null) for (let i: number = 0; i < this.samplesForNone.length; i++) this.samplesForNone[i] = 0.0;\r\n\t\tif (this.samplesForReverb != null) for (let i: number = 0; i < this.samplesForReverb.length; i++) this.samplesForReverb[i] = 0.0;\r\n\t\tif (this.samplesForChorus != null) for (let i: number = 0; i < this.samplesForChorus.length; i++) this.samplesForChorus[i] = 0.0;\r\n\t\tif (this.samplesForChorusReverb != null) for (let i: number = 0; i < this.samplesForChorusReverb.length; i++) this.samplesForChorusReverb[i] = 0.0;\r\n\t}\r\n\r\n\tpublic jumpIntoLoop(): void {\r\n\t\tif (!this.song) return;\r\n\t\tif (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\r\n\t\t\tconst oldBar: number = this.bar;\r\n\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\tthis.playheadInternal += this.bar - oldBar;\r\n\r\n\t\t\tif (this.playing)\r\n\t\t\t\tthis.computeLatestModValues();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic nextBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tconst oldBar: number = this.bar;\r\n\t\tthis.bar++;\r\n\t\tif (this.bar >= this.song.barCount) {\r\n\t\t\tthis.bar = 0;\r\n\t\t}\r\n\t\tthis.playheadInternal += this.bar - oldBar;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tpublic skipBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tconst samplesPerTick: number = this.getSamplesPerTick();\r\n\t\tthis.bar++;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\t\tthis.tick = 0;\r\n\t\tthis.tickSampleCountdown = samplesPerTick;\r\n\r\n\t\tif (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\tif (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic firstBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tthis.bar = 0;\r\n\t\tthis.playheadInternal = 0;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tpublic jumpToEditingBar(bar: number): void {\r\n\t\tif (!this.song) return;\r\n\r\n\t\tthis.bar = bar;\r\n\r\n\t\tthis.playheadInternal = bar;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tpublic prevBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tconst oldBar: number = this.bar;\r\n\t\tthis.bar--;\r\n\t\tif (this.bar < 0 || this.bar >= this.song.barCount) {\r\n\t\t\tthis.bar = this.song.barCount - 1;\r\n\t\t}\r\n\t\tthis.playheadInternal += this.bar - oldBar;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tprivate audioProcessCallback = (audioProcessingEvent: any): void => {\r\n\t\tconst outputBuffer = audioProcessingEvent.outputBuffer;\r\n\t\tconst outputDataL: Float32Array = outputBuffer.getChannelData(0);\r\n\t\tconst outputDataR: Float32Array = outputBuffer.getChannelData(1);\r\n\r\n\t\tconst isPlayingLiveTones = performance.now() < this.liveInputEndTime;\r\n\t\tif (!isPlayingLiveTones && !this.isPlayingSong) {\r\n\t\t\tfor (let i: number = 0; i < outputBuffer.length; i++) {\r\n\t\t\t\toutputDataL[i] = 0.0;\r\n\t\t\t\toutputDataR[i] = 0.0;\r\n\t\t\t}\r\n\t\t\tthis.deactivateAudio();\r\n\t\t} else {\r\n\t\t\tthis.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\r\n\t\tif (this.song == null) {\r\n\t\t\tfor (let i: number = 0; i < outputBufferLength; i++) {\r\n\t\t\t\toutputDataL[i] = 0.0;\r\n\t\t\t\toutputDataR[i] = 0.0;\r\n\t\t\t}\r\n\t\t\tthis.deactivateAudio();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.song.inVolumeCap = 0.0; // Reset volume cap for this run\r\n\t\tthis.song.outVolumeCap = 0.0;\r\n\r\n\t\tconst channelCount: number = this.song.pitchChannelCount + this.song.noiseChannelCount;\r\n\r\n\t\tfor (let i: number = this.activeTones.length; i < channelCount; i++) {\r\n\t\t\tthis.activeTones[i] = new Deque<Tone>();\r\n\t\t\tthis.releasedTones[i] = new Deque<Tone>();\r\n\t\t}\r\n\t\tthis.activeTones.length = channelCount;\r\n\t\tthis.releasedTones.length = channelCount;\r\n\t\tif (channelCount != this.tyingOver.length) {\r\n\t\t\tlet idx: number = this.tyingOver.length;\r\n\t\t\tthis.tyingOver.length = channelCount;\r\n\t\t\twhile (idx < this.tyingOver.length) {\r\n\t\t\t\tthis.tyingOver[idx++] = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = this.activeModTones.length; i < this.song.modChannelCount; i++) {\r\n\t\t\tthis.activeModTones[i] = [];\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tthis.activeModTones[i][mod] = new Deque<Tone>();\r\n\t\t\t}\r\n\t\t\tthis.activeModTones[i].length = Config.modCount;\r\n\t\t}\r\n\t\tthis.activeModTones.length = this.song.modChannelCount;\r\n\r\n\t\tlet samplesPerTick: number = this.getSamplesPerTick();\r\n\t\tlet bufferIndex: number = 0;\r\n\t\tlet ended: boolean = false;\r\n\r\n\t\t// Check the bounds of the playhead:\r\n\t\twhile (this.tickSampleCountdown <= 0) this.tickSampleCountdown += samplesPerTick;\r\n\t\tif (this.tickSampleCountdown > samplesPerTick) this.tickSampleCountdown = samplesPerTick;\r\n\t\tif (playSong) {\r\n\t\t\tif (this.beat >= this.song.beatsPerBar) {\r\n\t\t\t\tthis.bar++;\r\n\t\t\t\tthis.beat = 0;\r\n\t\t\t\tthis.part = 0;\r\n\t\t\t\tthis.tick = 0;\r\n\t\t\t\tthis.tickSampleCountdown = samplesPerTick;\r\n\r\n\t\t\t\tif (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\t\t\tif (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.bar >= this.song.barCount) {\r\n\t\t\t\tthis.bar = 0;\r\n\t\t\t\tif (this.loopRepeatCount != -1) {\r\n\t\t\t\t\tended = true;\r\n\t\t\t\t\tthis.pause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//const synthStartTime: number = performance.now();\r\n\r\n\t\tconst stereoBufferLength: number = outputBufferLength * 4;\r\n\t\tif (this.samplesForNone == null || this.samplesForNone.length != stereoBufferLength ||\r\n\t\t\tthis.samplesForReverb == null || this.samplesForReverb.length != stereoBufferLength ||\r\n\t\t\tthis.samplesForChorus == null || this.samplesForChorus.length != stereoBufferLength ||\r\n\t\t\tthis.samplesForChorusReverb == null || this.samplesForChorusReverb.length != stereoBufferLength) {\r\n\t\t\tthis.samplesForNone = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.samplesForReverb = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.samplesForChorus = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.samplesForChorusReverb = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.stereoBufferIndex = 0;\r\n\t\t}\r\n\t\tlet stereoBufferIndex: number = this.stereoBufferIndex;\r\n\t\tconst samplesForNone: Float32Array = this.samplesForNone;\r\n\t\tconst samplesForReverb: Float32Array = this.samplesForReverb;\r\n\t\tconst samplesForChorus: Float32Array = this.samplesForChorus;\r\n\t\tconst samplesForChorusReverb: Float32Array = this.samplesForChorusReverb;\r\n\r\n\t\t// Post processing parameters:\r\n\t\tconst volume: number = +this.volume;\r\n\t\tconst chorusDelayLine: Float32Array = this.chorusDelayLine;\r\n\t\tconst reverbDelayLine: Float32Array = this.reverbDelayLine;\r\n\t\tconst chorusDuration: number = 2.0;\r\n\t\tconst chorusAngle: number = Math.PI * 2.0 / (chorusDuration * this.samplesPerSecond);\r\n\t\tconst chorusRange: number = 150 * this.samplesPerSecond / 44100;\r\n\t\tconst chorusOffset0: number = 0x800 - 1.51 * chorusRange;\r\n\t\tconst chorusOffset1: number = 0x800 - 2.10 * chorusRange;\r\n\t\tconst chorusOffset2: number = 0x800 - 3.35 * chorusRange;\r\n\t\tconst chorusOffset3: number = 0x800 - 1.47 * chorusRange;\r\n\t\tconst chorusOffset4: number = 0x800 - 2.15 * chorusRange;\r\n\t\tconst chorusOffset5: number = 0x800 - 3.25 * chorusRange;\r\n\t\tlet chorusPhase: number = this.chorusPhase % (Math.PI * 2.0);\r\n\t\tlet chorusDelayPos: number = this.chorusDelayPos & 0x7FF;\r\n\t\tlet reverbDelayPos: number = this.reverbDelayPos & 0x3FFF;\r\n\t\tlet reverbFeedback0: number = +this.reverbFeedback0;\r\n\t\tlet reverbFeedback1: number = +this.reverbFeedback1;\r\n\t\tlet reverbFeedback2: number = +this.reverbFeedback2;\r\n\t\tlet reverbFeedback3: number = +this.reverbFeedback3;\r\n\t\tlet useReverb: number = this.song.reverb;\r\n\t\tif (this.isModActive(ModSetting.mstReverb, true)) {\r\n\t\t\tuseReverb = this.getModValue(ModSetting.mstReverb, true);\r\n\t\t}\r\n\t\tlet reverb: number = Math.pow(useReverb / Config.reverbRange, 0.667) * 0.425;\r\n\t\t//const highpassFilter: number = Math.pow(0.5, 400 / this.samplesPerSecond);\r\n\t\tconst limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond); // Default 4.0\r\n\t\tconst limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond); // Default 4000.0;\r\n\t\tconst compressionThreshold: number = this.song.compressionThreshold; // Default 1\r\n\t\tconst limitThreshold: number = this.song.limitThreshold; // Default 1\r\n\t\tconst compressionRatio: number = this.song.compressionRatio; // Default 1\r\n\t\tconst limitRatio: number = this.song.limitRatio; // Default 1\r\n\t\tconst masterGain: number = this.song.masterGain; // Default 1\r\n\t\t//let highpassInput: number = +this.highpassInput;\r\n\t\t//let highpassOutput: number = +this.highpassOutput;\r\n\t\tlet limit: number = +this.limit;\r\n\r\n\t\twhile (bufferIndex < outputBufferLength && !ended) {\r\n\r\n\t\t\tconst samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\r\n\t\t\tconst runLength: number = Math.min(Math.ceil(this.tickSampleCountdown), samplesLeftInBuffer);\r\n\r\n\t\t\tfor (let modChannel: number = 0, channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; modChannel < this.song.modChannelCount; modChannel++, channel++) {\r\n\t\t\t\t// Also determines mod tones.\r\n\t\t\t\tthis.determineCurrentActiveTones(this.song, channel, playSong);\r\n\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tfor (let i: number = 0; i < this.activeModTones[modChannel][mod].count(); i++) {\r\n\t\t\t\t\t\tconst tone: Tone = this.activeModTones[modChannel][mod].get(i);\r\n\r\n\t\t\t\t\t\tif (this.song.channels[channel].muted == false)\r\n\t\t\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Handle next bar mods if they were set\r\n\t\t\tif (this.wantToSkip) {\r\n\t\t\t\tthis.wantToSkip = false;\r\n\t\t\t\tthis.skipBar();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isModActive(ModSetting.mstReverb, true)) {\r\n\t\t\t\treverb = Math.pow(this.getModValue(ModSetting.mstReverb, true) / Config.reverbRange, 0.667) * 0.425;\r\n\t\t\t}\r\n\r\n\t\t\t// Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\r\n\r\n\t\t\tconst tickSampleCountdown: number = this.tickSampleCountdown;\r\n\t\t\tconst startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n\t\t\tconst endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n\t\t\tconst ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n\t\t\tconst partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n\t\t\tconst partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n\t\t\tconst partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n\t\t\tconst partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < this.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\tlet useVibratoSpeed: number = instrument.vibratoSpeed;\r\n\r\n\t\t\t\t\tinstrument.LFOtime = instrument.nextLFOtime;\r\n\r\n\t\t\t\t\tif (this.isModActive(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx)) {\r\n\t\t\t\t\t\tuseVibratoSpeed = this.getModValue(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx, false);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (useVibratoSpeed == 0) {\r\n\t\t\t\t\t\tinstrument.LFOtime = 0;\r\n\t\t\t\t\t\tinstrument.nextLFOtime = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinstrument.nextLFOtime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\r\n\t\t\t\tif (channel == this.liveInputChannel) {\r\n\t\t\t\t\tthis.determineLiveInputTones(this.song);\r\n\r\n\t\t\t\t\tfor (let i: number = 0; i < this.liveInputTones.count(); i++) {\r\n\t\t\t\t\t\tconst tone: Tone = this.liveInputTones.get(i);\r\n\t\t\t\t\t\t// Hmm. Will allow active input from a muted channel for now.\r\n\t\t\t\t\t\t//if (this.song.channels[channel].muted == false)\r\n\t\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.determineCurrentActiveTones(this.song, channel, playSong);\r\n\t\t\t\tfor (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n\t\t\t\t\tconst tone: Tone = this.activeTones[channel].get(i);\r\n\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n\t\t\t\t\tconst tone: Tone = this.releasedTones[channel].get(i);\r\n\t\t\t\t\tif (tone.ticksSinceReleased >= tone.instrument.getTransition().releaseTicks) {\r\n\t\t\t\t\t\tthis.freeReleasedTone(channel, i);\r\n\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n\r\n\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, true, shouldFadeOutFast);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Post processing:\r\n\t\t\tlet chorusTap0Index: number = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n\t\t\tlet chorusTap1Index: number = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n\t\t\tlet chorusTap2Index: number = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n\t\t\tlet chorusTap3Index: number = chorusDelayPos + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n\t\t\tlet chorusTap4Index: number = chorusDelayPos + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n\t\t\tlet chorusTap5Index: number = chorusDelayPos + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n\t\t\tchorusPhase += chorusAngle * runLength;\r\n\t\t\tconst chorusTap0End: number = chorusDelayPos + runLength + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n\t\t\tconst chorusTap1End: number = chorusDelayPos + runLength + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n\t\t\tconst chorusTap2End: number = chorusDelayPos + runLength + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n\t\t\tconst chorusTap3End: number = chorusDelayPos + runLength + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n\t\t\tconst chorusTap4End: number = chorusDelayPos + runLength + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n\t\t\tconst chorusTap5End: number = chorusDelayPos + runLength + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n\t\t\tconst chorusTap0Delta: number = (chorusTap0End - chorusTap0Index) / runLength;\r\n\t\t\tconst chorusTap1Delta: number = (chorusTap1End - chorusTap1Index) / runLength;\r\n\t\t\tconst chorusTap2Delta: number = (chorusTap2End - chorusTap2Index) / runLength;\r\n\t\t\tconst chorusTap3Delta: number = (chorusTap3End - chorusTap3Index) / runLength;\r\n\t\t\tconst chorusTap4Delta: number = (chorusTap4End - chorusTap4Index) / runLength;\r\n\t\t\tconst chorusTap5Delta: number = (chorusTap5End - chorusTap5Index) / runLength;\r\n\t\t\tconst runEnd: number = bufferIndex + runLength;\r\n\t\t\tfor (let i: number = bufferIndex; i < runEnd; i++) {\r\n\t\t\t\tconst bufferIndexL: number = stereoBufferIndex;\r\n\t\t\t\tconst bufferIndexR: number = stereoBufferIndex + 1;\r\n\t\t\t\tconst sampleForNoneL: number = samplesForNone[bufferIndexL]; samplesForNone[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForNoneR: number = samplesForNone[bufferIndexR]; samplesForNone[bufferIndexR] = 0.0;\r\n\t\t\t\tconst sampleForReverbL: number = samplesForReverb[bufferIndexL]; samplesForReverb[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForReverbR: number = samplesForReverb[bufferIndexR]; samplesForReverb[bufferIndexR] = 0.0;\r\n\t\t\t\tconst sampleForChorusL: number = samplesForChorus[bufferIndexL]; samplesForChorus[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForChorusR: number = samplesForChorus[bufferIndexR]; samplesForChorus[bufferIndexR] = 0.0;\r\n\t\t\t\tconst sampleForChorusReverbL: number = samplesForChorusReverb[bufferIndexL]; samplesForChorusReverb[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForChorusReverbR: number = samplesForChorusReverb[bufferIndexR]; samplesForChorusReverb[bufferIndexR] = 0.0;\r\n\t\t\t\tstereoBufferIndex += 2;\r\n\r\n\t\t\t\tconst combinedChorusL: number = sampleForChorusL + sampleForChorusReverbL;\r\n\t\t\t\tconst combinedChorusR: number = sampleForChorusR + sampleForChorusReverbR;\r\n\r\n\t\t\t\tconst chorusTap0Ratio: number = chorusTap0Index % 1;\r\n\t\t\t\tconst chorusTap1Ratio: number = chorusTap1Index % 1;\r\n\t\t\t\tconst chorusTap2Ratio: number = chorusTap2Index % 1;\r\n\t\t\t\tconst chorusTap3Ratio: number = chorusTap3Index % 1;\r\n\t\t\t\tconst chorusTap4Ratio: number = chorusTap4Index % 1;\r\n\t\t\t\tconst chorusTap5Ratio: number = chorusTap5Index % 1;\r\n\t\t\t\tconst chorusTap0A: number = chorusDelayLine[(chorusTap0Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap0B: number = chorusDelayLine[(chorusTap0Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap1A: number = chorusDelayLine[(chorusTap1Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap1B: number = chorusDelayLine[(chorusTap1Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap2A: number = chorusDelayLine[(chorusTap2Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap2B: number = chorusDelayLine[(chorusTap2Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap3A: number = chorusDelayLine[(chorusTap3Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap3B: number = chorusDelayLine[(chorusTap3Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap4A: number = chorusDelayLine[(chorusTap4Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap4B: number = chorusDelayLine[(chorusTap4Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap5A: number = chorusDelayLine[(chorusTap5Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap5B: number = chorusDelayLine[(chorusTap5Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap0: number = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\r\n\t\t\t\tconst chorusTap1: number = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\r\n\t\t\t\tconst chorusTap2: number = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\r\n\t\t\t\tconst chorusTap3: number = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\r\n\t\t\t\tconst chorusTap4: number = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\r\n\t\t\t\tconst chorusTap5: number = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\r\n\t\t\t\tconst chorusSampleL = 0.5 * (combinedChorusL - chorusTap0 + chorusTap1 - chorusTap2);\r\n\t\t\t\tconst chorusSampleR = 0.5 * (combinedChorusR - chorusTap3 + chorusTap4 - chorusTap5);\r\n\t\t\t\tchorusDelayLine[chorusDelayPos] = combinedChorusL;\r\n\t\t\t\tchorusDelayLine[(chorusDelayPos + 0x400) & 0x7FF] = combinedChorusR;\r\n\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & 0x7FF;\r\n\t\t\t\tchorusTap0Index += chorusTap0Delta;\r\n\t\t\t\tchorusTap1Index += chorusTap1Delta;\r\n\t\t\t\tchorusTap2Index += chorusTap2Delta;\r\n\t\t\t\tchorusTap3Index += chorusTap3Delta;\r\n\t\t\t\tchorusTap4Index += chorusTap4Delta;\r\n\t\t\t\tchorusTap5Index += chorusTap5Delta;\r\n\r\n\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\r\n\t\t\t\t// good ratios:\t\t0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\r\n\t\t\t\t// Delay lengths:\t3041\t + 3385\t\t+ 4481\t+  5477 = 16384 = 2^14\r\n\t\t\t\t// Buffer offsets:\t3041\t-> 6426\t   -> 10907 -> 16384\r\n\t\t\t\tconst reverbDelayPos1: number = (reverbDelayPos + 3041) & 0x3FFF;\r\n\t\t\t\tconst reverbDelayPos2: number = (reverbDelayPos + 6426) & 0x3FFF;\r\n\t\t\t\tconst reverbDelayPos3: number = (reverbDelayPos + 10907) & 0x3FFF;\r\n\t\t\t\tconst reverbSample0: number = (reverbDelayLine[reverbDelayPos]);\r\n\t\t\t\tconst reverbSample1: number = reverbDelayLine[reverbDelayPos1];\r\n\t\t\t\tconst reverbSample2: number = reverbDelayLine[reverbDelayPos2];\r\n\t\t\t\tconst reverbSample3: number = reverbDelayLine[reverbDelayPos3];\r\n\t\t\t\tconst reverbTemp0: number = -(reverbSample0 + sampleForChorusReverbL + sampleForReverbL) + reverbSample1;\r\n\t\t\t\tconst reverbTemp1: number = -(reverbSample0 + sampleForChorusReverbR + sampleForReverbR) - reverbSample1;\r\n\t\t\t\tconst reverbTemp2: number = -reverbSample2 + reverbSample3;\r\n\t\t\t\tconst reverbTemp3: number = -reverbSample2 - reverbSample3;\r\n\t\t\t\treverbFeedback0 += ((reverbTemp0 + reverbTemp2) * reverb - reverbFeedback0) * 0.5;\r\n\t\t\t\treverbFeedback1 += ((reverbTemp1 + reverbTemp3) * reverb - reverbFeedback1) * 0.5;\r\n\t\t\t\treverbFeedback2 += ((reverbTemp0 - reverbTemp2) * reverb - reverbFeedback2) * 0.5;\r\n\t\t\t\treverbFeedback3 += ((reverbTemp1 - reverbTemp3) * reverb - reverbFeedback3) * 0.5;\r\n\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbFeedback0;\r\n\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbFeedback1;\r\n\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbFeedback2;\r\n\t\t\t\treverbDelayLine[reverbDelayPos] = reverbFeedback3;\r\n\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & 0x3FFF;\r\n\r\n\t\t\t\t// Apply master pre-gain to the sound, before limiting. Master gain slider is 0-5, but it's squared for more range (0-25).\r\n\t\t\t\tconst sampleL = masterGain * masterGain * (sampleForNoneL + chorusSampleL + sampleForReverbL + reverbSample1 + reverbSample2 + reverbSample3);\r\n\t\t\t\tconst sampleR = masterGain * masterGain * (sampleForNoneR + chorusSampleR + sampleForReverbR + reverbSample0 + reverbSample2 - reverbSample3);\r\n\r\n\t\t\t\t/*\r\n\t\t\t\thighpassOutput = highpassOutput * highpassFilter + sample - highpassInput;\r\n\t\t\t\thighpassInput = sample;\r\n\t\t\t\t// use highpassOutput instead of sample below?\r\n\t\t\t\t*/\r\n\r\n\t\t\t\t// A compressor/limiter.\r\n\t\t\t\tconst absL: number = sampleL < 0.0 ? -sampleL : sampleL;\r\n\t\t\t\tconst absR: number = sampleR < 0.0 ? -sampleR : sampleR;\r\n\t\t\t\tconst abs: number = absL > absR ? absL : absR;\r\n\t\t\t\tthis.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\r\n\t\t\t\t// Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\r\n\t\t\t\tconst limitRange: number = (+(abs > compressionThreshold)) + (+(abs > limitThreshold));\r\n\t\t\t\t// Determine the target amplification based on the range of the curve\r\n\t\t\t\tconst limitTarget: number =\r\n\t\t\t\t\t(+(limitRange == 0)) * (((abs + 1 - compressionThreshold) * 0.8 + 0.25) * compressionRatio + 1.05 * (1 - compressionRatio))\r\n\t\t\t\t\t+ (+(limitRange == 1)) * (1.05)\r\n\t\t\t\t\t+ (+(limitRange == 2)) * (1.05 * ((abs + 1 - limitThreshold) * limitRatio + (1 - limitThreshold)));\r\n\t\t\t\t// Move the limit towards the target\r\n\t\t\t\tlimit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\r\n\t\t\t\tconst limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\r\n\t\t\t\toutputDataL[i] = sampleL * limitedVolume;\r\n\t\t\t\toutputDataR[i] = sampleR * limitedVolume;\r\n\r\n\t\t\t\tthis.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\r\n\t\t\t}\r\n\r\n\t\t\tbufferIndex += runLength;\r\n\r\n\t\t\tthis.tickSampleCountdown -= runLength;\r\n\t\t\tif (this.tickSampleCountdown <= 0) {\r\n\r\n\t\t\t\t// Track how long tones have been released, and free them if there are too many.\r\n\t\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tfor (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n\t\t\t\t\t\tconst tone: Tone = this.releasedTones[channel].get(i);\r\n\t\t\t\t\t\ttone.ticksSinceReleased++;\r\n\r\n\t\t\t\t\t\tconst shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n\t\t\t\t\t\tif (shouldFadeOutFast) {\r\n\t\t\t\t\t\t\tthis.freeReleasedTone(channel, i);\r\n\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update arpeggio time, which is used to calculate arpeggio position\r\n\t\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet useArpeggioSpeed: number = instrument.arpeggioSpeed;\r\n\t\t\t\t\t\tif (this.isModActive(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx)) {\r\n\t\t\t\t\t\t\tuseArpeggioSpeed = this.getModValue(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx, false);\r\n\t\t\t\t\t\t\tif (Number.isInteger(useArpeggioSpeed)) {\r\n\t\t\t\t\t\t\t\tinstrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Linear interpolate arpeggio values\r\n\t\t\t\t\t\t\t\tinstrument.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tinstrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.tick++;\r\n\t\t\t\tthis.tickSampleCountdown += samplesPerTick;\r\n\t\t\t\tif (this.tick == Config.ticksPerPart) {\r\n\t\t\t\t\tthis.tick = 0;\r\n\t\t\t\t\tthis.part++;\r\n\t\t\t\t\tthis.liveInputDuration--;\r\n\t\t\t\t\tvar atEnd = this.part + this.beat * Config.partsPerBeat >= this.findPartsInBar(this.bar) - 1;\r\n\t\t\t\t\t// Check if any active tones should be released.\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\t// Check if we're at the end of the bar and have a tie-over transition. If so, do not free tone\r\n\t\t\t\t\t\tvar carryOver = false;\r\n\t\t\t\t\t\tvar toneCount = this.activeTones[channel].count();\r\n\t\t\t\t\t\tvar pattern = this.song.getPattern(channel, this.bar);\r\n\t\t\t\t\t\tif (pattern != null && atEnd) {\r\n\t\t\t\t\t\t\tvar instrument = pattern.instrument;\r\n\t\t\t\t\t\t\tif (this.song.channels[channel].instruments[instrument].tieNoteTransition && toneCount > 0) {\r\n\t\t\t\t\t\t\t\t// Verify that all tie conditions are met\r\n\t\t\t\t\t\t\t\t// 1. Check for a note in this channel at the start of the next bar\r\n\t\t\t\t\t\t\t\t// 2. Check that the note's volume start matches the current volume\r\n\t\t\t\t\t\t\t\t// 3. Check that the shape (pitches, chord size) is a match\r\n\t\t\t\t\t\t\t\t// 4. Check that the instruments are the same\r\n\t\t\t\t\t\t\t\tvar targetBar = this.bar + 1;\r\n\t\t\t\t\t\t\t\tif (targetBar >= this.song.barCount || (targetBar >= this.song.loopStart + this.song.loopLength && this.loopRepeatCount != 0)) {\r\n\t\t\t\t\t\t\t\t\ttargetBar = this.song.loopStart;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar nextPattern = this.song.getPattern(channel, targetBar);\r\n\t\t\t\t\t\t\t\tvar currNote = this.activeTones[channel].get(0).note;\r\n\t\t\t\t\t\t\t\tif (currNote != null) {\r\n\t\t\t\t\t\t\t\t\tvar pin = 0;\r\n\t\t\t\t\t\t\t\t\twhile (currNote.pins[pin].time + currNote.start < this.part + this.beat * Config.partsPerBeat && pin < currNote.pins.length - 1)\r\n\t\t\t\t\t\t\t\t\t\tpin++;\r\n\t\t\t\t\t\t\t\t\tvar currVolume = currNote.pins[pin].volume;\r\n\t\t\t\t\t\t\t\t\tvar lastInterval = currNote.pins[pin].interval;\r\n\r\n\t\t\t\t\t\t\t\t\tif (nextPattern != null && nextPattern.instrument == instrument) {\r\n\t\t\t\t\t\t\t\t\t\tfor (let i: number = 0; i < nextPattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (nextPattern.notes[i].start == 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t&& nextPattern.notes[i].pins[0].volume == currVolume\r\n\t\t\t\t\t\t\t\t\t\t\t\t&& nextPattern.notes[i].pitches.length == currNote.pitches.length) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tcarryOver = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let j: number = 0; j < currNote.pitches.length; j++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Allow any pitch order\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (nextPattern.notes[i].pitches.findIndex((p) => p == currNote!.pitches[j] + lastInterval) == -1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcarryOver = false;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tj = currNote.pitches.length;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\ti = nextPattern.notes.length;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (carryOver) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Prior to an actual tie, all releasing for hard transitions also needs to be\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// cancelled. So, this check is ran a few parts before the end of a bar too.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// In those cases, just set tyingOver to 0 for that duration to cancel release\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// handling, but not affect note start time calculations.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.part + this.beat * Config.partsPerBeat < this.findPartsInBar(this.bar)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Only does this if it is needed, so if we're long tying (next else-if below) then don't ruin the math.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.tyingOver[channel] < 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Special case: tying over a whole bar, just add the length.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse if (currNote.start == 0 && this.tyingOver[channel] >= 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] += this.part + this.beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Set tyingOver to a number >= 0 representing how many parts back the tie note started.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] = this.part + this.beat * Config.partsPerBeat - currNote.start;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n\t\t\t\t\t\t\tconst tone: Tone = this.activeTones[channel].get(i);\r\n\t\t\t\t\t\t\tconst transition: Transition = tone.instrument.getTransition();\r\n\r\n\t\t\t\t\t\t\tif (tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n\t\t\t\t\t\t\t\t// Free tone if the transition allows\r\n\t\t\t\t\t\t\t\tif (!(transition.isSeamless || tone.instrument.clicklessTransition || this.tyingOver[channel] >= 0)) {\r\n\t\t\t\t\t\t\t\t\tif (transition.releases) {\r\n\t\t\t\t\t\t\t\t\t\tthis.releaseTone(channel, tone);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis.freeTone(tone);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.activeTones[channel].remove(i);\r\n\t\t\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// End of note: if not actively trying to carry over, kill note tie\r\n\t\t\t\t\t\t\t\tif (!carryOver) {\r\n\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.song.modChannelCount; channel++) {\r\n\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < this.activeModTones[channel][mod].count(); i++) {\r\n\t\t\t\t\t\t\t\tconst tone: Tone = this.activeModTones[channel][mod].get(i);\r\n\t\t\t\t\t\t\t\tconst transition: Transition = tone.instrument.getTransition();\r\n\t\t\t\t\t\t\t\tif (!transition.isSeamless && tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n\t\t\t\t\t\t\t\t\tthis.freeTone(tone);\r\n\t\t\t\t\t\t\t\t\tthis.activeModTones[channel][mod].remove(i);\r\n\t\t\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.part == Config.partsPerBeat) {\r\n\t\t\t\t\t\tthis.part = 0;\r\n\r\n\t\t\t\t\t\tif (playSong) {\r\n\t\t\t\t\t\t\tthis.beat++;\r\n\t\t\t\t\t\t\tif (this.beat == this.song.beatsPerBar) {\r\n\t\t\t\t\t\t\t\t// bar changed, reset for next bar:\r\n\t\t\t\t\t\t\t\tthis.beat = 0;\r\n\t\t\t\t\t\t\t\tthis.bar++;\r\n\t\t\t\t\t\t\t\tif (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\t\t\t\t\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\t\t\t\t\t\t\tif (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.bar >= this.song.barCount) {\r\n\t\t\t\t\t\t\t\t\tthis.bar = 0;\r\n\t\t\t\t\t\t\t\t\tif (this.loopRepeatCount != -1) {\r\n\t\t\t\t\t\t\t\t\t\tended = true;\r\n\t\t\t\t\t\t\t\t\t\tthis.resetEffects();\r\n\t\t\t\t\t\t\t\t\t\tthis.pause();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Update mod values so that next values copy to current values\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tif (this.nextModValues != null && this.nextModValues[setting] != null)\r\n\t\t\t\t\tthis.modValues[setting] = this.nextModValues[setting];\r\n\t\t\t}\r\n\r\n\t\t\t// Set samples per tick if song tempo mods changed it\r\n\t\t\tif (this.isModActive(ModSetting.mstTempo, true)) {\r\n\t\t\t\tsamplesPerTick = this.getSamplesPerTick();\r\n\t\t\t\tthis.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\r\n\t\t\t}\r\n\r\n\t\t\t// Bound LFO times to be within their period (to keep values from getting large)\r\n\t\t\t// I figured this modulo math probably doesn't have to happen every LFO tick.\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount; channel++) {\r\n\t\t\t\tfor (let instrument of this.song.channels[channel].instruments) {\r\n\t\t\t\t\tinstrument.nextLFOtime = (instrument.nextLFOtime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\r\n\t\t\t\t\tinstrument.arpTime = (instrument.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tfor (let channel: number = 0; channel < channelCount; channel++) {\r\n\t\t\t\t\tfor (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\t\tif (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n\t\t\t\t\t\t\tthis.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Optimization: Avoid persistent reverb values in the float denormal range.\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < reverbFeedback0 && reverbFeedback0 < epsilon) reverbFeedback0 = 0.0;\r\n\t\tif (-epsilon < reverbFeedback1 && reverbFeedback1 < epsilon) reverbFeedback1 = 0.0;\r\n\t\tif (-epsilon < reverbFeedback2 && reverbFeedback2 < epsilon) reverbFeedback2 = 0.0;\r\n\t\tif (-epsilon < reverbFeedback3 && reverbFeedback3 < epsilon) reverbFeedback3 = 0.0;\r\n\t\t//if (-epsilon < highpassInput && highpassInput < epsilon) highpassInput = 0.0;\r\n\t\t//if (-epsilon < highpassOutput && highpassOutput < epsilon) highpassOutput = 0.0;\r\n\t\tif (-epsilon < limit && limit < epsilon) limit = 0.0;\r\n\r\n\t\tthis.stereoBufferIndex = (this.stereoBufferIndex + outputBufferLength * 2) % stereoBufferLength;\r\n\t\tthis.chorusPhase = chorusPhase;\r\n\t\tthis.chorusDelayPos = chorusDelayPos;\r\n\t\tthis.reverbDelayPos = reverbDelayPos;\r\n\t\tthis.reverbFeedback0 = reverbFeedback0;\r\n\t\tthis.reverbFeedback1 = reverbFeedback1;\r\n\t\tthis.reverbFeedback2 = reverbFeedback2;\r\n\t\tthis.reverbFeedback3 = reverbFeedback3;\r\n\t\t//this.highpassInput = highpassInput;\r\n\t\t//this.highpassOutput = highpassOutput;\r\n\t\tthis.limit = limit;\r\n\r\n\t\tif (playSong) {\r\n\t\t\tthis.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / this.song.beatsPerBar + this.bar;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tconst synthDuration: number = performance.now() - synthStartTime;\r\n\t\t// Performance measurements:\r\n\t\tsamplesAccumulated += outputBufferLength;\r\n\t\tsamplePerformance += synthDuration;\r\n\t\t\r\n\t\tif (samplesAccumulated >= 44100 * 4) {\r\n\t\tconst secondsGenerated = samplesAccumulated / 44100;\r\n\t\tconst secondsRequired = samplePerformance / 1000;\r\n\t\tconst ratio = secondsRequired / secondsGenerated;\r\n\t\tconsole.log(ratio);\r\n\t\tsamplePerformance = 0;\r\n\t\tsamplesAccumulated = 0;\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tprivate freeTone(tone: Tone): void {\r\n\t\tthis.tonePool.pushBack(tone);\r\n\t}\r\n\r\n\tprivate newTone(): Tone {\r\n\t\tif (this.tonePool.count() > 0) {\r\n\t\t\tconst tone: Tone = this.tonePool.popBack();\r\n\t\t\ttone.reset();\r\n\t\t\ttone.active = false;\r\n\t\t\treturn tone;\r\n\t\t}\r\n\t\treturn new Tone();\r\n\t}\r\n\r\n\tprivate releaseTone(channel: number, tone: Tone): void {\r\n\t\tif (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n\t\t\tthis.releasedTones[channel].pushFront(tone);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t/*\r\n\t\t\tfor (let mod = 0; mod < Config.modCount; mod++) {\r\n\t\t\tthis.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].pushFront(tone);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t}\r\n\t}\r\n\r\n\tprivate freeReleasedTone(channel: number, toneIndex: number): void {\r\n\t\tif (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n\t\t\tthis.freeTone(this.releasedTones[channel].get(toneIndex));\r\n\t\t\tthis.releasedTones[channel].remove(toneIndex);\r\n\t\t} else {\r\n\t\t\t/*\r\n\t\t\tfor (let mod = 0; mod < Config.modCount; mod++) {\r\n\t\t\tthis.freeTone(this.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].get(toneIndex));\r\n\t\t\tthis.releasedModTones[channel][mod].remove(toneIndex);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t}\r\n\t}\r\n\r\n\tpublic freeAllTones(): void {\r\n\t\twhile (this.liveInputTones.count() > 0) {\r\n\t\t\tthis.freeTone(this.liveInputTones.popBack());\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this.activeTones.length; i++) {\r\n\t\t\twhile (this.activeTones[i].count() > 0) {\r\n\t\t\t\tthis.freeTone(this.activeTones[i].popBack());\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this.releasedTones.length; i++) {\r\n\t\t\twhile (this.releasedTones[i].count() > 0) {\r\n\t\t\t\tthis.freeTone(this.releasedTones[i].popBack());\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.activeModTones.length; i++) {\r\n\t\t\tfor (let mod = 0; mod < this.activeModTones[i].length; mod++) {\r\n\t\t\t\twhile (this.activeModTones[i][mod].count() > 0) {\r\n\t\t\t\t\tthis.freeTone(this.activeModTones[i][mod].popBack());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*\r\n\t\tfor (let i = 0; i < this.releasedModTones.length; i++) {\r\n\t\tfor (let mod = 0; mod < this.releasedModTones[i].length; mod++) {\r\n\t\twhile (this.releasedModTones[i][mod].count() > 0) {\r\n\t\tthis.freeTone(this.releasedModTones[i][mod].popBack());\r\n\t\t}\r\n\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tprivate determineLiveInputTones(song: Song): void {\r\n\t\tconst toneList: Deque<Tone> = this.liveInputTones;\r\n\t\tconst pitches: number[] = this.liveInputPitches;\r\n\t\tlet toneCount: number = 0;\r\n\t\tif (this.liveInputDuration > 0) {\r\n\t\t\tconst instrument: Instrument = song.channels[this.liveInputChannel].instruments[song.getPatternInstrument(this.liveInputChannel, this.bar)];\r\n\r\n\t\t\tif (instrument.getChord().arpeggiates) {\r\n\t\t\t\tlet tone: Tone;\r\n\t\t\t\tif (toneList.count() == 0) {\r\n\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t} else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n\t\t\t\t\tthis.releaseTone(this.liveInputChannel, toneList.popFront());\r\n\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttone = toneList.get(0);\r\n\t\t\t\t}\r\n\t\t\t\ttoneCount = 1;\r\n\r\n\t\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\t\t\ttone.pitches[i] = pitches[i];\r\n\t\t\t\t}\r\n\t\t\t\ttone.pitchCount = pitches.length;\r\n\t\t\t\ttone.chordSize = 1;\r\n\t\t\t\ttone.instrument = instrument;\r\n\t\t\t\ttone.note = tone.prevNote = tone.nextNote = null;\r\n\t\t\t} else {\r\n\t\t\t\t//const transition: Transition = instrument.getTransition();\r\n\t\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\t\t\t//const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n\t\t\t\t\tlet tone: Tone;\r\n\t\t\t\t\tif (toneList.count() <= i) {\r\n\t\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t\t} else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n\t\t\t\t\t\tthis.releaseTone(this.liveInputChannel, toneList.get(i));\r\n\t\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\t\ttoneList.set(i, tone);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttone = toneList.get(i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoneCount++;\r\n\r\n\t\t\t\t\ttone.pitches[0] = pitches[i];\r\n\t\t\t\t\ttone.pitchCount = 1;\r\n\t\t\t\t\ttone.chordSize = pitches.length;\r\n\t\t\t\t\ttone.instrument = instrument;\r\n\t\t\t\t\ttone.note = tone.prevNote = tone.nextNote = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile (toneList.count() > toneCount) {\r\n\t\t\tthis.releaseTone(this.liveInputChannel, toneList.popBack());\r\n\t\t}\r\n\r\n\t\tthis.liveInputStarted = false;\r\n\t}\r\n\r\n\tprivate determineCurrentActiveTones(song: Song, channel: number, playSong: boolean): void {\r\n\t\tconst instrument: Instrument = song.channels[channel].instruments[song.getPatternInstrument(channel, this.bar)];\r\n\t\tconst pattern: Pattern | null = song.getPattern(channel, this.bar);\r\n\t\tconst time: number = this.part + this.beat * Config.partsPerBeat;\r\n\r\n\t\tif (playSong && song.getChannelIsMod(channel) && !song.channels[channel].muted) {\r\n\t\t\t// Offset channel (first mod channel is 0 index in mod tone array)\r\n\t\t\tlet modChannelIdx = channel - (song.pitchChannelCount + song.noiseChannelCount);\r\n\r\n\t\t\t// For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\r\n\t\t\t// The same transition logic should apply though, even though it isn't really used by mod channels.\r\n\t\t\tlet notes: (Note | null)[] = [];\r\n\t\t\tlet prevNotes: (Note | null)[] = [];\r\n\t\t\tlet nextNotes: (Note | null)[] = [];\r\n\t\t\tlet fillCount: number = Config.modCount;\r\n\t\t\twhile (fillCount--) {\r\n\t\t\t\tnotes.push(null);\r\n\t\t\t\tprevNotes.push(null);\r\n\t\t\t\tnextNotes.push(null);\r\n\t\t\t}\r\n\r\n\t\t\tif (pattern != null) {\r\n\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\tif (pattern.notes[i].end <= time) {\r\n\t\t\t\t\t\t// Actually need to check which note starts closer to the start of this note.\r\n\t\t\t\t\t\tif (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n\t\t\t\t\t\t\tprevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n\t\t\t\t\t\tnotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pattern.notes[i].start > time) {\r\n\t\t\t\t\t\t// Actually need to check which note starts closer to the end of this note.\r\n\t\t\t\t\t\tif (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n\t\t\t\t\t\t\tnextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tconst toneList: Deque<Tone> = this.activeModTones[modChannelIdx][mod];\r\n\t\t\t\tif (notes[mod] != null) {\r\n\t\t\t\t\tif (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\r\n\t\t\t\t\tif (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\r\n\t\t\t\t\tthis.syncTones(channel, toneList, instrument, (notes[mod] as Note).pitches, (notes[mod] as Note), (prevNotes[mod] as Note), (nextNotes[mod] as Note), time);\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (toneList.count() > 0) {\r\n\t\t\t\t\t\tthis.freeTone(toneList.popBack());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (!song.getChannelIsMod(channel)) {\r\n\r\n\t\t\tlet note: Note | null = null;\r\n\t\t\tlet prevNote: Note | null = null;\r\n\t\t\tlet nextNote: Note | null = null;\r\n\r\n\t\t\tif (playSong && pattern != null && !song.channels[channel].muted) {\r\n\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\tif (pattern.notes[i].end <= time) {\r\n\t\t\t\t\t\tprevNote = pattern.notes[i];\r\n\t\t\t\t\t} else if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n\t\t\t\t\t\tnote = pattern.notes[i];\r\n\t\t\t\t\t} else if (pattern.notes[i].start > time) {\r\n\t\t\t\t\t\tnextNote = pattern.notes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst toneList: Deque<Tone> = this.activeTones[channel];\r\n\t\t\tif (note != null) {\r\n\t\t\t\tif (prevNote != null && prevNote.end != note.start) prevNote = null;\r\n\t\t\t\tif (nextNote != null && nextNote.start != note.end) nextNote = null;\r\n\t\t\t\tthis.syncTones(channel, toneList, instrument, note.pitches, note, prevNote, nextNote, time);\r\n\t\t\t} else {\r\n\t\t\t\twhile (toneList.count() > 0) {\r\n\t\t\t\t\t// Automatically free or release seamless tones if there's no new note to take over.\r\n\t\t\t\t\tif (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n\t\t\t\t\t\tthis.releaseTone(channel, toneList.popBack());\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.freeTone(toneList.popBack());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate syncTones(channel: number, toneList: Deque<Tone>, instrument: Instrument, pitches: number[], note: Note, prevNote: Note | null, nextNote: Note | null, currentPart: number): void {\r\n\t\tlet toneCount: number = 0;\r\n\t\t// Mod channels don't ever tie over, so the real start point is always simply the note's start.\r\n\t\tlet noteStartAdjust = (channel < this.song!.pitchChannelCount + this.song!.noiseChannelCount)\r\n\t\t\t? Math.max(0, this.tyingOver[channel])\r\n\t\t\t: 0;\r\n\t\tif (instrument.getChord().arpeggiates) {\r\n\t\t\tlet tone: Tone;\r\n\t\t\tif (toneList.count() == 0) {\r\n\t\t\t\ttone = this.newTone();\r\n\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t} else {\r\n\t\t\t\ttone = toneList.get(0);\r\n\t\t\t}\r\n\t\t\ttoneCount = 1;\r\n\r\n\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\t\ttone.pitches[i] = pitches[i];\r\n\t\t\t}\r\n\t\t\ttone.pitchCount = pitches.length;\r\n\t\t\ttone.chordSize = 1;\r\n\t\t\ttone.instrument = instrument;\r\n\t\t\ttone.note = note;\r\n\t\t\ttone.noteStart = note.start - noteStartAdjust;\r\n\t\t\ttone.noteEnd = note.end;\r\n\t\t\ttone.prevNote = prevNote;\r\n\t\t\ttone.nextNote = nextNote;\r\n\t\t\ttone.prevNotePitchIndex = 0;\r\n\t\t\ttone.nextNotePitchIndex = 0;\r\n\t\t} else {\r\n\t\t\tconst transition: Transition = instrument.getTransition();\r\n\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\r\n\t\t\t\tconst strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\t\t\t\tlet prevNoteForThisTone: Note | null = (prevNote && prevNote.pitches.length > i) ? prevNote : null;\r\n\t\t\t\tlet noteForThisTone: Note = note;\r\n\t\t\t\tlet nextNoteForThisTone: Note | null = (nextNote && nextNote.pitches.length > i) ? nextNote : null;\r\n\t\t\t\tlet noteStart: number = noteForThisTone.start + strumOffsetParts - noteStartAdjust;\r\n\r\n\t\t\t\tif (noteStart > currentPart) {\r\n\t\t\t\t\tif (toneList.count() > i && (transition.isSeamless || this.tyingOver[channel] >= 0) && prevNoteForThisTone != null) {\r\n\t\t\t\t\t\tnextNoteForThisTone = noteForThisTone;\r\n\t\t\t\t\t\tnoteForThisTone = prevNoteForThisTone;\r\n\t\t\t\t\t\tprevNoteForThisTone = null;\r\n\t\t\t\t\t\tnoteStart = noteForThisTone.start + strumOffsetParts - noteStartAdjust;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet noteEnd: number = noteForThisTone.end;\r\n\t\t\t\tif ((transition.isSeamless || this.tyingOver[channel] >= 0) && nextNoteForThisTone != null) {\r\n\t\t\t\t\tnoteEnd = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEnd + strumOffsetParts);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tlet tone: Tone;\r\n\t\t\t\tif (toneList.count() <= i) {\r\n\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttone = toneList.get(i);\r\n\t\t\t\t}\r\n\t\t\t\ttoneCount++;\r\n\r\n\t\t\t\ttone.pitches[0] = noteForThisTone.pitches[i];\r\n\t\t\t\ttone.pitchCount = 1;\r\n\t\t\t\ttone.chordSize = noteForThisTone.pitches.length;\r\n\t\t\t\ttone.instrument = instrument;\r\n\t\t\t\ttone.note = noteForThisTone;\r\n\t\t\t\ttone.noteStart = noteStart;\r\n\t\t\t\ttone.noteEnd = noteEnd;\r\n\t\t\t\ttone.prevNote = prevNoteForThisTone;\r\n\t\t\t\ttone.nextNote = nextNoteForThisTone;\r\n\t\t\t\ttone.prevNotePitchIndex = i;\r\n\t\t\t\ttone.nextNotePitchIndex = i;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile (toneList.count() > toneCount) {\r\n\t\t\t// Automatically free or release seamless tones if there's no new note to take over.\r\n\t\t\tif (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n\t\t\t\tthis.releaseTone(channel, toneList.popBack());\r\n\t\t\t} else {\r\n\t\t\t\tthis.freeTone(toneList.popBack());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate playTone(song: Song, stereoBufferIndex: number, stereoBufferLength: number, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n\t\tSynth.computeTone(this, song, channel, samplesPerTick, runLength, tone, released, shouldFadeOutFast);\r\n\t\tlet synthBuffer: Float32Array;\r\n\t\tswitch (tone.instrument.effects) {\r\n\t\t\tcase 0: synthBuffer = this.samplesForNone!; break;\r\n\t\t\tcase 1: synthBuffer = this.samplesForReverb!; break;\r\n\t\t\tcase 2: synthBuffer = this.samplesForChorus!; break;\r\n\t\t\tcase 3: synthBuffer = this.samplesForChorusReverb!; break;\r\n\t\t\tdefault: throw new Error();\r\n\t\t}\r\n\t\tconst synthesizer: Function = Synth.getInstrumentSynthFunction(tone.instrument);\r\n\t\tsynthesizer(this, synthBuffer, stereoBufferIndex, stereoBufferLength, runLength * 2, tone, tone.instrument);\r\n\t}\r\n\r\n\tprivate static computeEnvelope(envelope: Envelope, time: number, beats: number, customVolume: number): number {\r\n\t\tswitch (envelope.type) {\r\n\t\t\tcase EnvelopeType.custom: return customVolume;\r\n\t\t\tcase EnvelopeType.steady: return 1.0;\r\n\t\t\tcase EnvelopeType.twang:\r\n\t\t\t\treturn 1.0 / (1.0 + time * envelope.speed);\r\n\t\t\tcase EnvelopeType.swell:\r\n\t\t\t\treturn 1.0 - 1.0 / (1.0 + time * envelope.speed);\r\n\t\t\tcase EnvelopeType.tremolo:\r\n\t\t\t\treturn 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\r\n\t\t\tcase EnvelopeType.tremolo2:\r\n\t\t\t\treturn 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\r\n\t\t\tcase EnvelopeType.punch:\r\n\t\t\t\treturn Math.max(1.0, 2.0 - time * 10.0);\r\n\t\t\tcase EnvelopeType.flare:\r\n\t\t\t\tconst speed: number = envelope.speed;\r\n\t\t\t\tconst attack: number = 0.25 / Math.sqrt(speed);\r\n\t\t\t\treturn time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * speed);\r\n\t\t\tcase EnvelopeType.decay:\r\n\t\t\t\treturn Math.pow(2, -envelope.speed * time);\r\n\t\t\tdefault: throw new Error(\"Unrecognized operator envelope type.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static computeChordVolume(chordSize: number): number {\r\n\t\treturn 1.0 / ((chordSize - 1) * 0.25 + 1.0);\r\n\t}\r\n\r\n\tprivate static computeTone(synth: Synth, song: Song, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n\t\tconst instrument: Instrument = tone.instrument;\r\n\t\tconst transition: Transition = instrument.getTransition();\r\n\t\tconst chord: Chord = instrument.getChord();\r\n\t\tconst chordVolume: number = chord.arpeggiates ? 1 : Synth.computeChordVolume(tone.chordSize);\r\n\t\tconst isNoiseChannel: boolean = song.getChannelIsNoise(channel);\r\n\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\tconst secondsPerPart: number = Config.ticksPerPart * samplesPerTick / synth.samplesPerSecond;\r\n\t\tconst beatsPerPart: number = 1.0 / Config.partsPerBeat;\r\n\t\tconst toneWasActive: boolean = tone.active;\r\n\t\tconst tickSampleCountdown: number = synth.tickSampleCountdown;\r\n\t\tconst startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n\t\tconst endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n\t\tconst ticksIntoBar: number = (synth.beat * Config.partsPerBeat + synth.part) * Config.ticksPerPart + synth.tick;\r\n\t\tconst partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n\t\tconst partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n\t\tconst partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n\t\tconst partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n\t\tconst instrumentIdx: number = (synth.song as Song).channels[channel].instruments.findIndex(i => i == instrument);\r\n\t\tconst treatAsSeamless: boolean = transition.isSeamless || synth.tyingOver[channel] >= 0;\r\n\r\n\t\ttone.phaseDeltaScale = 0.0;\r\n\t\ttone.filter = 1.0;\r\n\t\ttone.filterScale = 1.0;\r\n\t\ttone.vibratoScale = 0.0;\r\n\t\ttone.intervalMult = 1.0;\r\n\t\ttone.intervalVolumeMult = 1.0;\r\n\t\ttone.active = false;\r\n\r\n\t\tlet startPan: number = instrument.pan;\r\n\t\tlet endPan: number = instrument.pan;\r\n\t\tif (synth.isModActive(ModSetting.mstPan, false, channel, instrumentIdx)) {\r\n\t\t\tstartPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\r\n\t\t\tendPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\r\n\t\t}\r\n\r\n\t\tlet startPanDelay: number = instrument.panDelay;\r\n\t\tlet endPanDelay: number = instrument.panDelay;\r\n\t\tif (synth.isModActive(ModSetting.mstPanDelay, false, channel, instrumentIdx)) {\r\n\t\t\tstartPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, false);\r\n\t\t\tendPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, true);\r\n\t\t}\r\n\r\n\t\tconst useStartPan: number = (startPan - Config.panCenter) / Config.panCenter;\r\n\t\tconst useEndPan: number = (endPan - Config.panCenter) / Config.panCenter;\r\n\t\t// 10 pan delay is the same amount as vanilla beepbox.\r\n\t\tconst maxDelayStart: number = startPanDelay * 0.00013 * synth.samplesPerSecond;\r\n\t\tconst maxDelayEnd: number = endPanDelay * 0.00013 * synth.samplesPerSecond;\r\n\t\ttone.stereoDelayStart = -useStartPan * maxDelayStart;\r\n\t\tconst delayEnd: number = -useEndPan * maxDelayEnd;\r\n\t\ttone.stereoDelayDelta = (delayEnd - tone.stereoDelayStart) / runLength;\r\n\t\ttone.stereoVolumeLStart = Math.cos((1 + useStartPan) * Math.PI * 0.25) * 1.414;\r\n\t\ttone.stereoVolumeRStart = Math.cos((1 - useStartPan) * Math.PI * 0.25) * 1.414;\r\n\t\tconst stereoVolumeLEnd: number = Math.cos((1 + useEndPan) * Math.PI * 0.25) * 1.414;\r\n\t\tconst stereoVolumeREnd: number = Math.cos((1 - useEndPan) * Math.PI * 0.25) * 1.414;\r\n\t\ttone.stereoVolumeLDelta = (stereoVolumeLEnd - tone.stereoVolumeLStart) / runLength;\r\n\t\ttone.stereoVolumeRDelta = (stereoVolumeREnd - tone.stereoVolumeRStart) / runLength;\r\n\r\n\t\tlet resetPhases: boolean = true;\r\n\t\tlet partsSinceStart: number = 0.0;\r\n\t\tlet intervalStart: number = 0.0;\r\n\t\tlet intervalEnd: number = 0.0;\r\n\t\tlet transitionVolumeStart: number = 1.0;\r\n\t\tlet transitionVolumeEnd: number = 1.0;\r\n\t\tlet chordVolumeStart: number = chordVolume;\r\n\t\tlet chordVolumeEnd: number = chordVolume;\r\n\t\tlet customVolumeStart: number = 0.0;\r\n\t\tlet customVolumeEnd: number = 0.0;\r\n\t\tlet decayTimeStart: number = 0.0;\r\n\t\tlet decayTimeEnd: number = 0.0;\r\n\r\n\t\tlet volumeReferencePitch: number;\r\n\t\tlet basePitch: number;\r\n\t\tlet baseVolume: number;\r\n\t\tlet pitchDamping: number;\r\n\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tbasePitch = Config.spectrumBasePitch;\r\n\t\t\t\tbaseVolume = 0.6; // Note: spectrum is louder for drum channels than pitch channels!\r\n\t\t\t} else {\r\n\t\t\t\t// basePitch = Config.keys[song.key].basePitch; // key relic (TODO), more following\r\n\t\t\t\tbasePitch = 0;\r\n\t\t\t\tbaseVolume = 0.3;\r\n\t\t\t}\r\n\t\t\tvolumeReferencePitch = Config.spectrumBasePitch;\r\n\t\t\tpitchDamping = 28;\r\n\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\tbasePitch = Config.spectrumBasePitch;\r\n\t\t\tbaseVolume = 0.45;\r\n\t\t\tvolumeReferencePitch = basePitch;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.noise) {\r\n\t\t\tbasePitch = Config.chipNoises[instrument.chipNoise].basePitch;\r\n\t\t\tbaseVolume = 0.19;\r\n\t\t\tvolumeReferencePitch = basePitch;\r\n\t\t\tpitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\r\n\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t// basePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbasePitch = 0;\r\n\t\t\tbaseVolume = 0.03;\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t// basePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbasePitch = 0;\r\n\t\t\tbaseVolume = 0.03375; // looks low compared to drums, but it's doubled for chorus and drums tend to be loud anyway.\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t// basePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbasePitch = 0;\r\n\t\t\tbaseVolume = 0.025;\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t// basePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbasePitch = 0;\r\n\t\t\tbaseVolume = 0.04725;\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\tbaseVolume = 1.0;\r\n\t\t\tvolumeReferencePitch = 0;\r\n\t\t\tpitchDamping = 1.0;\r\n\t\t\tbasePitch = 0;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unknown instrument type in computeTone.\");\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\ttone.phaseDeltas[i] = 0.0;\r\n\t\t\ttone.volumeStarts[i] = 0.0;\r\n\t\t\ttone.volumeDeltas[i] = 0.0;\r\n\t\t}\r\n\r\n\t\tif (released) {\r\n\t\t\tconst ticksSoFar: number = tone.noteLengthTicks + tone.ticksSinceReleased;\r\n\t\t\tconst startTicksSinceReleased: number = tone.ticksSinceReleased + startRatio;\r\n\t\t\tconst endTicksSinceReleased: number = tone.ticksSinceReleased + endRatio;\r\n\t\t\tconst startTick: number = tone.noteLengthTicks + startTicksSinceReleased;\r\n\t\t\tconst endTick: number = tone.noteLengthTicks + endTicksSinceReleased;\r\n\t\t\tconst toneTransition: Transition = tone.instrument.getTransition();\r\n\t\t\tresetPhases = false;\r\n\t\t\tpartsSinceStart = Math.floor(ticksSoFar / Config.ticksPerPart);\r\n\t\t\tintervalStart = intervalEnd = tone.lastInterval;\r\n\t\t\tcustomVolumeStart = customVolumeEnd = Synth.expressionToVolumeMult(tone.lastVolume);\r\n\t\t\ttransitionVolumeStart = Synth.expressionToVolumeMult((1.0 - startTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n\t\t\ttransitionVolumeEnd = Synth.expressionToVolumeMult((1.0 - endTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n\t\t\tdecayTimeStart = startTick / Config.ticksPerPart;\r\n\t\t\tdecayTimeEnd = endTick / Config.ticksPerPart;\r\n\r\n\t\t\tif (shouldFadeOutFast) {\r\n\t\t\t\ttransitionVolumeStart *= 1.0 - startRatio;\r\n\t\t\t\ttransitionVolumeEnd *= 1.0 - endRatio;\r\n\t\t\t}\r\n\t\t} else if (tone.note == null) {\r\n\t\t\ttransitionVolumeStart = transitionVolumeEnd = 1;\r\n\t\t\tcustomVolumeStart = customVolumeEnd = 1;\r\n\t\t\ttone.lastInterval = 0;\r\n\t\t\ttone.lastVolume = 6;\r\n\t\t\ttone.ticksSinceReleased = 0;\r\n\t\t\tresetPhases = false;\r\n\r\n\t\t\tconst heldTicksStart: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n\t\t\ttone.liveInputSamplesHeld += runLength;\r\n\t\t\tconst heldTicksEnd: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n\t\t\ttone.noteLengthTicks = heldTicksEnd;\r\n\t\t\tconst heldPartsStart: number = heldTicksStart / Config.ticksPerPart;\r\n\t\t\tconst heldPartsEnd: number = heldTicksEnd / Config.ticksPerPart;\r\n\t\t\tpartsSinceStart = Math.floor(heldPartsStart);\r\n\t\t\tdecayTimeStart = heldPartsStart;\r\n\t\t\tdecayTimeEnd = heldPartsEnd;\r\n\t\t} else {\r\n\t\t\tconst note: Note = tone.note;\r\n\t\t\tconst prevNote: Note | null = tone.prevNote;\r\n\t\t\tconst nextNote: Note | null = tone.nextNote;\r\n\r\n\t\t\tconst time: number = synth.part + synth.beat * Config.partsPerBeat;\r\n\t\t\tconst partsPerBar: number = Config.partsPerBeat * song.beatsPerBar;\r\n\t\t\tconst noteStart: number = tone.noteStart;// - Math.max(0, synth.tyingOver[channel] || 0);\r\n\t\t\tconst noteEnd: number = tone.noteEnd;\r\n\r\n\t\t\tpartsSinceStart = time - noteStart;\r\n\r\n\t\t\tlet endPinIndex: number;\r\n\t\t\tfor (endPinIndex = 1; endPinIndex < note.pins.length - 1; endPinIndex++) {\r\n\t\t\t\tif (note.pins[endPinIndex].time + note.start > time) break;\r\n\t\t\t}\r\n\t\t\tconst startPin: NotePin = note.pins[endPinIndex - 1];\r\n\t\t\tconst endPin: NotePin = note.pins[endPinIndex];\r\n\t\t\tconst noteStartTick: number = noteStart * Config.ticksPerPart;\r\n\t\t\tconst noteEndTick: number = noteEnd * Config.ticksPerPart;\r\n\t\t\tconst noteLengthTicks: number = noteEndTick - noteStartTick;\r\n\t\t\tconst pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\r\n\t\t\tconst pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\r\n\r\n\t\t\ttone.lastInterval = note.pins[note.pins.length - 1].interval;\r\n\t\t\ttone.lastVolume = note.pins[note.pins.length - 1].volume;\r\n\t\t\ttone.ticksSinceReleased = 0;\r\n\t\t\ttone.noteLengthTicks = noteLengthTicks;\r\n\r\n\t\t\tconst tickTimeStart: number = time * Config.ticksPerPart + synth.tick;\r\n\t\t\tconst tickTimeEnd: number = time * Config.ticksPerPart + synth.tick + 1;\r\n\t\t\tconst noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\r\n\t\t\tconst noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\r\n\t\t\tconst pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\r\n\t\t\tconst pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\r\n\t\t\tlet customVolumeTickStart: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioStart;\r\n\t\t\tlet customVolumeTickEnd: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioEnd;\r\n\t\t\tlet transitionVolumeTickStart: number = 1.0;\r\n\t\t\tlet transitionVolumeTickEnd: number = 1.0;\r\n\t\t\tlet chordVolumeTickStart: number = chordVolume;\r\n\t\t\tlet chordVolumeTickEnd: number = chordVolume;\r\n\t\t\tlet intervalTickStart: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\r\n\t\t\tlet intervalTickEnd: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\r\n\t\t\tlet decayTimeTickStart: number = partTimeTickStart - noteStart;\r\n\t\t\tlet decayTimeTickEnd: number = partTimeTickEnd - noteStart;\r\n\t\t\tresetPhases = (tickTimeStart + startRatio - noteStartTick == 0.0) || !toneWasActive;\r\n\r\n\t\t\t// if seamless, don't reset phases at start. (it's probably not necessary to constantly reset phases if there are no notes? Just do it once when note starts? But make sure that reset phases doesn't also reset stuff that this function did to set up the tone. Remember when the first run length was lost!\r\n\t\t\t// if slide, average the interval, decayTime, and custom volume at the endpoints and interpolate between over slide duration.\r\n\t\t\t// note that currently seamless and slide make different assumptions about whether a note at the end of a bar will connect with the next bar!\r\n\t\t\tconst maximumSlideTicks: number = noteLengthTicks * 0.5;\r\n\t\t\tif (treatAsSeamless && !transition.slides && note.start == 0) {\r\n\t\t\t\t// Special case for seamless, no-slide transition: assume the previous bar ends with another seamless note, don't reset tone history.\r\n\t\t\t\tresetPhases = !toneWasActive;\r\n\t\t\t} else if (treatAsSeamless && prevNote != null) {\r\n\t\t\t\tresetPhases = !toneWasActive;\r\n\t\t\t\tif (transition.slides) {\r\n\t\t\t\t\tconst slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n\t\t\t\t\tconst slideRatioStartTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickStart / slideTicks);\r\n\t\t\t\t\tconst slideRatioEndTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickEnd / slideTicks);\r\n\t\t\t\t\tconst intervalDiff: number = ((prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval) - tone.pitches[0]) * 0.5;\r\n\t\t\t\t\tconst volumeDiff: number = (prevNote.pins[prevNote.pins.length - 1].volume - note.pins[0].volume) * 0.5;\r\n\t\t\t\t\tconst decayTimeDiff: number = (prevNote.end - prevNote.start) * 0.5;\r\n\t\t\t\t\tintervalTickStart += slideRatioStartTick * intervalDiff;\r\n\t\t\t\t\tintervalTickEnd += slideRatioEndTick * intervalDiff;\r\n\t\t\t\t\tcustomVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n\t\t\t\t\tcustomVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n\t\t\t\t\tdecayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n\t\t\t\t\tdecayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n\t\t\t\t\tif (!chord.arpeggiates) {\r\n\t\t\t\t\t\tconst chordSizeDiff: number = (prevNote.pitches.length - tone.chordSize) * 0.5;\r\n\t\t\t\t\t\tchordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n\t\t\t\t\t\tchordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (treatAsSeamless && !transition.slides && note.end == partsPerBar) {\r\n\t\t\t\t// Special case for seamless, no-slide transition: assume the next bar starts with another seamless note, don't fade out.\r\n\t\t\t} else if (treatAsSeamless && nextNote != null) {\r\n\t\t\t\tif (transition.slides) {\r\n\t\t\t\t\tconst slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n\t\t\t\t\tconst slideRatioStartTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickStart) / slideTicks);\r\n\t\t\t\t\tconst slideRatioEndTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickEnd) / slideTicks);\r\n\t\t\t\t\tconst intervalDiff: number = (nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + note.pins[note.pins.length - 1].interval)) * 0.5;\r\n\t\t\t\t\tconst volumeDiff: number = (nextNote.pins[0].volume - note.pins[note.pins.length - 1].volume) * 0.5;\r\n\t\t\t\t\tconst decayTimeDiff: number = -(noteEnd - noteStart) * 0.5;\r\n\t\t\t\t\tintervalTickStart += slideRatioStartTick * intervalDiff;\r\n\t\t\t\t\tintervalTickEnd += slideRatioEndTick * intervalDiff;\r\n\t\t\t\t\tcustomVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n\t\t\t\t\tcustomVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n\t\t\t\t\tdecayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n\t\t\t\t\tdecayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n\t\t\t\t\tif (!chord.arpeggiates) {\r\n\t\t\t\t\t\tconst chordSizeDiff: number = (nextNote.pitches.length - tone.chordSize) * 0.5;\r\n\t\t\t\t\t\tchordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n\t\t\t\t\t\tchordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (!(transition.releases && synth.tyingOver[channel] < 0)) {\r\n\t\t\t\tconst releaseTicks: number = transition.releaseTicks;\r\n\t\t\t\tif (releaseTicks > 0.0) {\r\n\t\t\t\t\ttransitionVolumeTickStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / releaseTicks);\r\n\t\t\t\t\ttransitionVolumeTickEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / releaseTicks);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tintervalStart = intervalTickStart + (intervalTickEnd - intervalTickStart) * startRatio;\r\n\t\t\tintervalEnd = intervalTickStart + (intervalTickEnd - intervalTickStart) * endRatio;\r\n\t\t\tif (instrument.type != InstrumentType.mod) {\r\n\t\t\t\tcustomVolumeStart = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * startRatio);\r\n\t\t\t\tcustomVolumeEnd = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * endRatio);\r\n\t\t\t} else {\r\n\t\t\t\tcustomVolumeStart = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.max(0.0, startRatio);\r\n\t\t\t\tcustomVolumeEnd = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.min(1.0, endRatio);\r\n\t\t\t\ttone.customVolumeStart = customVolumeStart;\r\n\t\t\t\ttone.customVolumeEnd = customVolumeEnd;\r\n\t\t\t}\r\n\t\t\ttransitionVolumeStart = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * startRatio;\r\n\t\t\ttransitionVolumeEnd = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * endRatio;\r\n\t\t\tchordVolumeStart = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * startRatio;\r\n\t\t\tchordVolumeEnd = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * endRatio;\r\n\t\t\tdecayTimeStart = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * startRatio;\r\n\t\t\tdecayTimeEnd = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * endRatio;\r\n\t\t}\r\n\r\n\t\tconst sampleTime: number = 1.0 / synth.samplesPerSecond;\r\n\t\ttone.active = true;\r\n\r\n\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.spectrum) {\r\n\r\n\t\t\tconst lfoEffectStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.LFOtime);\r\n\t\t\tconst lfoEffectEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.nextLFOtime);\r\n\r\n\t\t\tlet useVibratoStart: number = instrument.vibratoDepth;\r\n\t\t\tlet useVibratoEnd: number = instrument.vibratoDepth;\r\n\r\n\t\t\tif (synth.isModActive(ModSetting.mstVibratoDepth, false, channel, instrumentIdx)) {\r\n\t\t\t\tuseVibratoStart = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, false) / 25;\r\n\t\t\t\tuseVibratoEnd = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\t// Only use vibrato properties if the instrument's vibrato is custom or mods are applied to it\r\n\t\t\tlet partsStart: number;\r\n\t\t\tlet partsEnd: number;\r\n\t\t\tconst activeVibratoDelayMods: boolean = synth.isModActive(ModSetting.mstVibratoDelay, false, channel, instrumentIdx);\r\n\t\t\tif (instrument.vibrato != Config.vibratos.length && !activeVibratoDelayMods) {\r\n\t\t\t\tpartsStart = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\t\tpartsEnd = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet vibratoDelayStart: number = instrument.vibratoDelay;\r\n\t\t\t\tlet vibratoDelayEnd: number = instrument.vibratoDelay;\r\n\r\n\t\t\t\tif (activeVibratoDelayMods) {\r\n\t\t\t\t\tvibratoDelayStart = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, false);\r\n\t\t\t\t\tvibratoDelayEnd = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, true);\r\n\r\n\t\t\t\t\t// Special case - max vibrato delay means neeeeeever vibrato.\r\n\t\t\t\t\tif (vibratoDelayStart == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n\t\t\t\t\t\tvibratoDelayStart = Number.MAX_VALUE;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (vibratoDelayEnd == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n\t\t\t\t\t\tvibratoDelayEnd = Number.MAX_VALUE;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpartsStart = vibratoDelayStart;\r\n\t\t\t\tpartsEnd = vibratoDelayEnd;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst vibratoScaleStart: number = (partsSinceStart < partsStart) ? 0.0 : useVibratoStart;\r\n\t\t\tconst vibratoScaleEnd: number = (partsSinceStart < partsEnd) ? 0.0 : useVibratoEnd;\r\n\r\n\t\t\tconst vibratoStart: number = vibratoScaleStart * lfoEffectStart;\r\n\t\t\tconst vibratoEnd: number = vibratoScaleEnd * lfoEffectEnd;\r\n\t\t\tintervalStart += vibratoStart;\r\n\t\t\tintervalEnd += vibratoEnd;\r\n\t\t}\r\n\r\n\t\tif (!treatAsSeamless || (!(!transition.slides && tone.note != null && tone.note.start == 0) && !(tone.prevNote != null))) {\r\n\t\t\tconst attackSeconds: number = transition.attackSeconds;\r\n\t\t\tif (attackSeconds > 0.0) {\r\n\t\t\t\ttransitionVolumeStart *= Math.min(1.0, secondsPerPart * decayTimeStart / attackSeconds);\r\n\t\t\t\ttransitionVolumeEnd *= Math.min(1.0, secondsPerPart * decayTimeEnd / attackSeconds);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst instrumentVolumeMult: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\r\n\r\n\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t// It's possible that the note will change while the user is editing it,\r\n\t\t\t// but the tone's pitches don't get updated because the tone has already\r\n\t\t\t// ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\r\n\t\t\ttone.drumsetPitch = tone.pitches[0];\r\n\t\t\tif (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\r\n\t\t\ttone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\r\n\t\t}\r\n\r\n\t\tlet filterCutModStart: number = instrument.filterCutoff;\r\n\t\tlet filterCutModEnd: number = instrument.filterCutoff;\r\n\t\tif (synth.isModActive(ModSetting.mstFilterCut, false, channel, instrumentIdx)) {\r\n\t\t\tfilterCutModStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, false), ModSetting.mstFilterCut);\r\n\t\t\tfilterCutModEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, true), ModSetting.mstFilterCut);\r\n\t\t}\r\n\r\n\t\tlet cutoffOctavesModStart: number;\r\n\t\tlet cutoffOctavesModEnd: number;\r\n\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\tcutoffOctavesModStart = 0;\r\n\t\t\tcutoffOctavesModEnd = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcutoffOctavesModStart = (filterCutModStart - (Config.filterCutoffRange - 1)) * 0.5;\r\n\t\t\tcutoffOctavesModEnd = (filterCutModEnd - (Config.filterCutoffRange - 1)) * 0.5;\r\n\t\t}\r\n\r\n\t\tconst filterEnvelope: Envelope = (instrument.type == InstrumentType.drumset) ? instrument.getDrumsetEnvelope(tone.drumsetPitch) : instrument.getFilterEnvelope();\r\n\t\tconst filterCutoffHzStart: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModStart);\r\n\t\tconst filterCutoffHzEnd: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModEnd);\r\n\t\tconst filterBaseStart: number = 2.0 * Math.sin(Math.PI * filterCutoffHzStart / synth.samplesPerSecond);\r\n\t\tconst filterBaseEnd: number = 2.0 * Math.sin(Math.PI * filterCutoffHzEnd / synth.samplesPerSecond);\r\n\t\tconst filterMin: number = 2.0 * Math.sin(Math.PI * Config.filterCutoffMinHz / synth.samplesPerSecond);\r\n\t\ttone.filter = filterBaseStart * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\tlet endFilter: number = filterBaseEnd * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\t\ttone.filter = Math.min(Config.filterMax, Math.max(filterMin, tone.filter));\r\n\t\tendFilter = Math.min(Config.filterMax, Math.max(filterMin, endFilter));\r\n\t\ttone.filterScale = Math.pow(endFilter / tone.filter, 1.0 / runLength);\r\n\r\n\t\tlet filterVolumeStart: number = Math.pow(0.5, cutoffOctavesModStart * 0.35);\r\n\t\tlet filterVolumeEnd: number = Math.pow(0.5, cutoffOctavesModEnd * 0.35);\r\n\r\n\t\ttone.filterResonanceStart = instrument.getFilterResonance();\r\n\t\ttone.filterResonanceDelta = 0.0;\r\n\r\n\t\tlet useFilterResonanceStart: number = instrument.filterResonance;\r\n\t\tlet useFilterResonanceEnd: number = instrument.filterResonance;\r\n\r\n\t\ttone.isFirstOrder = (instrument.type == InstrumentType.drumset) ? false : (useFilterResonanceStart == 0);\r\n\r\n\t\tif (synth.isModActive(ModSetting.mstFilterPeak, false, channel, instrumentIdx)) {\r\n\t\t\t// This flag is used to avoid the special casing when filter resonance == 0 without mods. So, it will sound a bit different,\r\n\t\t\t// but the effect and ability to smoothly modulate will be preserved.\r\n\t\t\ttone.isFirstOrder = false;\r\n\r\n\t\t\tuseFilterResonanceStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, false), ModSetting.mstFilterPeak);\r\n\t\t\tuseFilterResonanceEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, true), ModSetting.mstFilterPeak);\r\n\r\n\t\t\t// Also set cut in the tone.\r\n\t\t\ttone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\t\t\tconst filterResonanceEnd: number = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceEnd - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\r\n\t\t\t// Just a linear delta. Could get messy since it's not an amazing approximation of sqrt?\r\n\t\t\ttone.filterResonanceDelta = (filterResonanceEnd - tone.filterResonanceStart) / runLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Still need to compute this, mods or no. This calc is delegated to the tone level instead of the synth level, a notable difference from beepbox.\r\n\t\t\t// No functional difference though.\r\n\t\t\ttone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\t\t}\r\n\r\n\t\tif (tone.isFirstOrder == false) {\r\n\t\t\tfilterVolumeStart = Math.pow(filterVolumeStart, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceStart - 1));\r\n\t\t\tfilterVolumeEnd = Math.pow(filterVolumeEnd, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceEnd - 1));\r\n\t\t}\r\n\t\tif (filterEnvelope.type == EnvelopeType.decay) {\r\n\t\t\tfilterVolumeStart *= (1.25 + .025 * filterEnvelope.speed);\r\n\t\t\tfilterVolumeEnd *= (1.25 + .025 * filterEnvelope.speed);\r\n\t\t} else if (filterEnvelope.type == EnvelopeType.twang) {\r\n\t\t\tfilterVolumeStart *= (1 + .02 * filterEnvelope.speed);\r\n\t\t\tfilterVolumeEnd *= (1 + .02 * filterEnvelope.speed);\r\n\t\t}\r\n\r\n\t\tif (resetPhases) {\r\n\t\t\ttone.reset();\r\n\t\t}\r\n\r\n\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\t// phase modulation!\r\n\r\n\t\t\tlet sineVolumeBoostStart: number = 1.0;\r\n\t\t\tlet sineVolumeBoostEnd: number = 1.0;\r\n\t\t\tlet totalCarrierVolumeStart: number = 0.0;\r\n\t\t\tlet totalCarrierVolumeEnd: number = 0.0;\r\n\r\n\t\t\tlet arpeggioInterval: number = 0;\r\n\t\t\tif (tone.pitchCount > 1 && !chord.harmonizes) {\r\n\t\t\t\tconst arpeggio: number = Math.floor((instrument.arpTime) / Config.ticksPerArpeggio);\r\n\t\t\t\tarpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n\t\t\t}\r\n\r\n\t\t\tlet detuneStart: number = instrument.detune / 25;\r\n\t\t\tlet detuneEnd: number = instrument.detune / 25;\r\n\t\t\tif (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n\t\t\t\tdetuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n\t\t\t\tdetuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tif (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n\t\t\t\tdetuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n\t\t\t\tdetuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tconst carrierCount: number = Config.algorithms[instrument.algorithm].carrierCount;\r\n\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\r\n\t\t\t\tconst associatedCarrierIndex: number = Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1;\r\n\t\t\t\tconst pitch: number = tone.pitches[!chord.harmonizes ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\r\n\t\t\t\tconst freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\r\n\t\t\t\tconst interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\r\n\t\t\t\tconst startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale + interval;\r\n\t\t\t\t// const startFreq: number = freqMult * (Instrument.frequencyFromPitch(startPitch, song.centerFrequency, song.edo)) + Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\r\n\t\t\t\tconst startFreq: number = freqMult * (Instrument.frequencyFromPitch(startPitch)) + Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\r\n\r\n\t\t\t\ttone.phaseDeltas[i] = startFreq * sampleTime * Config.sineWaveLength;\r\n\r\n\t\t\t\tlet amplitudeStart: number = instrument.operators[i].amplitude;\r\n\t\t\t\tlet amplitudeEnd: number = instrument.operators[i].amplitude;\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx)) {\r\n\t\t\t\t\tamplitudeStart *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, false) / 15.0;\r\n\t\t\t\t\tamplitudeEnd *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, true) / 15.0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\r\n\t\t\t\tconst amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\r\n\t\t\t\tconst amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n\t\t\t\tconst amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n\t\t\t\tlet volumeStart: number = amplitudeMultStart;\r\n\t\t\t\tlet volumeEnd: number = amplitudeMultEnd;\r\n\r\n\t\t\t\t// Check for mod-related volume delta\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n\t\t\t\t\t// Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n\t\t\t\t\tconst startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n\t\t\t\t\tconst endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n\t\t\t\t\tvolumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n\t\t\t\t\tvolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check for SONG mod-related volume delta\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n\t\t\t\t\tvolumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n\t\t\t\t\tvolumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i < carrierCount) {\r\n\t\t\t\t\t// carrier\r\n\t\t\t\t\tconst endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale + interval;\r\n\t\t\t\t\tconst pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\t\t\tconst pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\t\t\tvolumeStart *= pitchVolumeStart;\r\n\t\t\t\t\tvolumeEnd *= pitchVolumeEnd;\r\n\r\n\t\t\t\t\ttotalCarrierVolumeStart += amplitudeCurveStart;\r\n\t\t\t\t\ttotalCarrierVolumeEnd += amplitudeCurveEnd;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// modulator\r\n\t\t\t\t\tvolumeStart *= Config.sineWaveLength * 1.5;\r\n\t\t\t\t\tvolumeEnd *= Config.sineWaveLength * 1.5;\r\n\r\n\t\t\t\t\tsineVolumeBoostStart *= 1.0 - Math.min(1.0, amplitudeStart / 15);\r\n\t\t\t\t\tsineVolumeBoostEnd *= 1.0 - Math.min(1.0, amplitudeEnd / 15);\r\n\t\t\t\t}\r\n\t\t\t\tconst operatorEnvelope: Envelope = Config.envelopes[instrument.operators[i].envelope];\r\n\r\n\t\t\t\tvolumeStart *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\t\t\tvolumeEnd *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n\t\t\t\ttone.volumeStarts[i] = volumeStart;\r\n\t\t\t\ttone.volumeDeltas[i] = (volumeEnd - volumeStart) / runLength;\r\n\t\t\t}\r\n\r\n\t\t\tlet useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\r\n\t\t\tlet useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\r\n\t\t\tif (synth.isModActive(ModSetting.mstFMFeedback, false, channel, instrumentIdx)) {\r\n\t\t\t\tuseFeedbackAmplitudeStart *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, false) / 15.0;\r\n\t\t\t\tuseFeedbackAmplitudeEnd *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, true) / 15.0;\r\n\t\t\t}\r\n\r\n\t\t\tconst feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\r\n\t\t\tconst feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\r\n\t\t\tconst feedbackEnvelope: Envelope = Config.envelopes[instrument.feedbackEnvelope];\r\n\t\t\tlet feedbackStart: number = feedbackAmplitudeStart * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\t\tlet feedbackEnd: number = feedbackAmplitudeEnd * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\t\t\ttone.feedbackMult = feedbackStart;\r\n\t\t\ttone.feedbackDelta = (feedbackEnd - tone.feedbackMult) / runLength;\r\n\r\n\t\t\tconst volumeMult: number = baseVolume * instrumentVolumeMult;\r\n\t\t\ttone.volumeStart = filterVolumeStart * volumeMult * transitionVolumeStart * chordVolumeStart;\r\n\t\t\tconst volumeEnd: number = filterVolumeEnd * volumeMult * transitionVolumeEnd * chordVolumeEnd;\r\n\t\t\ttone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n\t\t\tsineVolumeBoostStart *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeStart / 15.0)) - 1.0) / 3.0;\r\n\t\t\tsineVolumeBoostEnd *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeEnd / 15.0)) - 1.0) / 3.0;\r\n\t\t\tsineVolumeBoostStart *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeStart - 1) / 2.0);\r\n\t\t\tsineVolumeBoostEnd *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeEnd - 1) / 2.0);\r\n\t\t\ttone.volumeStart *= 1.0 + sineVolumeBoostStart * 3.0;\r\n\t\t\ttone.volumeDelta *= 1.0 + (sineVolumeBoostStart + sineVolumeBoostEnd) * 1.5; // Volume boosts are averaged such that delta brings you to next target start boost.\r\n\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\t// Modulator value is used for data, so don't actually compute audio nonsense for it.\r\n\t\t\ttone.volumeStart = transitionVolumeStart;\r\n\t\t\tlet volumeEnd: number = transitionVolumeEnd;\r\n\r\n\t\t\ttone.volumeStart *= customVolumeStart;\r\n\t\t\tvolumeEnd *= customVolumeEnd;\r\n\r\n\t\t\ttone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n\t\t} else {\r\n\t\t\tlet detuneStart: number = instrument.detune / 25;\r\n\t\t\tlet detuneEnd: number = instrument.detune / 25;\r\n\t\t\tif (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n\t\t\t\tdetuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n\t\t\t\tdetuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tif (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n\t\t\t\tdetuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n\t\t\t\tdetuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tlet pitch: number = tone.pitches[0];\r\n\r\n\t\t\tif (tone.pitchCount > 1) {\r\n\t\t\t\tconst arpeggio: number = Math.floor(instrument.arpTime / Config.ticksPerArpeggio);\r\n\t\t\t\tif (chord.harmonizes) {\r\n\t\t\t\t\tconst intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n\t\t\t\t\t// tone.intervalMult = Math.pow(2.0, intervalOffset / song.edo);\r\n\t\t\t\t\ttone.intervalMult = Math.pow(2.0, intervalOffset / Config.pitchesPerOctave);\r\n\t\t\t\t\ttone.intervalVolumeMult = Math.pow(2.0, -intervalOffset / pitchDamping);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale;\r\n\t\t\tconst endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale;\r\n\t\t\t// const startFreq: number = Instrument.frequencyFromPitch(startPitch, song.centerFrequency, song.edo);\r\n\t\t\tconst startFreq: number = Instrument.frequencyFromPitch(startPitch);\r\n\t\t\tconst pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\tconst pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\tlet settingsVolumeMultStart: number = baseVolume * filterVolumeStart;\r\n\t\t\tlet settingsVolumeMultEnd: number = baseVolume * filterVolumeEnd;\r\n\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\tsettingsVolumeMultStart *= Config.chipNoises[instrument.chipNoise].volume;\r\n\t\t\t\tsettingsVolumeMultEnd *= Config.chipNoises[instrument.chipNoise].volume;\r\n\t\t\t}\r\n\t\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tsettingsVolumeMultStart *= Config.chipWaves[instrument.chipWave].volume;\r\n\t\t\t\tsettingsVolumeMultEnd *= Config.chipWaves[instrument.chipWave].volume;\r\n\t\t\t}\r\n\t\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tsettingsVolumeMultStart *= Config.intervals[instrument.interval].volume;\r\n\t\t\t\tsettingsVolumeMultEnd *= Config.intervals[instrument.interval].volume;\r\n\t\t\t}\r\n\t\t\tif (instrument.type == InstrumentType.pwm) {\r\n\r\n\t\t\t\t// Check for PWM mods to this instrument\r\n\t\t\t\tlet pulseWidthModStart: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n\t\t\t\tlet pulseWidthModEnd: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstPulseWidth, false, channel, instrumentIdx)) {\r\n\t\t\t\t\tpulseWidthModStart = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, false)) / (Config.pulseWidthRange * 2);\r\n\t\t\t\t\tpulseWidthModEnd = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, true)) / (Config.pulseWidthRange * 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pulseEnvelope: Envelope = Config.envelopes[instrument.pulseEnvelope];\r\n\t\t\t\tconst pulseWidthStart: number = pulseWidthModStart * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\t\t\tconst pulseWidthEnd: number = pulseWidthModEnd * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n\t\t\t\ttone.pulseWidth = pulseWidthStart;\r\n\t\t\t\ttone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / runLength;\r\n\t\t\t}\r\n\r\n\t\t\ttone.phaseDeltas[0] = startFreq * sampleTime;\r\n\r\n\t\t\ttone.volumeStart = transitionVolumeStart * chordVolumeStart * pitchVolumeStart * settingsVolumeMultStart * instrumentVolumeMult;\r\n\t\t\tlet volumeEnd: number = transitionVolumeEnd * chordVolumeEnd * pitchVolumeEnd * settingsVolumeMultEnd * instrumentVolumeMult;\r\n\r\n\t\t\tif (filterEnvelope.type != EnvelopeType.custom && (instrument.type != InstrumentType.pwm || Config.envelopes[instrument.pulseEnvelope].type != EnvelopeType.custom)) {\r\n\t\t\t\ttone.volumeStart *= customVolumeStart;\r\n\t\t\t\tvolumeEnd *= customVolumeEnd;\r\n\t\t\t}\r\n\r\n\t\t\t// Check for mod-related volume delta\r\n\t\t\tif (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n\t\t\t\t// Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n\t\t\t\tconst startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n\t\t\t\tconst endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n\t\t\t\ttone.volumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n\t\t\t\tvolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n\t\t\t}\r\n\t\t\t// Check for SONG mod-related volume delta\r\n\t\t\tif (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n\t\t\t\ttone.volumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n\t\t\t\tvolumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n\t\t\t}\r\n\r\n\t\t\ttone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\t\t}\r\n\r\n\t\t// tone.phaseDeltaScale = Math.pow(2.0, ((intervalEnd - intervalStart) * intervalScale / song.edo) / runLength);\r\n\t\ttone.phaseDeltaScale = Math.pow(2.0, ((intervalEnd - intervalStart) * intervalScale / Config.pitchesPerOctave) / runLength);\r\n\t}\r\n\r\n\tpublic static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\r\n\t\tlet effect: number = 0;\r\n\t\tfor (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\r\n\t\t\teffect += Math.sin(Math.PI * 2 * secondsIntoBar / vibratoPeriodSeconds);\r\n\t\t}\r\n\t\treturn effect;\r\n\t}\r\n\r\n\tprivate static readonly fmSynthFunctionCache: Dictionary<Function> = {};\r\n\r\n\tprivate static getInstrumentSynthFunction(instrument: Instrument): Function {\r\n\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\tconst fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\r\n\t\t\tif (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\r\n\t\t\t\tconst synthSource: string[] = [];\r\n\r\n\t\t\t\tfor (const line of Synth.fmSourceTemplate) {\r\n\t\t\t\t\tif (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n\t\t\t\t\t\tconst outputs: string[] = [];\r\n\t\t\t\t\t\tfor (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\r\n\t\t\t\t\t\t\toutputs.push(\"operator\" + j + \"Scaled\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsynthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n\t\t\t\t\t} else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n\t\t\t\t\t\tfor (let j: number = Config.operatorCount - 1; j >= 0; j--) {\r\n\t\t\t\t\t\t\tfor (const operatorLine of Synth.operatorSourceTemplate) {\r\n\t\t\t\t\t\t\t\tif (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n\t\t\t\t\t\t\t\t\tlet modulators = \"\";\r\n\t\t\t\t\t\t\t\t\tfor (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\r\n\t\t\t\t\t\t\t\t\t\tmodulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\r\n\t\t\t\t\t\t\t\t\tif (feedbackIndices.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\tmodulators += \" + feedbackMult * (\";\r\n\t\t\t\t\t\t\t\t\t\tconst feedbacks: string[] = [];\r\n\t\t\t\t\t\t\t\t\t\tfor (const modulatorNumber of feedbackIndices) {\r\n\t\t\t\t\t\t\t\t\t\t\tfeedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tmodulators += feedbacks.join(\" + \") + \")\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tsynthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsynthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (line.indexOf(\"#\") != -1) {\r\n\t\t\t\t\t\tfor (let j = 0; j < Config.operatorCount; j++) {\r\n\t\t\t\t\t\t\tsynthSource.push(line.replace(/\\#/g, j + \"\"));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsynthSource.push(line);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log(synthSource.join(\"\\n\"));\r\n\r\n\t\t\t\tSynth.fmSynthFunctionCache[fingerprint] = new Function(\"synth\", \"data\", \"stereoBufferIndex\", \"stereoBufferLength\", \"runLength\", \"tone\", \"instrument\", synthSource.join(\"\\n\"));\r\n\t\t\t}\r\n\t\t\treturn Synth.fmSynthFunctionCache[fingerprint];\r\n\t\t} else if (instrument.type == InstrumentType.chip) {\r\n\t\t\treturn Synth.chipSynth;\r\n\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\treturn Synth.chipSynth;\r\n\t\t} else if (instrument.type == InstrumentType.harmonics) {\r\n\t\t\treturn Synth.harmonicsSynth;\r\n\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\treturn Synth.pulseWidthSynth;\r\n\t\t} else if (instrument.type == InstrumentType.noise) {\r\n\t\t\treturn Synth.noiseSynth;\r\n\t\t} else if (instrument.type == InstrumentType.spectrum) {\r\n\t\t\treturn Synth.spectrumSynth;\r\n\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\treturn Synth.drumsetSynth;\r\n\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\treturn Synth.modSynth;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized instrument type: \" + instrument.type);\r\n\t\t}\r\n\t}\r\n\r\n\t// private static chipSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument, edo: number): void {\r\n\tprivate static chipSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tvar wave: Float64Array;\r\n\t\tvar volumeScale: number;\r\n\r\n\t\tconst isCustomWave: boolean = (instrument.type == InstrumentType.customChipWave);\r\n\r\n\t\tif (!isCustomWave) {\r\n\t\t\twave = Config.chipWaves[instrument.chipWave].samples;\r\n\t\t\tvolumeScale = 1.0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\twave = instrument.customChipWaveIntegral;\r\n\t\t\t// Integrals for custom chip wave can get rather big. This \"zero point\" can be config'ed later.\r\n\t\t\tvolumeScale = 0.1;\r\n\t\t}\r\n\r\n\t\tconst waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n\t\t// const intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / edo);\r\n\t\t// const intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / edo) * tone.intervalMult;\r\n\t\tconst intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / Config.pitchesPerOctave);\r\n\t\tconst intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / Config.pitchesPerOctave) * tone.intervalMult;\r\n\t\tconst intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n\t\tif (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n\t\tconst deltaRatio: number = intervalB / intervalA;\r\n\t\tlet phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n\t\tlet phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n\t\tlet phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\tlet prevWaveIntegralA: number = wave[indexA];\r\n\t\tlet prevWaveIntegralB: number = wave[indexB];\r\n\t\tprevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n\t\tprevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\r\n\t\t//console.log(\"S: \" + stereoBufferIndex + \" P: \" + stopIndex);\r\n\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\r\n\t\t\tphaseA += phaseDeltaA;\r\n\t\t\tphaseB += phaseDeltaB;\r\n\r\n\t\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\t\tlet nextWaveIntegralA: number = wave[indexA];\r\n\t\t\tlet nextWaveIntegralB: number = wave[indexB];\r\n\t\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\t\tnextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n\t\t\tnextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n\t\t\tlet waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n\t\t\tlet waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n\t\t\tprevWaveIntegralA = nextWaveIntegralA;\r\n\t\t\tprevWaveIntegralB = nextWaveIntegralB;\r\n\r\n\t\t\tconst combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDeltaA *= phaseDeltaScale;\r\n\t\t\tphaseDeltaB *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume * volumeScale;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\t//debugString += \",\" + data.subarray(stereoBufferIndex - runLength, stereoBufferIndex).toString();\r\n\t\t//console.log(stereoBufferIndex);\r\n\r\n\t\ttone.phases[0] = phaseA / waveLength;\r\n\t\ttone.phases[1] = phaseB / waveLength;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\r\n\t}\r\n\r\n\t// private static harmonicsSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument, edo: number): void {\r\n\tprivate static harmonicsSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tconst wave: Float32Array = instrument.harmonicsWave.getCustomWave();\r\n\t\tconst waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n\t\t// const intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / edo);\r\n\t\t// const intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / edo) * tone.intervalMult;\r\n\t\tconst intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / Config.pitchesPerOctave);\r\n\t\tconst intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / Config.pitchesPerOctave) * tone.intervalMult;\r\n\t\tconst intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n\t\tif (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n\t\tconst deltaRatio: number = intervalB / intervalA;\r\n\t\tlet phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n\t\tlet phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n\t\tlet phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\tlet prevWaveIntegralA: number = wave[indexA];\r\n\t\tlet prevWaveIntegralB: number = wave[indexB];\r\n\t\tprevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n\t\tprevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\r\n\t\t\tphaseA += phaseDeltaA;\r\n\t\t\tphaseB += phaseDeltaB;\r\n\r\n\t\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\t\tlet nextWaveIntegralA: number = wave[indexA];\r\n\t\t\tlet nextWaveIntegralB: number = wave[indexB];\r\n\t\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\t\tnextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n\t\t\tnextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n\t\t\tlet waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n\t\t\tlet waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n\r\n\t\t\tprevWaveIntegralA = nextWaveIntegralA;\r\n\t\t\tprevWaveIntegralB = nextWaveIntegralB;\r\n\r\n\t\t\tconst combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDeltaA *= phaseDeltaScale;\r\n\t\t\tphaseDeltaB *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phaseA / waveLength;\r\n\t\ttone.phases[1] = phaseB / waveLength;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static pulseWidthSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0];\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phase: number = (tone.phases[0] % 1);\r\n\r\n\t\tlet pulseWidth: number = tone.pulseWidth;\r\n\t\tconst pulseWidthDelta: number = tone.pulseWidthDelta;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\r\n\t\t\tconst sawPhaseA: number = phase % 1;\r\n\t\t\tconst sawPhaseB: number = (phase + pulseWidth) % 1;\r\n\r\n\t\t\tlet pulseWave: number = sawPhaseB - sawPhaseA;\r\n\r\n\t\t\t// This a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing.\r\n\t\t\tif (sawPhaseA < phaseDelta) {\r\n\t\t\t\tvar t = sawPhaseA / phaseDelta;\r\n\t\t\t\tpulseWave += (t + t - t * t - 1) * 0.5;\r\n\t\t\t} else if (sawPhaseA > 1.0 - phaseDelta) {\r\n\t\t\t\tvar t = (sawPhaseA - 1.0) / phaseDelta;\r\n\t\t\t\tpulseWave += (t + t + t * t + 1) * 0.5;\r\n\t\t\t}\r\n\t\t\tif (sawPhaseB < phaseDelta) {\r\n\t\t\t\tvar t = sawPhaseB / phaseDelta;\r\n\t\t\t\tpulseWave -= (t + t - t * t - 1) * 0.5;\r\n\t\t\t} else if (sawPhaseB > 1.0 - phaseDelta) {\r\n\t\t\t\tvar t = (sawPhaseB - 1.0) / phaseDelta;\r\n\t\t\t\tpulseWave -= (t + t + t * t + 1) * 0.5;\r\n\t\t\t}\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (pulseWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tpulseWidth += pulseWidthDelta;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phase;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static fmSourceTemplate: string[] = (`\r\nconst sineWave = beepbox.Config.sineWave;\r\n\r\nlet phaseDeltaScale = +tone.phaseDeltaScale;\r\n// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\r\nlet operator#Phase\t   = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\r\nlet operator#PhaseDelta  = +tone.phaseDeltas[#];\r\nlet operator#OutputMult  = +tone.volumeStarts[#];\r\nconst operator#OutputDelta = +tone.volumeDeltas[#];\r\nlet operator#Output\t  = +tone.feedbackOutputs[#];\r\nlet feedbackMult\t\t = +tone.feedbackMult;\r\nconst feedbackDelta\t\t= +tone.feedbackDelta;\r\nlet volume = +tone.volumeStart;\r\nconst volumeDelta = +tone.volumeDelta;\r\n\r\nconst isFirstOrder = tone.isFirstOrder;\r\nlet filter1 = +tone.filter;\r\nlet filter2 = isFirstOrder ? 1.0 : filter1;\r\nconst filterScale1 = +tone.filterScale;\r\nconst filterScale2 = isFirstOrder ? 1.0 : filterScale1;\r\nlet filterResonance = tone.filterResonanceStart;\r\nlet filterResonanceDelta = tone.filterResonanceDelta;\r\nlet filterSample0 = +tone.filterSample0;\r\nlet filterSample1 = +tone.filterSample1;\r\n\r\nconst stopIndex = stereoBufferIndex + runLength;\r\nstereoBufferIndex += tone.stereoOffset;\r\nlet stereoVolumeL = tone.stereoVolumeLStart;\r\nlet stereoVolumeLDelta = tone.stereoVolumeLDelta;\r\nlet stereoVolumeR = tone.stereoVolumeRStart;\r\nlet stereoVolumeRDelta = tone.stereoVolumeRDelta;\r\nlet stereoDelay = tone.stereoDelayStart;\r\nlet stereoDelayDelta = tone.stereoDelayDelta;\r\nlet delays = [];\r\nwhile (stereoBufferIndex < stopIndex) {\r\n// INSERT OPERATOR COMPUTATION HERE\r\nconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\r\n\r\nconst feedback = filterResonance + filterResonance / (1.0 - filter1);\r\nfilterSample0 += filter1 * (fmOutput - filterSample0 + feedback * (filterSample0 - filterSample1));\r\nfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\nfeedbackMult += feedbackDelta;\r\noperator#OutputMult += operator#OutputDelta;\r\noperator#Phase += operator#PhaseDelta;\r\noperator#PhaseDelta *= phaseDeltaScale;\r\nfilter1 *= filterScale1;\r\nfilter2 *= filterScale2;\r\nfilterResonance += filterResonanceDelta;\r\n\r\nconst output = filterSample1 * volume;\r\nvolume += volumeDelta;\r\n\r\n//const absStereoDelay: number = Math.abs(stereoDelay);\r\n//const fracStereoDelay: number = absStereoDelay % 1;\r\n//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\ndelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\ndata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\ndata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\ndata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\ndata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\nstereoVolumeL += stereoVolumeLDelta;\r\nstereoVolumeR += stereoVolumeRDelta;\r\nstereoDelay += stereoDelayDelta;\r\n\r\nstereoBufferIndex += 2;\r\n}\r\n\r\ntone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\r\ntone.feedbackOutputs[#] = operator#Output;\r\n\r\nconst epsilon = (1.0e-24);\r\nif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\nif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\ntone.filterSample0 = filterSample0;\r\ntone.filterSample1 = filterSample1;\r\n`).split(\"\\n\");\r\n\r\n\tprivate static operatorSourceTemplate: string[] = (`\r\nconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\r\nconst operator#PhaseInt = operator#PhaseMix|0;\r\nconst operator#Index\t= operator#PhaseInt & ` + Config.sineWaveMask + `;\r\nconst operator#Sample   = sineWave[operator#Index];\r\noperator#Output\t   = operator#Sample + (sineWave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\r\nconst operator#Scaled   = operator#OutputMult * operator#Output;\r\n`).split(\"\\n\");\r\n\r\n\tprivate static noiseSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tlet wave: Float32Array = instrument.getDrumWave();\r\n\t\tlet phaseDelta: number = +tone.phaseDeltas[0];\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n\t\tif (tone.phases[0] == 0) {\r\n\t\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\r\n\t\t\tphase = Math.random() * Config.chipNoiseLength;\r\n\t\t}\r\n\t\tlet sample: number = +tone.sample;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst pitchRelativefilter: number = Math.min(1.0, tone.phaseDeltas[0] * Config.chipNoises[instrument.chipNoise].pitchFilterMult);\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\t\t\tconst waveSample: number = wave[phase & 0x7fff];\r\n\r\n\t\t\tsample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phase / Config.chipNoiseLength;\r\n\t\ttone.sample = sample;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static spectrumSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tlet wave: Float32Array = instrument.getDrumWave();\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0] * (1 << 7);\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet sample: number = +tone.sample;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\r\n\t\tif (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n\t\tconst pitchRelativefilter: number = Math.min(1.0, phaseDelta);\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\t\t\tconst phaseInt: number = phase | 0;\r\n\t\t\tconst index: number = phaseInt & 0x7fff;\r\n\t\t\tlet waveSample: number = wave[index];\r\n\t\t\tconst phaseRatio: number = phase - phaseInt;\r\n\t\t\twaveSample += (wave[index + 1] - waveSample) * phaseRatio;\r\n\r\n\t\t\tsample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phase / Config.chipNoiseLength;\r\n\t\ttone.sample = sample;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\t// private static drumsetSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument, edo: number): void {\r\n\t// \tlet wave: Float32Array = instrument.getDrumsetWave(tone.drumsetPitch, edo);\r\n\tprivate static drumsetSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tlet wave: Float32Array = instrument.getDrumsetWave(tone.drumsetPitch);\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0] / Instrument.drumsetIndexReferenceDelta(tone.drumsetPitch);\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet sample: number = +tone.sample;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\r\n\t\tif (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\t\t\tconst phaseInt: number = phase | 0;\r\n\t\t\tconst index: number = phaseInt & 0x7fff;\r\n\t\t\tsample = wave[index];\r\n\t\t\tconst phaseRatio: number = phase - phaseInt;\r\n\t\t\tsample += (wave[index + 1] - sample) * phaseRatio;\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\t\ttone.phases[0] = phase / Config.chipNoiseLength;\r\n\t\ttone.sample = sample;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static modSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\t// Note: present modulator value is tone.volumeStart.\r\n\r\n\t\tif (!synth.song) return;\r\n\r\n\t\tlet mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\t\tlet setting: ModSetting = instrument.modSettings[mod];\r\n\r\n\t\tsynth.setModValue(tone.customVolumeStart, tone.customVolumeEnd, mod, instrument, setting);\r\n\r\n\t\t// Reset arps, but only at the start of the note\r\n\t\tif (setting == ModSetting.mstResetArpeggio && synth.tick == 0 && tone.noteStart == synth.beat * Config.partsPerBeat + synth.part) {\r\n\t\t\tsynth.song.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].arpTime = 0;\r\n\t\t}\r\n\t\telse if (setting == ModSetting.mstNextBar) {\r\n\t\t\tsynth.wantToSkip = true;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static findRandomZeroCrossing(wave: Float32Array): number {\r\n\t\tlet phase: number = Math.random() * Config.chipNoiseLength;\r\n\r\n\t\t// Spectrum and drumset waves sounds best when they start at a zero crossing,\r\n\t\t// otherwise they pop. Try to find a zero crossing.\r\n\t\tlet indexPrev: number = phase & 0x7fff;\r\n\t\tlet wavePrev: number = wave[indexPrev];\r\n\t\tconst stride: number = 16;\r\n\t\tfor (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\r\n\t\t\tconst indexNext: number = (indexPrev + stride) & 0x7fff;\r\n\t\t\tconst waveNext: number = wave[indexNext];\r\n\t\t\tif (wavePrev * waveNext <= 0.0) {\r\n\t\t\t\t// Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\r\n\t\t\t\tfor (let i: number = 0; i < 16; i++) {\r\n\t\t\t\t\tconst innerIndexNext: number = (indexPrev + 1) & 0x7fff;\r\n\t\t\t\t\tconst innerWaveNext: number = wave[innerIndexNext];\r\n\t\t\t\t\tif (wavePrev * innerWaveNext <= 0.0) {\r\n\t\t\t\t\t\t// Found the zero crossing again! Now let's find the exact intersection.\r\n\t\t\t\t\t\tconst slope: number = innerWaveNext - wavePrev;\r\n\t\t\t\t\t\tphase = indexPrev;\r\n\t\t\t\t\t\tif (Math.abs(slope) > 0.00000001) {\r\n\t\t\t\t\t\t\tphase += -wavePrev / slope;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tphase = Math.max(0, phase) % Config.chipNoiseLength;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tindexPrev = innerIndexNext;\r\n\t\t\t\t\t\twavePrev = innerWaveNext;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tindexPrev = indexNext;\r\n\t\t\t\twavePrev = waveNext;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn phase;\r\n\t}\r\n\r\n\tpublic static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\r\n\t\treturn (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\r\n\t}\r\n\tpublic static volumeMultToInstrumentVolume(volumeMult: number): number {\r\n\t\treturn (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\r\n\t}\r\n\tpublic static expressionToVolumeMult(expression: number): number {\r\n\t\treturn Math.pow(Math.max(0.0, expression) / 6.0, 1.5);\r\n\t}\r\n\tpublic static volumeMultToExpression(volumeMult: number): number {\r\n\t\treturn Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * 6.0;\r\n\t}\r\n\r\n\tprivate getSamplesPerTick(): number {\r\n\t\tif (this.song == null) return 0;\r\n\t\tlet beatsPerMinute: number = this.song.getBeatsPerMinute();\r\n\t\tif (this.isModActive(ModSetting.mstTempo, true)) {\r\n\t\t\tbeatsPerMinute = this.getModValue(ModSetting.mstTempo, true);\r\n\t\t}\r\n\t\treturn this.getSamplesPerTickSpecificBPM(beatsPerMinute);\r\n\t}\r\n\r\n\tprivate getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\r\n\t\tconst beatsPerSecond: number = beatsPerMinute / 60.0;\r\n\t\tconst partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\r\n\t\tconst tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\r\n\t\treturn this.samplesPerSecond / tickPerSecond;\r\n\t}\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class BarScrollBar {\r\n\tprivate readonly _editorWidth: number = 512;\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect(\"rect\", { fill: ColorConfig.playhead, x: 0, y: 0, width: 2, height: this._editorHeight });\r\n\tprivate readonly _notches: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4 });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2 });\r\n\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate _renderedPlayhead: number = -1;\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight },\r\n\t\tthis._notches,\r\n\t\tthis._handle,\r\n\t\tthis._handleHighlight,\r\n\t\tthis._leftHighlight,\r\n\t\tthis._rightHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _notchSpace: number;\r\n\tprivate _renderedNotchCount: number = -1;\r\n\tprivate _renderedBarPos: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _trackContainer: HTMLDivElement) {\r\n\t\tconst center: number = this._editorHeight * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowHeight: number = 6;\r\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\r\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t// Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\r\n\t\t//this._trackContainer.addEventListener(\"scroll\", this._onScroll, {capture: false, passive: true});\r\n\t\t(<Function>this._trackContainer.addEventListener)(\"scroll\", this._onScroll, { capture: false, passive: true });\r\n\t}\r\n\r\n\tpublic animatePlayhead = (): void => {\r\n\t\tconst playhead = Math.min(512, Math.max(0, (this._notchSpace * this._doc.synth.playhead - 2)));\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onScroll = (event: Event): void => {\r\n\t\tthis._doc.barScrollPos = (this._trackContainer.scrollLeft / this._doc.getBarWidth());\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._dragging) {\r\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tpublic changePos(offset: number) {\r\n\t\twhile (Math.abs(offset) >= 1) {\r\n\r\n\t\t\tif (offset < 0) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toffset += (offset > 0) ? -1 : 1;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._dragging && this._mouseDown) {\r\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t} else {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showleftHighlight: boolean = false;\r\n\t\tlet showRightHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\r\n\t\t\t\tshowleftHighlight = true;\r\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\t\tshowRightHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tthis._notchSpace = (this._editorWidth - 1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\r\n\r\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\r\n\t\tif (resized) {\r\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\r\n\r\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\r\n\r\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\r\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\r\n\t\t\t\tthis._notches.appendChild(SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2 }));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (resized || this._renderedBarPos != this._doc.barScrollPos) {\r\n\t\t\tthis._renderedBarPos = this._doc.barScrollPos;\r\n\t\t\tthis._handle.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handle.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t\tthis._handleHighlight.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handleHighlight.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t\tthis._trackContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Change {\r\n\tprivate _noop: boolean = true;\r\n\r\n\tprotected _didSomething(): void {\r\n\t\tthis._noop = false;\r\n\t}\r\n\r\n\tpublic isNoop(): boolean {\r\n\t\treturn this._noop;\r\n\t}\r\n\r\n\tpublic commit(): void { }\r\n}\r\n\r\nexport class UndoableChange extends Change {\r\n\tprivate _reversed: boolean;\r\n\tprivate _doneForwards: boolean;\r\n\tconstructor(reversed: boolean) {\r\n\t\tsuper();\r\n\t\tthis._reversed = reversed;\r\n\t\tthis._doneForwards = !reversed;\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t} else {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t} else {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t}\r\n\t}\r\n\r\n\t// isDoneForwards() returns whether or not the Change was most recently \r\n\t// performed forwards or backwards. If the change created something, do not \r\n\t// delete it in the change destructor unless the Change was performed \r\n\t// backwards: \r\n\tprotected _isDoneForwards(): boolean {\r\n\t\treturn this._doneForwards;\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\r\n\t}\r\n}\r\n\r\nexport class ChangeGroup extends Change {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic append(change: Change): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSequence extends UndoableChange {\r\n\tprivate _changes: UndoableChange[];\r\n\tconstructor(changes?: UndoableChange[]) {\r\n\t\tsuper(false);\r\n\t\tif (changes == undefined) {\r\n\t\t\tthis._changes = [];\r\n\t\t} else {\r\n\t\t\tthis._changes = changes.concat();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic append(change: UndoableChange): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._changes[this._changes.length] = change;\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\r\n\t\t\tthis._changes[i].redo();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tfor (let i: number = this._changes.length - 1; i >= 0; i--) {\r\n\t\t\tthis._changes[i].undo();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Algorithm, Dictionary, InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, ModStatus, ModSetting } from \"../synth/synth\";\r\nimport { Preset, PresetCategory, EditorConfig } from \"./EditorConfig\";\r\nimport { Change, ChangeGroup, ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\r\n\tfor (const note of pattern.notes) {\r\n\t\tfor (const pitch of note.pitches) {\r\n\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\tconst key: number = (pitch + pin.interval) % 12;\r\n\t\t\t\tif (!flags[key]) {\r\n\t\t\t\t\tflags[key] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number): number[] {\r\n\tconst newScaleFlags: ReadonlyArray<boolean> = Config.scales[newScaleValue].flags;\r\n\tconst oldScale: number[] = [];\r\n\tconst newScale: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tif (oldScaleFlags[i]) oldScale.push(i);\r\n\t\tif (newScaleFlags[i]) newScale.push(i);\r\n\t}\r\n\tconst largerToSmaller: boolean = oldScale.length > newScale.length;\r\n\tconst smallerScale: number[] = largerToSmaller ? newScale : oldScale;\r\n\tconst largerScale: number[] = largerToSmaller ? oldScale : newScale;\r\n\r\n\tconst roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\r\n\tlet bestScore: number = Number.MAX_SAFE_INTEGER;\r\n\tlet bestIndexMap: number[] = [];\r\n\tconst stack: number[][] = [[0]]; // Root always maps to root.\r\n\r\n\twhile (stack.length > 0) {\r\n\t\tconst indexMap: number[] = stack.pop()!;\r\n\r\n\t\tif (indexMap.length == smallerScale.length) {\r\n\t\t\t// Score this mapping.\r\n\t\t\tlet score: number = 0;\r\n\t\t\tfor (let i: number = 0; i < indexMap.length; i++) {\r\n\t\t\t\tscore += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\r\n\t\t\t\tif (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\r\n\t\t\t\t\t// Penalize changing roles.\r\n\t\t\t\t\tscore += 0.75;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (bestScore > score) {\r\n\t\t\t\tbestScore = score;\r\n\t\t\t\tbestIndexMap = indexMap;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Recursively choose next indices for mapping.\r\n\t\t\tconst lowIndex: number = indexMap[indexMap.length - 1] + 1;\r\n\t\t\tconst highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\r\n\t\t\tfor (let i: number = lowIndex; i <= highIndex; i++) {\r\n\t\t\t\tstack.push(indexMap.concat(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst sparsePitchMap: number[][] = [];\r\n\tfor (let i: number = 0; i < bestIndexMap.length; i++) {\r\n\t\tconst smallerScalePitch = smallerScale[i];\r\n\t\tconst largerScalePitch = largerScale[bestIndexMap[i]];\r\n\t\tsparsePitchMap[i] = largerToSmaller\r\n\t\t\t? [largerScalePitch, smallerScalePitch]\r\n\t\t\t: [smallerScalePitch, largerScalePitch];\r\n\t}\r\n\r\n\t// To make it easier to wrap around.\r\n\tsparsePitchMap.push([12, 12]);\r\n\tnewScale.push(12);\r\n\r\n\tlet sparseIndex: number = 0;\r\n\tconst fullPitchMap: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tconst oldLow: number = sparsePitchMap[sparseIndex][0];\r\n\t\tconst newLow: number = sparsePitchMap[sparseIndex][1];\r\n\t\tconst oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\r\n\t\tconst newHigh: number = sparsePitchMap[sparseIndex + 1][1];\r\n\t\tif (i == oldHigh - 1) sparseIndex++;\r\n\r\n\t\tconst transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\r\n\r\n\t\tlet nearestPitch: number = 0;\r\n\t\tlet nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\r\n\t\tfor (const newPitch of newScale) {\r\n\t\t\tlet distance: number = Math.abs(newPitch - transformedPitch);\r\n\t\t\tif (roles[newPitch] != roles[i]) {\r\n\t\t\t\t// Again, penalize changing roles.\r\n\t\t\t\tdistance += 0.1;\r\n\t\t\t}\r\n\t\t\tif (nearestPitchDistance > distance) {\r\n\t\t\t\tnearestPitchDistance = distance;\r\n\t\t\t\tnearestPitch = newPitch;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfullPitchMap[i] = nearestPitch;\r\n\t}\r\n\r\n\treturn fullPitchMap;\r\n}\r\n\r\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\r\n\t// Create a new note, and interpret the pitch bend and expression events\r\n\t// to determine where we need to insert pins to control interval and volume.\r\n\tconst newNote: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\tnewNotes.push(newNote);\r\n\tnewNote.pins.length = 0;\r\n\tnewNote.pitches.length = 0;\r\n\tconst newNoteLength: number = noteEndPart - noteStartPart;\r\n\r\n\tfor (const pitch of oldNote.pitches) {\r\n\t\tnewNote.pitches.push(pitch);\r\n\t}\r\n\r\n\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\tconst pin: NotePin = oldNote.pins[pinIndex];\r\n\t\tconst newPinTime: number = pin.time + timeOffset;\r\n\t\tif (newPinTime < 0) {\r\n\t\t\tif (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst nextPin: NotePin = oldNote.pins[pinIndex + 1];\r\n\t\t\tconst nextPinTime: number = nextPin.time + timeOffset;\r\n\t\t\tif (nextPinTime > 0) {\r\n\t\t\t\t// Insert an interpolated pin at the start of the new note.\r\n\t\t\t\tconst ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.volume + ratio * (nextPin.volume - pin.volume))));\r\n\r\n\t\t\t}\r\n\t\t} else if (newPinTime <= newNoteLength) {\r\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.volume));\r\n\t\t} else {\r\n\t\t\tif (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst prevPin: NotePin = oldNote.pins[pinIndex - 1];\r\n\t\t\tconst prevPinTime: number = prevPin.time + timeOffset;\r\n\t\t\tif (prevPinTime < newNoteLength) {\r\n\t\t\t\t// Insert an interpolated pin at the end of the new note.\r\n\t\t\t\tconst ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.volume + ratio * (pin.volume - prevPin.volume))));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\r\n\tconst offsetInterval: number = newNote.pins[0].interval;\r\n\tfor (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\r\n\t\tnewNote.pitches[pitchIdx] += offsetInterval;\r\n\t}\r\n\tfor (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\r\n\t\tnewNote.pins[pinIdx].interval -= offsetInterval;\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = []\r\n\r\n\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\tconst oldChannel: Channel = doc.song.channels[channelIndex];\r\n\t\t\tconst newChannel: Channel = new Channel();\r\n\r\n\t\t\tif (channelIndex < doc.song.pitchChannelCount) {\r\n\t\t\t\tpitchChannels.push(newChannel);\r\n\t\t\t} else if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n\t\t\t\tnoiseChannels.push(newChannel);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmodChannels.push(newChannel);\r\n\t\t\t}\r\n\r\n\t\t\tnewChannel.muted = oldChannel.muted;\r\n\t\t\tnewChannel.octave = oldChannel.octave;\r\n\t\t\tnewChannel.name = oldChannel.name;\r\n\r\n\t\t\tfor (const instrument of oldChannel.instruments) {\r\n\t\t\t\tnewChannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tconst oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\tconst newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\r\n\t\t\tlet currentBar: number = -1;\r\n\t\t\tlet pattern: Pattern | null = null;\r\n\r\n\t\t\tfor (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\r\n\t\t\t\tconst oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\r\n\t\t\t\tif (oldPattern != null) {\r\n\t\t\t\t\tconst oldBarStart: number = oldBar * oldPartsPerBar;\r\n\t\t\t\t\tfor (const oldNote of oldPattern.notes) {\r\n\r\n\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\r\n\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\r\n\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * newPartsPerBar;\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar < bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tnewChannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = newChannel.patterns.length;\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = oldPattern.instrument;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// This is a consideration to allow arbitrary note sequencing, e.g. for mod channels (so the pattern being used can jump around)\r\n\t\t\t\t\t\t\t\tpattern = newChannel.patterns[newChannel.bars[bar] - 1];\r\n\r\n\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\tremoveDuplicatePatterns(modChannels);\r\n\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t}\r\n}\r\n\r\nexport class ChangePins extends UndoableChange {\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(protected _doc: SongDocument | null, protected _note: Note) {\r\n\t\tsuper(false);\r\n\t\tthis._oldStart = this._note.start;\r\n\t\tthis._oldEnd = this._note.end;\r\n\t\tthis._newStart = this._note.start;\r\n\t\tthis._newEnd = this._note.end;\r\n\t\tthis._oldPins = this._note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = this._note.pitches;\r\n\t\tthis._newPitches = [];\r\n\t}\r\n\r\n\tprotected _finishSetup(): void {\r\n\t\tfor (let i: number = 0; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i].time >= this._newPins[i + 1].time) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst firstInterval: number = this._newPins[0].interval;\r\n\t\tconst firstTime: number = this._newPins[0].time;\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tthis._newPitches[i] = this._oldPitches[i] + firstInterval;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this._newPins.length; i++) {\r\n\t\t\tthis._newPins[i].interval -= firstInterval;\r\n\t\t\tthis._newPins[i].time -= firstTime;\r\n\t\t}\r\n\t\tthis._newStart = this._oldStart + firstTime;\r\n\t\tthis._newEnd = this._newStart + this._newPins[this._newPins.length - 1].time;\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._note.start = this._newStart;\r\n\t\tthis._note.end = this._newEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._note.start = this._oldStart;\r\n\t\tthis._note.end = this._oldEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomizeInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.preset != instrument.type) {\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomWave extends Change {\r\n\tconstructor(doc: SongDocument, newArray: Float64Array) {\r\n\t\tsuper();\r\n\t\tconst oldArray: Float64Array = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customChipWave;\r\n\t\tvar comparisonResult: boolean = true;\r\n\t\tfor (let i: number = 0; i < oldArray.length; i++) {\r\n\t\t\tif (oldArray[i] != newArray[i]) {\r\n\t\t\t\tcomparisonResult = false;\r\n\t\t\t\ti = oldArray.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (comparisonResult == false) {\r\n\t\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\t\tfor (let i: number = 0; i < newArray.length; i++) {\r\n\t\t\t\tinstrument.customChipWave[i] = newArray[i];\r\n\t\t\t}\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tsum += instrument.customChipWave[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / instrument.customChipWave.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = instrument.customChipWave[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePreset extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.preset;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(newValue);\r\n\t\t\tif (preset != null) {\r\n\t\t\t\tif (preset.customType != undefined) {\r\n\t\t\t\t\tinstrument.type = preset.customType;\r\n\t\t\t\t\tif (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].isCustomInterval) {\r\n\t\t\t\t\t\tinstrument.chord = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (preset.settings != undefined) {\r\n\t\t\t\t\tconst tempVolume: number = instrument.volume;\r\n\t\t\t\t\tconst tempPan: number = instrument.pan;\r\n\t\t\t\t\tconst tempPanDelay: number = instrument.panDelay;\r\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), doc.song.getChannelIsMod(doc.channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\tinstrument.volume = tempVolume;\r\n\t\t\t\t\tinstrument.pan = tempPan;\r\n\t\t\t\t\tinstrument.panDelay = tempPanDelay;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinstrument.preset = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeRandomGeneratedInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\r\n\t\tinterface ItemWeight<T> {\r\n\t\t\treadonly item: T;\r\n\t\t\treadonly weight: number;\r\n\t\t}\r\n\t\tfunction selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\r\n\t\t\tlet total: number = 0;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\ttotal += entry.weight;\r\n\t\t\t}\r\n\t\t\tlet random: number = Math.random() * total;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\trandom -= entry.weight;\r\n\t\t\t\tif (random <= 0.0) return entry.item;\r\n\t\t\t}\r\n\t\t\treturn entries[(Math.random() * entries.length) | 0].item;\r\n\t\t}\r\n\t\tfunction selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\r\n\t\t\tconst entries: Array<ItemWeight<number>> = [];\r\n\t\t\tfor (let i: number = min; i <= max; i++) {\r\n\t\t\t\tentries.push({ item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0) });\r\n\t\t\t}\r\n\t\t\treturn selectWeightedRandom(entries);\r\n\t\t}\r\n\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (isNoise) {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.noise, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 3 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(4, Config.filterCutoffRange - 1, Config.filterCutoffRange - 2, 2);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 2 },\r\n\t\t\t\t{ item: \"punch\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 8 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 3\", weight: 4 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 2 },\r\n\t\t\t\t{ item: \"slide\", weight: 1 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 2 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 8 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n\t\t\t\t{ item: \"soft fade\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 3 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 4 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.noise: {\r\n\t\t\t\t\tinstrument.chipNoise = (Math.random() * Config.chipNoises.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrumGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tspectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = spectrumGenerators[(Math.random() * spectrumGenerators.length) | 0];\r\n\t\t\t\t\tconst spectrum: number[] = generator();\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled noise instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.chip, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.pwm, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.harmonics, weight: 6 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.fm, weight: 4 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(2, Config.filterCutoffRange - 1, 7, 1.5);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n\t\t\t\t{ item: \"decay 3\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 4 },\r\n\t\t\t\t{ item: \"slide\", weight: 2 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 4 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 4 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n\t\t\t\t{ item: \"soft fade\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 10 },\r\n\t\t\t\t{ item: \"chorus\", weight: 2 },\r\n\t\t\t\t{ item: \"chorus & reverb\", weight: 2 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 7 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tif (type != InstrumentType.spectrum) {\r\n\t\t\t\tinstrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"none\", weight: 6 },\r\n\t\t\t\t\t{ item: \"light\", weight: 2 },\r\n\t\t\t\t\t{ item: \"delayed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"heavy\", weight: 1 },\r\n\t\t\t\t\t{ item: \"shaky\", weight: 2 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tif (type == InstrumentType.chip || type == InstrumentType.harmonics) {\r\n\t\t\t\tinstrument.interval = Config.intervals.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"union\", weight: 10 },\r\n\t\t\t\t\t{ item: \"shimmer\", weight: 5 },\r\n\t\t\t\t\t{ item: \"hum\", weight: 4 },\r\n\t\t\t\t\t{ item: \"honky tonk\", weight: 3 },\r\n\t\t\t\t\t{ item: \"dissonant\", weight: 1 },\r\n\t\t\t\t\t{ item: \"fifth\", weight: 1 },\r\n\t\t\t\t\t{ item: \"octave\", weight: 2 },\r\n\t\t\t\t\t{ item: \"bowed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"piano\", weight: 5 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.chip: {\r\n\t\t\t\t\tinstrument.chipWave = (Math.random() * Config.chipWaves.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.pwm: {\r\n\t\t\t\t\tinstrument.pulseEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 3\", weight: 2 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t\tinstrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.harmonics: {\r\n\t\t\t\t\tconst harmonicGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tharmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tharmonics[(Math.random() * 8) | 0] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = harmonicGenerators[(Math.random() * harmonicGenerators.length) | 0];\r\n\t\t\t\t\tconst harmonics: number[] = generator();\r\n\t\t\t\t\tnormalize(harmonics);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21;\r\n\t\t\t\t\t\tif (isHarmonic) {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 3) * 0.5;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.fm: {\r\n\t\t\t\t\tinstrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\r\n\t\t\t\t\tinstrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\r\n\t\t\t\t\tconst algorithm: Algorithm = Config.algorithms[instrument.algorithm];\r\n\t\t\t\t\tfor (let i: number = 0; i < algorithm.carrierCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(0, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[\"custom\"].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = algorithm.carrierCount; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(3, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t\t{ item: \"steady\", weight: 6 },\r\n\t\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 3\", weight: 1 },\r\n\t\t\t\t\t\t])].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\tinstrument.feedbackEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 3\", weight: 1 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled pitched instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.transition;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.transition = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEffects extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.effects;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.effects = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternNumbers extends Change {\r\n\tconstructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\r\n\t\tsuper();\r\n\t\tif (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\r\n\r\n\t\tfor (let bar: number = startBar; bar < startBar + width; bar++) {\r\n\t\t\tfor (let channel: number = startChannel; channel < startChannel + height; channel++) {\r\n\t\t\t\tif (doc.song.channels[channel].bars[bar] != value) {\r\n\t\t\t\t\tdoc.song.channels[channel].bars[bar] = value;\r\n\t\t\t\t\tthis._didSomething();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeEdo extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.edo != newValue) {\r\n\t\t\tdoc.song.edo = newValue;\r\n\t\t\tdoc.song.maxPitch = newValue * Config.pitchOctaves;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeBarCount extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\r\n\t\tsuper();\r\n\t\tif (doc.song.barCount != newValue) {\r\n\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\tif (atBeginning) {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.unshift(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (doc.song.barCount > newValue) {\r\n\t\t\t\t\t\tchannel.bars.splice(0, doc.song.barCount - newValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchannel.bars.length = newValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (atBeginning) {\r\n\t\t\t\tconst diff: number = newValue - doc.song.barCount;\r\n\t\t\t\tdoc.bar = Math.max(0, doc.bar + diff);\r\n\t\t\t\tif (diff < 0 || doc.barScrollPos > 0) {\r\n\t\t\t\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\r\n\t\t\t}\r\n\t\t\tdoc.bar = Math.min(doc.bar, newValue - 1);\r\n\t\t\tdoc.barScrollPos = Math.max(0, Math.min(newValue - doc.trackVisibleBars, doc.barScrollPos));\r\n\t\t\tdoc.song.loopLength = Math.min(newValue, doc.song.loopLength);\r\n\t\t\tdoc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\r\n\t\t\tdoc.song.barCount = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInsertBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\r\n\t\tcount = newLength - doc.song.barCount;\r\n\t\tif (count == 0) return;\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\twhile (channel.bars.length < newLength) {\r\n\t\t\t\tchannel.bars.splice(start, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdoc.song.barCount = newLength;\r\n\r\n\t\tdoc.bar += count;\r\n\t\tdoc.barScrollPos = Math.min(newLength - doc.trackVisibleBars, doc.barScrollPos + count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart += count;\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength >= start) {\r\n\t\t\tdoc.song.loopLength += count;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDeleteBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\tchannel.bars.splice(start, count);\r\n\t\t\tif (channel.bars.length == 0) channel.bars.push(0);\r\n\t\t}\r\n\t\tdoc.song.barCount = Math.max(1, doc.song.barCount - count);\r\n\r\n\t\tdoc.bar = Math.max(0, doc.bar - count);\r\n\r\n\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos - count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart - count);\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength > start) {\r\n\t\t\tdoc.song.loopLength -= count;\r\n\t\t}\r\n\t\tdoc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeLimiterSettings extends Change {\r\n\tconstructor(doc: SongDocument, limitRatio: number, compressionRatio: number, limitThreshold: number, compressionThreshold: number, limitRise: number, limitDecay: number, masterGain: number) {\r\n\t\tsuper();\r\n\r\n\t\t// This check causes issues with the state change handler because it gets superceded by whenupdated when the limiter prompt closes for some reason, causing the state to revert. I think it's because the notifier change needs to happen right as the prompt closes.\r\n\t\t//if (limitRatio != doc.song.limitRatio || compressionRatio != doc.song.compressionRatio || limitThreshold != doc.song.limitThreshold || compressionThreshold != doc.song.compressionThreshold || limitRise != doc.song.limitRise || limitDecay != doc.song.limitDecay) {\r\n\r\n\t\tdoc.song.limitRatio = limitRatio;\r\n\t\tdoc.song.compressionRatio = compressionRatio;\r\n\t\tdoc.song.limitThreshold = limitThreshold;\r\n\t\tdoc.song.compressionThreshold = compressionThreshold;\r\n\t\tdoc.song.limitRise = limitRise;\r\n\t\tdoc.song.limitDecay = limitDecay;\r\n\t\tdoc.song.masterGain = masterGain;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelOrder extends Change {\r\n\tconstructor(doc: SongDocument, firstChannelIdx: number, secondChannelIdx: number) {\r\n\t\tsuper();\r\n\t\t// Change the order of two channels by swapping.\r\n\t\tlet toSwap = doc.song.channels[firstChannelIdx];\r\n\t\tdoc.song.channels[firstChannelIdx] = doc.song.channels[secondChannelIdx];\r\n\t\tdoc.song.channels[secondChannelIdx] = toSwap;\r\n\r\n\t\t// Update mods for each channel\r\n\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\t\t\t\t\tlet channelOffset: number = (instrument.modStatuses[i] == ModStatus.msForNoise ? doc.song.pitchChannelCount : 0);\r\n\t\t\t\t\tif (instrument.modChannels[i] + channelOffset == firstChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = secondChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (instrument.modChannels[i] + channelOffset == secondChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = firstChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelCount extends Change {\r\n\tconstructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number, newModChannelCount: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount || doc.song.modChannelCount != newModChannelCount) {\r\n\t\t\tconst newChannels: Channel[] = [];\r\n\r\n\t\t\tfunction changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean, isMod: boolean): void {\r\n\t\t\t\tfor (let i: number = 0; i < newCount; i++) {\r\n\t\t\t\t\tconst channel = i + newStart;\r\n\t\t\t\t\tconst oldChannel = i + oldStart;\r\n\t\t\t\t\tif (i < oldCount) {\r\n\t\t\t\t\t\tnewChannels[channel] = doc.song.channels[oldChannel];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewChannels[channel] = new Channel();\r\n\t\t\t\t\t\tnewChannels[channel].octave = octave;\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.instrumentsPerChannel; j++) {\r\n\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoise, isMod);\r\n\t\t\t\t\t\t\tconst presetValue: number = pickRandomPresetValue(isNoise);\r\n\t\t\t\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\tnewChannels[channel].instruments[j] = instrument;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].patterns[j] = new Pattern();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.barCount; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].bars[j] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tchangeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 2, false, false);\r\n\t\t\tchangeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true, false);\r\n\t\t\tchangeGroup(newModChannelCount, doc.song.modChannelCount, newNoiseChannelCount + newPitchChannelCount, doc.song.pitchChannelCount + doc.song.noiseChannelCount, 0, false, true);\r\n\r\n\t\t\tdoc.song.pitchChannelCount = newPitchChannelCount;\r\n\t\t\tdoc.song.noiseChannelCount = newNoiseChannelCount;\r\n\t\t\tdoc.song.modChannelCount = newModChannelCount;\r\n\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tdoc.song.channels[channel] = newChannels[channel];\r\n\t\t\t}\r\n\t\t\tdoc.song.channels.length = doc.song.getChannelCount();\r\n\r\n\t\t\tdoc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount + newModChannelCount - 1);\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid channel. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? doc.song.pitchChannelCount : 0);\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tColorConfig.resetColors();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelBar extends Change {\r\n\tconstructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\r\n\t\tsuper();\r\n\t\tconst oldChannel: number = doc.channel;\r\n\t\tconst oldBar: number = doc.bar;\r\n\t\tdoc.channel = newChannel;\r\n\t\tdoc.bar = newBar;\r\n\t\tif (!silently) {\r\n\t\t\tdoc.barScrollPos = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), doc.barScrollPos));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldChannel != newChannel || oldBar != newBar) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInterval extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.interval;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.interval = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChord extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.chord;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.chord = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibrato extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibrato;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.vibrato = newValue;\r\n\t\t\tinstrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n\t\t\tinstrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\tinstrument.vibratoSpeed = 10; // default\r\n\t\t\tinstrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDepth extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDepth, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDepth = newValue / 25;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoSpeed = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDelay, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDelay = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibratoType;\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoType = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeArpeggioSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tinstrument.arpeggioSpeed = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstArpeggioSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFastTwoNoteArp extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.fastTwoNoteArp;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.fastTwoNoteArp = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTieNoteTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.tieNoteTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.tieNoteTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeClicklessTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.clicklessTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.clicklessTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSpectrum extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\r\n\t\tsuper();\r\n\t\tspectrumWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeHarmonics extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\r\n\t\tsuper();\r\n\t\tharmonicsWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDrumsetEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, drumIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.drumsetEnvelopes[drumIndex];\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.drumsetEnvelopes[drumIndex] = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeInstrumentSlider extends Change {\r\n\tprotected _instrument: Instrument;\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tthis._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t}\r\n\r\n\tpublic commit(): void {\r\n\t\tif (!this.isNoop()) {\r\n\t\t\tthis._instrument.preset = this._instrument.type;\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.pulseWidth = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPulseWidth, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePulseEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.pulseEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.pulseEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterCutoff extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterCutoff = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterCut, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterResonance extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterResonance = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterPeak, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.filterEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.filterEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeAlgorithm extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.algorithm;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.algorithm = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackType;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackType = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].envelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].envelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorFrequency extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].frequency;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].frequency = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.operators[operatorIndex].amplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMSlider1 + operatorIndex, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.feedbackAmplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMFeedback, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeInstrumentsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newInstrumentsPerChannel: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.instrumentsPerChannel != newInstrumentsPerChannel) {\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tconst sampleInstrument: Instrument = doc.song.channels[channel].instruments[doc.song.instrumentsPerChannel - 1];\r\n\t\t\t\tconst sampleInstrumentJson: any = sampleInstrument.toJsonObject();\r\n\t\t\t\tfor (let j: number = doc.song.instrumentsPerChannel; j < newInstrumentsPerChannel; j++) {\r\n\t\t\t\t\tconst newInstrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel));\r\n\t\t\t\t\tif (sampleInstrument.type == InstrumentType.mod) {\r\n\t\t\t\t\t\t// Doesn't really make sense to have two mod instruments with the same settings. Better to zero them out.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t\t} else if (sampleInstrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t// Drumsets are kinda expensive in terms of url length, so don't just copy them willy-nilly.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.spectrum, true, false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewInstrument.fromJsonObject(sampleInstrumentJson, doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.channels[channel].instruments[j] = newInstrument;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.channels[channel].instruments.length = newInstrumentsPerChannel;\r\n\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\tif (doc.song.channels[channel].patterns[j].instrument >= newInstrumentsPerChannel) {\r\n\t\t\t\t\t\tdoc.song.channels[channel].patterns[j].instrument = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.instrumentsPerChannel = newInstrumentsPerChannel;\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid instrument number. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modInstrument >= doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeKey extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.key != newValue) {\r\n\t\t\tdoc.song.key = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeLoop extends Change {\r\n\tconstructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\r\n\t\tsuper();\r\n\t\tthis._doc.song.loopStart = this.newStart;\r\n\t\tthis._doc.song.loopLength = this.newLength;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tif (this.oldStart != this.newStart || this.oldLength != this.newLength) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePitchAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _pitch: number;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._pitch = pitch;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 0, this._pitch);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeOctave extends Change {\r\n\tconstructor(doc: SongDocument, public oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].octave = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeRhythm extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (doc.song.rhythm != newValue) {\r\n\t\t\tdoc.song.rhythm = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePaste extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\r\n\t\tsuper();\r\n\r\n\t\t// Erase the current contents of the selection:\r\n\t\tthis.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd, null, true));\r\n\r\n\t\t// Mods don't follow this sequence, so skipping for now.\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\tif (pattern.notes[i].start < selectionStart) {\r\n\t\t\t\t\tif (pattern.notes[i].end > selectionStart) throw new Error();\r\n\r\n\t\t\t\t\tnoteInsertionIndex = i + 1;\r\n\t\t\t\t} else if (pattern.notes[i].start < selectionEnd) {\r\n\t\t\t\t\tthrow new Error();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnoteInsertionIndex = pattern.notes.length;\r\n\t\t}\r\n\r\n\t\twhile (selectionStart < selectionEnd) {\r\n\t\t\tfor (const noteObject of notes) {\r\n\t\t\t\tconst noteStart: number = noteObject[\"start\"] + selectionStart;\r\n\t\t\t\tconst noteEnd: number = noteObject[\"end\"] + selectionStart;\r\n\t\t\t\tif (noteStart >= selectionEnd) break;\r\n\t\t\t\tconst note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"volume\"], false);\r\n\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\tfor (const pitch of noteObject[\"pitches\"]) {\r\n\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t}\r\n\t\t\t\tnote.pins.length = 0;\r\n\t\t\t\tfor (const pin of noteObject[\"pins\"]) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tpattern.notes.splice(noteInsertionIndex++, 0, note);\r\n\t\t\t\tif (note.end > selectionEnd) {\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tselectionStart += oldPartDuration;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePasteInstrument extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\r\n\t\tsuper();\r\n\t\tinstrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"], instrumentCopy[\"isMod\"], false, false);\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternInstrument extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tif (pattern.instrument != newValue) {\r\n\t\t\tpattern.instrument = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModChannel extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, index: number) {\r\n\t\tsuper();\r\n\t\t// Figure out if this is a pitch or noise mod, or \"song\" or \"none\"\r\n\t\tlet stat: ModStatus = ModStatus.msNone;\r\n\t\tlet channel: number = 0;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (index == 1) { // song\r\n\t\t\tstat = ModStatus.msForSong;\r\n\t\t}\r\n\t\telse if (index == 0) { // none\r\n\t\t\tstat = ModStatus.msNone;\r\n\t\t}\r\n\t\telse if (index < 2 + doc.song.pitchChannelCount) {\r\n\t\t\tstat = ModStatus.msForPitch;\r\n\t\t\tchannel = index - 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstat = ModStatus.msForNoise;\r\n\t\t\tchannel = index - doc.song.pitchChannelCount - 2;\r\n\t\t}\r\n\r\n\t\tif (instrument.modStatuses[mod] != stat || instrument.modChannels[mod] != channel) {\r\n\r\n\t\t\tinstrument.modStatuses[mod] = stat;\r\n\t\t\tinstrument.modChannels[mod] = channel;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModInstrument extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, tgtInstrument: number) {\r\n\t\tsuper();\r\n\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (instrument.modInstruments[mod] != tgtInstrument) {\r\n\t\t\tinstrument.modInstruments[mod] = tgtInstrument;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModSetting extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, text: string) {\r\n\t\tsuper();\r\n\r\n\t\tlet setting: ModSetting = ModSetting.mstNone;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tswitch (text) {\r\n\t\t\tcase \"song volume\":\r\n\t\t\t\tsetting = ModSetting.mstSongVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tempo\":\r\n\t\t\t\tsetting = ModSetting.mstTempo;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reverb\":\r\n\t\t\t\tsetting = ModSetting.mstReverb;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"next bar\":\r\n\t\t\t\tsetting = ModSetting.mstNextBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"volume\":\r\n\t\t\t\tsetting = ModSetting.mstInsVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan\":\r\n\t\t\t\tsetting = ModSetting.mstPan;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter cut\":\r\n\t\t\t\tsetting = ModSetting.mstFilterCut;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter peak\":\r\n\t\t\t\tsetting = ModSetting.mstFilterPeak;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 1\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 2\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 3\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 4\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider4;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm feedback\":\r\n\t\t\t\tsetting = ModSetting.mstFMFeedback;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pulse width\":\r\n\t\t\t\tsetting = ModSetting.mstPulseWidth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\":\r\n\t\t\t\tsetting = ModSetting.mstDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato depth\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDepth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato speed\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato delay\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan delay\":\r\n\t\t\t\tsetting = ModSetting.mstPanDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggio speed\":\r\n\t\t\t\tsetting = ModSetting.mstArpeggioSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reset arpeggio\":\r\n\t\t\t\tsetting = ModSetting.mstResetArpeggio;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"song detune\":\r\n\t\t\t\tsetting = ModSetting.mstSongDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"none\":\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (instrument.modSettings[mod] != setting) {\r\n\r\n\t\t\tinstrument.modSettings[mod] = setting;\r\n\r\n\t\t\t// Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\r\n\t\t\tlet cap: number = doc.song.mstMaxVols.get(setting)!;\r\n\r\n\t\t\tfor (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\r\n\t\t\t\tconst pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\r\n\t\t\t\tif (pattern.instrument == doc.getCurrentInstrument()) {\r\n\t\t\t\t\tfor (let j: number = 0; j < pattern.notes.length; j++) {\r\n\t\t\t\t\t\tconst note: Note = pattern.notes[j];\r\n\t\t\t\t\t\tif (note.pitches[0] == Config.modCount - mod - 1) {\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pins.length; k++) {\r\n\t\t\t\t\t\t\t\tconst pin: NotePin = note.pins[k];\r\n\t\t\t\t\t\t\t\tif (pin.volume > cap)\r\n\t\t\t\t\t\t\t\t\tpin.volume = cap;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.patternsPerChannel != newValue) {\r\n\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\tconst channelBars: number[] = doc.song.channels[i].bars;\r\n\t\t\t\tconst channelPatterns: Pattern[] = doc.song.channels[i].patterns;\r\n\t\t\t\tfor (let j: number = 0; j < channelBars.length; j++) {\r\n\t\t\t\t\tif (channelBars[j] > newValue) channelBars[j] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let j: number = channelPatterns.length; j < newValue; j++) {\r\n\t\t\t\t\tchannelPatterns[j] = new Pattern();\r\n\t\t\t\t}\r\n\t\t\t\tchannelPatterns.length = newValue;\r\n\t\t\t}\r\n\t\t\tdoc.song.patternsPerChannel = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEnsurePatternExists extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _bar: number;\r\n\tprivate _channel: number;\r\n\tprivate _patternIndex: number;\r\n\tprivate _patternOldNotes: Note[] | null = null;\r\n\tprivate _oldPatternCount: number;\r\n\tprivate _newPatternCount: number;\r\n\r\n\tconstructor(doc: SongDocument, channel: number, bar: number) {\r\n\t\tsuper(false);\r\n\t\tconst song: Song = doc.song;\r\n\t\tif (song.channels[channel].bars[bar] != 0) return;\r\n\r\n\t\tthis._doc = doc;\r\n\t\tthis._bar = bar;\r\n\t\tthis._channel = channel;\r\n\t\tthis._oldPatternCount = song.patternsPerChannel;\r\n\t\tthis._newPatternCount = song.patternsPerChannel;\r\n\r\n\t\tlet firstEmptyUnusedIndex: number | null = null;\r\n\t\tlet firstUnusedIndex: number | null = null;\r\n\t\tfor (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\r\n\t\t\tlet used = false;\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tif (song.channels[channel].bars[barIndex] == patternIndex) {\r\n\t\t\t\t\tused = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (used) continue;\r\n\t\t\tif (firstUnusedIndex == null) {\r\n\t\t\t\tfirstUnusedIndex = patternIndex;\r\n\t\t\t}\r\n\t\t\tconst pattern: Pattern = song.channels[channel].patterns[patternIndex - 1];\r\n\t\t\tif (pattern.notes.length == 0) {\r\n\t\t\t\tfirstEmptyUnusedIndex = patternIndex;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstEmptyUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstEmptyUnusedIndex;\r\n\t\t} else if (song.patternsPerChannel < song.barCount) {\r\n\t\t\tthis._newPatternCount = song.patternsPerChannel + 1;\r\n\t\t\tthis._patternIndex = song.patternsPerChannel + 1;\r\n\t\t} else if (firstUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstUnusedIndex;\r\n\t\t\tthis._patternOldNotes = song.channels[channel].patterns[firstUnusedIndex - 1].notes;\r\n\t\t} else {\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\r\n\t\tthis._didSomething();\r\n\t\tthis._doForwards();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tfor (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\r\n\t\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\t\tsong.channels[i].patterns[j] = new Pattern();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._newPatternCount;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tpattern.notes = [];\r\n\t\tsong.channels[this._channel].bars[this._bar] = this._patternIndex;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tif (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\r\n\t\tsong.channels[this._channel].bars[this._bar] = 0;\r\n\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\tsong.channels[i].patterns.length = this._oldPatternCount;\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._oldPatternCount;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangePinTime extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tshiftedTime -= this._oldStart;\r\n\t\tconst originalTime: number = this._oldPins[pinIndex].time;\r\n\t\tconst skipStart: number = Math.min(originalTime, shiftedTime);\r\n\t\tconst skipEnd: number = Math.max(originalTime, shiftedTime);\r\n\t\tlet setPin: boolean = false;\r\n\t\tfor (let i: number = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tif (time < skipStart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t} else if (time > skipEnd) {\r\n\t\t\t\tif (!setPin) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t\t\t\tsetPin = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setPin) {\r\n\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePitchBend extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tbendStart -= this._oldStart;\r\n\t\tbendEnd -= this._oldStart;\r\n\t\tbendTo -= note.pitches[pitchIndex];\r\n\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet setEnd: boolean = false;\r\n\t\tlet prevInterval: number = 0;\r\n\t\tlet prevVolume: number = 3;\r\n\t\tlet persist: boolean = true;\r\n\t\tlet i: number;\r\n\t\tlet direction: number;\r\n\t\tlet stop: number;\r\n\t\tlet push: (item: NotePin) => void;\r\n\t\tif (bendEnd > bendStart) {\r\n\t\t\ti = 0;\r\n\t\t\tdirection = 1;\r\n\t\t\tstop = note.pins.length;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.push(item); };\r\n\t\t} else {\r\n\t\t\ti = note.pins.length - 1;\r\n\t\t\tdirection = -1;\r\n\t\t\tstop = -1;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.unshift(item); };\r\n\t\t}\r\n\t\tfor (; i != stop; i += direction) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tfor (; ;) {\r\n\t\t\t\tif (!setStart) {\r\n\t\t\t\t\tif (time * direction <= bendStart * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendStart * direction) {\r\n\t\t\t\t\t\tpush(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(prevInterval, bendStart, prevVolume));\r\n\t\t\t\t\t\tsetStart = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!setEnd) {\r\n\t\t\t\t\tif (time * direction <= bendEnd * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t\t\t\t\tsetEnd = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (time * direction == bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (oldPin.interval != prevInterval) persist = false;\r\n\t\t\t\t\t\tpush(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setEnd) {\r\n\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternRhythm extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tconst minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\r\n\r\n\t\tconst changeRhythm: (oldTime: number) => number = function (oldTime: number): number {\r\n\t\t\tlet thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\r\n\t\t\tif (thresholds != null) {\r\n\t\t\t\tconst beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\r\n\t\t\t\tconst remainder: number = oldTime - beatStart;\r\n\t\t\t\tlet newTime: number = beatStart;\r\n\t\t\t\tfor (const threshold of thresholds) {\r\n\t\t\t\t\tif (remainder >= threshold) {\r\n\t\t\t\t\t\tnewTime += minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newTime;\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.round(oldTime / minDivision) * minDivision;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t} else {\r\n\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeRhythmNote extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime: number) => number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveNotesSideways extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, beatsToMove: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tlet partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\r\n\t\tif (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tif (partsToMove == 0.0) return;\r\n\r\n\t\tswitch (strategy) {\r\n\t\t\tcase \"wrapAround\": {\r\n\t\t\t\tconst partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\t\t\tconst newNotes: Note[] = [];\r\n\r\n\t\t\t\t\t\tfor (let bar: number = 1; bar >= 0; bar--) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\r\n\t\t\t\t\t\t\tfor (const oldNote of pattern.notes) {\r\n\t\t\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + partsToMove;\r\n\t\t\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + partsToMove;\r\n\t\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpattern.notes = newNotes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase \"overflow\": {\r\n\t\t\t\tlet originalBarCount: number = doc.song.barCount;\r\n\t\t\t\tlet originalLoopStart: number = doc.song.loopStart;\r\n\t\t\t\tlet originalLoopLength: number = doc.song.loopLength;\r\n\r\n\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\r\n\r\n\t\t\t\tif (beatsToMove < 0) {\r\n\t\t\t\t\tlet firstBarIsEmpty: boolean = true;\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tif (channel.bars[0] != 0) firstBarIsEmpty = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (firstBarIsEmpty) {\r\n\t\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\t\tchannel.bars.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdoc.song.barCount--;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toriginalBarCount++;\r\n\t\t\t\t\t\toriginalLoopStart++;\r\n\t\t\t\t\t\tdoc.bar++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile (doc.song.barCount < originalBarCount) {\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.barCount++;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = originalLoopStart;\r\n\t\t\t\tdoc.song.loopLength = originalLoopLength;\r\n\t\t\t} break;\r\n\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeBeatsPerBar extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tif (doc.song.beatsPerBar != newValue) {\r\n\t\t\tswitch (strategy) {\r\n\t\t\t\tcase \"splice\": {\r\n\t\t\t\t\tif (doc.song.beatsPerBar > newValue) {\r\n\t\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\r\n\t\t\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat, null, true));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"stretch\": {\r\n\t\t\t\t\tconst changeRhythm = function (oldTime: number): number {\r\n\t\t\t\t\t\treturn Math.round(oldTime * newValue / doc.song.beatsPerBar);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\t\t\t\tfor (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\r\n\t\t\t\t\t\t\tconst pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex];\r\n\t\t\t\t\t\t\tlet noteIndex: number = 0;\r\n\t\t\t\t\t\t\twhile (noteIndex < pattern.notes.length) {\r\n\t\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\t\t\t\t\t\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\t\t\t\t\t\tnoteIndex++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"overflow\": {\r\n\t\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\r\n\t\t\t\t\tdoc.song.loopStart = 0;\r\n\t\t\t\t\tdoc.song.loopLength = doc.song.barCount;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.beatsPerBar = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeScale extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.scale != newValue) {\r\n\t\t\tdoc.song.scale = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDetectKey extends ChangeGroup {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst song: Song = doc.song;\r\n\t\tconst basePitch: number = Config.keys[song.key].basePitch;\r\n\t\tconst keyWeights: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tconst pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\tconst prevPin: NotePin = note.pins[0];\r\n\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\tconst nextPin: NotePin = note.pins[pinIndex];\r\n\t\t\t\t\t\t\tif (prevPin.interval == nextPin.interval) {\r\n\t\t\t\t\t\t\t\tlet weight: number = nextPin.time - prevPin.time;\r\n\t\t\t\t\t\t\t\tweight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\r\n\t\t\t\t\t\t\t\tweight *= nextPin.volume + prevPin.volume;\r\n\t\t\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\t\t\tconst key = (basePitch + prevPin.interval + pitch) % 12;\r\n\t\t\t\t\t\t\t\t\tkeyWeights[key] += weight;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet bestKey: number = 0;\r\n\t\tlet bestKeyWeight: number = 0;\r\n\t\tfor (let key: number = 0; key < 12; key++) {\r\n\t\t\t// Look for the root of the most prominent major or minor chord.\r\n\t\t\tconst keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\r\n\t\t\tif (bestKeyWeight < keyWeight) {\r\n\t\t\t\tbestKeyWeight = keyWeight;\r\n\t\t\t\tbestKey = key;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (bestKey != song.key) {\r\n\t\t\tconst diff: number = song.key - bestKey;\r\n\t\t\tconst absoluteDiff: number = Math.abs(diff);\r\n\r\n\t\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\t\tfor (const pattern of song.channels[channelIndex].patterns) {\r\n\t\t\t\t\tfor (let i: number = 0; i < absoluteDiff; i++) {\r\n\t\t\t\t\t\tthis.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsong.key = bestKey;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function pickRandomPresetValue(isNoise: boolean): number {\r\n\tconst eligiblePresetValues: number[] = [];\r\n\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tif (category.name == \"Novelty Presets\") continue;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\r\n\t\t\t\teligiblePresetValues.push((categoryIndex << 6) + presetIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn eligiblePresetValues[(Math.random() * eligiblePresetValues.length) | 0];\r\n}\r\n\r\nexport function setDefaultInstruments(song: Song): void {\r\n\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\tfor (const instrument of song.channels[channelIndex].instruments) {\r\n\t\t\tconst isNoise: boolean = song.getChannelIsNoise(channelIndex);\r\n\t\t\tconst isMod: boolean = song.getChannelIsMod(channelIndex);\r\n\t\t\tconst presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\r\n\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, song.rhythm == 0 || song.rhythm == 2, song.rhythm >= 2);\r\n\t\t\tinstrument.preset = presetValue;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSong extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newHash: string) {\r\n\t\tsuper();\r\n\t\tlet pitchChannelCount = doc.song.pitchChannelCount;\r\n\t\tlet noiseChannelCount = doc.song.noiseChannelCount;\r\n\t\tlet modChannelCount = doc.song.modChannelCount;\r\n\t\tdoc.song.fromBase64String(newHash);\r\n\t\tif (pitchChannelCount != doc.song.pitchChannelCount || noiseChannelCount != doc.song.noiseChannelCount || modChannelCount != doc.song.modChannelCount) {\r\n\t\t\tColorConfig.resetColors();\r\n\t\t}\r\n\t\tif (newHash == \"\") {\r\n\t\t\tthis.append(new ChangePatternSelection(doc, 0, 0));\r\n\t\t\tdoc.selection.resetBoxSelection();\r\n\t\t\tsetDefaultInstruments(doc.song);\r\n\t\t} else {\r\n\t\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeValidateTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst channel: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\r\n\t\tconst bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\r\n\t\tconst barScrollPos: number = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), Math.max(0, Math.min(doc.song.barCount - doc.trackVisibleBars, doc.barScrollPos))));\r\n\t\tif (doc.channel != channel || doc.bar != bar || doc.barScrollPos != barScrollPos) {\r\n\t\t\tdoc.channel = channel;\r\n\t\t\tdoc.bar = bar;\r\n\t\t\tdoc.barScrollPos = barScrollPos;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeReplacePatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[], modChannels: Channel[]) {\r\n\t\tsuper();\r\n\r\n\t\tconst song: Song = doc.song;\r\n\r\n\t\tfunction removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet sparsestIndex: number = channels.length - 1;\r\n\t\t\t\tlet mostZeroes: number = 0;\r\n\t\t\t\tfor (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\r\n\t\t\t\t\tlet zeroes: number = 0;\r\n\t\t\t\t\tfor (const bar of channels[channelIndex].bars) {\r\n\t\t\t\t\t\tif (bar == 0) zeroes++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (zeroes >= mostZeroes) {\r\n\t\t\t\t\t\tsparsestIndex = channelIndex;\r\n\t\t\t\t\t\tmostZeroes = zeroes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchannels.splice(sparsestIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tremoveExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tremoveExtraSparseChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\twhile (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\r\n\t\twhile (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\r\n\t\twhile (modChannels.length < Config.modChannelCountMin) modChannels.push(new Channel());\r\n\r\n\t\t// Set minimum counts.\r\n\t\tsong.barCount = 1;\r\n\t\tsong.instrumentsPerChannel = 1;\r\n\t\tsong.patternsPerChannel = 8;\r\n\t\tconst combinedChannels: Channel[] = pitchChannels.concat(noiseChannels.concat(modChannels));\r\n\t\tfor (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = combinedChannels[channelIndex];\r\n\t\t\tsong.barCount = Math.max(song.barCount, channel.bars.length);\r\n\t\t\tsong.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\r\n\t\t\tsong.instrumentsPerChannel = Math.max(song.instrumentsPerChannel, channel.instruments.length);\r\n\t\t\tsong.channels[channelIndex] = channel;\r\n\t\t}\r\n\t\tsong.channels.length = combinedChannels.length;\r\n\t\tsong.pitchChannelCount = pitchChannels.length;\r\n\t\tsong.noiseChannelCount = noiseChannels.length;\r\n\t\tsong.modChannelCount = modChannels.length;\r\n\r\n\t\tsong.barCount = Math.min(Config.barCountMax, song.barCount);\r\n\t\tsong.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\r\n\t\tsong.instrumentsPerChannel = Math.min(Config.instrumentsPerChannelMax, song.instrumentsPerChannel);\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = song.channels[channelIndex];\r\n\t\t\tfor (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\r\n\t\t\t\tif (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\r\n\t\t\t\t\tchannel.bars[barIndex] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\tif (pattern.instrument >= song.instrumentsPerChannel || pattern.instrument < 0) {\r\n\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (channel.bars.length < song.barCount) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t\twhile (channel.patterns.length < song.patternsPerChannel) {\r\n\t\t\t\tchannel.patterns.push(new Pattern());\r\n\t\t\t}\r\n\t\t\twhile (channel.instruments.length < song.instrumentsPerChannel) {\r\n\t\t\t\tconst instrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channelIndex), doc.song.getChannelIsMod(channelIndex));\r\n\t\t\t\tif (song.getChannelIsNoise(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.noise, true, false);\r\n\t\t\t\t} else if (song.getChannelIsMod(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.chip, false, false);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tchannel.instruments.length = song.instrumentsPerChannel;\r\n\t\t\tchannel.bars.length = song.barCount;\r\n\t\t\tchannel.patterns.length = song.patternsPerChannel;\r\n\t\t}\r\n\r\n\t\tsong.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\r\n\t\tsong.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\r\n\r\n\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t\tColorConfig.resetColors();\r\n\t}\r\n}\r\n\r\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\r\n\tif (a.length != b.length) return false;\r\n\r\n\tfor (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\r\n\t\tconst oldNote: Note = a[noteIndex];\r\n\t\tconst newNote: Note = b[noteIndex];\r\n\t\tif (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\r\n\t\t\tif (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\t\tif (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].volume != oldNote.pins[pinIndex].volume) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function removeDuplicatePatterns(channels: Channel[]): void {\r\n\tfor (const channel of channels) {\r\n\t\tconst newPatterns: Pattern[] = [];\r\n\t\tfor (let bar: number = 0; bar < channel.bars.length; bar++) {\r\n\t\t\tif (channel.bars[bar] == 0) continue;\r\n\r\n\t\t\tconst oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\r\n\r\n\t\t\tlet foundMatchingPattern: boolean = false;\r\n\t\t\tfor (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\r\n\t\t\t\tconst newPattern: Pattern = newPatterns[newPatternIndex];\r\n\t\t\t\tif (newPattern.instrument != oldPattern.instrument || newPattern.notes.length != oldPattern.notes.length) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\r\n\t\t\t\t\tfoundMatchingPattern = true;\r\n\t\t\t\t\tchannel.bars[bar] = newPatternIndex + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!foundMatchingPattern) {\r\n\t\t\t\tnewPatterns.push(oldPattern);\r\n\t\t\t\tchannel.bars[bar] = newPatterns.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\r\n\t\t\tchannel.patterns[patternIndex] = newPatterns[patternIndex];\r\n\t\t}\r\n\t\tchannel.patterns.length = newPatterns.length;\r\n\t}\r\n}\r\n\r\nexport class ChangeTempo extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\r\n\t\tdoc.synth.unsetMod(ModSetting.mstTempo);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeReverb extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.reverb = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstReverb);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _pattern: Pattern;\r\n\tprivate _note: Note;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._pattern = pattern;\r\n\t\tthis._note = note;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 0, this._note);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteLength extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\ttruncStart -= this._oldStart;\r\n\t\ttruncEnd -= this._oldStart;\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet prevVolume: number = this._oldPins[0].volume;\r\n\t\tlet prevInterval: number = this._oldPins[0].interval;\r\n\t\tlet pushLastPin: boolean = true;\r\n\t\tlet i: number;\r\n\t\tfor (i = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = this._oldPins[i];\r\n\t\t\tif (oldPin.time < truncStart) {\r\n\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t} else if (oldPin.time <= truncEnd) {\r\n\t\t\t\tif (oldPin.time > truncStart && !setStart) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(prevInterval, truncStart, prevVolume));\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.volume));\r\n\t\t\t\tsetStart = true;\r\n\t\t\t\tif (oldPin.time == truncEnd) {\r\n\t\t\t\t\tpushLastPin = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].volume));\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteTruncate extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote: Note | null = null, force: boolean = false) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note == skipNote && skipNote != null) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end <= start) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start >= end) {\r\n\t\t\t\t// Allow out-of-order notes for mods so that all get checked.\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t} else if (note.start < start && note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0])) {\r\n\t\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, end, copy.end));\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start < start) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, end, note.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t\telse\r\n\t\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\r\n\t\t\t\t// i++; // The second note might be split again at the end of the selection. Check it again.\r\n\t\t\t} else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeTransposeNote extends UndoableChange {\r\n\tprotected _doc: SongDocument;\r\n\tprotected _note: Note;\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(doc: SongDocument, channel: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = note.pitches;\r\n\t\tthis._newPitches = [];\r\n\r\n\t\t// I'm disabling pitch transposing for noise channels to avoid\r\n\t\t// accidentally messing up noise channels when pitch shifting all\r\n\t\t// channels at once.\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(channel);\r\n\t\tif (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\r\n\r\n\t\t// Can't transpose mods\r\n\t\tif (doc.song.getChannelIsMod(doc.channel)) return;\r\n\r\n\t\t// const maxPitch: number = (isNoise ? Config.drumCount - 1 : doc.song.maxPitch);\r\n\t\tconst maxPitch: number = (isNoise ? Config.drumCount - 1 : Config.maxPitch);\r\n\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tlet pitch: number = this._oldPitches[i];\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tpitch = Math.min(maxPitch, pitch + Config.pitchesPerOctave);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpitch = Math.max(0, pitch - Config.pitchesPerOctave);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let j: number = pitch + 1; j <= maxPitch; j++) {\r\n\t\t\t\t\t\t// if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) { // TODO: Scales\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || true) { // yes, I made the condition true\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let j: number = pitch - 1; j >= 0; j--) {\r\n\t\t\t\t\t\t// if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || true) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet foundMatch: boolean = false;\r\n\t\t\tfor (let j: number = 0; j < this._newPitches.length; j++) {\r\n\t\t\t\tif (this._newPitches[j] == pitch) {\r\n\t\t\t\t\tfoundMatch = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!foundMatch) this._newPitches.push(pitch);\r\n\t\t}\r\n\r\n\t\tlet min: number = 0;\r\n\t\tlet max: number = maxPitch;\r\n\r\n\t\tfor (let i: number = 1; i < this._newPitches.length; i++) {\r\n\t\t\tconst diff: number = this._newPitches[0] - this._newPitches[i];\r\n\t\t\tif (min < diff) min = diff;\r\n\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t}\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tlet interval: number = oldPin.interval + this._oldPitches[0];\r\n\r\n\t\t\tif (interval < min) interval = min;\r\n\t\t\tif (interval > max) interval = max;\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tinterval = Math.min(max, interval + Config.pitchesPerOctave);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinterval = Math.max(min, interval - Config.pitchesPerOctave);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let i: number = interval + 1; i <= max; i++) {\r\n\t\t\t\t\t\t// if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) { \r\n\t\t\t\t\t\tif (isNoise || ignoreScale || true) { // TODO: Scales\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i: number = interval - 1; i >= min; i--) {\r\n\t\t\t\t\t\t// if (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) { \r\n\t\t\t\t\t\tif (isNoise || ignoreScale || true) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinterval -= this._newPitches[0];\r\n\t\t\tthis._newPins.push(makeNotePin(interval, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tif (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeTranspose extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, upward, ignoreScale, octave));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\r\n\t\tsuper();\r\n\t\tdoc.selection.boxSelectionX0 = newX0;\r\n\t\tdoc.selection.boxSelectionX1 = newX1;\r\n\t\tdoc.selection.boxSelectionY0 = newY0;\r\n\t\tdoc.selection.boxSelectionY1 = newY1;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternSelection extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _oldStart: number;\r\n\tprivate _oldEnd: number;\r\n\tprivate _oldActive: boolean;\r\n\tprivate _newStart: number;\r\n\tprivate _newEnd: number;\r\n\tprivate _newActive: boolean;\r\n\r\n\tconstructor(doc: SongDocument, newStart: number, newEnd: number) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._oldStart = doc.selection.patternSelectionStart;\r\n\t\tthis._oldEnd = doc.selection.patternSelectionEnd;\r\n\t\tthis._oldActive = doc.selection.patternSelectionActive;\r\n\t\tthis._newStart = newStart;\r\n\t\tthis._newEnd = newEnd;\r\n\t\tthis._newActive = newStart < newEnd;\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._newStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._newEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._newActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._oldStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._oldEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._oldActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeDragSelectedNotes extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, parts: number, transpose: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (parts == 0 && transpose == 0) return;\r\n\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\r\n\t\tconst oldStart: number = doc.selection.patternSelectionStart;\r\n\t\tconst oldEnd: number = doc.selection.patternSelectionEnd;\r\n\t\tconst newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\r\n\t\tconst newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\r\n\t\tif (newStart == newEnd) {\r\n\t\t\t// Just erase the current contents of the selection:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd, null, true));\r\n\t\t} else if (parts < 0) {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd), null, true));\r\n\t\t\tif (oldStart < -parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, -parts, null, true));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd, null, true));\r\n\t\t\tif (oldEnd > doc.song.beatsPerBar * Config.partsPerBeat - parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, doc.song.beatsPerBar * Config.partsPerBeat - parts, oldEnd, null, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.append(new ChangePatternSelection(doc, newStart, newEnd));\r\n\t\tconst draggedNotes = [];\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.end <= oldStart || note.start >= oldEnd) {\r\n\t\t\t\ti++;\r\n\t\t\t\tif (note.end <= newStart) noteInsertionIndex = i;\r\n\t\t\t} else {\r\n\t\t\t\tdraggedNotes.push(note.clone());\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const note of draggedNotes) {\r\n\t\t\tnote.start += parts;\r\n\t\t\tnote.end += parts;\r\n\r\n\t\t\tfor (let i: number = 0; i < Math.abs(transpose); i++) {\r\n\t\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, transpose > 0));\r\n\t\t\t}\r\n\r\n\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\r\n\t\tsuper();\r\n\t\tfor (let channel: number = channelStart; channel < channelStart + channelHeight; channel++) {\r\n\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\r\n\t\t\tfor (let bar: number = barStart; bar < barStart + barWidth; bar++) {\r\n\t\t\t\tconst currentPatternIndex: number = doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tif (reusablePatterns[String(currentPatternIndex)] == undefined) {\r\n\t\t\t\t\tlet isUsedElsewhere = false;\r\n\t\t\t\t\tfor (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\r\n\t\t\t\t\t\tif (bar2 < barStart || bar2 >= barStart + barWidth) {\r\n\t\t\t\t\t\t\tif (doc.song.channels[channel].bars[bar2] == currentPatternIndex) {\r\n\t\t\t\t\t\t\t\tisUsedElsewhere = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isUsedElsewhere) {\r\n\t\t\t\t\t\t// Need to duplicate the pattern.\r\n\t\t\t\t\t\tconst copiedPattern: Pattern = doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tthis.append(new ChangePatternNumbers(doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tthis.append(new ChangeEnsurePatternExists(doc, channel, bar));\r\n\t\t\t\t\t\tconst newPattern: Pattern | null = doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\tthis.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\r\n\t\t\t\t\t\tthis.append(new ChangePatternInstrument(doc, copiedPattern.instrument, newPattern));\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternScale extends Change {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tnew ChangeSplitNotesAtSelection(doc, pattern);\r\n\t\t}\r\n\t\tconst maxPitch: number = Config.maxPitch;\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst newPitches: number[] = [];\r\n\t\t\tconst newPins: NotePin[] = [];\r\n\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\tconst transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\r\n\t\t\t\tif (newPitches.indexOf(transformedPitch) == -1) {\r\n\t\t\t\t\tnewPitches.push(transformedPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet min: number = 0;\r\n\t\t\tlet max: number = maxPitch;\r\n\r\n\t\t\tfor (let i: number = 1; i < newPitches.length; i++) {\r\n\t\t\t\tconst diff: number = newPitches[0] - newPitches[i];\r\n\t\t\t\tif (min < diff) min = diff;\r\n\t\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t\t}\r\n\r\n\t\t\tfor (const oldPin of note.pins) {\r\n\t\t\t\tlet interval: number = oldPin.interval + note.pitches[0];\r\n\t\t\t\tif (interval < min) interval = min;\r\n\t\t\t\tif (interval > max) interval = max;\r\n\t\t\t\tconst transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\r\n\t\t\t\tnewPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.volume));\r\n\t\t\t}\r\n\r\n\t\t\tif (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\t\tfor (let i: number = 1; i < newPins.length - 1;) {\r\n\t\t\t\tif (newPins[i - 1].interval == newPins[i].interval &&\r\n\t\t\t\t\tnewPins[i].interval == newPins[i + 1].interval &&\r\n\t\t\t\t\tnewPins[i - 1].volume == newPins[i].volume &&\r\n\t\t\t\t\tnewPins[i].volume == newPins[i + 1].volume) {\r\n\t\t\t\t\tnewPins.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnote.pitches = newPitches;\r\n\t\t\tnote.pins = newPins;\r\n\t\t}\r\n\t\tthis._didSomething();\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolume extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative.\r\n\t\t//doc.synth.unsetMod(ModSetting.mstInsVolume, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSongTitle extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 30) {\r\n\t\t\tnewValue = newValue.substring(0, 30);\r\n\t\t}\r\n\r\n\t\tdoc.song.title = newValue;\r\n\t\tdocument.title = newValue + \" - \" + EditorConfig.versionDisplayName;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelName extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tnewValue = newValue.substring(0, 15);\r\n\t\t}\r\n\r\n\t\tdoc.song.channels[doc.muteEditorChannel].name = newValue;\r\n\t\tdoc.recalcChannelNames = true;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePan extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPan, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePanDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].panDelay = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDetune extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].detune = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstDetune, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolumeBend extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _oldPins: NotePin[];\r\n\tprivate _newPins: NotePin[];\r\n\tconstructor(doc: SongDocument, note: Note, bendPart: number, bendVolume: number, bendInterval: number, uniformVolume: boolean) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\r\n\t\tlet inserted: boolean = false;\r\n\r\n\t\tfor (const pin of note.pins) {\r\n\t\t\tif (pin.time < bendPart) {\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t} else if (pin.time == bendPart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\tinserted = true;\r\n\t\t\t} else {\r\n\t\t\t\tif (!inserted) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\t\tinserted = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeChipWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipWave != newValue) {\r\n\t\t\tinstrument.chipWave = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeNoiseWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipNoise != newValue) {\r\n\t\t\tinstrument.chipNoise = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeBeatsPerBar, ChangeBarCount, ChangeEdo } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class SongSettingsPrompt implements Prompt {\r\n\tprivate readonly _edoStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"splice\" }, \"Splice beats at end of bars.\"),\r\n\t\toption({ value: \"stretch\" }, \"Stretch notes to fit in bars.\"),\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t);\r\n\tprivate readonly _barsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _positionSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"end\" }, \"Apply change at end of song.\"),\r\n\t\toption({ value: \"beginning\" }, \"Apply change at beginning of song.\"),\r\n\t);\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Song Settings\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Pitch Divisions per Octave:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: #888888;\" }, \"(Equal Temperament)\"),\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: #aa3000;\" }, \"Warning: This skews pitches and can delete existing notes!\"),\r\n\t\t\t\tbr(),\r\n\t\t\t\t),\r\n\t\t\tthis._edoStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"display: inline-block; text-align: right;\" },\r\n\t\t\t\t\"Bars per song:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Multiples of 4 are recommended)\"),\r\n\r\n\t\t\t),\r\n\t\t\tthis._barsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._positionSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats per bar:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: #888888;\" }, \"(Multiples of 3 or 4 are recommended)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\r\n\t\tthis._edoStepper.value = this._doc.song.edo + \"\";\r\n\t\tthis._edoStepper.min = Config.edoMin + \"\";\r\n\t\tthis._edoStepper.max = Config.edoMax + \"\";\r\n\r\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\r\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\r\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\r\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\r\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\r\n\r\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\r\n\t\tif (lastPosition != null) {\r\n\t\t\tthis._positionSelect.value = lastPosition;\r\n\t\t}\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._edoStepper.select();\r\n\t\tsetTimeout(() => this._edoStepper.focus());\r\n\r\n\t\tthis._barsStepper.select();\r\n\t\tsetTimeout(() => this._barsStepper.focus());\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\r\n\t\tthis._edoStepper.addEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._edoStepper.addEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\r\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._barsStepper.addEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\r\n\t\tthis._beatsStepper.addEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._edoStepper.removeEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._edoStepper.removeEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongSettingsPrompt._validateKey);\r\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongSettingsPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(SongSettingsPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\r\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangeEdo(this._doc, SongSettingsPrompt._validate(this._edoStepper)));\r\n\t\tgroup.append(new ChangeBarCount(this._doc, SongSettingsPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\r\n\t\tgroup.append(new ChangeBeatsPerBar(this._doc, SongSettingsPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangePatternsPerChannel, ChangeInstrumentsPerChannel, ChangeChannelCount } from \"./changes\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class ChannelSettingsPrompt implements Prompt {\r\n\tprivate readonly _patternsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _instrumentsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _drumChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _modChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Channel Settings\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Pitch channels:\",\r\n\t\t\tthis._pitchChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Drum channels:\",\r\n\t\t\tthis._drumChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Mod channels:\",\r\n\t\t\tthis._modChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Patterns per channel:\",\r\n\t\t\tthis._patternsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Instruments per channel:\",\r\n\t\t\tthis._instrumentsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\r\n\t\tthis._patternsStepper.min = \"1\";\r\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tthis._instrumentsStepper.value = this._doc.song.instrumentsPerChannel + \"\";\r\n\t\tthis._instrumentsStepper.min = Config.instrumentsPerChannelMin + \"\";\r\n\t\tthis._instrumentsStepper.max = Config.instrumentsPerChannelMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\r\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\r\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\r\n\r\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\r\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\r\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\r\n\r\n\t\tthis._modChannelStepper.value = this._doc.song.modChannelCount + \"\";\r\n\t\tthis._modChannelStepper.min = Config.modChannelCountMin + \"\";\r\n\t\tthis._modChannelStepper.max = Config.modChannelCountMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.select();\r\n\t\tsetTimeout(() => this._pitchChannelStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\r\n\t\tgroup.append(new ChangeInstrumentsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._instrumentsStepper)));\r\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper), ChannelSettingsPrompt._validate(this._modChannelStepper)));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeCustomWave } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2 } = HTML;\r\n\r\nexport class CustomChipPromptCanvas {\r\n\tprivate readonly _doc: SongDocument;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _lastIndex: number = 0;\r\n\tprivate _lastAmp: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tpublic chipData: Float64Array = new Float64Array(64);\r\n\tpublic startingChipData: Float64Array = new Float64Array(64);\r\n\tprivate _undoHistoryState: number = 0;\r\n\tprivate _changeQueue: Float64Array[] = [];\r\n\tprivate readonly _editorWidth: number = 768; // 64*12\r\n\tprivate readonly _editorHeight: number = 294; // 49*6\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _blocks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._blocks,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 294px; width: 768px; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tconstructor(doc: SongDocument) {\r\n\r\n\t\tthis._doc = doc;\r\n\r\n\t\tfor (let i: number = 0; i <= 4; i += 2) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 4) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 8; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 8) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\t// Horiz. ticks\r\n\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: (this._editorHeight / 2) - 1, width: this._editorWidth, height: 2 }));\r\n\t\tfor (let i: number = 0; i < 3; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: this._editorHeight - 1 - i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t}\r\n\r\n\r\n\t\tlet col: string = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let i: number = 0; i <= 64; i++) {\r\n\t\t\tlet val: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[i];\r\n\t\t\tthis.chipData[i] = val;\r\n\t\t\tthis.startingChipData[i] = val;\r\n\t\t\tthis._blocks.appendChild(SVG.rect({ fill: col, x: (i * this._editorWidth / 64), y: (val + 24) * (this._editorHeight / 49), width: this._editorWidth / 64, height: this._editorHeight / 49 }));\r\n\t\t}\r\n\r\n\t\t// Record initial state of the chip data queue\r\n\t\tthis._storeChange();\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\tthis._svg.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t}\r\n\r\n\tprivate _storeChange = (): void => {\r\n\t\t// Check if change is unique compared to the current history state\r\n\t\tvar sameCheck = true;\r\n\t\tif (this._changeQueue.length > 0) {\r\n\t\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\t\tif (this._changeQueue[this._undoHistoryState][i] != this.chipData[i]) {\r\n\t\t\t\t\tsameCheck = false; i = 64;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (sameCheck == false || this._changeQueue.length == 0) {\r\n\r\n\t\t\t// Create new branch in history, removing all after this in time\r\n\t\t\tthis._changeQueue.splice(0, this._undoHistoryState);\r\n\r\n\t\t\tthis._undoHistoryState = 0;\r\n\r\n\t\t\tthis._changeQueue.unshift(this.chipData.slice());\r\n\r\n\t\t\t// 32 undo max\r\n\t\t\tif (this._changeQueue.length > 32) {\r\n\t\t\t\tthis._changeQueue.pop();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic undo = (): void => {\r\n\t\t// Go backward, if there is a change to go back to\r\n\t\tif (this._undoHistoryState < this._changeQueue.length - 1) {\r\n\t\t\tthis._undoHistoryState++;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic redo = (): void => {\r\n\t\t// Go forward, if there is a change to go to\r\n\t\tif (this._undoHistoryState > 0) {\r\n\t\t\tthis._undoHistoryState--;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst index: number = Math.min(63, Math.max(0, Math.floor(this._mouseX * 64 / this._editorWidth)));\r\n\t\t\tconst amp: number = Math.min(48, Math.max(0, Math.floor(this._mouseY * 49 / this._editorHeight)));\r\n\r\n\t\t\t// Paint between mouse drag indices unless a click just happened.\r\n\t\t\tif (this._lastIndex != -1 && this._lastIndex != index) {\r\n\t\t\t\tvar lowest = index;\r\n\t\t\t\tvar highest = this._lastIndex;\r\n\t\t\t\tvar startingAmp = amp;\r\n\t\t\t\tvar endingAmp = this._lastAmp;\r\n\t\t\t\tif (this._lastIndex < index) {\r\n\t\t\t\t\tlowest = this._lastIndex;\r\n\t\t\t\t\thighest = index;\r\n\t\t\t\t\tstartingAmp = this._lastAmp;\r\n\t\t\t\t\tendingAmp = amp;\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = lowest; i <= highest; i++) {\r\n\t\t\t\t\tconst medAmp: number = Math.round(startingAmp + (endingAmp - startingAmp) * ((i - lowest) / (highest - lowest)));\r\n\t\t\t\t\tthis.chipData[i] = medAmp - 24;\r\n\t\t\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + (medAmp * (this._editorHeight / 49)));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.chipData[index] = amp - 24;\r\n\t\t\t\tthis._blocks.children[index].setAttribute(\"y\", \"\" + (amp * (this._editorHeight / 49)));\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Make a change to the data but don't record it, since this prompt uses its own undo/redo queue\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\r\n\t\t\tthis._lastIndex = index;\r\n\t\t\tthis._lastAmp = amp;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\t// Add current data into queue, if it is unique from last data\r\n\t\tthis._storeChange();\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + ((this.chipData[i] + 24) * (this._editorHeight / 49)));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class CustomChipPrompt implements Prompt {\r\n\r\n\tpublic customChipCanvas: CustomChipPromptCanvas = new CustomChipPromptCanvas(this._doc);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\th2(\"Edit Custom Chip Instrument\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.customChipCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\r\n\t\tthis.customChipCanvas.render();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.customChipCanvas.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.customChipCanvas.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\t// Restore custom chip to starting values\r\n\t\tnew ChangeCustomWave(this._doc, this.customChipCanvas.startingChipData);\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, this.customChipCanvas.chipData), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\r\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\r\n\tlet nextOffset = 0;\r\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\r\n\tconst wordSizes = [8, 4, 2, 1];\r\n\tfor (const wordSize of wordSizes) {\r\n\t\tif (leftBytes >= wordSize) {\r\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\r\n\t\t\tnextOffset = done.nextOffset;\r\n\t\t\tleftBytes = done.leftBytes;\r\n\t\t}\r\n\t}\r\n\treturn dest;\r\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\r\n\t\tlet ViewClass: any = Uint8Array;\r\n\t\tswitch (wordSize) {\r\n\t\t\tcase 8:\r\n\t\t\t\tViewClass = Float64Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tViewClass = Float32Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tViewClass = Uint16Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\r\n\t\t\tview_dest[i] = view_source[i];\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tnextOffset: view_source.byteOffset + view_source.byteLength,\r\n\t\t\tleftBytes: leftBytes - view_dest.length * wordSize,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferWriter {\r\n\tprivate _writeIndex: number = 0;\r\n\tprivate _fileSize: number = 0;\r\n\tprivate _arrayBuffer: ArrayBuffer;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(initialCapacity: number) {\r\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\r\n\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t}\r\n\r\n\tprivate _addBytes(numBytes: number): void {\r\n\t\tthis._fileSize += numBytes;\r\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\r\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\r\n\t\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getWriteIndex(): number {\r\n\t\treturn this._writeIndex;\r\n\t}\r\n\r\n\tpublic rewriteUint32(index: number, value: number): void {\r\n\t\tthis._data.setUint32(index, value >>> 0, false);\r\n\t}\r\n\r\n\tpublic writeUint32(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(4);\r\n\t\tthis._data.setUint32(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint24(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(3);\r\n\t\tthis._data.setUint8(this._writeIndex, (value >> 16) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 1, (value >> 8) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 2, (value) & 0xff);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint16(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(2);\r\n\t\tthis._data.setUint16(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint8(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeInt8(value: number): void {\r\n\t\tvalue = value | 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setInt8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidi7Bits(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidiVariableLength(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\r\n\t\tlet startWriting: boolean = false;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst shift: number = 21 - i * 7;\r\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\r\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \r\n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeMidiAscii(string: string): void {\r\n\t\tthis.writeMidiVariableLength(string.length);\r\n\t\tfor (let i: number = 0; i < string.length; i++) {\r\n\t\t\tconst charCode: number = string.charCodeAt(i);\r\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\r\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\r\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport const defaultMidiExpression: number = 0x7F;\r\nexport const defaultMidiPitchBend: number = 0x2000;\r\n\r\nexport const enum MidiChunkType {\r\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\r\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\r\n}\r\n\r\nexport const enum MidiFileFormat {\r\n\tsingleTrack = 0x0000,\r\n\tsimultaneousTracks = 0x0001,\r\n\tindependentTracks = 0x0002,\r\n}\r\n\r\n// Lower 4 bits indicate channel, except for meta and sysex events.\r\nexport const enum MidiEventType {\r\n\t//channelMode = 0x70,\r\n\tnoteOff = 0x80,\r\n\tnoteOn = 0x90,\r\n\tkeyPressure = 0xA0,\r\n\tcontrolChange = 0xB0,\r\n\tprogramChange = 0xC0,\r\n\tchannelPressure = 0xD0,\r\n\tpitchBend = 0xE0,\r\n\tmetaAndSysex = 0xF0,\r\n\r\n\t// These events are identified by all 8 bits.\r\n\tmeta = 0xFF,\r\n\t// sysexStart = 0xF0,\r\n\t// sysexEscape = 0xF7,\r\n}\r\n\r\nexport const enum MidiControlEventMessage {\r\n\r\n\tsetParameterMSB = 0x06,\r\n\tvolumeMSB = 0x07,\r\n\tpanMSB = 0x0A,\r\n\texpressionMSB = 0x0B,\r\n\r\n\tsetParameterLSB = 0x26,\r\n\t//volumeLSB = 0x27,\r\n\t//expressionLSB = 0x2B,\r\n\r\n\t//nonRegisteredParameterNumberLSB = 0x62,\r\n\t//nonRegisteredParameterNumberMSB = 0x63,\r\n\tregisteredParameterNumberLSB = 0x64,\r\n\tregisteredParameterNumberMSB = 0x65,\r\n\r\n\t// Channel mode messages:\r\n\t/*\r\n\tallSoundOff = 0x78,\r\n\tresetControllers = 0x79,\r\n\tlocalControl = 0x7A,\r\n\tallNotesOff = 0x7B,\r\n\tomniModeOff = 0x7C,\r\n\tomniModeOn = 0x7D,\r\n\tmonoMode = 0x7E,\r\n\tpolyphonicMode = 0x7F,\r\n\t*/\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberMSB {\r\n\tpitchBendRange = 0x00, // semitones\r\n\tfineTuning = 0x00,\r\n\tcoarseTuning = 0x00,\r\n\ttuningProgramSelect = 0x00,\r\n\ttuningBankSelect = 0x00,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberLSB {\r\n\tpitchBendRange = 0x00, // cents\r\n\tfineTuning = 0x01,\r\n\tcoarseTuning = 0x02,\r\n\ttuningProgramSelect = 0x03,\r\n\ttuningBankSelect = 0x04,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiMetaEventMessage {\r\n\tsequenceNumber = 0x00,\r\n\ttext = 0x01,\r\n\tcopyrightNotice = 0x02,\r\n\ttrackName = 0x03,\r\n\tinstrumentName = 0x04,\r\n\tlyricText = 0x05,\r\n\tmarker = 0x06,\r\n\tcuePoint = 0x07,\r\n\tchannelPrefix = 0x20,\r\n\tendOfTrack = 0x2F,\r\n\ttempo = 0x51,\r\n\tsmpteOffset = 0x54,\r\n\ttimeSignature = 0x58,\r\n\tkeySignature = 0x59,\r\n\tsequencerSpecificEvent = 0x7F,\r\n}\r\n\r\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\r\nexport interface AnalogousDrum {\r\n\tfrequency: number;\r\n\tduration: number;\r\n\tvolume: number;\r\n}\r\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\r\n\t35: { frequency: 0, duration: 2, volume: 3 }, // Acoustic Bass Drum\r\n\t36: { frequency: 0, duration: 2, volume: 3 }, // Bass Drum 1\r\n\t37: { frequency: 5, duration: 1, volume: 3 }, // Side Stick\r\n\t38: { frequency: 4, duration: 2, volume: 3 }, // Acoustic Snare\r\n\t39: { frequency: 5, duration: 2, volume: 3 }, // Hand Clap\r\n\t40: { frequency: 4, duration: 2, volume: 3 }, // Electric Snare\r\n\t41: { frequency: 1, duration: 2, volume: 3 }, // Low Floor Tom\r\n\t42: { frequency: 8, duration: 1, volume: 3 }, // Closed Hi Hat\r\n\t43: { frequency: 1, duration: 2, volume: 3 }, // High Floor Tom\r\n\t44: { frequency: 8, duration: 1, volume: 2 }, // Pedal Hi-Hat\r\n\t45: { frequency: 2, duration: 2, volume: 3 }, // Low Tom\r\n\t46: { frequency: 8, duration: 4, volume: 3 }, // Open Hi-Hat\r\n\t47: { frequency: 2, duration: 2, volume: 3 }, // Low-Mid Tom\r\n\t48: { frequency: 3, duration: 2, volume: 3 }, // Hi-Mid Tom\r\n\t49: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 1\r\n\t50: { frequency: 3, duration: 2, volume: 3 }, // High Tom\r\n\t51: { frequency: 6, duration: 4, volume: 2 }, // Ride Cymbal 1\r\n\t52: { frequency: 7, duration: 4, volume: 3 }, // Chinese Cymbal\r\n\t53: { frequency: 6, duration: 2, volume: 3 }, // Ride Bell\r\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\r\n\t55: { frequency: 9, duration: 4, volume: 3 }, // Splash Cymbal\r\n\t56: { frequency: 7, duration: 1, volume: 2 }, // Cowbell\r\n\t57: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 2\r\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\r\n\t59: { frequency: 6, duration: 4, volume: 3 }, // Ride Cymbal 2\r\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\r\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\r\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\r\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\r\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\r\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\r\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\r\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\r\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\r\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\r\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\r\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\r\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\r\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\r\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\r\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\r\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\r\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\r\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\r\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\r\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\r\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\r\n};\r\n\r\nexport function midiVolumeToVolumeMult(volume: number): number {\r\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\r\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\r\n}\r\nexport function volumeMultToMidiVolume(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\r\n}\r\nexport function midiExpressionToVolumeMult(expression: number): number {\r\n\treturn Math.pow(expression / 127, 4.0);\r\n}\r\nexport function volumeMultToMidiExpression(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult, 0.25) * 127;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, EnvelopeType, Config, getArpeggioPitchIndex } from \"../synth/SynthConfig\";\r\nimport { Instrument, Pattern, Note, Song, Synth } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ArrayBufferWriter } from \"./ArrayBufferWriter\";\r\nimport { MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression } from \"./Midi\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nfunction lerp(low: number, high: number, t: number): number {\r\n\treturn low + t * (high - low);\r\n}\r\n\r\nfunction save(blob: Blob, name: string): void {\r\n\tif (navigator.msSaveOrOpenBlob) {\r\n\t\tnavigator.msSaveOrOpenBlob(blob, name);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst anchor: HTMLAnchorElement = document.createElement(\"a\");\r\n\tif (anchor.download != undefined) {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tanchor.href = url;\r\n\t\tanchor.download = name;\r\n\t\t// Chrome bug regression: We need to delay dispatching the click\r\n\t\t// event. Seems to be related to going back in the browser history.\r\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=825100\r\n\t\tsetTimeout(function () { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\r\n\t} else {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tif (!window.open(url, \"_blank\")) window.location.href = url;\r\n\t}\r\n}\r\n\r\nexport class ExportPrompt implements Prompt {\r\n\tprivate synth: Synth;\r\n\tprivate thenExportTo: string;\r\n\tprivate recordedSamplesL: Float32Array;\r\n\tprivate recordedSamplesR: Float32Array;\r\n\tprivate sampleFrames: number;\r\n\tprivate totalChunks: number;\r\n\tprivate currentChunk: number;\r\n\tprivate outputStarted: boolean = false;\r\n\tprivate readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\" });\r\n\tprivate readonly _computedSamplesLabel: HTMLDivElement = div({ style: \"width: 10em;\" }, new Text(\"0:00\"));\r\n\tprivate readonly _enableIntro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _loopDropDown: HTMLInputElement = input({ style: \"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\" });\r\n\tprivate readonly _enableOutro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _formatSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"wav\" }, \"Export to .wav file.\"),\r\n\t\toption({ value: \"mp3\" }, \"Export to .mp3 file.\"),\r\n\t\toption({ value: \"midi\" }, \"Export to .mid file.\"),\r\n\t\toption({ value: \"json\" }, \"Export to .json file.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\r\n\tprivate readonly _outputProgressBar: HTMLDivElement = div({ style: `width: 0%; background: ${ColorConfig.loopAccent}; height: 100%; position: absolute; z-index: 2;` });\r\n\tprivate readonly _outputProgressLabel: HTMLDivElement = div({ style: `position: relative; top: -1px; z-index: 3;` }, \"0%\");\r\n\tprivate readonly _outputProgressContainer: HTMLDivElement = div({ style: `height: 12px; background: ${ColorConfig.uiWidgetBackground}; display: block; position: relative; z-index: 1;` },\r\n\t\tthis._outputProgressBar,\r\n\t\tthis._outputProgressLabel,\r\n\t);\r\n\tprivate static readonly midiSustainInstruments: number[] = [\r\n\t\t0x4A, // rounded -> recorder\r\n\t\t0x47, // triangle -> clarinet\r\n\t\t0x50, // square -> square wave\r\n\t\t0x46, // ¹/₃ pulse -> bassoon\r\n\t\t0x46, // ¹/₄ pulse -> bassoon\r\n\t\t0x44, // ¹/₆ pulse -> oboe\r\n\t\t0x44, // ¹/₈ pulse -> oboe\r\n\t\t0x51, // ¹/₁₂ pulse -> sawtooth wave\r\n\t\t0x51, // ¹/₁₆ pulse -> sawtooth wave\r\n\t\t0x51, // sawtooth -> sawtooth wave\r\n\t\t0x51, // double saw -> sawtooth wave\r\n\t\t0x51, // double pulse -> sawtooth wave\r\n\t\t0x51, // spiky -> sawtooth wave\r\n\t];\r\n\tprivate static readonly midiDecayInstruments: number[] = [\r\n\t\t0x21, // rounded -> fingered bass\r\n\t\t0x2E, // triangle -> harp\r\n\t\t0x2E, // square -> harp\r\n\t\t0x06, // ¹/₃ pulse -> harpsichord\r\n\t\t0x06, // ¹/₄ pulse -> harpsichord\r\n\t\t0x18, // ¹/₆ pulse -> nylon guitar\r\n\t\t0x18, // ¹/₈ pulse -> nylon guitar\r\n\t\t0x19, // ¹/₁₂ pulse -> steel guitar\r\n\t\t0x19, // ¹/₁₆ pulse -> steel guitar\r\n\t\t0x19, // sawtooth -> steel guitar\r\n\t\t0x19, // double saw -> steel guitar\r\n\t\t0x6A, // double pulse -> shamisen\r\n\t\t0x6A, // spiky -> shamisen\r\n\t];\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\r\n\t\th2(\"Export Options\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"File name:\",\r\n\t\t\tthis._fileName,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"Length:\",\r\n\t\t\tthis._computedSamplesLabel,\r\n\t\t),\r\n\t\tdiv({ style: \"display: table; width: 100%;\" },\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Intro:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Loop Count:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Outro:\"),\r\n\t\t\t),\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableIntro),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._loopDropDown),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableOutro),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._formatSelect),\r\n\t\tdiv({ style: \"text-align: left;\" }, \"Exporting can be slow. Reloading the page or clicking the X will cancel it. Please be patient.\"),\r\n\t\tthis._outputProgressContainer,\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._exportButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._loopDropDown.value = \"1\";\r\n\r\n\t\tif (this._doc.song.loopStart == 0) {\r\n\t\t\tthis._enableIntro.checked = false;\r\n\t\t\tthis._enableIntro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableIntro.checked = true;\r\n\t\t\tthis._enableIntro.disabled = false;\r\n\t\t}\r\n\t\tif (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\r\n\t\t\tthis._enableOutro.checked = false;\r\n\t\t\tthis._enableOutro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableOutro.checked = true;\r\n\t\t\tthis._enableOutro.disabled = false;\r\n\t\t}\r\n\r\n\t\tconst lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\r\n\t\tif (lastExportFormat != null) {\r\n\t\t\tthis._formatSelect.value = lastExportFormat;\r\n\t\t}\r\n\r\n\t\tthis._fileName.select();\r\n\t\tsetTimeout(() => this._fileName.focus());\r\n\r\n\t\tthis._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.addEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._enableOutro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._enableIntro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._loopDropDown.addEventListener(\"change\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t\tthis._fileName.value = _doc.song.title;\r\n\t\tExportPrompt._validateFileName(null, this._fileName);\r\n\r\n\t\t(this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1));\r\n\t}\r\n\r\n\t// Could probably be moved to doc or synth. Fine here for now until needed by something else.\r\n\tprivate samplesToTime(samples: number): string {\r\n\t\tconst rawSeconds: number = Math.round(samples / this._doc.synth.samplesPerSecond);\r\n\t\tconst seconds: number = rawSeconds % 60;\r\n\t\tconst minutes: number = Math.floor(rawSeconds / 60);\r\n\t\treturn minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis.outputStarted = false;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic changeFileName(newValue: string) {\r\n\t\tthis._fileName.value = newValue;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.removeEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._export();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\r\n\r\n\t\tlet input: HTMLInputElement;\r\n\t\tif (event != null) {\r\n\t\t\tinput = <HTMLInputElement>event.target;\r\n\t\t} else if (use != undefined) {\r\n\t\t\tinput = use;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\r\n\t\tif (deleteChars.test(input.value)) {\r\n\t\t\tlet cursorPos: number = <number>input.selectionStart;\r\n\t\t\tinput.value = input.value.replace(deleteChars, \"\");\r\n\t\t\tcursorPos--;\r\n\t\t\tinput.setSelectionRange(cursorPos, cursorPos);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\r\n\t}\r\n\r\n\tprivate _export = (): void => {\r\n\t\tif (this.outputStarted == true)\r\n\t\t\treturn;\r\n\t\twindow.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\r\n\t\tswitch (this._formatSelect.value) {\r\n\t\t\tcase \"wav\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"wav\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mp3\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"mp3\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"midi\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToMidi();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToJson();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unhandled file export type.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _synthesize(): void {\r\n\t\t//const timer: number = performance.now();\r\n\r\n\t\t// If output was stopped e.g. user clicked the close button, abort.\r\n\t\tif (this.outputStarted == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Update progress bar UI once per 5 sec of exported data\r\n\t\tconst samplesPerChunk: number = this.synth.samplesPerSecond * 5; //e.g. 44100 * 5\r\n\t\tconst currentFrame: number = this.currentChunk * samplesPerChunk;\r\n\r\n\t\tconst samplesInChunk: number = Math.min(samplesPerChunk, this.sampleFrames - currentFrame);\r\n\t\tconst tempSamplesL = new Float32Array(samplesInChunk);\r\n\t\tconst tempSamplesR = new Float32Array(samplesInChunk);\r\n\r\n\t\tthis.synth.synthesize(tempSamplesL, tempSamplesR, samplesInChunk);\r\n\r\n\t\t// Concatenate chunk data into final array\r\n\t\tthis.recordedSamplesL.set(tempSamplesL, currentFrame);\r\n\t\tthis.recordedSamplesR.set(tempSamplesR, currentFrame);\r\n\r\n\t\t// Update UI\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\");\r\n\t\tthis._outputProgressLabel.innerText = Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\";\r\n\r\n\t\t// Next call, synthesize the next chunk.\r\n\t\tthis.currentChunk++;\r\n\r\n\t\tif (this.currentChunk >= this.totalChunks) {\r\n\t\t\t// Done, call final function\r\n\t\t\tthis._outputProgressLabel.innerText = \"Encoding...\";\r\n\t\t\tif (this.thenExportTo == \"wav\") {\r\n\t\t\t\tthis._exportToWavFinish();\r\n\t\t\t}\r\n\t\t\telse if (this.thenExportTo == \"mp3\") {\r\n\t\t\t\tthis._exportToMp3Finish();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Continue batch export\r\n\t\t\tsetTimeout(() => { this._synthesize(); });\r\n\t\t}\r\n\r\n\t\t//console.log(\"export timer\", (performance.now() - timer) / 1000.0);\r\n\t}\r\n\r\n\tprivate _exportTo(type: string): void {\r\n\t\t// Batch the export operation\r\n\t\tthis.thenExportTo = type;\r\n\t\tthis.currentChunk = 0;\r\n\t\tthis.synth = new Synth(this._doc.song);\r\n\t\tif (type == \"wav\") {\r\n\t\t\tthis.synth.samplesPerSecond = 48000; // Use professional video editing standard sample rate for .wav file export.\r\n\t\t}\r\n\t\telse if (type == \"mp3\") {\r\n\t\t\tthis.synth.samplesPerSecond = 44100; // Use consumer CD standard sample rate for .mp3 export.\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t}\r\n\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", \"0%\");\r\n\t\tthis._outputProgressLabel.innerText = \"0%\";\r\n\r\n\t\tthis.synth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\r\n\t\tif (!this._enableIntro.checked) {\r\n\t\t\tfor (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\r\n\t\t\t\tthis.synth.nextBar();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.synth.warmUpSynthesizer(this._doc.song);\r\n\t\tthis.synth.computeLatestModValues();\r\n\r\n\t\tthis.sampleFrames = this.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, this.synth.loopRepeatCount);\r\n\t\t// Compute how many UI updates will need to run to determine how many \r\n\t\tthis.totalChunks = Math.ceil(this.sampleFrames / (this.synth.samplesPerSecond * 5));\r\n\t\tthis.recordedSamplesL = new Float32Array(this.sampleFrames);\r\n\t\tthis.recordedSamplesR = new Float32Array(this.sampleFrames);\r\n\r\n\t\t// Batch the actual export\r\n\t\tsetTimeout(() => { this._synthesize(); });\r\n\t}\r\n\r\n\tprivate _exportToWavFinish(): void {\r\n\t\tconst sampleFrames: number = this.recordedSamplesL.length;\r\n\t\tconst sampleRate: number = this.synth.samplesPerSecond;\r\n\r\n\t\tconst wavChannelCount: number = 2;\r\n\t\tconst bytesPerSample: number = 2;\r\n\t\tconst bitsPerSample: number = 8 * bytesPerSample;\r\n\t\tconst sampleCount: number = wavChannelCount * sampleFrames;\r\n\r\n\t\tconst totalFileSize: number = 44 + sampleCount * bytesPerSample;\r\n\r\n\t\tlet index: number = 0;\r\n\t\tconst arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\r\n\t\tconst data: DataView = new DataView(arrayBuffer);\r\n\t\tdata.setUint32(index, 0x52494646, false); index += 4;\r\n\t\tdata.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\r\n\t\tdata.setUint32(index, 0x57415645, false); index += 4;\r\n\t\tdata.setUint32(index, 0x666D7420, false); index += 4;\r\n\t\tdata.setUint32(index, 0x00000010, true); index += 4; // size of following header\r\n\t\tdata.setUint16(index, 0x0001, true); index += 2; // not compressed\r\n\t\tdata.setUint16(index, wavChannelCount, true); index += 2; // channel count\r\n\t\tdata.setUint32(index, sampleRate, true); index += 4; // sample rate\r\n\t\tdata.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\r\n\t\tdata.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\r\n\t\tdata.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\r\n\t\tdata.setUint32(index, 0x64617461, false); index += 4;\r\n\t\tdata.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\r\n\r\n\t\tif (bytesPerSample > 1) {\r\n\t\t\t// usually samples are signed. \r\n\t\t\tconst range: number = (1 << (bitsPerSample - 1)) - 1;\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t\tif (bytesPerSample == 2) {\r\n\t\t\t\t\tdata.setInt16(index, valL, true); index += 2;\r\n\t\t\t\t\tdata.setInt16(index, valR, true); index += 2;\r\n\t\t\t\t} else if (bytesPerSample == 4) {\r\n\t\t\t\t\tdata.setInt32(index, valL, true); index += 4;\r\n\t\t\t\t\tdata.setInt32(index, valR, true); index += 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"unsupported sample size\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 8 bit samples are a special case: they are unsigned.\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * 127 + 128);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * 127 + 128);\r\n\t\t\t\tdata.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\r\n\t\t\t\tdata.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([arrayBuffer], { type: \"audio/wav\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".wav\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToMp3Finish(): void {\r\n\t\tconst whenEncoderIsAvailable = (): void => {\r\n\t\t\tconst lamejs: any = (<any>window)[\"lamejs\"];\r\n\t\t\tconst channelCount: number = 2;\r\n\t\t\tconst kbps: number = 192;\r\n\t\t\tconst sampleBlockSize: number = 1152;\r\n\t\t\tconst mp3encoder: any = new lamejs.Mp3Encoder(channelCount, this.synth.samplesPerSecond, kbps);\r\n\t\t\tconst mp3Data: any[] = [];\r\n\r\n\t\t\tconst left: Int16Array = new Int16Array(this.recordedSamplesL.length);\r\n\t\t\tconst right: Int16Array = new Int16Array(this.recordedSamplesR.length);\r\n\t\t\tconst range: number = (1 << 15) - 1;\r\n\t\t\tfor (let i: number = 0; i < this.recordedSamplesL.length; i++) {\r\n\t\t\t\tleft[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tright[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < left.length; i += sampleBlockSize) {\r\n\t\t\t\tconst leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\r\n\t\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\t\t\t}\r\n\r\n\t\t\tconst mp3buf: any = mp3encoder.flush();\r\n\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\r\n\t\t\tconst blob: Blob = new Blob(mp3Data, { type: \"audio/mp3\" });\r\n\t\t\tsave(blob, this._fileName.value.trim() + \".mp3\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\r\n\t\tif (\"lamejs\" in window) {\r\n\t\t\twhenEncoderIsAvailable();\r\n\t\t} else {\r\n\t\t\tvar script = document.createElement(\"script\");\r\n\t\t\tscript.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\r\n\t\t\tscript.onload = whenEncoderIsAvailable;\r\n\t\t\tdocument.head.appendChild(script);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _exportToMidi(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst midiTicksPerBeepBoxTick: number = 2;\r\n\t\tconst midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\r\n\t\tconst secondsPerMinute: number = 60;\r\n\t\tconst microsecondsPerMinute: number = secondsPerMinute * 1000000;\r\n\t\tconst beatsPerMinute: number = song.getBeatsPerMinute();\r\n\t\tconst microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\r\n\t\t//const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\r\n\t\tconst midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\r\n\t\tconst pitchBendRange: number = 24;\r\n\t\tconst defaultNoteVelocity: number = 90;\r\n\r\n\t\tconst unrolledBars: number[] = [];\r\n\t\tif (this._enableIntro.checked) {\r\n\t\t\tfor (let bar: number = 0; bar < song.loopStart; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\r\n\t\t\tfor (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._enableOutro.checked) {\r\n\t\t\tfor (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst tracks = [{ isMeta: true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false }];\r\n\t\tlet midiChannelCounter: number = 0;\r\n\t\tlet foundADrumset: boolean = false;\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tif (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true });\r\n\t\t\t\tfoundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\r\n\t\t\t} else {\r\n\t\t\t\tif (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false });\r\n\t\t\t\tif (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\r\n\t\twriter.writeUint32(MidiChunkType.header);\r\n\t\twriter.writeUint32(6); // length of headers is 6 bytes\r\n\t\twriter.writeUint16(MidiFileFormat.simultaneousTracks);\r\n\t\twriter.writeUint16(tracks.length);\r\n\t\twriter.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\r\n\r\n\t\tfor (const track of tracks) {\r\n\t\t\twriter.writeUint32(MidiChunkType.track);\r\n\r\n\t\t\tconst { isMeta, channel, midiChannel, isNoise, isDrumset } = track;\r\n\r\n\t\t\t// We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\r\n\t\t\tconst trackStartIndex: number = writer.getWriteIndex();\r\n\t\t\twriter.writeUint32(0); // placeholder for track size\r\n\r\n\t\t\tlet prevTime: number = 0;\r\n\t\t\tlet barStartTime: number = 0;\r\n\t\t\tconst writeEventTime = function (time: number): void {\r\n\t\t\t\tif (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\r\n\t\t\t\twriter.writeMidiVariableLength(time - prevTime);\r\n\t\t\t\tprevTime = time;\r\n\t\t\t}\r\n\r\n\t\t\tconst writeControlEvent = function (message: MidiControlEventMessage, value: number): void {\r\n\t\t\t\tif (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\r\n\t\t\t\twriter.writeUint8(MidiEventType.controlChange | midiChannel);\r\n\t\t\t\twriter.writeMidi7Bits(message);\r\n\t\t\t\twriter.writeMidi7Bits(value | 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (isMeta) {\r\n\t\t\t\t// for first midi track, include tempo, time signature, and key signature information.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.text);\r\n\t\t\t\twriter.writeMidiAscii(\"Composed with jummbus.bitbucket.io\");\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.tempo);\r\n\t\t\t\twriter.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\r\n\t\t\t\twriter.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\r\n\t\t\t\twriter.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\r\n\t\t\t\twriter.writeUint8(song.beatsPerBar); // numerator.\r\n\t\t\t\twriter.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\r\n\t\t\t\twriter.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\r\n\t\t\t\twriter.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\r\n\r\n\t\t\t\tconst isMinor: boolean = Config.scales[song.scale].flags[3] && !Config.scales[song.scale].flags[4];\r\n\t\t\t\tconst key: number = song.key; // C=0, C#=1, counting up to B=11\r\n\t\t\t\tlet numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\r\n\t\t\t\tif ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\r\n\t\t\t\tif (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\r\n\t\t\t\twhile (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.keySignature);\r\n\t\t\t\twriter.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\r\n\t\t\t\twriter.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\r\n\t\t\t\twriter.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\r\n\r\n\t\t\t\tif (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\r\n\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\twriter.writeMidiAscii(\"Loop Start\");\r\n\r\n\t\t\t\tfor (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar * song.loopLength;\r\n\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\t\twriter.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\r\n\t\t\t\tif (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// For remaining tracks, set up the instruments and write the notes:\r\n\r\n\t\t\t\tlet channelName: string = isNoise\r\n\t\t\t\t\t? \"noise channel \" + channel\r\n\t\t\t\t\t: \"pitch channel \" + channel;\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.trackName);\r\n\t\t\t\twriter.writeMidiAscii(channelName);\r\n\r\n\t\t\t\t// This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\r\n\r\n\t\t\t\tlet prevInstrumentIndex: number = -1;\r\n\t\t\t\tfunction writeInstrumentSettings(instrumentIndex: number): void {\r\n\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\r\n\t\t\t\t\tif (prevInstrumentIndex != instrumentIndex) {\r\n\t\t\t\t\t\tprevInstrumentIndex = instrumentIndex;\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\r\n\t\t\t\t\t\twriter.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\r\n\r\n\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\tlet instrumentProgram: number = 81; // default to sawtooth wave. \r\n\r\n\t\t\t\t\t\t\tif (preset != null && preset.midiProgram != undefined) {\r\n\t\t\t\t\t\t\t\tinstrumentProgram = preset.midiProgram;\r\n\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t\t\t// The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\r\n\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst envelopeType: EnvelopeType = instrument.getFilterEnvelope().type;\r\n\t\t\t\t\t\t\t\tconst instrumentDecays: boolean = envelopeType == EnvelopeType.decay || envelopeType == EnvelopeType.twang;\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\t\t\t\t\tif (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 47 : 75; // timpani : pan flute\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tconst filterInstruments: number[] = instrumentDecays\r\n\t\t\t\t\t\t\t\t\t\t? ExportPrompt.midiDecayInstruments\r\n\t\t\t\t\t\t\t\t\t\t: ExportPrompt.midiSustainInstruments;\r\n\t\t\t\t\t\t\t\t\tif (filterInstruments.length > instrument.chipWave) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = filterInstruments[instrument.chipWave];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 2 : 81; // electric grand : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Unrecognized instrument type.\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Program (instrument) change event:\r\n\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.programChange | midiChannel);\r\n\t\t\t\t\t\t\twriter.writeMidi7Bits(instrumentProgram);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Instrument volume:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\r\n\r\n\t\t\t\t\t\t// Instrument pan:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (song.getPattern(channel, 0) == null) {\r\n\t\t\t\t\t// Go ahead and apply the instrument settings at the beginning of the channel\r\n\t\t\t\t\t// even if a bar doesn't kick in until later.\r\n\t\t\t\t\twriteInstrumentSettings(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet prevPitchBend: number = defaultMidiPitchBend;\r\n\t\t\t\tlet prevExpression: number = defaultMidiExpression;\r\n\t\t\t\tlet shouldResetExpressionAndPitchBend: boolean = false;\r\n\t\t\t\t//let prevTremolo: number = -1;\r\n\t\t\t\tconst channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\r\n\t\t\t\tconst intervalScale: number = isNoise ? Config.noiseInterval : 1;\r\n\r\n\t\t\t\tfor (const bar of unrolledBars) {\r\n\t\t\t\t\tconst pattern: Pattern | null = song.getPattern(channel, bar);\r\n\r\n\t\t\t\t\tif (pattern != null) {\r\n\r\n\t\t\t\t\t\tconst instrumentIndex: number = pattern.instrument;\r\n\t\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\t\t\t\t\t\twriteInstrumentSettings(instrumentIndex);\r\n\r\n\t\t\t\t\t\tlet chordHarmonizes: boolean = false;\r\n\t\t\t\t\t\tlet usesArpeggio: boolean = true;\r\n\t\t\t\t\t\tlet polyphony: number = 1;\r\n\t\t\t\t\t\tchordHarmonizes = instrument.getChord().harmonizes;\r\n\t\t\t\t\t\tusesArpeggio = instrument.getChord().arpeggiates;\r\n\t\t\t\t\t\tif (usesArpeggio) {\r\n\t\t\t\t\t\t\tif (chordHarmonizes) {\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = 2;\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = Config.operatorCount;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpolyphony = Config.maxChordSize;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\r\n\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\r\n\t\t\t\t\t\t\tconst noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\r\n\t\t\t\t\t\t\tlet pinTime: number = noteStartTime;\r\n\t\t\t\t\t\t\tlet pinVolume: number = note.pins[0].volume;\r\n\t\t\t\t\t\t\tlet pinInterval: number = note.pins[0].interval;\r\n\t\t\t\t\t\t\tconst prevPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst nextPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst toneCount: number = Math.min(polyphony, note.pitches.length);\r\n\t\t\t\t\t\t\tconst velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].volume / 6)) : defaultNoteVelocity;\r\n\r\n\t\t\t\t\t\t\t// The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \r\n\t\t\t\t\t\t\t// To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\r\n\t\t\t\t\t\t\t// This may involve offsetting this base pitch from BeepBox's note pitch.\r\n\t\t\t\t\t\t\tlet mainInterval: number = note.pickMainInterval();\r\n\t\t\t\t\t\t\tlet pitchOffset: number = mainInterval * intervalScale;\r\n\t\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\t\tlet maxPitchOffset: number = pitchBendRange;\r\n\t\t\t\t\t\t\t\tlet minPitchOffset: number = -pitchBendRange;\r\n\t\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\t\tconst interval = note.pins[pinIndex].interval * intervalScale;\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\r\n\t\t\t\t\t\t\t\t\tminPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t// I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\r\n\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > polyphony) {\r\n\t\t\t\t\t\t\t\t\tlet lowestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tlet highestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tconst basePitch: number = note.pitches[toneCount - 1];\r\n\t\t\t\t\t\t\t\t\tfor (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t\thighestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset -= lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t\tminPitchOffset += lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\t\tpitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\tconst nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\r\n\t\t\t\t\t\t\t\tconst nextPinVolume: number = note.pins[pinIndex].volume;\r\n\t\t\t\t\t\t\t\tconst nextPinInterval: number = note.pins[pinIndex].interval;\r\n\r\n\t\t\t\t\t\t\t\tconst length: number = nextPinTime - pinTime;\r\n\t\t\t\t\t\t\t\tfor (let midiTick: number = 0; midiTick < length; midiTick++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTickTime: number = pinTime + midiTick;\r\n\t\t\t\t\t\t\t\t\tconst linearVolume: number = lerp(pinVolume, nextPinVolume, midiTick / length);\r\n\t\t\t\t\t\t\t\t\tconst linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\r\n\r\n\t\t\t\t\t\t\t\t\tconst interval: number = linearInterval * intervalScale - pitchOffset;\r\n\t\t\t\t\t\t\t\t\tconst pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\r\n\r\n\t\t\t\t\t\t\t\t\tconst expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.expressionToVolumeMult(linearVolume))));\r\n\r\n\t\t\t\t\t\t\t\t\tif (pitchBend != prevPitchBend) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t\t\t\tprevPitchBend = pitchBend;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (expression != prevExpression && !isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, expression);\r\n\t\t\t\t\t\t\t\t\t\tprevExpression = expression;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst noteStarting: boolean = midiTickTime == noteStartTime;\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlet nextPitch: number = note.pitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\tif (isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch += mainInterval;\r\n\t\t\t\t\t\t\t\t\t\t\tconst drumsetMap: number[] = [\r\n\t\t\t\t\t\t\t\t\t\t\t\t36, // Bass Drum 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t41, // Low Floor Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t45, // Low Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t48, // Hi-Mid Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t40, // Electric Snare\r\n\t\t\t\t\t\t\t\t\t\t\t\t39, // Hand Clap\r\n\t\t\t\t\t\t\t\t\t\t\t\t59, // Ride Cymbal 2\r\n\t\t\t\t\t\t\t\t\t\t\t\t49, // Crash Cymbal 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t46, // Open Hi-Hat\r\n\t\t\t\t\t\t\t\t\t\t\t\t55, // Splash Cymbal\r\n\t\t\t\t\t\t\t\t\t\t\t\t69, // Cabasa\r\n\t\t\t\t\t\t\t\t\t\t\t\t54, // Tambourine\r\n\t\t\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\t\t\t\tif (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = drumsetMap[nextPitch];\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksPerArpeggio = Config.ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, instrument.fastTwoNoteArp, arpeggio)];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\r\n\t\t\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (isNoise) nextPitch *= 2;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tnextPitch = Math.max(0, Math.min(127, nextPitch));\r\n\t\t\t\t\t\t\t\t\t\tnextPitches[toneIndex] = nextPitch;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tif (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOn | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t\tprevPitches[toneIndex] = nextPitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tpinTime = nextPinTime;\r\n\t\t\t\t\t\t\t\tpinVolume = nextPinVolume;\r\n\t\t\t\t\t\t\t\tpinInterval = nextPinInterval;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\r\n\r\n\t\t\t\t\t\t\t// End all tones.\r\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\r\n\r\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\r\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\r\n\t\t\t\t\t\t\t\t// Reset expression\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\r\n\t\t\t\t\t\t\t\t// Reset pitch bend\r\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twriteEventTime(barStartTime);\r\n\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\r\n\t\t\twriter.writeMidiVariableLength(0x00);\r\n\r\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\r\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], { type: \"audio/midi\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToJson(): void {\r\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\r\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\r\n\t\tconst blob: Blob = new Blob([jsonString], { type: \"application/json\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\r\n\t\tthis._close();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HarmonicsWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeHarmonics } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class HarmonicsEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\r\n\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;\", width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._lastControlPointContainer,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"harmonics\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeHarmonics | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = SVG.rect({ fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight });\r\n\t\t\tthis._lastControlPoints.push(rect);\r\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\r\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\r\n\t\t}\r\n\r\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\r\n\t\tlet path: string = \"\";\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\r\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\r\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\r\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\r\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\r\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\r\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n// A few wrapper classes that add functionality onto existing HTML elements, namely binding some events to an implementation-specified change class\r\n\r\nimport { Change } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nconst { span } = HTML;\r\n\r\nexport class InputBox {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: string = \"\";\r\n\tprivate _oldValue: string = \"\";\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: string, newValue: string) => Change) {\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: string): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tthis._change = this._getChange(this._oldValue, this.input.value);\r\n\t\tthis._doc.setProspectiveChange(this._change);\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._doc.record(this._change!);\r\n\t\tthis._change = null;\r\n\t};\r\n}\r\n\r\nexport class Slider {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: number = 0;\r\n\tprivate _oldValue: number = 0;\r\n\tpublic container: HTMLSpanElement;\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: ((oldValue: number, newValue: number) => Change) | null, midTick: boolean) {\r\n\t\t// A container is created around the input to allow for spec-compliant pseudo css classes (e.g ::before and ::after, which must be added to containers, not the input itself)\r\n\t\tthis.container = (midTick) ? span({ class: \"midTick\", style: \"position: sticky; width: 61.5%;\" }, input) : span({ style: \"position: sticky;\" }, input);\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: number): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t};\r\n}","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferReader {\r\n\tprivate _readIndex: number = 0;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(data: DataView) {\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\tpublic getReadIndex(): number {\r\n\t\treturn this._readIndex;\r\n\t}\r\n\r\n\tpublic readUint32(): number {\r\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\r\n\t\tthis._readIndex += 4;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint24(): number {\r\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\r\n\t}\r\n\r\n\tpublic readUint16(): number {\r\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\r\n\t\tthis._readIndex += 2;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readInt8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getInt8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic peakUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\treturn this._data.getUint8(this._readIndex);\r\n\t}\r\n\r\n\tpublic readMidi7Bits(): number {\r\n\t\tconst result: number = this.readUint8();\r\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\r\n\t\treturn result & 0x7f;\r\n\t}\r\n\r\n\tpublic readMidiVariableLength(): number {\r\n\t\tlet result: number = 0;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst nextByte: number = this.readUint8();\r\n\t\t\tresult += nextByte & 0x7f;\r\n\t\t\tif (nextByte & 0x80) {\r\n\t\t\t\tresult = result << 7;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic skipBytes(length: number): void {\r\n\t\tthis._readIndex += length;\r\n\t}\r\n\r\n\tpublic hasMore(): boolean {\r\n\t\treturn this._data.byteLength > this._readIndex;\r\n\t}\r\n\r\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\r\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\r\n\t\tthis.skipBytes(length);\r\n\t\treturn result;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth } from \"../synth/synth\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns } from \"./changes\";\r\nimport { AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult } from \"./Midi\";\r\nimport { ArrayBufferReader } from \"./ArrayBufferReader\";\r\n\r\n//namespace beepbox {\r\nconst { button, p, div, h2, input } = HTML;\r\n\r\nexport class ImportPrompt implements Prompt {\r\n\tprivate readonly _fileInput: HTMLInputElement = input({ type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\" });\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 300px;\" },\r\n\t\th2(\"Import\"),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\r\n\t\t),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\r\n\t\t),\r\n\t\tthis._fileInput,\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._fileInput.select();\r\n\t\tsetTimeout(() => this._fileInput.focus());\r\n\r\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _whenFileSelected = (): void => {\r\n\t\tconst file: File = this._fileInput.files![0];\r\n\t\tif (!file) return;\r\n\r\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n\t\tif (extension == \"json\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\r\n\t\t\t});\r\n\t\t\treader.readAsText(file);\r\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\r\n\t\t\t});\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"Unrecognized file extension.\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\r\n\r\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\r\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\r\n\t\tlet headerReader: ArrayBufferReader | null = null;\r\n\t\tinterface Track {\r\n\t\t\treader: ArrayBufferReader;\r\n\t\t\tnextEventMidiTick: number;\r\n\t\t\tended: boolean;\r\n\t\t\trunningStatus: number;\r\n\t\t}\r\n\t\tconst tracks: Track[] = [];\r\n\t\twhile (reader.hasMore()) {\r\n\t\t\tconst chunkType: number = reader.readUint32();\r\n\t\t\tconst chunkLength: number = reader.readUint32();\r\n\t\t\tif (chunkType == MidiChunkType.header) {\r\n\t\t\t\tif (headerReader == null) {\r\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\r\n\t\t\t\t}\r\n\t\t\t} else if (chunkType == MidiChunkType.track) {\r\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\tif (trackReader.hasMore()) {\r\n\t\t\t\t\ttracks.push({\r\n\t\t\t\t\t\treader: trackReader,\r\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\r\n\t\t\t\t\t\tended: false,\r\n\t\t\t\t\t\trunningStatus: -1,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Unknown chunk type. Skip it.\r\n\t\t\t\treader.skipBytes(chunkLength);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (headerReader == null) {\r\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\r\n\t\t\tthis._close();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fileFormat: number = headerReader.readUint16();\r\n\t\t\t/*const trackCount: number =*/ headerReader.readUint16();\r\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\r\n\r\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\r\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\r\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\r\n\t\tlet currentIndependentTrackIndex: number = 0;\r\n\t\tconst currentTrackIndices: number[] = [];\r\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\r\n\t\tif (independentTracks) {\r\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\r\n\t\t} else {\r\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\r\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinterface NoteEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tpitch: number;\r\n\t\t\tvelocity: number;\r\n\t\t\tprogram: number;\r\n\t\t\tinstrumentVolume: number;\r\n\t\t\tinstrumentPan: number;\r\n\t\t\ton: boolean;\r\n\t\t}\r\n\t\tinterface PitchBendEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tinterval: number;\r\n\t\t}\r\n\t\tinterface ExpressionEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tvolume: number;\r\n\t\t}\r\n\r\n\t\t// To read a MIDI file we have to simulate state changing over time.\r\n\t\t// Keep a record of various parameters for each channel that may\r\n\t\t// change over time, initialized to default values.\r\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\r\n\t\tconst channelRPNMSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst channelRPNLSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst pitchBendRangeMSB: number[] = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]; // pitch bend range defaults to 2 semitones.\r\n\t\tconst pitchBendRangeLSB: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // and 0 cents.\r\n\t\tconst currentInstrumentProgram: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tconst currentInstrumentVolumes: number[] = [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100];\r\n\t\tconst currentInstrumentPans: number[] = [64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64];\r\n\t\tconst noteEvents: NoteEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst pitchBendEvents: PitchBendEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst expressionEvents: ExpressionEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\r\n\t\tlet beatsPerBar: number = 8;\r\n\t\tlet numSharps: number = 0;\r\n\t\tlet isMinor: boolean = false;\r\n\r\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\r\n\t\tlet currentMidiTick: number = 0;\r\n\t\twhile (true) {\r\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\r\n\t\t\tlet anyTrackHasMore: boolean = false;\r\n\t\t\tfor (const trackIndex of currentTrackIndices) {\r\n\r\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\r\n\t\t\t\tconst track: Track = tracks[trackIndex];\r\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\r\n\r\n\t\t\t\t\t// If the most significant bit is set in the first byte\r\n\t\t\t\t\t// of the event, it's a new event status, otherwise\r\n\t\t\t\t\t// reuse the running status and save the next byte for\r\n\t\t\t\t\t// the content of the event. I'm assuming running status\r\n\t\t\t\t\t// is separate for each track.\r\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\r\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\r\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\r\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\r\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\r\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\r\n\r\n\t\t\t\t\tswitch (eventType) {\r\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tif (velocity == 0) {\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\r\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\r\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\r\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\r\n\t\t\t\t\t\t\t\t\tpitch: pitch,\r\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\r\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\r\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\r\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\r\n\t\t\t\t\t\t\t\t\ton: true,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\r\n\t\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\r\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\r\n\r\n\t\t\t\t\t\t\tswitch (message) {\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\r\n\t\t\t\t\t\t\t\t\texpressionEvents[eventChannel].push({ midiTick: currentMidiTick, volume: Synth.volumeMultToExpression(midiExpressionToVolumeMult(value)) });\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.programChange: {\r\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\r\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\r\n\r\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\r\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\r\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\r\n\r\n\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({ midiTick: currentMidiTick, interval: interval });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\r\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\r\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\r\n\r\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\r\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\r\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 3);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\r\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\r\n\r\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \r\n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\r\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\r\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\r\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\r\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\r\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\r\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\r\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\r\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\r\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\r\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\r\n\t\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\r\n\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\r\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttrack.ended = true;\r\n\r\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\r\n\t\t\t\t\t\tif (independentTracks) {\r\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\r\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\r\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\r\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\r\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\r\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!track.ended) {\r\n\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (anyTrackHasMore) {\r\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\r\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\r\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\r\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\r\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\r\n\r\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\r\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\r\n\t\t}\r\n\r\n\t\tlet key: number = numSharps;\r\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\r\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\r\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\r\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\r\n\r\n\t\t// Convert each midi channel into a BeepBox channel.\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = [];\r\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\r\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\r\n\r\n\t\t\tconst channel: Channel = new Channel();\r\n\r\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\r\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\r\n\r\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\r\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\r\n\t\t\tconst isModChannel: boolean = (channelPreset != null && channelPreset.isMod == true);\r\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\r\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\r\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : 12 * Config.pitchOctaves; // hardcoded 12edo for midi\r\n\t\t\t// const channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\t\tnoiseChannels.unshift(channel);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnoiseChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t} else if (isModChannel) {\r\n\t\t\t\tmodChannels.push(channel);\r\n\t\t\t} else {\r\n\t\t\t\tpitchChannels.push(channel);\r\n\t\t\t}\r\n\r\n\t\t\tlet currentVelocity: number = 1.0;\r\n\t\t\tlet currentProgram: number = 0;\r\n\t\t\tlet currentInstrumentVolume: number = 0;\r\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\r\n\r\n\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet setInstrumentVolume: boolean = false;\r\n\r\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\r\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\tconst instrument: Instrument = new Instrument(false, false);\r\n\t\t\t\tinstrument.fromJsonObject(preset.settings, false, false, false, false);\r\n\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\r\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\r\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\r\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\r\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\r\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\t\t\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\r\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\r\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\r\n\t\t\t\t\t\tlet maxDuration: number = 0;\r\n\t\t\t\t\t\tlet expression: number = 1;\r\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\r\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\r\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\r\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\texpression = Math.max(expression, Math.round(drum.volume * currentVelocity));\r\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\r\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\r\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\r\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\r\n\r\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, expression, true);\r\n\r\n\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\r\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\r\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\r\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpattern.notes.push(note);\r\n\r\n\t\t\t\t\t\theldPitches.length = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\r\n\r\n\t\t\t\t// Advance the pitch bend and expression timelines to the given midiTick, \r\n\t\t\t\t// changing the value of currentMidiInterval or currentMidiExpression.\r\n\t\t\t\t// IMPORTANT: These functions can't rewind!\r\n\t\t\t\tlet currentMidiInterval: number = 0.0;\r\n\t\t\t\tlet currentMidiExpression: number = 3.0;\r\n\t\t\t\tlet pitchBendEventIndex: number = 0;\r\n\t\t\t\tlet expressionEventIndex: number = 0;\r\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\r\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\r\n\t\t\t\t\t\tpitchBendEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction updateCurrentMidiExpression(midiTick: number) {\r\n\t\t\t\t\twhile (expressionEventIndex < expressionEvents[midiChannel].length && expressionEvents[midiChannel][expressionEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiExpression = expressionEvents[midiChannel][expressionEventIndex].volume;\r\n\t\t\t\t\t\texpressionEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventMidiTick: number = 0;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet pitchSum: number = 0;\r\n\t\t\t\tlet pitchCount: number = 0;\r\n\r\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\r\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\r\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\r\n\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\r\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\r\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\r\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\r\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\r\n\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\r\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\r\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\r\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\r\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\r\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, isModChannel, false, false);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and expression events\r\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and expression.\r\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\r\n\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\r\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\r\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\r\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiExpression));\r\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\r\n\r\n\t\t\t\t\t\t\t\tinterface PotentialPin {\r\n\t\t\t\t\t\t\t\t\tpart: number;\r\n\t\t\t\t\t\t\t\t\tpitch: number;\r\n\t\t\t\t\t\t\t\t\tvolume: number;\r\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\r\n\t\t\t\t\t\t\t\t\tkeyVolume: boolean;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\r\n\t\t\t\t\t\t\t\t\t{ part: 0, pitch: initialBeepBoxPitch, volume: firstPin.volume, keyPitch: false, keyVolume: false }\r\n\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\r\n\r\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\r\n\t\t\t\t\t\t\t\tlet prevPartExpression: number = currentVelocity * currentMidiExpression;\r\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\r\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\r\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\r\n\r\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and expressions. Detect places where\r\n\t\t\t\t\t\t\t\t\t// the interval or expression are at or cross whole numbers, and add these to the list of\r\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(midiTick);\r\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\r\n\t\t\t\t\t\t\t\t\tconst partExpression: number = currentVelocity * currentMidiExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\r\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\r\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestExpression: number = Math.round(partExpression);\r\n\t\t\t\t\t\t\t\t\tconst expressionIsNearInteger: boolean = Math.abs(partExpression - nearestExpression) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst expressionCrossedInteger: boolean = (Math.abs(prevPartExpression - Math.round(prevPartExpression)))\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partExpression - prevPartExpression) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partExpression) != Math.floor(prevPartExpression);\r\n\t\t\t\t\t\t\t\t\tconst keyExpression: boolean = expressionIsNearInteger || expressionCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\r\n\t\t\t\t\t\t\t\t\tprevPartExpression = partExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tif (keyPitch || keyExpression || lastPart) {\r\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = { part: noteRelativePart, pitch: nearestPitch, volume: nearestExpression, keyPitch: keyPitch || lastPart, keyVolume: keyExpression || lastPart };\r\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\r\n\r\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\r\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\r\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\r\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.volume - prevPin.volume) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestVolumeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedVolume: number = prevPin.volume + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedVolume - potentialPin.volume);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestVolumeDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestVolumeDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addVolumePin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addVolumePinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\r\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.volume));\r\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\r\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.volume));\r\n\r\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\r\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\r\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\r\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\r\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\r\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\r\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\r\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\r\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\r\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\r\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\r\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\r\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (noteEvent.on) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\r\n\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\r\n\t\t\t\tchannel.octave = (isNoiseChannel || isModChannel) ? 0 : Math.max(0, Math.min(this._doc.scrollableOctaves, Math.round((averagePitch / 12) - 1.5)));\r\n\t\t\t}\r\n\r\n\t\t\twhile (channel.bars.length < songTotalBars) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\r\n\t\t// To compensate, try to merge non-overlapping channels.\r\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\r\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\r\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\r\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\r\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\r\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\r\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\r\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\r\n\t\t\t\t\t\tlet conflicts: number = 0;\r\n\t\t\t\t\t\tlet gaps: number = 0;\r\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\r\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\r\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\r\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\r\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\r\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\r\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\r\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\r\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\r\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\r\n\t\t\t\tfor (const instrument of channelB.instruments) {\r\n\t\t\t\t\tchannelA.instruments.push(instrument);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pattern of channelB.patterns) {\r\n\t\t\t\t\tpattern.instrument += channelAInstrumentCount;\r\n\t\t\t\t\tchannelA.patterns.push(pattern);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\r\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove channelB.\r\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tcompactChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\tclass ChangeImportMidi extends ChangeGroup {\r\n\t\t\tconstructor(doc: SongDocument) {\r\n\t\t\t\tsuper();\r\n\t\t\t\tconst song: Song = doc.song;\r\n\t\t\t\tsong.tempo = beatsPerMinute;\r\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\r\n\t\t\t\tsong.key = key;\r\n\t\t\t\tsong.scale = 11;\r\n\t\t\t\tsong.reverb = 1;\r\n\t\t\t\tsong.rhythm = 1;\r\n\r\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\t\t\tremoveDuplicatePatterns(modChannels);\r\n\r\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t\t\t\tsong.loopStart = 0;\r\n\t\t\t\tsong.loopLength = song.barCount;\r\n\t\t\t\tthis._didSomething();\r\n\t\t\t\tdoc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._doc.goBackToStart();\r\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class Layout {\r\n\tprivate static readonly _normalLayout: string = `\r\n\t\t`;\r\n\r\n\tprivate static readonly _wideFullScreenLayout: string = `\r\n\t\t\t/* wide full screen (jummbox) */\r\n\t\t\t@media (min-width: 1001px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: 512px minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmax-height: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: calc( 100vh - 20px );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tposition: absolute !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _fullScreenLayout: string = `\r\n\t\t\t/* full screen (beepbox) */\r\n\t\t\t@media (min-width: 701px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"pattern-area settings-area\" \"track-area track-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor.selectRow {\r\n\t\t\t\t\theight: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .operatorRow {\r\n\t\t\t\t\theiht: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: 446px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow-x: auto;\r\n\t\t\t\t\tscrollbar-width: auto;\r\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar {\r\n\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-track {\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-thumb {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setFullScreen(layout: string): void {\r\n\t\tswitch (layout) {\r\n\t\t\tcase \"normal\":\r\n\t\t\t\tthis._styleElement.textContent = this._normalLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._fullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"widefullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._wideFullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nexport class LayoutPrompt implements Prompt {\r\n\tprivate readonly _octaveStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\", value: \"0\" });\r\n\tprivate readonly _layoutSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"normal\" }, \"Normal Layout\"),\r\n\t\toption({ value: \"fullscreen\" }, \"Full-screen Layout\"),\r\n\t\toption({ value: \"widefullscreen\" }, \"Wide Full-screen Layout\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Set Layout\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Extra View Octaves:\",\r\n\t\t\t),\r\n\t\t\tthis._octaveStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._layoutSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._octaveStepper.min = \"0\";\r\n\t\tthis._octaveStepper.max = \"2\";\r\n\t\tconst lastOctaves: string | null = window.localStorage.getItem(\"extraOctaves\");\r\n\t\tif (lastOctaves != null) {\r\n\t\t\tthis._octaveStepper.value = lastOctaves;\r\n\t\t}\r\n\r\n\t\tconst lastLayout: string | null = window.localStorage.getItem(\"fullScreen\");\r\n\t\tif (lastLayout != null) {\r\n\t\t\tthis._layoutSelect.value = lastLayout;\r\n\t\t}\r\n\r\n\t\tthis._octaveStepper.select();\r\n\t\tsetTimeout(() => this._octaveStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.addEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.removeEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this._layoutSelect.value);\r\n\t\twindow.localStorage.setItem(\"extraOctaves\", this._octaveStepper.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.fullScreen = this._layoutSelect.value;\r\n\t\tLayout.setFullScreen(this._doc.fullScreen);\r\n\t\tthis._doc.windowOctaves = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\t\tthis._doc.scrollableOctaves = Config.pitchOctaves - this._doc.windowOctaves;\r\n\t\tthis._doc.windowPitchCount = this._doc.windowOctaves * this._doc.song.edo + 1;\r\n\t\t// this._doc.windowPitchCount = this._doc.windowOctaves * Config.pitchesPerOctave + 1;\r\n\t\tthis._doc.undo();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeLimiterSettings } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class LimiterCanvas {\r\n\tprivate readonly _editorWidth: number = 200; // 112\r\n\tprivate readonly _editorHeight: number = 52; // 26\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.textSelection, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.textSelection, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _midCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.primaryText, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.linkAccent, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.linkAccent, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _label0: SVGTextElement = SVG.text({ x: \"-1.5%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"0\");\r\n\tprivate readonly _label1: SVGTextElement = SVG.text({ x: \"48.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"1\");\r\n\tprivate readonly _label2: SVGTextElement = SVG.text({ x: \"98.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"2\");\r\n\tprivate readonly _inLabel: SVGTextElement = SVG.text({ x: \"-5%\", y: \"113.5%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"In\");\r\n\tprivate readonly _outLabel: SVGTextElement = SVG.text({ x: \"-9%\", y: \"131%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"Out\");\r\n\tprivate readonly _xAxisLabel: SVGTextElement = SVG.text({ x: \"42%\", y: \"172%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--primary-text)\" }, \"Volume\");\r\n\tprivate readonly _yAxisLabel: SVGTextElement = SVG.text({ x: \"55.2%\", y: \"160%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", transform: \"rotate(-90 30,120)\", fill: \"var(--primary-text)\" }, \"Gain\");\r\n\tprivate readonly _inVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"105%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"120%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _inVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"105%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _inVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"105%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"120%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"120%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"30%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"45%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"50%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._defs,\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._boostCurve,\r\n\t\tthis._midCurve,\r\n\t\tthis._limitCurve,\r\n\t\tthis._boostDot,\r\n\t\tthis._limitDot,\r\n\t\tthis._label0,\r\n\t\tthis._label1,\r\n\t\tthis._label2,\r\n\t\tthis._inLabel,\r\n\t\tthis._outLabel,\r\n\t\tthis._xAxisLabel,\r\n\t\tthis._yAxisLabel,\r\n\t\tthis._inVolumeBg,\r\n\t\tthis._outVolumeBg,\r\n\t\tthis._inVolumeBar,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._inVolumeCap,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 4em; width: 80%; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tprivate _limiterPrompt: LimiterPrompt;\r\n\r\n\tconstructor(lim: LimiterPrompt) {\r\n\t\tfor (let i: number = 0; i <= 2; i++) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 3; i += 2) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 4) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis._limiterPrompt = lim;\r\n\r\n\t}\r\n\r\n\tpublic animateVolume(inVolumeCap: number, historicInCap: number, outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._inVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, inVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._inVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicInCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, outVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicOutCap * (this._editorWidth / 2.0)));\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn Math.max(0, (1 - (point / 5)) * (this._editorHeight - 1) + 1);\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet currentSubpathIdx: number = 0;\r\n\t\tlet lastSubpathIdx: number = -1;\r\n\t\tlet path: string = \"\";\r\n\t\tlet subPaths: string[] = [\"\", \"\", \"\"];\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Calculate next value based on limiter settings\r\n\t\t\tlet limiterRatio: number = +this._limiterPrompt.limitRatioSlider.value;\r\n\t\t\tlimiterRatio = (limiterRatio < 10 ? limiterRatio / 10 : (limiterRatio - 9));\r\n\t\t\tlet compressorRatio: number = +this._limiterPrompt.compressionRatioSlider.value;\r\n\t\t\tcompressorRatio = (compressorRatio < 10 ? compressorRatio / 10 : (1 + (compressorRatio - 10) / 60));\r\n\t\t\tlet limiterThreshold: number = +this._limiterPrompt.limitThresholdSlider.value;\r\n\t\t\tlet compressorThreshold: number = +this._limiterPrompt.compressionThresholdSlider.value;\r\n\t\t\tlet useVol: number = i * 2.0 / 64.0; // Scale from 0~2\r\n\t\t\tlet nextValue: number = 1 / 1.05;\r\n\t\t\tif (useVol >= limiterThreshold) {\r\n\t\t\t\t// Limiter falloff\r\n\t\t\t\tnextValue = 1 / (1.05 * (useVol + 1 - limiterThreshold) * limiterRatio + (1 - limiterRatio));\r\n\t\t\t}\r\n\t\t\telse if (useVol < compressorThreshold) {\r\n\t\t\t\t// Compressor boost\r\n\t\t\t\tnextValue = 1 / (((useVol + 1 - compressorThreshold) * 0.8 + 0.25) * compressorRatio + 1.05 * (1 - compressorRatio));\r\n\t\t\t}\r\n\r\n\t\t\t// first point in entire path\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tpath += \"M 0 \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t}\r\n\r\n\t\t\t// first point in a specific subpath\r\n\t\t\tif (currentSubpathIdx > lastSubpathIdx) {\r\n\t\t\t\tif (lastSubpathIdx >= 0) {\r\n\t\t\t\t\tsubPaths[lastSubpathIdx] += \"L \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t\t}\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\r\n\t\t\t\tif (currentSubpathIdx == 1 || (lastSubpathIdx == 0 && currentSubpathIdx == 2)) {\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\t\t\t\tif (currentSubpathIdx == 2) {\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastSubpathIdx = currentSubpathIdx;\r\n\t\t\t}\r\n\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\r\n\t\t\t// Move to next subpath\r\n\t\t\tif (currentSubpathIdx == 0 && (i >= compressorThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t\tif (currentSubpathIdx == 1 && (i >= limiterThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tthis._boostCurve.setAttribute(\"d\", subPaths[0]);\r\n\t\tthis._midCurve.setAttribute(\"d\", subPaths[1]);\r\n\t\tthis._limitCurve.setAttribute(\"d\", subPaths[2]);\r\n\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\t}\r\n}\r\n\r\nexport class LimiterPrompt implements Prompt {\r\n\r\n\tprivate limiterCanvas: LimiterCanvas = new LimiterCanvas(this);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tpublic readonly limitDecaySlider: HTMLInputElement = input({ title: \"limit decay\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"1\", max: \"30\", value: \"4\", step: \"1\" });\r\n\tpublic readonly limitRiseSlider: HTMLInputElement = input({ title: \"limit rise\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"2000\", max: \"10000\", value: \"4000\", step: \"250\" });\r\n\tpublic readonly compressionThresholdSlider: HTMLInputElement = input({ title: \"compressor threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"1.1\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly limitThresholdSlider: HTMLInputElement = input({ title: \"limiter threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"2\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly compressionRatioSlider: HTMLInputElement = input({ title: \"compressor ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly limitRatioSlider: HTMLInputElement = input({ title: \"limiter ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly masterGainSlider: HTMLInputElement = input({ title: \"master gain\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"5\", value: \"1\", step: \"0.02\" });\r\n\r\n\tprivate startingLimitDecay: number;\r\n\tprivate startingLimitRise: number;\r\n\tprivate startingCompressionThreshold: number;\r\n\tprivate startingLimitThreshold: number;\r\n\tprivate startingCompressionRatio: number;\r\n\tprivate startingLimitRatio: number;\r\n\tprivate startingMasterGain: number;\r\n\r\n\tprivate inVolumeHistoricTimer: number = 0.0;\r\n\tprivate inVolumeHistoricCap: number = 0.0;\r\n\tprivate outVolumeHistoricTimer: number = 0.0;\r\n\tprivate outVolumeHistoricCap: number = 0.0;\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"width:45%;\" }, \"Reset\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Limiter Options\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.limiterCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 1.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 4.5%; color: ${ColorConfig.textSelection};` },\r\n\t\t\t\t\"Boost\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 0%; color: ${ColorConfig.linkAccent};` },\r\n\t\t\t\t\"Cutoff\"\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 0.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Threshold:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionThresholdSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitThresholdSlider,\r\n\t\t\t),\r\n\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Ratio:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionRatioSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitRatioSlider,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Decay:\"\r\n\t\t\t),\r\n\t\t\tthis.limitDecaySlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Rise:\"\r\n\t\t\t),\r\n\t\t\tthis.limitRiseSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Master Gain:\"\r\n\t\t\t),\r\n\t\t\tthis.masterGainSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t\tthis._resetButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.addEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis.limitRatioSlider.value = \"\" + (this._doc.song.limitRatio < 1 ? this._doc.song.limitRatio * 10 : 9 + this._doc.song.limitRatio);\r\n\t\tthis.compressionRatioSlider.value = \"\" + (this._doc.song.compressionRatio < 1 ? this._doc.song.compressionRatio * 10 : 10 + (this._doc.song.compressionRatio - 1) * 60);\r\n\t\tthis.limitThresholdSlider.value = \"\" + this._doc.song.limitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this._doc.song.compressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this._doc.song.limitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this._doc.song.limitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this._doc.song.masterGain;\r\n\r\n\t\tthis.startingLimitRatio = +this.limitRatioSlider.value;\r\n\t\tthis.startingCompressionRatio = +this.compressionRatioSlider.value;\r\n\t\tthis.startingLimitThreshold = +this.limitThresholdSlider.value;\r\n\t\tthis.startingCompressionThreshold = +this.compressionThresholdSlider.value;\r\n\t\tthis.startingLimitDecay = +this.limitDecaySlider.value;\r\n\t\tthis.startingLimitRise = +this.limitRiseSlider.value;\r\n\t\tthis.startingMasterGain = +this.masterGainSlider.value;\r\n\r\n\t\tthis.limitDecaySlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.compressionRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.addEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tthis.limiterCanvas.render();\r\n\t}\r\n\r\n\tprivate _volumeUpdate = (): void => {\r\n\t\tthis.inVolumeHistoricTimer--;\r\n\t\tif (this.inVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.inVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.inVolumeCap > this.inVolumeHistoricCap) {\r\n\t\t\tthis.inVolumeHistoricCap = this._doc.song.inVolumeCap;\r\n\t\t\tthis.inVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.limiterCanvas.animateVolume(this._doc.song.inVolumeCap, this.inVolumeHistoricCap, this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t//console.log(this._doc.song.volumeCap);\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t\tthis.limitThresholdSlider.value = this.compressionThresholdSlider.value;\r\n\t\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\t// Same as above, but for conflicts between limiter threshold and compressor threshold, favor the limiter\r\n\tprivate _whenInputFavorLimitThreshold = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\t\tthis.compressionThresholdSlider.value = this.limitThresholdSlider.value;\r\n\t\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\t// Reset all sliders to starting values\r\n\t\tthis.limitRatioSlider.value = \"\" + this.startingLimitRatio;\r\n\t\tthis.compressionRatioSlider.value = \"\" + this.startingCompressionRatio;\r\n\t\tthis.limitThresholdSlider.value = \"\" + this.startingLimitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this.startingCompressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this.startingLimitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this.startingLimitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this.startingMasterGain;\r\n\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.removeEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis.limitDecaySlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.limitRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.removeEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetDefaults = (): void => {\r\n\t\t// Set song limiter settings to their default\r\n\t\tif (this.limitRatioSlider.value != \"10\" || this.limitRiseSlider.value != \"4000\" || this.limitDecaySlider.value != \"4\" || this.limitThresholdSlider.value != \"1\" || this.compressionRatioSlider.value != \"10\" || this.compressionThresholdSlider.value != \"1\" || this.masterGainSlider.value != \"1\") {\r\n\r\n\t\t\tthis.limitRatioSlider.value = \"10\";\r\n\t\t\tthis.limitRiseSlider.value = \"4000\";\r\n\t\t\tthis.limitDecaySlider.value = \"4\";\r\n\t\t\tthis.limitThresholdSlider.value = \"1\";\r\n\t\t\tthis.compressionRatioSlider.value = \"10\";\r\n\t\t\tthis.compressionThresholdSlider.value = \"1\";\r\n\t\t\tthis.masterGainSlider.value = \"1\";\r\n\r\n\t\t\tthis._whenInput();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateLimiter = (): void => {\r\n\t\t// Save slider values to song\r\n\t\tthis._doc.record(new ChangeLimiterSettings(this._doc,\r\n\t\t\t(+this.limitRatioSlider.value < 10 ? +this.limitRatioSlider.value / 10 : (+this.limitRatioSlider.value - 9)),\r\n\t\t\t(+this.compressionRatioSlider.value < 10 ? +this.compressionRatioSlider.value / 10 : (1 + (+this.compressionRatioSlider.value - 10) / 60)),\r\n\t\t\t+this.limitThresholdSlider.value,\r\n\t\t\t+this.compressionThresholdSlider.value,\r\n\t\t\t+this.limitRiseSlider.value,\r\n\t\t\t+this.limitDecaySlider.value,\r\n\t\t\t+this.masterGainSlider.value,\r\n\t\t), true);\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeLoop, ChangeChannelBar } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\ninterface Cursor {\r\n\tstartBar: number;\r\n\tmode: number;\r\n}\r\n\r\ninterface Endpoints {\r\n\tstart: number;\r\n\tlength: number;\r\n}\r\n\r\nexport class LoopEditor {\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _startMode: number = 0;\r\n\tprivate readonly _endMode: number = 1;\r\n\tprivate readonly _bothMode: number = 2;\r\n\r\n\tprivate readonly _loop: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4 });\r\n\tprivate readonly _highlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, height: this._editorHeight },\r\n\t\tthis._loop,\r\n\t\tthis._highlight,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ style: \"height: 20px; position: relative; margin: 5px 0;\" }, this._svg);\r\n\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _change: ChangeLoop | null = null;\r\n\tprivate _cursor: Cursor = { startBar: -1, mode: -1 };\r\n\tprivate _mouseX: number = 0;\r\n\t//private _mouseY: number = 0;\r\n\tprivate _clientStartX: number = 0;\r\n\tprivate _clientStartY: number = 0;\r\n\tprivate _startedScrolling: boolean = false;\r\n\tprivate _draggingHorizontally: boolean = false;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _renderedLoopStart: number = -1;\r\n\tprivate _renderedLoopStop: number = -1;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\tthis._cursor.startBar = bar;\r\n\r\n\t\tif (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\r\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\r\n\t\t\t\tthis._cursor.mode = this._startMode;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.mode = this._endMode;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._cursor.mode = this._bothMode;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _findEndPoints(middle: number): Endpoints {\r\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\r\n\t\tlet end: number = start + this._doc.song.loopLength;\r\n\t\tif (start < 0) {\r\n\t\t\tend -= start;\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tif (end > this._doc.song.barCount) {\r\n\t\t\tstart -= end - this._doc.song.barCount;\r\n\t\t\tend = this._doc.song.barCount;\r\n\t\t}\r\n\t\treturn { start: start, length: end - start };\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\tthis._whenMouseMoved(event);\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\t//event.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\t//this._whenTouchMoved(event);\r\n\t\tthis._clientStartX = event.touches[0].clientX;\r\n\t\tthis._clientStartY = event.touches[0].clientY;\r\n\t\tthis._draggingHorizontally = false;\r\n\t\tthis._startedScrolling = false;\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\r\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\r\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\r\n\t\t\t\tthis._startedScrolling = true;\r\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\r\n\t\t\t\tthis._draggingHorizontally = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._draggingHorizontally) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\r\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\r\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\r\n\t\t\t\toldStart = this._change.oldStart;\r\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\r\n\t\t\t}\r\n\r\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\t\tlet start: number;\r\n\t\t\tlet end: number;\r\n\t\t\tlet temp: number;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tend = oldEnd;\r\n\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\r\n\t\t\t\tif (start == end) {\r\n\t\t\t\t\tstart = end - 1;\r\n\t\t\t\t} else if (start > end) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\tstart = oldStart;\r\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tif (end < 0) end = 0;\r\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\r\n\t\t\t\tif (end == start) {\r\n\t\t\t\t\tend = start + 1;\r\n\t\t\t\t} else if (end < start) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\r\n\t\t\t}\r\n\t\t\tthis._doc.synth.jumpIntoLoop();\r\n\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\r\n\t\t\t}\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t} else {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!this._startedScrolling) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tthis._mouseOver = false;\r\n\t\t\tthis._whenCursorReleased(event);\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\tthis._change = null;\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tconst radius: number = this._editorHeight / 2;\r\n\r\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\r\n\t\t\t} else {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\r\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\r\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis._highlight.setAttribute(\"d\",\r\n\t\t\t\t`M ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`L ${highlightStop - radius} ${4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\r\n\t\tconst radius: number = this._editorHeight / 2;\r\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t}\r\n\r\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\r\n\t\t\tthis._renderedLoopStart = loopStart;\r\n\t\t\tthis._renderedLoopStop = loopStop;\r\n\t\t\tthis._loop.setAttribute(\"d\",\r\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeMoveNotesSideways } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class MoveNotesSidewaysPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t\toption({ value: \"wrapAround\" }, \"Wrap notes around within bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Move Notes Sideways\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats to move:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Negative is left, positive is right)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\r\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus(), 100); // Add 100ms because the key macro (W) gets captured by the stepper...\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\r\n\t\tvalue = Math.round(value * 100) / 100;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { InputBox } from \"./HTMLWrapper\";\r\nimport { ChangeChannelOrder, ChangeChannelName, ChangeChannelCount } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nexport class MuteEditor {\r\n\tprivate readonly _buttons: HTMLDivElement[] = [];\r\n\tprivate readonly _channelCounts: HTMLDivElement[] = [];\r\n\tprivate readonly _channelNameDisplay: HTMLDivElement = HTML.div({ style: `background-color: ${ColorConfig.uiWidgetFocus}; white-space:nowrap; display: none; transform:translate(20px); width: auto; pointer-events: none; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\");\r\n\tpublic readonly _channelNameInput: InputBox = new InputBox(HTML.input({ style: `color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.uiWidgetFocus}; margin-top: -2px; display: none; width: 6em; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\"), this._doc, (oldValue: string, newValue: string) => new ChangeChannelName(this._doc, oldValue, newValue));\r\n\r\n\tprivate readonly _channelDropDown: HTMLSelectElement = HTML.select({ style: \"width: 0px; left: 19px; height: 19px; position:absolute; opacity:0\" },\r\n\r\n\t\tHTML.option({ value: \"rename\" }, \"Rename...\"),\r\n\t\tHTML.option({ value: \"chnUp\" }, \"Move Channel Up\"),\r\n\t\tHTML.option({ value: \"chnDown\" }, \"Move Channel Down\"),\r\n\t\tHTML.option({ value: \"chnMute\" }, \"Mute Channel\"),\r\n\t\tHTML.option({ value: \"chnSolo\" }, \"Solo Channel\"),\r\n\t\tHTML.option({ value: \"chnInsert\" }, \"Insert Channel Below\"),\r\n\t\tHTML.option({ value: \"chnDelete\" }, \"Delete This Channel\"),\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"muteEditor\", style: \"position: relative; margin-top: \" + Config.barEditorHeight + \"px;\" }, this._channelNameDisplay, this._channelNameInput.input, this._channelDropDown);\r\n\r\n\tprivate _editorHeight: number = 128;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedPitchChannels: number = 0;\r\n\tprivate _renderedNoiseChannels: number = 0;\r\n\tprivate _renderedModChannels: number = 0;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _channelDropDownChannel: number = 0;\r\n\tprivate _channelDropDownOpen: boolean = false;\r\n\tprivate _channelDropDownLastState: boolean = false;\r\n\r\n\tconstructor(private _doc: SongDocument, private _editor: SongEditor) {\r\n\t\tthis.container.addEventListener(\"click\", this._onClick);\r\n\t\tthis.container.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tthis.container.addEventListener(\"mouseleave\", this._onMouseLeave);\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t\tthis._channelDropDown.addEventListener(\"change\", this._channelDropDownHandler);\r\n\t\tthis._channelDropDown.addEventListener(\"mousedown\", this._channelDropDownGetOpenedPosition);\r\n\t\tthis._channelDropDown.addEventListener(\"blur\", this._channelDropDownBlur);\r\n\t\tthis._channelDropDown.addEventListener(\"click\", this._channelDropDownClick);\r\n\r\n\t\tthis._channelNameInput.input.addEventListener(\"change\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"blur\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"mousedown\", this._channelNameInputClicked);\r\n\t\tthis._channelNameInput.input.addEventListener(\"input\", this._channelNameInputWhenInput);\r\n\t}\r\n\r\n\tprivate _channelNameInputWhenInput = (): void => {\r\n\t\tlet newValue = this._channelNameInput.input.value;\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tthis._channelNameInput.input.value = newValue.substring(0, 15);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelNameInputClicked = (event: MouseEvent): void => {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\tprivate _channelNameInputHide = (): void => {\r\n\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t}\r\n\r\n\tprivate _channelDropDownClick = (event: MouseEvent): void => {\r\n\t\tthis._channelDropDownOpen = !this._channelDropDownLastState;\r\n\t\tthis._channelDropDownGetOpenedPosition(event);\r\n\t\t//console.log(\"click \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownBlur = (): void => {\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t//console.log(\"blur \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\r\n\t\tthis._channelDropDownLastState = this._channelDropDownOpen;\r\n\r\n\t\tthis._channelDropDownChannel = Math.floor(Math.min(this._renderedChannelCount, Math.max(0, parseInt(this._channelDropDown.style.getPropertyValue(\"top\")) / this._renderedChannelHeight)));\r\n\t\tthis._doc.muteEditorChannel = this._channelDropDownChannel;\r\n\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\r\n\t\t// Check if channel is at limit, in which case another can't be inserted\r\n\t\tif ((this._channelDropDownChannel < this._doc.song.pitchChannelCount && this._doc.song.pitchChannelCount == Config.pitchChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.noiseChannelCount == Config.noiseChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.modChannelCount == Config.modChannelCountMax)) {\r\n\t\t\tthis._channelDropDown.options[5].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[5].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also check if a channel is eligible to move up or down based on the song's channel settings.\r\n\t\tif (this._channelDropDownChannel == 0 || this._channelDropDownChannel == this._doc.song.pitchChannelCount || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._channelDropDown.options[1].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[1].disabled = false;\r\n\t\t}\r\n\t\tif (this._channelDropDownChannel == this._doc.song.pitchChannelCount - 1 || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._channelDropDownChannel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\tthis._channelDropDown.options[2].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[2].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also, can't delete the last pitch channel.\r\n\t\tif (this._doc.song.pitchChannelCount == 1 && this._channelDropDownChannel == 0) {\r\n\t\t\tthis._channelDropDown.options[6].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[6].disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelDropDownHandler = (event: Event): void => {\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tevent.stopPropagation();\r\n\t\t//console.log(\"handler \" + this._channelDropDownOpen);\r\n\r\n\t\tswitch (this._channelDropDown.value) {\r\n\t\t\tcase \"rename\":\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"transform\", this._channelNameDisplay.style.getPropertyValue(\"transform\"));\r\n\t\t\t\tif (this._channelNameDisplay.textContent != null) {\r\n\t\t\t\t\tthis._channelNameInput.input.value = this._channelNameDisplay.textContent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._channelNameInput.input.value = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tthis._channelNameInput.input.select();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnUp\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel - 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnDown\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel + 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnMute\":\r\n\t\t\t\tthis._doc.song.channels[this._channelDropDownChannel].muted = !this._doc.song.channels[this._channelDropDownChannel].muted;\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnSolo\": {\r\n\t\t\t\t// Check for any channel not matching solo pattern\r\n\t\t\t\tlet shouldSolo: boolean = false;\r\n\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tif (this._doc.song.channels[channel].muted == (channel == this._channelDropDownChannel)) {\r\n\t\t\t\t\t\tshouldSolo = true;\r\n\t\t\t\t\t\tchannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (shouldSolo) {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = (channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnInsert\": {\r\n\t\t\t\t// Add a channel at the end, then swap it in.\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tlet swapIndex: number;\r\n\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tnewPitchChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tnewNoiseChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewModChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount + newModChannelCount;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount));\r\n\r\n\t\t\t\tfor (let channel: number = swapIndex - 1; channel > this._channelDropDownChannel + 1; channel--) {\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel - 1, channel), true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnDelete\": {\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t// Removing pitch channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewPitchChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t// Removing noise channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewNoiseChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Removing mod channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewModChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount + newModChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount), true);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._channelDropDown.value != \"rename\")\r\n\t\t\tthis._editor.refocusStage();\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _onClick = (event: MouseEvent): void => {\r\n\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) return;\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos < 21.0) {\r\n\t\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\r\n\t\t}\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) {\r\n\t\t\tif (!this._channelDropDownOpen && event.target != this._channelNameDisplay && event.target != this._channelDropDown) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos >= 21.0) {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\t// Mouse over chn. number\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"\");\r\n\t\t\t\tvar height = this._doc.getChannelHeight();\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"transform\", \"translate(20px, \" + (height / 4 + height * index) + \"px)\");\r\n\r\n\t\t\t\tif (this._doc.song.channels[index].name != \"\") {\r\n\t\t\t\t\tthis._channelNameDisplay.textContent = this._doc.song.channels[index].name;\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (index < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Pitch \" + (index + 1);\r\n\t\t\t\t\t} else if (index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Noise \" + (index - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Mod \" + (index - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// The name set will only show up when this becomes visible, e.g. when the dropdown is opened.\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._channelDropDown.style.top = (Config.barEditorHeight - 2 + index * this._renderedChannelHeight) + \"px\";\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"15px\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseLeave = (event: MouseEvent): void => {\r\n\t\tif (!this._channelDropDownOpen) {\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onKeyUp(event: KeyboardEvent): void {\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // esc\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tif (!this._doc.enableChannelMuting) return;\r\n\r\n\t\tconst channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\r\n\t\t\t\tconst channelCountText: HTMLDivElement = HTML.div({ class: \"noSelection muteButtonText\", style: \"display: table-cell; vertical-align: middle; text-align: center; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; pointer-events: none; width: 12px; height: 20px; transform: translate(0px, 1px);\" });\r\n\t\t\t\tconst muteButton: HTMLDivElement = HTML.div({ class: \"mute-button\", style: `display: block; pointer-events: none; width: 16px; height: 20px; transform: translate(2px, 1px);` });\r\n\r\n\t\t\t\tconst muteContainer: HTMLDivElement = HTML.div({ style: \"align-items: center; height: 20px; margin: 0px; display: table; flex-direction: row; justify-content: space-between;\" }, [\r\n\t\t\t\t\tmuteButton,\r\n\t\t\t\t\tchannelCountText,\r\n\t\t\t\t]);\r\n\t\t\t\tthis.container.appendChild(muteContainer);\r\n\t\t\t\tthis._buttons[y] = muteContainer;\r\n\t\t\t\tthis._channelCounts[y] = channelCountText;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\r\n\t\t\t}\r\n\r\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\r\n\t\t}\r\n\r\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\tif (this._doc.song.channels[y].muted) {\r\n\t\t\t\tthis._buttons[y].children[0].classList.add(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitchDim;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoiseDim;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgModDim;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._buttons[y].children[0].classList.remove(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitch;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoise;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgMod;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._buttons[y].style.marginTop = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t\tthis._buttons[y].style.marginBottom = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.remove(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.add(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedPitchChannels != this._doc.song.pitchChannelCount || this._renderedNoiseChannels != this._doc.song.noiseChannelCount) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tlet val: number = (y + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._renderedPitchChannels = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannels = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannels = this._doc.song.modChannelCount;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tthis._editorHeight = Config.barEditorHeight + this._doc.song.getChannelCount() * channelHeight;\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.container.style.height = this._editorHeight + \"px\";\r\n\r\n\t\t\tif (this._renderedChannelHeight < 27) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-4px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-4px\");\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._renderedChannelHeight < 30) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-1px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeOctave } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Piano } from \"./Piano\";\r\n\r\n//namespace beepbox {\r\nexport class OctaveScrollBar {\r\n\tprivate readonly _editorWidth: number = 20;\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _notchHeight: number = 4.0;\r\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\r\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\r\n\tprivate _barHeight: number = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4, height: this._barHeight });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2, height: this._barHeight });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;\", width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 \" + this._editorHeight, preserveAspectRatio: \"none\" });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\" }, this._svg);\r\n\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _barBottom: number;\r\n\tprivate _renderedBarBottom: number = -1;\r\n\tprivate _renderedBarHeight: number = -1;\r\n\tprivate _change: ChangeOctave | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument, private _piano: Piano) {\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\r\n\t\tthis._svg.appendChild(this._handle);\r\n\r\n\t\t// notches:\r\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\r\n\t\t\tthis._svg.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight }));\r\n\t\t}\r\n\r\n\t\tthis._svg.appendChild(this._handleHighlight);\r\n\t\tthis._svg.appendChild(this._upHighlight);\r\n\t\tthis._svg.appendChild(this._downHighlight);\r\n\r\n\t\tconst center: number = this._editorWidth * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowWidth: number = 6;\r\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\r\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tif (this._dragging) {\r\n\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : currentOctave;\r\n\r\n\t\t\tlet octave: number = currentOctave;\r\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\toctave++;\r\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave > 0) {\r\n\t\t\t\t\toctave--;\r\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, octave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDown) {\r\n\t\t\tif (this._dragging) {\r\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\t\t} else {\r\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\r\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\r\n\t\t\t\t\tif (currentOctave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave + 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (currentOctave > 0) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave - 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showUpHighlight: boolean = false;\r\n\t\tlet showDownHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\r\n\t\t\t\tshowUpHighlight = true;\r\n\t\t\t} else if (this._mouseY > this._barBottom) {\r\n\t\t\t\tshowDownHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.song.channels[this._doc.channel].octave);\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\t// Re-calculate bar height\r\n\t\tthis._barHeight = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\r\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) ? \"hidden\" : \"visible\";\r\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedBarHeight != this._barHeight) {\r\n\t\t\tthis._renderedBarBottom = this._barBottom;\r\n\t\t\tthis._renderedBarHeight = this._barHeight;\r\n\t\t\tthis._handle.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handleHighlight.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handle.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\t\t\tthis._handleHighlight.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Chord, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, ModSetting } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeVolumeBend, ChangePitchBend, ChangePitchAdded } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\r\n\tconst clone: T = <T>node.cloneNode(false);\r\n\tnode.parentNode!.replaceChild(clone, node);\r\n\treturn clone;\r\n}\r\n\r\nclass PatternCursor {\r\n\tpublic valid: boolean = false;\r\n\tpublic prevNote: Note | null = null;\r\n\tpublic curNote: Note | null = null;\r\n\tpublic nextNote: Note | null = null;\r\n\tpublic pitch: number = 0;\r\n\tpublic pitchIndex: number = -1;\r\n\tpublic curIndex: number = 0;\r\n\tpublic start: number = 0;\r\n\tpublic end: number = 0;\r\n\tpublic part: number = 0;\r\n\tpublic exactPart: number = 0;\r\n\tpublic nearPinIndex: number = 0;\r\n\tpublic pins: NotePin[] = [];\r\n}\r\n\r\nexport class PatternEditor {\r\n\tpublic controlMode: boolean = false;\r\n\tpublic shiftMode: boolean = false;\r\n\tprivate readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgModBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorModBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgBackground: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\" });\r\n\tprivate _svgNoteContainer: SVGSVGElement = SVG.svg();\r\n\tprivate readonly _svgPlayhead: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\" });\r\n\tprivate readonly _svgPreview: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\" });\r\n\tpublic modDragValueLabel: HTMLDivElement = HTML.div({ width: \"90\", \"text-anchor\": \"start\", contenteditable: \"true\", style: \"display: flex, justify-content: center; align-items:center; position:absolute; pointer-events: none;\", \"dominant-baseline\": \"central\", });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\" },\r\n\t\tSVG.defs(\r\n\t\t\tthis._svgNoteBackground,\r\n\t\t\tthis._svgDrumBackground,\r\n\t\t\tthis._svgModBackground,\r\n\t\t),\r\n\t\tthis._svgBackground,\r\n\t\tthis._selectionRect,\r\n\t\tthis._svgNoteContainer,\r\n\t\tthis._svgPreview,\r\n\t\tthis._svgPlayhead,\r\n\t);\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\" }, this._svg, this.modDragValueLabel);\r\n\r\n\tprivate readonly _defaultModBorder: number = 34;\r\n\tprivate readonly _backgroundPitchRows: SVGRectElement[] = [];\r\n\tprivate readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\r\n\tprivate readonly _backgroundModRow: SVGRectElement = SVG.rect();\r\n\r\n\tprivate _editorWidth: number;\r\n\r\n\tprivate _modDragValueLabelLeft: number = 0;\r\n\tprivate _modDragValueLabelTop: number = 0;\r\n\tprivate _modDragValueLabelWidth: number = 0;\r\n\tpublic editingModLabel: boolean = false;\r\n\tprivate _modDragStartValue: number = 0;\r\n\tprivate _modDragPin: NotePin;\r\n\tprivate _modDragNote: Note;\r\n\tprivate _modDragSetting: ModSetting;\r\n\tprivate _modDragLowerBound: number = 0;\r\n\tprivate _modDragUpperBound: number = 6;\r\n\r\n\tprivate _editorHeight: number;\r\n\tprivate _partWidth: number;\r\n\tprivate _pitchHeight: number = -1;\r\n\tprivate _pitchBorder: number;\r\n\tprivate _pitchCount: number;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mouseDragging: boolean = false;\r\n\tprivate _mouseHorizontal: boolean = false;\r\n\tprivate _usingTouch: boolean = false;\r\n\tprivate _copiedPinChannels: NotePin[][] = [];\r\n\tprivate _copiedPins: NotePin[];\r\n\tprivate _mouseXStart: number = 0;\r\n\tprivate _mouseYStart: number = 0;\r\n\tprivate _touchTime: number = 0;\r\n\tprivate _shiftHeld: boolean = false;\r\n\tprivate _dragConfirmed: boolean = false;\r\n\tprivate _draggingStartOfSelection: boolean = false;\r\n\tprivate _draggingEndOfSelection: boolean = false;\r\n\tprivate _draggingSelectionContents: boolean = false;\r\n\tprivate _dragTime: number = 0;\r\n\tprivate _dragPitch: number = 0;\r\n\tprivate _dragVolume: number = 0;\r\n\tprivate _dragVisible: boolean = false;\r\n\tprivate _dragChange: UndoableChange | null = null;\r\n\tprivate _changePatternSelection: UndoableChange | null = null;\r\n\tprivate _lastChangeWasPatternSelection: boolean = false;\r\n\tprivate _cursor: PatternCursor = new PatternCursor();\r\n\tprivate _stashCursorPinVols: number[][] = [];\r\n\tprivate _pattern: Pattern | null = null;\r\n\tprivate _playheadX: number = 0.0;\r\n\tprivate _octaveOffset: number = 0;\r\n\tprivate _renderedWidth: number = -1;\r\n\tprivate _renderedHeight: number = -1;\r\n\tprivate _renderedBeatWidth: number = -1;\r\n\tprivate _renderedPitchHeight: number = -1;\r\n\tprivate _renderedFifths: boolean = false;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedRhythm: number = -1;\r\n\tprivate _renderedPitchChannelCount: number = -1;\r\n\tprivate _renderedNoiseChannelCount: number = -1;\r\n\tprivate _renderedModChannelCount: number = -1;\r\n\tprivate _followPlayheadBar: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\r\n\t\tfor (let i: number = 0; i < this._doc.song.edo; i++) {\r\n\t\t// for (let i: number = 0; i < Config.pitchesPerOctave; i++) {\r\n\t\t\tconst rectangle: SVGRectElement = SVG.rect();\r\n\t\t\trectangle.setAttribute(\"x\", \"1\");\r\n\t\t\trectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\r\n\t\t\tthis._svgNoteBackground.appendChild(rectangle);\r\n\t\t\tthis._backgroundPitchRows[i] = rectangle;\r\n\t\t}\r\n\r\n\t\tthis._backgroundDrumRow.setAttribute(\"x\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"y\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgDrumBackground.appendChild(this._backgroundDrumRow);\r\n\t\tthis._backgroundModRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgModBackground.appendChild(this._backgroundModRow);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\t\tthis._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\t\tthis._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\t\tthis._svg.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t\tthis.modDragValueLabel.addEventListener(\"input\", this._validateModDragLabelInput);\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.style.display = \"none\";\r\n\t\t\tthis._svg.appendChild(SVG.rect({ x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\" }));\r\n\t\t}\r\n\r\n\t\tthis.resetCopiedPins();\r\n\t}\r\n\r\n\tprivate _validateModDragLabelInput = (event: Event): void => {\r\n\t\tconst label: HTMLDivElement = <HTMLDivElement>event.target;\r\n\r\n\t\t// Special case - when user is typing a number between zero and min, allow it (the alternative is quite annoying, when min is nonzero)\r\n\t\tlet converted: number = Number(label.innerText);\r\n\t\tif (!isNaN(converted) && converted >= 0 && converted < this._modDragLowerBound)\r\n\t\t\treturn;\r\n\r\n\t\t// Another special case - allow \"\" e.g. the empty string and a single negative sign, but don't do anything about it.\r\n\t\tif (label.innerText != \"\" && label.innerText != \"-\") {\r\n\t\t\t// Force NaN results to be 0\r\n\t\t\tif (isNaN(converted)) {\r\n\t\t\t\tconverted = this._modDragLowerBound;\r\n\t\t\t\tlabel.innerText = \"\" + this._modDragLowerBound;\r\n\t\t\t}\r\n\r\n\t\t\tlet presValue: number = Math.floor(Math.max(Number(this._modDragLowerBound), Math.min(Number(this._modDragUpperBound), converted)));\r\n\t\t\tif (label.innerText != presValue + \"\")\r\n\t\t\t\tlabel.innerText = presValue + \"\";\r\n\r\n\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._doc.song.realToModValue(presValue, this._modDragSetting), this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getMaxDivision(): number {\r\n\t\tconst rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t\tif (rhythmStepsPerBeat % 4 == 0) {\r\n\t\t\t// Beat is divisible by 2 (and 4).\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t} else if (rhythmStepsPerBeat % 3 == 0) {\r\n\t\t\t// Beat is divisible by 3.\r\n\t\t\treturn Config.partsPerBeat / 3;\r\n\t\t} else if (rhythmStepsPerBeat % 2 == 0) {\r\n\t\t\t// Beat is divisible by 2.\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t}\r\n\t\treturn Config.partsPerBeat;\r\n\t}\r\n\r\n\tprivate _getMinDivision(): number {\r\n\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t}\r\n\r\n\tprivate _snapToMinDivision(input: number): number {\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\treturn Math.floor(input / minDivision) * minDivision;\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tthis._cursor = new PatternCursor();\r\n\t\tif (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\r\n\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\tthis._cursor.exactPart = this._mouseX / this._partWidth;\r\n\t\tthis._cursor.part =\r\n\t\t\tMath.floor(\r\n\t\t\t\tMath.max(0,\r\n\t\t\t\t\tMath.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\r\n\t\t\t\t)\r\n\t\t\t\t/ minDivision) * minDivision;\r\n\r\n\t\tlet foundNote: boolean = false;\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tif (note.end <= this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!foundNote)\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t\t\tfoundNote = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Only increment index if the sought note has been found... or if this note truly starts before the other\r\n\t\t\t\t\t\telse if (!foundNote || (this._cursor.curNote != null && note.start < this._cursor.curNote.start))\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && !this.editingModLabel) {\r\n\r\n\t\t\t\tif (this._pattern.notes[this._cursor.curIndex] != null && this._cursor.curNote != null) {\r\n\r\n\t\t\t\t\tlet pinIdx: number = 0;\r\n\r\n\t\t\t\t\twhile (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time < this._cursor.exactPart && pinIdx < this._cursor.curNote.pins.length) {\r\n\t\t\t\t\t\tpinIdx++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Decide if the previous pin is closer\r\n\t\t\t\t\tif (pinIdx > 0) {\r\n\t\t\t\t\t\tif (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time - this._cursor.exactPart > this._cursor.exactPart - (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx - 1].time)) {\r\n\t\t\t\t\t\t\tpinIdx--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#666688\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\r\n\t\t\t\t\tlet setting: ModSetting = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - this._cursor.curNote.pitches[0]];\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._cursor.curNote.pins[pinIdx].volume, setting);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time) - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(this._cursor.curNote.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis._modDragStartValue = this._cursor.curNote.pins[pinIdx].volume;\r\n\t\t\t\t\tthis._modDragNote = this._cursor.curNote;\r\n\t\t\t\t\tthis._modDragPin = this._cursor.curNote.pins[pinIdx];\r\n\t\t\t\t\tthis._modDragLowerBound = this._doc.song.modValueToReal(0, setting);\r\n\t\t\t\t\tthis._modDragUpperBound = this._doc.song.modValueToReal(this._doc.song.mstMaxVols.get(setting) as number, setting);\r\n\t\t\t\t\tthis._modDragSetting = setting;\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!this.editingModLabel) {\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t}\r\n\r\n\t\tlet mousePitch: number = this._findMousePitch(this._mouseY);\r\n\r\n\t\tif (this._cursor.curNote != null) {\r\n\r\n\t\t\tthis._cursor.start = this._cursor.curNote.start;\r\n\t\t\tthis._cursor.end = this._cursor.curNote.end;\r\n\t\t\tthis._cursor.pins = this._cursor.curNote.pins;\r\n\r\n\t\t\tlet interval: number = 0;\r\n\t\t\tlet error: number = 0;\r\n\t\t\tlet prevPin: NotePin;\r\n\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\tfor (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\r\n\t\t\t\tprevPin = nextPin;\r\n\t\t\t\tnextPin = this._cursor.curNote.pins[j];\r\n\t\t\t\tconst leftSide: number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\r\n\t\t\t\tconst rightSide: number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\r\n\t\t\t\tif (this._mouseX > rightSide) continue;\r\n\t\t\t\tif (this._mouseX < leftSide) throw new Error();\r\n\t\t\t\tconst intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\r\n\t\t\t\tconst arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\r\n\t\t\t\tconst bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\r\n\t\t\t\tinterval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\r\n\t\t\t\terror = arc * bendHeight + 0.95;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet minInterval: number = Number.MAX_VALUE;\r\n\t\t\tlet maxInterval: number = -Number.MAX_VALUE;\r\n\t\t\tlet bestDistance: number = Number.MAX_VALUE;\r\n\t\t\tfor (const pin of this._cursor.curNote.pins) {\r\n\t\t\t\tif (minInterval > pin.interval) minInterval = pin.interval;\r\n\t\t\t\tif (maxInterval < pin.interval) maxInterval = pin.interval;\r\n\t\t\t\tconst pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\r\n\t\t\t\tif (bestDistance > pinDistance) {\r\n\t\t\t\t\tbestDistance = pinDistance;\r\n\t\t\t\t\tthis._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmousePitch -= interval;\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : this._doc.song.maxPitch) - maxInterval);\r\n\t\t\t// this._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxInterval);\r\n\r\n\t\t\t// Snap to nearby existing note if present.\r\n\t\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tlet nearest: number = error;\r\n\t\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\t\tconst distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\r\n\t\t\t\t\tif (distance > nearest) continue;\r\n\t\t\t\t\tnearest = distance;\r\n\t\t\t\t\tthis._cursor.pitch = this._cursor.curNote.pitches[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\tif (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\r\n\t\t\t\t\tthis._cursor.pitchIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//console.log(\"default\");\r\n\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, 0, this._doc.song.maxPitch);\r\n\t\t\t// this._cursor.pitch = this._snapToPitch(mousePitch, 0, Config.maxPitch);\r\n\t\t\tconst defaultLength: number = this._copiedPins[this._copiedPins.length - 1].time;\r\n\t\t\tconst fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\r\n\t\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\t\tconst modMouse: number = this._cursor.part % Config.partsPerBeat;\r\n\t\t\tif (defaultLength == 1) {\r\n\t\t\t\tthis._cursor.start = this._cursor.part;\r\n\t\t\t} else if (defaultLength > Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t} else if (defaultLength == Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tif (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\r\n\t\t\t\t\tthis._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tlet division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\r\n\t\t\t\twhile (division < maxDivision && Config.partsPerBeat % division != 0) {\r\n\t\t\t\t\tdivision++;\r\n\t\t\t\t}\r\n\t\t\t\tthis._cursor.start += Math.floor(modMouse / division) * division;\r\n\t\t\t}\r\n\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\tlet forceStart: number = 0;\r\n\t\t\tlet forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\tif (this._cursor.prevNote != null) {\r\n\t\t\t\tforceStart = this._cursor.prevNote.end;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.nextNote != null) {\r\n\t\t\t\tforceEnd = this._cursor.nextNote.start;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\t\tif (this._cursor.end > forceEnd) {\r\n\t\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursor.end > forceEnd) {\r\n\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\tthis._cursor.start = this._cursor.end - defaultLength;\r\n\t\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._cursor.end - this._cursor.start == defaultLength) {\r\n\t\t\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\t\t\t\tthis._cursor.pins = this._copiedPins;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.pins = [];\r\n\t\t\t\tfor (const oldPin of this._copiedPins) {\r\n\t\t\t\t\tif (oldPin.time <= this._cursor.end - this._cursor.start) {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t\t\tif (oldPin.time == this._cursor.end - this._cursor.start) break;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t// Return cursor to stashed cursor volumes (so pins aren't destroyed by moving the preview around several volume scales.)\r\n\t\t\t\tif (this._stashCursorPinVols != null && this._stashCursorPinVols[this._doc.channel] != null) {\r\n\t\t\t\t\tfor (let pin: number = 0; pin < this._cursor.pins.length; pin++) {\r\n\t\t\t\t\t\tthis._cursor.pins[pin].volume = this._stashCursorPinVols[this._doc.channel][pin];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Scale volume of copied pin to cap for this row\r\n\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._cursor.valid = true;\r\n\r\n\t}\r\n\r\n\tprivate _cursorIsInSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\r\n\t}\r\n\r\n\tprivate _cursorAtStartOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\r\n\t}\r\n\r\n\tprivate _cursorAtEndOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\r\n\t}\r\n\r\n\tprivate _findMousePitch(pixelY: number): number {\r\n\t\treturn Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\r\n\t}\r\n\r\n\tprivate _snapToPitch(guess: number, min: number, max: number): number {\r\n\t\tif (guess < min) guess = min;\r\n\t\tif (guess > max) guess = max;\r\n\r\n\t\t// TODO: Figure out how scales should be implemented, and figure this logic out\r\n\r\n\t\treturn Math.floor(guess);\r\n\r\n\t\t// const scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\t// if (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t// \treturn Math.floor(guess);\r\n\t\t// } else {\r\n\t\t\t// let topPitch: number = Math.floor(guess) + 1;\r\n\t\t\t// let bottomPitch: number = Math.floor(guess) - 1;\r\n\r\n\t\t\t// while (!scale[topPitch % Config.pitchesPerOctave]) {\r\n\t\t\t// \ttopPitch++;\r\n\t\t\t// }\r\n\t\t\t// while (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\r\n\t\t\t// \tbottomPitch--;\r\n\t\t\t// }\r\n\t\t\t// if (topPitch > max) {\r\n\t\t\t// \tif (bottomPitch < min) {\r\n\t\t\t// \t\treturn min;\r\n\t\t\t// \t} else {\r\n\t\t\t// \t\treturn bottomPitch;\r\n\t\t\t// \t}\r\n\t\t\t// } else if (bottomPitch < min) {\r\n\t\t\t// \treturn topPitch;\r\n\t\t\t// }\r\n\t\t\t// let topRange: number = topPitch;\r\n\t\t\t// let bottomRange: number = bottomPitch + 1;\r\n\t\t\t// if (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t// \ttopRange -= 0.5;\r\n\t\t\t// }\r\n\t\t\t// if (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t// \tbottomRange += 0.5;\r\n\t\t\t// }\r\n\t\t\t// return guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\r\n\t\t// }\r\n\t}\r\n\r\n\tprivate _copyPins(note: Note): void {\r\n\t\tthis._copiedPins = [];\r\n\t\tfor (const oldPin of note.pins) {\r\n\t\t\tthis._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i < this._copiedPins.length - 1;) {\r\n\t\t\tif (this._copiedPins[i - 1].volume == this._copiedPins[i].volume &&\r\n\t\t\t\tthis._copiedPins[i].volume == this._copiedPins[i + 1].volume) {\r\n\t\t\t\tthis._copiedPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._copiedPinChannels[this._doc.channel] = this._copiedPins;\r\n\r\n\t\tthis._stashCursorPinVols[this._doc.channel] = [];\r\n\t\tfor (let pin: number = 0; pin < this._copiedPins.length; pin++) {\r\n\t\t\tthis._stashCursorPinVols[this._doc.channel].push(this._copiedPins[pin].volume);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic resetCopiedPins = (): void => {\r\n\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\tlet cap: number = this._doc.song.getVolumeCap(false);\r\n\t\tthis._copiedPinChannels.length = this._doc.song.getChannelCount();\r\n\t\tthis._stashCursorPinVols.length = this._doc.song.getChannelCount();\r\n\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, cap];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.getChannelCount(); i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\r\n\t\tif (this._usingTouch && !this.shiftMode && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tthis._shiftHeld = true;\r\n\t\t\tthis._dragConfirmed = false;\r\n\t\t\tthis._whenCursorPressed();\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\r\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\r\n\r\n\t\tif (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tconst modPlayhead: number = this._doc.synth.playhead - playheadBar;\r\n\t\t\tif (Math.abs(modPlayhead - this._playheadX) > 0.1) {\r\n\t\t\t\tthis._playheadX = modPlayhead;\r\n\t\t\t} else {\r\n\t\t\t\tthis._playheadX += (modPlayhead - this._playheadX) * 0.2;\r\n\t\t\t}\r\n\t\t\tthis._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tif (this._doc.synth.playing && this._doc.autoFollow && this._followPlayheadBar != playheadBar) {\r\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\t\tthis._followPlayheadBar = playheadBar;\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._usingTouch = false;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = true;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._touchTime = performance.now();\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tpublic stopEditingModLabel(discardChanges: boolean) {\r\n\t\tif (this.editingModLabel) {\r\n\t\t\tthis.editingModLabel = false;\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t}\r\n\t\t\t// Return pin to its state before text editing\r\n\t\t\tif (discardChanges) {\r\n\t\t\t\tthis._modDragPin.volume = this._modDragStartValue;\r\n\r\n\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._modDragStartValue, this._modDragSetting);\r\n\r\n\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._modDragStartValue, this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t}\r\n\r\n\t\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\t\tif (continuousState) {\r\n\t\t\t\tif (this._dragChange != null) {\r\n\t\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorPressed(): void {\r\n\t\t// Check for click on mod value label\r\n\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this.modDragValueLabel.style.getPropertyValue(\"display\") != \"none\" &&\r\n\t\t\tthis._mouseX > +this._modDragValueLabelLeft - 6 &&\r\n\t\t\tthis._mouseX < +this._modDragValueLabelLeft + this._modDragValueLabelWidth + 6 &&\r\n\t\t\tthis._mouseY > +this._modDragValueLabelTop - 8 &&\r\n\t\t\tthis._mouseY < +this._modDragValueLabelTop + 11) {\r\n\t\t\t// Mod value label clicked, select it\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"fill\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"true\");\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.selectAllChildren(this.modDragValueLabel);\r\n\t\t\t}\r\n\r\n\t\t\twindow.setTimeout(() => { this.modDragValueLabel.focus(); });\r\n\t\t\tthis.editingModLabel = true;\r\n\t\t} else {\r\n\t\t\tthis.stopEditingModLabel(false);\r\n\t\t\tif (this._doc.enableNotePreview) this._doc.synth.maintainLiveInput();\r\n\t\t\tthis._mouseDown = true;\r\n\t\t\tthis._mouseXStart = this._mouseX;\r\n\t\t\tthis._mouseYStart = this._mouseY;\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\tthis._draggingStartOfSelection = true;\r\n\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\tthis._draggingEndOfSelection = true;\r\n\t\t\t} else if (this._shiftHeld) {\r\n\t\t\t\tif ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\t\tconst end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\tthis._draggingSelectionContents = true;\r\n\t\t\t} else if (this._cursor.valid && this._cursor.curNote == null) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t// If clicking in empty space, the result will be adding a note,\r\n\t\t\t\t// so we can safely add it immediately. Note that if clicking on\r\n\t\t\t\t// or near an existing note, the result will depend on whether\r\n\t\t\t\t// a drag follows, so we couldn't add the note yet without being\r\n\t\t\t\t// confusing.\r\n\r\n\t\t\t\tconst note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, 3, this._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\tnote.pins = [];\r\n\t\t\t\tfor (const oldPin of this._cursor.pins) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\r\n\r\n\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t// Play the new note out loud if enabled.\r\n\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\tthis._doc.synth.liveInputPitches = [this._cursor.pitch];\r\n\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\r\n\t\t// HACK: Undoable pattern changes rely on persistent instance\r\n\t\t// references. Loading song from hash via undo/redo breaks that,\r\n\t\t// so changes are no longer undoable and the cursor status may be\r\n\t\t// invalid. Abort further drag changes until the mouse is released.\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\r\n\t\tif (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tconst dx: number = this._mouseX - this._mouseXStart;\r\n\t\t\tconst dy: number = this._mouseY - this._mouseYStart;\r\n\t\t\tif (Math.sqrt(dx * dx + dy * dy) > 5) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._shiftHeld && this._mouseHorizontal && Math.abs(this._mouseXStart - this._mouseX) > 5) {\r\n\t\t\tthis._dragConfirmed = true;\r\n\t\t}\r\n\r\n\t\tif (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tconst minDivision: number = this._getMinDivision();\r\n\t\t\tconst currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\r\n\t\t\tif (this._draggingStartOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingEndOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingSelectionContents) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (this._mouseDragging && pattern != null) {\r\n\t\t\t\t\tthis._dragChange!.undo();\r\n\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\t\tconst notesInScale: number = Config.scales[this._doc.song.scale].flags.filter(x => x).length;\r\n\t\t\t\t\tconst pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : this._doc.song.edo / notesInScale;\r\n\t\t\t\t\t// const pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : Config.pitchesPerOctave / notesInScale;\r\n\t\t\t\t\tconst draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\r\n\t\t\t\t\tconst draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\r\n\t\t\t\t\tsequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (this._shiftHeld && this._dragConfirmed) {\r\n\r\n\t\t\t\tif (this._mouseDragging) {\r\n\t\t\t\t\tlet start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\tlet end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tstart = Math.max(start, this._cursor.curNote.start);\r\n\t\t\t\t\t\tend = Math.min(end, this._cursor.curNote.end);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Todo: The following two conditional blocks could maybe be refactored.\r\n\t\t\t\t\tif (currentPart < start) {\r\n\t\t\t\t\t\tstart = 0;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (start <= part && part <= currentPart) {\r\n\t\t\t\t\t\t\t\tstart = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPart > end) {\r\n\t\t\t\t\t\tend = Config.partsPerBeat * this._doc.song.beatsPerBar;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (currentPart < part && part < end) {\r\n\t\t\t\t\t\t\t\tend = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\tthis._updateSelection();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._cursor.curNote == null) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\r\n\t\t\t\t\tlet backwards: boolean;\r\n\t\t\t\t\tlet directLength: number;\r\n\t\t\t\t\tif (currentPart < this._cursor.start) {\r\n\t\t\t\t\t\tbackwards = true;\r\n\t\t\t\t\t\tdirectLength = this._cursor.start - currentPart;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbackwards = false;\r\n\t\t\t\t\t\tdirectLength = currentPart - this._cursor.start + minDivision;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet defaultLength: number = minDivision;\r\n\t\t\t\t\tfor (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\r\n\t\t\t\t\t\tif (minDivision == 1) {\r\n\t\t\t\t\t\t\tif (i < 5) {\r\n\t\t\t\t\t\t\t\t// Allow small lengths.\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat / 2.0) {\r\n\t\t\t\t\t\t\t\tif (i % 3 != 0 && i % 4 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat * 1.5) {\r\n\t\t\t\t\t\t\t\tif (i % 6 != 0 && i % 8 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i % Config.partsPerBeat != 0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (i >= 5 * minDivision &&\r\n\t\t\t\t\t\t\t\ti % Config.partsPerBeat != 0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 4.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 2.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 4.0 / 3.0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst blessedLength: number = i;\r\n\t\t\t\t\t\tif (blessedLength == directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (blessedLength < directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (blessedLength > directLength) {\r\n\t\t\t\t\t\t\tif (defaultLength < directLength - minDivision) {\r\n\t\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet start: number;\r\n\t\t\t\t\tlet end: number;\r\n\r\n\t\t\t\t\tif (backwards) {\r\n\t\t\t\t\t\tend = this._cursor.start;\r\n\t\t\t\t\t\tstart = end - defaultLength;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstart = this._cursor.start;\r\n\t\t\t\t\t\tend = start + defaultLength;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\t\tif (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (start < end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\t// Using parameter skipNote to force proper \"collision\" checking vis-a-vis pitch for mod channels.\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end, new Note(this._cursor.pitch, 0, 0, 0)));\r\n\t\t\t\t\t\tlet i: number;\r\n\t\t\t\t\t\tfor (i = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\tif (pattern.notes[i].start >= end) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst theNote: Note = new Note(this._cursor.pitch, start, end,\r\n\t\t\t\t\t\t\tthis._doc.song.getNewNoteVolume(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch),\r\n\t\t\t\t\t\t\tthis._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\r\n\t\t\t\t\t\tthis._copyPins(theNote);\r\n\r\n\t\t\t\t\t\tthis._dragTime = backwards ? start : end;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.pitch;\r\n\t\t\t\t\t\tthis._dragVolume = theNote.pins[backwards ? 0 : 1].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet prevPattern: Pattern | null = this._pattern;\r\n\r\n\t\t\t\t\tthis._pattern = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && prevPattern != this._pattern) {\r\n\t\t\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\t\t\tthis._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (this._mouseHorizontal) {\r\n\r\n\t\t\t\t\t//console.log(\"this._mouseHorizontal\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\r\n\r\n\t\t\t\t\tconst shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\r\n\t\t\t\t\tlet shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\r\n\t\t\t\t\tif (shiftedTime < 0) shiftedTime = 0;\r\n\t\t\t\t\tif (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tif (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\r\n\t\t\t\t\t\tshiftedTime >= this._cursor.curNote.end && this._cursor.nearPinIndex == 0) {\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\r\n\t\t\t\t\t\tthis._dragVisible = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.min(this._cursor.curNote.start, shiftedTime);\r\n\t\t\t\t\t\tconst end: number = Math.max(this._cursor.curNote.end, shiftedTime);\r\n\r\n\t\t\t\t\t\tthis._dragTime = shiftedTime;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\r\n\t\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\r\n\t\t\t\t\t\tsequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime));\r\n\t\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this._cursor.pitchIndex == -1 || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\t\t\t//console.log(\"this._cursor.pitchIndex == -1\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst bendPart: number =\r\n\t\t\t\t\t\tMath.max(this._cursor.curNote.start,\r\n\t\t\t\t\t\t\tMath.min(this._cursor.curNote.end,\r\n\t\t\t\t\t\t\t\tMath.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) - this._cursor.curNote.start;\r\n\r\n\t\t\t\t\tlet prevPin: NotePin;\r\n\t\t\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\t\t\tlet bendVolume: number = 0;\r\n\t\t\t\t\tlet bendInterval: number = 0;\r\n\t\t\t\t\tlet cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\r\n\t\t\t\t\t// Dragging gets a bit faster after difference in drag counts is >8.\r\n\t\t\t\t\tlet dragFactorSlow: number = 25.0 / Math.pow(cap, 0.4);\r\n\t\t\t\t\tlet dragFactorFast: number = 22.0 / Math.pow(cap, 0.5);\r\n\t\t\t\t\tlet dragSign: number = (this._mouseYStart > this._mouseY ? 1 : -1);\r\n\t\t\t\t\tlet dragCounts: number = Math.min(Math.abs(this._mouseYStart - this._mouseY) / dragFactorSlow, 8) + Math.max(0, Math.abs(this._mouseYStart - this._mouseY) / dragFactorFast - 8);\r\n\r\n\t\t\t\t\t// Note volume drag overrides attempts to make a pattern selection\r\n\t\t\t\t\tif (dragCounts > 0) {\r\n\t\t\t\t\t\tthis._shiftHeld = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\r\n\t\t\t\t\t\tprevPin = nextPin;\r\n\t\t\t\t\t\tnextPin = this._cursor.curNote.pins[i];\r\n\t\t\t\t\t\tif (bendPart > nextPin.time) continue;\r\n\t\t\t\t\t\tif (bendPart < prevPin.time) throw new Error();\r\n\t\t\t\t\t\tconst volumeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\r\n\t\t\t\t\t\tbendVolume = Math.round(prevPin.volume * (1.0 - volumeRatio) + nextPin.volume * volumeRatio + dragSign * dragCounts);\r\n\t\t\t\t\t\t// If not in fine control mode, round to 0~2~4~6 (normal 4 settings)\r\n\t\t\t\t\t\tif (this.controlMode == false && this._doc.alwaysFineNoteVol == false && !this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\t\tbendVolume = Math.floor(bendVolume / 2) * 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bendVolume < 0) bendVolume = 0;\r\n\t\t\t\t\t\tif (bendVolume > cap) bendVolume = cap;\r\n\t\t\t\t\t\tbendInterval = this._snapToPitch(prevPin.interval * (1.0 - volumeRatio) + nextPin.interval * volumeRatio + this._cursor.curNote.pitches[0], 0, this._doc.song.maxPitch) - this._cursor.curNote.pitches[0];\r\n\t\t\t\t\t\t// bendInterval = this._snapToPitch(prevPin.interval * (1.0 - volumeRatio) + nextPin.interval * volumeRatio + this._cursor.curNote.pitches[0], 0, Config.maxPitch) - this._cursor.curNote.pitches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._dragTime = this._cursor.curNote.start + bendPart;\r\n\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\r\n\t\t\t\t\tthis._dragVolume = bendVolume;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._cursor.curNote, bendPart, bendVolume, bendInterval, this.shiftMode));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log(\"final else\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tlet bendStart: number;\r\n\t\t\t\t\tlet bendEnd: number;\r\n\t\t\t\t\tif (this._mouseX >= this._mouseXStart) {\r\n\t\t\t\t\t\tbendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\r\n\t\t\t\t\t\tbendEnd = currentPart + minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\r\n\t\t\t\t\t\tbendEnd = currentPart;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < 0) bendEnd = 0;\r\n\t\t\t\t\tif (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\t\t\tif (bendEnd > this._cursor.curNote.end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < this._cursor.curNote.start) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet minPitch: number = Number.MAX_VALUE;\r\n\t\t\t\t\tlet maxPitch: number = -Number.MAX_VALUE;\r\n\t\t\t\t\tfor (const pitch of this._cursor.curNote.pitches) {\r\n\t\t\t\t\t\tif (minPitch > pitch) minPitch = pitch;\r\n\t\t\t\t\t\tif (maxPitch < pitch) maxPitch = pitch;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tminPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\t\t\t\t\tmaxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\r\n\t\t\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : this._doc.song.maxPitch) - maxPitch);\r\n\t\t\t\t\t\t// const bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxPitch);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._dragPitch, -minPitch, Config.modCount - 1);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tthis._dragTime = bendEnd;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!(this._mouseDown && this._cursor.valid && continuousState)) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event | null): void => {\r\n\t\tif (!this._cursor.valid) return;\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\tif (this._mouseDown && continuousState && this._dragChange != null) {\r\n\t\t\tif (this._draggingSelectionContents) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\r\n\t\t\t\tthis._setPatternSelection(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t} else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\tif (this._cursor.pitchIndex == -1) {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == Config.maxChordSize) {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\t\tthis._doc.synth.liveInputPitches = this._cursor.curNote.pitches.concat();\r\n\t\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == 1) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(sequence);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._draggingStartOfSelection = false;\r\n\t\tthis._draggingEndOfSelection = false;\r\n\t\tthis._draggingSelectionContents = false;\r\n\t\tthis._lastChangeWasPatternSelection = false;\r\n\t\tthis.modDragValueLabel.setAttribute(\"fill\", ColorConfig.secondaryText);\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _setPatternSelection(change: UndoableChange): void {\r\n\t\tthis._changePatternSelection = change;\r\n\t\tthis._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tif (this._usingTouch) {\r\n\t\t\tif (!this._mouseDown || !this._cursor.valid || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tconst x: number = this._partWidth * this._dragTime;\r\n\t\t\t\tconst y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\r\n\t\t\t\tconst radius: number = (this._pitchHeight - this._pitchBorder) / 2;\r\n\t\t\t\tconst width: number = 80;\r\n\t\t\t\tconst height: number = 60;\r\n\t\t\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\t//this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\r\n\r\n\t\t\t\tlet pathString: string = \"\";\r\n\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap) - height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap) + height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\r\n\t\t\t\tthis._svgPreview.setAttribute(\"d\", pathString);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionStart;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\t\tconst left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\r\n\t\t\t\t\tconst right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateSelection(): void {\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\tif (this._pattern != nextPattern && this._pattern != null) {\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && nextPattern != null) {\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tnextPattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t}\r\n\t\t\tthis._dragChange = null;\r\n\t\t\tthis._whenCursorReleased(null);\r\n\t\t}\r\n\t\tthis._pattern = nextPattern;\r\n\r\n\t\tthis._editorWidth = this.container.clientWidth;\r\n\t\tthis._editorHeight = this.container.clientHeight;\r\n\t\tthis._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\r\n\t\tthis._octaveOffset = this._doc.song.channels[this._doc.channel].octave * this._doc.song.edo;\r\n\t\t// this._octaveOffset = this._doc.song.channels[this._doc.channel].octave * Config.pitchesPerOctave;\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = this._defaultModBorder;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\r\n\t\t\tif (this._pattern != null) {\r\n\t\t\t\t// Force max height of mod channels to conform to settings.\r\n\t\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\t\tlet pitch = note.pitches[0]; // No pitch bend possible in mod channels.\r\n\t\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(true, this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\t\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\t// this._pitchCount = this._doc.windowPitchCount;\r\n\t\t\tthis._pitchCount = this._doc.song.edo * this._doc.windowOctaves + 1;\r\n\t\t}\r\n\r\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\r\n\r\n\t\tif (this._renderedRhythm != this._doc.song.rhythm ||\r\n\t\t\tthis._renderedPitchChannelCount != this._doc.song.pitchChannelCount ||\r\n\t\t\tthis._renderedNoiseChannelCount != this._doc.song.noiseChannelCount ||\r\n\t\t\tthis._renderedModChannelCount != this._doc.song.modChannelCount) {\r\n\t\t\tthis._renderedRhythm = this._doc.song.rhythm;\r\n\t\t\tthis._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannelCount = this._doc.song.modChannelCount;\r\n\t\t\tthis.resetCopiedPins();\r\n\t\t}\r\n\r\n\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\r\n\t\tif (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\r\n\t\t\tthis._renderedWidth = this._editorWidth;\r\n\t\t\tthis._renderedHeight = this._editorHeight;\r\n\t\t\tthis._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\r\n\t\t\tthis._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", \"0\");\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t}\r\n\r\n\t\tconst beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\r\n\t\tif (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight || this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedBeatWidth = beatWidth;\r\n\t\t\tthis._renderedPitchHeight = this._pitchHeight;\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * this._doc.song.edo));\r\n\t\t\t// this._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * Config.pitchesPerOctave));\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\r\n\t\t\tthis._svgModBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgModBackground.setAttribute(\"height\", \"\" + (this._pitchHeight));\r\n\t\t\tthis._svgModBackground.setAttribute(\"y\", \"\" + (this._pitchBorder / 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\tif (this._pitchHeight > this._pitchBorder) {\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"height\", \"\" + (this._pitchHeight - this._pitchBorder));\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\r\n\t\t\t// change number of SVGRectElements to current edo:\r\n\r\n\t\t\tlet _tempChildRectDifference = this._doc.song.edo - this._svgNoteBackground.childElementCount\r\n\r\n\t\t\tif (_tempChildRectDifference != 0) {\r\n\t\t\t\tif (_tempChildRectDifference > 0) { // create children\r\n\t\t\t\t\tfor (let j: number = 0; j < Math.abs(_tempChildRectDifference); j++) {\r\n\t\t\t\t\t\tconst rectangle: SVGRectElement = SVG.rect();\r\n\t\t\t\t\t\trectangle.setAttribute(\"x\", \"1\");\r\n\t\t\t\t\t\trectangle.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\t\t\t\t\tthis._svgNoteBackground.appendChild(rectangle);\r\n\t\t\t\t\t\tthis._backgroundPitchRows.push(rectangle);\r\n\t\t\t\t\t\t// this._backgroundPitchRows[this._backgroundPitchRows.length] = rectangle; // I could do this instead\r\n\t\t\t\t\t}\r\n\t\t\t\t} else { // < 0: kill children\r\n\t\t\t\t\tfor (let j: number = 0; j < Math.abs(_tempChildRectDifference); j++) {\r\n\t\t\t\t\t\tthis._svgNoteBackground.lastChild?.remove();\r\n\t\t\t\t\t\tthis._backgroundPitchRows.pop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j: number = 0; j < this._doc.song.edo; j++) {\r\n\t\t\t// for (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\t\t\t\tconst rectangle: SVGRectElement = this._backgroundPitchRows[j];\r\n\t\t\t\tconst y: number = (this._doc.song.edo - j) % this._doc.song.edo;\r\n\t\t\t\t// const y: number = (Config.pitchesPerOctave - j) % Config.pitchesPerOctave;\r\n\t\t\t\trectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\trectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\r\n\t\t\t\trectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\t\trectangle.setAttribute(\"fill\", (\r\n\t\t\t\t\t(j == Math.round(this._doc.song.edo * Math.log2(3 / 2)) && this._doc.showFifth)\r\n\t\t\t\t\t\t? ColorConfig.fifthNote\r\n\t\t\t\t\t\t: (j == 0 ? ColorConfig.tonic : ColorConfig.pitchBackground)\r\n\t\t\t\t\t));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tif (!this._mouseDown) this._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < this._doc.song.edo; j++) {\r\n\t\t// for (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\r\n\t\t\t// this._backgroundPitchRows[j].style.visibility = Config.scales[this._doc.song.scale].flags[j] ? \"visible\" : \"hidden\";\r\n\t\t\tthis._backgroundPitchRows[j].style.visibility = \"visible\";\r\n\t\t\t// TODO: Since the scales are all hardcoded for 12edo, I am disabling scales because above 12edo the notes above the first 12 are hidden by default.\r\n\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tif (!this._renderedDrums) {\r\n\t\t\t\tthis._renderedDrums = true;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tif (!this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = true;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorModBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._renderedDrums || this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._doc.showChannels) {\r\n\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\tfor (let channel: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1; channel >= 0; channel--) {\r\n\t\t\t\t\tif (channel == this._doc.channel) continue;\r\n\t\t\t\t\tif (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\r\n\r\n\t\t\t\t\tconst pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\r\n\t\t\t\t\tif (pattern2 == null) continue;\r\n\t\t\t\t\tfor (const note of pattern2.notes) {\r\n\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\tconst notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, this._doc.song.channels[channel].octave * this._doc.song.edo);\r\n\t\t\t\t\t\t\t// this._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, this._doc.song.channels[channel].octave * Config.pitchesPerOctave);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\t\tlet notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, false, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\tnotePath = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\r\n\t\t\t\t\tif (note.pitches.length > 1) {\r\n\t\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)];\r\n\t\t\t\t\t\tconst chord: Chord = instrument.getChord();\r\n\t\t\t\t\t\tif (!chord.harmonizes || chord.arpeggiates || chord.strumParts > 0) {\r\n\t\t\t\t\t\t\tlet oscillatorLabel: SVGTextElement = SVG.text();\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + 2));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"width\", \"30\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"text-anchor\", \"start\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\toscillatorLabel.textContent = \"\" + (i + 1);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(oscillatorLabel);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDragging && !this._mouseHorizontal && note == this._cursor.curNote) {\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#FFFFFF\");\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._dragVolume, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - note.pitches[0]]);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * this._dragTime - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(note.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showVolume: boolean, offset: number): void {\r\n\t\tconst totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\r\n\t\tconst endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\r\n\r\n\t\tlet nextPin: NotePin = pins[0];\r\n\r\n\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\r\n\t\tlet pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showVolume ? nextPin.volume / cap : 1.0)) + \" \";\r\n\r\n\t\tfor (let i: number = 1; i < pins.length; i++) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tfor (let i: number = pins.length - 2; i >= 0; i--) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tpathString += \"z\";\r\n\r\n\t\tsvgElement.setAttribute(\"d\", pathString);\r\n\t}\r\n\r\n\tprivate _pitchToPixelHeight(pitch: number): number {\r\n\t\treturn this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Instrument, ModSetting, ModStatus } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\nexport class Piano {\r\n\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _modContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _preview: HTMLDivElement = HTML.div({ style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;` });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\" },\r\n\t\tthis._pianoContainer,\r\n\t\tthis._drumContainer,\r\n\t\tthis._modContainer,\r\n\t\tthis._preview,\r\n\t);\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\r\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\r\n\tprivate readonly _modFirstLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modSecondLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountRects: SVGRectElement[] = [];\r\n\r\n\tprivate _pitchHeight: number;\r\n\tprivate _pitchCount: number;\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _cursorPitch: number;\r\n\tprivate _playedPitch: number = -1;\r\n\tprivate _renderedScale: number = -1;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedKey: number = -1;\r\n\tprivate _renderedPitchCount: number = -1;\r\n\r\n\tpublic forceRender(): void {\r\n\t\tthis._renderedScale = -1;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 0; i < this._doc.windowPitchCount; i++) {\r\n\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t}\r\n\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\r\n\t\t\tconst brightness: number = 1.0 + ((i - Config.drumCount / 2.0) / Config.drumCount) * 0.5;\r\n\t\t\tthis._drumContainer.appendChild(HTML.div({ class: \"drum-button\", style: `background-size: ${scale}% ${scale}%; filter: brightness(${brightness})` }));\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\r\n\r\n\t\t\tconst firstRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(-19px, 39px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst secondRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-end; transform-origin: center; transform: rotate(-90deg) translate(-26px, 42px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countText: SVGTextElement = SVG.text({ class: \"modulator-inverse-label\", fill: ColorConfig.modLabelPrimary, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(4px, 13px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countRect: SVGRectElement = SVG.rect({ width: \"12px\", height: \"9px\", fill: ColorConfig.indicatorPrimary, style: \"pointer-events: none; transform: translate(4px, 4px);\" });\r\n\r\n\t\t\tconst firstRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 66\", width: \"16px\", style: \"pointer-events: none; flex-grow: 1;\" }, [\r\n\t\t\t\tfirstRowText,\r\n\t\t\t]);\r\n\t\t\tconst countSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 14\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tcountRect,\r\n\t\t\t\tcountText,\r\n\t\t\t]);\r\n\t\t\tconst secondRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 80\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowText,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexRow1: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tcountSVG,\r\n\t\t\t\tfirstRowSVG,\r\n\t\t\t]);\r\n\t\t\tconst flexRow2: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column-reverse; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowSVG,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexContainer: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: row; justify-content: space-between; padding: 0px; width: 32px; height: 100%; overflow: hidden; pointer-events: none;\" }, [\r\n\t\t\t\tflexRow1,\r\n\t\t\t\tflexRow2,\r\n\t\t\t]);\r\n\r\n\t\t\tconst modKey: HTMLDivElement = HTML.div({ class: \"modulator-button\", style: \"background: \" + ColorConfig.modLabelPrimary + \";\" }, flexContainer);\r\n\t\t\tthis._modContainer.appendChild(modKey);\r\n\t\t\tthis._modFirstLabels.push(firstRowText);\r\n\t\t\tthis._modSecondLabels.push(secondRowText);\r\n\t\t\tthis._modCountLabels.push(countText);\r\n\t\t\tthis._modCountRects.push(countRect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t}\r\n\r\n\tprivate _updateCursorPitch(): void {\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (this._mouseY / this._pitchHeight)));\r\n\t\tif (scale[Math.floor(mousePitch) % 12] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\r\n\t\t\twhile (!scale[topPitch % 12]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % 12]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % 12 == 0 || topPitch % 12 == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % 12 == 0 || bottomPitch % 12 == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _playLiveInput(): void {\r\n\t\tconst currentPitch: number = this._cursorPitch + this._doc.song.channels[this._doc.channel].octave * 12;\r\n\t\tif (this._playedPitch == currentPitch) return;\r\n\t\tthis._playedPitch = currentPitch;\r\n\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\r\n\t\tthis._doc.synth.liveInputPitches = [this._playedPitch];\r\n\t\tthis._doc.synth.liveInputStarted = true;\r\n\t}\r\n\r\n\tprivate _releaseLiveInput(): void {\r\n\t\tthis._playedPitch = -1;\r\n\t\tthis._doc.synth.liveInputDuration = 0;\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown) this._releaseLiveInput();\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tthis._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._releaseLiveInput();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\r\n\t\tif (!this._mouseOver || this._mouseDown) return;\r\n\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\r\n\r\n\t\tthis._preview.style.left = \"0px\";\r\n\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\r\n\t\tthis._preview.style.height = pitchHeight + \"px\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod: boolean = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\t\tif (isDrum) {\r\n\t\t\tthis._pitchHeight = 40;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tthis._pitchHeight = 80;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchHeight = (this._editorHeight / this._doc.windowPitchCount);\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i < this._doc.windowPitchCount; i++) {\r\n\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t\t\tthis._renderedPitchCount++;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i > this._doc.windowPitchCount; i--) {\r\n\t\t\t\tthis._pianoContainer.removeChild(this._pianoContainer.lastChild as Node);\r\n\t\t\t\tthis._pianoLabels.pop();\r\n\t\t\t\tthis._pianoKeys.pop();\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render = (): void => {\r\n\t\tif (!this._doc.showLetters) return;\r\n\r\n\t\tconst isDrum = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\r\n\t\tif (this._renderedScale == this._doc.song.scale && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedMod == isMod) return;\r\n\t\tthis._renderedScale = this._doc.song.scale;\r\n\t\tthis._renderedKey = this._doc.song.key;\r\n\t\tthis._renderedDrums = isDrum;\r\n\t\tthis._renderedMod = isMod;\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\tthis._pianoContainer.style.display = (isDrum || isMod) ? \"none\" : \"flex\";\r\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\r\n\t\tthis._modContainer.style.display = isMod ? \"flex\" : \"none\";\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\r\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % 12;\r\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\r\n\t\t\t\tthis._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\r\n\t\t\t\tif (!Config.scales[this._doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\r\n\r\n\t\t\t\t\tlet text: string;\r\n\r\n\t\t\t\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\r\n\t\t\t\t\t\ttext = Config.keys[pitchNameIndex].name;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst shiftDir: number = Config.blackKeyNameParents[j % 12];\r\n\t\t\t\t\t\ttext = Config.keys[(pitchNameIndex + 12 + shiftDir) % 12].name;\r\n\t\t\t\t\t\tif (shiftDir == 1) {\r\n\t\t\t\t\t\t\ttext += \"♭\";\r\n\t\t\t\t\t\t} else if (shiftDir == -1) {\r\n\t\t\t\t\t\t\ttext += \"♯\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\r\n\r\n\t\t\t\t\tif ((j % 12) == 0) {\r\n\t\t\t\t\t\ttext += Math.floor(j / 12) + this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(-5px, 0px)\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(0px, 0px)\";\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? \"black\" : \"white\";\r\n\t\t\t\t\tlabel.textContent = text;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tlet firstRow: string = \"\";\r\n\t\t\tlet secondRow: string = \"\";\r\n\t\t\tlet useFirstColor: string = ColorConfig.modLabelPrimaryText;\r\n\t\t\tlet useSecondColor: string = ColorConfig.modLabelSecondaryText;\r\n\t\t\tlet channelVal: number;\r\n\t\t\tfor (let j: number = 0; j < Config.modCount; j++) {\r\n\r\n\t\t\t\tlet usingSecondRow: boolean = true;\r\n\t\t\t\tlet usingMod: boolean = true;\r\n\t\t\t\tlet instrumentVal: number = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\tswitch (instrument.modStatuses[Config.modCount - j - 1]) {\r\n\t\t\t\t\tcase ModStatus.msNone:\r\n\t\t\t\t\t\tfirstRow = \"Mod\"\r\n\t\t\t\t\t\tusingSecondRow = false;\r\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForPitch:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Pitch\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Pitch \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForNoise:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Noise\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Noise \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForSong:\r\n\t\t\t\t\t\tfirstRow = \"Song\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When unused, show name of mod on second row\r\n\t\t\t\tif (usingSecondRow) {\r\n\t\t\t\t\tswitch (instrument.modSettings[Config.modCount - j - 1]) {\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\t\tsecondRow = \"None\";\r\n\t\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Cut\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Peak\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tsecondRow = \"FM Feedback\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 1\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 2\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 3\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 4\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tsecondRow = \"Next Bar\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Depth\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Arp Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tsecondRow = \"Reset Arp\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tsecondRow = \"Pulse Width\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tsecondRow = \"Reverb\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tsecondRow = \"Tempo\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst firstLabel: SVGTextElement = this._modFirstLabels[j];\r\n\t\t\t\tconst secondLabel: SVGTextElement = this._modSecondLabels[j];\r\n\t\t\t\tconst modCountLabel: SVGTextElement = this._modCountLabels[j];\r\n\t\t\t\tconst modCountRect: SVGRectElement = this._modCountRects[j];\r\n\t\t\t\tfirstLabel.style.fill = useFirstColor;\r\n\t\t\t\tfirstLabel.textContent = firstRow;\r\n\t\t\t\tsecondLabel.style.fill = useSecondColor;\r\n\t\t\t\tsecondLabel.textContent = usingSecondRow ? secondRow : \"Not set\";\r\n\t\t\t\tmodCountLabel.textContent = \"\" + (Config.modCount - j);\r\n\t\t\t\tmodCountRect.style.fill = usingMod ? ColorConfig.indicatorPrimary : ColorConfig.modLabelSecondaryText;\r\n\r\n\t\t\t\t// Check if text is too long, if name is set\r\n\t\t\t\tif (this._doc.song.channels[instrument.modChannels[Config.modCount - j - 1]].name != \"\") {\r\n\t\t\t\t\tlet scaleFactor: string = \"1\";\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tlet length: number = firstLabel.getComputedTextLength();\r\n\t\t\t\t\tlet squeeze: number = 0;\r\n\t\t\t\t\tif (length > height - 8) {\r\n\t\t\t\t\t\tscaleFactor = \"0.65\";\r\n\t\t\t\t\t\tsqueeze = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (length > height - 24) {\r\n\t\t\t\t\t\tscaleFactor = \"0.8\";\r\n\t\t\t\t\t\tsqueeze = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - squeeze - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(\" + scaleFactor + \", 1)\";\r\n\t\t\t\t\t// Truncate end of string if it's too long, but keep instrument num\r\n\t\t\t\t\twhile (scaleFactor == \"0.65\" && firstLabel.getComputedTextLength() > height + 8) {\r\n\t\t\t\t\t\tvar offset = 4 + (instrumentVal >= 10 ? 1 : 0);\r\n\t\t\t\t\t\tfirstLabel.textContent = firstLabel.textContent.substr(0, firstLabel.textContent.length - offset) + firstLabel.textContent.substr(firstLabel.textContent.length - offset + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(1, 1)\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\n\r\nexport interface RecoveredVersion {\r\n\tuid: string;\r\n\ttime: number;\r\n\tname: string;\r\n\twork: number;\r\n}\r\n\r\nexport interface RecoveredSong {\r\n\tversions: RecoveredVersion[];\r\n}\r\n\r\nconst versionPrefix = \"songVersion: \";\r\nconst maximumSongCount = 8;\r\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\r\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\r\n\r\nfunction keyIsVersion(key: string): boolean {\r\n\treturn key.indexOf(versionPrefix) == 0;\r\n}\r\n\r\nfunction keyToVersion(key: string): RecoveredVersion {\r\n\treturn JSON.parse(key.substring(versionPrefix.length));\r\n}\r\n\r\nexport function versionToKey(version: RecoveredVersion): string {\r\n\treturn versionPrefix + JSON.stringify(version);\r\n}\r\n\r\nexport function generateUid(): string {\r\n\t// Not especially robust, but simple and effective!\r\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\r\n}\r\n\r\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\r\n\treturn b.versions[0].time - a.versions[0].time;\r\n}\r\n\r\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\r\n\treturn b.time - a.time;\r\n}\r\n\r\nexport class SongRecovery {\r\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\r\n\r\n\tprivate _song: Song = new Song();\r\n\r\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\r\n\t\tconst songs: RecoveredSong[] = [];\r\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\r\n\t\tfor (let i = 0; i < localStorage.length; i++) {\r\n\t\t\tconst itemKey: string = localStorage.key(i)!;\r\n\t\t\tif (keyIsVersion(itemKey)) {\r\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\r\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\r\n\t\t\t\tif (song == undefined) {\r\n\t\t\t\t\tsong = { versions: [] };\r\n\t\t\t\t\tsongsByUid[version.uid] = song;\r\n\t\t\t\t\tsongs.push(song);\r\n\t\t\t\t}\r\n\t\t\t\tsong.versions.push(version);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const song of songs) {\r\n\t\t\tsong.versions.sort(compareVersions);\r\n\t\t}\r\n\t\tsongs.sort(compareSongs);\r\n\t\treturn songs;\r\n\t}\r\n\r\n\tpublic saveVersion(uid: string, name: string, songData: string): void {\r\n\t\tconst newName: string = name;\r\n\t\tconst newTime: number = Math.round(Date.now());\r\n\r\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\r\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\r\n\t\t\ttry {\r\n\t\t\t\t// Ensure that the song is not corrupted before saving it.\r\n\t\t\t\tthis._song.fromBase64String(songData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\\n\" + error + \"\\n\" + error.stack);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\t\t\tlet currentSong: RecoveredSong | null = null;\r\n\t\t\tfor (const song of songs) {\r\n\t\t\t\tif (song.versions[0].uid == uid) {\r\n\t\t\t\t\tcurrentSong = song;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentSong == null) {\r\n\t\t\t\tcurrentSong = { versions: [] };\r\n\t\t\t\tsongs.unshift(currentSong);\r\n\t\t\t}\r\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\r\n\r\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\r\n\t\t\tif (versions.length > 0) {\r\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\r\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\r\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\r\n\t\t\t}\r\n\r\n\t\t\tconst newVersion: RecoveredVersion = { uid: uid, name: newName, time: newTime, work: newWork };\r\n\t\t\tconst newKey: string = versionToKey(newVersion);\r\n\t\t\tversions.unshift(newVersion);\r\n\t\t\tlocalStorage.setItem(newKey, songData);\r\n\r\n\t\t\t// Consider deleting an old version to free up space.\r\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\r\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\r\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\r\n\t\t\t\tconst currentWork: number = versions[i].work;\r\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\r\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\r\n\t\t\t\tif (currentWork - olderWork < minSpan) {\r\n\t\t\t\t\tlet indexToDiscard: number = i;\r\n\t\t\t\t\tif (i < versions.length - 1) {\r\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\r\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\r\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\r\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\r\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\r\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\r\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\r\n\t\t\t\t\t\t// thus more memorable.\r\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\r\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tminSpan *= spanMult;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are too many songs, discard the least important ones.\r\n\t\t\t// Songs that are older, or have less work, are less important.\r\n\t\t\twhile (songs.length > maximumSongCount) {\r\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\r\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\r\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\r\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\r\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\r\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\r\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\r\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\r\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\r\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\r\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\r\n\t\t\t\t\tif (leastImportance > weight) {\r\n\t\t\t\t\t\tleastImportance = weight;\r\n\t\t\t\t\t\tleastImportantSong = song;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\r\n\t\t\t\t}\r\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\r\n\t\t\t}\r\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { RecoveredSong, RecoveredVersion, SongRecovery, versionToKey } from \"./SongRecovery\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, p, select, option, iframe } = HTML;\r\n\r\nexport class SongRecoveryPrompt implements Prompt {\r\n\tprivate readonly _songContainer: HTMLDivElement = div();\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt\", style: \"width: 300px;\" },\r\n\t\th2(\"Song Recovery\"),\r\n\t\tdiv({ style: \"max-height: 385px; overflow-y: auto;\" },\r\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about!\"),\r\n\t\t\tthis._songContainer,\r\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\r\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\r\n\t\tif (songs.length == 0) {\r\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\r\n\t\t}\r\n\r\n\t\tfor (const song of songs) {\r\n\t\t\tconst versionMenu: HTMLSelectElement = select({ style: \"width: 100%;\" });\r\n\r\n\t\t\tfor (const version of song.versions) {\r\n\t\t\t\tversionMenu.appendChild(option({ value: version.time }, version.name + \": \" + new Date(version.time).toLocaleString()));\r\n\t\t\t}\r\n\r\n\t\t\tconst player: HTMLIFrameElement = iframe({ style: \"width: 100%; height: 60px; border: none; display: block;\" });\r\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\r\n\t\t\tconst container: HTMLDivElement = div({ style: \"margin: 4px 0;\" }, div({ class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\" }, versionMenu), player);\r\n\t\t\tthis._songContainer.appendChild(container);\r\n\r\n\t\t\tversionMenu.addEventListener(\"change\", () => {\r\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\r\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\r\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SpectrumWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeSpectrum } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class SpectrumEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _arrow: SVGPathElement = SVG.path({ fill: \"currentColor\", \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._arrow,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"spectrum\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeSpectrum | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\r\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\r\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\r\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, select, option } = HTML;\r\n\r\nexport class ThemePrompt implements Prompt {\r\n\tprivate readonly _themeSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"dark classic\" }, \"BeepBox Dark\"),\r\n\t\toption({ value: \"light classic\" }, \"BeepBox Light\"),\r\n\t\toption({ value: \"dark competition\" }, \"BeepBox Competition Dark\"),\r\n\t\toption({ value: \"jummbox classic\" }, \"JummBox Dark\"),\r\n\t\toption({ value: \"jummbox light\" }, \"JummBox Light\"), // It's not ready to see the world yet...\r\n\t\toption({ value: \"microbox classic\" }, \"MicroBox Dark\"),\r\n\t\toption({ value: \"forest\" }, \"Forest\"),\r\n\t\toption({ value: \"canyon\" }, \"Canyon\"),\r\n\t\toption({ value: \"midnight\" }, \"Midnight\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 220px;\" },\r\n\t\th2(\"Set Theme\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._themeSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\tprivate readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tthis._themeSelect.value = this.lastTheme;\r\n\t\t}\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._themeSelect.addEventListener(\"change\", this._previewTheme);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tColorConfig.setTheme(this.lastTheme);\r\n\t\t} else {\r\n\t\t\tColorConfig.setTheme(\"dark classic\");\r\n\t\t}\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this._themeSelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.colorTheme = this._themeSelect.value;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tprivate _previewTheme = (): void => {\r\n\t\tColorConfig.setTheme(this._themeSelect.value);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, p, h2, h3 } = HTML;\r\n\r\nexport class TipPrompt implements Prompt {\r\n\tprivate readonly _closeButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement;\r\n\r\n\tconstructor(private _doc: SongDocument, type: string) {\r\n\t\tlet message: HTMLDivElement;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"scale\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Scale\"),\r\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available notes of a scale to get a sense for how it sounds.\"),\r\n\t\t\t\t\tp(\"The most common scales are major and minor. Major scales tend to sound more playful or optimistic if you emphasize \\\"tonic\\\" notes (the brown rows in the pattern editor) at various points in your melody, whereas minor scales sound more serious or sad if you emphasize \\\"tonic\\\" notes.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"key\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Key\"),\r\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down to align the tonic notes (the brown rows) with the selected \\\"key\\\" pitch.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"tempo\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Tempo\"),\r\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"reverb\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Reverb\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use this slider to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"rhythm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Rhythm\"),\r\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentIndex\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Number\"),\r\n\t\t\t\t\tp(\"MicroBox can have multiple instruments per channel, but it can only play one instrument at a time in each channel. This setting determines which of the instruments should be used to play the currently selected pattern. Different patterns in the channel can use different instruments.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\r\n\t\t\t\t\tp(\"Please be careful when using volume settings above 0. This indicates amplification and too much of that can trip the audio limiter built into this tool. This can lead to your song sounding muffled if overused. But when used carefully, amplification can be a powerful tool!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pan\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Panning\"),\r\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\r\n\t\t\t\t\tp(\"As a rule of thumb, composers typically put lead melodies, drums, and basses in the center, and spread any other instruments to either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"panDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Stereo Delay\"),\r\n\t\t\t\t\t\tp(\"When panning, a slight delay is often added between the left and right ear to help make a sound feel more 'directional'. For example, in the real world your left ear will hear a sound coming from the left just slightly before the right ear.\"),\r\n\t\t\t\t\t\tp(\"This setting controls how much delay is added. When this is set to minimum, panning only affects the volume of the left/right ear without changing the delay. This can help to get a more 'uniform' feeling sound, which can be desirable for making 8-bit music.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggioSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Arpeggio Speed\"),\r\n\t\t\t\t\t\tp(\"This setting affects how fast your chord will 'arpeggiate', or cycle between notes. With a fast arpeggio speed it will sound rapid-fire, with a slow speed you can hear each note one after another.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"twoNoteArpeggio\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Faster Two-Note Arpeggio\"),\r\n\t\t\t\t\t\tp(\"This setting makes arpeggios with only two notes in them happen twice as fast. Arpeggios with more notes in them are unaffected.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Detune\"),\r\n\t\t\t\t\tp(\"This setting can be used to finely control the pitch of your instrument.\"),\r\n\t\t\t\t\tp(\"Careful - you can quickly get very dissonant sounding songs by using this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Type\"),\r\n\t\t\t\t\tp(\"MicroBox comes with many instrument presets. You can also create your own custom instruments!\"),\r\n\t\t\t\t\tp(\"There are also options for copying and pasting instrument settings and for generating random instruments at the top of the instrument type menu.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterCutoff\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Cutoff Frequency\"),\r\n\t\t\t\t\tp(\"The lowest setting feels \\\"muffled\\\" or \\\"dark\\\", and the highest setting feels \\\"harsh\\\" or \\\"bright\\\".\"),\r\n\t\t\t\t\tp(\"Most sounds include a range of frequencies from low to high. JummBox instruments have a filter that allows the lowest frequencies to pass through at full volume, but can reduce the volume of the higher frequencies that are above a cutoff frequency. This setting controls the cutoff frequency and thus the range of higher frequencies that are reduced.\"),\r\n\t\t\t\t\tp(\"This cutoff setting also determines which frequency resonates when the resonance peak setting is used.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterResonance\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Resonance Peak\"),\r\n\t\t\t\t\tp(\"Increasing this setting emphasizes a narrow range of frequencies, based on the position of the filter cutoff setting. This can be used to imitate the resonant bodies of acoustic instruments and other interesting effects.\"),\r\n\t\t\t\t\tp(\"The filter preserves the volume of frequencies that are below the cutoff frequency, and reduces the volume of frequencies that are above the cutoff. If this setting is used, the filter also increases the volume of frequencies that are near the cutoff.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Transition\"),\r\n\t\t\t\t\tp(\"This setting controls how quickly notes begin and end.\"),\r\n\t\t\t\t\tp(\"Hard transitions start suddenly and sound like instruments that are played by hitting or plucking, whereas soft transitions start gradually and sound like instruments that are played by blowing air. Some transitions also stop suddenly, whereas others fade out slowly after the end of the note.\"),\r\n\t\t\t\t\tp(\"The \\\"seamless\\\" and \\\"slide\\\" transitions connect the end of a note with the start of the next note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipWave\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chip Wave\"),\r\n\t\t\t\t\tp(\"MicroBox comes with some sound waves based on classic electronic sound chips, as well as several unique waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipNoise\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Noise\"),\r\n\t\t\t\t\tp(\"MicroBox comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the pulse width over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the pulse width envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseWidth\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Width\"),\r\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"interval\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Interval\"),\r\n\t\t\t\t\tp(\"Some JummBox instrument types can play two waves at slightly different frequencies. The difference between the frequencies is called an \\\"interval\\\", and this setting controls how large it is.\"),\r\n\t\t\t\t\tp(\"When two similar waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\r\n\t\t\t\t\tp(\"If the interval is large, then the waves can sound out-of-tune and \\\"dissonant\\\". If the interval is even larger, then the two frequencies can even be distinct pitches.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chords\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chords\"),\r\n\t\t\t\t\tp(\"When multiple notes occur at the same time, this is called a chord. Chords can be created in JummBox's pattern editor by adding notes above or below another note.\"),\r\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"harmony\\\" which plays all of the notes out loud simultaneously. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\r\n\t\t\t\t\tp(\"Some JummBox instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibrato\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Vibrato\"),\r\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibratoDepth\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Depth\"),\r\n\t\t\t\t\t\tp(\"This setting affects the depth of your instrument's vibrato, making the wobbling effect sound stronger or weaker.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Delay\"),\r\n\t\t\t\t\t\tp(\"This setting changes when vibrato starts to kick in after a note is played. Vibrato is most common for long held notes and less common in short notes, so this can help you achieve that effect.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Speed\"),\r\n\t\t\t\t\t\tp(\"This setting determines how fast the vibrato's up-and-down wobble effect will happen for your instrument.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibratoType\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Type\"),\r\n\t\t\t\t\t\tp(\"This determines the way vibrato causes your instrument's pitch to wobble. The normal type is smooth up and down, the shaky type is chaotic.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"algorithm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"FM Algorithm\"),\r\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\r\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency, volume, and volume envelope to control its effect over time.'),\r\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"feedbackType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Feedback\"),\r\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorFrequency\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Frequency\"),\r\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave. The fundamental frequency (1×) is determined by the pitch of the note, and the frequency (2×) is an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\r\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the FM wave volume over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the FM wave envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"spectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds when combined with a hard transition and a falling filter cutoff envelope.\"),\r\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft transition, it's also possible to make howling wind sounds or even musical blown bottle sounds.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"harmonics\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Harmonics\"),\r\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\r\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"effects\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Effects\"),\r\n\t\t\t\t\tp(\"MicroBox has two special effects you can add to instruments. You can turn on either effect, or both at once.\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use the \\\"reverb\\\" slider in the \\\"Song Settings\\\" section above to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Each row in the pattern editor gets its own envelope.\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the drumset cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetSpectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this instrument used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the instrument you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the instrument before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedPattern\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this pattern used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the pattern you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the pattern before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modChannel\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Channel\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which channel the modulators will take effect for. If you choose 'Song', you can change song-wide settings too!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Instrument\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which instrument your modulator will apply to within the given channel you've chosen.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modSet\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Setting\"),\r\n\t\t\t\t\tp(\"This is the parameter that you want to change with this modulator. For example, if you set this to 'Tempo', you can speed up or slow down your song by laying notes in the pattern editor.\"),\r\n\t\t\t\t\tp(\"Note that you'll see different options if your channel is set to 'Song' versus a channel number. With 'Song', you'll see song-wide settings such as tempo. With a channel, you'll see specific instrument settings.\"),\r\n\t\t\t\t\tp(\"Most modulators behave as you'd expect and work just as if you were moving their associated slider. But with the special setting 'Next Bar', the first note you lay will cause the playhead to skip the rest of the bar and jump right to the next one.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transitionBar\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Tie Notes Over Bars\"),\r\n\t\t\t\t\tp(\"With this option ticked, notes won't transition across bars if you put notes with the same pitches at the start of the next bar. Instead they will 'tie over' and sound like one long note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"clicklessTransition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Clickless Transition\"),\r\n\t\t\t\t\tp(\"Sometimes, seamless and other transition types can make audible 'clicks' when changing between notes. Ticking this option will cause those clicks to be silenced as much as possible.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\r\n\t\t\tdefault: throw new Error(\"Unhandled TipPrompt type: \" + type);\r\n\t\t}\r\n\r\n\t\tthis.container = div({ class: \"prompt\", style: \"width: 250px;\" },\r\n\t\t\tmessage,\r\n\t\t\tthis._closeButton,\r\n\t\t);\r\n\r\n\t\tsetTimeout(() => this._closeButton.focus());\r\n\r\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern } from \"../synth/synth\";\r\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { isMobile } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\n\r\nclass Box {\r\n\tprivate readonly _text: Text = document.createTextNode(\"1\");\r\n\tprivate readonly _label: SVGTextElement = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": 20, \"text-anchor\": \"middle\", \"font-weight\": \"bold\", fill: \"red\" }, this._text);\r\n\tprivate readonly _rect: SVGRectElement = SVG.rect({ x: 1, y: 1 });\r\n\tpublic readonly container: SVGSVGElement = SVG.svg(this._rect, this._label);\r\n\tprivate _renderedIndex: number = 1;\r\n\tprivate _renderedDim: boolean = true;\r\n\tprivate _renderedSelected: boolean = false;\r\n\tprivate _renderedColor: string = \"\";\r\n\r\n\tconstructor(channel: number, private readonly _x: number, private readonly _y: number, color: string) {\r\n\t\tthis._rect.setAttribute(\"fill\", ColorConfig.uiWidgetBackground);\r\n\t\tthis._label.setAttribute(\"fill\", color);\r\n\t}\r\n\r\n\tpublic setSize(width: number, height: number): void {\r\n\t\tthis.container.setAttribute(\"x\", \"\" + (this._x * width));\r\n\t\tthis.container.setAttribute(\"y\", \"\" + (Config.barEditorHeight + this._y * height));\r\n\t\tthis._rect.setAttribute(\"width\", \"\" + (width - 2));\r\n\t\tthis._rect.setAttribute(\"height\", \"\" + (height - 2));\r\n\t\tthis._label.setAttribute(\"x\", \"\" + (width / 2));\r\n\t\tthis._label.setAttribute(\"y\", \"\" + Math.round(height / 2 + 7));\r\n\t}\r\n\r\n\tpublic setIndex(index: number, dim: boolean, selected: boolean, color: string, isNoise: boolean, isMod: boolean): void {\r\n\t\tif (this._renderedIndex != index) {\r\n\t\t\tif (!this._renderedSelected && ((index == 0) != (this._renderedIndex == 0))) {\r\n\t\t\t\tif (index == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", \"none\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (index >= 100) {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"16\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, -1.5px);\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"20\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, 0px);\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedIndex = index;\r\n\t\t\tthis._text.data = \"\" + index;\r\n\t\t}\r\n\r\n\t\tif (this._renderedDim != dim || this._renderedColor != color) {\r\n\t\t\tthis._renderedDim = dim;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedSelected != selected || this._renderedColor != color) {\r\n\t\t\tthis._renderedSelected = selected;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._rect.setAttribute(\"fill\", color);\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._renderedColor = color;\r\n\t}\r\n}\r\n\r\nexport class TrackEditor {\r\n\tpublic readonly _barDropDown: HTMLSelectElement = HTML.select({ style: \"width: 32px; height: \" + Config.barEditorHeight + \"px; top: 0px; position: absolute; opacity: 0\" },\r\n\r\n\t\tHTML.option({ value: \"barBefore\" }, \"Insert Bar Before\"),\r\n\t\tHTML.option({ value: \"barAfter\" }, \"Insert Bar After\"),\r\n\t\tHTML.option({ value: \"deleteBar\" }, \"Delete This Bar\"),\r\n\t);\r\n\tprivate readonly _boxContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _barNumberContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect({ fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128 });\r\n\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30 });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _barEditorPath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, stroke: ColorConfig.uiWidgetBackground, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62 });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; position: absolute;`, height: 128 },\r\n\t\tthis._boxContainer,\r\n\t\tthis._barEditorPath,\r\n\t\tthis._selectionRect,\r\n\t\tthis._barNumberContainer,\r\n\t\tthis._boxHighlight,\r\n\t\tthis._upHighlight,\r\n\t\tthis._downHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\tprivate readonly _select: HTMLSelectElement = HTML.select({ class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\" });\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"noSelection\", style: \"height: 128px; position: relative; overflow:hidden;\" }, this._svg, this._select, this._barDropDown);\r\n\r\n\tprivate readonly _grid: Box[][] = [];\r\n\tprivate readonly _barNumbers: SVGTextElement[] = [];\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\t//private _lastScrollTime: number = 0;\r\n\t//private _selecting: boolean = false;\r\n\t//private _selectionStartBar: number = 0;\r\n\t//private _selectionStartChannel: number = 0;\r\n\t//private _pattern: Pattern | null = null;\r\n\tprivate _mouseStartBar: number = 0;\r\n\tprivate _mouseStartChannel: number = 0;\r\n\tprivate _mouseBar: number = 0;\r\n\tprivate _mouseChannel: number = 0;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mousePressed: boolean = false;\r\n\tprivate _mouseDragging = false;\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _channelHeight: number = 32;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedPatternCount: number = 0;\r\n\tprivate _renderedPlayhead: number = -1;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _touchMode: boolean = isMobile;\r\n\tprivate _barDropDownBar: number = 0;\r\n\tprivate _lastScrollTime: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\r\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\r\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\r\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\r\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\r\n\r\n\t\tlet determinedCursorType: boolean = false;\r\n\t\tdocument.addEventListener(\"mousedown\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = false;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\t\tdocument.addEventListener(\"touchstart\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = true;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t\tthis._barDropDown.addEventListener(\"change\", this._barDropDownHandler);\r\n\t\tthis._barDropDown.addEventListener(\"mousedown\", this._barDropDownGetOpenedPosition);\r\n\r\n\t}\r\n\r\n\tprivate _barDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\t\tthis._barDropDownBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t}\r\n\r\n\tprivate _barDropDownHandler = (event: Event): void => {\r\n\r\n\t\tvar moveBarOffset = (this._barDropDown.value == \"barBefore\") ? 0 : 1;\r\n\r\n\t\tif (this._barDropDown.value == \"barBefore\" || this._barDropDown.value == \"barAfter\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar - 1 + moveBarOffset;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.insertBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the inserted zone, though.\r\n\t\t\t// this._doc.bar = prevBar + ((prevBar < this._barDropDownBar + moveBarOffset) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead >= this._barDropDownBar + moveBarOffset) {\r\n\t\t\t\tthis._doc.synth.playhead++;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse if (this._barDropDown.value == \"deleteBar\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.deleteBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the deleted zone, though.\r\n\t\t\t// this._doc.bar = prevBar - ((prevBar <= this._barDropDownBar) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead > this._barDropDownBar) {\r\n\t\t\t\tthis._doc.synth.playhead--;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _whenSelectChanged = (): void => {\r\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _dragBoxSelection(): void {\r\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\tthis._doc.selection.selectionUpdated();\r\n\t}\r\n\r\n\tprivate _updateSelectPos(event: TouchEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._mouseDragging = true;\r\n\t\tthis._updateSelectPos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\t}\r\n\r\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\r\n\t\tthis._updateSelectPos(event);\r\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (this._mousePressed) this._dragBoxSelection();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _updateMousePos(event: MouseEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._updateMousePos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\r\n\t\t// Act on track portion\r\n\t\tif (this._mouseY >= Config.barEditorHeight) {\r\n\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t} else {\r\n\t\t\t\tthis._mouseDragging = false;\r\n\t\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\r\n\t\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tthis._updateMousePos(event);\r\n\t\tif (this._mousePressed) {\r\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\tthis._dragBoxSelection();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mousePressed && !this._mouseDragging) {\r\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\r\n\t\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\r\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tlet channel: number = this._mouseChannel;\r\n\t\tlet bar: number = this._mouseBar;\r\n\r\n\t\tif (this._touchMode) {\r\n\t\t\tbar = this._doc.bar;\r\n\t\t\tchannel = this._doc.channel;\r\n\t\t}\r\n\r\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\r\n\t\tconst overTrackEditor: boolean = (this._mouseY >= Config.barEditorHeight);\r\n\r\n\t\tif (this._mouseDragging && this._mouseStartBar != this._mouseBar) {\r\n\r\n\t\t\t// Handle auto-scroll in selection. Only @50ms or slower.\r\n\t\t\tvar timestamp: number = Date.now();\r\n\r\n\t\t\tif (timestamp - this._lastScrollTime >= 50) {\r\n\r\n\t\t\t\tif (bar > this._doc.barScrollPos + this._doc.trackVisibleBars - 1 && this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(1);\r\n\t\t\t\t}\r\n\t\t\t\tif (bar < this._doc.barScrollPos && this._doc.barScrollPos > 0) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lastScrollTime = timestamp;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver && !this._mousePressed && !selected && overTrackEditor) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + Config.barEditorHeight + (this._channelHeight * channel)));\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (this._channelHeight - 2));\r\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else if ((this._mouseOver || ((this._mouseX >= bar * this._barWidth) && (this._mouseX < bar * this._barWidth + this._barWidth) && (this._mouseY > 0))) && (!overTrackEditor)) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"1\"); // The y is set to 1 instead of 0 due to the thickness of the box causing it to go slightly outside the frame at y=0.\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (Config.barEditorHeight - 3));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tif ((this._mouseOver || this._touchMode) && selected && overTrackEditor) {\r\n\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\r\n\t\t\tconst middle: number = Config.barEditorHeight + this._channelHeight * (channel + 0.5);\r\n\t\t\tconst base: number = this._channelHeight * 0.1;\r\n\t\t\tconst tip: number = this._channelHeight * 0.4;\r\n\t\t\tconst width: number = this._channelHeight * 0.175;\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\r\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\r\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tthis._selectionRect.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\t\tthis._selectionRect.style.top = (Config.barEditorHeight + (this._channelHeight * this._doc.channel)) + \"px\";\r\n\r\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\r\n\t\tthis._select.style.width = this._barWidth + \"px\";\r\n\t\tthis._select.style.top = (Config.barEditorHeight + this._channelHeight * this._doc.channel) + \"px\";\r\n\t\tthis._select.style.height = this._channelHeight + \"px\";\r\n\r\n\t\tthis._barDropDown.style.left = (this._barWidth * bar) + \"px\";\r\n\r\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\r\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\r\n\t\t\tthis._select.appendChild(HTML.option({ value: i }, i));\r\n\t\t}\r\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\r\n\t\t\tthis._select.removeChild(<Node>this._select.lastChild);\r\n\t\t}\r\n\t\tthis._renderedPatternCount = patternCount;\r\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\r\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\t\tthis._channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\r\n\t\t\t// Add new channel boxes if needed\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._grid[y] = [];\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove old channel boxes\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._grid.length = this._doc.song.getChannelCount();\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = this._renderedBarCount; x < this._doc.song.barCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let x: number = this._doc.song.barCount; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t\tthis._grid[y].length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update bar editor's SVG\r\n\t\t\t// this._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\t//this._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tvar pathString = \"\";\r\n\r\n\t\t\tfor (let x: number = 0; x < this._doc.song.barCount; x++) {\r\n\t\t\t\tvar pathLeft = x * this._barWidth + 2;\r\n\t\t\t\tvar pathTop = 1;\r\n\t\t\t\tvar pathRight = x * this._barWidth + this._barWidth - 2;\r\n\t\t\t\tvar pathBottom = Config.barEditorHeight - 3;\r\n\r\n\t\t\t\tpathString += `M ${pathLeft} ${pathTop} H ${pathRight} V ${pathBottom} H ${pathLeft} V ${pathTop} Z `;\r\n\t\t\t}\r\n\r\n\t\t\tthis._barEditorPath.setAttribute(\"d\", pathString);\r\n\r\n\t\t\tif (this._renderedBarCount < this._doc.song.barCount) {\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t\tfor (var pos = this._renderedBarCount; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos] = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": \"8px\", \"text-anchor\": \"middle\", \"font-weight\": \"bold\", \"x\": (pos * this._barWidth + this._barWidth / 2) + \"px\", \"y\": \"7px\", fill: ColorConfig.secondaryText }, \"\" + (pos + 1));\r\n\t\t\t\t\tif (pos % 4 == 0) {\r\n\t\t\t\t\t\t// Highlighting every 4 bars\r\n\t\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"fill\", ColorConfig.primaryText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._barNumberContainer.appendChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this._renderedBarCount > this._doc.song.barCount) {\r\n\t\t\t\tfor (var pos = this._renderedBarCount - 1; pos >= this._doc.song.barCount; pos--) {\r\n\t\t\t\t\tthis._barNumberContainer.removeChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update x of bar editor numbers\r\n\t\t\tif (this._renderedBarWidth != this._barWidth) {\r\n\t\t\t\tfor (var pos = 0; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"x\", (pos * this._barWidth + this._barWidth / 2) + \"px\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._grid[y][x].setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = this._channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tconst editorHeight: number = Config.barEditorHeight + this._doc.song.getChannelCount() * this._channelHeight;\r\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis.container.style.height = editorHeight + \"px\";\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\r\n\t\t\tfor (let i: number = 0; i < this._renderedBarCount; i++) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(j, i);\r\n\t\t\t\tconst selected: boolean = (i == this._doc.bar && j == this._doc.channel);\r\n\t\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\r\n\r\n\t\t\t\tconst box: Box = this._grid[j][i];\r\n\t\t\t\tif (i < this._doc.song.barCount) {\r\n\t\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, j);\r\n\t\t\t\t\tbox.setIndex(this._doc.song.channels[j].bars[i], dim, selected, dim && !selected ? colors.secondaryChannel : colors.primaryChannel, j >= this._doc.song.pitchChannelCount && j < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount, j >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n\t\t\t\t\tbox.container.style.visibility = \"visible\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbox.container.style.visibility = \"hidden\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.selection.boxSelectionWidth > 1 || this._doc.selection.boxSelectionHeight > 1) {\r\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\r\n\t\t\t// editor renders and the selection is visible. Check if anything changed\r\n\t\t\t// before overwriting the attributes?\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(Config.barEditorHeight + this._channelHeight * this._doc.selection.boxSelectionChannel + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(this._channelHeight * this._doc.selection.boxSelectionHeight - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//import {Layout} from \"./Layout\";\r\nimport { Channel, Instrument, ModSetting, ModStatus, Pattern } from \"../synth/synth\";\r\nimport { Config, InstrumentType } from \"../synth/SynthConfig\";\r\nimport { BarScrollBar } from \"./BarScrollBar\";\r\nimport { SongSettingsPrompt } from \"./SongSettingsPrompt\";\r\n// import { BeatsPerBarPrompt } from \"./BeatsPerBarPrompt\";\r\nimport { Change, ChangeGroup } from \"./Change\";\r\nimport { ChangeAlgorithm, ChangeChannelBar, ChangeChipWave, ChangeChannelOrder, ChangeChord, ChangeCustomWave, ChangeDetectKey, ChangeDetune, ChangeDrumsetEnvelope, ChangeEffects, ChangeFeedbackAmplitude, ChangeFeedbackEnvelope, ChangeFeedbackType, ChangeFilterCutoff, ChangeFilterEnvelope, ChangeFilterResonance, ChangeInterval, ChangeKey, ChangeNoiseWave, ChangeOperatorAmplitude, ChangeOperatorEnvelope, ChangeOperatorFrequency, ChangePan, ChangePasteInstrument, ChangePatternNumbers, ChangePatternsPerChannel, ChangePreset, ChangePulseEnvelope, ChangePulseWidth, ChangeRandomGeneratedInstrument, ChangeReverb, ChangeRhythm, ChangeScale, ChangeSong, ChangeSongTitle, ChangeTempo, ChangeTransition, ChangeVibrato, ChangeVibratoType, ChangeVolume, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangePanDelay, ChangeArpeggioSpeed, pickRandomPresetValue, ChangeFastTwoNoteArp, ChangeClicklessTransition, ChangeTieNoteTransition, ChangePatternSelection } from \"./changes\";\r\nimport { ChannelSettingsPrompt } from \"./ChannelSettingsPrompt\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { CustomChipPrompt } from \"./CustomChipPrompt\";\r\nimport { EditorConfig, isMobile, prettyNumber, Preset, PresetCategory } from \"./EditorConfig\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { HarmonicsEditor } from \"./HarmonicsEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { InputBox, Slider } from \"./HTMLWrapper\";\r\nimport { ImportPrompt } from \"./ImportPrompt\";\r\nimport { LayoutPrompt } from \"./LayoutPrompt\";\r\nimport { LimiterPrompt } from \"./LimiterPrompt\";\r\nimport { LoopEditor } from \"./LoopEditor\";\r\nimport { MoveNotesSidewaysPrompt } from \"./MoveNotesSidewaysPrompt\";\r\nimport { MuteEditor } from \"./MuteEditor\";\r\nimport { OctaveScrollBar } from \"./OctaveScrollBar\";\r\nimport { PatternEditor } from \"./PatternEditor\";\r\nimport { Piano } from \"./Piano\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n// import { SongDurationPrompt } from \"./SongDurationPrompt\";\r\nimport { SongRecoveryPrompt } from \"./SongRecoveryPrompt\";\r\nimport { SpectrumEditor } from \"./SpectrumEditor\";\r\nimport { ThemePrompt } from \"./ThemePrompt\";\r\nimport { TipPrompt } from \"./TipPrompt\";\r\nimport { TrackEditor } from \"./TrackEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, input, select, span, optgroup, option, canvas } = HTML;\r\n\r\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tfor (let index: number = 0; index < items.length; index++) {\r\n\t\tmenu.appendChild(option({ value: index }, items[index]));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\n// Similar to the above, but adds a non-interactive header to the list.\r\n// @jummbus: Honestly not necessary with new HTML options interface, but not exactly necessary to change either!\r\n\r\nfunction buildHeaderedOptions(header: string, menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tmenu.appendChild(option({ selected: true, disabled: true, value: header }, header));\r\n\r\n\tfor (const item of items) {\r\n\t\tmenu.appendChild(option({ value: item }, item));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\nfunction buildPresetOptions(isNoise: boolean, idSet: string): HTMLSelectElement {\r\n\tconst menu: HTMLSelectElement = select({ id: idSet });\r\n\r\n\t// Show the \"spectrum\" custom type in both pitched and noise channels.\r\n\t//const customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\r\n\tif (isNoise) {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.drumset }, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\r\n\t} else {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.chip }, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.pwm }, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.harmonics }, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.customChipWave }, EditorConfig.valueToPreset(InstrumentType.customChipWave)!.name));\r\n\t}\r\n\r\n\tconst randomGroup: HTMLElement = optgroup({ label: \"Randomize ▾\" });\r\n\trandomGroup.appendChild(option({ value: \"randomPreset\" }, \"Random Preset\"));\r\n\trandomGroup.appendChild(option({ value: \"randomGenerated\" }, \"Random Generated\"));\r\n\tmenu.appendChild(randomGroup);\r\n\r\n\r\n\tfor (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tconst group: HTMLElement = optgroup({ label: category.name + \" ▾\" });\r\n\t\tlet foundAny: boolean = false;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif ((preset.isNoise == true) == isNoise) {\r\n\t\t\t\tgroup.appendChild(option({ value: (categoryIndex << 6) + presetIndex }, preset.name));\r\n\t\t\t\tfoundAny = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Need to re-sort some elements for readability. Can't just do this in the menu, because indices are saved in URLs and would get broken if the ordering actually changed.\r\n\t\tif (category.name == \"String Presets\" && foundAny) {\r\n\r\n\t\t\t// Put violin 2 after violin 1\r\n\t\t\tlet moveViolin2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveViolin2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Flute Presets\" && foundAny) {\r\n\r\n\t\t\t// Put flute 2 after flute 1\r\n\t\t\tlet moveFlute2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveFlute2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Keyboard Presets\" && foundAny) {\r\n\r\n\t\t\t// Put grand piano 2 after grand piano 1\r\n\t\t\tlet moveGrandPiano2 = group.removeChild(group.children[9]);\r\n\t\t\tgroup.insertBefore(moveGrandPiano2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (foundAny) menu.appendChild(group);\r\n\t}\r\n\r\n\treturn menu;\r\n}\r\n\r\nfunction setSelectedValue(menu: HTMLSelectElement, value: number): void {\r\n\tconst stringValue = value.toString();\r\n\tif (menu.value != stringValue) menu.value = stringValue;\r\n\r\n\t// Change select2 value, if this select is a member of that class.\r\n\tif ($(menu).data('select2')) {\r\n\t\t$(menu).val(value).trigger('change.select2');\r\n\t}\r\n}\r\n\r\nclass CustomChipCanvas {\r\n\tprivate mouseDown: boolean;\r\n\tprivate continuousEdit: boolean;\r\n\tprivate lastX: number;\r\n\tprivate lastY: number;\r\n\tpublic newArray: Float64Array;\r\n\r\n\tprivate _change: Change | null = null;\r\n\r\n\tconstructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: Float64Array) => Change) {\r\n\t\t//canvas.addEventListener(\"input\", this._whenInput);\r\n\t\t//canvas.addEventListener(\"change\", this._whenChange);\r\n\t\tcanvas.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tcanvas.addEventListener(\"mousedown\", this._onMouseDown);\r\n\t\tcanvas.addEventListener(\"mouseup\", this._onMouseUp);\r\n\t\tcanvas.addEventListener(\"mouseleave\", this._onMouseUp);\r\n\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\t\tthis.lastX = 0;\r\n\t\tthis.lastY = 0;\r\n\r\n\t\tthis.newArray = new Float64Array(64);\r\n\r\n\t\t// Init waveform\r\n\t\tthis.redrawCanvas();\r\n\r\n\t}\r\n\r\n\tpublic redrawCanvas(): void {\r\n\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t// Black BG\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\tctx.fillRect(0, 0, 128, 52);\r\n\r\n\t\t// Mid-bar\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\tctx.fillRect(0, 25, 128, 2);\r\n\r\n\t\t// 25-75 bars\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\tctx.fillRect(0, 13, 128, 1);\r\n\t\tctx.fillRect(0, 39, 128, 1);\r\n\r\n\t\t// Waveform\r\n\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let x: number = 0; x < 64; x++) {\r\n\t\t\tvar y: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[x] + 26;\r\n\t\t\tctx.fillRect(x * 2, y - 2, 2, 4);\r\n\r\n\t\t\tthis.newArray[x] = y - 26;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tif (this.mouseDown) {\r\n\r\n\t\t\tvar x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\r\n\t\t\tvar y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\r\n\r\n\t\t\tif (y < 2) y = 2;\r\n\t\t\tif (y > 50) y = 50;\r\n\r\n\t\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t\tif (this.continuousEdit == true && Math.abs(this.lastX - x) < 40) {\r\n\r\n\t\t\t\tvar lowerBound = (x < this.lastX) ? x : this.lastX;\r\n\t\t\t\tvar upperBound = (x < this.lastX) ? this.lastX : x;\r\n\r\n\t\t\t\tfor (let i = lowerBound; i <= upperBound; i += 2) {\r\n\r\n\t\t\t\t\tvar progress = (Math.abs(x - this.lastX) > 2.0) ? ((x > this.lastX) ?\r\n\t\t\t\t\t\t1.0 - ((i - lowerBound) / (upperBound - lowerBound))\r\n\t\t\t\t\t\t: ((i - lowerBound) / (upperBound - lowerBound))) : 0.0;\r\n\t\t\t\t\tvar j = Math.round(y + (this.lastY - y) * progress);\r\n\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 0, 2, 53);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 25, 2, 2);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 13, 2, 1);\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 39, 2, 1);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, j - 2, 2, 4);\r\n\r\n\t\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\t\tthis.newArray[Math.floor(i / 2)] = (j - 26);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 0, 2, 52);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 25, 2, 2);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 13, 2, 1);\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 39, 2, 1);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, y - 2, 2, 4);\r\n\r\n\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\tthis.newArray[Math.floor(x / 2)] = (y - 26);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.continuousEdit = true;\r\n\t\t\tthis.lastX = x;\r\n\t\t\tthis.lastY = y;\r\n\r\n\t\t\t// Preview - update integral used for sound synthesis based on new array, not actual stored array. When mouse is released, real update will happen.\r\n\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tsum += this.newArray[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / this.newArray.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = this.newArray[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _onMouseDown = (event: MouseEvent): void => {\r\n\t\tthis.mouseDown = true;\r\n\r\n\t\t// Allow single-click edit\r\n\t\tthis._onMouseMove(event);\r\n\t}\r\n\tprivate _onMouseUp = (): void => {\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\r\n\t\tthis._whenChange();\r\n\t}\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._change = this._getChange(this.newArray);\r\n\r\n\t\tthis._doc.record(this._change!);\r\n\r\n\t\tthis._change = null;\r\n\t};\r\n\r\n}\r\n\r\nexport class SongEditor {\r\n\tpublic prompt: Prompt | null = null;\r\n\r\n\tprivate readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\r\n\tprivate readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\r\n\tprivate readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\r\n\tprivate readonly _trackEditor: TrackEditor = new TrackEditor(this._doc, this);\r\n\tprivate readonly _muteEditor: MuteEditor = new MuteEditor(this._doc, this);\r\n\tprivate readonly _loopEditor: LoopEditor = new LoopEditor(this._doc);\r\n\tprivate readonly _piano: Piano = new Piano(this._doc);\r\n\tprivate readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc, this._piano);\r\n\tprivate readonly _playButton: HTMLButtonElement = button({ style: \"width: 80px;\", type: \"button\" });\r\n\tprivate readonly _prevBarButton: HTMLButtonElement = button({ class: \"prevBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Previous Bar (left bracket)\" });\r\n\tprivate readonly _nextBarButton: HTMLButtonElement = button({ class: \"nextBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Next Bar (right bracket)\" });\r\n\tprivate readonly _volumeSlider: Slider = new Slider(input({ title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\" }), this._doc, null, false);\r\n\tprivate readonly _outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: visible; margin: auto; max-width: 20vw;`, width: \"160px\", height: \"100%\", preserveAspectRatio: \"none\", viewBox: \"0 0 160 12\" },\r\n\t\tthis._defs,\r\n\t\tthis._outVolumeBarBg,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\tprivate readonly _volumeBarBox: HTMLDivElement = div({ class: \"playback-volume-bar\", style: \"height: 12px; align-self: center;\" },\r\n\t\tthis._volumeBarContainer,\r\n\t);\r\n\tprivate readonly _fileMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"new\" }, \"+ New Blank Song\"),\r\n\t\toption({ value: \"import\" }, \"↑ Import Song...\"),\r\n\t\toption({ value: \"export\" }, \"↓ Export Song...\"),\r\n\t\toption({ value: \"copyUrl\" }, \"⎘ Copy Song URL\"),\r\n\t\toption({ value: \"shareUrl\" }, \"⤳ Share Song URL\"),\r\n\t\toption({ value: \"shortenUrl\" }, \"… Shorten Song URL\"),\r\n\t\toption({ value: \"viewPlayer\" }, \"▶ View in Song Player\"),\r\n\t\toption({ value: \"copyEmbed\" }, \"⎘ Copy HTML Embed Code\"),\r\n\t\toption({ value: \"songRecovery\" }, \"⚠ Recover Recent Song...\"),\r\n\t);\r\n\tprivate readonly _editMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"undo\" }, \"Undo (Z)\"),\r\n\t\toption({ value: \"redo\" }, \"Redo (Y)\"),\r\n\t\toption({ value: \"copy\" }, \"Copy Pattern (C)\"),\r\n\t\toption({ value: \"pasteNotes\" }, \"Paste Pattern Notes (V)\"),\r\n\t\toption({ value: \"pasteNumbers\" }, \"Paste Pattern Numbers (⇧V)\"),\r\n\t\toption({ value: \"insertBars\" }, \"Insert Bar After Selection (⏎)\"),\r\n\t\toption({ value: \"deleteBars\" }, \"Delete Selected Bar (⌫)\"),\r\n\t\toption({ value: \"selectAll\" }, \"Select All (A)\"),\r\n\t\toption({ value: \"selectChannel\" }, \"Select Channel (⇧A)\"),\r\n\t\toption({ value: \"duplicatePatterns\" }, \"Duplicate Reused Patterns (D)\"),\r\n\t\toption({ value: \"transposeUp\" }, \"Move Notes Up (+)\"),\r\n\t\toption({ value: \"transposeDown\" }, \"Move Notes Down (-)\"),\r\n\t\toption({ value: \"moveNotesSideways\" }, \"Move All Notes Sideways... (W)\"),\r\n\t\toption({ value: \"songSettings\" }, \"Song Settings... (O)\"),\r\n\t\t// option({ value: \"beatsPerBar\" }, \"Change Beats Per Bar...\"),\r\n\t\t// option({ value: \"barCount\" }, \"Change Song Length... (L)\"),\r\n\t\toption({ value: \"channelSettings\" }, \"Channel Settings... (Q)\"),\r\n\t\toption({ value: \"limiterSettings\" }, \"Limiter Settings... (⇧L)\"),\r\n\t);\r\n\tprivate readonly _optionsMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"autoPlay\" }, \"Auto Play On Load\"),\r\n\t\toption({ value: \"autoFollow\" }, \"Auto Follow Track\"),\r\n\t\toption({ value: \"enableNotePreview\" }, \"Preview Added Notes\"),\r\n\t\toption({ value: \"showLetters\" }, \"Show Piano Keys\"),\r\n\t\toption({ value: \"showFifth\" }, 'Highlight \"Fifth\" Notes'),\r\n\t\toption({ value: \"showChannels\" }, \"Show All Channels\"),\r\n\t\toption({ value: \"showScrollBar\" }, \"Octave Scroll Bar\"),\r\n\t\toption({ value: \"alwaysFineNoteVol\" }, \"Always Fine Note Vol.\"),\r\n\t\toption({ value: \"enableChannelMuting\" }, \"Enable Channel Muting\"),\r\n\t\toption({ value: \"displayBrowserUrl\" }, \"Display Song Data in URL\"),\r\n\t\toption({ value: \"displayVolumeBar\" }, \"Show Playback Volume\"),\r\n\t\toption({ value: \"fullScreen\" }, \"Set Layout...\"),\r\n\t\toption({ value: \"colorTheme\" }, \"Set Theme...\"),\r\n\t\t//option({value: \"alwaysShowSettings\"}, \"Customize All Instruments\"),\r\n\t);\r\n\tprivate readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale => scale.name));\r\n\tprivate readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key => key.name).reverse());\r\n\tprivate readonly _tempoSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"30\", max: \"320\", value: \"160\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _tempoStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _reverbSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm => rhythm.name));\r\n\tprivate readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false, \"pitchPresetSelect\");\r\n\tprivate readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true, \"drumPresetSelect\");\r\n\tprivate readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm => algorithm.name));\r\n\tprivate readonly _algorithmSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithmSelect));\r\n\tprivate readonly _instrumentSelect: HTMLSelectElement = select();\r\n\tprivate readonly _instrumentSelectRow: HTMLDivElement = div({ class: \"selectRow\", style: \"display: none;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentIndex\") }, \"Instrument: \"), div({ class: \"selectContainer\" }, this._instrumentSelect));\r\n\tprivate readonly _instrumentVolumeSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _instrumentVolumeSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%\", id: \"volumeSliderInputBox\", type: \"number\", step: \"1\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\" });\r\n\tprivate readonly _instrumentVolumeSliderTip: HTMLDivElement = div({ class: \"selectRow\", style: \"height: 1em\" }, span({ class: \"tip\", style: \"font-size: smaller;\", onclick: () => this._openPrompt(\"instrumentVolume\") }, \"Volume: \"));\r\n\tprivate readonly _instrumentVolumeSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \";\" }, span({ class: \"tip\" }, this._instrumentVolumeSliderTip)),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._instrumentVolumeSliderInputBox),\r\n\t), this._instrumentVolumeSlider.container);\r\n\tprivate readonly _panSlider: Slider = new Slider(input({ style: \"margin: 0;\", position: \"sticky;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _panDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(1) }, \"▼\");\r\n\tprivate readonly _panSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"panSliderInputBox\", type: \"number\", step: \"1\", min: \"0\", max: \"100\", value: \"0\" });\r\n\tprivate readonly _panSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pan\") }, \"Pan: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._panSliderInputBox),\r\n\t), this._panDropdown, this._panSlider.container);\r\n\tprivate readonly _panDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstPanDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePanDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _panDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"panDelay\") }, \"Delay:\"), this._panDelaySlider.container);\r\n\tprivate readonly _panDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._panDelayRow);\r\n\tprivate readonly _detuneSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: Config.detuneMin, max: Config.detuneMax, value: 0, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _detuneSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"detuneSliderInputBox\", type: \"number\", step: \"1\", min: \"\" + Config.detuneMin, max: \"\" + Config.detuneMax, value: \"0\" });\r\n\tprivate readonly _detuneSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"detune\") }, \"Detune: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._detuneSliderInputBox),\r\n\t), this._detuneSlider.container);\r\n\tprivate readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave => wave.name));\r\n\tprivate readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave => wave.name));\r\n\tprivate readonly _chipWaveSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipWave\") }, \"Wave: \"), div({ class: \"selectContainer\" }, this._chipWaveSelect));\r\n\tprivate readonly _chipNoiseSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipNoise\") }, \"Noise: \"), div({ class: \"selectContainer\" }, this._chipNoiseSelect));\r\n\tprivate readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition => transition.name));\r\n\tprivate readonly _transitionDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(3) }, \"▼\");\r\n\tprivate readonly _transitionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"transition\") }, \"Transition:\"), this._transitionDropdown, div({ class: \"selectContainer\" }, this._transitionSelect));\r\n\tprivate readonly _tieNoteTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _tieNoteTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"transitionBar\") }, \"Tie Over Bars:\"), this._tieNoteTransitionBox);\r\n\tprivate readonly _clicklessTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _clicklessTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"clicklessTransition\") }, \"Clickless:\"), this._clicklessTransitionBox);\r\n\tprivate readonly _transitionDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._tieNoteTransitionRow, this._clicklessTransitionRow);\r\n\tprivate readonly _effectsSelect: HTMLSelectElement = buildOptions(select(), Config.effectsNames);\r\n\tprivate readonly _filterCutoffSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterCutoffRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterCutoff(this._doc, oldValue, newValue), false);\r\n\tprivate _filterCutoffRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._filterCutoffSlider.container);\r\n\tprivate readonly _filterResonanceSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterResonanceRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterResonance(this._doc, oldValue, newValue), false);\r\n\tprivate _filterResonanceRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._filterResonanceSlider.container);\r\n\tprivate readonly _filterEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _filterEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterEnvelope\") }, \"Filter Env:\"), div({ class: \"selectContainer\" }, this._filterEnvelopeSelect));\r\n\tprivate readonly _pulseEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _pulseEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Pulse Width Modulator Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseEnvelope\") }, \"Pulse Env:\"), div({ class: \"selectContainer\" }, this._pulseEnvelopeSelect));\r\n\tprivate readonly _pulseWidthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"1\", max: Config.pulseWidthRange, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue), false);\r\n\tprivate _pulseWidthRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseWidth\") }, \"Pulse Width:\"), this._pulseWidthSlider.container);\r\n\tprivate readonly _intervalSelect: HTMLSelectElement = buildOptions(select(), Config.intervals.map(interval => interval.name));\r\n\tprivate readonly _intervalSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"interval\") }, \"Interval:\"), div({ class: \"selectContainer\" }, this._intervalSelect));\r\n\tprivate readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord => chord.name));\r\n\tprivate readonly _chordDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(2) }, \"▼\");\r\n\tprivate readonly _chordSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chords\") }, \"Chords:\"), this._chordDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._chordSelect));\r\n\tprivate readonly _arpeggioSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstArpeggioSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeArpeggioSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _arpeggioSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"arpeggioSpeed\") }, \"Speed:\"), this._arpeggioSpeedSlider.container);\r\n\tprivate readonly _twoNoteArpBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _twoNoteArpRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"twoNoteArpeggio\") }, \"Fast Two-Note:\"), this._twoNoteArpBox);\r\n\tprivate readonly _chordDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._arpeggioSpeedRow, this._twoNoteArpRow);\r\n\tprivate readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(0) }, \"▼\");\r\n\tprivate readonly _vibratoSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"vibrato\") }, \"Vibrato:\"), this._vibratoDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoSelect));\r\n\tprivate readonly _vibratoDepthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDepth), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDepth(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDepthRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDepth\") }, \"Depth:\"), this._vibratoDepthSlider.container);\r\n\tprivate readonly _vibratoSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoSpeed\") }, \"Speed:\"), this._vibratoSpeedSlider.container);\r\n\tprivate readonly _vibratoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDelay\") }, \"Delay:\"), this._vibratoDelaySlider.container);\r\n\tprivate readonly _vibratoTypeSelect: HTMLSelectElement = buildOptions(select(), Config.vibratoTypes.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoTypeSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoType\") }, \"Type:\"), div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoTypeSelect));\r\n\tprivate readonly _vibratoDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._vibratoDepthRow, this._vibratoSpeedRow, this._vibratoDelayRow, this._vibratoTypeSelectRow);\r\n\tprivate readonly _phaseModGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback => feedback.name));\r\n\tprivate readonly _feedbackRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedbackTypeSelect));\r\n\tprivate readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\r\n\tprivate readonly _spectrumRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"spectrum\") }, \"Spectrum:\"), this._spectrumEditor.container);\r\n\tprivate readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\r\n\tprivate readonly _harmonicsRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"harmonics\") }, \"Harmonics:\"), this._harmonicsEditor.container);\r\n\tprivate readonly _drumsetGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modulatorGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modNameRows: HTMLElement[];\r\n\tprivate readonly _modChannelBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modInstrumentBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modSetRows: HTMLElement[];\r\n\tprivate readonly _modSetBoxes: HTMLSelectElement[];\r\n\r\n\tprivate readonly _instrumentCopyButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"copyButton\" }, [\r\n\t\t\"Copy\",\r\n\t\t// Copy icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\r\n\t\t]),\r\n\t]);\r\n\tprivate readonly _instrumentPasteButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"pasteButton\" }, [\r\n\t\t\"Paste\",\r\n\t\t// Paste icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\r\n\t\t\tSVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\r\n\t\t]),\r\n\t]);\r\n\r\n\tprivate readonly _customWaveDrawCanvas: CustomChipCanvas = new CustomChipCanvas(canvas({ width: 128, height: 52, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customWaveDrawCanvas\" }), this._doc, (newArray: Float64Array) => new ChangeCustomWave(this._doc, newArray));\r\n\tprivate readonly _customWavePresetDrop: HTMLSelectElement = buildHeaderedOptions(\"Load Preset\", select({ style: \"width: 50%; height:1.5em; text-align: center; text-align-last: center;\" }),\r\n\t\tConfig.chipWaves.map(wave => wave.name)\r\n\t);\r\n\tprivate readonly _customWaveZoom: HTMLButtonElement = button({ style: \"margin-left:0.5em; height:1.5em; max-width: 20px;\", onclick: () => this._openPrompt(\"customChipSettings\") }, \"+\");\r\n\r\n\tprivate readonly _customWaveDraw: HTMLDivElement = div({ style: \"height:80px; margin-top:10px; margin-bottom:5px\" }, [\r\n\t\tdiv({ style: \"height:54px; display:flex; justify-content:center;\" }, [this._customWaveDrawCanvas.canvas]),\r\n\t\tdiv({ style: \"margin-top:5px; display:flex; justify-content:center;\" }, [this._customWavePresetDrop, this._customWaveZoom]),\r\n\t]);\r\n\r\n\tprivate readonly _songTitleInputBox: InputBox = new InputBox(input({ style: \"font-weight:bold; border:none; width: 100%; background-color:${ColorConfig.editorBackground}; color:${ColorConfig.primaryText}; text-align:center\", maxlength: \"30\", type: \"text\", value: EditorConfig.versionDisplayName }), this._doc, (oldValue: string, newValue: string) => new ChangeSongTitle(this._doc, oldValue, newValue));\r\n\r\n\r\n\tprivate readonly _feedbackAmplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _feedbackEnvelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Feedback Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate readonly _feedbackRow2: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\tdiv({ style: \"width: 3em; margin-right: .3em;\" }),\r\n\t\tthis._feedbackAmplitudeSlider.container,\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, this._feedbackEnvelopeSelect),\r\n\t);\r\n\t/*\r\n\t\t\t* @jummbus - my very real, valid reason for cutting this button: I don't like it.\r\n\t\t\t* \r\n\tprivate readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", style: \"margin: 2px 0\"},\r\n\r\n\t\t\"Customize Instrument\",\r\n\t);\r\n\t\t*/\r\n\tprivate readonly _customInstrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._chipWaveSelectRow,\r\n\t\tthis._chipNoiseSelectRow,\r\n\t\tthis._detuneSliderRow,\r\n\t\tthis._customWaveDraw,\r\n\t\tthis._filterCutoffRow,\r\n\t\tthis._filterResonanceRow,\r\n\t\tthis._filterEnvelopeRow,\r\n\t\tthis._transitionRow,\r\n\t\tthis._transitionDropdownGroup,\r\n\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"effects\") }, \"Effects:\"),\r\n\t\t\tdiv({ class: \"selectContainer\" }, this._effectsSelect),\r\n\t\t),\r\n\t\tthis._chordSelectRow,\r\n\t\tthis._chordDropdownGroup,\r\n\t\tthis._vibratoSelectRow,\r\n\t\tthis._vibratoDropdownGroup,\r\n\t\tthis._intervalSelectRow,\r\n\t\tthis._algorithmSelectRow,\r\n\t\tthis._phaseModGroup,\r\n\t\tthis._feedbackRow1,\r\n\t\tthis._feedbackRow2,\r\n\t\tthis._spectrumRow,\r\n\t\tthis._harmonicsRow,\r\n\t\tthis._drumsetGroup,\r\n\t\tthis._pulseEnvelopeRow,\r\n\t\tthis._pulseWidthRow,\r\n\t);\r\n\tprivate readonly _instrumentCopyGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tthis._instrumentCopyButton,\r\n\t\t\tthis._instrumentPasteButton,\r\n\t\t),\r\n\t);\r\n\tprivate readonly _instrumentSettingsTextRow: HTMLDivElement = div({ id: \"instrumentSettingsText\", style: `margin: 3px 0; max-width: 15em; text-align: center; color: ${ColorConfig.secondaryText};` },\r\n\t\t\"Instrument Settings\"\r\n\t);\r\n\tprivate readonly _instrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._instrumentSettingsTextRow,\r\n\t\tthis._instrumentSelectRow,\r\n\t\tdiv({ class: \"selectRow\", id: \"typeSelectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentType\") }, \"Type: \"),\r\n\t\t\tdiv(\r\n\t\t\t\tdiv({ class: \"pitchSelect\" }, this._pitchedPresetSelect),\r\n\t\t\t\tdiv({ class: \"drumSelect\" }, this._drumPresetSelect)\r\n\t\t\t),\r\n\t\t),\r\n\t\tthis._instrumentVolumeSliderRow,\r\n\t\tthis._panSliderRow,\r\n\t\tthis._panDropdownGroup,\r\n\t\t//this._customizeInstrumentButton,\r\n\t\tthis._customInstrumentSettingsGroup,\r\n\t);\r\n\tprivate readonly _usedPatternIndicator: SVGElement = SVG.path({ d: \"M -6 -6 H 6 V 6 H -6 V -6 M -2 -3 L -2 -3 L -1 -4 H 1 V 4 H -1 V -1.2 L -1.2 -1 H -2 V -3 z\", fill: ColorConfig.indicatorSecondary, \"fill-rule\": \"evenodd\" });\r\n\tprivate readonly _usedInstrumentIndicator: SVGElement = SVG.path({ d: \"M -6 -0.8 H -3.8 V -6 H 0.8 V 4.4 H 2.2 V -0.8 H 6 V 0.8 H 3.8 V 6 H -0.8 V -4.4 H -2.2 V 0.8 H -6 z\", fill: ColorConfig.indicatorSecondary });\r\n\r\n\tprivate readonly _promptContainer: HTMLDivElement = div({ class: \"promptContainer\", style: \"display: none;\" });\r\n\tprivate readonly _patternEditorRow: HTMLDivElement = div({ style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\" },\r\n\t\tthis._patternEditorPrev.container,\r\n\t\tthis._patternEditor.container,\r\n\t\tthis._patternEditorNext.container,\r\n\t);\r\n\tprivate readonly _patternArea: HTMLDivElement = div({ class: \"pattern-area\" },\r\n\t\tthis._piano.container,\r\n\t\tthis._patternEditorRow,\r\n\t\tthis._octaveScrollBar.container,\r\n\t);\r\n\tprivate readonly _trackContainer: HTMLDivElement = div({ class: \"trackContainer\" },\r\n\t\tthis._trackEditor.container,\r\n\t\tthis._loopEditor.container,\r\n\t);\r\n\tprivate readonly _trackAndMuteContainer: HTMLDivElement = div({ class: \"trackAndMuteContainer\" },\r\n\t\tthis._muteEditor.container,\r\n\t\tthis._trackContainer,\r\n\t);\r\n\tpublic readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc, this._trackContainer);\r\n\tprivate readonly _trackArea: HTMLDivElement = div({ class: \"track-area\" },\r\n\t\tthis._trackAndMuteContainer,\r\n\t\tthis._barScrollBar.container,\r\n\t);\r\n\r\n\tpublic readonly _settingsArea: HTMLDivElement = div({ class: \"settings-area noSelection\" },\r\n\t\tdiv({ class: \"version-area\" },\r\n\t\t\tdiv({ style: \"text-align: center; color: ${ColorConfig.secondaryText};\" }, [this._songTitleInputBox.input]),\r\n\t\t),\r\n\t\tdiv({ class: \"play-pause-area\" },\r\n\t\t\tthis._volumeBarBox,\r\n\t\t\tdiv({ class: \"playback-bar-controls\" },\r\n\t\t\t\tthis._playButton,\r\n\t\t\t\tthis._prevBarButton,\r\n\t\t\t\tthis._nextBarButton,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"playback-volume-controls\" },\r\n\t\t\t\tspan({ class: \"volume-speaker\" }),\r\n\t\t\t\tthis._volumeSlider.container,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"menu-area\" },\r\n\t\t\tdiv({ class: \"selectContainer menu file\" },\r\n\t\t\t\tthis._fileMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu edit\" },\r\n\t\t\t\tthis._editMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu preferences\" },\r\n\t\t\t\tthis._optionsMenu,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"song-settings-area\" },\r\n\t\t\tdiv({ class: \"editor-controls\" },\r\n\t\t\t\tdiv({ class: \"editor-song-settings\" },\r\n\t\t\t\t\tdiv({ style: \"margin: 3px 0; position: relative; text-align: center; color: ${ColorConfig.secondaryText};\" },\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position:absolute; left: 0; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedPattern\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"0.5em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedPatternIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position: absolute; left: 14px; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedInstrument\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"1em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedInstrumentIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\"General Settings\"\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\t// div({ class: \"selectRow\" },\r\n\t\t\t\t// \tspan({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\r\n\t\t\t\t// \tdiv({ class: \"selectContainer\" }, this._scaleSelect),\r\n\t\t\t\t// ),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._scaleSelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"key\") }, \"Key: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._keySelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"tempo\") }, \"Tempo: \"),\r\n\t\t\t\t\tspan({ style: \"display: flex;\" },\r\n\t\t\t\t\t\tthis._tempoSlider.container,\r\n\t\t\t\t\t\tthis._tempoStepper,\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"reverb\") }, \"Reverb: \"),\r\n\t\t\t\t\tthis._reverbSlider.container,\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"rhythm\") }, \"Rhythm: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._rhythmSelect),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"instrument-settings-area\" },\r\n\t\t\tthis._instrumentSettingsGroup,\r\n\t\t\tthis._modulatorGroup,\r\n\t\t),\r\n\t);\r\n\r\n\tpublic readonly mainLayer: HTMLDivElement = div({ class: \"beepboxEditor\", tabIndex: \"0\" },\r\n\t\tthis._patternArea,\r\n\t\tthis._trackArea,\r\n\t\tthis._settingsArea,\r\n\t\tthis._promptContainer,\r\n\t);\r\n\r\n\tprivate _wasPlaying: boolean = false;\r\n\tprivate _currentPromptName: string | null = null;\r\n\tprivate readonly _operatorRows: HTMLDivElement[] = []\r\n\tprivate readonly _operatorAmplitudeSliders: Slider[] = []\r\n\tprivate readonly _operatorEnvelopeSelects: HTMLSelectElement[] = []\r\n\tprivate readonly _operatorFrequencySelects: HTMLSelectElement[] = []\r\n\tprivate readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\r\n\tprivate readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\r\n\tprivate _showModSliders: boolean[] = [];\r\n\tprivate _newShowModSliders: boolean[] = [];\r\n\tprivate _modSliderValues: number[] = [];\r\n\tprivate _hasActiveModSliders: boolean = false;\r\n\tprivate _modSliderHandle: number = 0;\r\n\tprivate _volumeHandle: number = 0;\r\n\tprivate _barScrollbarHandle: number = 0;\r\n\r\n\tprivate _openPanDropdown: boolean = false;\r\n\tprivate _openVibratoDropdown: boolean = false;\r\n\tprivate _openChordDropdown: boolean = false;\r\n\tprivate _openTransitionDropdown: boolean = false;\r\n\r\n\tprivate outVolumeHistoricTimer: number = 0;\r\n\tprivate outVolumeHistoricCap: number = 0;\r\n\tprivate lastOutVolumeCap: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._doc.notifier.watch(this.whenUpdated);\r\n\t\twindow.addEventListener(\"resize\", this.whenUpdated);\r\n\r\n\t\tif (!(\"share\" in navigator)) {\r\n\t\t\tthis._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\r\n\t\t}\r\n\r\n\t\tthis._scaleSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceScale\" }, \"Snap Notes To Scale\"),\r\n\t\t));\r\n\t\tthis._keySelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"detectKey\" }, \"Detect Key\"),\r\n\t\t));\r\n\t\tthis._rhythmSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceRhythm\" }, \"Snap Notes To Rhythm\"),\r\n\t\t));\r\n\r\n\t\tthis._vibratoSelect.appendChild(option({ hidden: true, value: 5 }, \"custom\"));\r\n\r\n\r\n\t\tthis._showModSliders = new Array<boolean>(ModSetting.mstMaxValue);\r\n\t\tthis._modSliderValues = new Array<number>(ModSetting.mstMaxValue);\r\n\r\n\t\tthis._phaseModGroup.appendChild(div({ class: \"operatorRow\", style: \"color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;\" },\r\n\t\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\t\tdiv({ style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorFrequency\") }, \"Freq:\"),\r\n\t\t\tdiv({ style: \"width: 4em; margin: 0;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorVolume\") }, \"Volume:\"),\r\n\t\t\tdiv({ style: \"width: 5em; margin-left: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorEnvelope\") }, \"Envelope:\"),\r\n\t\t));\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tconst operatorIndex: number = i;\r\n\t\t\tconst operatorNumber: HTMLDivElement = div({ style: \"margin-right: .1em; color: \" + ColorConfig.secondaryText + \";\" }, i + 1 + \".\");\r\n\t\t\tconst frequencySelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Frequency\" }), Config.operatorFrequencies.map(freq => freq.name));\r\n\t\t\tconst amplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue), false);\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\t\t\toperatorNumber,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\" }, frequencySelect),\r\n\t\t\t\tamplitudeSlider.container,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, envelopeSelect),\r\n\t\t\t);\r\n\t\t\tthis._phaseModGroup.appendChild(row);\r\n\t\t\tthis._operatorRows[i] = row;\r\n\t\t\tthis._operatorAmplitudeSliders[i] = amplitudeSlider;\r\n\t\t\tthis._operatorEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tthis._operatorFrequencySelects[i] = frequencySelect;\r\n\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorEnvelope(this._doc, operatorIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\t\t\tfrequencySelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, frequencySelect.selectedIndex));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._drumsetGroup.appendChild(\r\n\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetEnvelope\") }, \"Envelope:\"),\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetSpectrum\") }, \"Spectrum:\"),\r\n\t\t\t),\r\n\t\t);\r\n\t\tfor (let i: number = Config.drumCount - 1; i >= 0; i--) {\r\n\t\t\tconst drumIndex: number = i;\r\n\t\t\tconst spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\r\n\t\t\tspectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\t\tthis._drumsetSpectrumEditors[i] = spectrumEditor;\r\n\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Filter Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tthis._drumsetEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"selectRow\" },\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\" }, envelopeSelect),\r\n\t\t\t\tthis._drumsetSpectrumEditors[i].container,\r\n\t\t\t);\r\n\t\t\tthis._drumsetGroup.appendChild(row);\r\n\t\t}\r\n\r\n\t\tthis._modNameRows = [];\r\n\t\tthis._modChannelBoxes = [];\r\n\t\tthis._modInstrumentBoxes = [];\r\n\t\tthis._modSetRows = [];\r\n\t\tthis._modSetBoxes = [];\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\tlet modChannelBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor; text-overflow:ellipsis;\" });\r\n\t\t\tlet modInstrumentBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor;\" });\r\n\r\n\t\t\tlet modNameRow: HTMLDivElement = div({ class: \"operatorRow\", style: \"height: 1em; margin-bottom: 0.65em;\" },\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1em; max-width: 5.4em; min-width: 5.4em;\", id: \"modChannelText\" + mod, onclick: () => this._openPrompt(\"modChannel\") }, \"Ch:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modChannelBox),\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1.2em; margin-left: 0.8em;\", id: \"modInstrumentText\" + mod, onclick: () => this._openPrompt(\"modInstrument\") }, \"Ins:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modInstrumentBox),\r\n\t\t\t);\r\n\r\n\t\t\tlet modSetBox: HTMLSelectElement = select();\r\n\t\t\tlet modSetRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modSettingText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modSet\") }, \"Setting: \"), div({ class: \"selectContainer\" }, modSetBox));\r\n\r\n\t\t\tthis._modNameRows.push(modNameRow);\r\n\t\t\tthis._modChannelBoxes.push(modChannelBox);\r\n\t\t\tthis._modInstrumentBoxes.push(modInstrumentBox);\r\n\t\t\tthis._modSetRows.push(modSetRow);\r\n\t\t\tthis._modSetBoxes.push(modSetBox);\r\n\r\n\t\t\tthis._modulatorGroup.appendChild(div({ style: \"margin: 3px 0; font-weight: bold; margin-bottom: 0.7em; text-align: center; color: \" + ColorConfig.secondaryText + \"; background: \" + ColorConfig.uiWidgetBackground + \";\" }, \"Modulator \" + (mod + 1)));\r\n\t\t\tthis._modulatorGroup.appendChild(modNameRow);\r\n\t\t\tthis._modulatorGroup.appendChild(modSetRow);\r\n\r\n\t\t}\r\n\r\n\t\tthis._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\r\n\t\tthis._editMenu.addEventListener(\"change\", this._editMenuHandler);\r\n\t\tthis._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\r\n\t\tthis._customWavePresetDrop.addEventListener(\"change\", this._customWavePresetHandler);\r\n\t\tthis._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\r\n\t\tthis._scaleSelect.addEventListener(\"change\", this._whenSetScale);\r\n\t\tthis._keySelect.addEventListener(\"change\", this._whenSetKey);\r\n\t\tthis._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\r\n\t\t//this._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\r\n\t\t//this._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\r\n\t\tthis._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\r\n\t\tthis._instrumentSelect.addEventListener(\"change\", this._whenSetInstrument);\r\n\t\t//this._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\r\n\t\tthis._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\r\n\t\tthis._feedbackEnvelopeSelect.addEventListener(\"change\", this._whenSetFeedbackEnvelope);\r\n\t\tthis._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\r\n\t\tthis._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\r\n\t\tthis._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\r\n\t\tthis._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\r\n\t\tthis._filterEnvelopeSelect.addEventListener(\"change\", this._whenSetFilterEnvelope);\r\n\t\tthis._pulseEnvelopeSelect.addEventListener(\"change\", this._whenSetPulseEnvelope);\r\n\t\tthis._intervalSelect.addEventListener(\"change\", this._whenSetInterval);\r\n\t\tthis._chordSelect.addEventListener(\"change\", this._whenSetChord);\r\n\t\tthis._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\r\n\t\tthis._vibratoTypeSelect.addEventListener(\"change\", this._whenSetVibratoType);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\r\n\t\tthis._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\r\n\t\tthis._volumeSlider.input.addEventListener(\"input\", this._setVolumeSlider);\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this._refocusStageNotEditing);\r\n\t\tthis._trackArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\r\n\t\t// The song volume slider is styled slightly different than the class' default.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeSlider.container.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\tthis._volumeBarContainer.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeBarContainer.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\t// Also, any slider with a multiplicative effect instead of a replacement effect gets a different mod color, and a round slider.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\t}\r\n\r\n\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\tlet thisRef: SongEditor = this;\r\n\t\t\tthis._modChannelBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModChannel(mod); });\r\n\t\t\tthis._modInstrumentBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModInstrument(mod); });\r\n\t\t\tthis._modSetBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModSetting(mod); });\r\n\t\t}\r\n\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._harmonicsEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\r\n\t\tthis.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.mainLayer.addEventListener(\"keyup\", this._whenKeyUp);\r\n\t\tthis._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument.bind(this));\r\n\t\tthis._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument.bind(this));\r\n\r\n\t\tthis._instrumentVolumeSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeVolume(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].volume, Math.min(25.0, Math.max(-25.0, Math.round(+this._instrumentVolumeSliderInputBox.value))))) });\r\n\t\tthis._panSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePan(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pan, Math.min(100.0, Math.max(0.0, Math.round(+this._panSliderInputBox.value))))) });\r\n\t\tthis._detuneSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDetune(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].detune, Math.min(Config.detuneMax, Math.max(Config.detuneMin, Math.round(+this._detuneSliderInputBox.value))))) });\r\n\t\tthis._customWaveDraw.addEventListener(\"input\", () => { this._doc.record(new ChangeCustomWave(this._doc, this._customWaveDrawCanvas.newArray)) });\r\n\t\tthis._twoNoteArpBox.addEventListener(\"input\", () => { this._doc.record(new ChangeFastTwoNoteArp(this._doc, this._twoNoteArpBox.checked)) });\r\n\t\tthis._tieNoteTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeTieNoteTransition(this._doc, this._tieNoteTransitionBox.checked)) });\r\n\t\tthis._clicklessTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeClicklessTransition(this._doc, this._clicklessTransitionBox.checked)) });\r\n\r\n\t\tthis._promptContainer.addEventListener(\"click\", (event) => {\r\n\t\t\tif (event.target == this._promptContainer) {\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (isMobile) {\r\n\t\t\tconst autoPlayOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=autoPlay]\");\r\n\t\t\tautoPlayOption.disabled = true;\r\n\t\t\tautoPlayOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\r\n\t\t// Beepbox uses availHeight too, but I have a display that fails the check even when one of the other layouts would look better on it. -jummbus\r\n\t\tif (window.screen.availWidth < 700 /*|| window.screen.availHeight < 700*/) {\r\n\t\t\tconst fullScreenOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=fullScreen]\");\r\n\t\t\tfullScreenOption.disabled = true;\r\n\t\t\tfullScreenOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _toggleDropdownMenu(dropdown: number): void {\r\n\t\tlet target: HTMLButtonElement = this._vibratoDropdown;\r\n\t\tlet group: HTMLElement = this._vibratoDropdownGroup;\r\n\t\tswitch (dropdown) {\r\n\t\t\tcase 0:\r\n\t\t\t\ttarget = this._vibratoDropdown;\r\n\t\t\t\tthis._openVibratoDropdown = this._openVibratoDropdown ? false : true;\r\n\t\t\t\tgroup = this._vibratoDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\ttarget = this._panDropdown;\r\n\t\t\t\tthis._openPanDropdown = this._openPanDropdown ? false : true;\r\n\t\t\t\tgroup = this._panDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\ttarget = this._chordDropdown;\r\n\t\t\t\tthis._openChordDropdown = this._openChordDropdown ? false : true;\r\n\t\t\t\tgroup = this._chordDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\ttarget = this._transitionDropdown;\r\n\t\t\t\tthis._openTransitionDropdown = this._openTransitionDropdown ? false : true;\r\n\t\t\t\tgroup = this._transitionDropdownGroup;\r\n\t\t}\r\n\r\n\t\tif (target.textContent == \"▼\") {\r\n\t\t\ttarget.textContent = \"▲\";\r\n\t\t\tif (group != this._chordDropdownGroup) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t} // Only show arpeggio dropdown if chord arpeggiates\r\n\t\t\telse if (this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].chord == 2) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.textContent = \"▼\";\r\n\t\t\tgroup.style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _modSliderUpdate(): void {\r\n\r\n\t\tif (!this._doc.synth.playing) {\r\n\t\t\tthis._hasActiveModSliders = false;\r\n\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\tthis._showModSliders[setting] = false;\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\t\t\tconst anyModActive: boolean = this._doc.synth.isAnyModActive(this._doc.channel, instrument);\r\n\r\n\t\t\t// Check and update mod values on sliders\r\n\t\t\tif (anyModActive) {\r\n\r\n\t\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\r\n\t\t\t\tfunction updateModSlider(editor: SongEditor, slider: Slider, setting: ModSetting, channel: number, instrument: number): boolean {\r\n\t\t\t\t\tconst forSong: boolean = editor._doc.synth.song!.isSettingForSong(setting);\r\n\t\t\t\t\tif (editor._doc.synth.isModActive(setting, forSong, channel, instrument)) {\r\n\t\t\t\t\t\tlet currentVal: number = editor._doc.synth.song!.realToModValue(editor._doc.synth.getModValue(setting, forSong, channel, instrument, false), setting) / editor._doc.song.mstMaxVols.get(setting)!;\r\n\t\t\t\t\t\tif (currentVal != editor._modSliderValues[setting]) {\r\n\t\t\t\t\t\t\teditor._modSliderValues[setting] = currentVal;\r\n\t\t\t\t\t\t\tslider.container.style.setProperty(\"--mod-position\", (currentVal * 96.0 + 2.0) + \"%\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set mod sliders to present values\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\t// Set to last value\r\n\t\t\t\t\tthis._newShowModSliders[setting] = this._showModSliders[setting];\r\n\r\n\t\t\t\t\t// Check for newer value\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\t\t\t\t\tif (slider != null) {\r\n\t\t\t\t\t\tthis._newShowModSliders[setting] = updateModSlider(this, slider, setting, this._doc.channel, instrument);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._hasActiveModSliders) {\r\n\t\t\t\t// Zero out show-mod-slider settings (since none are active) to kill active mod slider flag\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Class or unclass mod sliders based on present status\r\n\t\t\tif (anyModActive || this._hasActiveModSliders) {\r\n\r\n\t\t\t\tlet anySliderActive: boolean = false;\r\n\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tif (this._newShowModSliders[setting] != this._showModSliders[setting]) {\r\n\t\t\t\t\t\tthis._showModSliders[setting] = this._newShowModSliders[setting];\r\n\t\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\t\t\t\tslider.container.classList.add(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this._newShowModSliders[setting] == true)\r\n\t\t\t\t\t\tanySliderActive = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._hasActiveModSliders = anySliderActive;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _getSliderForModSetting(setting: ModSetting): Slider | null {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\treturn this._panSlider;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\treturn this._detuneSlider;\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[0];\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[1];\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[2];\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[3];\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\treturn this._feedbackAmplitudeSlider;\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\treturn this._pulseWidthSlider;\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\treturn this._filterResonanceSlider;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\treturn this._filterCutoffSlider;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\treturn this._instrumentVolumeSlider;\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\treturn this._vibratoDepthSlider;\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\treturn this._vibratoSpeedSlider;\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\treturn this._vibratoDelaySlider;\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\treturn this._arpeggioSpeedSlider;\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\treturn this._panDelaySlider;\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\treturn this._tempoSlider;\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\treturn this._reverbSlider;\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\treturn this._volumeSlider;\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic changeInstrument(index: number): void {\r\n\t\tthis._instrumentSelect.selectedIndex = index;\r\n\t\tthis._whenSetInstrument();\r\n\t}\r\n\r\n\tprivate _openPrompt(promptName: string): void {\r\n\t\tthis._doc.openPrompt(promptName);\r\n\t\tthis._setPrompt(promptName);\r\n\t}\r\n\r\n\tprivate _setPrompt(promptName: string | null): void {\r\n\t\tif (this._currentPromptName == promptName) return;\r\n\t\tthis._currentPromptName = promptName;\r\n\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\tthis._play();\r\n\t\t\t}\r\n\t\t\tthis._wasPlaying = false;\r\n\t\t\tthis._promptContainer.style.display = \"none\";\r\n\t\t\tthis._promptContainer.removeChild(this.prompt.container);\r\n\t\t\tthis.prompt.cleanUp();\r\n\t\t\tthis.prompt = null;\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tif (promptName) {\r\n\t\t\tswitch (promptName) {\r\n\t\t\t\tcase \"export\":\r\n\t\t\t\t\tthis.prompt = new ExportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"import\":\r\n\t\t\t\t\tthis.prompt = new ImportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"songRecovery\":\r\n\t\t\t\t\tthis.prompt = new SongRecoveryPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"songSettings\":\r\n\t\t\t\t\tthis.prompt = new SongSettingsPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// case \"barCount\":\r\n\t\t\t\t// \tthis.prompt = new SongDurationPrompt(this._doc);\r\n\t\t\t\t// \tbreak;\r\n\t\t\t\t// case \"beatsPerBar\":\r\n\t\t\t\t// \tthis.prompt = new BeatsPerBarPrompt(this._doc);\r\n\t\t\t\t// \tbreak;\r\n\t\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\t\tthis.prompt = new MoveNotesSidewaysPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"channelSettings\":\r\n\t\t\t\t\tthis.prompt = new ChannelSettingsPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"limiterSettings\":\r\n\t\t\t\t\tthis.prompt = new LimiterPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"customChipSettings\":\r\n\t\t\t\t\tthis.prompt = new CustomChipPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"theme\":\r\n\t\t\t\t\tthis.prompt = new ThemePrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"layout\":\r\n\t\t\t\t\tthis.prompt = new LayoutPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.prompt = new TipPrompt(this._doc, promptName);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.prompt) {\r\n\t\t\t\tif (!(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\t\tthis._wasPlaying = this._doc.synth.playing;\r\n\t\t\t\t\tthis._pause();\r\n\t\t\t\t}\r\n\t\t\t\tthis._promptContainer.style.display = \"\";\r\n\t\t\t\tthis._promptContainer.appendChild(this.prompt.container);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic refocusStage = (): void => {\r\n\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\t// Refocus stage if a sub-element that needs focus isn't being edited.\r\n\tprivate _refocusStageNotEditing = (): void => {\r\n\t\tif (!this._patternEditor.editingModLabel)\r\n\t\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\tpublic changeBarScrollPos(offset: number) {\r\n\t\tthis._barScrollBar.changePos(offset);\r\n\t}\r\n\r\n\tpublic whenUpdated = (): void => {\r\n\t\tthis._muteEditor.container.style.display = this._doc.enableChannelMuting ? \"\" : \"none\";\r\n\t\tconst trackBounds = this._trackContainer.getBoundingClientRect();\r\n\t\tthis._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left) / this._doc.getBarWidth());\r\n\t\tthis._barScrollBar.render();\r\n\t\tthis._muteEditor.render();\r\n\t\tthis._trackEditor.render();\r\n\r\n\t\tif (document.activeElement != this._patternEditor.modDragValueLabel && this._patternEditor.editingModLabel) {\r\n\t\t\tthis._patternEditor.stopEditingModLabel(false);\r\n\t\t}\r\n\r\n\t\tthis._piano.container.style.display = this._doc.showLetters ? \"\" : \"none\";\r\n\t\tthis._octaveScrollBar.container.style.display = this._doc.showScrollBar ? \"\" : \"none\";\r\n\t\tthis._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\r\n\t\tthis._volumeBarBox.style.display = this._doc.displayVolumeBar ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.getFullScreen()) {\r\n\t\t\tconst semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.windowPitchCount;\r\n\t\t\tconst targetBeatWidth: number = semitoneHeight * this._doc.song.edo * 5/12;\r\n\t\t\t// const targetBeatWidth: number = semitoneHeight * Config.pitchesPerOctave * 5/12;\r\n\t\t\tconst minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\r\n\t\t\tconst maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\r\n\t\t\tconst beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\r\n\t\t\tconst patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\r\n\r\n\t\t\tthis._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditor.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorPrev.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorNext.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"\";\r\n\t\t\tthis._patternEditorPrev.render();\r\n\t\t\tthis._patternEditorNext.render();\r\n\t\t} else {\r\n\t\t\tthis._patternEditor.container.style.width = \"\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"none\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"none\";\r\n\t\t}\r\n\t\tthis._patternEditor.render();\r\n\r\n\t\tconst optionCommands: ReadonlyArray<string> = [\r\n\t\t\t(this._doc.autoPlay ? \"✓ \" : \"\") + \"Auto Play On Load\",\r\n\t\t\t(this._doc.autoFollow ? \"✓ \" : \"\") + \"Auto Follow Track\",\r\n\t\t\t(this._doc.enableNotePreview ? \"✓ \" : \"\") + \"Preview Added Notes\",\r\n\t\t\t(this._doc.showLetters ? \"✓ \" : \"\") + \"Show Piano Keys\",\r\n\t\t\t(this._doc.showFifth ? \"✓ \" : \"\") + 'Highlight \"Fifth\" Notes',\r\n\t\t\t(this._doc.showChannels ? \"✓ \" : \"\") + \"Show All Channels\",\r\n\t\t\t(this._doc.showScrollBar ? \"✓ \" : \"\") + \"Octave Scroll Bar\",\r\n\t\t\t(this._doc.alwaysFineNoteVol ? \"✓ \" : \"\") + \"Always Fine Note Vol.\",\r\n\t\t\t(this._doc.enableChannelMuting ? \"✓ \" : \"\") + \"Enable Channel Muting\",\r\n\t\t\t(this._doc.displayBrowserUrl ? \"✓ \" : \"\") + \"Display Song Data in URL\",\r\n\t\t\t(this._doc.displayVolumeBar ? \"✓ \" : \"\") + \"Show Playback Volume\",\r\n\t\t\t\"Set Layout...\",\r\n\t\t\t\"Set Theme...\",\r\n\t\t\t//(this._doc.alwaysShowSettings ? \"✓ \" : \"\") + \"Customize All Instruments\",\r\n\t\t]\r\n\t\tfor (let i: number = 0; i < optionCommands.length; i++) {\r\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.children[i + 1];\r\n\t\t\tif (option.innerText != optionCommands[i]) option.innerText = optionCommands[i];\r\n\t\t}\r\n\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\tconst instrumentIndex: number = this._doc.getCurrentInstrument();\r\n\t\tconst instrument: Instrument = channel.instruments[instrumentIndex];\r\n\t\tconst wasActive: boolean = this.mainLayer.contains(document.activeElement);\r\n\t\tconst activeElement: Element | null = document.activeElement;\r\n\r\n\t\tsetSelectedValue(this._scaleSelect, this._doc.song.scale);\r\n\t\tthis._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\r\n\t\tsetSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\r\n\t\tthis._tempoSlider.updateValue(Math.max(0, Math.round(this._doc.song.tempo)));\r\n\t\tthis._tempoStepper.value = Math.round(this._doc.song.tempo).toString();\r\n\t\tthis._songTitleInputBox.updateValue(this._doc.song.title);\r\n\t\tthis._reverbSlider.updateValue(this._doc.song.reverb);\r\n\r\n\t\tsetSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\r\n\r\n\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"\";\r\n\t\t\tthis._panSliderRow.style.display = \"\";\r\n\t\t\tthis._panDropdownGroup.style.display = (this._openPanDropdown ? \"\" : \"none\");\r\n\t\t\tthis._detuneSliderRow.style.display = \"\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"\");\r\n\t\t\tthis._instrumentSettingsGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSelectRow, this._instrumentSettingsGroup.firstChild);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSettingsTextRow, this._instrumentSettingsGroup.firstChild);\r\n\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Instrument Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"none\";\r\n\r\n\t\t\t// Check if current viewed pattern on channel is used anywhere\r\n\t\t\t// + Check if current instrument on channel is used anywhere\r\n\t\t\tvar instrumentUsed = false;\r\n\t\t\tvar patternUsed = false;\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"\";\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().show();\r\n\r\n\t\t\t\tsetSelectedValue(this._drumPresetSelect, instrument.preset);\r\n\t\t\t} else {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().show();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\r\n\t\t\t\tsetSelectedValue(this._pitchedPresetSelect, instrument.preset);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._doc.alwaysShowSettings && instrument.preset != instrument.type) {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\t} else {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"none\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"\";\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipNoiseSelect, instrument.chipNoise);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"\";\r\n\t\t\t\t\tthis._spectrumEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"\";\r\n\t\t\t\t\tthis._harmonicsEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\t\tsetSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\r\n\t\t\t\t\t\tthis._drumsetSpectrumEditors[i].render();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = (this._openTransitionDropdown ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = (this._openChordDropdown && instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordDropdown.style.display = (instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipWaveSelect, instrument.chipWave);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\r\n\t\t\t\t\tsetSelectedValue(this._pulseEnvelopeSelect, instrument.pulseEnvelope);\r\n\t\t\t\t\tthis._pulseWidthSlider.updateValue(instrument.pulseWidth);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tsetSelectedValue(this._algorithmSelect, instrument.algorithm);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\r\n\t\t\t\t\tthis._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackEnvelopeSelect, instrument.feedbackEnvelope);\r\n\t\t\t\t\tthis._feedbackEnvelopeSelect.parentElement!.style.color = (instrument.feedbackAmplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tconst isCarrier: boolean = (i < Config.algorithms[instrument.algorithm].carrierCount);\r\n\t\t\t\t\t\tthis._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorFrequencySelects[i], instrument.operators[i].frequency);\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorEnvelopeSelects[i], instrument.operators[i].envelope);\r\n\t\t\t\t\t\tconst operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\r\n\t\t\t\t\t\tthis._operatorFrequencySelects[i].title = operatorName + \" Frequency\";\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].title = operatorName + \" Envelope\";\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].parentElement!.style.color = (instrument.operators[i].amplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"\";\r\n\t\t\t\t\t// Temporarily hide interval select, until I get them working for these instrument types!\r\n\t\t\t\t\tif (instrument.type == InstrumentType.spectrum || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = (this._openVibratoDropdown ? \"\" : \"none\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst hidden: boolean = !Config.instrumentTypeHasSpecialInterval[instrument.type] ? Config.chords[chordIndex].isCustomInterval : false;\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (hidden) {\r\n\t\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\toption.removeAttribute(\"hidden\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\t\tthis._panSliderInputBox.value = instrument.pan + \"\";\r\n\t\t\tthis._detuneSliderInputBox.value = instrument.detune + \"\";\r\n\t\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\t\tthis._instrumentVolumeSliderInputBox.value = \"\" + (instrument.volume);\r\n\t\t\tthis._vibratoDepthSlider.updateValue(Math.round(instrument.vibratoDepth * 25));\r\n\t\t\tthis._vibratoDelaySlider.updateValue(instrument.vibratoDelay);\r\n\t\t\tthis._vibratoSpeedSlider.updateValue(instrument.vibratoSpeed);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tthis._arpeggioSpeedSlider.updateValue(instrument.arpeggioSpeed);\r\n\t\t\tthis._panDelaySlider.updateValue(instrument.panDelay);\r\n\t\t\tthis._vibratoDelaySlider.input.title = \"\" + instrument.vibratoDelay;\r\n\t\t\tthis._vibratoDepthSlider.input.title = \"\" + instrument.vibratoDepth;\r\n\t\t\tthis._vibratoSpeedSlider.input.title = \"\" + instrument.vibratoSpeed;\r\n\t\t\tthis._panDelaySlider.input.title = \"\" + instrument.panDelay;\r\n\t\t\tthis._arpeggioSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\r\n\r\n\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tthis._customWaveDrawCanvas.redrawCanvas();\r\n\r\n\t\t\t\tif (this.prompt instanceof CustomChipPrompt) {\r\n\t\t\t\t\tthis.prompt.customChipCanvas.render();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// Options for mod channel\r\n\t\telse {\r\n\t\t\tvar patternUsed = false;\r\n\t\t\tvar instrumentUsed = false;\r\n\r\n\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\t\t\tthis._modulatorGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSelectRow, this._modulatorGroup.firstChild);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSettingsTextRow, this._modulatorGroup.firstChild);\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Modulator Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\tthis._detuneSliderRow.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"\";\r\n\t\t\tthis._modulatorGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? this._doc.song.pitchChannelCount : 0);\r\n\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Boundary checking\r\n\t\t\t\tif (modInstrument >= this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\tmodInstrument = 0;\r\n\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator channels (make sure it has the right number).\r\n\t\t\t\tif (this._doc.recalcChannelNames || this._modChannelBoxes[mod].children.length != 2 + this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\twhile (this._modChannelBoxes[mod].firstChild) this._modChannelBoxes[mod].remove(0);\r\n\t\t\t\t\tconst channelList: string[] = [];\r\n\t\t\t\t\tchannelList.push(\"none\");\r\n\t\t\t\t\tchannelList.push(\"song\");\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"pitch \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.noiseChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i + this._doc.song.pitchChannelCount].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"noise \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i + this._doc.song.pitchChannelCount].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modChannelBoxes[mod], channelList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on channel info.\r\n\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msNone) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 0; // none\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 1; // song\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2; // Offset to get to first pitch channel\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2 + this._doc.song.pitchChannelCount; // Offset to get to first noise channel\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator instruments (make sure it has the right number).\r\n\t\t\t\tif (this._modInstrumentBoxes[mod].children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\twhile (this._modInstrumentBoxes[mod].firstChild) this._modInstrumentBoxes[mod].remove(0);\r\n\t\t\t\t\tconst instrumentList: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modInstrumentBoxes[mod], instrumentList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on instrument info.\r\n\t\t\t\tthis._modInstrumentBoxes[mod].selectedIndex = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Build options for modulator settings (based on channel settings)\r\n\r\n\t\t\t\tif (modStatus != ModStatus.msNone) {\r\n\r\n\t\t\t\t\tlet tgtInstrument: Instrument = this._doc.song.channels[modChannel].instruments[modInstrument];\r\n\r\n\t\t\t\t\twhile (this._modSetBoxes[mod].firstChild) this._modSetBoxes[mod].remove(0);\r\n\t\t\t\t\tconst settingList: string[] = [];\r\n\t\t\t\t\tsettingList.push(\"none\");\r\n\r\n\t\t\t\t\t// Populate mod setting options for the song scope.\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 1) {\r\n\t\t\t\t\t\tsettingList.push(\"song volume\");\r\n\t\t\t\t\t\tsettingList.push(\"tempo\");\r\n\t\t\t\t\t\tsettingList.push(\"reverb\");\r\n\t\t\t\t\t\tsettingList.push(\"next bar\");\r\n\t\t\t\t\t\tsettingList.push(\"song detune\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Populate mod setting options for instrument scope.\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\tsettingList.push(\"volume\");\r\n\t\t\t\t\t\tsettingList.push(\"pan\");\r\n\t\t\t\t\t\tsettingList.push(\"pan delay\");\r\n\t\t\t\t\t\tsettingList.push(\"filter cut\");\r\n\t\t\t\t\t\tsettingList.push(\"filter peak\");\r\n\t\t\t\t\t\tsettingList.push(\"detune\");\r\n\t\t\t\t\t\tsettingList.push(\"arpeggio speed\");\r\n\t\t\t\t\t\tsettingList.push(\"reset arpeggio\");\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.chip || tgtInstrument.type == InstrumentType.fm || tgtInstrument.type == InstrumentType.harmonics || tgtInstrument.type == InstrumentType.pwm || tgtInstrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato depth\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato speed\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato delay\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"pulse width\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (tgtInstrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 1\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 2\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 3\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 4\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm feedback\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuildOptions(this._modSetBoxes[mod], settingList);\r\n\r\n\t\t\t\t\tlet needReset: boolean = false;\r\n\t\t\t\t\tlet setIndex: number = 0;\r\n\r\n\t\t\t\t\t// Set selected index based on instrument info. Based on how the list is built.\r\n\t\t\t\t\t//Also has to check for a change in channel setting. Sigh...maybe it could be done better!\r\n\t\t\t\t\tswitch (instrument.modSettings[mod]) {\r\n\t\t\t\t\t\t// For song\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// For instruments\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 6;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 7;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 8;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 9;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 10;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 11;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.pwm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 13;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 14;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 15;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 16;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Catch instances where invalid set forced setting to \"none\"\r\n\t\t\t\t\tif (needReset) {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = setIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (instrument.modSettings[mod] != ModSetting.mstNone) {\r\n\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t//Hide instrument select if channel is \"none\" or \"song\"\r\n\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex <= 1) {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = \"Channel:\";\r\n\r\n\t\t\t\t\t//Hide setting select if channel is \"none\"\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 0) {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = (this._doc.song.instrumentsPerChannel > 1) ? \"Ch:\" : \"Channel:\";\r\n\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._doc.recalcChannelNames = false;\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSelectRow.style.display = \"none\";\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"none\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"none\");\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\t// Force piano to re-show, if channel is modulator\r\n\t\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\tthis._piano.forceRender();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._instrumentSelectRow.style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\tthis._instrumentSelectRow.style.visibility = (pattern == null) ? \"hidden\" : \"\";\r\n\t\tif (this._instrumentSelect.children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\twhile (this._instrumentSelect.firstChild) this._instrumentSelect.removeChild(this._instrumentSelect.firstChild);\r\n\t\t\tconst instrumentList: number[] = [];\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t}\r\n\t\t\tbuildOptions(this._instrumentSelect, instrumentList);\r\n\t\t}\r\n\r\n\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\tthis._panSlider.updateValue(instrument.pan);\r\n\t\tthis._detuneSlider.updateValue(instrument.detune);\r\n\t\tthis._twoNoteArpBox.checked = instrument.fastTwoNoteArp ? true : false;\r\n\t\tthis._tieNoteTransitionBox.checked = instrument.tieNoteTransition ? true : false;\r\n\t\tthis._clicklessTransitionBox.checked = instrument.clicklessTransition ? true : false;\r\n\t\tsetSelectedValue(this._instrumentSelect, instrumentIndex);\r\n\r\n\t\tthis._volumeSlider.updateValue(this._doc.volume);\r\n\r\n\t\t// If an interface element was selected, but becomes invisible (e.g. an instrument\r\n\t\t// select menu) just select the editor container so keyboard commands still work.\r\n\t\tif (wasActive && activeElement != null && activeElement.clientWidth == 0) {\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tthis._setPrompt(this._doc.prompt);\r\n\r\n\t\tif (this._doc.autoFollow && !this._doc.synth.playing) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyUp = (event: KeyboardEvent): void => {\r\n\t\tthis._muteEditor.onKeyUp(event);\r\n\t\tif (event.keyCode == 17) { // Ctrl\r\n\t\t\tthis._patternEditor.controlMode = false;\r\n\t\t}\r\n\t\telse if (event.keyCode == 16) { // Shift\r\n\t\t\tthis._patternEditor.shiftMode = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\r\n\t\t// When the number input is in focus, allow some keyboard events to\r\n\t\t// edit the input without accidentally editing the song otherwise.\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\tcase 13: // enter/return\r\n\t\t\tcase 38: // up\r\n\t\t\tcase 40: // down\r\n\t\t\tcase 37: // left\r\n\t\t\tcase 39: // right\r\n\t\t\tcase 48: // 0\r\n\t\t\tcase 49: // 1\r\n\t\t\tcase 50: // 2\r\n\t\t\tcase 51: // 3\r\n\t\t\tcase 52: // 4\r\n\t\t\tcase 53: // 5\r\n\t\t\tcase 54: // 6\r\n\t\t\tcase 55: // 7\r\n\t\t\tcase 56: // 8\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this.prompt instanceof CustomChipPrompt || this.prompt instanceof LimiterPrompt) {\r\n\t\t\t\tthis.prompt.whenKeyPressed(event);\r\n\t\t\t}\r\n\t\t\tif (event.keyCode == 27) { // ESC key\r\n\t\t\t\t// close prompt.\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing song title, channel name, or mod label\r\n\t\tif (document.activeElement == this._songTitleInputBox.input || this._patternEditor.editingModLabel || document.activeElement == this._muteEditor._channelNameInput.input) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t\tthis._patternEditor.stopEditingModLabel(event.keyCode == 27);\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing volume/pan rows\r\n\t\tif (document.activeElement == this._panSliderInputBox || document.activeElement == this._detuneSliderInputBox || document.activeElement == this._instrumentVolumeSliderInputBox) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//this._trackEditor.onKeyPressed(event);\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // ESC key\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 16: // Shift\r\n\t\t\t\tthis._patternEditor.shiftMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 17: // Ctrl\r\n\t\t\t\tthis._patternEditor.controlMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32: // space\r\n\t\t\t\t// Jump to mouse\r\n\t\t\t\tif (event.ctrlKey || event.shiftKey) {\r\n\t\t\t\t\tif (!this._doc.synth.playing) {\r\n\t\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._trackEditor.movePlayheadToMouse();\r\n\t\t\t\t\tthis._patternEditor.movePlayheadToMouse();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 90: // z\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.redo();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.undo();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 89: // y\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 67: // c\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t//this._trackEditor._selectionUpdated();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter/return\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 65: // a\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 68: // d\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 70: // f\r\n\t\t\t\tthis._doc.synth.firstBar();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 72: // h\r\n\t\t\t\tthis._doc.synth.jumpToEditingBar(this._doc.bar);\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 76: // l\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\t}\r\n\t\t\t\t// else {\r\n\t\t\t\t\t// this._openPrompt(\"barCount\");\r\n\t\t\t\t// }\r\n\t\t\t\tbreak;\r\n\t\t\tcase 77: // m\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tthis._doc.selection.muteChannels(event.shiftKey);\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 78: // n\r\n\t\t\t\t// Find lowest-index unused pattern for current channel\r\n\t\t\t\t// Shift+n - lowest-index completely empty pattern\r\n\r\n\t\t\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\t\t\tif (event.shiftKey || event.ctrlKey) {\r\n\t\t\t\t\tlet nextEmpty: number = 0;\r\n\t\t\t\t\twhile (nextEmpty < this._doc.song.patternsPerChannel && this._doc.song.channels[this._doc.channel].patterns[nextEmpty].notes.length > 0)\r\n\t\t\t\t\t\tnextEmpty++;\r\n\r\n\t\t\t\t\tnextEmpty++; // The next empty pattern is actually the one after the found one\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextEmpty <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextEmpty > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest have something in them.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextEmpty));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextEmpty, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet nextUnused: number = 1;\r\n\t\t\t\t\twhile (this._doc.song.channels[this._doc.channel].bars.indexOf(nextUnused) != -1\r\n\t\t\t\t\t\t&& nextUnused <= this._doc.song.patternsPerChannel)\r\n\t\t\t\t\t\tnextUnused++;\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextUnused <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextUnused > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest are used.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextUnused));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextUnused, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(group);\r\n\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 81: // q\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 83: // s\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\t\tthis._doc.selection.muteChannels(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._doc.selection.soloChannels();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 86: // v\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 87: // w\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 73: // i\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\t\tconst instrumentObject: any = instrument.toJsonObject();\r\n\t\t\t\t\tdelete instrumentObject[\"volume\"];\r\n\t\t\t\t\tdelete instrumentObject[\"pan\"];\r\n\t\t\t\t\tdelete instrumentObject[\"preset\"];\r\n\t\t\t\t\tthis._copyTextToClipboard(JSON.stringify(instrumentObject));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 82: // r\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._randomPreset();\r\n\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 79: // o\r\n\t\t\t\tthis._openPrompt(\"songSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 219: // left brace\r\n\t\t\t\tthis._doc.synth.prevBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 221: // right brace\r\n\t\t\t\tthis._doc.synth.nextBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 189: // -\r\n\t\t\tcase 173: // Firefox -\r\n\t\t\t\tthis._doc.selection.transpose(false, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 187: // +\r\n\t\t\tcase 61: // Firefox +\r\n\t\t\tcase 171: // Some users have this as +? Hmm.\r\n\t\t\t\tthis._doc.selection.transpose(true, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38: // up\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel up, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == 0 || this._doc.channel == this._doc.song.pitchChannelCount || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel - 1, this._doc.channel), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40: // down\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel down, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == this._doc.song.pitchChannelCount - 1 || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._doc.channel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel, this._doc.channel + 1), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 37: // left\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39: // right\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 46: // Delete\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 48: // 0\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 49: // 1\r\n\t\t\t\tthis._doc.selection.nextDigit(\"1\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 50: // 2\r\n\t\t\t\tthis._doc.selection.nextDigit(\"2\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 51: // 3\r\n\t\t\t\tthis._doc.selection.nextDigit(\"3\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 52: // 4\r\n\t\t\t\tthis._doc.selection.nextDigit(\"4\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 53: // 5\r\n\t\t\t\tthis._doc.selection.nextDigit(\"5\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 54: // 6\r\n\t\t\t\tthis._doc.selection.nextDigit(\"6\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 55: // 7\r\n\t\t\t\tthis._doc.selection.nextDigit(\"7\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 56: // 8\r\n\t\t\t\tthis._doc.selection.nextDigit(\"8\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tthis._doc.selection.nextDigit(\"9\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.instrumentDigits = \"\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _copyTextToClipboard(text: string): void {\r\n\t\t// Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n\t\tlet nav: any;\r\n\t\tnav = navigator;\r\n\r\n\t\tif (nav.clipboard && nav.clipboard.writeText) {\r\n\t\t\tnav.clipboard.writeText(text).catch(() => {\r\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", text);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n\t\ttextField.innerText = text;\r\n\t\tdocument.body.appendChild(textField);\r\n\t\ttextField.select();\r\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\r\n\t\ttextField.remove();\r\n\t\tthis.refocusStage();\r\n\t\tif (!succeeded) window.prompt(\"Copy this:\", text);\r\n\t}\r\n\r\n\tprivate _whenPrevBarPressed = (): void => {\r\n\t\tthis._doc.synth.prevBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _whenNextBarPressed = (): void => {\r\n\t\tthis._doc.synth.nextBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._pause();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._play();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _play(): void {\r\n\t\tthis._doc.synth.play();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _pause(): void {\r\n\t\tthis._doc.synth.pause();\r\n\t\tthis._doc.synth.resetEffects();\r\n\t\tif (this._doc.autoFollow) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t\tthis._doc.synth.snapToBar();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.clearInterval(this._modSliderHandle);\r\n\t\twindow.clearInterval(this._volumeHandle);\r\n\t\twindow.clearInterval(this._barScrollbarHandle);\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t\tthis.outVolumeHistoricCap = 0;\r\n\t}\r\n\r\n\tpublic _animate = (): void => {\r\n\t\t// Need to update mods once more to clear the slider display\r\n\t\tthis._modSliderUpdate();\r\n\t\t// Same for volume display\r\n\t\tif (this._doc.displayVolumeBar) {\r\n\t\t\tthis._volumeUpdate();\r\n\t\t}\r\n\t\t// ...and barscrollbar playhead\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _volumeUpdate = (): void => {\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.outVolumeCap != this.lastOutVolumeCap) {\r\n\t\t\tthis.lastOutVolumeCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis._animateVolume(this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animateVolume(outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, outVolumeCap * 144));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\r\n\t}\r\n\r\n\tprivate _setVolumeSlider = (): void => {\r\n\t\tthis._doc.setVolume(Number(this._volumeSlider.input.value));\r\n\t}\r\n\r\n\tprivate _copyInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = instrument.toJsonObject();\r\n\t\tinstrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\twindow.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _pasteInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\r\n\t\tif (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\r\n\t\t}\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _randomPreset(): void {\r\n\t\tconst isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tthis._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\r\n\t}\r\n\r\n\tprivate _randomGenerated(): void {\r\n\t\tthis._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\r\n\t}\r\n\r\n\r\n\tprivate _whenSetTempo = (): void => {\r\n\t\tthis._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\r\n\t}\r\n\r\n\tprivate _whenSetScale = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._scaleSelect.value)) {\r\n\t\t\tswitch (this._scaleSelect.value) {\r\n\t\t\t\tcase \"forceScale\":\r\n\t\t\t\t\tthis._doc.selection.forceScale();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetKey = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._keySelect.value)) {\r\n\t\t\tswitch (this._keySelect.value) {\r\n\t\t\t\tcase \"detectKey\":\r\n\t\t\t\t\tthis._doc.record(new ChangeDetectKey(this._doc));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetRhythm = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._rhythmSelect.value)) {\r\n\t\t\tswitch (this._rhythmSelect.value) {\r\n\t\t\t\tcase \"forceRhythm\":\r\n\t\t\t\t\tthis._doc.selection.forceRhythm();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _refocus = (): void => {\r\n\t\t// Waits a bit because select2 \"steals\" back focus even after the close event fires.\r\n\t\tvar selfRef = this;\r\n\t\tsetTimeout(function () { selfRef.mainLayer.focus(); }, 20);\r\n\t}\r\n\r\n\tpublic _whenSetPitchedPreset = (): void => {\r\n\t\tthis._setPreset($('#pitchPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tpublic _whenSetDrumPreset = (): void => {\r\n\t\tthis._setPreset($('#drumPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tprivate _setPreset(preset: string): void {\r\n\t\tif (isNaN(<number><unknown>preset)) {\r\n\t\t\tswitch (preset) {\r\n\t\t\t\tcase \"copyInstrument\":\r\n\t\t\t\t\tthis._copyInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pasteInstrument\":\r\n\t\t\t\t\tthis._pasteInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomPreset\":\r\n\t\t\t\t\tthis._randomPreset();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomGenerated\":\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangePreset(this._doc, parseInt(preset)));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackType = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackEnvelope(this._doc, this._feedbackEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetAlgorithm = (): void => {\r\n\t\tthis._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInstrument = (): void => {\r\n\t\tthis._doc.selection.setInstrument(this._instrumentSelect.selectedIndex);\r\n\r\n\t\t// Force piano to re-show, if channel is modulator\r\n\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetModChannel = (mod: number): void => {\r\n\t\tthis._doc.selection.setModChannel(mod, this._modChannelBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModInstrument = (mod: number): void => {\r\n\t\tthis._doc.selection.setModInstrument(mod, this._modInstrumentBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModSetting = (mod: number): void => {\r\n\t\t//let prevSetting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod];\r\n\r\n\t\tthis._doc.selection.setModSetting(mod, this._modSetBoxes[mod].children[this._modSetBoxes[mod].selectedIndex].textContent as string);\r\n\r\n\t\t/* Currently cut this as it would have to scale all patterns to make any sense, and I'm leery about the loss of information\r\n\t\t * inherent in scaling to and from a smaller note resolution.\r\n\t\t// Cause pattern editor to scale note heights if necessary. Relies on above call to change this setting, of course.\r\n\t\tthis._patternEditor.scaleModNotes(mod, prevSetting, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod]);\r\n\t\t*/\r\n\r\n\t\t// Force piano to re-show if channel is modulator, as text shown on it needs to update\r\n\t\tthis._piano.forceRender();\r\n\r\n\t}\r\n\r\n\t//private _whenCustomizePressed = (): void => {\r\n\t//\tthis._doc.record(new ChangeCustomizeInstrument(this._doc));\r\n\t//}\r\n\r\n\tprivate _whenSetChipWave = (): void => {\r\n\t\tthis._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetNoiseWave = (): void => {\r\n\t\tthis._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFilterEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFilterEnvelope(this._doc, this._filterEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetPulseEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangePulseEnvelope(this._doc, this._pulseEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetTransition = (): void => {\r\n\t\tthis._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetEffects = (): void => {\r\n\t\tthis._doc.record(new ChangeEffects(this._doc, this._effectsSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibrato = (): void => {\r\n\t\tthis._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibratoType = (): void => {\r\n\t\tthis._doc.record(new ChangeVibratoType(this._doc, this._vibratoTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInterval = (): void => {\r\n\t\tthis._doc.record(new ChangeInterval(this._doc, this._intervalSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetChord = (): void => {\r\n\t\tthis._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _fileMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._fileMenu.value) {\r\n\t\t\tcase \"new\":\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, \"\"), false, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"export\":\r\n\t\t\t\tthis._openPrompt(\"export\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"import\":\r\n\t\t\t\tthis._openPrompt(\"import\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyUrl\":\r\n\t\t\t\tthis._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shareUrl\":\r\n\t\t\t\t(<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shortenUrl\":\r\n\t\t\t\twindow.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"viewPlayer\":\r\n\t\t\t\tlocation.href = \"player/#song=\" + this._doc.song.toBase64String();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyEmbed\":\r\n\t\t\t\tthis._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"songRecovery\":\r\n\t\t\t\tthis._openPrompt(\"songRecovery\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._fileMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _editMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._editMenu.value) {\r\n\t\t\tcase \"undo\":\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"redo\":\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copy\":\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"insertBars\":\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"deleteBars\":\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNotes\":\r\n\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNumbers\":\r\n\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeUp\":\r\n\t\t\t\tthis._doc.selection.transpose(true, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeDown\":\r\n\t\t\t\tthis._doc.selection.transpose(false, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectAll\":\r\n\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectChannel\":\r\n\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"duplicatePatterns\":\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"songSettings\":\r\n\t\t\t\tthis._openPrompt(\"songSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\t// case \"barCount\":\r\n\t\t\t// \tthis._openPrompt(\"barCount\");\r\n\t\t\t// \tbreak;\r\n\t\t\t// case \"beatsPerBar\":\r\n\t\t\t// \tthis._openPrompt(\"beatsPerBar\");\r\n\t\t\t// \tbreak;\r\n\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"channelSettings\":\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"limiterSettings\":\r\n\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._editMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _optionsMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._optionsMenu.value) {\r\n\t\t\tcase \"autoPlay\":\r\n\t\t\t\tthis._doc.autoPlay = !this._doc.autoPlay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"autoFollow\":\r\n\t\t\t\tthis._doc.autoFollow = !this._doc.autoFollow;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableNotePreview\":\r\n\t\t\t\tthis._doc.enableNotePreview = !this._doc.enableNotePreview;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showLetters\":\r\n\t\t\t\tthis._doc.showLetters = !this._doc.showLetters;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showFifth\":\r\n\t\t\t\tthis._doc.showFifth = !this._doc.showFifth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showChannels\":\r\n\t\t\t\tthis._doc.showChannels = !this._doc.showChannels;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showScrollBar\":\r\n\t\t\t\tthis._doc.showScrollBar = !this._doc.showScrollBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"alwaysFineNoteVol\":\r\n\t\t\t\tthis._doc.alwaysFineNoteVol = !this._doc.alwaysFineNoteVol;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableChannelMuting\":\r\n\t\t\t\tthis._doc.enableChannelMuting = !this._doc.enableChannelMuting;\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayBrowserUrl\":\r\n\t\t\t\tthis._doc.toggleDisplayBrowserUrl();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayVolumeBar\":\r\n\t\t\t\tthis._doc.displayVolumeBar = !this._doc.displayVolumeBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullScreen\":\r\n\t\t\t\tthis._openPrompt(\"layout\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"colorTheme\":\r\n\t\t\t\tthis._openPrompt(\"theme\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._optionsMenu.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n\r\n\tprivate _customWavePresetHandler = (event: Event): void => {\r\n\r\n\t\t// Update custom wave value\r\n\t\tlet customWaveArray: Float64Array = new Float64Array(64);\r\n\t\tlet index: number = this._customWavePresetDrop.selectedIndex - 1;\r\n\t\tlet maxValue: number = Number.MIN_VALUE;\r\n\t\tlet minValue: number = Number.MAX_VALUE;\r\n\t\tlet arrayPoint: number = 0;\r\n\t\tlet arrayStep: number = (Config.chipWaves[index].samples.length - 1) / 64.0;\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Compute derivative to get original wave.\r\n\t\t\tcustomWaveArray[i] = (Config.chipWaves[index].samples[Math.floor(arrayPoint)] - Config.chipWaves[index].samples[(Math.floor(arrayPoint) + 1)]) / arrayStep;\r\n\r\n\t\t\tif (customWaveArray[i] < minValue)\r\n\t\t\t\tminValue = customWaveArray[i];\r\n\r\n\t\t\tif (customWaveArray[i] > maxValue)\r\n\t\t\t\tmaxValue = customWaveArray[i];\r\n\r\n\t\t\t// Scale an any-size array to 64 elements\r\n\t\t\tarrayPoint += arrayStep;\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Change array range from Min~Max to 0~(Max-Min)\r\n\t\t\tcustomWaveArray[i] -= minValue;\r\n\t\t\t// Divide by (Max-Min) to get a range of 0~1,\r\n\t\t\tcustomWaveArray[i] /= (maxValue - minValue);\r\n\t\t\t//then multiply by 48 to get 0~48,\r\n\t\t\tcustomWaveArray[i] *= 48.0;\r\n\t\t\t//then subtract 24 to get - 24~24\r\n\t\t\tcustomWaveArray[i] -= 24.0;\r\n\t\t\t//need to force integers\r\n\t\t\tcustomWaveArray[i] = Math.ceil(customWaveArray[i]);\r\n\r\n\t\t\t// Copy back data to canvas\r\n\t\t\tthis._customWaveDrawCanvas.newArray[i] = customWaveArray[i];\r\n\t\t}\r\n\r\n\t\t//this._instrumentVolumeSlider.input.value = \"\" + Math.round(Config.waveVolumes[index] * 50.0 - 50.0);\r\n\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, customWaveArray))\r\n\t\tthis._doc.record(new ChangeVolume(this._doc, +this._instrumentVolumeSlider.input.value, -Config.volumeRange / 2 + Math.round(Math.sqrt(Config.chipWaves[index].volume) * Config.volumeRange / 2)));\r\n\r\n\t\tthis._customWavePresetDrop.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\r\nimport { Note, Pattern } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeModChannel, ChangeModInstrument, ChangeModSetting, ChangeTrackSelection, ChangeChannelBar, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeDeleteBars, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangePatternInstrument, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, comparePatternNotes, unionOfUsedNotes, generateScaleMap } from \"./changes\";\r\n\r\ninterface PatternCopy {\r\n\tinstrument: number;\r\n\tnotes: any[];\r\n}\r\n\r\ninterface ChannelCopy {\r\n\tisNoise: boolean;\r\n\tisMod: boolean;\r\n\tpatterns: Dictionary<PatternCopy>;\r\n\tbars: number[];\r\n}\r\n\r\ninterface SelectionCopy {\r\n\tpartDuration: number;\r\n\tchannels: ChannelCopy[];\r\n}\r\n\r\nexport class Selection {\r\n\tpublic boxSelectionX0: number = 0;\r\n\tpublic boxSelectionY0: number = 0;\r\n\tpublic boxSelectionX1: number = 0;\r\n\tpublic boxSelectionY1: number = 0;\r\n\tpublic digits: string = \"\";\r\n\tpublic instrumentDigits: string = \"\";\r\n\tpublic patternSelectionStart: number = 0;\r\n\tpublic patternSelectionEnd: number = 0;\r\n\tpublic patternSelectionActive: boolean = false;\r\n\r\n\tprivate _changeTranspose: ChangeGroup | null = null;\r\n\tprivate _changeTrack: ChangeGroup | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument) { }\r\n\r\n\tpublic toJSON(): { x0: number, x1: number, y0: number, y1: number, start: number, end: number } {\r\n\t\treturn {\r\n\t\t\t\"x0\": this.boxSelectionX0,\r\n\t\t\t\"x1\": this.boxSelectionX1,\r\n\t\t\t\"y0\": this.boxSelectionY0,\r\n\t\t\t\"y1\": this.boxSelectionY1,\r\n\t\t\t\"start\": this.patternSelectionStart,\r\n\t\t\t\"end\": this.patternSelectionEnd,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic fromJSON(json: { x0: number, x1: number, y0: number, y1: number, start: number, end: number }): void {\r\n\t\tif (json == null) return;\r\n\t\tthis.boxSelectionX0 = +json[\"x0\"];\r\n\t\tthis.boxSelectionX1 = +json[\"x1\"];\r\n\t\tthis.boxSelectionY0 = +json[\"y0\"];\r\n\t\tthis.boxSelectionY1 = +json[\"y1\"];\r\n\t\tthis.patternSelectionStart = +json[\"start\"];\r\n\t\tthis.patternSelectionEnd = +json[\"end\"];\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t\tthis.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\r\n\t}\r\n\r\n\tpublic selectionUpdated(): void {\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t}\r\n\r\n\tpublic get boxSelectionBar(): number {\r\n\t\treturn Math.min(this.boxSelectionX0, this.boxSelectionX1);\r\n\t}\r\n\tpublic get boxSelectionChannel(): number {\r\n\t\treturn Math.min(this.boxSelectionY0, this.boxSelectionY1);\r\n\t}\r\n\tpublic get boxSelectionWidth(): number {\r\n\t\treturn Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\r\n\t}\r\n\tpublic get boxSelectionHeight(): number {\r\n\t\treturn Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\r\n\t}\r\n\tpublic scrollToSelection(): void {\r\n\t\tthis._doc.barScrollPos = Math.min(this._doc.barScrollPos, this.boxSelectionX1);\r\n\t\tthis._doc.barScrollPos = Math.max(this._doc.barScrollPos, this.boxSelectionX1 - (this._doc.trackVisibleBars - 1));\r\n\t}\r\n\r\n\tpublic setChannelBar(channel: number, bar: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeChannelBar(this._doc, channel, bar));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic setPattern(pattern: number): void {\r\n\t\tthis._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic nextDigit(digit: string, forInstrument: boolean): void {\r\n\t\tif (forInstrument) {\r\n\t\t\tthis.instrumentDigits += digit;\r\n\t\t\tvar parsed = parseInt(this.instrumentDigits);\r\n\t\t\tvar pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = digit;\r\n\t\t\tparsed = parseInt(this.instrumentDigits);\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = \"\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.digits += digit;\r\n\t\t\tlet parsed: number = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = digit;\r\n\t\t\tparsed = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setModChannel(mod: number, index: number): void {\r\n\t\tthis._doc.record(new ChangeModChannel(this._doc, mod, index));\r\n\t}\r\n\r\n\tpublic setModInstrument(mod: number, instrument: number): void {\r\n\t\tthis._doc.record(new ChangeModInstrument(this._doc, mod, instrument));\r\n\t}\r\n\r\n\tpublic setModSetting(mod: number, text: string): void {\r\n\t\tthis._doc.record(new ChangeModSetting(this._doc, mod, text));\r\n\t}\r\n\r\n\tpublic insertBars(): void {\r\n\t\tthis._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\r\n\t\tconst width: number = this.boxSelectionWidth;\r\n\t\tthis.boxSelectionX0 += width;\r\n\t\tthis.boxSelectionX1 += width;\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tpublic deleteBars(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\r\n\t\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t\t}\r\n\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgroup.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t} else {\r\n\t\t\tgroup.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\r\n\t\t\tconst width: number = this.boxSelectionWidth;\r\n\t\t\tthis.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\r\n\t\t\tthis.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\r\n\t\t}\r\n\t\tthis._doc.record(group);\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate * _eachSelectedChannel(): IterableIterator<number> {\r\n\t\tfor (let channel: number = this.boxSelectionChannel; channel < this.boxSelectionChannel + this.boxSelectionHeight; channel++) {\r\n\t\t\tyield channel;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedBar(): IterableIterator<number> {\r\n\t\tfor (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\r\n\t\t\tyield bar;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedPattern(channel: number): IterableIterator<Pattern> {\r\n\t\tconst handledPatterns: Dictionary<boolean> = {};\r\n\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\tif (currentPatternIndex == 0) continue;\r\n\t\t\tif (handledPatterns[String(currentPatternIndex)]) continue;\r\n\t\t\thandledPatterns[String(currentPatternIndex)] = true;\r\n\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\tif (pattern == null) throw new Error();\r\n\t\t\tyield pattern;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _patternIndexIsUnused(channel: number, patternIndex: number): boolean {\r\n\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\tif (this._doc.song.channels[channel].bars[i] == patternIndex) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic copy(): void {\r\n\t\tconst channels: ChannelCopy[] = [];\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tconst patterns: Dictionary<PatternCopy> = {};\r\n\t\t\tconst bars: number[] = [];\r\n\r\n\t\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\t\tconst patternNumber: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tbars.push(patternNumber);\r\n\t\t\t\tif (patterns[String(patternNumber)] == undefined) {\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tlet instrument: number = 0;\r\n\t\t\t\t\tlet notes: Note[] = [];\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tinstrument = pattern.instrument;\r\n\r\n\t\t\t\t\t\tif (this.patternSelectionActive) {\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tif (note.end <= this.patternSelectionStart) continue;\r\n\t\t\t\t\t\t\t\tif (note.start >= this.patternSelectionEnd) continue;\r\n\t\t\t\t\t\t\t\tif (note.start < this.patternSelectionStart || note.end > this.patternSelectionEnd) {\r\n\t\t\t\t\t\t\t\t\tnew ChangeNoteLength(null, note, Math.max(note.start, this.patternSelectionStart), Math.min(this.patternSelectionEnd, note.end));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnote.start -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnote.end -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnotes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnotes = pattern.notes;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpatterns[String(patternNumber)] = { \"instrument\": instrument, \"notes\": notes };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst channelCopy: ChannelCopy = {\r\n\t\t\t\t\"isNoise\": this._doc.song.getChannelIsNoise(channel),\r\n\t\t\t\t\"isMod\": this._doc.song.getChannelIsMod(channel),\r\n\t\t\t\t\"patterns\": patterns,\r\n\t\t\t\t\"bars\": bars,\r\n\t\t\t};\r\n\t\t\tchannels.push(channelCopy);\r\n\t\t}\r\n\r\n\t\tconst selectionCopy: SelectionCopy = {\r\n\t\t\t\"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\r\n\t\t\t\"channels\": channels,\r\n\t\t};\r\n\t\twindow.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\r\n\t}\r\n\r\n\t// I'm sorry this function is so complicated!\r\n\t// Basically I'm trying to avoid accidentally modifying patterns that are used\r\n\t// elsewhere in the song (unless we're just pasting a single pattern) but I'm\r\n\t// also trying to reuse patterns where it makes sense to do so, especially \r\n\t// in the same channel it was copied from.\r\n\tpublic pasteNotes(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\t\tconst copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst isNoise: boolean = !!channelCopy[\"isNoise\"];\r\n\t\t\tconst isMod: boolean = !!channelCopy[\"isMod\"];\r\n\t\t\tconst patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\t\t\tif (isNoise != this._doc.song.getChannelIsNoise(channel)) continue;\r\n\t\t\tif (isMod != this._doc.song.getChannelIsMod(channel)) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tif (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\r\n\t\t\t\t// Special case: if there's just one pattern being copied, try to insert it\r\n\t\t\t\t// into whatever pattern is already selected.\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[0] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar;\r\n\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\r\n\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\r\n\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\t!this.patternSelectionActive &&\r\n\t\t\t\t\t\t((comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) && instrumentCopy == existingPattern.instrument) ||\r\n\t\t\t\t\t\t\tthis._patternIndexIsUnused(channel, copiedPatternIndex))) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t} else if (this.patternSelectionActive) {\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tconst usedPatterns: Dictionary<boolean> = {};\r\n\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\r\n\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tconst reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\r\n\t\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\t\tconst pattern: Pattern = this._doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\r\n\t\t\t\t\t\tif (!usedPatterns[String(currentPatternIndex)]) {\r\n\t\t\t\t\t\t\tusedPatterns[String(currentPatternIndex)] = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// If this pattern is used here and elsewhere, it's not safe to modify it directly, so\r\n\t\t\t\t\t\t\t// make a duplicate of it and modify that instead.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t\tconst newPattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, pattern.instrument, newPattern));\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tgroup.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\tif (copiedPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst removedPattern: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tif (removedPattern != 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tif (this._patternIndexIsUnused(channel, removedPattern)) {\r\n\t\t\t\t\t\t\t// When a pattern becomes unused when replaced by rectangular selection pasting,\r\n\t\t\t\t\t\t\t// remove all the notes from the pattern so that it may be reused.\r\n\t\t\t\t\t\t\tthis._doc.song.channels[channel].patterns[removedPattern - 1].notes.length = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst reusedIndex: string = String(copiedPatternIndex);\r\n\t\t\t\t\tif (copiedPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\tcopiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\r\n\t\t\t\t\t\tcomparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) &&\r\n\t\t\t\t\t\tinstrumentCopy == existingPattern.instrument) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (existingPattern != undefined && this._patternIndexIsUnused(channel, copiedPatternIndex)) {\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic pasteNumbers(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\r\n\t\t\t\tif (copiedPatternIndex > this._doc.song.patternsPerChannel) {\r\n\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic selectAll(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 &&\r\n\t\t\tthis.boxSelectionChannel == 0 &&\r\n\t\t\tthis.boxSelectionWidth == this._doc.song.barCount &&\r\n\t\t\tthis.boxSelectionHeight == this._doc.song.getChannelCount()) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic selectChannel(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic duplicatePatterns(): void {\r\n\t\tthis._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic muteChannels(allChannels: boolean): void {\r\n\t\tif (allChannels) {\r\n\t\t\tlet anyMuted: boolean = false;\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tif (this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyMuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = !anyMuted;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet anyUnmuted: boolean = false;\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tif (!this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyUnmuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = anyUnmuted;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic soloChannels(): void {\r\n\t\tlet alreadySoloed: boolean = true;\r\n\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tconst shouldBeMuted: boolean = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\tif (this._doc.song.channels[channel].muted != shouldBeMuted) {\r\n\t\t\t\talreadySoloed = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (alreadySoloed) {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic forceRhythm(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternRhythm(this._doc, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic forceScale(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tconst scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tunionOfUsedNotes(pattern, scaleFlags);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale);\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternScale(this._doc, pattern, scaleMap));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic transpose(upward: boolean, octave: boolean): void {\r\n\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\r\n\t\tthis._changeTranspose = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tthis._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tthis._changeTranspose.append(new ChangeTranspose(this._doc, channel, pattern, upward, false, octave));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(this._changeTranspose, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic setInstrument(instrument: number): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrument, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic resetBoxSelection(): void {\r\n\t\tthis.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\r\n\t\tthis.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nexport class ChangeNotifier {\r\n\tprivate _watchers: (() => void)[] = [];\r\n\tprivate _dirty: boolean = false;\r\n\r\n\tpublic watch(watcher: () => void): void {\r\n\t\tif (this._watchers.indexOf(watcher) == -1) {\r\n\t\t\tthis._watchers.push(watcher);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unwatch(watcher: () => void): void {\r\n\t\tconst index: number = this._watchers.indexOf(watcher);\r\n\t\tif (index != -1) {\r\n\t\t\tthis._watchers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic changed(): void {\r\n\t\tthis._dirty = true;\r\n\t}\r\n\r\n\tpublic notifyWatchers(): void {\r\n\t\tif (!this._dirty) return;\r\n\t\tthis._dirty = false;\r\n\t\tfor (const watcher of this._watchers.concat()) {\r\n\t\t\twatcher();\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern, Song, Synth } from \"../synth/synth\";\r\nimport { SongRecovery, generateUid } from \"./SongRecovery\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Selection } from \"./Selection\";\r\nimport { Change } from \"./Change\";\r\nimport { ChangeNotifier } from \"./ChangeNotifier\";\r\nimport { ChangeSong, setDefaultInstruments } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\ninterface HistoryState {\r\n\tcanUndo: boolean;\r\n\tsequenceNumber: number;\r\n\tbar: number;\r\n\tchannel: number;\r\n\trecoveryUid: string;\r\n\tprompt: string | null;\r\n\tselection: { x0: number, x1: number, y0: number, y1: number, start: number, end: number };\r\n}\r\n\r\nexport class SongDocument {\r\n\tpublic song: Song;\r\n\tpublic synth: Synth;\r\n\tpublic notifier: ChangeNotifier = new ChangeNotifier();\r\n\tpublic selection: Selection = new Selection(this);\r\n\tpublic channel: number = 0;\r\n\tpublic muteEditorChannel: number = 0;\r\n\tpublic bar: number = 0;\r\n\tpublic recalcChannelNames: boolean;\r\n\tpublic autoPlay: boolean;\r\n\tpublic autoFollow: boolean;\r\n\tpublic enableNotePreview: boolean;\r\n\tpublic showFifth: boolean;\r\n\tpublic showLetters: boolean;\r\n\tpublic showChannels: boolean;\r\n\tpublic showScrollBar: boolean;\r\n\tpublic alwaysFineNoteVol: boolean = false;\r\n\tpublic alwaysShowSettings: boolean = true;\r\n\tpublic fullScreen: string;\r\n\tpublic enableChannelMuting: boolean;\r\n\tpublic colorTheme: string;\r\n\tpublic displayBrowserUrl: boolean;\r\n\tpublic displayVolumeBar: boolean = true;\r\n\tpublic volume: number = 75;\r\n\tpublic trackVisibleBars: number = 16;\r\n\tpublic barScrollPos: number = 0;\r\n\tpublic prompt: string | null = null;\r\n\tpublic windowOctaves: number = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\tpublic scrollableOctaves: number = Config.pitchOctaves - this.windowOctaves;\r\n\t// public windowPitchCount: number;\r\n\tpublic windowPitchCount: number = this.windowOctaves * Config.pitchesPerOctave + 1;\r\n\tprivate static readonly _maximumUndoHistory: number = 100;\r\n\tprivate _recovery: SongRecovery = new SongRecovery();\r\n\tprivate _recoveryUid: string;\r\n\tprivate _recentChange: Change | null = null;\r\n\tprivate _sequenceNumber: number = 0;\r\n\tprivate _stateShouldBePushed: boolean = false;\r\n\tprivate _recordedNewSong: boolean = false;\r\n\tpublic _waitingToUpdateState: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.notifier.watch(this._normalizeSelection);\r\n\r\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\r\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") == \"true\";\r\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") == \"true\";\r\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\r\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\r\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\r\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\r\n\t\tthis.alwaysFineNoteVol = window.localStorage.getItem(\"alwaysFineNoteVol\") == \"true\";\r\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\r\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\r\n\t\tthis.displayVolumeBar = window.localStorage.getItem(\"displayVolumeBar\") != \"false\";\r\n\t\tthis.fullScreen = window.localStorage.getItem(\"fullScreen\") || \"normal\";\r\n\t\tthis.colorTheme = window.localStorage.getItem(\"colorTheme\") || \"microbox classic\";\r\n\r\n\t\tColorConfig.setTheme(this.colorTheme);\r\n\t\tLayout.setFullScreen(this.fullScreen);\r\n\r\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\r\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\r\n\t\t}\r\n\r\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\r\n\t\t}\r\n\r\n\t\tlet songString: string = window.location.hash;\r\n\t\tif (songString == \"\") {\r\n\t\t\tsongString = this._getHash();\r\n\t\t}\r\n\t\tthis.song = new Song(songString);\r\n\t\tif (songString == \"\" || songString == undefined) setDefaultInstruments(this.song);\r\n\t\tsongString = this.song.toBase64String();\r\n\t\tthis.synth = new Synth(this.song);\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t\t// this.windowPitchCount = this.windowOctaves * this.song.edo + 1;\r\n\r\n\t\tlet state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) {\r\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\r\n\t\t\tstate = { canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON() };\r\n\t\t}\r\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\r\n\t\tthis._replaceState(state, songString);\r\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\r\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\r\n\t\tthis.prompt = state.prompt;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t// For all input events, catch them when they are about to finish bubbling,\r\n\t\t// presumably after all handlers are done updating the model, then update the\r\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\r\n\t\t// but they are immediately followed by mousemove which does. \r\n\t\tfor (const eventName of [\"input\", \"change\", \"click\", \"keyup\", \"keydown\", \"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\r\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toggleDisplayBrowserUrl() {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tthis.displayBrowserUrl = !this.displayBrowserUrl;\r\n\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t}\r\n\r\n\tprivate _getHistoryState(): HistoryState | null {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.history.state;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? null : json.state;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getHash(): string {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.location.hash;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? \"\" : json.hash;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _replaceState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _pushState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\r\n\t\t\tif (currentIndex == oldestIndex) {\r\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\r\n\t\t\t}\r\n\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _forward(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.forward();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\r\n\t\t\tif (currentIndex != newestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _back(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.back();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tif (currentIndex != oldestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenHistoryStateChanged = (): void => {\r\n\t\tif (window.history.state == null && window.location.hash != \"\") {\r\n\t\t\t// The user changed the hash directly.\r\n\t\t\tthis._sequenceNumber++;\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t\tconst state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON() };\r\n\t\t\tnew ChangeSong(this, window.location.hash);\r\n\t\t\tthis.prompt = state.prompt;\r\n\t\t\tif (this.displayBrowserUrl) {\r\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t\t\t} else {\r\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\r\n\t\t\t}\r\n\t\t\tthis.forgetLastChange();\r\n\t\t\tthis.notifier.notifyWatchers();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) throw new Error(\"History state is null.\");\r\n\r\n\t\t// Abort if we've already handled the current state. \r\n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._sequenceNumber = state.sequenceNumber;\r\n\t\tthis.prompt = state.prompt;\r\n\t\tnew ChangeSong(this, this._getHash());\r\n\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\r\n\r\n\t\tthis.forgetLastChange();\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _cleanDocument = (): void => {\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _normalizeSelection = (): void => {\r\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\r\n\t\t// because it may auto-follow the playhead outside the selection but it would\r\n\t\t// be annoying to lose your selection just because the song is playing.\r\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\r\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\r\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\r\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\r\n\t\t\tthis.song.getChannelCount() < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\r\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1)) {\r\n\t\t\tthis.selection.resetBoxSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateHistoryState = (): void => {\r\n\t\tthis._waitingToUpdateState = false;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\r\n\t\tif (this._recordedNewSong) {\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t} else {\r\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, this.song.title, hash);\r\n\t\t}\r\n\t\tlet state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tif (this._stateShouldBePushed) {\r\n\t\t\tthis._pushState(state, hash);\r\n\t\t} else {\r\n\t\t\tthis._replaceState(state, hash);\r\n\t\t}\r\n\t\tthis._stateShouldBePushed = false;\r\n\t\tthis._recordedNewSong = false;\r\n\t}\r\n\r\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\r\n\t\tif (change.isNoop()) {\r\n\t\t\tthis._recentChange = null;\r\n\t\t\tif (replace) this._back();\r\n\t\t} else {\r\n\t\t\tchange.commit();\r\n\t\t\tthis._recentChange = change;\r\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\r\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\r\n\t\t\tif (!this._waitingToUpdateState) {\r\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\r\n\t\t\t\t// committed and the interface has rendered the latest changes to\r\n\t\t\t\t// improve perceived responsiveness.\r\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\r\n\t\t\t\tthis._waitingToUpdateState = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetSongRecoveryUid(): void {\r\n\t\tthis._recoveryUid = generateUid();\r\n\t}\r\n\r\n\tpublic openPrompt(prompt: string): void {\r\n\t\tthis.prompt = prompt;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tthis._sequenceNumber++;\r\n\t\tconst state = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tthis._pushState(state, hash);\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tif (state.canUndo) this._back();\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tthis._forward();\r\n\t}\r\n\r\n\tpublic setProspectiveChange(change: Change | null): void {\r\n\t\tthis._recentChange = change;\r\n\t}\r\n\r\n\tpublic forgetLastChange(): void {\r\n\t\tthis._recentChange = null;\r\n\t}\r\n\r\n\tpublic lastChangeWas(change: Change | null): boolean {\r\n\t\treturn change != null && change == this._recentChange;\r\n\t}\r\n\r\n\tpublic goBackToStart(): void {\r\n\t\tthis.channel = 0;\r\n\t\tthis.bar = 0;\r\n\t\tthis.barScrollPos = 0;\r\n\t\tthis.notifier.changed();\r\n\t\tthis.synth.snapToStart();\r\n\t\tthis.notifier.changed();\r\n\t}\r\n\r\n\tpublic savePreferences(): void {\r\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"alwaysFineNoteVol\", this.alwaysFineNoteVol ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayVolumeBar\", this.displayVolumeBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this.fullScreen);\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this.colorTheme);\r\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\r\n\t}\r\n\r\n\tpublic setVolume(val: number): void {\r\n\t\tthis.volume = val;\r\n\t\tthis.savePreferences();\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t}\r\n\r\n\tprivate _calcVolume(): number {\r\n\t\treturn Math.min(1.0, Math.pow(this.volume / 50.0, 0.5)) * Math.pow(2.0, (this.volume - 75.0) / 25.0);\r\n\t}\r\n\r\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\r\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\r\n\t}\r\n\r\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\r\n\t\tconst pattern: Pattern | null = this.getCurrentPattern(barOffset);\r\n\t\treturn pattern == null ? 0 : pattern.instrument;\r\n\t}\r\n\r\n\tpublic getMobileLayout(): boolean {\r\n\t\treturn (this.fullScreen == \"widefullscreen\") ? window.innerWidth <= 1000 : window.innerWidth <= 700;\r\n\t}\r\n\r\n\tpublic getBarWidth(): number {\r\n\t\t// Bugfix: In wide fullscreen, the 32 pixel display doesn't work as the trackEditor is still horizontally constrained\r\n\t\treturn (!this.getMobileLayout() && this.enableChannelMuting && (!this.getFullScreen() || this.fullScreen == \"widefullscreen\")) ? 30 : 32;\r\n\t}\r\n\r\n\tpublic getChannelHeight(): number {\r\n\t\tconst squashed: boolean = this.getMobileLayout() || this.song.getChannelCount() > 4 || (this.song.barCount > this.trackVisibleBars && this.song.getChannelCount() > 3);\r\n\t\t// TODO: Jummbox widescreen should allow more channels before squashing or megasquashing\r\n\t\tconst megaSquashed: boolean = !this.getMobileLayout() && (((this.fullScreen != \"widefullscreen\") && this.song.getChannelCount() > 11) || this.song.getChannelCount() > 22);\r\n\t\treturn megaSquashed ? 23 : (squashed ? 27 : 32);\r\n\t}\r\n\r\n\tpublic getFullScreen(): boolean {\r\n\t\treturn !this.getMobileLayout() && (this.fullScreen != \"normal\");\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\r\nimport { isMobile, EditorConfig } from \"./EditorConfig\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport \"./style\"; // Import for the side effects, there's no exports.\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { NotePin, Note, Pattern, Instrument, Channel, Synth } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { ChangePreset } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst doc: SongDocument = new SongDocument();\r\nconst editor: SongEditor = new SongEditor(doc);\r\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\r\nbeepboxEditorContainer.appendChild(editor.mainLayer);\r\neditor.whenUpdated();\r\n\r\n// Fade-in transitions\r\neditor.mainLayer.className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"pattern-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"editor-song-settings\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"instrument-settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"trackAndMuteContainer\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"barScrollBar\")[0].className += \" load\";\r\n\r\n// Give select2 class to these\r\n$('#pitchPresetSelect').select2({ dropdownAutoWidth: true });\r\n$('#drumPresetSelect').select2({ dropdownAutoWidth: true });\r\n\r\n// Onclick event to expand/collapse optgroups\r\n$(\"body\").on('click', '.select2-container--open .select2-results__group', function () {\r\n\t$(this).siblings().toggle();\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#pitchPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#pitchPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#drumPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#drumPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Select2 events\r\n// The latter is to ensure select2 doesn't keep focus after the select2 is closed without making a selection.\r\n$('#pitchPresetSelect').on(\"change\", editor._whenSetPitchedPreset);\r\n$('#pitchPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n$('#drumPresetSelect').on(\"change\", editor._whenSetDrumPreset);\r\n$('#drumPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n\r\neditor.mainLayer.focus();\r\n\r\n// don't autoplay on mobile devices, wait for input.\r\nif (!isMobile && doc.autoPlay) {\r\n\tfunction autoplay(): void {\r\n\t\tif (!document.hidden) {\r\n\t\t\tdoc.synth.play();\r\n\t\t\teditor.updatePlayButton();\r\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\r\n\t\t}\r\n\t}\r\n\tif (document.hidden) {\r\n\t\t// Wait until the tab is visible to autoplay:\r\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\r\n\t} else {\r\n\t\tautoplay();\r\n\t}\r\n}\r\n\r\n// BeepBox uses browser history state as its own undo history. Browsers typically\r\n// remember scroll position for each history state, but BeepBox users would prefer not \r\n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\r\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\r\n\r\neditor.updatePlayButton();\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n\tnavigator.serviceWorker.register(\"/service_worker.js\", { updateViaCache: \"all\", scope: \"/\" }).catch(() => { });\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset };\r\n//}\r\n\r\n\r\n\r\n\r\n"]}