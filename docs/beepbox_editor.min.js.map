{"version":3,"sources":["../src/synth/SynthConfig.ts","../src/editor/EditorConfig.ts","../node_modules/imperative-html/src/elements-base.ts","../node_modules/imperative-html/src/elements-strict.ts","../src/editor/ColorConfig.ts","../src/editor/style.ts","../src/synth/FFT.ts","../src/synth/Deque.ts","../src/synth/synth.ts","../src/editor/BarScrollBar.ts","../src/editor/Change.ts","../src/editor/changes.ts","../src/editor/BeatsPerBarPrompt.ts","../src/editor/ChannelSettingsPrompt.ts","../src/editor/CustomChipPrompt.ts","../src/editor/ArrayBufferWriter.ts","../src/editor/Midi.ts","../src/editor/ExportPrompt.ts","../src/editor/HarmonicsEditor.ts","../src/editor/HTMLWrapper.ts","../src/editor/ArrayBufferReader.ts","../src/editor/ImportPrompt.ts","../src/editor/Layout.ts","../src/editor/LayoutPrompt.ts","../src/editor/LimiterPrompt.ts","../src/editor/LoopEditor.ts","../src/editor/MoveNotesSidewaysPrompt.ts","../src/editor/MuteEditor.ts","../src/editor/OctaveScrollBar.ts","../src/editor/PatternEditor.ts","../src/editor/Piano.ts","../src/editor/SongDurationPrompt.ts","../src/editor/SongRecovery.ts","../src/editor/SongRecoveryPrompt.ts","../src/editor/SpectrumEditor.ts","../src/editor/ThemePrompt.ts","../src/editor/TipPrompt.ts","../src/editor/TrackEditor.ts","../src/editor/SongEditor.ts","../src/editor/Selection.ts","../src/editor/ChangeNotifier.ts","../src/editor/SongDocument.ts","../src/editor/main.ts"],"names":["Config","centerWave","wave","sum","i","length","average","cumulative","wavePrev","push","Float64Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","getDrumWave","index","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","samples","Float32Array","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","Error","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","pow","highIndex","min","retroWave","combinedAmplitude","lerped","log","LN2","amplitude","spectrumMax","radians","PI","cos","sin","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","dictionary","value","name","result","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","reverbRange","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentsPerChannelMin","instrumentsPerChannelMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipWaves","volume","pitchFilterMult","isSoft","filterCutoffMaxHz","filterCutoffMinHz","filterMax","filterMaxResonance","filterCutoffRange","filterResonanceRange","transitions","isSeamless","attackSeconds","releases","releaseTicks","slides","slideTicks","vibratos","type","delayParts","vibratoTypes","periodsSeconds","period","arpSpeedScale","intervals","spread","offset","sign","effectsNames","volumeRange","volumeLogScale","panCenter","panMax","detuneMin","detuneMax","songDetuneMin","songDetuneMax","chords","harmonizes","customInterval","arpeggiates","isCustomInterval","strumParts","maxChordSize","operatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","harmonicsControlPoints","harmonicsRendered","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthRange","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","centerFrequency","pitchesPerOctave","drumCount","modCount","pitchOctaves","maxScrollableOctaves","maxPitch","maximumTonesPerChannel","sineWaveLength","sineWaveMask","sineWave","generateSineWave","barEditorHeight","isMobile","test","navigator","userAgent","prettyNumber","toFixed","replace","EditorConfig","[object Object]","presetValue","categoryIndex","presetIndex","presetCategories","presets","program","category","preset","generalMidi","midiProgram","presetName","version","versionDisplayName","customType","settings","transition","effects","chord","filterCutoffHz","filterResonance","filterEnvelope","interval","vibrato","isNoise","algorithm","feedbackType","feedbackAmplitude","feedbackEnvelope","operators","frequency","envelope","customChipWave","harmonics","midiSubharmonicOctaves","pulseWidth","pulseEnvelope","spectrum","drums","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","appendChild","document","createTextNode","Array","isArray","Symbol","iterator","__spread","constructor","Object","Element","_d","e_2","_e","key","setAttribute","join","console","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","createElement","_c","split","name_2","createElementNS","snakeCaseName","ColorConfig","this","colorLookup","clear","song","channel","getComputedStyle","_styleElement","getPropertyValue","trim","base","getChannelColor","regex","secondaryChannel","getComputed","exec","primaryChannel","secondaryNote","primaryNote","pitchChannelCount","pitchChannels","noiseChannelCount","noiseChannels","modChannels","has","get","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","newChannelColors","floor","set","noiseSecondaryChannelHue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","textContent","themes","themeColor","querySelector","resetColors","Map","dark classic","dark competition","light classic","jummbox classic","forest","canyon","midnight","microbox classic","jummbox light","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","whitePianoKey","blackPianoKey","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","head","scrollBarTest","body","div","factor","countBits","n","isPowerOf2","round","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndex","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","clientWidth","classList","add","removeChild","Deque","_capacity","_buffer","undefined","_mask","_offset","_count","_expandCapacity","popFront","popBack","oldBuffer","size","base64IntToCharCode","base64CharCodeToInt","BitFieldReader","source","_bits","_readIndex","charCodeAt","minValue","minBits","numBits","readLongTail","read","BitFieldWriter","_index","writeLongTail","write","other","buffer","ceil","makeNotePin","time","clamp","max","val","validateRange","Note","pitch","start","end","fadeout","pitches","pins","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestVolume","pin","newNote","concat","Pattern","notes","instrument","note","clone","Operator","reset","SpectrumWave","isNoiseChannel","_wave","_waveIsReady","isHarmonic","lowestOctave","waveLength","highestOctave","falloffRatio","pitchTweak","controlPointToOctave","point","value1","value2","octave1","octave2","HarmonicsWave","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","Instrument","isModChannel","chipWave","chipNoise","filterCutoff","vibratoDepth","vibratoSpeed","vibratoDelay","vibratoType","pan","panDelay","arpeggioSpeed","fastTwoNoteArp","tieNoteTransition","clicklessTransition","detune","LFOtime","nextLFOtime","arpTime","customChipWaveIntegral","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modStatuses","modInstruments","modSettings","mod","ModStatus","msNone","ModSetting","mstNone","spectrumWave","instrumentObject","getChord","getFilterCutoffOctaves","getFilterEnvelope","getDrumsetEnvelope","operatorArray","operator","useSlowerRhythm","indexOf","valueOf","setTypeAndReset","oldTransitionNames","binary","sudden","smooth","transitionObject","findIndex","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","sustain sharp","sustain medium","sustain soft","decay sharp","legacyFilter","legacyEffectNames","drum","legacyWaveNames","triangle","square","pulse wide","pulse narrow","sawtooth","double saw","double pulse","spiky","plateau","legacyChorusNames","fifths","octaves","feedback","legacyEnvelopeNames","pluck 1","pluck 2","pluck 3","operatorObject","freq","frequencyFromPitch","drumsetIndexReferenceDelta","getCustomWave","_drumsetIndexToSpectrumOctave","Channel","octave","instruments","patterns","bars","muted","Song","string","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","mstMaxVols","mstSongVolume","mstTempo","mstReverb","mstNextBar","mstInsVolume","mstPan","mstFilterCut","mstFilterPeak","mstFMSlider1","mstFMSlider2","mstFMSlider3","mstFMSlider4","mstFMFeedback","mstPulseWidth","mstDetune","mstVibratoDepth","mstSongDetune","mstVibratoSpeed","mstVibratoDelay","mstArpeggioSpeed","mstPanDelay","mstResetArpeggio","mstMaxValue","mstNewNoteVols","getNewNoteVolume","isMod","modChannel","modInstrument","cap","realToModValue","tempo","getVolumeCap","getVolumeCapForSetting","modSetting","fromBase64String","initToDefault","setting","modChannelCount","andResetChannels","scale","loopStart","loopLength","reverb","beatsPerBar","barCount","patternsPerChannel","rhythm","instrumentsPerChannel","title","channelIndex","getChannelCount","pattern","bar","bits","_variant","_latestJummBoxVersion","encodedSongTitle","encodeURIComponent","encodedChannelName","o","spectrumBits","encodeBase64","harmonicsBits","neededBits","shapeBits","neededInstrumentBits","getChannelIsNoise","getChannelIsMod","instrumentIndex","modStatus","msForPitch","msForNoise","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","writePartDuration","writePinCount","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","splice","unshift","pop","allPitches","pitchIndex","pitchIter","writePitchInterval","stringLength","lengthBase64","digits","prototype","maxApplyArgs","slice","compressed","charIndex","fromJsonObject","JSON","parse","substring","variant","_latestBeepboxVersion","_oldestBeepboxVersion","_oldestJummBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","command","instrumentChannelIterator","instrumentIndexIterator","toSetOctaves","useSlowerArpSpeed","songNameLength","decodeURIComponent","window","localStorage","getItem","instrumentType","legacyWaves","legacyEffects","legacyEnvelopes","effect","originalValue","nextValue","channelNameLength","byteCount","markCustomWaveDirty","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","newPattern","newNotes","useOldShape","shape","pinObj","pinCount","readPinCount","initialVolume","bendCount","pitchBend","readLegacyPartDuration","readPartDuration","readPitchInterval","intervalIter","shift","isBackwards","restLength","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","toJsonObject","patternArray","noteArray","volumeCap","pointArray","useVol","tick","forMod","points","sequenceArray","l","octaveScrollBar","sequence","format","_format","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","oldScaleNames","romani :)","romani :(","enigma","scaleName","letter","charAt","toUpperCase","symbol","toLowerCase","C","D","E","F","G","A","B","#","♯","b","♭","importedPartsPerBeat","maxInstruments","maxPatterns","maxBars","channelObject","newPitchChannels","newNoiseChannels","newModChannels","patternObject","maxNoteCount","noteObject","k","startInterval","pointObject","lowestPitch","highestPitch","patternIndex","getPattern","Tone","chordSize","drumsetPitch","prevNote","nextNote","prevNotePitchIndex","nextNotePitchIndex","active","noteStart","noteEnd","noteLengthTicks","ticksSinceReleased","liveInputSamplesHeld","lastInterval","lastVolume","stereoVolume1","stereoVolume2","stereoOffset","stereoDelay","sample","phases","phaseDeltas","volumeStarts","volumeDeltas","volumeStart","volumeDelta","phaseDeltaScale","pulseWidthDelta","filter","filterScale","filterSample0","filterSample1","vibratoScale","intervalMult","intervalVolumeMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","Synth","samplesPerSecond","liveInputDuration","liveInputStarted","liveInputPitches","liveInputChannel","loopRepeatCount","wantToSkip","playheadInternal","beat","part","tickSampleCountdown","isPlayingSong","liveInputEndTime","tonePool","activeTones","tyingOver","activeModTones","releasedTones","liveInputTones","limit","stereoBufferIndex","samplesForNone","samplesForReverb","samplesForChorus","samplesForChorusReverb","chorusDelayLine","chorusDelayPos","chorusPhase","reverbDelayLine","reverbDelayPos","reverbFeedback0","reverbFeedback1","reverbFeedback2","reverbFeedback3","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","getChannelData","outputDataR","performance","now","synthesize","deactivateAudio","setSong","getInstrumentSynthFunction","warmUp","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","currentPart","currentBar","instrumentIdx","getPatternInstrument","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","msForSong","setModValue","playing","remainder","samplesPerTick","getSamplesPerTick","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","modValueToReal","ended","totalSamples","foundMod","find","sort","a","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getSamplesPerBar","getTotalBars","useLoopCount","volumeEnd","nextVal","channelAdjust","forSong","isModActive","AudioContext","webkitAudioContext","sampleRate","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","close","activateAudio","warmUpSynthesizer","computeLatestModValues","snapToBar","freeAllTones","oldBar","outputBufferLength","playSong","channelCount","idx","bufferIndex","pause","stereoBufferLength","chorusAngle","chorusRange","chorusOffset0","chorusOffset1","chorusOffset2","chorusOffset3","chorusOffset4","chorusOffset5","useReverb","getModValue","samplesLeftInBuffer","runLength","determineCurrentActiveTones","count","tone","playTone","skipBar","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","determineLiveInputTones","getTransition","freeReleasedTone","shouldFadeOutFast","chorusTap0Index","chorusTap1Index","chorusTap2Index","chorusTap3Index","chorusTap4Index","chorusTap5Index","chorusTap0Delta","chorusTap1Delta","chorusTap2Delta","chorusTap3Delta","chorusTap4Delta","chorusTap5Delta","runEnd","bufferIndexL","bufferIndexR","sampleForNoneL","sampleForNoneR","sampleForReverbL","sampleForReverbR","sampleForChorusL","sampleForChorusR","sampleForChorusReverbL","sampleForChorusReverbR","combinedChorusL","combinedChorusR","chorusTap0Ratio","chorusTap1Ratio","chorusTap2Ratio","chorusTap3Ratio","chorusTap4Ratio","chorusTap5Ratio","chorusTap0A","chorusTap0B","chorusTap1A","chorusTap1B","chorusTap2A","chorusTap2B","chorusTap3A","chorusTap3B","chorusTap4A","chorusTap4B","chorusTap5A","chorusSampleL","chorusSampleR","reverbDelayPos1","reverbDelayPos2","reverbDelayPos3","reverbSample0","reverbSample1","reverbSample2","reverbSample3","reverbTemp0","reverbTemp1","reverbTemp2","reverbTemp3","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","Number","isInteger","atEnd","carryOver","toneCount","targetBar","nextPattern","currNote","currVolume","p","releaseTone","freeTone","remove","resetEffects","epsilon","pushBack","pushFront","toneIndex","toneList","newTone","modChannelIdx","prevNotes","nextNotes","fillCount","syncTones","peakBack","noteStartAdjust","strumOffsetParts","prevNoteForThisTone","noteForThisTone","nextNoteForThisTone","released","synthBuffer","computeTone","synthesizer","beats","customVolume","attack","synth","chordVolume","computeChordVolume","intervalScale","secondsPerPart","beatsPerPart","toneWasActive","treatAsSeamless","startPan","endPan","startPanDelay","endPanDelay","useStartPan","useEndPan","maxDelayStart","maxDelayEnd","delayEnd","stereoVolumeLEnd","stereoVolumeREnd","volumeReferencePitch","baseVolume","pitchDamping","resetPhases","partsSinceStart","intervalStart","intervalEnd","transitionVolumeStart","transitionVolumeEnd","chordVolumeStart","chordVolumeEnd","decayTimeStart","decayTimeEnd","ticksSoFar","startTicksSinceReleased","endTicksSinceReleased","startTick","endTick","toneTransition","expressionToVolumeMult","heldTicksStart","heldTicksEnd","heldPartsStart","heldPartsEnd","partsPerBar","endPinIndex","startPin","endPin","noteStartTick","pinStart","pinEnd","tickTimeStart","tickTimeEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","customVolumeTickStart","customVolumeTickEnd","transitionVolumeTickStart","transitionVolumeTickEnd","chordVolumeTickStart","chordVolumeTickEnd","intervalTickStart","intervalTickEnd","decayTimeTickStart","decayTimeTickEnd","maximumSlideTicks","slideRatioStartTick","slideRatioEndTick","intervalDiff","volumeDiff","decayTimeDiff","chordSizeDiff","sampleTime","lfoEffectStart","getLFOAmplitude","lfoEffectEnd","partsStart","partsEnd","useVibratoStart","useVibratoEnd","activeVibratoDelayMods","vibratoDelayStart","vibratoDelayEnd","MAX_VALUE","instrumentVolumeMult","instrumentVolumeToVolumeMult","pickMainInterval","cutoffOctavesModStart","cutoffOctavesModEnd","filterCutModStart","filterCutModEnd","filterCutoffHzStart","filterCutoffHzEnd","filterBaseStart","filterBaseEnd","filterMin","computeEnvelope","endFilter","filterVolumeStart","filterVolumeEnd","getFilterResonance","useFilterResonanceStart","useFilterResonanceEnd","filterResonanceEnd","sineVolumeBoostStart","sineVolumeBoostEnd","totalCarrierVolumeStart","totalCarrierVolumeEnd","arpeggioInterval","detuneStart","detuneEnd","associatedCarrierIndex","freqMult","startFreq","amplitudeStart","amplitudeEnd","amplitudeCurveStart","operatorAmplitudeCurve","amplitudeCurveEnd","startVal","endVal","endPitch","pitchVolumeStart","pitchVolumeEnd","operatorEnvelope","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","volumeMult","intervalOffset","settingsVolumeMultStart","settingsVolumeMultEnd","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulators","modulatorNumber","feedbackIndices","Function","chipSynth","harmonicsSynth","pulseWidthSynth","noiseSynth","spectrumSynth","drumsetSynth","modSynth","data","volumeScale","intervalA","intervalB","intervalSign","deltaRatio","phaseDeltaA","phaseDeltaB","phaseA","phaseB","filter1","filter2","filterScale1","filterScale2","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","prevWaveIntegralA","prevWaveIntegralB","delays","stereoVolumeL","stereoVolumeR","nextWaveIntegralA","nextWaveIntegralB","waveA","waveB","output","phaseDelta","phase","sawPhaseA","sawPhaseB","pulseWave","t","pitchRelativefilter","findRandomZeroCrossing","phaseInt","waveSample","phaseRatio","getDrumsetWave","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","slope","instrumentVolume","expression","getBeatsPerMinute","beatsPerSecond","partsPerSecond","tickPerSecond","BarScrollBar","_doc","_trackContainer","_editorWidth","_editorHeight","_playhead","rect","fill","x","y","width","height","_notches","svg","pointer-events","_handle","_handleHighlight","stroke","stroke-width","_leftHighlight","path","_rightHighlight","_renderedPlayhead","_svg","container","class","_mouseX","_mouseDown","_mouseOver","_dragging","_renderedNotchCount","_renderedBarPos","animatePlayhead","_notchSpace","_onScroll","event","barScrollPos","scrollLeft","getBarWidth","_whenMouseOver","_updatePreview","_whenMouseOut","_whenMousePressed","preventDefault","boundingRect","getBoundingClientRect","clientX","pageX","left","trackVisibleBars","_dragStart","_whenTouchPressed","touches","_whenMouseMoved","_whenCursorMoved","_whenTouchMoved","_whenCursorReleased","notifier","changed","center","addEventListener","capture","passive","showleftHighlight","showRightHighlight","showHandleHighlight","visibility","resized","lineHeight","Change","_noop","UndoableChange","reversed","super","_reversed","_doneForwards","_doForwards","_doBackwards","ChangeGroup","change","isNoop","_didSomething","ChangeSequence","changes","_changes","redo","undo","unionOfUsedNotes","projectNoteIntoBar","oldNote","timeOffset","noteStartPart","noteEndPart","newNoteLength","newPinTime","nextPin","nextPinTime","ratio","prevPin","prevPinTime","offsetInterval","pitchIdx","ChangeMoveAndOverflowNotes","doc","newBeatsPerBar","partsToMove","oldChannel","newChannel","oldPartsPerBar","newPartsPerBar","oldPattern","oldBarStart","absoluteNoteStart","absoluteNoteEnd","barStartPart","removeDuplicatePatterns","append","ChangeReplacePatterns","ChangePins","_note","_oldStart","_oldEnd","_newStart","_newEnd","_oldPins","_newPins","_oldPitches","_newPitches","firstInterval","firstTime","ChangeCustomWave","newArray","oldArray","getCurrentInstrument","comparisonResult","ChangePreset","newValue","valueToPreset","tempVolume","tempPan","tempPanDelay","ChangeRandomGeneratedInstrument","selectWeightedRandom","entries","total","entry","weight","item","selectCurvedDistribution","peak","normalize","spectrumGenerators","current","generator","harmonicGenerators","ChangeTransition","ChangeEffects","ChangePatternNumbers","startChannel","ChangeBarCount","atBeginning","diff","ChangeInsertBars","newLength","ChangeDeleteBars","ChangeLimiterSettings","ChangeChannelOrder","firstChannelIdx","secondChannelIdx","toSwap","channelOffset","ChangeChannelCount","newPitchChannelCount","newNoiseChannelCount","newModChannelCount","newChannels","changeGroup","newCount","oldCount","newStart","oldStart","pickRandomPresetValue","ChangeChannelBar","newBar","silently","ChangeInterval","ChangeChord","ChangeVibrato","ChangeVibratoDepth","oldValue","prevVibrato","unsetMod","ChangeVibratoSpeed","ChangeVibratoDelay","ChangeVibratoType","ChangeArpeggioSpeed","ChangeFastTwoNoteArp","ChangeTieNoteTransition","ChangeClicklessTransition","ChangeSpectrum","ChangeHarmonics","ChangeDrumsetEnvelope","drumIndex","ChangeInstrumentSlider","_instrument","ChangePulseWidth","ChangePulseEnvelope","ChangeFilterCutoff","ChangeFilterResonance","ChangeFilterEnvelope","ChangeAlgorithm","ChangeFeedbackType","ChangeFeedbackEnvelope","ChangeOperatorEnvelope","operatorIndex","ChangeOperatorFrequency","ChangeOperatorAmplitude","ChangeFeedbackAmplitude","ChangeInstrumentsPerChannel","newInstrumentsPerChannel","sampleInstrument","sampleInstrumentJson","newInstrument","ChangeKey","ChangeLoop","oldLength","ChangePitchAdded","deletion","_pitch","ChangeOctave","ChangeRhythm","ChangePaste","selectionStart","selectionEnd","oldPartDuration","ChangeNoteTruncate","noteInsertionIndex","ChangeNoteLength","ChangePasteInstrument","instrumentCopy","ChangePatternInstrument","ChangeModChannel","stat","ChangeModInstrument","tgtInstrument","ChangeModSetting","text","ChangePatternsPerChannel","channelBars","channelPatterns","ChangeEnsurePatternExists","_patternOldNotes","_bar","_channel","_oldPatternCount","_newPatternCount","firstEmptyUnusedIndex","firstUnusedIndex","used","barIndex","_patternIndex","ChangePinTime","shiftedTime","originalTime","skipStart","skipEnd","setPin","oldPin","_finishSetup","ChangePitchBend","bendStart","bendEnd","bendTo","direction","stop","setStart","setEnd","prevInterval","prevVolume","persist","ChangePatternRhythm","minDivision","changeRhythm","oldTime","thresholds","beatStart","newTime","threshold","ChangeNoteAdded","ChangeRhythmNote","ChangeMoveNotesSideways","beatsToMove","strategy","originalBarCount","originalLoopStart","originalLoopLength","firstBarIsEmpty","ChangeBeatsPerBar","noteIndex","ChangeTempo","ChangeScale","ChangeDetectKey","keyWeights","bestKey","bestKeyWeight","keyWeight","absoluteDiff","ChangeTranspose","eligiblePresetValues","setDefaultInstruments","nameToPresetValue","ChangeSong","newHash","ChangePatternSelection","selection","resetBoxSelection","ChangeValidateTrackSelection","removeExtraSparseChannels","maxLength","sparsestIndex","mostZeroes","zeroes","combinedChannels","comparePatternNotes","newPatterns","foundMatchingPattern","newPatternIndex","ChangeReverb","_pattern","truncStart","truncEnd","pushLastPin","skipNote","force","copy","ChangeSplitNotesAtSelection","patternSelectionStart","patternSelectionEnd","ChangeTransposeNote","upward","ignoreScale","foundMatch","patternSelectionActive","ChangeTrackSelection","newX0","newX1","newY0","newY1","boxSelectionX0","boxSelectionX1","boxSelectionY0","boxSelectionY1","newEnd","_oldActive","_newActive","ChangeDragSelectedNotes","parts","transpose","oldEnd","draggedNotes","ChangeDuplicateSelectedReusedPatterns","barStart","barWidth","channelStart","channelHeight","reusablePatterns","currentPatternIndex","isUsedElsewhere","bar2","copiedPattern","ChangePatternScale","scaleMap","newPitches","newPins","transformedPitch","transformedInterval","ChangeVolume","ChangeSongTitle","ChangeChannelName","muteEditorChannel","recalcChannelNames","ChangePan","ChangePanDelay","ChangeDetune","ChangeVolumeBend","bendPart","bendVolume","bendInterval","uniformVolume","inserted","ChangeChipWave","ChangeNoiseWave","button","span","h2","input","br","select","option","BeatsPerBarPrompt","_beatsStepper","step","_conversionStrategySelect","_cancelButton","_okayButton","_close","cleanUp","removeEventListener","_saveChanges","_validateKey","_validateNumber","_whenKeyPressed","target","keyCode","setItem","prompt","record","_validate","lastStrategy","setTimeout","focus","charCode","which","ChannelSettingsPrompt","_patternsStepper","_instrumentsStepper","_pitchChannelStepper","_drumChannelStepper","_modChannelStepper","group","CustomChipPromptCanvas","_mouseY","_lastIndex","_lastAmp","chipData","startingChipData","_undoHistoryState","_changeQueue","_fill","_ticks","_subticks","_blocks","viewBox","preserveAspectRatio","_storeChange","sameCheck","render","stopPropagation","right","clientY","pageY","top","bottom","isNaN","offsetParent","col","amp","lowest","highest","startingAmp","endingAmp","medAmp","children","CustomChipPrompt","_songEditor","customChipCanvas","_playButton","_togglePlay","_pause","updatePlayButton","_play","whenKeyPressed","innerText","transfer","dest","ArrayBuffer","nextOffset","leftBytes","byteLength","wordSizes","wordSize","transferWith","ViewClass","Uint8Array","Uint16Array","view_source","view_dest","byteOffset","ArrayBufferWriter","initialCapacity","_writeIndex","_fileSize","_arrayBuffer","_data","DataView","numBytes","setUint32","_addBytes","setUint8","setUint16","setInt8","startWriting","writeUint8","writeMidiVariableLength","defaultMidiPitchBend","analogousDrumMap","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","69","70","73","74","midiVolumeToVolumeMult","lerp","low","high","save","blob","msSaveOrOpenBlob","anchor","download","url","URL","createObjectURL","revokeObjectURL","href","dispatchEvent","MouseEvent","open","location","ExportPrompt","outputStarted","_fileName","maxlength","autofocus","_computedSamplesLabel","Text","_enableIntro","_loopDropDown","_enableOutro","_formatSelect","_exportButton","_outputProgressBar","_outputProgressLabel","_outputProgressContainer","_validateFileName","_export","_exportTo","_exportToMidi","_exportToJson","checked","disabled","lastExportFormat","samplesToTime","getTotalSamples","rawSeconds","seconds","use","deleteChars","cursorPos","setSelectionRange","samplesPerChunk","currentFrame","currentChunk","samplesInChunk","sampleFrames","tempSamplesL","tempSamplesR","recordedSamplesL","recordedSamplesR","totalChunks","thenExportTo","_exportToWavFinish","_exportToMp3Finish","_synthesize","introIter","nextBar","sampleCount","arrayBuffer","bytesPerSample","range","valL","valR","setInt16","Blob","whenEncoderIsAvailable","sampleBlockSize","mp3encoder","Mp3Encoder","mp3Data","Int16Array","leftChunk","subarray","rightChunk","mp3buf","encodeBuffer","flush","script","src","onload","midiTicksPerBeat","midiTicksPerPart","microsecondsPerBeat","secondsPerMinute","midiTicksPerBar","pitchBendRange","unrolledBars","loopIndex","tracks","isMeta","midiChannel","isDrumset","midiChannelCounter","foundADrumset","writer","writeUint32","writeUint16","track","trackStartIndex","getWriteIndex","prevTime","barStartTime","writeEventTime","writeControlEvent","message","writeMidi7Bits","writeMidiAscii","writeUint24","isMinor","numSharps","writeInt8","parseInt","channelName","prevInstrumentIndex","writeInstrumentSettings","instrumentProgram","envelopeType","instrumentDecays","filterInstruments","midiDecayInstruments","midiSustainInstruments","instrumentPan","prevPitchBend","prevExpression","shouldResetExpressionAndPitchBend","channelRoot","chordHarmonizes","usesArpeggio","polyphony","error","noteStartTime","pinTime","pinVolume","pinInterval","prevPitches","nextPitches","velocity","pitchOffset","maxPitchOffset","minPitchOffset","nextPinVolume","nextPinInterval","midiTick","midiTickTime","linearVolume","noteStarting","drumsetMap","midiTicksSinceBeat","midiTicksPerArpeggio","noteEndTime","rewriteUint32","toCompactArrayBuffer","jsonString","stringify","HarmonicsEditor","_octaves","_fifths","_curve","_lastControlPoints","_lastControlPointContainer","_freqPrev","_ampPrev","_change","_renderedPath","_renderedFifths","_xToFreq","_yToAmp","lowerFreq","upperFreq","setProspectiveChange","controlPointToHeight","xPos","lastHeight","showFifth","display","InputBox","_getChange","_value","_oldValue","_whenInput","lastChangeWas","_whenChange","Slider","midTick","ArrayBufferReader","getUint32","readUint8","getUint16","getUint8","getInt8","nextByte","skipBytes","ImportPrompt","_fileInput","accept","_whenFileSelected","file","files","extension","lastIndexOf","reader","FileReader","goBackToStart","readAsText","_parseMidiFile","readAsArrayBuffer","headerReader","hasMore","chunkType","readUint32","chunkLength","getReaderForNextBytes","trackReader","nextEventMidiTick","readMidiVariableLength","runningStatus","fileFormat","readUint16","currentIndependentTrackIndex","currentTrackIndices","independentTracks","trackIndex","channelRPNMSB","channelRPNLSB","pitchBendRangeMSB","pitchBendRangeLSB","currentInstrumentProgram","currentInstrumentVolumes","currentInstrumentPans","noteEvents","pitchBendEvents","expressionEvents","currentMidiTick","anyTrackHasMore","eventStatus","peakUint8","eventType","eventChannel","foundTrackEndEvent","readMidi7Bits","on","volumeMultToInstrumentVolume","volumeMultToExpression","lsb","readUint24","numerator","denominatorExponent","readInt8","songTotalBars","quantizeMidiTickToPart","channelPresetValue","midiProgramToPresetValue","channelPreset","isDrumsetChannel","channelBasePitch","midiIntervalScale","channelMaxPitch","currentVelocity","currentProgram","currentInstrumentVolume","currentInstrumentPan","heldPitches","prevEventPart","setInstrumentVolume","noteEventIndex","noteEvent","nextEventPart","MAX_SAFE_INTEGER","drumFreqs","minDuration","maxDuration","heldPitch","currentMidiInterval","currentMidiExpression","pitchBendEventIndex","expressionEventIndex","updateCurrentMidiInterval","updateCurrentMidiExpression","instrumentByProgram","prevEventMidiTick","pitchSum","barStartMidiTick","barEndMidiTick","noteStartMidiTick","noteEndMidiTick","shiftedHeldPitch","initialBeepBoxPitch","heldPitchOffset","firstPin","potentialPins","keyPitch","keyVolume","prevPinIndex","prevPartPitch","prevPartExpression","noteRelativePart","lastPart","partPitch","partExpression","nearestPitch","pitchIsNearInteger","pitchCrossedInteger","nearestExpression","expressionIsNearInteger","expressionCrossedInteger","keyExpression","currentPin","addPin","addPinAtIndex","furthestIntervalDistance","addIntervalPin","addIntervalPinAtIndex","potentialIndex","potentialPin","interpolatedInterval","distance","furthestVolumeDistance","addVolumePin","addVolumePinAtIndex","interpolatedVolume","toBePinned","lastToBePinned","minPitch","notePin","shiftedPitch","averagePitch","scrollableOctaves","compactChannels","bestChannelIndexA","bestChannelIndexB","fewestConflicts","fewestGaps","channelIndexA","channelIndexB","channelA","channelB","conflicts","gaps","channelAInstrumentCount","channelAPatternCount","Layout","layout","_normalLayout","_fullScreenLayout","_wideFullScreenLayout","LayoutPrompt","_octaveStepper","_layoutSelect","fullScreen","setFullScreen","windowOctaves","windowPitchCount","lastOctaves","lastLayout","LimiterCanvas","lim","_boostCurve","_boostDot","circle","r","_midCurve","_limitCurve","_limitDot","_label0","font-size","_label1","_label2","_inLabel","_outLabel","_xAxisLabel","_yAxisLabel","transform","_inVolumeBg","_outVolumeBg","_inVolumeBar","_inVolumeCap","_outVolumeBar","_outVolumeCap","_stop1","stop-color","_stop2","_stop3","_gradient","linearGradient","id","gradientUnits","_defs","defs","_limiterPrompt","historicInCap","historicOutCap","lastValue","currentSubpathIdx","lastSubpathIdx","subPaths","limiterRatio","limitRatioSlider","compressorRatio","compressionRatioSlider","limiterThreshold","limitThresholdSlider","compressorThreshold","compressionThresholdSlider","LimiterPrompt","limiterCanvas","limitDecaySlider","limitRiseSlider","masterGainSlider","inVolumeHistoricTimer","inVolumeHistoricCap","outVolumeHistoricTimer","outVolumeHistoricCap","_resetButton","_volumeUpdate","animateVolume","requestAnimationFrame","_whenInputFavorLimitThreshold","_updateLimiter","startingLimitRatio","startingCompressionRatio","startingLimitThreshold","startingCompressionThreshold","startingLimitDecay","startingLimitRise","startingMasterGain","_resetDefaults","LoopEditor","_startMode","_endMode","_bothMode","_loop","_highlight","_barWidth","_cursor","mode","_clientStartX","_clientStartY","_startedScrolling","_draggingHorizontally","_renderedLoopStart","_renderedLoopStop","_renderedBarCount","_renderedBarWidth","_updateCursorStatus","_whenTouchReleased","_render","_documentChanged","watch","middle","endPoints","_findEndPoints","jumpIntoLoop","autoFollow","showHighlight","radius","highlightStart","highlightStop","loopStop","editorWidth","MoveNotesSidewaysPrompt","MuteEditor","_editor","_buttons","_channelCounts","_channelNameDisplay","color","_channelNameInput","_channelDropDown","_renderedChannelCount","_renderedPitchChannels","_renderedNoiseChannels","_renderedModChannels","_renderedChannelHeight","_channelDropDownChannel","_channelDropDownOpen","_channelDropDownLastState","_channelNameInputWhenInput","_channelNameInputClicked","_channelNameInputHide","_channelDropDownClick","_channelDropDownGetOpenedPosition","_channelDropDownBlur","options","_channelDropDownHandler","shouldSolo","swapIndex","refocusStage","selectedIndex","_onClick","_onMouseMove","getChannelHeight","_onMouseLeave","enableChannelMuting","channelCountText","muteButton","muteContainer","marginTop","marginBottom","fontSize","OctaveScrollBar","_piano","_notchHeight","_octaveCount","_octaveHeight","_barHeight","_upHighlight","_downHighlight","_renderedBarBottom","_renderedBarHeight","_barBottom","canReplaceLastChange","currentOctave","showUpHighlight","showDownHighlight","forceRender","PatternCursor","valid","curNote","curIndex","exactPart","nearPinIndex","PatternEditor","_interactive","_barOffset","controlMode","shiftMode","_svgNoteBackground","patternUnits","_svgDrumBackground","_svgModBackground","_svgBackground","_svgNoteContainer","_svgPlayhead","_selectionRect","stroke-dasharray","fill-opacity","_svgPreview","modDragValueLabel","text-anchor","contenteditable","dominant-baseline","_defaultModBorder","_backgroundPitchRows","_backgroundDrumRow","_backgroundModRow","_modDragValueLabelLeft","_modDragValueLabelTop","_modDragValueLabelWidth","editingModLabel","_modDragStartValue","_modDragLowerBound","_modDragUpperBound","_pitchHeight","_mouseDragging","_mouseHorizontal","_usingTouch","_copiedPinChannels","_mouseXStart","_mouseYStart","_touchTime","_shiftHeld","_dragConfirmed","_draggingStartOfSelection","_draggingEndOfSelection","_draggingSelectionContents","_dragTime","_dragPitch","_dragVolume","_dragVisible","_dragChange","_changePatternSelection","_lastChangeWasPatternSelection","_stashCursorPinVols","_playheadX","_octaveOffset","_renderedWidth","_renderedHeight","_renderedBeatWidth","_renderedPitchHeight","_renderedDrums","_renderedMod","_renderedRhythm","_renderedPitchChannelCount","_renderedNoiseChannelCount","_renderedModChannelCount","_followPlayheadBar","_validateModDragLabelInput","label","converted","presValue","xOffset","_partWidth","_modDragNote","_modDragPin","_modDragSetting","resetCopiedPins","maxDivision","_getMaxDivision","_animatePlayhead","timestamp","_whenCursorPressed","notifyWatchers","playheadBar","modPlayhead","shiftKey","continuousState","_setPatternSelection","_copyPins","enableNotePreview","rectangle","rhythmStepsPerBeat","_getMinDivision","foundNote","_findMousePitch","_pitchToPixelHeight","_pitchBorder","mousePitch","leftSide","rightSide","intervalRatio","arc","bendHeight","minInterval","maxInterval","bestDistance","pinDistance","_snapToPitch","nearest","defaultLength","_copiedPins","fullBeats","modMouse","division","forceStart","forceEnd","maxHeight","maxFoundHeight","pixelY","_pitchCount","guess","discardChanges","getSelection","sel","removeAllRanges","selectAllChildren","stopEditingModLabel","maintainLiveInput","_cursorAtStartOfSelection","_cursorAtEndOfSelection","_cursorIsInSelection","getCurrentPattern","_updateSelection","dx","dy","_snapToMinDivision","notesInScale","pitchRatio","draggedParts","draggedTranspose","backwards","directLength","blessedLength","theNote","prevPattern","shiftedPin","dragFactorSlow","dragFactorFast","dragSign","dragCounts","volumeRatio","alwaysFineNoteVol","pathString","_drawNote","clientHeight","beatWidth","node","cloneNode","parentNode","replaceChild","makeEmptyReplacementElement","log2","showChannels","pattern2","notePath","oscillatorLabel","svgElement","showVolume","totalWidth","endOffset","prevSide","nextSide","prevHeight","nextHeight","nextVolume","Piano","_pianoContainer","_drumContainer","_modContainer","_preview","_pianoKeys","_pianoLabels","_modFirstLabels","_modSecondLabels","_modCountLabels","_modCountRects","_playedPitch","_renderedScale","_renderedKey","_renderedPitchCount","_playLiveInput","_updateCursorPitch","_whenMouseReleased","_releaseLiveInput","isDrum","pianoLabel","pianoKey","lastChild","showLetters","channelVal","firstRow","secondRow","useFirstColor","useSecondColor","usingSecondRow","usingMod","instrumentVal","firstLabel","secondLabel","modCountLabel","modCountRect","scaleFactor","parentElement","getComputedTextLength","squeeze","substr","pitchNameIndex","background","shiftDir","brightness","firstRowText","secondRowText","countText","countRect","firstRowSVG","countSVG","secondRowSVG","flexRow1","flexRow2","flexContainer","modKey","_cursorPitch","topPitch","bottomPitch","topRange","bottomRange","pitchHeight","SongDurationPrompt","_barsStepper","_positionSelect","lastPosition","versionPrefix","keyToVersion","versionToKey","generateUid","toString","compareSongs","versions","compareVersions","SongRecovery","_song","songs","songsByUid","itemKey","uid","songData","newName","Date","clearTimeout","_saveVersionTimeoutHandle","alert","getAllRecoveredSongs","currentSong","newWork","mostRecentTime","work","newVersion","newKey","minSpan","spanMult","indexToDiscard","currentTime","newerTime","removeItem","leastImportantSong","leastImportance","POSITIVE_INFINITY","maximumSongCount","timeScale","iframe","SongRecoveryPrompt","_songContainer","versionMenu","toLocaleString","player","contentWindow","Event","SpectrumEditor","_spectrumIndex","_arrow","ThemePrompt","_themeSelect","lastTheme","setTheme","colorTheme","_previewTheme","h3","TipPrompt","_closeButton","Box","_x","_y","_text","_label","font-family","font-weight","_rect","_renderedIndex","_renderedDim","_renderedSelected","_renderedColor","dim","selected","TrackEditor","_barDropDown","_boxContainer","g","_barNumberContainer","_boxHighlight","_barEditorPath","_select","_grid","_barNumbers","_mouseStartBar","_mouseStartChannel","_mouseBar","_mouseChannel","_mousePressed","_channelHeight","_renderedPatternCount","_touchMode","_barDropDownBar","_lastScrollTime","_barDropDownGetOpenedPosition","_barDropDownHandler","moveBarOffset","insertBars","_barScrollBar","deleteBars","_whenSelectChanged","setPattern","_whenSelectPressed","_updateSelectPos","_whenSelectMoved","_dragBoxSelection","_whenSelectReleased","_updateMousePos","setTrackSelection","selectionUpdated","setChannelBar","up","patternCount","determinedCursorType","overTrackEditor","changeBarScrollPos","tip","selectedPattern","box","setSize","pathLeft","pos","editorHeight","colors","setIndex","boxSelectionWidth","boxSelectionHeight","boxSelectionBar","boxSelectionChannel","optgroup","canvas","buildOptions","menu","items","buildPresetOptions","idSet","randomGroup","foundAny","moveViolin2","insertBefore","moveFlute2","moveGrandPiano2","setSelectedValue","stringValue","$","trigger","CustomChipCanvas","mouseDown","ctx","getContext","continuousEdit","lastX","lowerBound","upperBound","progress","lastY","fillStyle","fillRect","getComputedChannelColor","_onMouseDown","_onMouseUp","redrawCanvas","SongEditor","_patternEditorPrev","_patternEditor","_patternEditorNext","_trackEditor","_muteEditor","_loopEditor","_octaveScrollBar","_prevBarButton","_nextBarButton","_volumeSlider","_outVolumeBarBg","_volumeBarContainer","_volumeBarBox","_fileMenu","hidden","_editMenu","_optionsMenu","_scaleSelect","map","_keySelect","reverse","_tempoSlider","_tempoStepper","_reverbSlider","_rhythmSelect","_pitchedPresetSelect","_drumPresetSelect","_algorithmSelect","_algorithmSelectRow","onclick","_openPrompt","_instrumentSelect","_instrumentSelectRow","_instrumentVolumeSlider","_instrumentVolumeSliderInputBox","_instrumentVolumeSliderTip","_instrumentVolumeSliderRow","_panSlider","position","_panDropdown","_toggleDropdownMenu","_panSliderInputBox","_panSliderRow","tabindex","_panDelaySlider","_panDelayRow","_panDropdownGroup","_detuneSlider","_detuneSliderInputBox","_detuneSliderRow","_chipWaveSelect","_chipNoiseSelect","_chipWaveSelectRow","_chipNoiseSelectRow","_transitionSelect","_transitionDropdown","_transitionRow","_tieNoteTransitionBox","_tieNoteTransitionRow","_clicklessTransitionBox","_clicklessTransitionRow","_transitionDropdownGroup","_effectsSelect","_filterCutoffSlider","_filterCutoffRow","_filterResonanceSlider","_filterResonanceRow","_filterEnvelopeSelect","_filterEnvelopeRow","_pulseEnvelopeSelect","_pulseEnvelopeRow","_pulseWidthSlider","_pulseWidthRow","_intervalSelect","_intervalSelectRow","_chordSelect","_chordDropdown","_chordSelectRow","_arpeggioSpeedSlider","_arpeggioSpeedRow","_twoNoteArpBox","_twoNoteArpRow","_chordDropdownGroup","_vibratoSelect","_vibratoDropdown","_vibratoSelectRow","_vibratoDepthSlider","_vibratoDepthRow","_vibratoSpeedSlider","_vibratoSpeedRow","_vibratoDelaySlider","_vibratoDelayRow","_vibratoTypeSelect","_vibratoTypeSelectRow","_vibratoDropdownGroup","_phaseModGroup","_feedbackTypeSelect","_feedbackRow1","_spectrumEditor","_spectrumRow","_harmonicsEditor","_harmonicsRow","_drumsetGroup","_modulatorGroup","_instrumentCopyButton","d","_instrumentPasteButton","_customWaveDrawCanvas","_customWavePresetDrop","header","buildHeaderedOptions","_customWaveZoom","_customWaveDraw","_songTitleInputBox","_feedbackAmplitudeSlider","_feedbackEnvelopeSelect","_feedbackRow2","_customInstrumentSettingsGroup","_instrumentCopyGroup","_instrumentSettingsTextRow","_instrumentSettingsGroup","_usedPatternIndicator","fill-rule","_usedInstrumentIndicator","_promptContainer","_patternEditorRow","_patternArea","_trackAndMuteContainer","_trackArea","_settingsArea","margin-right","mainLayer","tabIndex","_wasPlaying","_currentPromptName","_operatorRows","_operatorAmplitudeSliders","_operatorEnvelopeSelects","_operatorFrequencySelects","_drumsetSpectrumEditors","_drumsetEnvelopeSelects","_showModSliders","_newShowModSliders","_modSliderValues","_hasActiveModSliders","_modSliderHandle","_volumeHandle","_barScrollbarHandle","_openPanDropdown","_openVibratoDropdown","_openChordDropdown","_openTransitionDropdown","lastOutVolumeCap","preventScroll","_refocusStageNotEditing","whenUpdated","trackBounds","activeElement","showScrollBar","displayVolumeBar","getFullScreen","targetBeatWidth","minBeatWidth","maxBeatWidth","patternEditorWidth","flexShrink","optionCommands","autoPlay","displayBrowserUrl","wasActive","contains","updateValue","patternUsed","instrumentUsed","lowestSelX","highestSelX","lowestSelY","highestSelY","parent","hide","_modChannelBoxes","channelList","_modInstrumentBoxes","instrumentList","_modSetBoxes","settingList","needReset","_whenSetModSetting","chordIndex","hasAttribute","css","show","alwaysShowSettings","isCarrier","operatorName","_setPrompt","goToBar","_whenKeyUp","onKeyUp","_tempoStepperCaptureNumberKeys","ctrlKey","movePlayheadToMouse","selectChannel","selectAll","duplicatePatterns","firstBar","jumpToEditingBar","muteChannels","nextEmpty","nextUnused","soloChannels","pasteNumbers","pasteNotes","_copyTextToClipboard","_randomGenerated","_randomPreset","prevBar","scrollToSelection","nextDigit","instrumentDigits","_whenPrevBarPressed","_whenNextBarPressed","_animate","_modSliderUpdate","_animateVolume","_setVolumeSlider","setVolume","_whenSetTempo","_whenSetScale","forceScale","_whenSetKey","_whenSetRhythm","forceRhythm","_refocus","selfRef","_whenSetPitchedPreset","_setPreset","_whenSetDrumPreset","_whenSetFeedbackType","_whenSetFeedbackEnvelope","_whenSetAlgorithm","_whenSetInstrument","setInstrument","_whenSetModChannel","setModChannel","_whenSetModInstrument","setModInstrument","setModSetting","_whenSetChipWave","_whenSetNoiseWave","_whenSetFilterEnvelope","_whenSetPulseEnvelope","_whenSetTransition","_whenSetEffects","_whenSetVibrato","_whenSetVibratoType","_whenSetInterval","_whenSetChord","_fileMenuHandler","toBase64String","share","_editMenuHandler","_optionsMenuHandler","toggleDisplayBrowserUrl","savePreferences","_customWavePresetHandler","customWaveArray","maxValue","MIN_VALUE","arrayPoint","arrayStep","operatorNumber","frequencySelect","amplitudeSlider","envelopeSelect","row","spectrumEditor","_modNameRows","_modSetRows","modChannelBox","modInstrumentBox","modNameRow","modSetBox","modSetRow","thisRef","_copyInstrument","bind","_pasteInstrument","autoPlayOption","screen","availWidth","fullScreenOption","dropdown","anyModActive","isAnyModActive","updateModSlider","editor","slider","isSettingForSong","currentVal","_getSliderForModSetting","anySliderActive","promptName","openPrompt","changePos","nav","clipboard","writeText","catch","textField","succeeded","execCommand","play","clearInterval","Selection","_changeTranspose","_changeTrack","x0","x1","y0","y1","json","digit","forInstrument","parsed","_eachSelectedChannel","_eachSelectedPattern","handledPatterns","_eachSelectedBar","patternNumber","cloneNotes","channelCopy","selectionCopy","partDuration","channelCopies","copiedPartDuration","fillSelection","pasteHeight","pasteChannel","patternCopies","copiedBars","pasteWidth","usedPatterns","pasteBar","copiedPatternIndex","reusedIndex","patternCopy","removedPattern","_patternIndexIsUnused","existingPattern","allChannels","anyMuted","anyUnmuted","alreadySoloed","shouldBeMuted","scaleFlags","oldScaleFlags","newScaleValue","newScaleFlags","oldScale","newScale","largerToSmaller","smallerScale","largerScale","roles","bestScore","bestIndexMap","stack","indexMap","score","sparsePitchMap","smallerScalePitch","largerScalePitch","sparseIndex","fullPitchMap","oldLow","newLow","oldHigh","newHigh","nearestPitchDistance","newPitch","generateScaleMap","ChangeNotifier","_watchers","_dirty","watcher","SongDocument","_recovery","_recentChange","_sequenceNumber","_stateShouldBePushed","_recordedNewSong","_waitingToUpdateState","_whenHistoryStateChanged","history","state","hash","_resetSongRecoveryUid","canUndo","sequenceNumber","recoveryUid","_recoveryUid","toJSON","_replaceState","_pushState","forgetLastChange","_getHistoryState","_getHash","fromJSON","_cleanDocument","_normalizeSelection","_updateHistoryState","saveVersion","sessionStorage","songString","_calcVolume","eventName","replaceState","pathname","pushState","currentIndex","oldestIndex","_maximumUndoHistory","forward","back","newSong","_back","commit","_forward","snapToStart","barOffset","innerWidth","getMobileLayout","squashed","getElementById","className","getElementsByClassName","select2","dropdownAutoWidth","siblings","toggle","groups","each","v","autoplay","scrollRestoration","serviceWorker","register","updateViaCache","scope"],"mappings":"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G,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEhB,eAAkB,UAAWgB,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAA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","sourcesContent":["/*!\r\nCopyright (C) 2020 John Nesky\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n*/\r\n\r\n//namespace beepbox {\r\nexport interface Dictionary<T> {\r\n\t[K: string]: T;\r\n}\r\n\r\nexport interface DictionaryArray<T> extends ReadonlyArray<T> {\r\n\tdictionary: Dictionary<T>;\r\n}\r\n\r\nexport const enum EnvelopeType {\r\n\tcustom,\r\n\tsteady,\r\n\tpunch,\r\n\tflare,\r\n\ttwang,\r\n\tswell,\r\n\ttremolo,\r\n\ttremolo2,\r\n\tdecay,\r\n}\r\n\r\nexport const enum InstrumentType {\r\n\tchip = 0,\r\n\tfm = 1,\r\n\tnoise = 2,\r\n\tspectrum = 3,\r\n\tdrumset = 4,\r\n\tharmonics = 5,\r\n\tpwm = 6,\r\n\tcustomChipWave = 7,\r\n\tmod = 8,\r\n\tlength,\r\n}\r\n\r\nexport interface BeepBoxOption {\r\n\treadonly index: number;\r\n\treadonly name: string;\r\n}\r\n\r\nexport interface Scale extends BeepBoxOption {\r\n\treadonly flags: ReadonlyArray<boolean>;\r\n\treadonly realName: string;\r\n}\r\n\r\nexport interface Key extends BeepBoxOption {\r\n\treadonly isWhiteKey: boolean;\r\n\treadonly basePitch: number;\r\n}\r\n\r\nexport interface Rhythm extends BeepBoxOption {\r\n\treadonly stepsPerBeat: number;\r\n\t//readonly ticksPerArpeggio: number;\r\n\t//readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>>;\r\n\treadonly roundUpThresholds: number[] | null;\r\n}\r\n\r\nexport interface ChipWave extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly samples: Float64Array;\r\n}\r\n\r\nexport interface ChipNoise extends BeepBoxOption {\r\n\treadonly volume: number;\r\n\treadonly basePitch: number;\r\n\treadonly pitchFilterMult: number;\r\n\treadonly isSoft: boolean;\r\n\tsamples: Float32Array | null;\r\n}\r\n\r\nexport interface Transition extends BeepBoxOption {\r\n\treadonly isSeamless: boolean;\r\n\treadonly attackSeconds: number;\r\n\treadonly releases: boolean;\r\n\treadonly releaseTicks: number;\r\n\treadonly slides: boolean;\r\n\treadonly slideTicks: number;\r\n}\r\n\r\nexport interface Vibrato extends BeepBoxOption {\r\n\treadonly amplitude: number;\r\n\treadonly type: number;\r\n\treadonly delayParts: number;\r\n}\r\n\r\nexport interface VibratoType extends BeepBoxOption {\r\n\treadonly periodsSeconds: number[];\r\n\treadonly period: number;\r\n}\r\n\r\nexport interface Interval extends BeepBoxOption {\r\n\treadonly spread: number;\r\n\treadonly offset: number;\r\n\treadonly volume: number;\r\n\treadonly sign: number;\r\n}\r\n\r\nexport interface Chord extends BeepBoxOption {\r\n\treadonly harmonizes: boolean;\r\n\treadonly customInterval: boolean;\r\n\treadonly arpeggiates: boolean;\r\n\treadonly isCustomInterval: boolean;\r\n\treadonly strumParts: number;\r\n}\r\n\r\nexport interface Algorithm extends BeepBoxOption {\r\n\treadonly carrierCount: number;\r\n\treadonly associatedCarrier: ReadonlyArray<number>;\r\n\treadonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface OperatorFrequency extends BeepBoxOption {\r\n\treadonly mult: number;\r\n\treadonly hzOffset: number;\r\n\treadonly amplitudeSign: number;\r\n}\r\n\r\nexport interface Envelope extends BeepBoxOption {\r\n\treadonly type: EnvelopeType;\r\n\treadonly speed: number;\r\n}\r\n\r\nexport interface Feedback extends BeepBoxOption {\r\n\treadonly indices: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport class Config {\r\n\t// Params for post-processing compressor\r\n\tpublic static thresholdVal: number = -10;\r\n\tpublic static kneeVal: number = 40;\r\n\tpublic static ratioVal: number = 12;\r\n\tpublic static attackVal: number = 0;\r\n\tpublic static releaseVal: number = 0.25;\r\n\r\n\tpublic static readonly scales: DictionaryArray<Scale> = toNameMap([\r\n\r\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\r\n\t\t{ name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n\t\t{ name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\r\n\t\t{ name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\r\n\t\t{ name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\r\n\t\t{ name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\r\n\t\t{ name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\r\n\t\t{ name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\r\n\t\t{ name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\r\n\t\t{ name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\r\n\t\t{ name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\r\n\t\t{ name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\r\n\t\t{ name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\r\n\t\t{ name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\r\n\t\t{ name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\r\n\t\t{ name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\r\n\t\t{ name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\r\n\t\t{ name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\r\n\t\t{ name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\r\n\t\t{ name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\r\n\t\t{ name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\r\n\r\n\r\n\t]);\r\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\r\n\t\t{ name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\r\n\t\t{ name: \"C♯\", isWhiteKey: false, basePitch: 13 },\r\n\t\t{ name: \"D\", isWhiteKey: true, basePitch: 14 },\r\n\t\t{ name: \"D♯\", isWhiteKey: false, basePitch: 15 },\r\n\t\t{ name: \"E\", isWhiteKey: true, basePitch: 16 },\r\n\t\t{ name: \"F\", isWhiteKey: true, basePitch: 17 },\r\n\t\t{ name: \"F♯\", isWhiteKey: false, basePitch: 18 },\r\n\t\t{ name: \"G\", isWhiteKey: true, basePitch: 19 },\r\n\t\t{ name: \"G♯\", isWhiteKey: false, basePitch: 20 },\r\n\t\t{ name: \"A\", isWhiteKey: true, basePitch: 21 },\r\n\t\t{ name: \"A♯\", isWhiteKey: false, basePitch: 22 },\r\n\t\t{ name: \"B\", isWhiteKey: true, basePitch: 23 },\r\n\t]);\r\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\r\n\tpublic static readonly tempoMin: number = 16;\r\n\tpublic static readonly tempoMax: number = 512;\r\n\tpublic static readonly reverbRange: number = 32;\r\n\tpublic static readonly beatsPerBarMin: number = 1;\r\n\tpublic static readonly beatsPerBarMax: number = 32;\r\n\tpublic static readonly barCountMin: number = 1;\r\n\tpublic static readonly barCountMax: number = 512;\r\n\tpublic static readonly instrumentsPerChannelMin: number = 1;\r\n\tpublic static readonly instrumentsPerChannelMax: number = 16;\r\n\tpublic static readonly partsPerBeat: number = 24;\r\n\tpublic static readonly ticksPerPart: number = 2;\r\n\tpublic static readonly ticksPerArpeggio: number = 3;\r\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7]];\r\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\r\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\r\n\t\t{ name: \"÷6\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷8\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷9\", stepsPerBeat: 9, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷12\", stepsPerBeat: 12, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷16\", stepsPerBeat: 16, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷24 (freehand)\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t]);\r\n\r\n\tpublic static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"custom chip\", \"mod\"];\r\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, true];\r\n\tpublic static readonly chipWaves: DictionaryArray<ChipWave> = toNameMap([\r\n\t\t{ name: \"rounded\", volume: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\r\n\t\t{ name: \"triangle\", volume: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\r\n\t\t{ name: \"square\", volume: 0.5, samples: centerWave([1.0, -1.0]) },\r\n\t\t{ name: \"1/4 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"1/8 pulse\", volume: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"sawtooth\", volume: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n\t\t{ name: \"double saw\", volume: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n\t\t{ name: \"double pulse\", volume: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t{ name: \"spiky\", volume: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\r\n\t\t{ name: \"sine\", volume: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\r\n\t\t{ name: \"flute\", volume: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\r\n\t\t{ name: \"harp\", volume: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\r\n\t\t{ name: \"sharp clarinet\", volume: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\r\n\t\t{ name: \"soft clarinet\", volume: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n\t\t{ name: \"alto sax\", volume: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\r\n\t\t{ name: \"bassoon\", volume: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\r\n\t\t{ name: \"trumpet\", volume: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\r\n\t\t{ name: \"electric guitar\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\r\n\t\t{ name: \"organ\", volume: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\r\n\t\t{ name: \"pan flute\", volume: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\r\n\t\t{ name: \"glitch\", volume: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n\t]);\r\n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\r\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\r\n\t\t{ name: \"retro\", volume: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"white\", volume: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\r\n\t\t{ name: \"clang\", volume: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"buzz\", volume: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"hollow\", volume: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\r\n\t\t{ name: \"shine\", volume: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"deep\", volume: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\r\n\t\t{ name: \"cutter\", volume: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"metallic\", volume: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t]);\r\n\tpublic static readonly filterCutoffMaxHz: number = 8000; // This is carefully calculated to correspond to no change when filtering at 48000 samples per second.\r\n\tpublic static readonly filterCutoffMinHz: number = 1;\r\n\tpublic static readonly filterMax: number = 0.95;\r\n\tpublic static readonly filterMaxResonance: number = 0.95;\r\n\tpublic static readonly filterCutoffRange: number = 11;\r\n\tpublic static readonly filterResonanceRange: number = 8;\r\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\r\n\t\t{ name: \"seamless\", isSeamless: true, attackSeconds: 0.0, releases: false, releaseTicks: 1, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard\", isSeamless: false, attackSeconds: 0.0, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"soft\", isSeamless: false, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"slide\", isSeamless: true, attackSeconds: 0.025, releases: false, releaseTicks: 3, slides: true, slideTicks: 3 },\r\n\t\t{ name: \"cross fade\", isSeamless: false, attackSeconds: 0.04, releases: true, releaseTicks: 6, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"hard fade\", isSeamless: false, attackSeconds: 0.0, releases: true, releaseTicks: 48, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"medium fade\", isSeamless: false, attackSeconds: 0.0125, releases: true, releaseTicks: 72, slides: false, slideTicks: 3 },\r\n\t\t{ name: \"soft fade\", isSeamless: false, attackSeconds: 0.06, releases: true, releaseTicks: 96, slides: false, slideTicks: 6 },\r\n\t]);\r\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\r\n\t\t{ name: \"none\", amplitude: 0.0, type: 0, delayParts: 0 },\r\n\t\t{ name: \"light\", amplitude: 0.15, type: 0, delayParts: 0 },\r\n\t\t{ name: \"delayed\", amplitude: 0.3, type: 0, delayParts: 18 },\r\n\t\t{ name: \"heavy\", amplitude: 0.45, type: 0, delayParts: 0 },\r\n\t\t{ name: \"shaky\", amplitude: 0.1, type: 1, delayParts: 0 },\r\n\t]);\r\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\r\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\r\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\r\n\t]);\r\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\r\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\r\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\r\n\tpublic static readonly intervals: DictionaryArray<Interval> = toNameMap([\r\n\t\t{ name: \"union\", spread: 0.0, offset: 0.0, volume: 0.7, sign: 1.0 },\r\n\t\t{ name: \"shimmer\", spread: 0.018, offset: 0.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"hum\", spread: 0.045, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"honky tonk\", spread: 0.09, offset: 0.0, volume: 1.0, sign: 1.0 },\r\n\t\t{ name: \"dissonant\", spread: 0.25, offset: 0.0, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"fifth\", spread: 3.5, offset: 3.5, volume: 0.9, sign: 1.0 },\r\n\t\t{ name: \"octave\", spread: 6.0, offset: 6.0, volume: 0.8, sign: 1.0 },\r\n\t\t{ name: \"bowed\", spread: 0.02, offset: 0.0, volume: 1.0, sign: -1.0 },\r\n\t\t{ name: \"piano\", spread: 0.01, offset: 0.0, volume: 1.0, sign: 0.7 },\r\n\t]);\r\n\tpublic static readonly effectsNames: ReadonlyArray<string> = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\r\n\tpublic static readonly volumeRange: number = 50;\r\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\r\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\r\n\tpublic static readonly volumeLogScale: number = 0.1428;\r\n\tpublic static readonly panCenter: number = 50;\r\n\tpublic static readonly panMax: number = Config.panCenter * 2;\r\n\tpublic static readonly detuneMin: number = -50;\r\n\tpublic static readonly detuneMax: number = 50;\r\n\tpublic static readonly songDetuneMin: number = -250;\r\n\tpublic static readonly songDetuneMax: number = 250;\r\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\r\n\t\t{ name: \"harmony\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 0 },\r\n\t\t{ name: \"strum\", harmonizes: true, customInterval: false, arpeggiates: false, isCustomInterval: false, strumParts: 1 },\r\n\t\t{ name: \"arpeggio\", harmonizes: false, customInterval: false, arpeggiates: true, isCustomInterval: false, strumParts: 0 },\r\n\t\t{ name: \"custom interval\", harmonizes: true, customInterval: true, arpeggiates: true, isCustomInterval: true, strumParts: 0 },\r\n\t]);\r\n\tpublic static readonly maxChordSize: number = 9; // Pandora's box... ?0_0\r\n\tpublic static readonly operatorCount: number = 4;\r\n\tpublic static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\r\n\t\t{ name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\r\n\t\t{ name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\r\n\t\t{ name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\r\n\t\t{ name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\r\n\t\t{ name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\r\n\t\t{ name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\r\n\t\t{ name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\r\n\t\t{ name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\r\n\t\t{ name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\r\n\t\t{ name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\r\n\t\t{ name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\r\n\t\t{ name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\r\n\t]);\r\n\tpublic static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091];\r\n\tpublic static readonly operatorAmplitudeMax: number = 15;\r\n\tpublic static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\r\n\t\t{ name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\r\n\t\t{ name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\r\n\t\t{ name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t{ name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t]);\r\n\tpublic static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\r\n\t\t{ name: \"custom\", type: EnvelopeType.custom, speed: 0.0 },\r\n\t\t{ name: \"steady\", type: EnvelopeType.steady, speed: 0.0 },\r\n\t\t{ name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\r\n\t\t{ name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\r\n\t\t{ name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\r\n\t\t{ name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\r\n\t\t{ name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\r\n\t\t{ name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\r\n\t\t{ name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\r\n\t\t{ name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\r\n\t\t{ name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\r\n\t\t{ name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\r\n\t\t{ name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\r\n\t\t{ name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\r\n\t\t{ name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\r\n\t\t{ name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\r\n\t\t{ name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\r\n\t\t{ name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\r\n\t\t{ name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\r\n\t\t{ name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\r\n\t\t{ name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\r\n\t]);\r\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\r\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\r\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\r\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\r\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\r\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\r\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\r\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\r\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\r\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\r\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\r\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\r\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\r\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\r\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\r\n\t\t{ name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\r\n\t]);\r\n\tpublic static readonly chipNoiseLength: number = 1 << 15; // 32768\r\n\tpublic static readonly spectrumBasePitch: number = 24;\r\n\tpublic static readonly spectrumControlPoints: number = 30;\r\n\tpublic static readonly spectrumControlPointsPerOctave: number = 7;\r\n\tpublic static readonly spectrumControlPointBits: number = 3;\r\n\tpublic static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\r\n\tpublic static readonly harmonicsControlPoints: number = 28;\r\n\tpublic static readonly harmonicsRendered: number = 64;\r\n\tpublic static readonly harmonicsControlPointBits: number = 3;\r\n\tpublic static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\r\n\tpublic static readonly harmonicsWavelength: number = 1 << 11; // 2048\r\n\tpublic static readonly pulseWidthRange: number = 50;\r\n\tpublic static readonly pitchChannelCountMin: number = 1;\r\n\tpublic static readonly pitchChannelCountMax: number = 32;\r\n\tpublic static readonly noiseChannelCountMin: number = 0;\r\n\tpublic static readonly noiseChannelCountMax: number = 8;\r\n\tpublic static readonly modChannelCountMin: number = 0;\r\n\tpublic static readonly modChannelCountMax: number = 8;\r\n\tpublic static readonly noiseInterval: number = 6;\r\n\tpublic static readonly centerFrequency = 425.855\r\n\tpublic static readonly pitchesPerOctave: number = 31;\r\n\tpublic static readonly drumCount: number = 12;\r\n\tpublic static readonly modCount: number = 6;\r\n\tpublic static readonly pitchOctaves: number = 8;\r\n\tpublic static readonly maxScrollableOctaves: number = 5; // Largest number possible with any config setting\r\n\tpublic static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\r\n\tpublic static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\r\n\tpublic static readonly sineWaveLength: number = 1 << 8; // 256\r\n\tpublic static readonly sineWaveMask: number = Config.sineWaveLength - 1;\r\n\tpublic static readonly sineWave: Float64Array = generateSineWave();\r\n\r\n\t// Height of the small editor column for inserting/deleting rows, in pixels.\r\n\tpublic static readonly barEditorHeight: number = 10;\r\n\r\n}\r\n\r\nfunction centerWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = wave[i] - average;\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\nfunction centerAndNormalizeWave(wave: Array<number>): Float64Array {\r\n\tlet sum: number = 0.0;\r\n\tlet magn: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tsum += wave[i];\r\n\t\tmagn += Math.abs(wave[i]);\r\n\t}\r\n\tconst average: number = sum / wave.length;\r\n\tconst magnAvg: number = magn / wave.length;\r\n\r\n\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\tlet cumulative: number = 0;\r\n\tlet wavePrev: number = 0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tcumulative += wavePrev;\r\n\t\twavePrev = (wave[i] - average) / (magnAvg);\r\n\t\twave[i] = cumulative;\r\n\t}\r\n\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\twave.push(0);\r\n\treturn new Float64Array(wave);\r\n}\r\n\r\n\r\n// The function arguments will be defined in FFT.ts, but I want\r\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\r\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\r\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\r\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\r\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null = null, scaleElementsByFactor: Function | null = null): Float32Array {\r\n\tlet wave: Float32Array | null = Config.chipNoises[index].samples;\r\n\tif (wave == null) {\r\n\t\twave = new Float32Array(Config.chipNoiseLength + 1);\r\n\t\tConfig.chipNoises[index].samples = wave;\r\n\r\n\t\tif (index == 0) {\r\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 1 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 1) {\r\n\t\t\t// White noise is just random values for each sample.\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\r\n\t\t\t}\r\n\t\t} else if (index == 2) {\r\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 2 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 3) {\r\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 4) {\r\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\r\n\t\t\tdrawNoiseSpectrum(wave, 10, 11, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 11, 14, .6578, .6578, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 5) {\r\n\t\t\t// \"Shine\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 6) {\r\n\t\t\t// \"Deep\" drums from modbox!\r\n\t\t\tdrawNoiseSpectrum(wave, 1, 10, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, 20, 14, -2, -2, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 7) {\r\n\t\t\t// \"Cutter\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1);\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 15 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 8) {\r\n\t\t\t// \"Metallic\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < 32768; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 + 0.5;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer -= 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\r\n\t\t}\r\n\r\n\t\twave[Config.chipNoiseLength] = wave[0];\r\n\t}\r\n\r\n\treturn wave;\r\n}\r\n\r\nexport function drawNoiseSpectrum(wave: Float32Array, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\r\n\tconst referenceOctave: number = 11;\r\n\tconst referenceIndex: number = 1 << referenceOctave;\r\n\tconst lowIndex: number = Math.pow(2, lowOctave) | 0;\r\n\tconst highIndex: number = Math.min(Config.chipNoiseLength >> 1, Math.pow(2, highOctave) | 0);\r\n\tconst retroWave: Float32Array = getDrumWave(0);\r\n\tlet combinedAmplitude: number = 0.0;\r\n\tfor (let i: number = lowIndex; i < highIndex; i++) {\r\n\r\n\t\tlet lerped: number = lowPower + (highPower - lowPower) * (Math.log(i) / Math.LN2 - lowOctave) / (highOctave - lowOctave);\r\n\t\t//let amplitude: number = Math.pow(2, lerped);\r\n\t\t//let amplitude: number = Math.pow((lerped + 5) / 7, 4);\r\n\t\tlet amplitude: number = Math.pow(2, (lerped - 1) * Config.spectrumMax + 1) * lerped;\r\n\r\n\t\tamplitude *= Math.pow(i / referenceIndex, overallSlope);\r\n\r\n\t\tcombinedAmplitude += amplitude;\r\n\r\n\t\t// Add two different sources of psuedo-randomness to the noise\r\n\t\t// (individually they aren't random enough) but in a deterministic\r\n\t\t// way so that live spectrum editing doesn't result in audible pops.\r\n\t\t// Multiple all the sine wave amplitudes by 1 or -1 based on the \r\n\t\t// LFSR retro wave (effectively random), and also rotate the phase\r\n\t\t// of each sine wave based on the golden angle to disrupt the symmetry.\r\n\t\tamplitude *= retroWave[i];\r\n\t\tconst radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\r\n\r\n\t\twave[i] = Math.cos(radians) * amplitude;\r\n\t\twave[Config.chipNoiseLength - i] = Math.sin(radians) * amplitude;\r\n\t}\r\n\r\n\treturn combinedAmplitude;\r\n}\r\n\r\nfunction generateSineWave(): Float64Array {\r\n\tconst wave: Float64Array = new Float64Array(Config.sineWaveLength + 1);\r\n\tfor (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n\t\twave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n\t}\r\n\treturn wave;\r\n}\r\n\r\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\r\n\tlet arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\r\n\tif (arpeggioPattern != null) {\r\n\t\tif (pitchCount == 2 && useFastTwoNoteArp == false) {\r\n\t\t\tarpeggioPattern = [0, 0, 1, 1];\r\n\t\t}\r\n\t\treturn arpeggioPattern[arpeggio % arpeggioPattern.length];\r\n\t} else {\r\n\t\treturn arpeggio % pitchCount;\r\n\t}\r\n}\r\n\r\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\r\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\r\n\tconst dictionary: Dictionary<T> = {};\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tconst value: any = array[i];\r\n\t\tvalue.index = i;\r\n\t\tdictionary[value.name] = <T>value;\r\n\t}\r\n\tconst result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\r\n\tresult.dictionary = dictionary;\r\n\treturn result;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nexport interface PresetCategory extends BeepBoxOption {\r\n\treadonly presets: DictionaryArray<Preset>;\r\n}\r\n\r\nexport interface Preset extends BeepBoxOption {\r\n\treadonly isNoise?: boolean;\r\n\treadonly isMod?: boolean;\r\n\treadonly generalMidi?: boolean;\r\n\treadonly midiProgram?: number;\r\n\treadonly midiSubharmonicOctaves?: number;\r\n\treadonly customType?: InstrumentType;\r\n\treadonly settings?: any;\r\n}\r\n\r\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\nexport function prettyNumber(value: number): string {\r\n\treturn value.toFixed(2).replace(/\\.?0*$/, \"\");\r\n}\r\n\r\nexport class EditorConfig {\r\n\tpublic static readonly version: string = \"2.3\"; // Not using patch versions in display right now, maybe someday.\r\n\tpublic static readonly versionDisplayName: string = \"MicroBox \" + EditorConfig.version;\r\n\r\n\tpublic static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"chip wave\", customType: InstrumentType.chip },\r\n\t\t\t\t{ name: \"FM (expert)\", customType: InstrumentType.fm },\r\n\t\t\t\t{ name: \"basic noise\", customType: InstrumentType.noise },\r\n\t\t\t\t{ name: \"spectrum\", customType: InstrumentType.spectrum },\r\n\t\t\t\t{ name: \"drumset\", customType: InstrumentType.drumset },\r\n\t\t\t\t{ name: \"harmonics\", customType: InstrumentType.harmonics },\r\n\t\t\t\t{ name: \"pulse width\", customType: InstrumentType.pwm },\r\n\t\t\t\t{ name: \"custom chip\", customType: InstrumentType.customChipWave },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"transition\": \"seamless\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"triangle\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"square\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\r\n\t\t\t\t{ name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\r\n\t\t\t\t{ name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\r\n\t\t\t\t{ name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\r\n\t\t\t\t{ name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\r\n\t\t\t\t{ name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 86, 71, 71, 71, 0, 86, 71, 71, 71, 57, 57, 71, 57, 14, 57, 57, 57, 57, 57, 57, 57, 57, 29, 57] } },\r\n\t\t\t\t{ name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 86, 86, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"wave\": \"1/8 pulse\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"interval\": \"honky tonk\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 43, 43, 43, 43, 43, 29, 43, 43, 43, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"piano\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"interval\": \"shimmer\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0] } },\r\n\t\t\t\t{ name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 14, 14, 14, 14, 14, 14, 43, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14] } },\r\n\t\t\t\t{ name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\r\n\t\t\t\t{ name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t\t{ name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }, { \"frequency\": \"~2×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 2, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 1\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"pulseWidth\": 18, \"pulseEnvelope\": \"punch\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"distorted synth 2\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 3\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"distorted synth 4\", midiProgram: 30, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 50, \"pulseEnvelope\": \"swell 1\", \"vibrato\": \"delayed\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [86, 100, 100, 86, 71, 57, 29, 14, 14, 14, 29, 43, 43, 43, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [71, 86, 86, 100, 86, 100, 57, 43, 14, 14, 14, 14, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 0, 0] } },\r\n\t\t\t\t{ name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\r\n\t\t\t\t{ name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"transition\": \"slide\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\r\n\t\t\t\t{ name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n\t\t\t\t{ name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 9, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\r\n\t\t\t\t{ name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\r\n\t\t\t\t{ name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t\t{ name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n\t\t\t\t{ name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14] } },\r\n\t\t\t\t{ name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\r\n\t\t\t\t{ name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n\t\t\t\t{ name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0] } },\r\n\t\t\t\t{ name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"swell 3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"swell 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n\t\t\t\t{ name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 71, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"flare 3\" }] } },\r\n\t\t\t\t{ name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"swell 2\" }, { \"frequency\": \"11×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 3\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"twang 3\" }] } },\r\n\t\t\t\t{ name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"interval\": \"octave\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14] } },\r\n\t\t\t\t{ name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"tremolo1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 5, \"envelope\": \"twang 3\" }, { \"frequency\": \"11×\", \"amplitude\": 8, \"envelope\": \"tremolo5\" }] } },\r\n\t\t\t\t{ name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 5, \"envelope\": \"tremolo1\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"punch\" }] } },\r\n\t\t\t\t{ name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"custom interval\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"envelope\": \"custom\" }] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\r\n\t\t\t\t{ name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"flare 1\" }, { \"frequency\": \"3×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 2\" }] } },\r\n\t\t\t\t{ name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 3, \"envelope\": \"flare 2\" }] } },\r\n\t\t\t\t{ name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 2\", \"spectrum\": [0, 0, 0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\r\n\t\t\t\t{ name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n\t\t\t\t{ name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\r\n\t\t\t\t{ name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t\t{\r\n\t\t\tname: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t\t{ name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0] } },\r\n\t\t\t\t{ name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"twang 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 57, \"filterEnvelope\": \"swell 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 3\", \"wave\": \"sawtooth\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\r\n\t\t\t\t{ name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\r\n\t\t\t\t{ name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"interval\": \"hum\", \"vibrato\": \"heavy\", \"harmonics\": [0, 0, 14, 100, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"tremolo1\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\r\n\t\t\t\t{ name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\r\n\t\t\t\t{ name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\r\n\t\t\t\t{ name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 86, \"filterEnvelope\": \"flare 1\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n\t\t\t\t{ name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"custom interval\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n\t\t\t\t{ name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"pulseWidth\": 4, \"pulseEnvelope\": \"tremolo6\", \"vibrato\": \"shaky\" } },\r\n\t\t\t\t{ name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\r\n\t\t\t\t{ name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\r\n\t\t\t\t{ name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"heavy\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t\t{ name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n\t\t\t])\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static valueToPreset(presetValue: number): Preset | null {\r\n\t\tconst categoryIndex: number = presetValue >> 6;\r\n\t\tconst presetIndex: number = presetValue & 0x3F;\r\n\t\treturn EditorConfig.presetCategories[categoryIndex].presets[presetIndex];\r\n\t}\r\n\tpublic static midiProgramToPresetValue(program: number): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tpublic static nameToPresetValue(presetName: string): number | null {\r\n\t\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\t\tif (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nexport interface ChannelColors extends BeepBoxOption {\r\n\treadonly secondaryChannel: string;\r\n\treadonly primaryChannel: string;\r\n\treadonly secondaryNote: string;\r\n\treadonly primaryNote: string;\r\n}\r\n\r\nexport class ColorConfig {\r\n\tpublic static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\r\n\r\n\tpublic static readonly themes: { [name: string]: string } = {\r\n\t\t\"dark classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t\t--tonic: #864;\r\n\t\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"dark competition\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #ddd;\r\n\t\t\t\t\t--playhead: #ddd;\r\n\t\t\t\t\t--primary-text: #ddd;\r\n\t\t\t\t\t--secondary-text: #8e695b;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\r\n\t\t\t\t\t--loop-accent: #bf15ba;\r\n\t\t\t\t\t--link-accent: #f888ff;\r\n\t\t\t\t\t--ui-widget-background: #443a3a;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #353333;\r\n\t\t\t\t\t--tonic: #884a44;\r\n\t\t\t\t\t--fifth-note: #415498;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"light classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t\t--editor-background: white;\r\n\t\t\t\t\t--hover-preview: black;\r\n\t\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t\t--primary-text: black;\r\n\t\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t\t--inverted-text: white;\r\n\t\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t\t--pitch7-secondary-channel: #CBE24B;\r\n\t\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t\t--noise4-secondary-note:    #AB87C8;\r\n\t\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"jummbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"forest\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #010c03;\r\n\t\t\t\t\t--editor-background: #010c03;\r\n\t\t\t\t\t--hover-preview: #efe;\r\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\r\n\t\t\t\t\t--primary-text: #efe;\r\n\t\t\t\t\t--secondary-text: #70A070;\r\n\t\t\t\t\t--inverted-text: #280228;\r\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\r\n\t\t\t\t\t--box-selection-fill: #267aa3;\r\n\t\t\t\t\t--loop-accent: #ffe845;\r\n\t\t\t\t\t--link-accent: #9f8;\r\n\t\t\t\t\t--ui-widget-background: #203829;\r\n\t\t\t\t\t--ui-widget-focus: #487860;\r\n\t\t\t\t\t--pitch-background: #203829;\r\n\t\t\t\t\t--tonic: #2b8d20;\r\n\t\t\t\t\t--fifth-note: #385840;\r\n\t\t\t\t\t--white-piano-key: #bda;\r\n\t\t\t\t\t--black-piano-key: #573;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\r\n\t\t\t\t\t--track-editor-bg-noise: #304050;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\r\n\t\t\t\t\t--track-editor-bg-mod: #506030;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\r\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\r\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\r\n\t\t\t\t\t--indicator-primary: #dcd866;\r\n\t\t\t\t\t--indicator-secondary: #203829;\r\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\r\n\t\t\t\t\t--input-box-outline: #242;\r\n\t\t\t\t\t--mute-button-normal: #49e980;\r\n\t\t\t\t\t--mute-button-mod: #c2e502;\r\n\t\t\t\t\t--mod-label-primary: #133613;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\r\n\t\t\t\t\t--mod-label-primary-text: #efe;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"canyon\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t\t--editor-background: #0a0000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t\t--secondary-text: #934050;\r\n\t\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t\t--ui-widget-background: #533137;\r\n\t\t\t\t\t--ui-widget-focus: #743e4b;\r\n\t\t\t\t\t--pitch-background: #4f3939;\r\n\t\t\t\t\t--tonic: #9e4145;\r\n\t\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t\t--white-piano-key: #d89898;\r\n\t\t\t\t\t--black-piano-key: #572b29;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\r\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"midnight\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #757575;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #acacac;\r\n\t\t\t--inverted-text: #290505;\r\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\r\n\t\t\t--box-selection-fill: #79797970;\r\n\t\t\t--loop-accent: #646464;\r\n\t\t\t--link-accent: #707070;\r\n\t\t\t--ui-widget-background: #353535;\r\n\t\t\t--ui-widget-focus: #464646;\r\n\t\t\t--pitch-background: #222121;\r\n\t\t\t--tonic: #1a1818;\r\n\t\t\t--fifth-note: #555955;\r\n\t\t\t--white-piano-key: #a89e9e;\r\n\t\t\t--black-piano-key: #2d2424;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #373737;\r\n\t\t\t--track-editor-bg-pitch-dim: #131313;\r\n\t\t\t--track-editor-bg-noise: #484848;\r\n\t\t\t--track-editor-bg-noise-dim: #131313;\r\n\t\t\t--track-editor-bg-mod: #373737;\r\n\t\t\t--track-editor-bg-mod-dim: #131313;\r\n\t\t\t--multiplicative-mod-slider: #555;\r\n\t\t\t--overwriting-mod-slider: #464545;\r\n\t\t\t--indicator-primary: #e0e0e0;\r\n\t\t\t--indicator-secondary: #404040;\r\n\t\t\t--select2-opt-group: #3c3b3b;\r\n\t\t\t--input-box-outline: #757575;\r\n\t\t\t--mute-button-normal: #8e8d8d;\r\n\t\t\t--mute-button-mod: #ddd;\r\n\t\t\t--mod-label-primary: #262526;\r\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\r\n\t\t\t--mod-label-primary-text: #b9b9b9;\r\n\t\t\t--pitch-secondary-channel-hue: 240;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\r\n\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 25;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 240;\r\n\t\t\t--pitch-primary-channel-hue-scale: 228;\r\n\t\t\t--pitch-primary-channel-sat: 80;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 60.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 240;\r\n\t\t\t--pitch-secondary-note-hue-scale: 228;\r\n\t\t\t--pitch-secondary-note-sat: 73.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 32;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 240;\r\n\t\t\t--pitch-primary-note-hue-scale: 228;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 80.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 160;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 160;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 160;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 62;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 30;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 62;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 62;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 34;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 62;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t}\r\n\t`,\r\n\t\t\"microbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000000;\r\n\t\t\t\t\t--editor-background: #000000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #93B6AD;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(47,255,250,0.99);\r\n\t\t\t\t\t--box-selection-fill: #03B068;\r\n\t\t\t\t\t--loop-accent: #FF0061;\r\n\t\t\t\t\t--link-accent: #FFC800;\r\n\t\t\t\t\t--ui-widget-background: #38554E;\r\n\t\t\t\t\t--ui-widget-focus: #2A7E69;\r\n\t\t\t\t\t--pitch-background: #281F23;\r\n\t\t\t\t\t--tonic: #004634;\r\n\t\t\t\t\t--fifth-note: #463400;\r\n\t\t\t\t\t--white-piano-key: #edc;\r\n\t\t\t\t\t--black-piano-key: #456;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #333333;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-noise: #463400;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-mod: #004634;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #000000;\r\n\t\t\t\t\t--multiplicative-mod-slider: #FFC800;\r\n\t\t\t\t\t--overwriting-mod-slider: #00ffc0;\r\n\t\t\t\t\t--indicator-primary: #333333;\r\n\t\t\t\t\t--indicator-secondary: #00ffc0;\r\n\t\t\t\t\t--select2-opt-group: #2B2B2B;\r\n\t\t\t\t\t--input-box-outline: #69BFC6;\r\n\t\t\t\t\t--mute-button-normal: #00ffc0;\r\n\t\t\t\t\t--mute-button-mod: #FFC800;\r\n\t\t\t\t\t--mod-label-primary: #38554E;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(0, 43, 45);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\t`,\r\n\t\t\"jummbox light\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #fefdff;\r\n\t\t\t\t\t--editor-background: #fefdff;\r\n\t\t\t\t\t--hover-preview: #302880;\r\n\t\t\t\t\t--playhead: rgba(62, 32, 120, 0.9);\r\n\t\t\t\t\t--primary-text: #401890;\r\n\t\t\t\t\t--secondary-text: #8769af;\r\n\t\t\t\t\t--inverted-text: #fefdff;\r\n\t\t\t\t\t--text-selection: rgba(255,160,235,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\r\n\t\t\t\t\t--loop-accent: #4c35d4;\r\n\t\t\t\t\t--link-accent: #7af;\r\n\t\t\t\t\t--ui-widget-background: #bf9cec;\r\n\t\t\t\t\t--ui-widget-focus: #e9c4ff;\r\n\t\t\t\t\t--pitch-background: #e2d9f9;\r\n\t\t\t\t\t--tonic: #c288cc;\r\n\t\t\t\t\t--fifth-note: #d8c9fd;\r\n\t\t\t\t\t--white-piano-key: #e2e2ff;\r\n\t\t\t\t\t--black-piano-key: #66667a;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #d9e5ec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\r\n\t\t\t\t\t--track-editor-bg-noise: #ffc3ae;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\r\n\t\t\t\t\t--track-editor-bg-mod: #c9accc;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\r\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t\t\t--indicator-secondary: #bbd4ec;\r\n\t\t\t\t\t--select2-opt-group: #c1b7f1;\r\n\t\t\t\t\t--input-box-outline: #bbb;\r\n\t\t\t\t\t--mute-button-normal: #e9b752;\r\n\t\t\t\t\t--mute-button-mod: #9558ee;\r\n\t\t\t\t\t--mod-label-primary: #ececff;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\r\n\t\t\t\t\t--mod-label-primary-text: #302880;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 53.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 72;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 97;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 45.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 95;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 43.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 100;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t};\r\n\r\n\tpublic static readonly pageMargin: string = \"var(--page-margin)\";\r\n\tpublic static readonly editorBackground: string = \"var(--editor-background)\";\r\n\tpublic static readonly hoverPreview: string = \"var(--hover-preview)\";\r\n\tpublic static readonly playhead: string = \"var(--playhead)\";\r\n\tpublic static readonly primaryText: string = \"var(--primary-text)\";\r\n\tpublic static readonly secondaryText: string = \"var(--secondary-text)\";\r\n\tpublic static readonly invertedText: string = \"var(--inverted-text)\";\r\n\tpublic static readonly textSelection: string = \"var(--text-selection)\";\r\n\tpublic static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\r\n\tpublic static readonly loopAccent: string = \"var(--loop-accent)\";\r\n\tpublic static readonly linkAccent: string = \"var(--link-accent)\";\r\n\tpublic static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\r\n\tpublic static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\r\n\tpublic static readonly pitchBackground: string = \"var(--pitch-background)\";\r\n\tpublic static readonly tonic: string = \"var(--tonic)\";\r\n\tpublic static readonly fifthNote: string = \"var(--fifth-note)\";\r\n\tpublic static readonly whitePianoKey: string = \"var(--white-piano-key)\";\r\n\tpublic static readonly blackPianoKey: string = \"var(--black-piano-key)\";\r\n\tpublic static readonly useColorFormula: string = \"var(--use-color-formula)\";\r\n\tpublic static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\r\n\tpublic static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\r\n\tpublic static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\r\n\tpublic static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\r\n\tpublic static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\r\n\tpublic static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\r\n\tpublic static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\r\n\tpublic static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\r\n\tpublic static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\r\n\tpublic static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\r\n\tpublic static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\r\n\tpublic static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\r\n\tpublic static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\r\n\tpublic static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\r\n\tpublic static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\r\n\tpublic static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\r\n\tpublic static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\r\n\tpublic static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\r\n\tpublic static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\r\n\tpublic static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\r\n\tpublic static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\r\n\tpublic static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\r\n\tpublic static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\r\n\tpublic static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\r\n\tpublic static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\r\n\tpublic static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\r\n\tpublic static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\r\n\tpublic static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\r\n\tpublic static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\r\n\tpublic static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\r\n\tpublic static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\r\n\tpublic static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\r\n\tpublic static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\r\n\tpublic static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\r\n\tpublic static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\r\n\tpublic static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\r\n\tpublic static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\r\n\tpublic static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\r\n\tpublic static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\r\n\tpublic static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\r\n\tpublic static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\r\n\tpublic static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\r\n\tpublic static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\r\n\tpublic static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\r\n\tpublic static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\r\n\tpublic static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\r\n\tpublic static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\r\n\tpublic static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\r\n\tpublic static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\r\n\tpublic static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\r\n\tpublic static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\r\n\tpublic static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\r\n\tpublic static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\r\n\tpublic static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\r\n\tpublic static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\r\n\tpublic static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\r\n\tpublic static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\r\n\tpublic static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\r\n\tpublic static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\r\n\tpublic static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\r\n\tpublic static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\r\n\tpublic static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\r\n\tpublic static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\r\n\tpublic static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\r\n\tpublic static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\r\n\tpublic static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\r\n\tpublic static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\r\n\tpublic static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\r\n\tpublic static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\r\n\tpublic static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\r\n\tpublic static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\r\n\tpublic static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\r\n\tpublic static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\r\n\tpublic static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\r\n\tpublic static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\r\n\r\n\tpublic static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"pitch1\", // cyan\r\n\t\t\tsecondaryChannel: \"var(--pitch1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch2\", // yellow\r\n\t\t\tsecondaryChannel: \"var(--pitch2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch3\", // orange\r\n\t\t\tsecondaryChannel: \"var(--pitch3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch4\", // green\r\n\t\t\tsecondaryChannel: \"var(--pitch4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch4-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch5\", // purple\r\n\t\t\tsecondaryChannel: \"var(--pitch5-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch5-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch5-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch5-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch6\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch6-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch6-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch6-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch6-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch7\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch7-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch7-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch7-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch7-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch8\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch8-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch8-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch8-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch8-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch9\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch9-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch9-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch9-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch9-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"pitch10\", // blue\r\n\t\t\tsecondaryChannel: \"var(--pitch10-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--pitch10-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--pitch10-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--pitch10-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"noise1\", // gray\r\n\t\t\tsecondaryChannel: \"var(--noise1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise2\", // brown\r\n\t\t\tsecondaryChannel: \"var(--noise2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise3\", // azure\r\n\t\t\tsecondaryChannel: \"var(--noise3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"noise4\",\r\n\t\t\tsecondaryChannel: \"var(--noise4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--noise4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--noise4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--noise4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\tpublic static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n\t\t{\r\n\t\t\tname: \"mod1\",\r\n\t\t\tsecondaryChannel: \"var(--mod1-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod1-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod1-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod1-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod2\",\r\n\t\t\tsecondaryChannel: \"var(--mod2-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod2-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod2-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod2-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod3\",\r\n\t\t\tsecondaryChannel: \"var(--mod3-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod3-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod3-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod3-primary-note)\",\r\n\t\t}, {\r\n\t\t\tname: \"mod4\",\r\n\t\t\tsecondaryChannel: \"var(--mod4-secondary-channel)\",\r\n\t\t\tprimaryChannel: \"var(--mod4-primary-channel)\",\r\n\t\t\tsecondaryNote: \"var(--mod4-secondary-note)\",\r\n\t\t\tprimaryNote: \"var(--mod4-primary-note)\",\r\n\t\t},\r\n\t]);\r\n\r\n\tpublic static resetColors() {\r\n\t\tthis.colorLookup.clear();\r\n\t}\r\n\r\n\t// Same as below, but won't return var colors\r\n\tpublic static getComputedChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\tlet base: ChannelColors = ColorConfig.getChannelColor(song, channel);\r\n\t\t\t// Trim away \"var(...)\"\r\n\t\t\tvar regex = /\\(([^)]+)\\)/;\r\n\t\t\tlet newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\tlet newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n\t\t\treturn <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn ColorConfig.getChannelColor(song, channel);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic static getChannelColor(song: Song, channel: number): ChannelColors {\r\n\t\tif (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"false\") {\r\n\t\t\t// Set colors, not defined by formula\r\n\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\treturn ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length];\r\n\t\t\t} else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\treturn ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length];\r\n\t\t\t} else {\r\n\t\t\t\treturn ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length];\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Determine if color is cached\r\n\t\t\tif (ColorConfig.colorLookup.has(channel)) {\r\n\t\t\t\treturn ColorConfig.colorLookup.get(channel) as ChannelColors;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Formulaic color definition\r\n\t\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\t\t// Pitch formula\r\n\t\t\t\t\tconst pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n\t\t\t\t\tconst pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n\t\t\t\t\tconst pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n\t\t\t\t\tconst pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n\t\t\t\t\tconst pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n\t\t\t\t\tconst pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n\t\t\t\t\tconst pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n\t\t\t\t\tconst pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n\t\t\t\t\tconst pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n\t\t\t\t\tconst pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n\t\t\t\t\tconst pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n\t\t\t\t\tconst pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n\t\t\t\t\tconst pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n\t\t\t\t\t\t+ (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n\t\t\t\t\t// Noise formula\r\n\t\t\t\t\tconst noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n\t\t\t\t\tconst noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n\t\t\t\t\tconst noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n\t\t\t\t\tconst noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n\t\t\t\t\tconst noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n\t\t\t\t\tconst noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n\t\t\t\t\tconst noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n\t\t\t\t\tconst noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n\t\t\t\t\tconst noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n\t\t\t\t\tconst noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n\t\t\t\t\tconst noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n\t\t\t\t\tconst noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n\t\t\t\t\tconst noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n\t\t\t\t\tconst noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Mod formula\r\n\t\t\t\t\tconst modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n\t\t\t\t\tconst modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n\t\t\t\t\tconst modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n\t\t\t\t\tconst modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n\t\t\t\t\tconst modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n\t\t\t\t\tconst modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n\t\t\t\t\tconst modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n\t\t\t\t\tconst modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n\t\t\t\t\tconst modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n\t\t\t\t\tconst modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n\t\t\t\t\tconst modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n\t\t\t\t\tconst modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n\t\t\t\t\tconst modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n\t\t\t\t\tconst modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n\t\t\t\t\tconst modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\r\n\r\n\t\t\t\t\tlet newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n\t\t\t\t\tColorConfig.colorLookup.set(channel, newChannelColors);\r\n\t\t\t\t\treturn newChannelColors;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setTheme(name: string): void {\r\n\t\tthis._styleElement.textContent = this.themes[name];\r\n\t\tconst themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\r\n\t\tif (themeColor != null) {\r\n\t\t\tthemeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\r\n\t\t}\r\n\r\n\t\tthis.resetColors();\r\n\t}\r\n\r\n\tpublic static getComputed(name: string): string {\r\n\t\treturn getComputedStyle(this._styleElement).getPropertyValue(name);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\n// Determine if the user's browser/OS adds scrollbars that occupy space.\r\n// See: https://www.filamentgroup.com/lab/scrollbars/\r\nconst scrollBarTest: HTMLDivElement = document.body.appendChild(HTML.div({ style: \"width:30px; height:30px; overflow: auto;\" },\r\n\tHTML.div({ style: \"width:100%;height:40px\" }),\r\n));\r\nif ((<any>scrollBarTest).firstChild.clientWidth < 30) {\r\n\tdocument.documentElement.classList.add(\"obtrusive-scrollbars\");\r\n}\r\ndocument.body.removeChild(scrollBarTest);\r\n\r\n\r\ndocument.head.appendChild(HTML.style({ type: \"text/css\" }, `\r\n\r\n/* Note: \"#\" symbols need to be encoded as \"%23\" in SVG data urls, otherwise they are interpreted as fragment identifiers! */\r\n:root {\r\n\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -8 L -4 8 L 9 0 z\" fill=\"gray\"/></svg>');\r\n\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-4\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/><rect x=\"5\" y=\"-8\" width=\"4\" height=\"16\" fill=\"gray\"/></svg>');\r\n\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\r\n\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\r\n\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\r\n\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\r\n\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\r\n\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\r\n\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\r\n\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\r\n\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\r\n\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t</g> \\\r\n\t\t</svg>');\r\n\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\r\n\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -6 L -6 -8 L 0 -2  L 6 -8 L 8 -6 L 2 0 L 8 6 L 6 8 L 0 2 L -6 8 L -8 6 L -2 0 z\"/></svg>');\r\n\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\r\n\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t\t<radialGradient id=\"membrane\"> \\\r\n\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\r\n\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\r\n\t\t\t\t</radialGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\r\n\t\t</svg>');\r\n\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\r\n\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n  --mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\r\n\t\t\t<defs> \\\r\n\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\r\n\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t</linearGradient> \\\r\n\t\t\t</defs> \\\r\n\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\r\n\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\r\n\t\t</svg>');\r\n}\r\n\r\n\r\n.obtrusive-scrollbars, .obtrusive-scrollbars * {\r\n\tscrollbar-width: thin;\r\n\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar, .obtrusive-scrollbars *::-webkit-scrollbar {\r\n\twidth: 12px;\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-track, .obtrusive-scrollbars *::-webkit-scrollbar-track {\r\n\tbackground: ${ColorConfig.editorBackground};\r\n}\r\n.obtrusive-scrollbars::-webkit-scrollbar-thumb, .obtrusive-scrollbars *::-webkit-scrollbar-thumb {\r\n\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\tborder: 3px solid ${ColorConfig.editorBackground};\r\n}\r\n\r\n@-moz-document url-prefix() {\r\n\t.muteButtonText {\r\n\t\ttransform: translate(3px, 1px) !important;\r\n\t}\r\n}\r\n\r\n.beepboxEditor {\r\n\tdisplay: grid;\r\n    grid-template-columns: minmax(0, 1fr) max-content;\r\n    grid-template-rows: max-content 1fr; /* max-content minmax(0, 1fr); Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n    grid-template-areas: \"pattern-area settings-area\" \"track-area settings-area\";\r\n\tgrid-column-gap: 6px;\r\n\tgrid-row-gap: 6px;\r\n\tposition: relative;\r\n\ttouch-action: manipulation;\r\n\tcursor: default;\r\n\tfont-size: small;\r\n\toverflow: hidden;\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tbackground: ${ColorConfig.editorBackground};\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.2s ease-in;\r\n    -moz-transition: opacity 0.2s ease-in;\r\n    -o-transition: opacity 0.2s ease-in;\r\n    -ms-transition: opacity 0.2s ease-in;\r\n    transition: opacity 0.2s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.pattern-area {\r\n     opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0s;\r\n}\r\n\r\n.settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.15s;\r\n}\r\n\r\n.editor-song-settings {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.35s;\r\n}\r\n\r\n.instrument-settings-area {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.45s;\r\n}\r\n\r\n.trackAndMuteContainer {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.4s;\r\n}\r\n\r\n.barScrollBar {\r\n    opacity: 0;\r\n    -webkit-transition: opacity 0.5s ease-in;\r\n    -moz-transition: opacity 0.5s ease-in;\r\n    -o-transition: opacity 0.5s ease-in;\r\n    -ms-transition: opacity 0.5s ease-in;\r\n    transition: opacity 0.5s ease-in;\r\n    transition-delay: 0.5s;\r\n}\r\n\r\n\r\n\r\n.load {\r\n    opacity: 1;\r\n}\r\n\r\n.beepboxEditor .noSelection {\r\n\t-webkit-touch-callout: none;\r\n\t-webkit-user-select: none;\r\n\t-moz-user-select: none;\r\n\t-ms-user-select: none;\r\n\tuser-select: none;\r\n}\r\n\r\n.beepboxEditor div {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n.beepboxEditor .pattern-area {\r\n\tgrid-area: pattern-area;\r\n\theight: 481px;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n}\r\n\r\n.beepboxEditor .track-area {\r\n\tgrid-area: track-area;\r\n}\r\n\r\n.beepboxEditor .settings-area {\r\n\tgrid-area: settings-area;\r\n\tdisplay: grid;\r\n    grid-template-columns: auto;\r\n    grid-template-rows: min-content min-content min-content min-content min-content;\r\n    grid-template-areas: \"version-area\" \"play-pause-area\" \"menu-area\" \"song-settings-area\" \"instrument-settings-area\";\r\n\tgrid-column-gap: 6px;\r\n}\r\n\r\n.beepboxEditor .version-area{ grid-area: version-area; }\r\n.beepboxEditor .play-pause-area{ grid-area: play-pause-area; }\r\n.beepboxEditor .menu-area{ grid-area: menu-area; }\r\n.beepboxEditor .song-settings-area{ grid-area: song-settings-area; }\r\n.beepboxEditor .instrument-settings-area{ grid-area: instrument-settings-area; }\r\n\r\n.beepboxEditor .tip {\r\n\tcursor: help;\r\n}\r\n\r\n.beepboxEditor .tip:hover {\r\n\tcolor: ${ColorConfig.linkAccent};\r\n\ttext-decoration: underline;\r\n}\r\n.beepboxEditor .tip:active {\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor .volume-speaker {\r\n\tflex-shrink: 0;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: ${ColorConfig.secondaryText};\r\n\t-webkit-mask-image: var(--volume-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--volume-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .drum-button {\r\n\tflex: 1;\r\n\tbackground-color: transparent;\r\n\tbackground-image: var(--drum-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n}\r\n\r\n.beepboxEditor .modulator-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .modulator-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--mod-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 102%;\r\n}\r\n\r\n.beepboxEditor .piano-button {\r\n\tflex: 1;\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n}\r\n.beepboxEditor .piano-button::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground-image: var(--piano-key-symbol);\r\n\tbackground-repeat: no-repeat;\r\n\tbackground-position: center;\r\n\tbackground-size: 100% 115.38%;\r\n}\r\n.beepboxEditor .piano-button.disabled::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 0;\r\n\twidth: 70%;\r\n\theight: 100%;\r\n\tpointer-events: none;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\t-webkit-mask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: linear-gradient(90deg, transparent 0%, gray 70%, gray 100%);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .customize-instrument {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .customize-instrument::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--customize-dial-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--customize-dial-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.file::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--file-page-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--file-page-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.edit::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--edit-pencil-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--edit-pencil-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .menu.preferences::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--preferences-gear-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--preferences-gear-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor .mute-button {\r\n\tbackground: transparent;\r\n\tborder: none;\r\n  padding-right: 0px;\r\n  padding-left: 0px;\r\n  box-shadow: none;\r\n}\r\n\r\n.beepboxEditor .mute-button:focus {\r\n  background: transparent;\r\n\tborder: none;\r\n}\r\n\r\n.beepboxEditor .mute-button::before {\r\n\tcontent: \"\";\r\n\tpointer-events: none;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: inline-block;\r\n  background: var(--mute-button-normal);\r\n\t-webkit-mask-image: var(--unmuted-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\t-webkit-mask-size: cover;\r\n  mask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\tmask-size: cover;\r\n  mask-image: var(--unmuted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute.muted::before {\r\n  background: var(--ui-widget-background);\r\n\t-webkit-mask-image: var(--muted-symbol);\r\n  mask-image: var(--muted-symbol);\r\n}\r\n\r\n.beepboxEditor .mute-button.modMute::before {\r\n  background: var(--mute-button-mod);\r\n}\r\n\r\n\r\n.beepboxEditor .promptContainer {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .promptContainer::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\topacity: 0.5;\r\n\tdisplay: flex;\r\n}\r\n\r\n.beepboxEditor .prompt {\r\n\tmargin: auto;\r\n\ttext-align: center;\r\n\tbackground: ${ColorConfig.editorBackground};\r\n\tborder-radius: 15px;\r\n\tborder: 4px solid ${ColorConfig.uiWidgetBackground};\r\n\tcolor: ${ColorConfig.primaryText};\r\n\tpadding: 20px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n\tbox-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\r\n}\r\n\r\n.beepboxEditor .prompt > *:not(:first-child):not(.cancelButton) {\r\n\tmargin-top: 1.5em;\r\n}\r\n\r\n.beepboxEditor .prompt h2 {\r\n\tfont-size: 2em;\r\n\tmargin: 0 16px;\r\n\tfont-weight: normal;\r\n}\r\n\r\n.beepboxEditor .prompt p {\r\n\ttext-align: left;\r\n\tmargin: 1em 0;\r\n}\r\n\r\n.beepboxEditor .selectContainer {\r\n\tposition: relative;\r\n}\r\n.beepboxEditor .selectContainer:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 1.1em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--select-arrows-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--select-arrows-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor .selectContainer.menu::after {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tright: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--menu-down-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--menu-down-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor select {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n\r\n.select2-container .select2-selection--single {\r\n  height: auto;\r\n}\r\n\r\n.select2-container {\r\n  width: -moz-available !important;\r\n  width: -webkit-fill-available !important;\r\n}\r\n\r\n.select2-container--default .select2-selection--single{\r\n  border-radius: 0px;\r\n  border: 0px;\r\n  background-color: transparent;\r\n  outline: none;\r\n}\r\n\r\n.select2-selection__rendered:not(.menu)::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\ttop: 0.4em;\r\n\tborder-bottom: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered:not(.menu)::after {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\tright: 0.3em;\r\n\tbottom: 0.4em;\r\n\tborder-top: 0.4em solid currentColor;\r\n\tborder-left: 0.3em solid transparent;\r\n\tborder-right: 0.3em solid transparent;\r\n\tpointer-events: none;\r\n}\r\n.select2-selection__rendered {\r\n\tmargin: 0;\r\n\tpadding: 0 0.3em;\r\n\tdisplay: block;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit !important;\r\n\tfont-size: inherit;\r\n\tcursor: pointer;\r\n\tfont-family: inherit;\r\n\t-webkit-appearance:none;\r\n\t-moz-appearance: none;\r\n\tappearance: none;\r\n}\r\n.select2-selection__arrow b{\r\n    display:none !important;\r\n}\r\n\r\n.select2-selection__rendered--focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.select2-search__field {\r\n    background: ${ColorConfig.uiWidgetBackground};\r\n    color: inherit !important;\r\n    font-size: small;\r\n    font-family: inherit;\r\n    border: 0px !important;\r\n    padding: 1px !important;\r\n}\r\n.select2-dropdown {\r\n    box-sizing: border-box;\r\n    display: inline-block;\r\n    margin: 0;\r\n    font-size: small;\r\n    position: relative;\r\n    vertical-align: middle;\r\n    background-color: ${ColorConfig.uiWidgetFocus};\r\n}\r\n\r\n.select2-container--default .select2-results>.select2-results__options {\r\n    max-height: 430px;\r\n    overflow-x: hidden;\r\n}\r\n.select2-container--default .select2-results__group {\r\n    cursor: default;\r\n    display: block;\r\n    padding: 1px;\r\n    background: ${ColorConfig.select2OptGroup};\r\n}\r\n.select2-results__option {\r\n    padding: 2px;\r\n    user-select: none;\r\n    -webkit-user-select: none;\r\n}\r\n.select2-container--default .select2-results__option .select2-results__option {\r\n    padding-left: 0.1em;\r\n}\r\n.select2-container--default .select2-results__option[aria-selected=true] {\r\n  background-color: transparent !important;\r\n}\r\n\r\n.beepboxEditor .menu select {\r\n\tpadding: 0 2em;\r\n}\r\n.beepboxEditor select:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n.beepboxEditor .menu select {\r\n\ttext-align: center;\r\n\ttext-align-last: center;\r\n}\r\n.beepboxEditor .settings-area select {\r\n       width: 100%;\r\n}\r\n\r\n/* This makes it look better in firefox on my computer... What about others?\r\n@-moz-document url-prefix() {\r\n\t.beepboxEditor select { padding: 0 2px; }\r\n}\r\n*/\r\n.beepboxEditor button {\r\n\tmargin: 0;\r\n\tposition: relative;\r\n\theight: 2em;\r\n\tborder: none;\r\n\tborder-radius: 0.4em;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tcolor: inherit;\r\n\tfont-size: inherit;\r\n\tfont-family: inherit;\r\n\tfont-weight: inherit;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor button:focus {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\toutline: none;\r\n}\r\n\r\n.beepboxEditor button.cancelButton {\r\n\tfloat: right;\r\n\twidth: 2em;\r\n\tposition: absolute;\r\n\ttop: 8px;\r\n\tright: 8px;\r\n}\r\n\r\n.beepboxEditor button.playButton, .beepboxEditor button.pauseButton, .beepboxEditor button.okayButton, .beepboxEditor button.exportButton {\r\n\tpadding-left: 2em;\r\n}\r\n.beepboxEditor button.playButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--play-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--play-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n.beepboxEditor button.pauseButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\ttop: 50%;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--pause-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--pause-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.prevBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--prev-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--prev-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.nextBarButton::before {\r\n\tcontent: \"\";\r\n\tflex-shrink: 0;\r\n\tposition: absolute;\r\n\tleft: 50%;\r\n\ttop: 50%;\r\n\tmargin-left: -1em;\r\n\tmargin-top: -1em;\r\n\tpointer-events: none;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--next-bar-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--next-bar-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.cancelButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--close-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--close-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor button.okayButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\t-webkit-mask-image: var(--checkmark-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n\tmask-image: var(--checkmark-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n}\r\n\r\n.beepboxEditor button.exportButton::before {\r\n\tcontent: \"\";\r\n\tposition: absolute;\r\n\twidth: 2em;\r\n\theight: 2em;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tpointer-events: none;\r\n\tbackground: currentColor;\r\n\tmask-image: var(--export-symbol);\r\n\tmask-repeat: no-repeat;\r\n\tmask-position: center;\r\n\t-webkit-mask-image: var(--export-symbol);\r\n\t-webkit-mask-repeat: no-repeat;\r\n\t-webkit-mask-position: center;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\toverflow: hidden;\r\n\tposition: absolute;\r\n\tdisplay: block;\r\n  cursor: crosshair;\r\n}\r\n\r\n@keyframes dash-animation {\r\n  to {\r\n    stroke-dashoffset: -100;\r\n  }\r\n}\r\n\r\n.beepboxEditor .dash-move {\r\n  animation: dash-animation 20s infinite linear;\r\n}\r\n\r\n.beepboxEditor .trackContainer {\r\n\toverflow-x: hidden;\r\n\tflex-grow: 1;\r\n}\r\n\r\n.beepboxEditor .trackAndMuteContainer {\r\n\tdisplay: flex;\r\n\talign-items: flex-start;\r\n}\r\n\r\n.beepboxEditor .muteEditor {\r\n\theight: 128px;\r\n\twidth: 32px;\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: stretch;\r\n}\r\n\r\n.beepboxEditor .selectRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n}\r\n\r\n.beepboxEditor .tip {\r\n\tcolor: ${ColorConfig.secondaryText};\r\n}\r\n\r\n.beepboxEditor .selectRow > :nth-child(2) {\r\n\twidth: 61.5%;\r\n}\r\n\r\n.beepboxEditor .operatorRow {\r\n\tmargin: 2px 0;\r\n\theight: 2em;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\talign-items: center;\r\n}\r\n\r\n.beepboxEditor .operatorRow > * {\r\n\tflex-grow: 1;\r\n\tflex-shrink: 1;\r\n}\r\n\r\n.beepboxEditor .menu-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n.beepboxEditor .menu-area > * {\r\n\tmargin: 2px 0;\r\n}\r\n.beepboxEditor .menu-area > button {\r\n\tpadding: 0 2em;\r\n\twhite-space: nowrap;\r\n}\r\n\r\n.beepboxEditor .song-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-controls {\r\n\tflex-shrink: 0;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .instrument-settings-area {\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n}\r\n\r\n.beepboxEditor .editor-right-side-top > *, .beepboxEditor .editor-right-side-bottom > * {\r\n\tflex-shrink: 0;\r\n}\r\n\r\n.beepboxEditor input[type=text], .beepboxEditor input[type=number] {\r\n\tfont-size: inherit;\r\n\tfont-weight: inherit;\r\n\tfont-family: inherit;\r\n\tbackground: transparent;\r\n\ttext-align: center;\r\n\tborder: 1px solid ${ColorConfig.inputBoxOutline};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=text]::selection, .beepboxEditor input[type=number]::selection {\r\n\tbackground-color: ${ColorConfig.textSelection};\r\n\tcolor: ${ColorConfig.primaryText};\r\n}\r\n\r\n.beepboxEditor input[type=checkbox] {\r\n  transform: scale(1.5);\r\n}\r\n\r\n.beepboxEditor input[type=range] {\r\n\t-webkit-appearance: none;\r\n\tcolor: inherit;\r\n\twidth: 100%;\r\n\theight: 2em;\r\n\tfont-size: inherit;\r\n\tmargin: 0;\r\n\tcursor: pointer;\r\n\tbackground-color: ${ColorConfig.editorBackground};\r\n\ttouch-action: pan-y;\r\n  position: relative;\r\n}\r\n.beepboxEditor input[type=range]:focus {\r\n\toutline: none;\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-runnable-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n\r\n.beepboxEditor span.midTick:after {\r\n    content: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: currentColor;\r\n    width: 2%;\r\n    left: 49%;\r\n    height: 0.5em;\r\n    top: 32%;\r\n    z-index: 1;\r\n\t\tpointer-events: none;\r\n}\r\n.beepboxEditor span.modSlider {\r\n\t--mod-position: 20%;\r\n\t--mod-color: ${ColorConfig.overwritingModSlider};\r\n  --mod-border-radius: 0%;\r\n}\r\n.beepboxEditor span.modSlider:before {\r\n\tcontent: \"\";\r\n    display:inline-block;\r\n    position: absolute;\r\n    background: var(--mod-color);\r\n    width: 4%;\r\n    left: var(--mod-position);\r\n    height: 0.8em;\r\n    top: 28%;\r\n    z-index: 2;\r\n\t\ttransform: translate(-50%, 0%);\r\n\t\tpointer-events: none;\r\n\t\tborder: 40%;\r\n\t\tborder-radius: var(--mod-border-radius);\r\n}\r\n.beepboxEditor input[type=range]::-webkit-slider-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n\t-webkit-appearance: none;\r\n\tmargin-top: -0.75em;\r\n}\r\n.beepboxEditor input[type=range]:focus::-webkit-slider-runnable-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n}\r\n.beepboxEditor input[type=range]:focus::-moz-range-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-moz-range-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tborder: none;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor input[type=range]::-ms-track {\r\n\twidth: 100%;\r\n\theight: 0.5em;\r\n\tcursor: pointer;\r\n\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\tborder-color: transparent;\r\n}\r\n.beepboxEditor input[type=range]:focus::-ms-track {\r\n\tbackground: ${ColorConfig.uiWidgetFocus};\r\n}\r\n.beepboxEditor input[type=range]::-ms-thumb {\r\n\theight: 2em;\r\n\twidth: 0.5em;\r\n\tborder-radius: 0.25em;\r\n\tbackground: currentColor;\r\n\tcursor: pointer;\r\n}\r\n.beepboxEditor .hintButton {\r\n\tborder: 1px solid currentColor;\r\n\tborder-radius: 50%;\r\n\ttext-decoration: none;\r\n\twidth: 1em;\r\n\theight: 1em;\r\n\ttext-align: center;\r\n\tmargin-left: auto;\r\n\tmargin-right: .4em;\r\n\tcursor: pointer;\r\n}\r\n\r\nli.select2-results__option[role=group] > strong:hover {\r\n  background-color: #516fbb;\r\n}\r\n\r\n/* wide screen */\r\n@media (min-width: 701px) {\r\n\t#beepboxEditorContainer {\r\n\t\tdisplay: table;\r\n\t}\r\n\t.beepboxEditor {\r\n\t\tflex-direction: row;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: 3px solid ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\t.beepboxEditor .trackAndMuteContainer {\r\n\t\twidth: 512px;\r\n\t}\r\n\t.beepboxEditor .trackSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n    .beepboxEditor .muteButtonSelectBox {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t\talign-items: center;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton {\r\n\t\tflex-grow: 1;\r\n\t\tmargin-left: 10px;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\twidth: 14em;\r\n\t}\r\n}\r\n\r\n/* narrow screen */\r\n@media (max-width: 700px) {\r\n\t.beepboxEditor {\r\n\t\tgrid-template-columns: minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content 6px min-content min-content;\r\n\t\tgrid-template-areas: \"pattern-area\" \".\" \"track-area\" \"settings-area\";\r\n\t\tgrid-row-gap: 0;\r\n\t}\r\n\t.beepboxEditor .settings-area {\r\n\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\tgrid-template-rows: min-content min-content 1fr min-content;\r\n\t\tgrid-template-areas:\r\n\t\t\t\"play-pause-area play-pause-area\"\r\n\t\t\t\"menu-area instrument-settings-area\"\r\n\t\t\t\"song-settings-area instrument-settings-area\"\r\n\t\t\t\"version-area version-area\";\r\n\t\tgrid-column-gap: 8px;\r\n\t\tmargin: 0 4px;\r\n\t}\r\n\t.beepboxEditor:focus-within {\r\n\t\toutline: none;\r\n\t}\r\n\t.beepboxEditor .pattern-area {\r\n\t\tmax-height: 75vh;\r\n\t}\r\n\t.beepboxEditor .trackContainer {\r\n\t\toverflow-x: auto;\r\n\t}\r\n\t.beepboxEditor .barScrollBar {\r\n\t\tdisplay: none;\r\n\t}\r\n\t.beepboxEditor .play-pause-area {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tmargin: 2px 0;\r\n\t}\r\n\t.beepboxEditor .playback-bar-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\tflex-grow: 1;\r\n\t}\r\n\t.beepboxEditor .playback-volume-controls {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: row;\r\n\t\talign-items: center;\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t.beepboxEditor .pauseButton, .beepboxEditor .playButton,\r\n\t.beepboxEditor .nextBarButton, .beepboxEditor .prevBarButton,\r\n    .beepboxEditor .copyButton, .beepboxEditor .pasteButton\r\n    {\r\n\t\tflex-grow: 1;\r\n\t\tmargin: 0 2px;\r\n\t}\r\n\t\r\n\t.beepboxEditor .soundIcon {\r\n\t  background: ${ColorConfig.editorBackground};\r\n\t  display: inline-block;\r\n\t  height: 10px;\r\n\t  margin-left: 0px;\r\n\t  margin-top: 8px;\r\n\t\tposition: relative;\r\n\t\twidth: 10px;\r\n\t}\r\n\t.beepboxEditor .soundIcon:before {\r\n\t  border-bottom: 6px solid transparent;\r\n\t  border-top: 6px solid transparent;\r\n\t  border-right: 10px solid ${ColorConfig.editorBackground};\r\n\t  content: \"\";\r\n\t  height: 10px;\r\n\t  left: 6px;\r\n\t  position: absolute;\r\n\t  top: -6px;\r\n\t  width: 0;\r\n\t}\r\n}\r\n\r\n`));\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\r\ninterface NumberArray {\r\n\tlength: number;\r\n\t[index: number]: number;\r\n}\r\n\r\n// A basic FFT operation scales the overall magnitude of elements by the\r\n// square root of the length of the array, √N. Performing a forward FFT and\r\n// then an inverse FFT results in the original array, but multiplied by N.\r\n// This helper function can be used to compensate for that. \r\nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\r\n\tfor (let i: number = 0; i < array.length; i++) {\r\n\t\tarray[i] *= factor;\r\n\t}\r\n}\r\n\r\nfunction isPowerOf2(n: number): boolean {\r\n\treturn !!n && !(n & (n - 1));\r\n}\r\n\r\nfunction countBits(n: number): number {\r\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\treturn Math.round(Math.log(n) / Math.log(2));\r\n}\r\n\r\n// Rearranges the elements of the array, swapping the element at an index\r\n// with an element at an index that is the bitwise reverse of the first\r\n// index in base 2. Useful for computing the FFT.\r\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\r\n\tconst bitCount: number = countBits(fullArrayLength);\r\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\r\n\tconst finalShift: number = 16 - bitCount;\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\r\n\t\tlet j: number;\r\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\r\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\r\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\r\n\t\tj = ((j >> 8) | ((j & 0xff) << 8)) >> finalShift;\r\n\t\tif (j > i) {\r\n\t\t\tlet temp: number = array[i];\r\n\t\t\tarray[i] = array[j];\r\n\t\t\tarray[j] = temp;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Provided for educational purposes. Easier to read than\r\n// fastFourierTransform(), but computes the same result.\r\n// Takes two parallel arrays representing the real and imaginary elements,\r\n// respectively, and returns an array containing two new arrays, which\r\n// contain the complex result of the transform.\r\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\tconst realOut: number[] = [];\r\n\tconst imagOut: number[] = [];\r\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\r\n\t\trealOut[i] = 0.0;\r\n\t\timagOut[i] = 0.0;\r\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\r\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\r\n\t\t\tconst c: number = Math.cos(radians);\r\n\t\t\tconst s: number = Math.sin(radians);\r\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\r\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\r\n\t\t}\r\n\t}\r\n\treturn [realOut, imagOut];\r\n}\r\n\r\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\r\n// input real and imaginary arrays. Can be used for both forward and inverse\r\n// transforms: swap the order of the arguments for the inverse.\r\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\r\n\tconst fullArrayLength: number = realArray.length;\r\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\r\n\r\n\treverseIndexBits(realArray, fullArrayLength);\r\n\treverseIndexBits(imagArray, fullArrayLength);\r\n\r\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\r\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\r\n\t\tconst startIndex1: number = startIndex + 1;\r\n\t\tconst startIndex2: number = startIndex + 2;\r\n\t\tconst startIndex3: number = startIndex + 3;\r\n\t\tconst real0: number = realArray[startIndex];\r\n\t\tconst real1: number = realArray[startIndex1];\r\n\t\tconst real2: number = realArray[startIndex2];\r\n\t\tconst real3: number = realArray[startIndex3];\r\n\t\tconst imag0: number = imagArray[startIndex];\r\n\t\tconst imag1: number = imagArray[startIndex1];\r\n\t\tconst imag2: number = imagArray[startIndex2];\r\n\t\tconst imag3: number = imagArray[startIndex3];\r\n\t\tconst realTemp0: number = real0 + real1;\r\n\t\tconst realTemp1: number = real0 - real1;\r\n\t\tconst realTemp2: number = real2 + real3;\r\n\t\tconst realTemp3: number = real2 - real3;\r\n\t\tconst imagTemp0: number = imag0 + imag1;\r\n\t\tconst imagTemp1: number = imag0 - imag1;\r\n\t\tconst imagTemp2: number = imag2 + imag3;\r\n\t\tconst imagTemp3: number = imag2 - imag3;\r\n\t\trealArray[startIndex] = realTemp0 + realTemp2;\r\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\r\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\r\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\r\n\t\timagArray[startIndex] = imagTemp0 + imagTemp2;\r\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\r\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\r\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\r\n\t}\r\n\r\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\r\n\t\tconst halfLength: number = stride >>> 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tlet c: number = 1.0;\r\n\t\t\tlet s: number = 0.0;\r\n\t\t\tlet cPrev: number = cosIncrement;\r\n\t\t\tlet sPrev: number = sinIncrement;\r\n\t\t\tconst secondHalf: number = startIndex + halfLength;\r\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\r\n\t\t\t\tconst j: number = i + halfLength;\r\n\t\t\t\tconst real0: number = realArray[i];\r\n\t\t\t\tconst imag0: number = imagArray[i];\r\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\r\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\r\n\t\t\t\trealArray[i] = real0 + real1;\r\n\t\t\t\timagArray[i] = imag0 + imag1;\r\n\t\t\t\trealArray[j] = real0 - real1;\r\n\t\t\t\timagArray[j] = imag0 - imag1;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the Fourier transform from an array of real-valued time-domain\r\n// samples. The output is specially formatted for space efficieny: elements\r\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\r\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\r\n// descending frequency. Overwrites the input array.\r\nexport function forwardRealFourierTransform(array: NumberArray): void {\r\n\tconst fullArrayLength: number = array.length;\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n\r\n\t// First and second pass.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\t// no imaginary elements yet since the input is fully real.\r\n\t\tconst tempA: number = real0 + real1;\r\n\t\tconst tempB: number = real2 + real3;\r\n\t\tarray[index] = tempA + tempB;\r\n\t\tarray[index1] = real0 - real1;\r\n\t\tarray[index2] = tempA - tempB;\r\n\t\tarray[index3] = real2 - real3;\r\n\t}\r\n\r\n\t// Third pass.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst imag3: number = array[index3];\r\n\t\tconst real4: number = array[index4];\r\n\t\tconst real5: number = array[index5];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\r\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\r\n\t\tarray[index] = real0 + real4;\r\n\t\tarray[index1] = real1 + tempA;\r\n\t\tarray[index3] = real1 - tempA;\r\n\t\tarray[index4] = real0 - real4;\r\n\t\tarray[index5] = tempB - imag3;\r\n\t\tarray[index7] = tempB + imag3;\r\n\t}\r\n\r\n\t// Handle remaining passes.\r\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst realStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + realStartB;\r\n\t\t\tarray[startIndexB] = realStartA - realStartB;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst imag0: number = array[indexA1];\r\n\t\t\t\tconst real1: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\r\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\r\n\t\t\t\tarray[indexA0] = real0 + tempA;\r\n\t\t\t\tarray[indexA1] = real0 - tempA;\r\n\t\t\t\tarray[indexB0] = -imag0 - tempB;\r\n\t\t\t\tarray[indexB1] = imag0 - tempB;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Computes the inverse Fourier transform from a specially formatted array of\r\n// scalar values. Elements 0 through N/2 are expected to be the real values of\r\n// the corresponding complex elements, representing cosine wave amplitudes in\r\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\r\n// imaginary values, representing sine wave amplitudes in descending frequency.\r\n// Generates real-valued time-domain samples. Overwrites the input array.\r\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\r\n\tconst totalPasses: number = countBits(fullArrayLength);\r\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\r\n\r\n\t// Perform all but the last few passes in reverse.\r\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\r\n\t\tconst subStride: number = 1 << pass;\r\n\t\tconst midSubStride: number = subStride >> 1;\r\n\t\tconst stride: number = subStride << 1;\r\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\r\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\r\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\r\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\r\n\r\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\r\n\t\t\tconst startIndexA: number = startIndex;\r\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\r\n\t\t\tconst startIndexB: number = startIndexA + subStride;\r\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\r\n\t\t\tconst stopIndex: number = startIndexB + subStride;\r\n\t\t\tconst realStartA: number = array[startIndexA];\r\n\t\t\tconst imagStartB: number = array[startIndexB];\r\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\r\n\t\t\tarray[midIndexA] *= 2;\r\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\r\n\t\t\tarray[midIndexB] *= 2;\r\n\t\t\tlet c: number = cosIncrement;\r\n\t\t\tlet s: number = -sinIncrement;\r\n\t\t\tlet cPrev: number = 1.0;\r\n\t\t\tlet sPrev: number = 0.0;\r\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\r\n\t\t\t\tconst indexA0: number = startIndexA + index;\r\n\t\t\t\tconst indexA1: number = startIndexB - index;\r\n\t\t\t\tconst indexB0: number = startIndexB + index;\r\n\t\t\t\tconst indexB1: number = stopIndex - index;\r\n\t\t\t\tconst real0: number = array[indexA0];\r\n\t\t\t\tconst real1: number = array[indexA1];\r\n\t\t\t\tconst imag0: number = array[indexB0];\r\n\t\t\t\tconst imag1: number = array[indexB1];\r\n\t\t\t\tconst tempA: number = real0 - real1;\r\n\t\t\t\tconst tempB: number = imag0 + imag1;\r\n\t\t\t\tarray[indexA0] = real0 + real1;\r\n\t\t\t\tarray[indexA1] = imag1 - imag0;\r\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\r\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\r\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\r\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\r\n\t\t\t\tcPrev = c;\r\n\t\t\t\tsPrev = s;\r\n\t\t\t\tc = cTemp;\r\n\t\t\t\ts = sTemp;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*\r\n\t// Commented out this block (and compensated with an extra pass above)\r\n\t// because it's slower in my testing so far.\r\n\t// Pass with stride 8.\r\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst index4: number = index + 4;\r\n\t\tconst index5: number = index + 5;\r\n\t\tconst index6: number = index + 6;\r\n\t\tconst index7: number = index + 7;\r\n\t\tconst real0: number = array[index ];\r\n\t\tconst real1: number = array[index1];\r\n\t\tconst real2: number = array[index2];\r\n\t\tconst real3: number = array[index3];\r\n\t\tconst imag4: number = array[index4];\r\n\t\tconst imag5: number = array[index5];\r\n\t\tconst imag6: number = array[index6];\r\n\t\tconst imag7: number = array[index7];\r\n\t\tconst tempA: number = real1 - real3;\r\n\t\tconst tempB: number = imag5 + imag7;\r\n\t\tarray[index ] = real0 + imag4;\r\n\t\tarray[index1] = real1 + real3;\r\n\t\tarray[index2] = real2 * 2;\r\n\t\tarray[index3] = imag7 - imag5;\r\n\t\tarray[index4] = real0 - imag4;\r\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\r\n\t\tarray[index6] = imag6 * 2;\r\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\r\n\t}\r\n\t*/\r\n\t// The final passes with strides 4 and 2, combined into one loop.\r\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\r\n\t\tconst index1: number = index + 1;\r\n\t\tconst index2: number = index + 2;\r\n\t\tconst index3: number = index + 3;\r\n\t\tconst real0: number = array[index];\r\n\t\tconst real1: number = array[index1] * 2;\r\n\t\tconst imag2: number = array[index2];\r\n\t\tconst imag3: number = array[index3] * 2;\r\n\t\tconst tempA: number = real0 + imag2;\r\n\t\tconst tempB: number = real0 - imag2;\r\n\t\tarray[index] = tempA + real1;\r\n\t\tarray[index1] = tempA - real1;\r\n\t\tarray[index2] = tempB + imag3;\r\n\t\tarray[index3] = tempB - imag3;\r\n\t}\r\n\r\n\treverseIndexBits(array, fullArrayLength);\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Deque<T> {\r\n\tprivate _capacity: number = 1;\r\n\tprivate _buffer: Array<T | undefined> = [undefined];\r\n\tprivate _mask: number = 0;\r\n\tprivate _offset: number = 0;\r\n\tprivate _count: number = 0;\r\n\r\n\tpublic pushFront(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._offset = (this._offset - 1) & this._mask;\r\n\t\tthis._buffer[this._offset] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic pushBack(element: T): void {\r\n\t\tif (this._count >= this._capacity) this._expandCapacity();\r\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\r\n\t\tthis._count++;\r\n\t}\r\n\tpublic popFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tconst element: T = <T>this._buffer[this._offset];\r\n\t\tthis._buffer[this._offset] = undefined;\r\n\t\tthis._offset = (this._offset + 1) & this._mask;\r\n\t\tthis._count--;\r\n\t\treturn element;\r\n\t}\r\n\tpublic popBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\tthis._count--;\r\n\t\tconst index: number = (this._offset + this._count) & this._mask;\r\n\t\tconst element: T = <T>this._buffer[index];\r\n\t\tthis._buffer[index] = undefined;\r\n\t\treturn element;\r\n\t}\r\n\tpublic peakFront(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[this._offset];\r\n\t}\r\n\tpublic peakBack(): T {\r\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\r\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\r\n\t}\r\n\tpublic count(): number {\r\n\t\treturn this._count;\r\n\t}\r\n\tpublic set(index: number, element: T): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\r\n\t}\r\n\tpublic get(index: number): T {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\r\n\t}\r\n\tpublic remove(index: number): void {\r\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\r\n\t\tif (index <= (this._count >> 1)) {\r\n\t\t\twhile (index > 0) {\r\n\t\t\t\tthis.set(index, this.get(index - 1));\r\n\t\t\t\tindex--;\r\n\t\t\t}\r\n\t\t\tthis.popFront();\r\n\t\t} else {\r\n\t\t\tindex++;\r\n\t\t\twhile (index < this._count) {\r\n\t\t\t\tthis.set(index - 1, this.get(index));\r\n\t\t\t\tindex++;\r\n\t\t\t}\r\n\t\t\tthis.popBack();\r\n\t\t}\r\n\t}\r\n\tprivate _expandCapacity(): void {\r\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\r\n\t\tthis._capacity = this._capacity << 1;\r\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\r\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\r\n\t\tconst size: number = this._count | 0;\r\n\t\tconst offset: number = this._offset | 0;\r\n\t\tfor (let i = 0; i < size; i++) {\r\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\r\n\t\t}\r\n\t\tfor (let i = size; i < this._capacity; i++) {\r\n\t\t\tnewBuffer[i] = undefined;\r\n\t\t}\r\n\t\tthis._offset = 0;\r\n\t\tthis._buffer = newBuffer;\r\n\t\tthis._mask = this._capacity - 1;\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex } from \"./SynthConfig\";\r\nimport { EditorConfig } from \"../editor/EditorConfig\";\r\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\r\nimport { Deque } from \"./Deque\";\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tAudioContext: any;\r\n\t\twebkitAudioContext: any;\r\n\t}\r\n}\r\n\r\n//namespace beepbox {\r\n// For performance debugging:\r\n//let samplesAccumulated: number = 0;\r\n//let samplePerformance: number = 0;\r\n\r\nconst enum CharCode {\r\n\tSPACE = 32,\r\n\tHASH = 35,\r\n\tPERCENT = 37,\r\n\tAMPERSAND = 38,\r\n\tPLUS = 43,\r\n\tDASH = 45,\r\n\tDOT = 46,\r\n\tNUM_0 = 48,\r\n\tNUM_1 = 49,\r\n\tNUM_2 = 50,\r\n\tNUM_3 = 51,\r\n\tNUM_4 = 52,\r\n\tNUM_5 = 53,\r\n\tNUM_6 = 54,\r\n\tNUM_7 = 55,\r\n\tNUM_8 = 56,\r\n\tNUM_9 = 57,\r\n\tEQUALS = 61,\r\n\tA = 65,\r\n\tB = 66,\r\n\tC = 67,\r\n\tD = 68,\r\n\tE = 69,\r\n\tF = 70,\r\n\tG = 71,\r\n\tH = 72,\r\n\tI = 73,\r\n\tJ = 74,\r\n\tK = 75,\r\n\tL = 76,\r\n\tM = 77,\r\n\tN = 78,\r\n\tO = 79,\r\n\tP = 80,\r\n\tQ = 81,\r\n\tR = 82,\r\n\tS = 83,\r\n\tT = 84,\r\n\tU = 85,\r\n\tV = 86,\r\n\tW = 87,\r\n\tX = 88,\r\n\tY = 89,\r\n\tZ = 90,\r\n\tUNDERSCORE = 95,\r\n\ta = 97,\r\n\tb = 98,\r\n\tc = 99,\r\n\td = 100,\r\n\te = 101,\r\n\tf = 102,\r\n\tg = 103,\r\n\th = 104,\r\n\ti = 105,\r\n\tj = 106,\r\n\tk = 107,\r\n\tl = 108,\r\n\tm = 109,\r\n\tn = 110,\r\n\to = 111,\r\n\tp = 112,\r\n\tq = 113,\r\n\tr = 114,\r\n\ts = 115,\r\n\tt = 116,\r\n\tu = 117,\r\n\tv = 118,\r\n\tw = 119,\r\n\tx = 120,\r\n\ty = 121,\r\n\tz = 122,\r\n\tLEFT_CURLY_BRACE = 123,\r\n\tRIGHT_CURLY_BRACE = 125,\r\n}\r\n\r\nconst enum SongTagCode {\r\n\tbeatCount = CharCode.a,\r\n\tbars = CharCode.b,\r\n\tvibrato = CharCode.c,\r\n\ttransition = CharCode.d,\r\n\tloopEnd = CharCode.e,\r\n\tfilterCutoff = CharCode.f,\r\n\tbarCount = CharCode.g,\r\n\tinterval = CharCode.h,\r\n\tinstrumentCount = CharCode.i,\r\n\tpatternCount = CharCode.j,\r\n\tkey = CharCode.k,\r\n\tloopStart = CharCode.l,\r\n\treverb = CharCode.m,\r\n\tchannelCount = CharCode.n,\r\n\tchannelOctave = CharCode.o,\r\n\tpatterns = CharCode.p,\r\n\teffects = CharCode.q,\r\n\trhythm = CharCode.r,\r\n\tscale = CharCode.s,\r\n\ttempo = CharCode.t,\r\n\tpreset = CharCode.u,\r\n\tvolume = CharCode.v,\r\n\twave = CharCode.w,\r\n\r\n\tfilterResonance = CharCode.y,\r\n\tfilterEnvelope = CharCode.z,\r\n\talgorithm = CharCode.A,\r\n\tfeedbackAmplitude = CharCode.B,\r\n\tchord = CharCode.C,\r\n\tdetune = CharCode.D,\r\n\toperatorEnvelopes = CharCode.E,\r\n\tfeedbackType = CharCode.F,\r\n\tarpeggioSpeed = CharCode.G,\r\n\tharmonics = CharCode.H,\r\n\r\n\tsquareDuty = CharCode.K,\r\n\tpanning = CharCode.L,\r\n\tcustomChipWave = CharCode.M,\r\n\tsongTitle = CharCode.N,\r\n\tlimiterSettings = CharCode.O,\r\n\toperatorAmplitudes = CharCode.P,\r\n\toperatorFrequencies = CharCode.Q,\r\n\r\n\tspectrum = CharCode.S,\r\n\tstartInstrument = CharCode.T,\r\n\tchannelNames = CharCode.U,\r\n\tfeedbackEnvelope = CharCode.V,\r\n\tpulseWidth = CharCode.W,\r\n}\r\n\r\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\r\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\r\n\r\nclass BitFieldReader {\r\n\tprivate _bits: number[] = [];\r\n\tprivate _readIndex: number = 0;\r\n\r\n\tconstructor(source: string, startIndex: number, stopIndex: number) {\r\n\t\tfor (let i: number = startIndex; i < stopIndex; i++) {\r\n\t\t\tconst value: number = base64CharCodeToInt[source.charCodeAt(i)];\r\n\t\t\tthis._bits.push((value >> 5) & 0x1);\r\n\t\t\tthis._bits.push((value >> 4) & 0x1);\r\n\t\t\tthis._bits.push((value >> 3) & 0x1);\r\n\t\t\tthis._bits.push((value >> 2) & 0x1);\r\n\t\t\tthis._bits.push((value >> 1) & 0x1);\r\n\t\t\tthis._bits.push(value & 0x1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic read(bitCount: number): number {\r\n\t\tlet result: number = 0;\r\n\t\twhile (bitCount > 0) {\r\n\t\t\tresult = result << 1;\r\n\t\t\tresult += this._bits[this._readIndex++];\r\n\t\t\tbitCount--;\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readLongTail(minValue: number, minBits: number): number {\r\n\t\tlet result: number = minValue;\r\n\t\tlet numBits: number = minBits;\r\n\t\twhile (this._bits[this._readIndex++]) {\r\n\t\t\tresult += 1 << numBits;\r\n\t\t\tnumBits++;\r\n\t\t}\r\n\t\twhile (numBits > 0) {\r\n\t\t\tnumBits--;\r\n\t\t\tif (this._bits[this._readIndex++]) {\r\n\t\t\t\tresult += 1 << numBits;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readPartDuration(): number {\r\n\t\treturn this.readLongTail(1, 3);\r\n\t}\r\n\r\n\tpublic readLegacyPartDuration(): number {\r\n\t\treturn this.readLongTail(1, 2);\r\n\t}\r\n\r\n\tpublic readPinCount(): number {\r\n\t\treturn this.readLongTail(1, 0);\r\n\t}\r\n\r\n\tpublic readPitchInterval(): number {\r\n\t\tif (this.read(1)) {\r\n\t\t\treturn -this.readLongTail(1, 3);\r\n\t\t} else {\r\n\t\t\treturn this.readLongTail(1, 3);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass BitFieldWriter {\r\n\tprivate _index: number = 0;\r\n\tprivate _bits: number[] = [];\r\n\r\n\tpublic clear() {\r\n\t\tthis._index = 0;\r\n\t}\r\n\r\n\tpublic write(bitCount: number, value: number): void {\r\n\t\tbitCount--;\r\n\t\twhile (bitCount >= 0) {\r\n\t\t\tthis._bits[this._index++] = (value >>> bitCount) & 1;\r\n\t\t\tbitCount--;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeLongTail(minValue: number, minBits: number, value: number): void {\r\n\t\tif (value < minValue) throw new Error(\"value out of bounds\");\r\n\t\tvalue -= minValue;\r\n\t\tlet numBits: number = minBits;\r\n\t\twhile (value >= (1 << numBits)) {\r\n\t\t\tthis._bits[this._index++] = 1;\r\n\t\t\tvalue -= 1 << numBits;\r\n\t\t\tnumBits++;\r\n\t\t}\r\n\t\tthis._bits[this._index++] = 0;\r\n\t\twhile (numBits > 0) {\r\n\t\t\tnumBits--;\r\n\t\t\tthis._bits[this._index++] = (value >>> numBits) & 1;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writePartDuration(value: number): void {\r\n\t\tthis.writeLongTail(1, 3, value);\r\n\t}\r\n\r\n\tpublic writePinCount(value: number): void {\r\n\t\tthis.writeLongTail(1, 0, value);\r\n\t}\r\n\r\n\tpublic writePitchInterval(value: number): void {\r\n\t\tif (value < 0) {\r\n\t\t\tthis.write(1, 1); // sign\r\n\t\t\tthis.writeLongTail(1, 3, -value);\r\n\t\t} else {\r\n\t\t\tthis.write(1, 0); // sign\r\n\t\t\tthis.writeLongTail(1, 3, value);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic concat(other: BitFieldWriter): void {\r\n\t\tfor (let i: number = 0; i < other._index; i++) {\r\n\t\t\tthis._bits[this._index++] = other._bits[i];\r\n\t\t}\r\n\t}\r\n\r\n\tpublic encodeBase64(buffer: number[]): number[] {\r\n\r\n\t\tfor (let i: number = 0; i < this._index; i += 6) {\r\n\t\t\tconst value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\r\n\t\t\tbuffer.push(base64IntToCharCode[value]);\r\n\t\t}\r\n\t\treturn buffer;\r\n\t}\r\n\r\n\tpublic lengthBase64(): number {\r\n\t\treturn Math.ceil(this._index / 6);\r\n\t}\r\n}\r\n\r\nexport interface NotePin {\r\n\tinterval: number;\r\n\ttime: number;\r\n\tvolume: number;\r\n}\r\n\r\nexport function makeNotePin(interval: number, time: number, volume: number): NotePin {\r\n\treturn { interval: interval, time: time, volume: volume };\r\n}\r\n\r\nfunction clamp(min: number, max: number, val: number): number {\r\n\tmax = max - 1;\r\n\tif (val <= max) {\r\n\t\tif (val >= min) return val;\r\n\t\telse return min;\r\n\t} else {\r\n\t\treturn max;\r\n\t}\r\n}\r\n\r\nfunction validateRange(min: number, max: number, val: number): number {\r\n\tif (min <= val && val <= max) return val;\r\n\tthrow new Error(`Value ${val} not in range [${min}, ${max}]`);\r\n}\r\n\r\nexport class Note {\r\n\tpublic pitches: number[];\r\n\tpublic pins: NotePin[];\r\n\tpublic start: number;\r\n\tpublic end: number;\r\n\r\n\tpublic constructor(pitch: number, start: number, end: number, volume: number, fadeout: boolean = false) {\r\n\t\tthis.pitches = [pitch];\r\n\t\tthis.pins = [makeNotePin(0, 0, volume), makeNotePin(0, end - start, fadeout ? 0 : volume)];\r\n\t\tthis.start = start;\r\n\t\tthis.end = end;\r\n\t}\r\n\r\n\tpublic pickMainInterval(): number {\r\n\t\tlet longestFlatIntervalDuration: number = 0;\r\n\t\tlet mainInterval: number = 0;\r\n\t\tfor (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\r\n\t\t\tconst pinA: NotePin = this.pins[pinIndex - 1];\r\n\t\t\tconst pinB: NotePin = this.pins[pinIndex];\r\n\t\t\tif (pinA.interval == pinB.interval) {\r\n\t\t\t\tconst duration: number = pinB.time - pinA.time;\r\n\t\t\t\tif (longestFlatIntervalDuration < duration) {\r\n\t\t\t\t\tlongestFlatIntervalDuration = duration;\r\n\t\t\t\t\tmainInterval = pinA.interval;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (longestFlatIntervalDuration == 0) {\r\n\t\t\tlet loudestVolume: number = 0;\r\n\t\t\tfor (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\r\n\t\t\t\tconst pin: NotePin = this.pins[pinIndex];\r\n\t\t\t\tif (loudestVolume < pin.volume) {\r\n\t\t\t\t\tloudestVolume = pin.volume;\r\n\t\t\t\t\tmainInterval = pin.interval;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mainInterval;\r\n\t}\r\n\r\n\tpublic clone(): Note {\r\n\t\tconst newNote: Note = new Note(-1, this.start, this.end, 6);\r\n\t\tnewNote.pitches = this.pitches.concat();\r\n\t\tnewNote.pins = [];\r\n\t\tfor (const pin of this.pins) {\r\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n\t\t}\r\n\t\treturn newNote;\r\n\t}\r\n}\r\n\r\nexport class Pattern {\r\n\tpublic notes: Note[] = [];\r\n\tpublic instrument: number = 0;\r\n\r\n\tpublic cloneNotes(): Note[] {\r\n\t\tconst result: Note[] = [];\r\n\t\tfor (const note of this.notes) {\r\n\t\t\tresult.push(note.clone());\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic reset(): void {\r\n\t\tthis.notes.length = 0;\r\n\t\tthis.instrument = 0;\r\n\t}\r\n}\r\n\r\nexport class Operator {\r\n\tpublic frequency: number = 0;\r\n\tpublic amplitude: number = 0;\r\n\tpublic envelope: number = 0;\r\n\r\n\tconstructor(index: number) {\r\n\t\tthis.reset(index);\r\n\t}\r\n\r\n\tpublic reset(index: number): void {\r\n\t\tthis.frequency = 0;\r\n\t\tthis.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\r\n\t\tthis.envelope = (index == 0) ? 0 : 1;\r\n\t}\r\n\r\n\tpublic copy(other: Operator): void {\r\n\t\tthis.frequency = other.frequency;\r\n\t\tthis.amplitude = other.amplitude;\r\n\t\tthis.envelope = other.envelope;\r\n\t}\r\n}\r\n\r\nexport class SpectrumWave {\r\n\tpublic spectrum: number[] = [];\r\n\tprivate _wave: Float32Array | null = null;\r\n\tprivate _waveIsReady: boolean = false;\r\n\r\n\tconstructor(isNoiseChannel: boolean) {\r\n\t\tthis.reset(isNoiseChannel);\r\n\t}\r\n\r\n\tpublic reset(isNoiseChannel: boolean): void {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tthis.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\r\n\t\t\t} else {\r\n\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\r\n\t\t\t\tthis.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic markCustomWaveDirty(): void {\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic getCustomWave(lowestOctave: number): Float32Array {\r\n\t\tif (!this._waveIsReady || this._wave == null) {\r\n\t\t\tlet waveLength: number = Config.chipNoiseLength;\r\n\r\n\t\t\tif (this._wave == null || this._wave.length != waveLength + 1) {\r\n\t\t\t\tthis._wave = new Float32Array(waveLength + 1);\r\n\t\t\t}\r\n\t\t\tconst wave: Float32Array = this._wave;\r\n\r\n\t\t\tfor (let i: number = 0; i < waveLength; i++) {\r\n\t\t\t\twave[i] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst highestOctave: number = 14;\r\n\t\t\tconst falloffRatio: number = 0.25;\r\n\t\t\t// Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\r\n\t\t\tconst pitchTweak: number[] = [0, 1 / 7, Math.log(5 / 4) / Math.LN2, 3 / 7, Math.log(3 / 2) / Math.LN2, 5 / 7, 6 / 7];\r\n\t\t\tfunction controlPointToOctave(point: number): number {\r\n\t\t\t\treturn lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\r\n\t\t\t}\r\n\r\n\t\t\tlet combinedAmplitude: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\r\n\t\t\t\tconst value1: number = (i <= 0) ? 0 : this.spectrum[i - 1];\r\n\t\t\t\tconst value2: number = (i >= Config.spectrumControlPoints) ? this.spectrum[Config.spectrumControlPoints - 1] : this.spectrum[i];\r\n\t\t\t\tconst octave1: number = controlPointToOctave(i - 1);\r\n\t\t\t\tlet octave2: number = controlPointToOctave(i);\r\n\t\t\t\tif (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\r\n\t\t\t\tif (value1 == 0 && value2 == 0) continue;\r\n\r\n\t\t\t\tcombinedAmplitude += 0.02 * drawNoiseSpectrum(wave, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\r\n\t\t\t}\r\n\t\t\tif (this.spectrum[Config.spectrumControlPoints - 1] > 0) {\r\n\t\t\t\tcombinedAmplitude += 0.02 * drawNoiseSpectrum(wave, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, this.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\r\n\t\t\t}\r\n\r\n\t\t\tinverseRealFourierTransform(wave, waveLength);\r\n\t\t\tscaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\r\n\r\n\t\t\t// Duplicate the first sample at the end for easier wrap-around interpolation.\r\n\t\t\twave[waveLength] = wave[0];\r\n\r\n\t\t\tthis._waveIsReady = true;\r\n\t\t}\r\n\t\treturn this._wave;\r\n\t}\r\n}\r\n\r\nexport class HarmonicsWave {\r\n\tpublic harmonics: number[] = [];\r\n\tprivate _wave: Float32Array | null = null;\r\n\tprivate _waveIsReady: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tpublic reset(): void {\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\tthis.harmonics[i] = 0;\r\n\t\t}\r\n\t\tthis.harmonics[0] = Config.harmonicsMax;\r\n\t\tthis.harmonics[3] = Config.harmonicsMax;\r\n\t\tthis.harmonics[6] = Config.harmonicsMax;\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic markCustomWaveDirty(): void {\r\n\t\tthis._waveIsReady = false;\r\n\t}\r\n\r\n\tpublic getCustomWave(): Float32Array {\r\n\t\tif (!this._waveIsReady || this._wave == null) {\r\n\t\t\tlet waveLength: number = Config.harmonicsWavelength;\r\n\t\t\tconst retroWave: Float32Array = getDrumWave(0);\r\n\r\n\t\t\tif (this._wave == null || this._wave.length != waveLength + 1) {\r\n\t\t\t\tthis._wave = new Float32Array(waveLength + 1);\r\n\t\t\t}\r\n\t\t\tconst wave: Float32Array = this._wave;\r\n\r\n\t\t\tfor (let i: number = 0; i < waveLength; i++) {\r\n\t\t\t\twave[i] = 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst overallSlope: number = -0.25;\r\n\t\t\tlet combinedControlPointAmplitude: number = 1;\r\n\r\n\t\t\tfor (let harmonicIndex: number = 0; harmonicIndex < Config.harmonicsRendered; harmonicIndex++) {\r\n\t\t\t\tconst harmonicFreq: number = harmonicIndex + 1;\r\n\t\t\t\tlet controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? this.harmonics[harmonicIndex] : this.harmonics[Config.harmonicsControlPoints - 1];\r\n\t\t\t\tif (harmonicIndex >= Config.harmonicsControlPoints) {\r\n\t\t\t\t\tcontrolValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (Config.harmonicsRendered - Config.harmonicsControlPoints);\r\n\t\t\t\t}\r\n\t\t\t\tconst normalizedValue: number = controlValue / Config.harmonicsMax;\r\n\t\t\t\tlet amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\r\n\t\t\t\tif (harmonicIndex < Config.harmonicsControlPoints) {\r\n\t\t\t\t\tcombinedControlPointAmplitude += amplitude;\r\n\t\t\t\t}\r\n\t\t\t\tamplitude *= Math.pow(harmonicFreq, overallSlope);\r\n\r\n\t\t\t\t// Multiple all the sine wave amplitudes by 1 or -1 based on the LFSR\r\n\t\t\t\t// retro wave (effectively random) to avoid egregiously tall spikes.\r\n\t\t\t\tamplitude *= retroWave[harmonicIndex + 589];\r\n\r\n\t\t\t\twave[waveLength - harmonicFreq] = amplitude;\r\n\t\t\t}\r\n\r\n\t\t\tinverseRealFourierTransform(wave, waveLength);\r\n\r\n\t\t\t// Limit the maximum wave amplitude.\r\n\t\t\tconst mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = wave[i] * mult;\r\n\t\t\t\twave[i] = cumulative;\r\n\t\t\t}\r\n\t\t\t// The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n\t\t\twave[waveLength] = wave[0];\r\n\r\n\t\t\tthis._waveIsReady = true;\r\n\t\t}\r\n\t\treturn this._wave;\r\n\t}\r\n}\r\n\r\nexport class Instrument {\r\n\tpublic type: InstrumentType = InstrumentType.chip;\r\n\tpublic preset: number = 0;\r\n\tpublic chipWave: number = 2;\r\n\tpublic chipNoise: number = 1;\r\n\tpublic filterCutoff: number = 12;\r\n\tpublic filterResonance: number = 0;\r\n\tpublic filterEnvelope: number = 1;\r\n\tpublic transition: number = 1;\r\n\tpublic vibrato: number = 0;\r\n\tpublic vibratoDepth: number = 0;\r\n\tpublic vibratoSpeed: number = 10;\r\n\tpublic vibratoDelay: number = 0;\r\n\tpublic vibratoType: number = 0;\r\n\tpublic interval: number = 0;\r\n\tpublic effects: number = 0;\r\n\tpublic chord: number = 1;\r\n\tpublic volume: number = 0;\r\n\tpublic pan: number = Config.panCenter;\r\n\tpublic panDelay: number = 10;\r\n\tpublic arpeggioSpeed: number = 12;\r\n\tpublic fastTwoNoteArp: boolean = false;\r\n\tpublic tieNoteTransition: boolean = false;\r\n\tpublic clicklessTransition: boolean = false;\r\n\tpublic detune: number = 0;\r\n\tpublic pulseWidth: number = Config.pulseWidthRange;\r\n\tpublic pulseEnvelope: number = 1;\r\n\tpublic algorithm: number = 0;\r\n\tpublic feedbackType: number = 0;\r\n\tpublic feedbackAmplitude: number = 0;\r\n\tpublic feedbackEnvelope: number = 1;\r\n\tpublic LFOtime: number = 0;\r\n\tpublic nextLFOtime: number = 0;\r\n\tpublic arpTime: number = 0;\r\n\tpublic customChipWave: Float64Array = new Float64Array(64);\r\n\tpublic customChipWaveIntegral: Float64Array = new Float64Array(65); // One extra element for wrap-around in chipSynth.\r\n\tpublic readonly operators: Operator[] = [];\r\n\tpublic readonly spectrumWave: SpectrumWave;\r\n\tpublic readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\r\n\tpublic readonly drumsetEnvelopes: number[] = [];\r\n\tpublic readonly drumsetSpectrumWaves: SpectrumWave[] = [];\r\n\tpublic modChannels: number[] = [];\r\n\tpublic modStatuses: ModStatus[] = [];\r\n\tpublic modInstruments: number[] = [];\r\n\tpublic modSettings: ModSetting[] = [];\r\n\r\n\tconstructor(isNoiseChannel: boolean, isModChannel: boolean) {\r\n\r\n\t\tif (isModChannel) {\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tthis.modChannels.push(0);\r\n\t\t\t\tthis.modStatuses.push(ModStatus.msNone);\r\n\t\t\t\tthis.modInstruments.push(0);\r\n\t\t\t\tthis.modSettings.push(ModSetting.mstNone);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.spectrumWave = new SpectrumWave(isNoiseChannel);\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis.operators[i] = new Operator(i);\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tthis.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\tthis.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < 64; i++) {\r\n\t\t\tthis.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\r\n\t\t}\r\n\r\n\t\tlet sum: number = 0.0;\r\n\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\tsum += this.customChipWave[i];\r\n\t\t}\r\n\t\tconst average: number = sum / this.customChipWave.length;\r\n\r\n\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\tlet cumulative: number = 0;\r\n\t\tlet wavePrev: number = 0;\r\n\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\tcumulative += wavePrev;\r\n\t\t\twavePrev = this.customChipWave[i] - average;\r\n\t\t\tthis.customChipWaveIntegral[i] = cumulative;\r\n\t\t}\r\n\r\n\t\t// 65th, last sample is for anti-aliasing\r\n\t\tthis.customChipWaveIntegral[64] = 0.0;\r\n\r\n\t}\r\n\r\n\tpublic setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n\t\t// Mod channels are forced to one type.\r\n\t\tif (isModChannel) type = InstrumentType.mod;\r\n\t\tthis.type = type;\r\n\t\tthis.preset = type;\r\n\t\tthis.volume = 0;\r\n\t\tthis.pan = Config.panCenter;\r\n\t\tthis.panDelay = 10;\r\n\t\tthis.arpeggioSpeed = 12;\r\n\t\tthis.detune = 0;\r\n\t\tthis.tieNoteTransition = false;\r\n\t\tthis.clicklessTransition = false;\r\n\t\tswitch (type) {\r\n\t\t\tcase InstrumentType.chip:\r\n\t\t\t\tthis.chipWave = 2;\r\n\t\t\t\tthis.filterCutoff = 6;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.customChipWave:\r\n\t\t\t\tthis.chipWave = 2;\r\n\t\t\t\tthis.filterCutoff = 6;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t\t\tthis.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet sum: number = 0.0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tsum += this.customChipWave[i];\r\n\t\t\t\t}\r\n\t\t\t\tconst average: number = sum / this.customChipWave.length;\r\n\r\n\t\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\t\tlet cumulative: number = 0;\r\n\t\t\t\tlet wavePrev: number = 0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\t\twavePrev = this.customChipWave[i] - average;\r\n\t\t\t\t\tthis.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.customChipWaveIntegral[64] = 0.0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.fm:\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 3;\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = 1;\r\n\t\t\t\tthis.algorithm = 0;\r\n\t\t\t\tthis.feedbackType = 0;\r\n\t\t\t\tthis.feedbackAmplitude = 0;\r\n\t\t\t\tthis.feedbackEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tfor (let i: number = 0; i < this.operators.length; i++) {\r\n\t\t\t\t\tthis.operators[i].reset(i);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.noise:\r\n\t\t\t\tthis.chipNoise = 1;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.effects = 0;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.spectrum:\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 0;\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.spectrumWave.reset(isNoiseChannel);\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.drumset:\r\n\t\t\t\tthis.effects = 0;\r\n\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\tthis.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\t\t\tif (this.drumsetSpectrumWaves[i] == undefined) {\r\n\t\t\t\t\t\tthis.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.drumsetSpectrumWaves[i].reset(isNoiseChannel);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.harmonics:\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 0;\r\n\t\t\t\tthis.harmonicsWave.reset();\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.pwm:\r\n\t\t\t\tthis.filterCutoff = 10;\r\n\t\t\t\tthis.filterResonance = 0;\r\n\t\t\t\tthis.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t\tthis.transition = 1;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 1;\r\n\t\t\t\tthis.chord = 2;\r\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange;\r\n\t\t\t\tthis.pulseEnvelope = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\t\tbreak;\r\n\t\t\tcase InstrumentType.mod:\r\n\t\t\t\tthis.transition = 0;\r\n\t\t\t\tthis.vibrato = 0;\r\n\t\t\t\tthis.interval = 0;\r\n\t\t\t\tthis.effects = 0;\r\n\t\t\t\tthis.chord = 0;\r\n\t\t\t\tthis.modChannels = [];\r\n\t\t\t\tthis.modStatuses = [];\r\n\t\t\t\tthis.modInstruments = [];\r\n\t\t\t\tthis.modSettings = [];\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tthis.modChannels.push(0);\r\n\t\t\t\t\tthis.modStatuses.push(ModStatus.msNone);\r\n\t\t\t\t\tthis.modInstruments.push(0);\r\n\t\t\t\t\tthis.modSettings.push(ModSetting.mstNone);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unrecognized instrument type: \" + type);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toJsonObject(): Object {\r\n\t\tconst instrumentObject: any = {\r\n\t\t\t\"type\": Config.instrumentTypeNames[this.type],\r\n\t\t\t\"volume\": this.volume,\r\n\t\t\t\"pan\": (this.pan - Config.panCenter) * 100 / Config.panCenter,\r\n\t\t\t\"panDelay\": this.panDelay,\r\n\t\t\t\"arpeggioSpeed\": this.arpeggioSpeed,\r\n\t\t\t\"fastTwoNoteArp\": this.fastTwoNoteArp,\r\n\t\t\t\"tieNoteTransition\": this.tieNoteTransition,\r\n\t\t\t\"clicklessTransition\": this.clicklessTransition,\r\n\t\t\t\"vibrato\": this.vibrato,\r\n\t\t\t\"vibratoDepth\": this.vibratoDepth,\r\n\t\t\t\"vibratoDelay\": this.vibratoDelay,\r\n\t\t\t\"vibratoSpeed\": this.vibratoSpeed,\r\n\t\t\t\"vibratoType\": this.vibratoType,\r\n\t\t\t\"detune\": this.detune,\r\n\t\t\t\"effects\": Config.effectsNames[this.effects],\r\n\t\t};\r\n\r\n\t\tif (this.preset != this.type) {\r\n\t\t\tinstrumentObject[\"preset\"] = this.preset;\r\n\t\t}\r\n\r\n\t\tif (this.type != InstrumentType.drumset) {\r\n\t\t\tinstrumentObject[\"transition\"] = Config.transitions[this.transition].name;\r\n\t\t\tinstrumentObject[\"chord\"] = this.getChord().name;\r\n\t\t\tinstrumentObject[\"filterCutoffHz\"] = Math.round(Config.filterCutoffMaxHz * Math.pow(2.0, this.getFilterCutoffOctaves()));\r\n\t\t\tinstrumentObject[\"filterResonance\"] = Math.round(100 * this.filterResonance / (Config.filterResonanceRange - 1));\r\n\t\t\tinstrumentObject[\"filterEnvelope\"] = this.getFilterEnvelope().name;\r\n\t\t}\r\n\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\tinstrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\tinstrumentObject[\"spectrum\"] = [];\r\n\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\tinstrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.drumset) {\r\n\t\t\tinstrumentObject[\"drums\"] = [];\r\n\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\tspectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\r\n\t\t\t\t}\r\n\t\t\t\tinstrumentObject[\"drums\"][j] = {\r\n\t\t\t\t\t\"filterEnvelope\": this.getDrumsetEnvelope(j).name,\r\n\t\t\t\t\t\"spectrum\": spectrum,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.chip) {\r\n\t\t\tinstrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n\t\t\tinstrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.customChipWave) {\r\n\t\t\tinstrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n\t\t\tinstrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t\tinstrumentObject[\"customChipWave\"] = new Float64Array(64);\r\n\t\t\tinstrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\r\n\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\tinstrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\r\n\t\t\t\t// Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\r\n\t\t\t\t//instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\r\n\t\t\t}\r\n\r\n\t\t\tinstrumentObject[\"customChipWaveIntegral\"][64] = 0;\r\n\t\t} else if (this.type == InstrumentType.pwm) {\r\n\t\t\tinstrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n\t\t\tinstrumentObject[\"pulseEnvelope\"] = Config.envelopes[this.pulseEnvelope].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.harmonics) {\r\n\t\t\tinstrumentObject[\"interval\"] = Config.intervals[this.interval].name;\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t\tinstrumentObject[\"harmonics\"] = [];\r\n\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\tinstrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.fm) {\r\n\t\t\tconst operatorArray: Object[] = [];\r\n\t\t\tfor (const operator of this.operators) {\r\n\t\t\t\toperatorArray.push({\r\n\t\t\t\t\t\"frequency\": Config.operatorFrequencies[operator.frequency].name,\r\n\t\t\t\t\t\"amplitude\": operator.amplitude,\r\n\t\t\t\t\t\"envelope\": Config.envelopes[operator.envelope].name,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tif (this.vibrato != 5) {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n\t\t\t} else {\r\n\t\t\t\tinstrumentObject[\"vibrato\"] = \"custom\";\r\n\t\t\t}\r\n\t\t\tinstrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\r\n\t\t\tinstrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\r\n\t\t\tinstrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n\t\t\tinstrumentObject[\"feedbackEnvelope\"] = Config.envelopes[this.feedbackEnvelope].name;\r\n\t\t\tinstrumentObject[\"operators\"] = operatorArray;\r\n\t\t} else if (this.type == InstrumentType.mod) {\r\n\t\t\tinstrumentObject[\"modChannels\"] = [];\r\n\t\t\tinstrumentObject[\"modInstruments\"] = [];\r\n\t\t\tinstrumentObject[\"modSettings\"] = [];\r\n\t\t\tinstrumentObject[\"modStatuses\"] = [];\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tinstrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\r\n\t\t\t\tinstrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\r\n\t\t\t\tinstrumentObject[\"modSettings\"][mod] = this.modSettings[mod];\r\n\t\t\t\tinstrumentObject[\"modStatuses\"][mod] = this.modStatuses[mod];\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized instrument type\");\r\n\t\t}\r\n\t\treturn instrumentObject;\r\n\t}\r\n\r\n\tpublic fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean): void {\r\n\t\tif (instrumentObject == undefined) instrumentObject = {};\r\n\r\n\t\tlet type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\r\n\t\tif (type.valueOf() == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\r\n\t\tthis.setTypeAndReset(type, isNoiseChannel, isModChannel);\r\n\r\n\t\tif (instrumentObject[\"preset\"] != undefined) {\r\n\t\t\tthis.preset = instrumentObject[\"preset\"] >>> 0;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"volume\"] != undefined) {\r\n\t\t\tthis.volume = clamp(-Config.volumeRange / 2, Config.volumeRange / 2, instrumentObject[\"volume\"] | 0);\r\n\t\t} else {\r\n\t\t\tthis.volume = 0;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"pan\"] != undefined) {\r\n\t\t\tthis.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\r\n\t\t} else {\r\n\t\t\tthis.pan = Config.panCenter;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"panDelay\"] != undefined) {\r\n\t\t\tthis.panDelay = (instrumentObject[\"panDelay\"] | 0);\r\n\t\t} else {\r\n\t\t\tthis.panDelay = 10;\r\n\t\t}\r\n\r\n\t\tif (instrumentObject[\"detune\"] != undefined) {\r\n\t\t\tthis.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.detune = 0;\r\n\t\t}\r\n\r\n\t\tconst oldTransitionNames: Dictionary<number> = { \"binary\": 0, \"sudden\": 1, \"smooth\": 2 };\r\n\t\tconst transitionObject = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so try that too.\r\n\t\tthis.transition = oldTransitionNames[transitionObject] != undefined ? oldTransitionNames[transitionObject] : Config.transitions.findIndex(transition => transition.name == transitionObject);\r\n\t\tif (this.transition == -1) this.transition = 1;\r\n\r\n\t\tthis.effects = Config.effectsNames.indexOf(instrumentObject[\"effects\"]);\r\n\t\tif (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\r\n\r\n\t\tif (instrumentObject[\"filterCutoffHz\"] != undefined) {\r\n\t\t\tthis.filterCutoff = clamp(0, Config.filterCutoffRange, Math.round((Config.filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / Config.filterCutoffMaxHz) / Math.LN2));\r\n\t\t} else {\r\n\t\t\tthis.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\r\n\t\t}\r\n\t\tif (instrumentObject[\"filterResonance\"] != undefined) {\r\n\t\t\tthis.filterResonance = clamp(0, Config.filterResonanceRange, Math.round((Config.filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.filterResonance = 0;\r\n\t\t}\r\n\t\tthis.filterEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"filterEnvelope\"]);\r\n\t\tif (this.filterEnvelope == -1) this.filterEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\r\n\t\tif (instrumentObject[\"filter\"] != undefined) {\r\n\t\t\tconst legacyToCutoff: number[] = [20, 12, 6, 0, 16, 10, 4];\r\n\t\t\tconst legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n\t\t\tconst filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n\t\t\tconst oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\r\n\t\t\tlet legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\r\n\t\t\tif (legacyFilter == -1) legacyFilter = 0;\r\n\t\t\tthis.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\tthis.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\tthis.filterResonance = 0;\r\n\t\t}\r\n\r\n\t\tconst legacyEffectNames: ReadonlyArray<string> = [\"none\", \"vibrato light\", \"vibrato delayed\", \"vibrato heavy\"];\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\tthis.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n\t\t\tif (this.chipNoise == -1) this.chipNoise = 1;\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 2;\r\n\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\tif (instrumentObject[\"spectrum\"] != undefined) {\r\n\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\tthis.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 0;\r\n\r\n\t\t} else if (this.type == InstrumentType.drumset) {\r\n\t\t\tif (instrumentObject[\"drums\"] != undefined) {\r\n\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\tconst drum: any = instrumentObject[\"drums\"][j];\r\n\t\t\t\t\tif (drum == undefined) continue;\r\n\r\n\t\t\t\t\tif (drum[\"filterEnvelope\"] != undefined) {\r\n\t\t\t\t\t\tthis.drumsetEnvelopes[j] = Config.envelopes.findIndex(envelope => envelope.name == drum[\"filterEnvelope\"]);\r\n\t\t\t\t\t\tif (this.drumsetEnvelopes[j] == -1) this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (drum[\"spectrum\"] != undefined) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\tthis.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.harmonics) {\r\n\t\t\tif (instrumentObject[\"harmonics\"] != undefined) {\r\n\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\tthis.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"interval\"] != undefined) {\r\n\t\t\t\tthis.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 0;\r\n\t\t} else if (this.type == InstrumentType.pwm) {\r\n\t\t\tif (instrumentObject[\"pulseWidth\"] != undefined) {\r\n\t\t\t\tthis.pulseWidth = clamp(0, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\r\n\t\t\t} else {\r\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"pulseEnvelope\"] != undefined) {\r\n\t\t\t\tthis.pulseEnvelope = Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"pulseEnvelope\"]);\r\n\t\t\t\tif (this.pulseEnvelope == -1) this.pulseEnvelope = Config.envelopes.dictionary[\"steady\"].index;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 0;\r\n\t\t} else if (this.type == InstrumentType.chip) {\r\n\t\t\tconst legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\r\n\t\t\tthis.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n\t\t\tif (this.chipWave == -1) this.chipWave = 1;\r\n\r\n\t\t\tif (instrumentObject[\"interval\"] != undefined) {\r\n\t\t\t\tthis.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t} else if (instrumentObject[\"chorus\"] != undefined) {\r\n\t\t\t\tconst legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n\t\t\t\tthis.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t} else if (instrumentObject[\"effect\"] != undefined) {\r\n\t\t\t\tthis.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 2;\r\n\r\n\t\t\t// The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n\t\t\tif (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.chord = 3;\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.fm) {\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t} else if (instrumentObject[\"effect\"] != undefined) {\r\n\t\t\t\tthis.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 3;\r\n\r\n\t\t\tthis.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\r\n\t\t\tif (this.algorithm == -1) this.algorithm = 0;\r\n\t\t\tthis.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\r\n\t\t\tif (this.feedbackType == -1) this.feedbackType = 0;\r\n\t\t\tif (instrumentObject[\"feedbackAmplitude\"] != undefined) {\r\n\t\t\t\tthis.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\r\n\t\t\t} else {\r\n\t\t\t\tthis.feedbackAmplitude = 0;\r\n\t\t\t}\r\n\r\n\t\t\tconst legacyEnvelopeNames: Dictionary<number> = { \"pluck 1\": 6, \"pluck 2\": 7, \"pluck 3\": 8 };\r\n\t\t\tthis.feedbackEnvelope = legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] != undefined ? legacyEnvelopeNames[instrumentObject[\"feedbackEnvelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == instrumentObject[\"feedbackEnvelope\"]);\r\n\t\t\tif (this.feedbackEnvelope == -1) this.feedbackEnvelope = 0;\r\n\r\n\t\t\tfor (let j: number = 0; j < Config.operatorCount; j++) {\r\n\t\t\t\tconst operator: Operator = this.operators[j];\r\n\t\t\t\tlet operatorObject: any = undefined;\r\n\t\t\t\tif (instrumentObject[\"operators\"]) operatorObject = instrumentObject[\"operators\"][j];\r\n\t\t\t\tif (operatorObject == undefined) operatorObject = {};\r\n\r\n\t\t\t\toperator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\r\n\t\t\t\tif (operator.frequency == -1) operator.frequency = 0;\r\n\t\t\t\tif (operatorObject[\"amplitude\"] != undefined) {\r\n\t\t\t\t\toperator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\toperator.amplitude = 0;\r\n\t\t\t\t}\r\n\t\t\t\toperator.envelope = legacyEnvelopeNames[operatorObject[\"envelope\"]] != undefined ? legacyEnvelopeNames[operatorObject[\"envelope\"]] : Config.envelopes.findIndex(envelope => envelope.name == operatorObject[\"envelope\"]);\r\n\t\t\t\tif (operator.envelope == -1) operator.envelope = 0;\r\n\t\t\t}\r\n\t\t} else if (this.type == InstrumentType.customChipWave) {\r\n\t\t\tif (instrumentObject[\"interval\"] != undefined) {\r\n\t\t\t\tthis.interval = Config.intervals.findIndex(interval => interval.name == instrumentObject[\"interval\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t} else if (instrumentObject[\"chorus\"] != undefined) {\r\n\t\t\t\tconst legacyChorusNames: Dictionary<number> = { \"fifths\": 5, \"octaves\": 6 };\r\n\t\t\t\tthis.interval = legacyChorusNames[instrumentObject[\"chorus\"]] != undefined ? legacyChorusNames[instrumentObject[\"chorus\"]] : Config.intervals.findIndex(interval => interval.name == instrumentObject[\"chorus\"]);\r\n\t\t\t\tif (this.interval == -1) this.interval = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"vibrato\"] != undefined) {\r\n\t\t\t\tthis.vibrato = Config.vibratos.findIndex(vibrato => vibrato.name == instrumentObject[\"vibrato\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = Config.vibratos.length; //custom\r\n\t\t\t\tif (this.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\tthis.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n\t\t\t\t\tthis.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n\t\t\t\t\tthis.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n\t\t\t\t\tthis.vibratoType = instrumentObject[\"vibratoType\"];\r\n\t\t\t\t}\r\n\t\t\t\telse { // Set defaults for the vibrato profile\r\n\t\t\t\t\tthis.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n\t\t\t\t\tthis.vibratoDelay = Config.vibratos[this.vibrato].delayParts;\r\n\t\t\t\t\tthis.vibratoSpeed = 10; // default;\r\n\t\t\t\t\tthis.vibratoType = Config.vibratos[this.vibrato].type;\r\n\t\t\t\t}\r\n\t\t\t} else if (instrumentObject[\"effect\"] != undefined) {\r\n\t\t\t\tthis.vibrato = legacyEffectNames.indexOf(instrumentObject[\"effect\"]);\r\n\t\t\t\tif (this.vibrato == -1) this.vibrato = 0;\r\n\t\t\t}\r\n\r\n\t\t\tthis.chord = Config.chords.findIndex(chord => chord.name == instrumentObject[\"chord\"]);\r\n\t\t\tif (this.chord == -1) this.chord = 2;\r\n\r\n\t\t\t// The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n\t\t\tif (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n\t\t\t\tthis.interval = 2;\r\n\t\t\t\tthis.chord = 3;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"customChipWave\"]) {\r\n\r\n\t\t\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t\t\tthis.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tlet sum: number = 0.0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tsum += this.customChipWave[i];\r\n\t\t\t\t}\r\n\t\t\t\tconst average: number = sum / this.customChipWave.length;\r\n\r\n\t\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\t\tlet cumulative: number = 0;\r\n\t\t\t\tlet wavePrev: number = 0;\r\n\t\t\t\tfor (let i: number = 0; i < this.customChipWave.length; i++) {\r\n\t\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\t\twavePrev = this.customChipWave[i] - average;\r\n\t\t\t\t\tthis.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 65th, last sample is for anti-aliasing\r\n\t\t\t\tthis.customChipWaveIntegral[64] = 0.0;\r\n\t\t\t}\r\n\r\n\t\t} else if (this.type == InstrumentType.mod) {\r\n\t\t\tif (instrumentObject[\"modChannels\"] != undefined) {\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tthis.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\r\n\t\t\t\t\tthis.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\r\n\t\t\t\t\tthis.modSettings[mod] = instrumentObject[\"modSettings\"][mod];\r\n\t\t\t\t\tthis.modStatuses[mod] = instrumentObject[\"modStatuses\"][mod];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized instrument type.\");\r\n\t\t}\r\n\r\n\t\tif (this.type != InstrumentType.mod) {\r\n\t\t\t// Arpeggio speed\r\n\t\t\tif (this.chord == 2 && instrumentObject[\"arpeggioSpeed\"] != undefined) {\r\n\t\t\t\tthis.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\r\n\t\t\t\tthis.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.fastTwoNoteArp = useFastTwoNoteArp;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"tieNoteTransition\"] != undefined) {\r\n\t\t\t\tthis.tieNoteTransition = instrumentObject[\"tieNoteTransition\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.tieNoteTransition = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentObject[\"clicklessTransition\"] != undefined) {\r\n\t\t\t\tthis.clicklessTransition = instrumentObject[\"clicklessTransition\"];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.clicklessTransition = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static frequencyFromPitch(pitch: number): number {\r\n\t\treturn Config.centerFrequency * Math.pow(2.0, (pitch - 69.0) / Config.pitchesPerOctave);\r\n\t}\r\n\r\n\tpublic static drumsetIndexReferenceDelta(index: number): number {\r\n\t\treturn Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\r\n\t}\r\n\r\n\tprivate static _drumsetIndexToSpectrumOctave(index: number) {\r\n\t\treturn 15 + Math.log(Instrument.drumsetIndexReferenceDelta(index)) / Math.LN2;\r\n\t}\r\n\r\n\tpublic warmUp(): void {\r\n\t\tthis.LFOtime = 0;\r\n\t\tthis.nextLFOtime = 0;\r\n\t\tthis.arpTime = 0;\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\tgetDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n\t\t} else if (this.type == InstrumentType.harmonics) {\r\n\t\t\tthis.harmonicsWave.getCustomWave();\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\tthis.spectrumWave.getCustomWave(8);\r\n\t\t} else if (this.type == InstrumentType.drumset) {\r\n\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\tthis.drumsetSpectrumWaves[i].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getDrumWave(): Float32Array {\r\n\t\tif (this.type == InstrumentType.noise) {\r\n\t\t\treturn getDrumWave(this.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n\t\t} else if (this.type == InstrumentType.spectrum) {\r\n\t\t\treturn this.spectrumWave.getCustomWave(8);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unhandled instrument type in getDrumWave\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getDrumsetWave(pitch: number): Float32Array {\r\n\t\tif (this.type == InstrumentType.drumset) {\r\n\t\t\treturn this.drumsetSpectrumWaves[pitch].getCustomWave(Instrument._drumsetIndexToSpectrumOctave(pitch));\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unhandled instrument type in getDrumWave\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getTransition(): Transition {\r\n\t\treturn this.type == InstrumentType.drumset ? Config.transitions.dictionary[\"hard fade\"] :\r\n\t\t\tthis.type == InstrumentType.mod ? Config.transitions.dictionary[\"seamless\"] : Config.transitions[this.transition];\r\n\t}\r\n\tpublic getChord(): Chord {\r\n\t\treturn this.type == InstrumentType.drumset ? Config.chords.dictionary[\"harmony\"] : Config.chords[this.chord];\r\n\t}\r\n\tpublic getFilterCutoffOctaves(): number {\r\n\t\treturn this.type == InstrumentType.drumset ? 0 : (this.filterCutoff - (Config.filterCutoffRange - 1)) * 0.5;\r\n\t}\r\n\tpublic getFilterIsFirstOrder(): boolean {\r\n\t\treturn this.type == InstrumentType.drumset ? false : this.filterResonance == 0;\r\n\t}\r\n\tpublic getFilterResonance(): number {\r\n\t\treturn this.type == InstrumentType.drumset ? 1 : this.filterResonance;\r\n\t}\r\n\tpublic getFilterEnvelope(): Envelope {\r\n\t\tif (this.type == InstrumentType.drumset) throw new Error(\"Can't getFilterEnvelope() for drumset.\");\r\n\t\treturn Config.envelopes[this.filterEnvelope];\r\n\t}\r\n\tpublic getDrumsetEnvelope(pitch: number): Envelope {\r\n\t\tif (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\r\n\t\treturn Config.envelopes[this.drumsetEnvelopes[pitch]];\r\n\t}\r\n}\r\n\r\nexport enum ModStatus {\r\n\tmsForPitch = 0,\r\n\tmsForNoise = 1,\r\n\tmsForSong = 2,\r\n\tmsNone = 3,\r\n}\r\n\r\nexport enum ModSetting {\r\n\tmstNone = 0,\r\n\tmstSongVolume = 1,\r\n\tmstTempo = 2,\r\n\tmstReverb = 3,\r\n\tmstNextBar = 4,\r\n\tmstInsVolume = 5,\r\n\tmstPan = 6,\r\n\tmstFilterCut = 7,\r\n\tmstFilterPeak = 8,\r\n\tmstFMSlider1 = 9,\r\n\tmstFMSlider2 = 10,\r\n\tmstFMSlider3 = 11,\r\n\tmstFMSlider4 = 12,\r\n\tmstFMFeedback = 13,\r\n\tmstPulseWidth = 14,\r\n\tmstDetune = 15,\r\n\tmstVibratoDepth = 16,\r\n\tmstSongDetune = 17,\r\n\tmstVibratoSpeed = 18,\r\n\tmstVibratoDelay = 19,\r\n\tmstArpeggioSpeed = 20,\r\n\tmstPanDelay = 21,\r\n\tmstResetArpeggio = 22,\r\n\tmstMaxValue = 23,\r\n}\r\n\r\nexport class Channel {\r\n\tpublic octave: number = 0;\r\n\tpublic readonly instruments: Instrument[] = [];\r\n\tpublic readonly patterns: Pattern[] = [];\r\n\tpublic readonly bars: number[] = [];\r\n\tpublic muted: boolean = false;\r\n\tpublic name: string = \"\";\r\n}\r\n\r\nexport class Song {\r\n\tprivate static readonly _format: string = \"BeepBox\";\r\n\tprivate static readonly _oldestBeepboxVersion: number = 2;\r\n\tprivate static readonly _latestBeepboxVersion: number = 8;\r\n\tprivate static readonly _oldestJummBoxVersion: number = 1;\r\n\tprivate static readonly _latestJummBoxVersion: number = 4;\r\n\t// One-character variant detection at the start of URL to distinguish variants such as JummBox.\r\n\tprivate static readonly _variant = 0x6A; //\"j\" ~ jummbox\r\n\r\n\tpublic title: string;\r\n\tpublic scale: number;\r\n\tpublic key: number;\r\n\tpublic tempo: number;\r\n\tpublic reverb: number;\r\n\tpublic beatsPerBar: number;\r\n\tpublic barCount: number;\r\n\tpublic patternsPerChannel: number;\r\n\tpublic rhythm: number;\r\n\tpublic instrumentsPerChannel: number;\r\n\tpublic loopStart: number;\r\n\tpublic loopLength: number;\r\n\tpublic pitchChannelCount: number;\r\n\tpublic noiseChannelCount: number;\r\n\tpublic modChannelCount: number;\r\n\tpublic readonly channels: Channel[] = [];\r\n\tpublic limitDecay: number = 4.0;\r\n\tpublic limitRise: number = 4000.0;\r\n\tpublic compressionThreshold: number = 1.0;\r\n\tpublic limitThreshold: number = 1.0;\r\n\tpublic compressionRatio: number = 1.0;\r\n\tpublic limitRatio: number = 1.0;\r\n\tpublic masterGain: number = 1.0;\r\n\tpublic inVolumeCap: number = 0.0;\r\n\tpublic outVolumeCap: number = 0.0;\r\n\r\n\t// Maximum value possible for the mod (total number of possible positions)\r\n\tpublic mstMaxVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n\t\t[ModSetting.mstNone, 6],\r\n\t\t[ModSetting.mstSongVolume, 100],\r\n\t\t[ModSetting.mstTempo, Config.tempoMax - Config.tempoMin],\r\n\t\t[ModSetting.mstReverb, Config.reverbRange - 1],\r\n\t\t[ModSetting.mstNextBar, 1],\r\n\t\t[ModSetting.mstInsVolume, Config.volumeRange],\r\n\t\t[ModSetting.mstPan, Config.panMax],\r\n\t\t[ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n\t\t[ModSetting.mstFilterPeak, Config.filterResonanceRange - 1],\r\n\t\t[ModSetting.mstFMSlider1, 15],\r\n\t\t[ModSetting.mstFMSlider2, 15],\r\n\t\t[ModSetting.mstFMSlider3, 15],\r\n\t\t[ModSetting.mstFMSlider4, 15],\r\n\t\t[ModSetting.mstFMFeedback, 15],\r\n\t\t[ModSetting.mstPulseWidth, Config.pulseWidthRange],\r\n\t\t[ModSetting.mstDetune, Config.detuneMax - Config.detuneMin],\r\n\t\t[ModSetting.mstVibratoDepth, 50],\r\n\t\t[ModSetting.mstSongDetune, Config.songDetuneMax - Config.songDetuneMin],\r\n\t\t[ModSetting.mstVibratoSpeed, 30],\r\n\t\t[ModSetting.mstVibratoDelay, 50],\r\n\t\t[ModSetting.mstArpeggioSpeed, 50],\r\n\t\t[ModSetting.mstPanDelay, 20],\r\n\t\t[ModSetting.mstResetArpeggio, 1],\r\n\t\t[ModSetting.mstMaxValue, 6],\r\n\t]\r\n\t);\r\n\r\n\t// When creating a new note, this is the value to set a mod note to (generally the most \"neutral\" value possible)\r\n\tpublic mstNewNoteVols: Map<ModSetting, number> = new Map<ModSetting, number>([\r\n\t\t[ModSetting.mstNone, 6],\r\n\t\t[ModSetting.mstSongVolume, 100],\r\n\t\t[ModSetting.mstTempo, Math.ceil((Config.tempoMax - Config.tempoMin) / 2)],\r\n\t\t[ModSetting.mstReverb, 0],\r\n\t\t[ModSetting.mstNextBar, 1],\r\n\t\t[ModSetting.mstInsVolume, Math.ceil(Config.volumeRange / 2)],\r\n\t\t[ModSetting.mstPan, Math.ceil(Config.panMax / 2)],\r\n\t\t[ModSetting.mstFilterCut, Config.filterCutoffRange - 1],\r\n\t\t[ModSetting.mstFilterPeak, 0],\r\n\t\t[ModSetting.mstFMSlider1, 15],\r\n\t\t[ModSetting.mstFMSlider2, 15],\r\n\t\t[ModSetting.mstFMSlider3, 15],\r\n\t\t[ModSetting.mstFMSlider4, 15],\r\n\t\t[ModSetting.mstFMFeedback, 15],\r\n\t\t[ModSetting.mstPulseWidth, Math.ceil(Config.pulseWidthRange)],\r\n\t\t[ModSetting.mstDetune, Math.ceil((Config.detuneMax - Config.detuneMin) / 2)],\r\n\t\t[ModSetting.mstVibratoDepth, 0],\r\n\t\t[ModSetting.mstSongDetune, Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2)],\r\n\t\t[ModSetting.mstVibratoSpeed, 0],\r\n\t\t[ModSetting.mstVibratoDelay, 0],\r\n\t\t[ModSetting.mstArpeggioSpeed, 10],\r\n\t\t[ModSetting.mstPanDelay, 10],\r\n\t\t[ModSetting.mstResetArpeggio, 1],\r\n\t\t[ModSetting.mstMaxValue, 6],\r\n\t])\r\n\r\n\tconstructor(string?: string) {\r\n\t\tif (string != undefined) {\r\n\t\t\tthis.fromBase64String(string);\r\n\t\t} else {\r\n\t\t\tthis.initToDefault(true);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic modValueToReal(value: number, setting: ModSetting): number {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\tvalue += Config.tempoMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\tvalue -= Config.volumeRange / 2.0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\tvalue += Config.detuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\tvalue += Config.songDetuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\tcase ModSetting.mstNone:\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\tpublic isSettingForSong(setting: ModSetting): boolean {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\treturn true;\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic realToModValue(value: number, setting: ModSetting): number {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\tvalue -= Config.tempoMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\tvalue += Config.volumeRange / 2.0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\tvalue -= Config.detuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\tvalue -= Config.songDetuneMin;\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\tcase ModSetting.mstNone:\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn value;\r\n\t}\r\n\r\n\t// Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\r\n\tpublic getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n\t\tif (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n\t\t\treturn 6;\r\n\t\telse {\r\n\t\t\t// Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n\t\t\tmodCount = Config.modCount - modCount - 1;\r\n\r\n\t\t\tlet cap: number | undefined = this.mstNewNoteVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n\r\n\t\t\t// For tempo, actually use user defined tempo\r\n\t\t\tif (this.channels[modChannel].instruments[modInstrument].modSettings[modCount] == ModSetting.mstTempo) {\r\n\t\t\t\tcap = this.realToModValue(this.tempo, ModSetting.mstTempo);\r\n\t\t\t}\r\n\r\n\t\t\tif (cap != undefined)\r\n\t\t\t\treturn cap;\r\n\t\t\telse\r\n\t\t\t\treturn 6;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n\t\tif (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n\t\t\treturn 6;\r\n\t\telse {\r\n\t\t\t// Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n\t\t\tmodCount = Config.modCount - modCount - 1;\r\n\r\n\t\t\tlet cap: number | undefined = this.mstMaxVols.get(this.channels[modChannel].instruments[modInstrument].modSettings[modCount]);\r\n\t\t\tif (cap != undefined)\r\n\t\t\t\treturn cap;\r\n\t\t\telse\r\n\t\t\t\treturn 6;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getVolumeCapForSetting = (isMod: boolean, modSetting: ModSetting): number => {\r\n\t\tif (!isMod)\r\n\t\t\treturn 6;\r\n\t\telse {\r\n\t\t\tlet cap: number | undefined = this.mstMaxVols.get(modSetting);\r\n\t\t\tif (cap != undefined)\r\n\t\t\t\treturn cap;\r\n\t\t\telse\r\n\t\t\t\treturn 6;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getChannelCount(): number {\r\n\t\treturn this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\r\n\t}\r\n\r\n\tpublic getChannelIsNoise(channel: number): boolean {\r\n\t\treturn (channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount);\r\n\t}\r\n\r\n\tpublic getChannelIsMod(channel: number): boolean {\r\n\t\treturn (channel >= this.pitchChannelCount + this.noiseChannelCount);\r\n\t}\r\n\r\n\tpublic initToDefault(andResetChannels: boolean = true): void {\r\n\t\tthis.scale = 0;\r\n\t\tthis.key = 0;\r\n\t\tthis.loopStart = 0;\r\n\t\tthis.loopLength = 4;\r\n\t\tthis.tempo = 150;\r\n\t\tthis.reverb = 0;\r\n\t\tthis.beatsPerBar = 8;\r\n\t\tthis.barCount = 16;\r\n\t\tthis.patternsPerChannel = 8;\r\n\t\tthis.rhythm = 1;\r\n\t\tthis.instrumentsPerChannel = 1;\r\n\r\n\t\tthis.title = \"Unnamed\";\r\n\t\tdocument.title = EditorConfig.versionDisplayName;\r\n\r\n\t\tif (andResetChannels) {\r\n\t\t\tthis.pitchChannelCount = 3;\r\n\t\t\tthis.noiseChannelCount = 1;\r\n\t\t\tthis.modChannelCount = 0;\r\n\t\t\tfor (let channelIndex = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n\t\t\t\tif (this.channels.length <= channelIndex) {\r\n\t\t\t\t\tthis.channels[channelIndex] = new Channel();\r\n\t\t\t\t}\r\n\t\t\t\tconst channel: Channel = this.channels[channelIndex];\r\n\t\t\t\tchannel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0, 0, ...]; Descending octaves with drums at zero in last channel and onward.\r\n\r\n\t\t\t\tfor (let pattern = 0; pattern < this.patternsPerChannel; pattern++) {\r\n\t\t\t\t\tif (channel.patterns.length <= pattern) {\r\n\t\t\t\t\t\tchannel.patterns[pattern] = new Pattern();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchannel.patterns[pattern].reset();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchannel.patterns.length = this.patternsPerChannel;\r\n\r\n\t\t\t\tconst isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\tconst isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\tfor (let instrument = 0; instrument < this.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\tif (channel.instruments.length <= instrument) {\r\n\t\t\t\t\t\tchannel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchannel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.length = this.instrumentsPerChannel;\r\n\r\n\t\t\t\tfor (let bar = 0; bar < this.barCount; bar++) {\r\n\t\t\t\t\tchannel.bars[bar] = bar < 4 ? 1 : 0;\r\n\t\t\t\t}\r\n\t\t\t\tchannel.bars.length = this.barCount;\r\n\t\t\t}\r\n\t\t\tthis.channels.length = this.getChannelCount();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toBase64String(): string {\r\n\t\tlet bits: BitFieldWriter;\r\n\t\tlet buffer: number[] = [];\r\n\r\n\t\tbuffer.push(Song._variant);\r\n\t\tbuffer.push(base64IntToCharCode[Song._latestJummBoxVersion]);\r\n\r\n\t\tbuffer.push(SongTagCode.songTitle);\r\n\r\n\t\t// Length of the song name string\r\n\t\tvar encodedSongTitle: string = encodeURIComponent(this.title);\r\n\t\tbuffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\r\n\r\n\t\t// Actual encoded string follows\r\n\t\tfor (let i: number = 0; i < encodedSongTitle.length; i++) {\r\n\t\t\tbuffer.push(encodedSongTitle.charCodeAt(i));\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\r\n\t\tbuffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\r\n\t\tbuffer.push(SongTagCode.key, base64IntToCharCode[this.key]);\r\n\t\tbuffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\r\n\t\tbuffer.push(SongTagCode.reverb, base64IntToCharCode[this.reverb]);\r\n\t\tbuffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\r\n\t\tbuffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\r\n\t\tbuffer.push(SongTagCode.instrumentCount, base64IntToCharCode[this.instrumentsPerChannel - 1]);\r\n\t\tbuffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\r\n\r\n\t\t// Push limiter settings, but only if they aren't the default!\r\n\t\tbuffer.push(SongTagCode.limiterSettings);\r\n\t\tif (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\r\n\t\t\tbuffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\r\n\t\t\tbuffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\r\n\t\t}\r\n\t\telse {\r\n\t\t\tbuffer.push(base64IntToCharCode[0x3f]); // Not using limiter\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.channelNames);\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t// Length of the channel name string\r\n\t\t\tvar encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\r\n\t\t\tbuffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\r\n\r\n\t\t\t// Actual encoded string follows\r\n\t\t\tfor (let i: number = 0; i < encodedChannelName.length; i++) {\r\n\t\t\t\tbuffer.push(encodedChannelName.charCodeAt(i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.channelOctave);\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tbuffer.push(base64IntToCharCode[this.channels[channel].octave]);\r\n\t\t}\r\n\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\tbuffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\r\n\t\t\t\tbuffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\r\n\t\t\t\tbuffer.push(SongTagCode.panning, base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\r\n\t\t\t\tbuffer.push(base64IntToCharCode[instrument.panDelay]); // Piggybacks after panning to reduce song tag code usage :P\r\n\t\t\t\tbuffer.push(SongTagCode.detune, base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3f]);\r\n\t\t\t\tbuffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\r\n\t\t\t\tbuffer.push(SongTagCode.effects, base64IntToCharCode[instrument.effects]);\r\n\r\n\r\n\t\t\t\tif (instrument.type != InstrumentType.drumset) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.transition, base64IntToCharCode[instrument.transition]);\r\n\t\t\t\t\t// Transition info follows transition song tag\r\n\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.tieNoteTransition]);\r\n\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterCutoff, base64IntToCharCode[instrument.filterCutoff]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterResonance, base64IntToCharCode[instrument.filterResonance]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterEnvelope, base64IntToCharCode[instrument.filterEnvelope]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.chord, base64IntToCharCode[instrument.chord]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.feedbackEnvelope, base64IntToCharCode[instrument.feedbackEnvelope]);\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.operatorFrequencies);\r\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.operatorAmplitudes);\r\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.operatorEnvelopes);\r\n\t\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.operators[o].envelope]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.customChipWave);\r\n\t\t\t\t\t// Push custom wave values\r\n\t\t\t\t\tfor (let j: number = 0; j < 64; j++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.spectrum);\r\n\t\t\t\t\tconst spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tspectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tspectrumBits.encodeBase64(buffer);\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.filterEnvelope);\r\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.spectrum);\r\n\t\t\t\t\tconst spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\tspectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tspectrumBits.encodeBase64(buffer);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\r\n\t\t\t\t\tbuffer.push(SongTagCode.harmonics);\r\n\t\t\t\t\tconst harmonicsBits: BitFieldWriter = new BitFieldWriter();\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\tharmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tharmonicsBits.encodeBase64(buffer);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.vibrato, base64IntToCharCode[instrument.vibrato]);\r\n\t\t\t\t\t// Custom vibrato settings\r\n\t\t\t\t\tif (instrument.vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoDelay]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Custom arpeggio speed... only if the instrument arpeggiates.\r\n\t\t\t\t\tif (instrument.chord == 2) {\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.arpeggioSpeed, base64IntToCharCode[instrument.arpeggioSpeed]);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth], base64IntToCharCode[instrument.pulseEnvelope]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.interval, base64IntToCharCode[instrument.interval]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\t\t\t// Handled down below. Could be moved, but meh.\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthrow new Error(\"Unknown instrument type.\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbuffer.push(SongTagCode.bars);\r\n\t\tbits = new BitFieldWriter();\r\n\t\tlet neededBits: number = 0;\r\n\t\twhile ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) for (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\tbits.write(neededBits, this.channels[channel].bars[i]);\r\n\t\t}\r\n\t\tbits.encodeBase64(buffer);\r\n\r\n\t\tbuffer.push(SongTagCode.patterns);\r\n\t\tbits = new BitFieldWriter();\r\n\t\tconst shapeBits: BitFieldWriter = new BitFieldWriter();\r\n\t\tlet neededInstrumentBits: number = 0;\r\n\t\twhile ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\r\n\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n\t\t\tconst isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n\t\t\t// Some info about modulator settings immediately follows in mod channels.\r\n\t\t\tif (isModChannel) {\r\n\t\t\t\tfor (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n\t\t\t\t\tlet instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\tconst modStatus: ModStatus = instrument.modStatuses[mod];\r\n\t\t\t\t\t\tconst modChannel: number = instrument.modChannels[mod];\r\n\t\t\t\t\t\tconst modInstrument: number = instrument.modInstruments[mod];\r\n\t\t\t\t\t\tconst modSetting: number = instrument.modSettings[mod];\r\n\r\n\t\t\t\t\t\tbits.write(2, modStatus);\r\n\r\n\t\t\t\t\t\t// Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) {\r\n\t\t\t\t\t\t\tbits.write(8, modChannel);\r\n\t\t\t\t\t\t\tbits.write(neededInstrumentBits, modInstrument);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Mod setting is only used if the status isn't \"none\".\r\n\t\t\t\t\t\tif (modStatus != ModStatus.msNone) {\r\n\t\t\t\t\t\t\tbits.write(6, modSetting);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * Config.pitchesPerOctave;\r\n\t\t\tlet lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : Config.pitchesPerOctave) + octaveOffset;\r\n\t\t\tconst recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n\t\t\tconst recentShapes: any[] = [];\r\n\r\n\t\t\tfor (let i: number = 0; i < recentPitches.length; i++) {\r\n\t\t\t\trecentPitches[i] += octaveOffset;\r\n\t\t\t}\r\n\t\t\tfor (const pattern of this.channels[channel].patterns) {\r\n\t\t\t\tbits.write(neededInstrumentBits, pattern.instrument);\r\n\r\n\t\t\t\tif (pattern.notes.length > 0) {\r\n\t\t\t\t\tbits.write(1, 1);\r\n\r\n\t\t\t\t\tlet curPart: number = 0;\r\n\t\t\t\t\tfor (const note of pattern.notes) {\r\n\r\n\t\t\t\t\t\t// For mod channels, a negative offset may be necessary.\r\n\t\t\t\t\t\tif (note.start < curPart && isModChannel) {\r\n\t\t\t\t\t\t\tbits.write(2, 0); // rest, then...\r\n\t\t\t\t\t\t\tbits.write(1, 1); // negative offset\r\n\t\t\t\t\t\t\tbits.writePartDuration(curPart - note.start);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (note.start > curPart) {\r\n\t\t\t\t\t\t\tbits.write(2, 0); // rest, then...\r\n\t\t\t\t\t\t\tif (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\r\n\t\t\t\t\t\t\tbits.writePartDuration(note.start - curPart);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tshapeBits.clear();\r\n\r\n\t\t\t\t\t\t// Old format was:\r\n\t\t\t\t\t\t// 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\r\n\t\t\t\t\t\t// New format is:\r\n\t\t\t\t\t\t//\t  0: 1 pitch\r\n\t\t\t\t\t\t// 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n\t\t\t\t\t\tif (note.pitches.length == 1) {\r\n\t\t\t\t\t\t\tshapeBits.write(1, 0);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tshapeBits.write(1, 1);\r\n\t\t\t\t\t\t\tshapeBits.write(3, note.pitches.length - 2);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tshapeBits.writePinCount(note.pins.length - 1);\r\n\r\n\t\t\t\t\t\tif (!isModChannel) {\r\n\t\t\t\t\t\t\tshapeBits.write(3, note.pins[0].volume); // volume\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tshapeBits.write(9, note.pins[0].volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet shapePart: number = 0;\r\n\t\t\t\t\t\tlet startPitch: number = note.pitches[0];\r\n\t\t\t\t\t\tlet currentPitch: number = startPitch;\r\n\t\t\t\t\t\tconst pitchBends: number[] = [];\r\n\t\t\t\t\t\tfor (let i: number = 1; i < note.pins.length; i++) {\r\n\t\t\t\t\t\t\tconst pin: NotePin = note.pins[i];\r\n\t\t\t\t\t\t\tconst nextPitch: number = startPitch + pin.interval;\r\n\t\t\t\t\t\t\tif (currentPitch != nextPitch) {\r\n\t\t\t\t\t\t\t\tshapeBits.write(1, 1);\r\n\t\t\t\t\t\t\t\tpitchBends.push(nextPitch);\r\n\t\t\t\t\t\t\t\tcurrentPitch = nextPitch;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tshapeBits.write(1, 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tshapeBits.writePartDuration(pin.time - shapePart);\r\n\t\t\t\t\t\t\tshapePart = pin.time;\r\n\r\n\t\t\t\t\t\t\tif (!isModChannel) {\r\n\t\t\t\t\t\t\t\tshapeBits.write(3, pin.volume); // volume\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tshapeBits.write(9, pin.volume); // Modulator value. 9 bits for now = 512 max mod value?\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\r\n\t\t\t\t\t\tconst shapeIndex: number = recentShapes.indexOf(shapeString);\r\n\t\t\t\t\t\tif (shapeIndex == -1) {\r\n\t\t\t\t\t\t\tbits.write(2, 1); // new shape\r\n\t\t\t\t\t\t\tbits.concat(shapeBits);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbits.write(1, 1); // old shape\r\n\t\t\t\t\t\t\tbits.writeLongTail(0, 0, shapeIndex);\r\n\t\t\t\t\t\t\trecentShapes.splice(shapeIndex, 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trecentShapes.unshift(shapeString);\r\n\t\t\t\t\t\tif (recentShapes.length > 10) recentShapes.pop();\r\n\r\n\t\t\t\t\t\tconst allPitches: number[] = note.pitches.concat(pitchBends);\r\n\t\t\t\t\t\tfor (let i: number = 0; i < allPitches.length; i++) {\r\n\t\t\t\t\t\t\tconst pitch: number = allPitches[i];\r\n\t\t\t\t\t\t\tconst pitchIndex: number = recentPitches.indexOf(pitch);\r\n\t\t\t\t\t\t\tif (pitchIndex == -1) {\r\n\t\t\t\t\t\t\t\tlet interval: number = 0;\r\n\t\t\t\t\t\t\t\tlet pitchIter: number = lastPitch;\r\n\t\t\t\t\t\t\t\tif (pitchIter < pitch) {\r\n\t\t\t\t\t\t\t\t\twhile (pitchIter != pitch) {\r\n\t\t\t\t\t\t\t\t\t\tpitchIter++;\r\n\t\t\t\t\t\t\t\t\t\tif (recentPitches.indexOf(pitchIter) == -1) interval++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\twhile (pitchIter != pitch) {\r\n\t\t\t\t\t\t\t\t\t\tpitchIter--;\r\n\t\t\t\t\t\t\t\t\t\tif (recentPitches.indexOf(pitchIter) == -1) interval--;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tbits.write(1, 0);\r\n\t\t\t\t\t\t\t\tbits.writePitchInterval(interval);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbits.write(1, 1);\r\n\t\t\t\t\t\t\t\tbits.write(4, pitchIndex);\r\n\t\t\t\t\t\t\t\trecentPitches.splice(pitchIndex, 1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trecentPitches.unshift(pitch);\r\n\t\t\t\t\t\t\tif (recentPitches.length > 16) recentPitches.pop();\r\n\r\n\t\t\t\t\t\t\tif (i == note.pitches.length - 1) {\r\n\t\t\t\t\t\t\t\tlastPitch = note.pitches[0];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlastPitch = pitch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcurPart = note.end;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\t\t\t\t\t\tbits.write(2, 0); // rest, then...\r\n\t\t\t\t\t\tif (isModChannel) bits.write(1, 0); // positive offset\r\n\t\t\t\t\t\tbits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbits.write(1, 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet stringLength: number = bits.lengthBase64();\r\n\t\tlet digits: number[] = [];\r\n\t\twhile (stringLength > 0) {\r\n\t\t\tdigits.unshift(base64IntToCharCode[stringLength & 0x3f]);\r\n\t\t\tstringLength = stringLength >> 6;\r\n\t\t}\r\n\t\tbuffer.push(base64IntToCharCode[digits.length]);\r\n\t\tArray.prototype.push.apply(buffer, digits); // append digits to buffer.\r\n\t\tbits.encodeBase64(buffer);\r\n\r\n\t\tconst maxApplyArgs: number = 64000;\r\n\t\tif (buffer.length < maxApplyArgs) {\r\n\t\t\t// Note: Function.apply may break for long argument lists.\r\n\t\t\treturn String.fromCharCode.apply(null, buffer);\r\n\t\t} else {\r\n\t\t\tlet result: string = \"\";\r\n\t\t\tfor (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\r\n\t\t\t\tresult += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic fromBase64String(compressed: string): void {\r\n\t\tif (compressed == null || compressed == \"\") {\r\n\t\t\tthis.initToDefault(true);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet charIndex: number = 0;\r\n\t\t// skip whitespace.\r\n\t\twhile (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\r\n\t\t// skip hash mark.\r\n\t\tif (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\r\n\t\t// if it starts with curly brace, treat it as JSON.\r\n\t\tif (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\r\n\t\t\tthis.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)));\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst variantTest: number = compressed.charCodeAt(charIndex);\r\n\t\tvar variant: string = \"beepbox\";\r\n\r\n\t\t// Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\r\n\t\tif (variantTest == 0x6A) { //\"j\"\r\n\t\t\tvariant = \"jummbox\";\r\n\t\t\tcharIndex++;\r\n\t\t}\r\n\r\n\t\tconst version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\tif (variant == \"beepbox\" && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\r\n\t\tif (variant == \"jummbox\" && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\r\n\r\n\t\tconst beforeTwo: boolean = version < 2;\r\n\t\tconst beforeThree: boolean = version < 3;\r\n\t\tconst beforeFour: boolean = version < 4;\r\n\t\tconst beforeFive: boolean = version < 5;\r\n\t\tconst beforeSix: boolean = version < 6;\r\n\t\tconst beforeSeven: boolean = version < 7;\r\n\t\tconst beforeEight: boolean = version < 8;\r\n\t\tthis.initToDefault(variant == \"beepbox\" && beforeSix);\r\n\r\n\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t// Originally, the only instrument transition was \"seamless\" and the only drum wave was \"retro\".\r\n\t\t\tfor (const channel of this.channels) channel.instruments[0].transition = 0;\r\n\t\t\tthis.channels[3].instruments[0].chipNoise = 0;\r\n\t\t}\r\n\r\n\t\tlet instrumentChannelIterator: number = 0;\r\n\t\tlet instrumentIndexIterator: number = -1;\r\n\t\tlet toSetOctaves: number[] = [];\r\n\t\tlet command: number;\r\n\t\tlet channel: number;\r\n\t\tlet useSlowerArpSpeed: boolean = false;\r\n\t\tlet useFastTwoNoteArp: boolean = false;\r\n\t\twhile (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\r\n\t\t\tcase SongTagCode.songTitle: {\r\n\t\t\t\t// Length of song name string\r\n\t\t\t\tvar songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tthis.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\r\n\t\t\t\tdocument.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n\r\n\t\t\t\tcharIndex += songNameLength;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.channelCount: {\r\n\t\t\t\tthis.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tthis.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tif (variant == \"beepbox\" || beforeTwo) {\r\n\t\t\t\t\t// No mod channel support before jummbox v2\r\n\t\t\t\t\tthis.modChannelCount = 0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t}\r\n\t\t\t\tthis.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\r\n\t\t\t\tthis.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\r\n\t\t\t\tthis.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\r\n\r\n\t\t\t\tfor (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\r\n\t\t\t\t\tthis.channels[channelIndex] = new Channel();\r\n\t\t\t\t}\r\n\t\t\t\tthis.channels.length = this.getChannelCount();\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.scale: {\r\n\t\t\t\tthis.scale = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t// All the scales were jumbled around by Jummbox. Just convert to free.\r\n\t\t\t\tif (variant == \"beepbox\") this.scale = 0;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.key: {\r\n\t\t\t\tif (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.loopStart: {\r\n\t\t\t\tif (beforeFive && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.loopEnd: {\r\n\t\t\t\tif (beforeFive && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.tempo: {\r\n\t\t\t\tif (beforeFour && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t\tthis.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.reverb: {\r\n\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\tthis.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 8;\r\n\t\t\t\t\tthis.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.reverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.reverb = clamp(0, Config.reverbRange, this.reverb);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.beatCount: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tthis.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.barCount: {\r\n\t\t\t\tconst barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\tthis.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\r\n\t\t\t\tfor (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\tfor (let bar = this.channels[channel].bars.length; bar < this.barCount; bar++) {\r\n\t\t\t\t\t\tthis.channels[channel].bars[bar] = (bar < 4) ? 1 : 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[channel].bars.length = this.barCount;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.patternCount: {\r\n\t\t\t\tif (variant == \"beepbox\" && beforeEight) {\r\n\t\t\t\t\tthis.patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\t}\r\n\t\t\t\tthis.patternsPerChannel = validateRange(1, Config.barCountMax, this.patternsPerChannel);\r\n\t\t\t\tfor (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\tfor (let pattern = this.channels[channel].patterns.length; pattern < this.patternsPerChannel; pattern++) {\r\n\t\t\t\t\t\tthis.channels[channel].patterns[pattern] = new Pattern();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[channel].patterns.length = this.patternsPerChannel;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.instrumentCount: {\r\n\t\t\t\tconst instrumentsPerChannel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n\t\t\t\tthis.instrumentsPerChannel = validateRange(Config.instrumentsPerChannelMin, Config.instrumentsPerChannelMax, instrumentsPerChannel);\r\n\t\t\t\tfor (let channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\tconst isNoiseChannel: boolean = channel >= this.pitchChannelCount && channel < this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\t\tconst isModChannel: boolean = channel >= this.pitchChannelCount + this.noiseChannelCount;\r\n\t\t\t\t\tfor (let instrumentIndex = this.channels[channel].instruments.length; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\t\t\t\t\t\tthis.channels[channel].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[channel].instruments.length = this.instrumentsPerChannel;\r\n\t\t\t\t\tif (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\t\tfor (let instrumentIndex = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.rhythm: {\r\n\t\t\t\tthis.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t// Port all arpeggio speeds over to match what they were, before arpeggio speed was decoupled from rhythm.\r\n\t\t\t\tif (variant == \"jummbox\" && beforeThree || variant == \"beepbox\") {\r\n\t\t\t\t\t// These are all the rhythms that had 4 ticks/arpeggio instead of 3.\r\n\t\t\t\t\tif (this.rhythm == 0 || this.rhythm == 2) {\r\n\t\t\t\t\t\tuseSlowerArpSpeed = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Use faster two note arp on these rhythms\r\n\t\t\t\t\tif (this.rhythm >= 2) {\r\n\t\t\t\t\t\tuseFastTwoNoteArp = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.channelOctave: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t// Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n\t\t\t\t\tthis.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\ttoSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\t// Set octave properly after note values are calculated, for now clamp it to the max possible window\r\n\t\t\t\t\t\tthis.channels[channel].octave = clamp(0, Config.maxScrollableOctaves + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\ttoSetOctaves[channel] = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, this.channels[channel].octave);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.startInstrument: {\r\n\t\t\t\tinstrumentIndexIterator++;\r\n\t\t\t\tif (instrumentIndexIterator >= this.instrumentsPerChannel) {\r\n\t\t\t\t\tinstrumentChannelIterator++;\r\n\t\t\t\t\tinstrumentIndexIterator = 0;\r\n\t\t\t\t}\r\n\t\t\t\tvalidateRange(0, this.channels.length - 1, instrumentChannelIterator);\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tconst instrumentType: number = clamp(0, InstrumentType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\tinstrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\r\n\t\t\t\tif (useSlowerArpSpeed) {\r\n\t\t\t\t\tinstrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\r\n\t\t\t\t}\r\n\t\t\t\tif (useFastTwoNoteArp) {\r\n\t\t\t\t\tinstrument.fastTwoNoteArp = true;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.preset: {\r\n\t\t\t\tconst presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.wave: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n\t\t\t\t\tconst channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.channels[channel].instruments[0].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tif (channel >= this.pitchChannelCount) {\r\n\t\t\t\t\t\t\t\tthis.channels[channel].instruments[i].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.channels[channel].instruments[i].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n\t\t\t\t\tif (instrumentChannelIterator >= this.pitchChannelCount) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (instrumentChannelIterator >= this.pitchChannelCount) {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.filterCutoff: {\r\n\t\t\t\tif (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n\t\t\t\t\tconst legacyToEnvelope: number[] = [1, 1, 1, 1, 18, 19, 20];\r\n\t\t\t\t\tconst filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n\r\n\t\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[0];\r\n\t\t\t\t\t\tconst legacyFilter: number = [1, 3, 4, 5][clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n\t\t\t\t\t\tinstrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\t\t\t\t\tconst legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n\t\t\t\t\t\t\t\tif (channel < this.pitchChannelCount) {\r\n\t\t\t\t\t\t\t\t\tinstrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\t\t\t\t\t\t\tinstrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\t\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tinstrument.filterCutoff = 10;\r\n\t\t\t\t\t\t\t\t\tinstrument.filterEnvelope = 1;\r\n\t\t\t\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst legacyFilter: number = clamp(0, filterNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\t\tinstrument.filterCutoff = legacyToCutoff[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterEnvelope = legacyToEnvelope[legacyFilter];\r\n\t\t\t\t\t\tinstrument.filterResonance = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.filterCutoff = clamp(0, Config.filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.filterResonance: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].filterResonance = clamp(0, Config.filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.filterEnvelope: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\t\tinstrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstrument.filterEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.pulseWidth: {\r\n\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t// Convert back from beepbox's weird pulse width storage formula, rounding. The \"7\" in there is the old\r\n\t\t\t\t\t// piece of the formula \"beepbox.Config.pulseWidthRange - 1\".\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.pulseWidth = Math.round(clamp(0, Config.pulseWidthRange + 1, Math.pow(0.5, (7 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 0.5) * 50));\r\n\t\t\t\t\tinstrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.pulseWidth = clamp(0, Config.pulseWidthRange + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tinstrument.pulseEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.transition: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.channels[channel].instruments[0].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].instruments[i].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeFour || variant == \"beepbox\") {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].tieNoteTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.vibrato: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyEffects: number[] = [0, 3, 2, 0];\r\n\t\t\t\t\tconst legacyEnvelopes: number[] = [1, 1, 1, 13];\r\n\t\t\t\t\tconst channel: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[0];\r\n\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\r\n\t\t\t\t\tinstrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n\t\t\t\t\t\t? legacyEnvelopes[effect]\r\n\t\t\t\t\t\t: instrument.filterEnvelope;\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n\t\t\t\t\tconst legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\r\n\t\t\t\t\t\t\tinstrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n\t\t\t\t\t\t\t\t? legacyEnvelopes[effect]\r\n\t\t\t\t\t\t\t\t: instrument.filterEnvelope;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n\t\t\t\t\tconst legacyEnvelopes: number[] = [1, 1, 1, 1, 16, 13];\r\n\t\t\t\t\tconst effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.vibrato = legacyEffects[effect];\r\n\t\t\t\t\tinstrument.filterEnvelope = (instrument.filterEnvelope == 1)\r\n\t\t\t\t\t\t? legacyEnvelopes[effect]\r\n\t\t\t\t\t\t: instrument.filterEnvelope;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.vibrato = vibrato;\r\n\t\t\t\t\t// Custom vibrato\r\n\t\t\t\t\tif (vibrato == Config.vibratos.length) {\r\n\t\t\t\t\t\tinstrument.vibratoDepth = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDepth)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\r\n\t\t\t\t\t\tinstrument.vibratoSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\tinstrument.vibratoDelay = clamp(0, this.mstMaxVols.get(ModSetting.mstVibratoDelay)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t\tinstrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Enforce standard vibrato settings\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinstrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n\t\t\t\t\t\tinstrument.vibratoSpeed = 10; // Normal speed\r\n\t\t\t\t\t\tinstrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\t\t\t\tinstrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.arpeggioSpeed: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tinstrument.arpeggioSpeed = clamp(0, this.mstMaxVols.get(ModSetting.mstArpeggioSpeed)! + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\tinstrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.interval: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.channels[channel].instruments[0].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tconst originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t\t\tlet interval: number = clamp(0, Config.intervals.length, originalValue);\r\n\t\t\t\t\t\t\tif (originalValue == 8) {\r\n\t\t\t\t\t\t\t\t// original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n\t\t\t\t\t\t\t\tinterval = 2;\r\n\t\t\t\t\t\t\t\tthis.channels[channel].instruments[i].chord = 3;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.channels[channel].instruments[i].interval = interval;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tlet interval: number = clamp(0, Config.intervals.length, originalValue);\r\n\t\t\t\t\tif (originalValue == 8) {\r\n\t\t\t\t\t\t// original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n\t\t\t\t\t\tinterval = 2;\r\n\t\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = interval;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].interval = clamp(0, Config.intervals.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.chord: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.effects: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].effects = clamp(0, Config.effectsNames.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.volume: {\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[0];\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n\t\t\t\t} else if (beforeSix && variant == \"beepbox\") {\r\n\t\t\t\t\tfor (channel = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\t\tconst instrument: Instrument = this.channels[channel].instruments[i];\r\n\t\t\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeSeven && variant == \"beepbox\") {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n\t\t\t\t} else if (variant == \"beepbox\") {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\t// Beepbox v7's volume range is 0-7 (0 is max, 7 is mute)\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t\t// Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\r\n\t\t\t\t\tinstrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.panning: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t// Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n\t\t\t\t\tinstrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tinstrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Now, pan delay follows on new versions of jummbox.\r\n\t\t\t\tif (variant == \"jummbox\" && !beforeThree)\r\n\t\t\t\t\tinstrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.detune: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n\t\t\t\tinstrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) + Config.detuneMin);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.customChipWave: {\r\n\t\t\t\tlet instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\t// Pop custom wave values\r\n\t\t\t\tfor (let j: number = 0; j < 64; j++) {\r\n\t\t\t\t\tinstrument.customChipWave[j]\r\n\t\t\t\t\t\t= clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet sum: number = 0.0;\r\n\t\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\t\tsum += instrument.customChipWave[i];\r\n\t\t\t\t}\r\n\t\t\t\tconst average: number = sum / instrument.customChipWave.length;\r\n\r\n\t\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\t\tlet cumulative: number = 0;\r\n\t\t\t\tlet wavePrev: number = 0;\r\n\t\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\t\twavePrev = instrument.customChipWave[i] - average;\r\n\t\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 65th, last sample is for anti-aliasing\r\n\t\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.limiterSettings: {\r\n\t\t\t\tlet nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\t\t\t// Check if limiter settings are used... if not, restore to default\r\n\t\t\t\tif (nextValue == 0x3f) {\r\n\t\t\t\t\t// Limiter isn't used\r\n\t\t\t\t\tthis.compressionRatio = 1.0;\r\n\t\t\t\t\tthis.limitRatio = 1.0;\r\n\t\t\t\t\tthis.limitRise = 4000.0;\r\n\t\t\t\t\tthis.limitDecay = 4.0;\r\n\t\t\t\t\tthis.limitThreshold = 1.0;\r\n\t\t\t\t\tthis.compressionThreshold = 1.0;\r\n\t\t\t\t\tthis.masterGain = 1.0;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Limiter is used, grab values\r\n\t\t\t\t\tthis.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\r\n\t\t\t\t\tnextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\r\n\t\t\t\t\tthis.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tthis.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\r\n\t\t\t\t\tthis.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n\t\t\t\t\tthis.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n\t\t\t\t\tthis.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.channelNames: {\r\n\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t// Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\r\n\t\t\t\t\tvar channelNameLength;\r\n\t\t\t\t\tif (beforeFour)\r\n\t\t\t\t\t\tchannelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tchannelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\tthis.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\r\n\r\n\t\t\t\t\tcharIndex += channelNameLength;\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.algorithm: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.feedbackType: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.feedbackAmplitude: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.feedbackEnvelope: {\r\n\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackEnvelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.operatorFrequencies: {\r\n\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.operatorAmplitudes: {\r\n\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.operatorEnvelopes: {\r\n\t\t\t\tfor (let o: number = 0; o < Config.operatorCount; o++) {\r\n\t\t\t\t\tthis.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].operators[o].envelope = clamp(0, Config.envelopes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.spectrum: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tconst byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t\tcharIndex += byteCount;\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tconst byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n\t\t\t\t\tfor (let j: number = 0; j < Config.drumCount; j++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\tinstrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tinstrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcharIndex += byteCount;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"Unhandled instrument type for spectrum song tag code.\");\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.harmonics: {\r\n\t\t\t\tconst instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\t\t\t\tconst byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\r\n\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\r\n\t\t\t\t}\r\n\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\r\n\t\t\t\tcharIndex += byteCount;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.bars: {\r\n\t\t\t\tlet subStringLength: number;\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tconst barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tsubStringLength = Math.ceil(barCount * 0.5);\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n\t\t\t\t\tfor (let i: number = 0; i < barCount; i++) {\r\n\t\t\t\t\t\tthis.channels[channel].bars[i] = bits.read(3) + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (beforeFive && variant == \"beepbox\") {\r\n\t\t\t\t\tlet neededBits: number = 0;\r\n\t\t\t\t\twhile ((1 << neededBits) < this.patternsPerChannel) neededBits++;\r\n\t\t\t\t\tsubStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].bars[i] = bits.read(neededBits) + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet neededBits: number = 0;\r\n\t\t\t\t\twhile ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n\t\t\t\t\tsubStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n\t\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\t\t\tthis.channels[channel].bars[i] = bits.read(neededBits);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcharIndex += subStringLength;\r\n\t\t\t} break;\r\n\t\t\tcase SongTagCode.patterns: {\r\n\t\t\t\tlet bitStringLength: number = 0;\r\n\t\t\t\tlet channel: number;\r\n\t\t\t\tlet largerChords: boolean = !((beforeFour && variant == \"jummbox\") || variant == \"beepbox\");\r\n\t\t\t\tlet recentPitchBitLength: number = (largerChords ? 4 : 3);\r\n\t\t\t\tlet recentPitchLength: number = (largerChords ? 16 : 8);\r\n\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\tchannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\t\t\t\t// The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default.\r\n\t\t\t\t\tcharIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n\t\t\t\t\tbitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\tbitStringLength = bitStringLength << 6;\r\n\t\t\t\t\tbitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchannel = 0;\r\n\t\t\t\t\tlet bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\twhile (bitStringLengthLength > 0) {\r\n\t\t\t\t\t\tbitStringLength = bitStringLength << 6;\r\n\t\t\t\t\t\tbitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\t\t\tbitStringLengthLength--;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\r\n\t\t\t\tcharIndex += bitStringLength;\r\n\r\n\t\t\t\tlet neededInstrumentBits: number = 0;\r\n\t\t\t\twhile ((1 << neededInstrumentBits) < this.instrumentsPerChannel) neededInstrumentBits++;\r\n\t\t\t\twhile (true) {\r\n\t\t\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n\t\t\t\t\tconst isModChannel: boolean = this.getChannelIsMod(channel);\r\n\r\n\t\t\t\t\t// Some info about modulator settings immediately follows in mod channels.\r\n\t\t\t\t\tif (isModChannel) {\r\n\t\t\t\t\t\tfor (let instrumentIndex: number = 0; instrumentIndex < this.instrumentsPerChannel; instrumentIndex++) {\r\n\r\n\t\t\t\t\t\t\tlet instrument: Instrument = this.channels[channel].instruments[instrumentIndex];\r\n\r\n\t\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\t\tinstrument.modStatuses[mod] = bits.read(2);\r\n\r\n\t\t\t\t\t\t\t\t// Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msForPitch || instrument.modStatuses[mod] == ModStatus.msForNoise) {\r\n\r\n\t\t\t\t\t\t\t\t\t// Clamp to pitch/noise max\r\n\t\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n\t\t\t\t\t\t\t\t\t\tinstrument.modChannels[mod] = clamp(0, this.pitchChannelCount + 1, bits.read(8));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tinstrument.modChannels[mod] = clamp(0, this.noiseChannelCount + 1, bits.read(8));\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tinstrument.modInstruments[mod] = clamp(0, this.instrumentsPerChannel + 1, bits.read(neededInstrumentBits));\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Mod setting is only used if the status isn't \"none\".\r\n\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] != ModStatus.msNone) {\r\n\t\t\t\t\t\t\t\t\tinstrument.modSettings[mod] = bits.read(6);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : this.channels[channel].octave * Config.pitchesPerOctave;\r\n\t\t\t\t\tlet note: Note | null = null;\r\n\t\t\t\t\tlet pin: NotePin | null = null;\r\n\t\t\t\t\tlet lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : Config.pitchesPerOctave) + octaveOffset;\r\n\t\t\t\t\tconst recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [12, 19, 24, 31, 36, 7, 0]);\r\n\t\t\t\t\tconst recentShapes: any[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < recentPitches.length; i++) {\r\n\t\t\t\t\t\trecentPitches[i] += octaveOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n\t\t\t\t\t\tconst newPattern: Pattern = this.channels[channel].patterns[i];\r\n\t\t\t\t\t\tnewPattern.reset();\r\n\t\t\t\t\t\tnewPattern.instrument = bits.read(neededInstrumentBits);\r\n\r\n\t\t\t\t\t\tif (!(variant == \"beepbox\" && beforeThree) && bits.read(1) == 0) continue;\r\n\r\n\t\t\t\t\t\tlet curPart: number = 0;\r\n\t\t\t\t\t\tconst newNotes: Note[] = newPattern.notes;\r\n\t\t\t\t\t\t// Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\r\n\t\t\t\t\t\twhile (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\r\n\t\t\t\t\t\t\tconst useOldShape: boolean = bits.read(1) == 1;\r\n\t\t\t\t\t\t\tlet newNote: boolean = false;\r\n\t\t\t\t\t\t\tlet shapeIndex: number = 0;\r\n\t\t\t\t\t\t\tif (useOldShape) {\r\n\t\t\t\t\t\t\t\tshapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tnewNote = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (!useOldShape && !newNote) {\r\n\t\t\t\t\t\t\t\t// For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\r\n\t\t\t\t\t\t\t\tif (isModChannel) {\r\n\t\t\t\t\t\t\t\t\tconst isBackwards: boolean = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t\t\tconst restLength: number = bits.readPartDuration();\r\n\t\t\t\t\t\t\t\t\tif (isBackwards) {\r\n\t\t\t\t\t\t\t\t\t\tcurPart -= restLength;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tcurPart += restLength;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconst restLength: number = (beforeSeven && variant == \"beepbox\")\r\n\t\t\t\t\t\t\t\t\t\t? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n\t\t\t\t\t\t\t\t\t\t: bits.readPartDuration();\r\n\t\t\t\t\t\t\t\t\tcurPart += restLength;\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlet shape: any;\r\n\t\t\t\t\t\t\t\tlet pinObj: any;\r\n\t\t\t\t\t\t\t\tlet pitch: number;\r\n\t\t\t\t\t\t\t\tif (useOldShape) {\r\n\t\t\t\t\t\t\t\t\tshape = recentShapes[shapeIndex];\r\n\t\t\t\t\t\t\t\t\trecentShapes.splice(shapeIndex, 1);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tshape = {};\r\n\r\n\t\t\t\t\t\t\t\t\tif (!largerChords) {\r\n\t\t\t\t\t\t\t\t\t\t// Old format: X 1's followed by a 0 => X+1 pitches, up to 4\r\n\t\t\t\t\t\t\t\t\t\tshape.pitchCount = 1;\r\n\t\t\t\t\t\t\t\t\t\twhile (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t// New format is:\r\n\t\t\t\t\t\t\t\t\t\t//\t  0: 1 pitch\r\n\t\t\t\t\t\t\t\t\t\t// 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n\t\t\t\t\t\t\t\t\t\tif (bits.read(1) == 1) {\r\n\t\t\t\t\t\t\t\t\t\t\tshape.pitchCount = bits.read(3) + 2;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tshape.pitchCount = 1;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tshape.pinCount = bits.readPinCount();\r\n\r\n\t\t\t\t\t\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t\t\t\t\t\tshape.initialVolume = bits.read(2) * 2;\r\n\t\t\t\t\t\t\t\t\t} else if (!isModChannel) {\r\n\t\t\t\t\t\t\t\t\t\tshape.initialVolume = bits.read(3);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tshape.initialVolume = bits.read(9);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tshape.pins = [];\r\n\t\t\t\t\t\t\t\t\tshape.length = 0;\r\n\t\t\t\t\t\t\t\t\tshape.bendCount = 0;\r\n\t\t\t\t\t\t\t\t\tfor (let j: number = 0; j < shape.pinCount; j++) {\r\n\t\t\t\t\t\t\t\t\t\tpinObj = {};\r\n\t\t\t\t\t\t\t\t\t\tpinObj.pitchBend = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t\t\t\tif (pinObj.pitchBend) shape.bendCount++;\r\n\t\t\t\t\t\t\t\t\t\tshape.length += (beforeSeven && variant == \"beepbox\")\r\n\t\t\t\t\t\t\t\t\t\t\t? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n\t\t\t\t\t\t\t\t\t\t\t: bits.readPartDuration();\r\n\t\t\t\t\t\t\t\t\t\tpinObj.time = shape.length;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (variant == \"beepbox\") {\r\n\t\t\t\t\t\t\t\t\t\t\tpinObj.volume = bits.read(2) * 2;\r\n\t\t\t\t\t\t\t\t\t\t} else if (!isModChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\tpinObj.volume = bits.read(3);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tpinObj.volume = bits.read(9);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tshape.pins.push(pinObj);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\trecentShapes.unshift(shape);\r\n\t\t\t\t\t\t\t\tif (recentShapes.length > 10) recentShapes.pop();\r\n\r\n\t\t\t\t\t\t\t\tnote = new Note(0, curPart, curPart + shape.length, shape.initialVolume);\r\n\t\t\t\t\t\t\t\tnote.pitches = [];\r\n\t\t\t\t\t\t\t\tnote.pins.length = 1;\r\n\t\t\t\t\t\t\t\tconst pitchBends: number[] = [];\r\n\t\t\t\t\t\t\t\tfor (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\r\n\t\t\t\t\t\t\t\t\tconst useOldPitch: boolean = bits.read(1) == 1;\r\n\t\t\t\t\t\t\t\t\tif (!useOldPitch) {\r\n\t\t\t\t\t\t\t\t\t\tconst interval: number = bits.readPitchInterval();\r\n\t\t\t\t\t\t\t\t\t\tpitch = lastPitch;\r\n\t\t\t\t\t\t\t\t\t\tlet intervalIter: number = interval;\r\n\t\t\t\t\t\t\t\t\t\twhile (intervalIter > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpitch++;\r\n\t\t\t\t\t\t\t\t\t\t\twhile (recentPitches.indexOf(pitch) != -1) pitch++;\r\n\t\t\t\t\t\t\t\t\t\t\tintervalIter--;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\twhile (intervalIter < 0) {\r\n\t\t\t\t\t\t\t\t\t\t\tpitch--;\r\n\t\t\t\t\t\t\t\t\t\t\twhile (recentPitches.indexOf(pitch) != -1) pitch--;\r\n\t\t\t\t\t\t\t\t\t\t\tintervalIter++;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tconst pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\r\n\t\t\t\t\t\t\t\t\t\tpitch = recentPitches[pitchIndex];\r\n\t\t\t\t\t\t\t\t\t\trecentPitches.splice(pitchIndex, 1);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\trecentPitches.unshift(pitch);\r\n\t\t\t\t\t\t\t\t\tif (recentPitches.length > recentPitchLength) recentPitches.pop();\r\n\r\n\t\t\t\t\t\t\t\t\tif (j < shape.pitchCount) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tpitchBends.push(pitch);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (j == shape.pitchCount - 1) {\r\n\t\t\t\t\t\t\t\t\t\tlastPitch = note.pitches[0];\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tlastPitch = pitch;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tpitchBends.unshift(note.pitches[0]);\r\n\r\n\t\t\t\t\t\t\t\tfor (const pinObj of shape.pins) {\r\n\t\t\t\t\t\t\t\t\tif (pinObj.pitchBend) pitchBends.shift();\r\n\t\t\t\t\t\t\t\t\tpin = makeNotePin(pitchBends[0] - note.pitches[0], pinObj.time, pinObj.volume);\r\n\t\t\t\t\t\t\t\t\tnote.pins.push(pin);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tcurPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\r\n\t\t\t\t\t\t\t\tnewNotes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (beforeThree && variant == \"beepbox\") {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchannel++;\r\n\t\t\t\t\t\tif (channel >= this.getChannelCount()) break;\r\n\t\t\t\t\t}\r\n\t\t\t\t} // while (true)\r\n\t\t\t} break;\r\n\t\t\tdefault: {\r\n\t\t\t\tthrow new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1));\r\n\t\t\t} break;\r\n\t\t}\r\n\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tif (toSetOctaves[channel] != null) {\r\n\t\t\t\tthis.channels[channel].octave = toSetOctaves[channel];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\r\n\t\tconst channelArray: Object[] = [];\r\n\t\tfor (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n\t\t\tconst instrumentArray: Object[] = [];\r\n\t\t\tconst isNoiseChannel: boolean = this.getChannelIsNoise(channel);\r\n\t\t\tconst isModChannel: boolean = this.getChannelIsMod(channel);\r\n\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\tinstrumentArray.push(this.channels[channel].instruments[i].toJsonObject());\r\n\t\t\t}\r\n\r\n\t\t\tconst patternArray: Object[] = [];\r\n\t\t\tfor (const pattern of this.channels[channel].patterns) {\r\n\t\t\t\tconst noteArray: Object[] = [];\r\n\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\tlet volumeCap: number = this.getVolumeCapForSetting(isModChannel, this.channels[channel].instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n\t\t\t\t\tconst pointArray: Object[] = [];\r\n\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\tlet useVol: number = isModChannel ? Math.round(pin.volume) : Math.round(pin.volume * 100 / volumeCap);\r\n\t\t\t\t\t\tpointArray.push({\r\n\t\t\t\t\t\t\t\"tick\": (pin.time + note.start) * Config.rhythms[this.rhythm].stepsPerBeat / Config.partsPerBeat,\r\n\t\t\t\t\t\t\t\"pitchBend\": pin.interval,\r\n\t\t\t\t\t\t\t\"volume\": useVol,\r\n\t\t\t\t\t\t\t\"forMod\": isModChannel,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnoteArray.push({\r\n\t\t\t\t\t\t\"pitches\": note.pitches,\r\n\t\t\t\t\t\t\"points\": pointArray,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpatternArray.push({\r\n\t\t\t\t\t\"instrument\": pattern.instrument + 1,\r\n\t\t\t\t\t\"notes\": noteArray,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tconst sequenceArray: number[] = [];\r\n\t\t\tif (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\r\n\t\t\t\tsequenceArray.push(this.channels[channel].bars[i]);\r\n\t\t\t}\r\n\t\t\tfor (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\r\n\t\t\t\tsequenceArray.push(this.channels[channel].bars[i]);\r\n\t\t\t}\r\n\t\t\tif (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\r\n\t\t\t\tsequenceArray.push(this.channels[channel].bars[i]);\r\n\t\t\t}\r\n\r\n\t\t\tchannelArray.push({\r\n\t\t\t\t\"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\r\n\t\t\t\t\"octaveScrollBar\": this.channels[channel].octave,\r\n\t\t\t\t\"instruments\": instrumentArray,\r\n\t\t\t\t\"patterns\": patternArray,\r\n\t\t\t\t\"sequence\": sequenceArray,\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\t\"name\": this.title,\r\n\t\t\t\"format\": Song._format,\r\n\t\t\t\"version\": Song._latestJummBoxVersion,\r\n\t\t\t\"scale\": Config.scales[this.scale].name,\r\n\t\t\t\"key\": Config.keys[this.key].name,\r\n\t\t\t\"introBars\": this.loopStart,\r\n\t\t\t\"loopBars\": this.loopLength,\r\n\t\t\t\"beatsPerBar\": this.beatsPerBar,\r\n\t\t\t\"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\r\n\t\t\t\"beatsPerMinute\": this.tempo,\r\n\t\t\t\"reverb\": this.reverb,\r\n\t\t\t//\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\r\n\t\t\t//\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\r\n\t\t\t//\"instrumentsPerChannel\": this.instrumentsPerChannel, //derive this from instrument arrays?\r\n\t\t\t\"channels\": channelArray,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic fromJsonObject(jsonObject: any): void {\r\n\t\tthis.initToDefault(true);\r\n\t\tif (!jsonObject) return;\r\n\r\n\t\t//const version: number = jsonObject[\"version\"] | 0;\r\n\t\t//if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\r\n\r\n\t\tif (jsonObject[\"name\"] != undefined) {\r\n\t\t\tthis.title = jsonObject[\"name\"];\r\n\t\t}\r\n\r\n\t\tthis.scale = 0; // default to free.\r\n\t\tif (jsonObject[\"scale\"] != undefined) {\r\n\t\t\tconst oldScaleNames: Dictionary<string> = {\r\n\t\t\t\t\"romani :)\": \"dbl harmonic :)\",\r\n\t\t\t\t\"romani :(\": \"dbl harmonic :(\",\r\n\t\t\t\t\"enigma\": \"strange\",\r\n\t\t\t};\r\n\t\t\tconst scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\r\n\t\t\tconst scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\r\n\t\t\tif (scale != -1) this.scale = scale;\r\n\t\t}\r\n\r\n\t\tif (jsonObject[\"key\"] != undefined) { //TODO: edo decoding\r\n\t\t\tif (typeof (jsonObject[\"key\"]) == \"number\") {\r\n\t\t\t\tthis.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\r\n\t\t\t} else if (typeof (jsonObject[\"key\"]) == \"string\") {\r\n\t\t\t\tconst key: string = jsonObject[\"key\"];\r\n\t\t\t\tconst letter: string = key.charAt(0).toUpperCase();\r\n\t\t\t\tconst symbol: string = key.charAt(1).toLowerCase();\r\n\t\t\t\tconst letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\r\n\t\t\t\tconst accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\r\n\t\t\t\tlet index: number | undefined = letterMap[letter];\r\n\t\t\t\tconst offset: number | undefined = accidentalMap[symbol];\r\n\t\t\t\tif (index != undefined) {\r\n\t\t\t\t\tif (offset != undefined) index += offset;\r\n\t\t\t\t\tif (index < 0) index += 12;\r\n\t\t\t\t\tindex = index % 12;\r\n\t\t\t\t\tthis.key = index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (jsonObject[\"beatsPerMinute\"] != undefined) {\r\n\t\t\tthis.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\r\n\t\t}\r\n\r\n\t\tif (jsonObject[\"reverb\"] != undefined) {\r\n\t\t\tthis.reverb = clamp(0, Config.reverbRange, jsonObject[\"reverb\"] | 0);\r\n\t\t}\r\n\r\n\t\tif (jsonObject[\"beatsPerBar\"] != undefined) {\r\n\t\t\tthis.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\r\n\t\t}\r\n\r\n\t\tlet importedPartsPerBeat: number = 4;\r\n\t\tif (jsonObject[\"ticksPerBeat\"] != undefined) {\r\n\t\t\timportedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\r\n\t\t\tthis.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\r\n\t\t\tif (this.rhythm == -1) {\r\n\t\t\t\tthis.rhythm = 1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet maxInstruments: number = 1;\r\n\t\tlet maxPatterns: number = 1;\r\n\t\tlet maxBars: number = 1;\r\n\t\tif (jsonObject[\"channels\"]) {\r\n\t\t\tfor (const channelObject of jsonObject[\"channels\"]) {\r\n\t\t\t\tif (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\r\n\t\t\t\tif (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\r\n\t\t\t\tif (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.instrumentsPerChannel = Math.min(maxInstruments, Config.instrumentsPerChannelMax);\r\n\t\tthis.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\r\n\t\tthis.barCount = Math.min(maxBars, Config.barCountMax);\r\n\r\n\t\tif (jsonObject[\"introBars\"] != undefined) {\r\n\t\t\tthis.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\r\n\t\t}\r\n\t\tif (jsonObject[\"loopBars\"] != undefined) {\r\n\t\t\tthis.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\r\n\t\t}\r\n\r\n\t\tconst newPitchChannels: Channel[] = [];\r\n\t\tconst newNoiseChannels: Channel[] = [];\r\n\t\tconst newModChannels: Channel[] = [];\r\n\t\tif (jsonObject[\"channels\"]) {\r\n\t\t\tfor (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n\t\t\t\tlet channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n\r\n\t\t\t\tconst channel: Channel = new Channel();\r\n\r\n\t\t\t\tlet isNoiseChannel: boolean = false;\r\n\t\t\t\tlet isModChannel: boolean = false;\r\n\t\t\t\tif (channelObject[\"type\"] != undefined) {\r\n\t\t\t\t\tisNoiseChannel = (channelObject[\"type\"] == \"drum\");\r\n\t\t\t\t\tisModChannel = (channelObject[\"type\"] == \"mod\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// for older files, assume drums are channel 3.\r\n\t\t\t\t\tisNoiseChannel = (channelIndex >= 3);\r\n\t\t\t\t}\r\n\t\t\t\tif (isNoiseChannel) {\r\n\t\t\t\t\tnewNoiseChannels.push(channel);\r\n\t\t\t\t} else if (isModChannel) {\r\n\t\t\t\t\tnewModChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewPitchChannels.push(channel);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (channelObject[\"octaveScrollBar\"] != undefined) {\r\n\t\t\t\t\tchannel.octave = clamp(0, Config.maxScrollableOctaves - (+(window.localStorage.getItem(\"extraOctaves\") || \"0\")) + 1, channelObject[\"octaveScrollBar\"] | 0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = channel.instruments.length; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\tchannel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.length = this.instrumentsPerChannel;\r\n\r\n\t\t\t\tfor (let i: number = channel.patterns.length; i < this.patternsPerChannel; i++) {\r\n\t\t\t\t\tchannel.patterns[i] = new Pattern();\r\n\t\t\t\t}\r\n\t\t\t\tchannel.patterns.length = this.patternsPerChannel;\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\tchannel.bars[i] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tchannel.bars.length = this.barCount;\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.instrumentsPerChannel; i++) {\r\n\t\t\t\t\tconst instrument: Instrument = channel.instruments[i];\r\n\t\t\t\t\tinstrument.fromJsonObject(channelObject[\"instruments\"][i], isNoiseChannel, isModChannel, this.rhythm == 0 || this.rhythm == 2, this.rhythm >= 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n\t\t\t\t\tconst pattern: Pattern = channel.patterns[i];\r\n\r\n\t\t\t\t\tlet patternObject: any = undefined;\r\n\t\t\t\t\tif (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\r\n\t\t\t\t\tif (patternObject == undefined) continue;\r\n\r\n\t\t\t\t\tpattern.instrument = clamp(0, this.instrumentsPerChannel, (patternObject[\"instrument\"] | 0) - 1);\r\n\r\n\t\t\t\t\tif (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\r\n\t\t\t\t\t\tconst maxNoteCount: number = Math.min(this.beatsPerBar * Config.partsPerBeat, patternObject[\"notes\"].length >>> 0);\r\n\r\n\t\t\t\t\t\t//let tickClock: number = 0;\r\n\t\t\t\t\t\tfor (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\r\n\t\t\t\t\t\t\tif (j >= maxNoteCount) break;\r\n\r\n\t\t\t\t\t\t\tconst noteObject = patternObject[\"notes\"][j];\r\n\t\t\t\t\t\t\tif (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst note: Note = new Note(0, 0, 0, 0);\r\n\t\t\t\t\t\t\tnote.pitches = [];\r\n\t\t\t\t\t\t\tnote.pins = [];\r\n\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\r\n\t\t\t\t\t\t\t\tconst pitch: number = noteObject[\"pitches\"][k] | 0;\r\n\t\t\t\t\t\t\t\tif (note.pitches.indexOf(pitch) != -1) continue;\r\n\t\t\t\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t\t\t\t\tif (note.pitches.length >= Config.maxChordSize) break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (note.pitches.length < 1) continue;\r\n\r\n\t\t\t\t\t\t\t//let noteClock: number = tickClock;\r\n\t\t\t\t\t\t\tlet startInterval: number = 0;\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < noteObject[\"points\"].length; k++) {\r\n\t\t\t\t\t\t\t\tconst pointObject: any = noteObject[\"points\"][k];\r\n\t\t\t\t\t\t\t\tif (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\r\n\t\t\t\t\t\t\t\tconst interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\r\n\r\n\t\t\t\t\t\t\t\tconst time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\r\n\r\n\t\t\t\t\t\t\t\tlet volumeCap: number = this.getVolumeCapForSetting(isModChannel, channel.instruments[pattern.instrument].modSettings[Config.modCount - note.pitches[0] - 1]);\r\n\r\n\t\t\t\t\t\t\t\t// The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\r\n\t\t\t\t\t\t\t\t// A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\r\n\t\t\t\t\t\t\t\tlet volume: number;\r\n\t\t\t\t\t\t\t\tif (pointObject[\"volume\"] == undefined) {\r\n\t\t\t\t\t\t\t\t\tvolume = volumeCap;\r\n\t\t\t\t\t\t\t\t} else if (pointObject[\"forMod\"] == undefined) {\r\n\t\t\t\t\t\t\t\t\tvolume = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tvolume = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (time > this.beatsPerBar * Config.partsPerBeat) continue;\r\n\t\t\t\t\t\t\t\tif (note.pins.length == 0) {\r\n\t\t\t\t\t\t\t\t\t//if (time < noteClock) continue;\r\n\t\t\t\t\t\t\t\t\tnote.start = time;\r\n\t\t\t\t\t\t\t\t\tstartInterval = interval;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t//if (time <= noteClock) continue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t//noteClock = time;\r\n\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(interval - startInterval, time - note.start, volume));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (note.pins.length < 2) continue;\r\n\r\n\t\t\t\t\t\t\tnote.end = note.pins[note.pins.length - 1].time + note.start;\r\n\r\n\t\t\t\t\t\t\tconst maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n\t\t\t\t\t\t\tlet lowestPitch: number = maxPitch;\r\n\t\t\t\t\t\t\tlet highestPitch: number = 0;\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pitches.length; k++) {\r\n\t\t\t\t\t\t\t\tnote.pitches[k] += startInterval;\r\n\t\t\t\t\t\t\t\tif (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\r\n\t\t\t\t\t\t\t\t\tnote.pitches.splice(k, 1);\r\n\t\t\t\t\t\t\t\t\tk--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\r\n\t\t\t\t\t\t\t\tif (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (note.pitches.length < 1) continue;\r\n\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pins.length; k++) {\r\n\t\t\t\t\t\t\t\tconst pin: NotePin = note.pins[k];\r\n\t\t\t\t\t\t\t\tif (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\r\n\t\t\t\t\t\t\t\tif (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\r\n\t\t\t\t\t\t\t\tif (k >= 2) {\r\n\t\t\t\t\t\t\t\t\tif (pin.interval == note.pins[k - 1].interval &&\r\n\t\t\t\t\t\t\t\t\t\tpin.interval == note.pins[k - 2].interval &&\r\n\t\t\t\t\t\t\t\t\t\tpin.volume == note.pins[k - 1].volume &&\r\n\t\t\t\t\t\t\t\t\t\tpin.volume == note.pins[k - 2].volume) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pins.splice(k - 1, 1);\r\n\t\t\t\t\t\t\t\t\t\tk--;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t//tickClock = note.end;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.barCount; i++) {\r\n\t\t\t\t\tchannel.bars[i] = channelObject[\"sequence\"] ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\r\n\t\tif (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\r\n\t\tif (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\r\n\t\tthis.pitchChannelCount = newPitchChannels.length;\r\n\t\tthis.noiseChannelCount = newNoiseChannels.length;\r\n\t\tthis.modChannelCount = newModChannels.length;\r\n\t\tthis.channels.length = 0;\r\n\t\tArray.prototype.push.apply(this.channels, newPitchChannels);\r\n\t\tArray.prototype.push.apply(this.channels, newNoiseChannels);\r\n\t\tArray.prototype.push.apply(this.channels, newModChannels);\r\n\t}\r\n\r\n\tpublic getPattern(channel: number, bar: number): Pattern | null {\r\n\t\tif (bar < 0 || bar >= this.barCount) return null;\r\n\t\tconst patternIndex: number = this.channels[channel].bars[bar];\r\n\t\tif (patternIndex == 0) return null;\r\n\t\treturn this.channels[channel].patterns[patternIndex - 1];\r\n\t}\r\n\r\n\tpublic getPatternInstrument(channel: number, bar: number): number {\r\n\t\tconst pattern: Pattern | null = this.getPattern(channel, bar);\r\n\t\treturn pattern == null ? 0 : pattern.instrument;\r\n\t}\r\n\r\n\tpublic getBeatsPerMinute(): number {\r\n\t\treturn this.tempo;\r\n\t}\r\n\r\n}\r\n\r\nclass Tone {\r\n\tpublic instrument: Instrument;\r\n\tpublic readonly pitches: number[] = [0, 0, 0, 0];\r\n\tpublic pitchCount: number = 0;\r\n\tpublic chordSize: number = 0;\r\n\tpublic drumsetPitch: number = 0;\r\n\tpublic note: Note | null = null;\r\n\tpublic prevNote: Note | null = null;\r\n\tpublic nextNote: Note | null = null;\r\n\tpublic prevNotePitchIndex: number = 0;\r\n\tpublic nextNotePitchIndex: number = 0;\r\n\tpublic active: boolean = false;\r\n\tpublic noteStart: number = 0;\r\n\tpublic noteEnd: number = 0;\r\n\tpublic noteLengthTicks: number = 0;\r\n\tpublic ticksSinceReleased: number = 0;\r\n\tpublic liveInputSamplesHeld: number = 0;\r\n\tpublic lastInterval: number = 0;\r\n\tpublic lastVolume: number = 0;\r\n\tpublic stereoVolume1: number = 0.0;\r\n\tpublic stereoVolume2: number = 0.0;\r\n\tpublic stereoOffset: number = 0.0;\r\n\tpublic stereoDelay: number = 0.0;\r\n\tpublic sample: number = 0.0;\r\n\tpublic readonly phases: number[] = [];\r\n\tpublic readonly phaseDeltas: number[] = [];\r\n\tpublic readonly volumeStarts: number[] = [];\r\n\tpublic readonly volumeDeltas: number[] = [];\r\n\tpublic volumeStart: number = 0.0;\r\n\tpublic volumeDelta: number = 0.0;\r\n\tpublic phaseDeltaScale: number = 0.0;\r\n\tpublic pulseWidth: number = 0.0;\r\n\tpublic pulseWidthDelta: number = 0.0;\r\n\tpublic filter: number = 0.0;\r\n\tpublic filterScale: number = 0.0;\r\n\tpublic filterSample0: number = 0.0;\r\n\tpublic filterSample1: number = 0.0;\r\n\tpublic vibratoScale: number = 0.0;\r\n\tpublic intervalMult: number = 0.0;\r\n\tpublic intervalVolumeMult: number = 1.0;\r\n\tpublic feedbackOutputs: number[] = [];\r\n\tpublic feedbackMult: number = 0.0;\r\n\tpublic feedbackDelta: number = 0.0;\r\n\tpublic stereoVolumeLStart: number = 0.0;\r\n\tpublic stereoVolumeRStart: number = 0.0;\r\n\tpublic stereoVolumeLDelta: number = 0.0;\r\n\tpublic stereoVolumeRDelta: number = 0.0;\r\n\tpublic stereoDelayStart: number = 0.0;\r\n\tpublic stereoDelayEnd: number = 0.0;\r\n\tpublic stereoDelayDelta: number = 0.0;\r\n\tpublic customVolumeStart: number = 0.0;\r\n\tpublic customVolumeEnd: number = 0.0;\r\n\tpublic filterResonanceStart: number = 0.0;\r\n\tpublic filterResonanceDelta: number = 0.0;\r\n\tpublic isFirstOrder: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tpublic reset(): void {\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis.phases[i] = 0.0;\r\n\t\t\tthis.feedbackOutputs[i] = 0.0;\r\n\t\t}\r\n\t\tthis.sample = 0.0;\r\n\t\tthis.filterSample0 = 0.0;\r\n\t\tthis.filterSample1 = 0.0;\r\n\t\tthis.liveInputSamplesHeld = 0.0;\r\n\t}\r\n\r\n}\r\n\r\nexport class Synth {\r\n\r\n\tpublic warmUpSynthesizer(song: Song | null): void {\r\n\t\t// Don't bother to generate the drum waves unless the song actually\r\n\t\t// uses them, since they may require a lot of computation.\r\n\t\tif (song != null) {\r\n\t\t\tfor (let channel: number = 0; channel < song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrument: number = 0; instrument < song.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\tSynth.getInstrumentSynthFunction(song.channels[channel].instruments[instrument]);\r\n\t\t\t\t\tsong.channels[channel].instruments[instrument].warmUp();\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic computeLatestModValues(): void {\r\n\r\n\t\tif (this.song != null && this.song.modChannelCount > 0) {\r\n\r\n\t\t\t// Clear all mod values, and set up temp variables for the time a mod would be set at.\r\n\t\t\tlet latestModTimes: (number | null)[] = [];\r\n\t\t\tlet latestModInsTimes: (number | null)[][][] = [];\r\n\t\t\tthis.modValues = [];\r\n\t\t\tthis.nextModValues = [];\r\n\t\t\tthis.modInsValues = [];\r\n\t\t\tthis.nextModInsValues = [];\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\tlatestModInsTimes[channel] = [];\r\n\t\t\t\tthis.modInsValues[channel] = [];\r\n\t\t\t\tthis.nextModInsValues[channel] = [];\r\n\t\t\t\tfor (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\tthis.modInsValues[channel][instrument] = [];\r\n\t\t\t\t\tthis.nextModInsValues[channel][instrument] = [];\r\n\t\t\t\t\tlatestModInsTimes[channel][instrument] = [];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Find out where we're at in the fraction of the current bar.\r\n\t\t\tlet currentPart: number = this.beat * Config.partsPerBeat + this.part;\r\n\r\n\t\t\t// For mod channels, calculate last set value for each mod\r\n\t\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\t\tif (!(this.song.channels[channel].muted)) {\r\n\r\n\t\t\t\t\tlet pattern: Pattern | null;\r\n\r\n\t\t\t\t\tfor (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\r\n\t\t\t\t\t\tpattern = this.song.getPattern(channel, currentBar);\r\n\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tlet instrumentIdx: number = this.song.getPatternInstrument(channel, currentBar);\r\n\t\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\t\tlet latestPinParts: number[] = [];\r\n\t\t\t\t\t\t\tlet latestPinValues: number[] = [];\r\n\r\n\t\t\t\t\t\t\tlet partsInBar: number = (currentBar == this.bar)\r\n\t\t\t\t\t\t\t\t? currentPart\r\n\t\t\t\t\t\t\t\t: this.findPartsInBar(currentBar);\r\n\r\n\t\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\t\tif (note.start < partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\r\n\t\t\t\t\t\t\t\t\tif (note.end <= partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\tlatestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\r\n\t\t\t\t\t\t\t\t\t\tlatestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].volume;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tlatestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\r\n\t\t\t\t\t\t\t\t\t\t// Find the pin where bar change happens, and compute where pin volume would be at that time\r\n\t\t\t\t\t\t\t\t\t\tfor (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx].time + note.start > partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tlatestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n\t\t\t\t\t\t\t\t\t\t\t\tpinIdx = note.pins.length;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Set modulator value, if it wasn't set in another pattern already scanned\r\n\t\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\t\tif (latestPinParts[mod] != null) {\r\n\t\t\t\t\t\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\t\t\t\tif (latestModTimes[instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modSettings[mod]] as number)) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n\t\t\t\t\t\t\t\t\t\t\tlatestModTimes[instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] as number)) {\r\n\t\t\t\t\t\t\t\t\t\tthis.setModValue(latestPinValues[mod], latestPinValues[mod], mod, instrument, instrument.modSettings[mod]);\r\n\t\t\t\t\t\t\t\t\t\tlatestModInsTimes[instrument.modChannels[mod]][instrument.modInstruments[mod]][instrument.modSettings[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static operatorAmplitudeCurve(amplitude: number): number {\r\n\t\treturn (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\r\n\t}\r\n\r\n\tpublic samplesPerSecond: number = 44100;\r\n\r\n\tpublic song: Song | null = null;\r\n\tpublic liveInputDuration: number = 0;\r\n\tpublic liveInputStarted: boolean = false;\r\n\tpublic liveInputPitches: number[] = [];\r\n\tpublic liveInputChannel: number = 0;\r\n\tpublic loopRepeatCount: number = -1;\r\n\tpublic volume: number = 1.0;\r\n\r\n\tprivate wantToSkip: boolean = false;\r\n\tprivate playheadInternal: number = 0.0;\r\n\tprivate bar: number = 0;\r\n\tprivate beat: number = 0;\r\n\tprivate part: number = 0;\r\n\tprivate tick: number = 0;\r\n\tprivate tickSampleCountdown: number = 0;\r\n\tprivate modValues: (number | null)[];\r\n\tprivate modInsValues: (number | null)[][][];\r\n\tprivate nextModValues: (number | null)[];\r\n\tprivate nextModInsValues: (number | null)[][][];\r\n\tprivate isPlayingSong: boolean = false;\r\n\tprivate liveInputEndTime: number = 0.0;\r\n\tprivate readonly tonePool: Deque<Tone> = new Deque<Tone>();\r\n\tprivate readonly activeTones: Array<Deque<Tone>> = [];\r\n\tprivate tyingOver: number[] = [];\r\n\tprivate readonly activeModTones: Array<Array<Deque<Tone>>> = [];\r\n\t//private readonly releasedModTones: Array<Array<Deque<Tone>>> = [];\r\n\tprivate readonly releasedTones: Array<Deque<Tone>> = [];\r\n\tprivate readonly liveInputTones: Deque<Tone> = new Deque<Tone>();\r\n\r\n\t//private highpassInput: number = 0.0;\r\n\t//private highpassOutput: number = 0.0;\r\n\tprivate limit: number = 0.0;\r\n\r\n\tprivate stereoBufferIndex: number = 0;\r\n\tprivate samplesForNone: Float32Array | null = null;\r\n\tprivate samplesForReverb: Float32Array | null = null;\r\n\tprivate samplesForChorus: Float32Array | null = null;\r\n\tprivate samplesForChorusReverb: Float32Array | null = null;\r\n\r\n\tprivate chorusDelayLine: Float32Array = new Float32Array(2048);\r\n\tprivate chorusDelayPos: number = 0;\r\n\tprivate chorusPhase: number = 0;\r\n\r\n\tprivate reverbDelayLine: Float32Array = new Float32Array(16384);\r\n\tprivate reverbDelayPos: number = 0;\r\n\tprivate reverbFeedback0: number = 0.0;\r\n\tprivate reverbFeedback1: number = 0.0;\r\n\tprivate reverbFeedback2: number = 0.0;\r\n\tprivate reverbFeedback3: number = 0.0;\r\n\r\n\tprivate audioCtx: any | null = null;\r\n\tprivate scriptNode: any | null = null;\r\n\r\n\tpublic get playing(): boolean {\r\n\t\treturn this.isPlayingSong;\r\n\t}\r\n\r\n\tpublic get playhead(): number {\r\n\t\treturn this.playheadInternal;\r\n\t}\r\n\r\n\tpublic set playhead(value: number) {\r\n\t\tif (this.song != null) {\r\n\t\t\tthis.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\r\n\t\t\tlet remainder: number = this.playheadInternal;\r\n\t\t\tthis.bar = Math.floor(remainder);\r\n\t\t\tremainder = this.song.beatsPerBar * (remainder - this.bar);\r\n\t\t\tthis.beat = Math.floor(remainder);\r\n\t\t\tremainder = Config.partsPerBeat * (remainder - this.beat);\r\n\t\t\tthis.part = Math.floor(remainder);\r\n\t\t\tremainder = Config.ticksPerPart * (remainder - this.part);\r\n\t\t\tthis.tick = Math.floor(remainder);\r\n\t\t\tconst samplesPerTick: number = this.getSamplesPerTick();\r\n\t\t\tremainder = samplesPerTick * (remainder - this.tick);\r\n\t\t\tthis.tickSampleCountdown = samplesPerTick - remainder;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getSamplesPerBar(): number {\r\n\t\tif (this.song == null) throw new Error();\r\n\t\treturn this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\r\n\t}\r\n\r\n\t// Calculate the total number of parts that will be played in the current bar before any next bar mods trigger.\r\n\tprivate findPartsInBar(bar: number): number {\r\n\t\tif (this.song == null) return 0;\r\n\t\tlet partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\tlet pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n\t\t\tif (pattern != null) {\r\n\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tif (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\tif (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n\t\t\t\t\t\t\t\t// Find the earliest next bar note.\r\n\t\t\t\t\t\t\t\tif (partsInBar > note.start)\r\n\t\t\t\t\t\t\t\t\tpartsInBar = note.start;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn partsInBar;\r\n\t}\r\n\r\n\t// Returns the total samples in the song\r\n\tpublic getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\r\n\t\tif (this.song == null)\r\n\t\t\treturn -1;\r\n\r\n\t\t// Compute the window to be checked (start bar to end bar)\r\n\t\tlet startBar: number = enableIntro ? 0 : this.song.loopStart;\r\n\t\tlet endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\r\n\t\tlet hasTempoMods: boolean = false;\r\n\t\tlet hasNextBarMods: boolean = false;\r\n\t\tlet prevTempo: number = this.song.tempo;\r\n\r\n\t\t// Determine if any tempo or next bar mods happen anywhere in the window\r\n\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\tlet pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\tif (instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\thasTempoMods = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (instrument.modSettings[mod] == ModSetting.mstNextBar && instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\thasNextBarMods = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\r\n\t\tif (startBar > 0) {\r\n\t\t\tlet latestTempoPin: number | null = null;\r\n\t\t\tlet latestTempoValue: number = 0;\r\n\r\n\t\t\tfor (let bar: number = startBar - 1; bar >= 0; bar--) {\r\n\t\t\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\t\t\tlet pattern = this.song.getPattern(channel, bar);\r\n\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tlet instrumentIdx: number = this.song.getPatternInstrument(channel, bar);\r\n\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\r\n\t\t\t\t\t\tlet partsInBar: number = this.findPartsInBar(bar);\r\n\r\n\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\tif (instrument.modSettings[Config.modCount - 1 - note.pitches[0]] == ModSetting.mstTempo && instrument.modStatuses[Config.modCount - 1 - note.pitches[0]] == ModStatus.msForSong) {\r\n\t\t\t\t\t\t\t\tif (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\r\n\t\t\t\t\t\t\t\t\tif (note.end <= partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\tlatestTempoPin = note.end;\r\n\t\t\t\t\t\t\t\t\t\tlatestTempoValue = note.pins[note.pins.length - 1].volume;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tlatestTempoPin = partsInBar;\r\n\t\t\t\t\t\t\t\t\t\t// Find the pin where bar change happens, and compute where pin volume would be at that time\r\n\t\t\t\t\t\t\t\t\t\tfor (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx].time + note.start > partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst deltaVolume: number = note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tlatestTempoValue = Math.round(note.pins[pinIdx - 1].volume + deltaVolume * toNextBarLength / transitionLength);\r\n\t\t\t\t\t\t\t\t\t\t\t\tpinIdx = note.pins.length;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Done once you process a pattern where tempo mods happened, since the search happens backward\r\n\t\t\t\tif (latestTempoPin != null) {\r\n\t\t\t\t\tprevTempo = this.song.modValueToReal(latestTempoValue, ModSetting.mstTempo);\r\n\t\t\t\t\tbar = -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (hasTempoMods || hasNextBarMods) {\r\n\t\t\t// Run from start bar to end bar and observe looping, computing average tempo across each bar\r\n\t\t\tlet bar: number = startBar;\r\n\t\t\tlet ended: boolean = false;\r\n\t\t\tlet totalSamples: number = 0;\r\n\r\n\t\t\twhile (!ended) {\r\n\t\t\t\t// Compute the subsection of the pattern that will play\r\n\t\t\t\tlet partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n\t\t\t\tlet currentPart: number = 0;\r\n\r\n\t\t\t\tif (hasNextBarMods) {\r\n\t\t\t\t\tpartsInBar = this.findPartsInBar(bar);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Compute average tempo in this tick window, or use last tempo if nothing happened\r\n\t\t\t\tif (hasTempoMods) {\r\n\t\t\t\t\tlet foundMod: boolean = false;\r\n\t\t\t\t\tfor (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n\t\t\t\t\t\tif (foundMod == false) {\r\n\t\t\t\t\t\t\tlet pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n\t\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[pattern.instrument];\r\n\t\t\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\t\t\tif (foundMod == false && instrument.modSettings[mod] == ModSetting.mstTempo && instrument.modStatuses[mod] == ModStatus.msForSong\r\n\t\t\t\t\t\t\t\t\t\t&& pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\r\n\t\t\t\t\t\t\t\t\t\t// Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\r\n\t\t\t\t\t\t\t\t\t\tfoundMod = true;\r\n\t\t\t\t\t\t\t\t\t\t// Need to re-sort the notes by start time to make the next part much less painful.\r\n\t\t\t\t\t\t\t\t\t\tpattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t\t\t\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t// Compute samples up to this note\r\n\t\t\t\t\t\t\t\t\t\t\t\ttotalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (note.start < partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Compute samples up to this pin\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst prevPinTempo: number = this.song.modValueToReal(note.pins[pinIdx - 1].volume, ModSetting.mstTempo);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet currPinTempo: number = this.song.modValueToReal(note.pins[pinIdx].volume, ModSetting.mstTempo);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (note.pins[pinIdx].time + note.start > partsInBar) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrPinTempo = this.song.modValueToReal(note.pins[pinIdx - 1].volume + (note.pins[pinIdx].volume - note.pins[pinIdx - 1].volume) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time), ModSetting.mstTempo);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (currPinTempo != prevPinTempo) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// The starting formula is\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Substituting BPM for a step variable that moves with respect to the current tick, we get\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// No tempo change between the two pins.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttotalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tprevTempo = currPinTempo;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Compute samples for the rest of the bar\r\n\t\t\t\ttotalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n\t\t\t\tbar++;\r\n\t\t\t\tif (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\t\t\tbar = this.song.loopStart;\r\n\t\t\t\t\tif (loop > 0) loop--;\r\n\t\t\t\t}\r\n\t\t\t\tif (bar >= endBar) {\r\n\t\t\t\t\tended = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn Math.ceil(totalSamples);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// No tempo or next bar mods... phew! Just calculate normally.\r\n\t\t\treturn this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\r\n\t\tif (this.song == null) throw new Error();\r\n\t\tlet bars: number = this.song.loopLength * (useLoopCount + 1);\r\n\t\tif (enableIntro) bars += this.song.loopStart;\r\n\t\tif (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\r\n\t\treturn bars;\r\n\t}\r\n\r\n\tconstructor(song: Song | string | null = null) {\r\n\t\tif (song != null) this.setSong(song);\r\n\t}\r\n\r\n\tpublic setSong(song: Song | string): void {\r\n\t\tif (typeof (song) == \"string\") {\r\n\t\t\tthis.song = new Song(song);\r\n\t\t} else if (song instanceof Song) {\r\n\t\t\tthis.song = song;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setModValue(volumeStart: number, volumeEnd: number, mod: number, instrument: Instrument, setting: ModSetting): number {\r\n\t\tlet val: number;\r\n\t\tlet nextVal: number;\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\tval = (this.song as Song).modValueToReal(volumeStart, setting);\r\n\t\t\t\tnextVal = (this.song as Song).modValueToReal(volumeEnd, setting);\r\n\t\t\t\tif (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\r\n\t\t\t\t\tthis.modValues[setting] = val;\r\n\t\t\t\t\tthis.nextModValues[setting] = nextVal;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\tval = this.song!.modValueToReal(volumeStart, setting);\r\n\t\t\t\tnextVal = this.song!.modValueToReal(volumeEnd, setting);\r\n\t\t\t\tlet channelAdjust: number = instrument.modChannels[mod] + ((instrument.modStatuses[mod] == ModStatus.msForNoise) ? this.song!.pitchChannelCount : 0);\r\n\r\n\t\t\t\tif (this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] == null\r\n\t\t\t\t\t|| this.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != val\r\n\t\t\t\t\t|| this.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] != nextVal) {\r\n\t\t\t\t\tthis.modInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = val;\r\n\t\t\t\t\tthis.nextModInsValues[channelAdjust][instrument.modInstruments[mod]][setting] = nextVal;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\tval = (this.song as Song).modValueToReal(volumeStart, setting);\r\n\t\t\t\tbreak;\r\n\t\t\tcase ModSetting.mstNone:\r\n\t\t\tdefault:\r\n\t\t\t\tval = -1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn val;\r\n\t}\r\n\r\n\tpublic getModValue(setting: ModSetting, forSong: boolean, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\r\n\t\tif (forSong) {\r\n\t\t\tif (this.modValues[setting] != null && this.nextModValues[setting] != null) {\r\n\t\t\t\treturn nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\r\n\t\t\t}\r\n\t\t} else if (channel != undefined && instrument != undefined) {\r\n\t\t\tif (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n\t\t\t\treturn nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn -1;\r\n\t}\r\n\r\n\t// Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\r\n\tpublic isAnyModActive(channel: number, instrument: number): boolean {\r\n\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\tif ((this.modValues != undefined && this.modValues[setting] != null)\r\n\t\t\t\t|| (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpublic unsetMod(setting: ModSetting, channel?: number, instrument?: number) {\r\n\t\tif (this.isModActive(setting, true) || (channel != undefined && instrument != undefined && this.isModActive(setting, false, channel, instrument))) {\r\n\t\t\tthis.modValues[setting] = null;\r\n\t\t\tthis.nextModValues[setting] = null;\r\n\t\t\tif (channel != undefined && instrument != undefined) {\r\n\t\t\t\tthis.modInsValues[channel][instrument][setting] = null;\r\n\t\t\t\tthis.nextModInsValues[channel][instrument][setting] = null;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic isModActive(setting: ModSetting, forSong: boolean, channel?: number, instrument?: number): boolean {\r\n\t\tif (forSong) {\r\n\t\t\treturn (this.modValues != undefined && this.modValues[setting] != null);\r\n\t\t} else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null && this.modInsValues[channel][instrument][setting] != null) {\r\n\t\t\treturn (this.modInsValues[channel][instrument][setting] != null);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate activateAudio(): void {\r\n\t\tif (this.audioCtx == null || this.scriptNode == null) {\r\n\t\t\tthis.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)();\r\n\t\t\tthis.samplesPerSecond = this.audioCtx.sampleRate;\r\n\t\t\tthis.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(2048, 0, 2) : this.audioCtx.createJavaScriptNode(2048, 0, 2); // 2048, 0 input channels, 2 output channels\r\n\t\t\tthis.scriptNode.onaudioprocess = this.audioProcessCallback;\r\n\t\t\tthis.scriptNode.channelCountMode = 'explicit';\r\n\t\t\tthis.scriptNode.channelInterpretation = 'speakers';\r\n\t\t\tthis.scriptNode.connect(this.audioCtx.destination);\r\n\t\t}\r\n\t\tthis.audioCtx.resume();\r\n\t}\r\n\r\n\tprivate deactivateAudio(): void {\r\n\t\tif (this.audioCtx != null && this.scriptNode != null) {\r\n\t\t\tthis.scriptNode.disconnect(this.audioCtx.destination);\r\n\t\t\tthis.scriptNode = null;\r\n\t\t\tif (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\r\n\t\t\tthis.audioCtx = null;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic maintainLiveInput(): void {\r\n\t\tthis.activateAudio();\r\n\t\tthis.liveInputEndTime = performance.now() + 10000.0;\r\n\t}\r\n\r\n\tpublic play(): void {\r\n\t\tif (this.isPlayingSong) return;\r\n\t\tthis.isPlayingSong = true;\r\n\t\tthis.warmUpSynthesizer(this.song);\r\n\t\tthis.computeLatestModValues();\r\n\t\tthis.activateAudio();\r\n\t}\r\n\r\n\tpublic pause(): void {\r\n\t\tif (!this.isPlayingSong) return;\r\n\t\tthis.isPlayingSong = false;\r\n\t\tif (this.song != null) {\r\n\t\t\tthis.song.inVolumeCap = 0.0;\r\n\t\t\tthis.song.outVolumeCap = 0.0;\r\n\t\t}\r\n\t\tthis.modValues = [];\r\n\t\tthis.modInsValues = [];\r\n\t\tthis.nextModValues = [];\r\n\t\tthis.nextModInsValues = [];\r\n\t\tthis.tyingOver = [];\r\n\t}\r\n\r\n\tpublic snapToStart(): void {\r\n\t\tthis.bar = 0;\r\n\t\tthis.snapToBar();\r\n\t}\r\n\r\n\tpublic goToBar(bar: number): void {\r\n\t\tthis.bar = bar;\r\n\t\tthis.playheadInternal = this.bar;\r\n\t}\r\n\r\n\tpublic snapToBar(): void {\r\n\t\tthis.playheadInternal = this.bar;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\t\tthis.tick = 0;\r\n\t\tthis.tickSampleCountdown = 0;\r\n\t}\r\n\r\n\tpublic resetEffects(): void {\r\n\t\tthis.reverbDelayPos = 0;\r\n\t\tthis.reverbFeedback0 = 0.0;\r\n\t\tthis.reverbFeedback1 = 0.0;\r\n\t\tthis.reverbFeedback2 = 0.0;\r\n\t\tthis.reverbFeedback3 = 0.0;\r\n\t\t//this.highpassInput = 0.0;\r\n\t\t//this.highpassOutput = 0.0;\r\n\t\tthis.freeAllTones();\r\n\t\tfor (let i: number = 0; i < this.reverbDelayLine.length; i++) this.reverbDelayLine[i] = 0.0;\r\n\t\tfor (let i: number = 0; i < this.chorusDelayLine.length; i++) this.chorusDelayLine[i] = 0.0;\r\n\t\tif (this.samplesForNone != null) for (let i: number = 0; i < this.samplesForNone.length; i++) this.samplesForNone[i] = 0.0;\r\n\t\tif (this.samplesForReverb != null) for (let i: number = 0; i < this.samplesForReverb.length; i++) this.samplesForReverb[i] = 0.0;\r\n\t\tif (this.samplesForChorus != null) for (let i: number = 0; i < this.samplesForChorus.length; i++) this.samplesForChorus[i] = 0.0;\r\n\t\tif (this.samplesForChorusReverb != null) for (let i: number = 0; i < this.samplesForChorusReverb.length; i++) this.samplesForChorusReverb[i] = 0.0;\r\n\t}\r\n\r\n\tpublic jumpIntoLoop(): void {\r\n\t\tif (!this.song) return;\r\n\t\tif (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\r\n\t\t\tconst oldBar: number = this.bar;\r\n\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\tthis.playheadInternal += this.bar - oldBar;\r\n\r\n\t\t\tif (this.playing)\r\n\t\t\t\tthis.computeLatestModValues();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic nextBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tconst oldBar: number = this.bar;\r\n\t\tthis.bar++;\r\n\t\tif (this.bar >= this.song.barCount) {\r\n\t\t\tthis.bar = 0;\r\n\t\t}\r\n\t\tthis.playheadInternal += this.bar - oldBar;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tpublic skipBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tconst samplesPerTick: number = this.getSamplesPerTick();\r\n\t\tthis.bar++;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\t\tthis.tick = 0;\r\n\t\tthis.tickSampleCountdown = samplesPerTick;\r\n\r\n\t\tif (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\tif (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic firstBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tthis.bar = 0;\r\n\t\tthis.playheadInternal = 0;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tpublic jumpToEditingBar(bar: number): void {\r\n\t\tif (!this.song) return;\r\n\r\n\t\tthis.bar = bar;\r\n\r\n\t\tthis.playheadInternal = bar;\r\n\t\tthis.beat = 0;\r\n\t\tthis.part = 0;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tpublic prevBar(): void {\r\n\t\tif (!this.song) return;\r\n\t\tconst oldBar: number = this.bar;\r\n\t\tthis.bar--;\r\n\t\tif (this.bar < 0 || this.bar >= this.song.barCount) {\r\n\t\t\tthis.bar = this.song.barCount - 1;\r\n\t\t}\r\n\t\tthis.playheadInternal += this.bar - oldBar;\r\n\r\n\t\t// Reset note ties\r\n\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t}\r\n\r\n\t\tif (this.playing)\r\n\t\t\tthis.computeLatestModValues();\r\n\t}\r\n\r\n\tprivate audioProcessCallback = (audioProcessingEvent: any): void => {\r\n\t\tconst outputBuffer = audioProcessingEvent.outputBuffer;\r\n\t\tconst outputDataL: Float32Array = outputBuffer.getChannelData(0);\r\n\t\tconst outputDataR: Float32Array = outputBuffer.getChannelData(1);\r\n\r\n\t\tconst isPlayingLiveTones = performance.now() < this.liveInputEndTime;\r\n\t\tif (!isPlayingLiveTones && !this.isPlayingSong) {\r\n\t\t\tfor (let i: number = 0; i < outputBuffer.length; i++) {\r\n\t\t\t\toutputDataL[i] = 0.0;\r\n\t\t\t\toutputDataR[i] = 0.0;\r\n\t\t\t}\r\n\t\t\tthis.deactivateAudio();\r\n\t\t} else {\r\n\t\t\tthis.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\r\n\t\tif (this.song == null) {\r\n\t\t\tfor (let i: number = 0; i < outputBufferLength; i++) {\r\n\t\t\t\toutputDataL[i] = 0.0;\r\n\t\t\t\toutputDataR[i] = 0.0;\r\n\t\t\t}\r\n\t\t\tthis.deactivateAudio();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.song.inVolumeCap = 0.0; // Reset volume cap for this run\r\n\t\tthis.song.outVolumeCap = 0.0;\r\n\r\n\t\tconst channelCount: number = this.song.pitchChannelCount + this.song.noiseChannelCount;\r\n\r\n\t\tfor (let i: number = this.activeTones.length; i < channelCount; i++) {\r\n\t\t\tthis.activeTones[i] = new Deque<Tone>();\r\n\t\t\tthis.releasedTones[i] = new Deque<Tone>();\r\n\t\t}\r\n\t\tthis.activeTones.length = channelCount;\r\n\t\tthis.releasedTones.length = channelCount;\r\n\t\tif (channelCount != this.tyingOver.length) {\r\n\t\t\tlet idx: number = this.tyingOver.length;\r\n\t\t\tthis.tyingOver.length = channelCount;\r\n\t\t\twhile (idx < this.tyingOver.length) {\r\n\t\t\t\tthis.tyingOver[idx++] = -1;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = this.activeModTones.length; i < this.song.modChannelCount; i++) {\r\n\t\t\tthis.activeModTones[i] = [];\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tthis.activeModTones[i][mod] = new Deque<Tone>();\r\n\t\t\t}\r\n\t\t\tthis.activeModTones[i].length = Config.modCount;\r\n\t\t}\r\n\t\tthis.activeModTones.length = this.song.modChannelCount;\r\n\r\n\t\tlet samplesPerTick: number = this.getSamplesPerTick();\r\n\t\tlet bufferIndex: number = 0;\r\n\t\tlet ended: boolean = false;\r\n\r\n\t\t// Check the bounds of the playhead:\r\n\t\twhile (this.tickSampleCountdown <= 0) this.tickSampleCountdown += samplesPerTick;\r\n\t\tif (this.tickSampleCountdown > samplesPerTick) this.tickSampleCountdown = samplesPerTick;\r\n\t\tif (playSong) {\r\n\t\t\tif (this.beat >= this.song.beatsPerBar) {\r\n\t\t\t\tthis.bar++;\r\n\t\t\t\tthis.beat = 0;\r\n\t\t\t\tthis.part = 0;\r\n\t\t\t\tthis.tick = 0;\r\n\t\t\t\tthis.tickSampleCountdown = samplesPerTick;\r\n\r\n\t\t\t\tif (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\t\t\tif (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.bar >= this.song.barCount) {\r\n\t\t\t\tthis.bar = 0;\r\n\t\t\t\tif (this.loopRepeatCount != -1) {\r\n\t\t\t\t\tended = true;\r\n\t\t\t\t\tthis.pause();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//const synthStartTime: number = performance.now();\r\n\r\n\t\tconst stereoBufferLength: number = outputBufferLength * 4;\r\n\t\tif (this.samplesForNone == null || this.samplesForNone.length != stereoBufferLength ||\r\n\t\t\tthis.samplesForReverb == null || this.samplesForReverb.length != stereoBufferLength ||\r\n\t\t\tthis.samplesForChorus == null || this.samplesForChorus.length != stereoBufferLength ||\r\n\t\t\tthis.samplesForChorusReverb == null || this.samplesForChorusReverb.length != stereoBufferLength) {\r\n\t\t\tthis.samplesForNone = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.samplesForReverb = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.samplesForChorus = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.samplesForChorusReverb = new Float32Array(stereoBufferLength);\r\n\t\t\tthis.stereoBufferIndex = 0;\r\n\t\t}\r\n\t\tlet stereoBufferIndex: number = this.stereoBufferIndex;\r\n\t\tconst samplesForNone: Float32Array = this.samplesForNone;\r\n\t\tconst samplesForReverb: Float32Array = this.samplesForReverb;\r\n\t\tconst samplesForChorus: Float32Array = this.samplesForChorus;\r\n\t\tconst samplesForChorusReverb: Float32Array = this.samplesForChorusReverb;\r\n\r\n\t\t// Post processing parameters:\r\n\t\tconst volume: number = +this.volume;\r\n\t\tconst chorusDelayLine: Float32Array = this.chorusDelayLine;\r\n\t\tconst reverbDelayLine: Float32Array = this.reverbDelayLine;\r\n\t\tconst chorusDuration: number = 2.0;\r\n\t\tconst chorusAngle: number = Math.PI * 2.0 / (chorusDuration * this.samplesPerSecond);\r\n\t\tconst chorusRange: number = 150 * this.samplesPerSecond / 44100;\r\n\t\tconst chorusOffset0: number = 0x800 - 1.51 * chorusRange;\r\n\t\tconst chorusOffset1: number = 0x800 - 2.10 * chorusRange;\r\n\t\tconst chorusOffset2: number = 0x800 - 3.35 * chorusRange;\r\n\t\tconst chorusOffset3: number = 0x800 - 1.47 * chorusRange;\r\n\t\tconst chorusOffset4: number = 0x800 - 2.15 * chorusRange;\r\n\t\tconst chorusOffset5: number = 0x800 - 3.25 * chorusRange;\r\n\t\tlet chorusPhase: number = this.chorusPhase % (Math.PI * 2.0);\r\n\t\tlet chorusDelayPos: number = this.chorusDelayPos & 0x7FF;\r\n\t\tlet reverbDelayPos: number = this.reverbDelayPos & 0x3FFF;\r\n\t\tlet reverbFeedback0: number = +this.reverbFeedback0;\r\n\t\tlet reverbFeedback1: number = +this.reverbFeedback1;\r\n\t\tlet reverbFeedback2: number = +this.reverbFeedback2;\r\n\t\tlet reverbFeedback3: number = +this.reverbFeedback3;\r\n\t\tlet useReverb: number = this.song.reverb;\r\n\t\tif (this.isModActive(ModSetting.mstReverb, true)) {\r\n\t\t\tuseReverb = this.getModValue(ModSetting.mstReverb, true);\r\n\t\t}\r\n\t\tlet reverb: number = Math.pow(useReverb / Config.reverbRange, 0.667) * 0.425;\r\n\t\t//const highpassFilter: number = Math.pow(0.5, 400 / this.samplesPerSecond);\r\n\t\tconst limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond); // Default 4.0\r\n\t\tconst limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond); // Default 4000.0;\r\n\t\tconst compressionThreshold: number = this.song.compressionThreshold; // Default 1\r\n\t\tconst limitThreshold: number = this.song.limitThreshold; // Default 1\r\n\t\tconst compressionRatio: number = this.song.compressionRatio; // Default 1\r\n\t\tconst limitRatio: number = this.song.limitRatio; // Default 1\r\n\t\tconst masterGain: number = this.song.masterGain; // Default 1\r\n\t\t//let highpassInput: number = +this.highpassInput;\r\n\t\t//let highpassOutput: number = +this.highpassOutput;\r\n\t\tlet limit: number = +this.limit;\r\n\r\n\t\twhile (bufferIndex < outputBufferLength && !ended) {\r\n\r\n\t\t\tconst samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\r\n\t\t\tconst runLength: number = Math.min(Math.ceil(this.tickSampleCountdown), samplesLeftInBuffer);\r\n\r\n\t\t\tfor (let modChannel: number = 0, channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; modChannel < this.song.modChannelCount; modChannel++, channel++) {\r\n\t\t\t\t// Also determines mod tones.\r\n\t\t\t\tthis.determineCurrentActiveTones(this.song, channel, playSong);\r\n\r\n\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\tfor (let i: number = 0; i < this.activeModTones[modChannel][mod].count(); i++) {\r\n\t\t\t\t\t\tconst tone: Tone = this.activeModTones[modChannel][mod].get(i);\r\n\r\n\t\t\t\t\t\tif (this.song.channels[channel].muted == false)\r\n\t\t\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Handle next bar mods if they were set\r\n\t\t\tif (this.wantToSkip) {\r\n\t\t\t\tthis.wantToSkip = false;\r\n\t\t\t\tthis.skipBar();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isModActive(ModSetting.mstReverb, true)) {\r\n\t\t\t\treverb = Math.pow(this.getModValue(ModSetting.mstReverb, true) / Config.reverbRange, 0.667) * 0.425;\r\n\t\t\t}\r\n\r\n\t\t\t// Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\r\n\r\n\t\t\tconst tickSampleCountdown: number = this.tickSampleCountdown;\r\n\t\t\tconst startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n\t\t\tconst endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n\t\t\tconst ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n\t\t\tconst partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n\t\t\tconst partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n\t\t\tconst partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n\t\t\tconst partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < this.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\tlet useVibratoSpeed: number = instrument.vibratoSpeed;\r\n\r\n\t\t\t\t\tinstrument.LFOtime = instrument.nextLFOtime;\r\n\r\n\t\t\t\t\tif (this.isModActive(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx)) {\r\n\t\t\t\t\t\tuseVibratoSpeed = this.getModValue(ModSetting.mstVibratoSpeed, false, channel, instrumentIdx, false);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (useVibratoSpeed == 0) {\r\n\t\t\t\t\t\tinstrument.LFOtime = 0;\r\n\t\t\t\t\t\tinstrument.nextLFOtime = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinstrument.nextLFOtime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\r\n\t\t\t\tif (channel == this.liveInputChannel) {\r\n\t\t\t\t\tthis.determineLiveInputTones(this.song);\r\n\r\n\t\t\t\t\tfor (let i: number = 0; i < this.liveInputTones.count(); i++) {\r\n\t\t\t\t\t\tconst tone: Tone = this.liveInputTones.get(i);\r\n\t\t\t\t\t\t// Hmm. Will allow active input from a muted channel for now.\r\n\t\t\t\t\t\t//if (this.song.channels[channel].muted == false)\r\n\t\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.determineCurrentActiveTones(this.song, channel, playSong);\r\n\t\t\t\tfor (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n\t\t\t\t\tconst tone: Tone = this.activeTones[channel].get(i);\r\n\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, false, false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n\t\t\t\t\tconst tone: Tone = this.releasedTones[channel].get(i);\r\n\t\t\t\t\tif (tone.ticksSinceReleased >= tone.instrument.getTransition().releaseTicks) {\r\n\t\t\t\t\t\tthis.freeReleasedTone(channel, i);\r\n\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n\r\n\t\t\t\t\tthis.playTone(this.song, stereoBufferIndex, stereoBufferLength, channel, samplesPerTick, runLength, tone, true, shouldFadeOutFast);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Post processing:\r\n\t\t\tlet chorusTap0Index: number = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n\t\t\tlet chorusTap1Index: number = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n\t\t\tlet chorusTap2Index: number = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n\t\t\tlet chorusTap3Index: number = chorusDelayPos + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n\t\t\tlet chorusTap4Index: number = chorusDelayPos + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n\t\t\tlet chorusTap5Index: number = chorusDelayPos + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n\t\t\tchorusPhase += chorusAngle * runLength;\r\n\t\t\tconst chorusTap0End: number = chorusDelayPos + runLength + chorusOffset0 - chorusRange * Math.sin(chorusPhase + 0);\r\n\t\t\tconst chorusTap1End: number = chorusDelayPos + runLength + chorusOffset1 - chorusRange * Math.sin(chorusPhase + 2.1);\r\n\t\t\tconst chorusTap2End: number = chorusDelayPos + runLength + chorusOffset2 - chorusRange * Math.sin(chorusPhase + 4.2);\r\n\t\t\tconst chorusTap3End: number = chorusDelayPos + runLength + 0x400 + chorusOffset3 - chorusRange * Math.sin(chorusPhase + 3.2);\r\n\t\t\tconst chorusTap4End: number = chorusDelayPos + runLength + 0x400 + chorusOffset4 - chorusRange * Math.sin(chorusPhase + 5.3);\r\n\t\t\tconst chorusTap5End: number = chorusDelayPos + runLength + 0x400 + chorusOffset5 - chorusRange * Math.sin(chorusPhase + 1.0);\r\n\t\t\tconst chorusTap0Delta: number = (chorusTap0End - chorusTap0Index) / runLength;\r\n\t\t\tconst chorusTap1Delta: number = (chorusTap1End - chorusTap1Index) / runLength;\r\n\t\t\tconst chorusTap2Delta: number = (chorusTap2End - chorusTap2Index) / runLength;\r\n\t\t\tconst chorusTap3Delta: number = (chorusTap3End - chorusTap3Index) / runLength;\r\n\t\t\tconst chorusTap4Delta: number = (chorusTap4End - chorusTap4Index) / runLength;\r\n\t\t\tconst chorusTap5Delta: number = (chorusTap5End - chorusTap5Index) / runLength;\r\n\t\t\tconst runEnd: number = bufferIndex + runLength;\r\n\t\t\tfor (let i: number = bufferIndex; i < runEnd; i++) {\r\n\t\t\t\tconst bufferIndexL: number = stereoBufferIndex;\r\n\t\t\t\tconst bufferIndexR: number = stereoBufferIndex + 1;\r\n\t\t\t\tconst sampleForNoneL: number = samplesForNone[bufferIndexL]; samplesForNone[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForNoneR: number = samplesForNone[bufferIndexR]; samplesForNone[bufferIndexR] = 0.0;\r\n\t\t\t\tconst sampleForReverbL: number = samplesForReverb[bufferIndexL]; samplesForReverb[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForReverbR: number = samplesForReverb[bufferIndexR]; samplesForReverb[bufferIndexR] = 0.0;\r\n\t\t\t\tconst sampleForChorusL: number = samplesForChorus[bufferIndexL]; samplesForChorus[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForChorusR: number = samplesForChorus[bufferIndexR]; samplesForChorus[bufferIndexR] = 0.0;\r\n\t\t\t\tconst sampleForChorusReverbL: number = samplesForChorusReverb[bufferIndexL]; samplesForChorusReverb[bufferIndexL] = 0.0;\r\n\t\t\t\tconst sampleForChorusReverbR: number = samplesForChorusReverb[bufferIndexR]; samplesForChorusReverb[bufferIndexR] = 0.0;\r\n\t\t\t\tstereoBufferIndex += 2;\r\n\r\n\t\t\t\tconst combinedChorusL: number = sampleForChorusL + sampleForChorusReverbL;\r\n\t\t\t\tconst combinedChorusR: number = sampleForChorusR + sampleForChorusReverbR;\r\n\r\n\t\t\t\tconst chorusTap0Ratio: number = chorusTap0Index % 1;\r\n\t\t\t\tconst chorusTap1Ratio: number = chorusTap1Index % 1;\r\n\t\t\t\tconst chorusTap2Ratio: number = chorusTap2Index % 1;\r\n\t\t\t\tconst chorusTap3Ratio: number = chorusTap3Index % 1;\r\n\t\t\t\tconst chorusTap4Ratio: number = chorusTap4Index % 1;\r\n\t\t\t\tconst chorusTap5Ratio: number = chorusTap5Index % 1;\r\n\t\t\t\tconst chorusTap0A: number = chorusDelayLine[(chorusTap0Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap0B: number = chorusDelayLine[(chorusTap0Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap1A: number = chorusDelayLine[(chorusTap1Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap1B: number = chorusDelayLine[(chorusTap1Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap2A: number = chorusDelayLine[(chorusTap2Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap2B: number = chorusDelayLine[(chorusTap2Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap3A: number = chorusDelayLine[(chorusTap3Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap3B: number = chorusDelayLine[(chorusTap3Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap4A: number = chorusDelayLine[(chorusTap4Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap4B: number = chorusDelayLine[(chorusTap4Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap5A: number = chorusDelayLine[(chorusTap5Index) & 0x7FF];\r\n\t\t\t\tconst chorusTap5B: number = chorusDelayLine[(chorusTap5Index + 1) & 0x7FF];\r\n\t\t\t\tconst chorusTap0: number = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\r\n\t\t\t\tconst chorusTap1: number = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\r\n\t\t\t\tconst chorusTap2: number = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\r\n\t\t\t\tconst chorusTap3: number = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\r\n\t\t\t\tconst chorusTap4: number = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\r\n\t\t\t\tconst chorusTap5: number = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\r\n\t\t\t\tconst chorusSampleL = 0.5 * (combinedChorusL - chorusTap0 + chorusTap1 - chorusTap2);\r\n\t\t\t\tconst chorusSampleR = 0.5 * (combinedChorusR - chorusTap3 + chorusTap4 - chorusTap5);\r\n\t\t\t\tchorusDelayLine[chorusDelayPos] = combinedChorusL;\r\n\t\t\t\tchorusDelayLine[(chorusDelayPos + 0x400) & 0x7FF] = combinedChorusR;\r\n\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & 0x7FF;\r\n\t\t\t\tchorusTap0Index += chorusTap0Delta;\r\n\t\t\t\tchorusTap1Index += chorusTap1Delta;\r\n\t\t\t\tchorusTap2Index += chorusTap2Delta;\r\n\t\t\t\tchorusTap3Index += chorusTap3Delta;\r\n\t\t\t\tchorusTap4Index += chorusTap4Delta;\r\n\t\t\t\tchorusTap5Index += chorusTap5Delta;\r\n\r\n\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\r\n\t\t\t\t// good ratios:\t\t0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\r\n\t\t\t\t// Delay lengths:\t3041\t + 3385\t\t+ 4481\t+  5477 = 16384 = 2^14\r\n\t\t\t\t// Buffer offsets:\t3041\t-> 6426\t   -> 10907 -> 16384\r\n\t\t\t\tconst reverbDelayPos1: number = (reverbDelayPos + 3041) & 0x3FFF;\r\n\t\t\t\tconst reverbDelayPos2: number = (reverbDelayPos + 6426) & 0x3FFF;\r\n\t\t\t\tconst reverbDelayPos3: number = (reverbDelayPos + 10907) & 0x3FFF;\r\n\t\t\t\tconst reverbSample0: number = (reverbDelayLine[reverbDelayPos]);\r\n\t\t\t\tconst reverbSample1: number = reverbDelayLine[reverbDelayPos1];\r\n\t\t\t\tconst reverbSample2: number = reverbDelayLine[reverbDelayPos2];\r\n\t\t\t\tconst reverbSample3: number = reverbDelayLine[reverbDelayPos3];\r\n\t\t\t\tconst reverbTemp0: number = -(reverbSample0 + sampleForChorusReverbL + sampleForReverbL) + reverbSample1;\r\n\t\t\t\tconst reverbTemp1: number = -(reverbSample0 + sampleForChorusReverbR + sampleForReverbR) - reverbSample1;\r\n\t\t\t\tconst reverbTemp2: number = -reverbSample2 + reverbSample3;\r\n\t\t\t\tconst reverbTemp3: number = -reverbSample2 - reverbSample3;\r\n\t\t\t\treverbFeedback0 += ((reverbTemp0 + reverbTemp2) * reverb - reverbFeedback0) * 0.5;\r\n\t\t\t\treverbFeedback1 += ((reverbTemp1 + reverbTemp3) * reverb - reverbFeedback1) * 0.5;\r\n\t\t\t\treverbFeedback2 += ((reverbTemp0 - reverbTemp2) * reverb - reverbFeedback2) * 0.5;\r\n\t\t\t\treverbFeedback3 += ((reverbTemp1 - reverbTemp3) * reverb - reverbFeedback3) * 0.5;\r\n\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbFeedback0;\r\n\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbFeedback1;\r\n\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbFeedback2;\r\n\t\t\t\treverbDelayLine[reverbDelayPos] = reverbFeedback3;\r\n\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & 0x3FFF;\r\n\r\n\t\t\t\t// Apply master pre-gain to the sound, before limiting. Master gain slider is 0-5, but it's squared for more range (0-25).\r\n\t\t\t\tconst sampleL = masterGain * masterGain * (sampleForNoneL + chorusSampleL + sampleForReverbL + reverbSample1 + reverbSample2 + reverbSample3);\r\n\t\t\t\tconst sampleR = masterGain * masterGain * (sampleForNoneR + chorusSampleR + sampleForReverbR + reverbSample0 + reverbSample2 - reverbSample3);\r\n\r\n\t\t\t\t/*\r\n\t\t\t\thighpassOutput = highpassOutput * highpassFilter + sample - highpassInput;\r\n\t\t\t\thighpassInput = sample;\r\n\t\t\t\t// use highpassOutput instead of sample below?\r\n\t\t\t\t*/\r\n\r\n\t\t\t\t// A compressor/limiter.\r\n\t\t\t\tconst absL: number = sampleL < 0.0 ? -sampleL : sampleL;\r\n\t\t\t\tconst absR: number = sampleR < 0.0 ? -sampleR : sampleR;\r\n\t\t\t\tconst abs: number = absL > absR ? absL : absR;\r\n\t\t\t\tthis.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\r\n\t\t\t\t// Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\r\n\t\t\t\tconst limitRange: number = (+(abs > compressionThreshold)) + (+(abs > limitThreshold));\r\n\t\t\t\t// Determine the target amplification based on the range of the curve\r\n\t\t\t\tconst limitTarget: number =\r\n\t\t\t\t\t(+(limitRange == 0)) * (((abs + 1 - compressionThreshold) * 0.8 + 0.25) * compressionRatio + 1.05 * (1 - compressionRatio))\r\n\t\t\t\t\t+ (+(limitRange == 1)) * (1.05)\r\n\t\t\t\t\t+ (+(limitRange == 2)) * (1.05 * ((abs + 1 - limitThreshold) * limitRatio + (1 - limitThreshold)));\r\n\t\t\t\t// Move the limit towards the target\r\n\t\t\t\tlimit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\r\n\t\t\t\tconst limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\r\n\t\t\t\toutputDataL[i] = sampleL * limitedVolume;\r\n\t\t\t\toutputDataR[i] = sampleR * limitedVolume;\r\n\r\n\t\t\t\tthis.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\r\n\t\t\t}\r\n\r\n\t\t\tbufferIndex += runLength;\r\n\r\n\t\t\tthis.tickSampleCountdown -= runLength;\r\n\t\t\tif (this.tickSampleCountdown <= 0) {\r\n\r\n\t\t\t\t// Track how long tones have been released, and free them if there are too many.\r\n\t\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tfor (let i: number = 0; i < this.releasedTones[channel].count(); i++) {\r\n\t\t\t\t\t\tconst tone: Tone = this.releasedTones[channel].get(i);\r\n\t\t\t\t\t\ttone.ticksSinceReleased++;\r\n\r\n\t\t\t\t\t\tconst shouldFadeOutFast: boolean = (i + this.activeTones[channel].count() >= Config.maximumTonesPerChannel);\r\n\t\t\t\t\t\tif (shouldFadeOutFast) {\r\n\t\t\t\t\t\t\tthis.freeReleasedTone(channel, i);\r\n\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Update arpeggio time, which is used to calculate arpeggio position\r\n\t\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n\t\t\t\t\t\tlet instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet useArpeggioSpeed: number = instrument.arpeggioSpeed;\r\n\t\t\t\t\t\tif (this.isModActive(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx)) {\r\n\t\t\t\t\t\t\tuseArpeggioSpeed = this.getModValue(ModSetting.mstArpeggioSpeed, false, channel, instrumentIdx, false);\r\n\t\t\t\t\t\t\tif (Number.isInteger(useArpeggioSpeed)) {\r\n\t\t\t\t\t\t\t\tinstrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// Linear interpolate arpeggio values\r\n\t\t\t\t\t\t\t\tinstrument.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tinstrument.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.tick++;\r\n\t\t\t\tthis.tickSampleCountdown += samplesPerTick;\r\n\t\t\t\tif (this.tick == Config.ticksPerPart) {\r\n\t\t\t\t\tthis.tick = 0;\r\n\t\t\t\t\tthis.part++;\r\n\t\t\t\t\tthis.liveInputDuration--;\r\n\t\t\t\t\tvar atEnd = this.part + this.beat * Config.partsPerBeat >= this.findPartsInBar(this.bar) - 1;\r\n\t\t\t\t\t// Check if any active tones should be released.\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\t// Check if we're at the end of the bar and have a tie-over transition. If so, do not free tone\r\n\t\t\t\t\t\tvar carryOver = false;\r\n\t\t\t\t\t\tvar toneCount = this.activeTones[channel].count();\r\n\t\t\t\t\t\tvar pattern = this.song.getPattern(channel, this.bar);\r\n\t\t\t\t\t\tif (pattern != null && atEnd) {\r\n\t\t\t\t\t\t\tvar instrument = pattern.instrument;\r\n\t\t\t\t\t\t\tif (this.song.channels[channel].instruments[instrument].tieNoteTransition && toneCount > 0) {\r\n\t\t\t\t\t\t\t\t// Verify that all tie conditions are met\r\n\t\t\t\t\t\t\t\t// 1. Check for a note in this channel at the start of the next bar\r\n\t\t\t\t\t\t\t\t// 2. Check that the note's volume start matches the current volume\r\n\t\t\t\t\t\t\t\t// 3. Check that the shape (pitches, chord size) is a match\r\n\t\t\t\t\t\t\t\t// 4. Check that the instruments are the same\r\n\t\t\t\t\t\t\t\tvar targetBar = this.bar + 1;\r\n\t\t\t\t\t\t\t\tif (targetBar >= this.song.barCount || (targetBar >= this.song.loopStart + this.song.loopLength && this.loopRepeatCount != 0)) {\r\n\t\t\t\t\t\t\t\t\ttargetBar = this.song.loopStart;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar nextPattern = this.song.getPattern(channel, targetBar);\r\n\t\t\t\t\t\t\t\tvar currNote = this.activeTones[channel].get(0).note;\r\n\t\t\t\t\t\t\t\tif (currNote != null) {\r\n\t\t\t\t\t\t\t\t\tvar pin = 0;\r\n\t\t\t\t\t\t\t\t\twhile (currNote.pins[pin].time + currNote.start < this.part + this.beat * Config.partsPerBeat && pin < currNote.pins.length - 1)\r\n\t\t\t\t\t\t\t\t\t\tpin++;\r\n\t\t\t\t\t\t\t\t\tvar currVolume = currNote.pins[pin].volume;\r\n\t\t\t\t\t\t\t\t\tvar lastInterval = currNote.pins[pin].interval;\r\n\r\n\t\t\t\t\t\t\t\t\tif (nextPattern != null && nextPattern.instrument == instrument) {\r\n\t\t\t\t\t\t\t\t\t\tfor (let i: number = 0; i < nextPattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (nextPattern.notes[i].start == 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t&& nextPattern.notes[i].pins[0].volume == currVolume\r\n\t\t\t\t\t\t\t\t\t\t\t\t&& nextPattern.notes[i].pitches.length == currNote.pitches.length) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tcarryOver = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (let j: number = 0; j < currNote.pitches.length; j++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Allow any pitch order\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (nextPattern.notes[i].pitches.findIndex((p) => p == currNote!.pitches[j] + lastInterval) == -1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcarryOver = false;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tj = currNote.pitches.length;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\ti = nextPattern.notes.length;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (carryOver) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Prior to an actual tie, all releasing for hard transitions also needs to be\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// cancelled. So, this check is ran a few parts before the end of a bar too.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// In those cases, just set tyingOver to 0 for that duration to cancel release\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// handling, but not affect note start time calculations.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.part + this.beat * Config.partsPerBeat < this.findPartsInBar(this.bar)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Only does this if it is needed, so if we're long tying (next else-if below) then don't ruin the math.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.tyingOver[channel] < 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] = 0;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Special case: tying over a whole bar, just add the length.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse if (currNote.start == 0 && this.tyingOver[channel] >= 0) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] += this.part + this.beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Set tyingOver to a number >= 0 representing how many parts back the tie note started.\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] = this.part + this.beat * Config.partsPerBeat - currNote.start;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let i: number = 0; i < this.activeTones[channel].count(); i++) {\r\n\t\t\t\t\t\t\tconst tone: Tone = this.activeTones[channel].get(i);\r\n\t\t\t\t\t\t\tconst transition: Transition = tone.instrument.getTransition();\r\n\r\n\t\t\t\t\t\t\tif (tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n\t\t\t\t\t\t\t\t// Free tone if the transition allows\r\n\t\t\t\t\t\t\t\tif (!(transition.isSeamless || tone.instrument.clicklessTransition || this.tyingOver[channel] >= 0)) {\r\n\t\t\t\t\t\t\t\t\tif (transition.releases) {\r\n\t\t\t\t\t\t\t\t\t\tthis.releaseTone(channel, tone);\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis.freeTone(tone);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.activeTones[channel].remove(i);\r\n\t\t\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// End of note: if not actively trying to carry over, kill note tie\r\n\t\t\t\t\t\t\t\tif (!carryOver) {\r\n\t\t\t\t\t\t\t\t\tthis.tyingOver[channel] = -1;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this.song.modChannelCount; channel++) {\r\n\t\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < this.activeModTones[channel][mod].count(); i++) {\r\n\t\t\t\t\t\t\t\tconst tone: Tone = this.activeModTones[channel][mod].get(i);\r\n\t\t\t\t\t\t\t\tconst transition: Transition = tone.instrument.getTransition();\r\n\t\t\t\t\t\t\t\tif (!transition.isSeamless && tone.note != null && tone.note.end == this.part + this.beat * Config.partsPerBeat) {\r\n\t\t\t\t\t\t\t\t\tthis.freeTone(tone);\r\n\t\t\t\t\t\t\t\t\tthis.activeModTones[channel][mod].remove(i);\r\n\t\t\t\t\t\t\t\t\ti--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.part == Config.partsPerBeat) {\r\n\t\t\t\t\t\tthis.part = 0;\r\n\r\n\t\t\t\t\t\tif (playSong) {\r\n\t\t\t\t\t\t\tthis.beat++;\r\n\t\t\t\t\t\t\tif (this.beat == this.song.beatsPerBar) {\r\n\t\t\t\t\t\t\t\t// bar changed, reset for next bar:\r\n\t\t\t\t\t\t\t\tthis.beat = 0;\r\n\t\t\t\t\t\t\t\tthis.bar++;\r\n\t\t\t\t\t\t\t\tif (this.loopRepeatCount != 0 && this.bar == this.song.loopStart + this.song.loopLength) {\r\n\t\t\t\t\t\t\t\t\tthis.bar = this.song.loopStart;\r\n\t\t\t\t\t\t\t\t\tif (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (this.bar >= this.song.barCount) {\r\n\t\t\t\t\t\t\t\t\tthis.bar = 0;\r\n\t\t\t\t\t\t\t\t\tif (this.loopRepeatCount != -1) {\r\n\t\t\t\t\t\t\t\t\t\tended = true;\r\n\t\t\t\t\t\t\t\t\t\tthis.resetEffects();\r\n\t\t\t\t\t\t\t\t\t\tthis.pause();\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Update mod values so that next values copy to current values\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tif (this.nextModValues != null && this.nextModValues[setting] != null)\r\n\t\t\t\t\tthis.modValues[setting] = this.nextModValues[setting];\r\n\t\t\t}\r\n\r\n\t\t\t// Set samples per tick if song tempo mods changed it\r\n\t\t\tif (this.isModActive(ModSetting.mstTempo, true)) {\r\n\t\t\t\tsamplesPerTick = this.getSamplesPerTick();\r\n\t\t\t\tthis.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\r\n\t\t\t}\r\n\r\n\t\t\t// Bound LFO times to be within their period (to keep values from getting large)\r\n\t\t\t// I figured this modulo math probably doesn't have to happen every LFO tick.\r\n\t\t\tfor (let channel: number = 0; channel < this.song.pitchChannelCount; channel++) {\r\n\t\t\t\tfor (let instrument of this.song.channels[channel].instruments) {\r\n\t\t\t\t\tinstrument.nextLFOtime = (instrument.nextLFOtime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\r\n\t\t\t\t\tinstrument.arpTime = (instrument.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tfor (let channel: number = 0; channel < channelCount; channel++) {\r\n\t\t\t\t\tfor (let instrument: number = 0; instrument < this.song.instrumentsPerChannel; instrument++) {\r\n\t\t\t\t\t\tif (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n\t\t\t\t\t\t\tthis.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Optimization: Avoid persistent reverb values in the float denormal range.\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < reverbFeedback0 && reverbFeedback0 < epsilon) reverbFeedback0 = 0.0;\r\n\t\tif (-epsilon < reverbFeedback1 && reverbFeedback1 < epsilon) reverbFeedback1 = 0.0;\r\n\t\tif (-epsilon < reverbFeedback2 && reverbFeedback2 < epsilon) reverbFeedback2 = 0.0;\r\n\t\tif (-epsilon < reverbFeedback3 && reverbFeedback3 < epsilon) reverbFeedback3 = 0.0;\r\n\t\t//if (-epsilon < highpassInput && highpassInput < epsilon) highpassInput = 0.0;\r\n\t\t//if (-epsilon < highpassOutput && highpassOutput < epsilon) highpassOutput = 0.0;\r\n\t\tif (-epsilon < limit && limit < epsilon) limit = 0.0;\r\n\r\n\t\tthis.stereoBufferIndex = (this.stereoBufferIndex + outputBufferLength * 2) % stereoBufferLength;\r\n\t\tthis.chorusPhase = chorusPhase;\r\n\t\tthis.chorusDelayPos = chorusDelayPos;\r\n\t\tthis.reverbDelayPos = reverbDelayPos;\r\n\t\tthis.reverbFeedback0 = reverbFeedback0;\r\n\t\tthis.reverbFeedback1 = reverbFeedback1;\r\n\t\tthis.reverbFeedback2 = reverbFeedback2;\r\n\t\tthis.reverbFeedback3 = reverbFeedback3;\r\n\t\t//this.highpassInput = highpassInput;\r\n\t\t//this.highpassOutput = highpassOutput;\r\n\t\tthis.limit = limit;\r\n\r\n\t\tif (playSong) {\r\n\t\t\tthis.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / this.song.beatsPerBar + this.bar;\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\tconst synthDuration: number = performance.now() - synthStartTime;\r\n\t\t// Performance measurements:\r\n\t\tsamplesAccumulated += outputBufferLength;\r\n\t\tsamplePerformance += synthDuration;\r\n\t\t\r\n\t\tif (samplesAccumulated >= 44100 * 4) {\r\n\t\tconst secondsGenerated = samplesAccumulated / 44100;\r\n\t\tconst secondsRequired = samplePerformance / 1000;\r\n\t\tconst ratio = secondsRequired / secondsGenerated;\r\n\t\tconsole.log(ratio);\r\n\t\tsamplePerformance = 0;\r\n\t\tsamplesAccumulated = 0;\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tprivate freeTone(tone: Tone): void {\r\n\t\tthis.tonePool.pushBack(tone);\r\n\t}\r\n\r\n\tprivate newTone(): Tone {\r\n\t\tif (this.tonePool.count() > 0) {\r\n\t\t\tconst tone: Tone = this.tonePool.popBack();\r\n\t\t\ttone.reset();\r\n\t\t\ttone.active = false;\r\n\t\t\treturn tone;\r\n\t\t}\r\n\t\treturn new Tone();\r\n\t}\r\n\r\n\tprivate releaseTone(channel: number, tone: Tone): void {\r\n\t\tif (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n\t\t\tthis.releasedTones[channel].pushFront(tone);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t/*\r\n\t\t\tfor (let mod = 0; mod < Config.modCount; mod++) {\r\n\t\t\tthis.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].pushFront(tone);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t}\r\n\t}\r\n\r\n\tprivate freeReleasedTone(channel: number, toneIndex: number): void {\r\n\t\tif (this.song == null || !this.song.getChannelIsMod(channel)) {\r\n\t\t\tthis.freeTone(this.releasedTones[channel].get(toneIndex));\r\n\t\t\tthis.releasedTones[channel].remove(toneIndex);\r\n\t\t} else {\r\n\t\t\t/*\r\n\t\t\tfor (let mod = 0; mod < Config.modCount; mod++) {\r\n\t\t\tthis.freeTone(this.releasedModTones[channel - (this.song.pitchChannelCount + this.song.noiseChannelCount)][mod].get(toneIndex));\r\n\t\t\tthis.releasedModTones[channel][mod].remove(toneIndex);\r\n\t\t\t}\r\n\t\t\t*/\r\n\t\t}\r\n\t}\r\n\r\n\tpublic freeAllTones(): void {\r\n\t\twhile (this.liveInputTones.count() > 0) {\r\n\t\t\tthis.freeTone(this.liveInputTones.popBack());\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this.activeTones.length; i++) {\r\n\t\t\twhile (this.activeTones[i].count() > 0) {\r\n\t\t\t\tthis.freeTone(this.activeTones[i].popBack());\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this.releasedTones.length; i++) {\r\n\t\t\twhile (this.releasedTones[i].count() > 0) {\r\n\t\t\t\tthis.freeTone(this.releasedTones[i].popBack());\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.activeModTones.length; i++) {\r\n\t\t\tfor (let mod = 0; mod < this.activeModTones[i].length; mod++) {\r\n\t\t\t\twhile (this.activeModTones[i][mod].count() > 0) {\r\n\t\t\t\t\tthis.freeTone(this.activeModTones[i][mod].popBack());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t/*\r\n\t\tfor (let i = 0; i < this.releasedModTones.length; i++) {\r\n\t\tfor (let mod = 0; mod < this.releasedModTones[i].length; mod++) {\r\n\t\twhile (this.releasedModTones[i][mod].count() > 0) {\r\n\t\tthis.freeTone(this.releasedModTones[i][mod].popBack());\r\n\t\t}\r\n\t\t}\r\n\t\t}\r\n\t\t*/\r\n\t}\r\n\r\n\tprivate determineLiveInputTones(song: Song): void {\r\n\t\tconst toneList: Deque<Tone> = this.liveInputTones;\r\n\t\tconst pitches: number[] = this.liveInputPitches;\r\n\t\tlet toneCount: number = 0;\r\n\t\tif (this.liveInputDuration > 0) {\r\n\t\t\tconst instrument: Instrument = song.channels[this.liveInputChannel].instruments[song.getPatternInstrument(this.liveInputChannel, this.bar)];\r\n\r\n\t\t\tif (instrument.getChord().arpeggiates) {\r\n\t\t\t\tlet tone: Tone;\r\n\t\t\t\tif (toneList.count() == 0) {\r\n\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t} else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n\t\t\t\t\tthis.releaseTone(this.liveInputChannel, toneList.popFront());\r\n\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttone = toneList.get(0);\r\n\t\t\t\t}\r\n\t\t\t\ttoneCount = 1;\r\n\r\n\t\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\t\t\ttone.pitches[i] = pitches[i];\r\n\t\t\t\t}\r\n\t\t\t\ttone.pitchCount = pitches.length;\r\n\t\t\t\ttone.chordSize = 1;\r\n\t\t\t\ttone.instrument = instrument;\r\n\t\t\t\ttone.note = tone.prevNote = tone.nextNote = null;\r\n\t\t\t} else {\r\n\t\t\t\t//const transition: Transition = instrument.getTransition();\r\n\t\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\t\t\t//const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n\t\t\t\t\tlet tone: Tone;\r\n\t\t\t\t\tif (toneList.count() <= i) {\r\n\t\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t\t} else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n\t\t\t\t\t\tthis.releaseTone(this.liveInputChannel, toneList.get(i));\r\n\t\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\t\ttoneList.set(i, tone);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttone = toneList.get(i);\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoneCount++;\r\n\r\n\t\t\t\t\ttone.pitches[0] = pitches[i];\r\n\t\t\t\t\ttone.pitchCount = 1;\r\n\t\t\t\t\ttone.chordSize = pitches.length;\r\n\t\t\t\t\ttone.instrument = instrument;\r\n\t\t\t\t\ttone.note = tone.prevNote = tone.nextNote = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile (toneList.count() > toneCount) {\r\n\t\t\tthis.releaseTone(this.liveInputChannel, toneList.popBack());\r\n\t\t}\r\n\r\n\t\tthis.liveInputStarted = false;\r\n\t}\r\n\r\n\tprivate determineCurrentActiveTones(song: Song, channel: number, playSong: boolean): void {\r\n\t\tconst instrument: Instrument = song.channels[channel].instruments[song.getPatternInstrument(channel, this.bar)];\r\n\t\tconst pattern: Pattern | null = song.getPattern(channel, this.bar);\r\n\t\tconst time: number = this.part + this.beat * Config.partsPerBeat;\r\n\r\n\t\tif (playSong && song.getChannelIsMod(channel) && !song.channels[channel].muted) {\r\n\t\t\t// Offset channel (first mod channel is 0 index in mod tone array)\r\n\t\t\tlet modChannelIdx = channel - (song.pitchChannelCount + song.noiseChannelCount);\r\n\r\n\t\t\t// For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\r\n\t\t\t// The same transition logic should apply though, even though it isn't really used by mod channels.\r\n\t\t\tlet notes: (Note | null)[] = [];\r\n\t\t\tlet prevNotes: (Note | null)[] = [];\r\n\t\t\tlet nextNotes: (Note | null)[] = [];\r\n\t\t\tlet fillCount: number = Config.modCount;\r\n\t\t\twhile (fillCount--) {\r\n\t\t\t\tnotes.push(null);\r\n\t\t\t\tprevNotes.push(null);\r\n\t\t\t\tnextNotes.push(null);\r\n\t\t\t}\r\n\r\n\t\t\tif (pattern != null) {\r\n\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\tif (pattern.notes[i].end <= time) {\r\n\t\t\t\t\t\t// Actually need to check which note starts closer to the start of this note.\r\n\t\t\t\t\t\tif (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n\t\t\t\t\t\t\tprevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n\t\t\t\t\t\tnotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (pattern.notes[i].start > time) {\r\n\t\t\t\t\t\t// Actually need to check which note starts closer to the end of this note.\r\n\t\t\t\t\t\tif (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n\t\t\t\t\t\t\tnextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\t\tconst toneList: Deque<Tone> = this.activeModTones[modChannelIdx][mod];\r\n\t\t\t\tif (notes[mod] != null) {\r\n\t\t\t\t\tif (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\r\n\t\t\t\t\tif (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\r\n\t\t\t\t\tthis.syncTones(channel, toneList, instrument, (notes[mod] as Note).pitches, (notes[mod] as Note), (prevNotes[mod] as Note), (nextNotes[mod] as Note), time);\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (toneList.count() > 0) {\r\n\t\t\t\t\t\tthis.freeTone(toneList.popBack());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (!song.getChannelIsMod(channel)) {\r\n\r\n\t\t\tlet note: Note | null = null;\r\n\t\t\tlet prevNote: Note | null = null;\r\n\t\t\tlet nextNote: Note | null = null;\r\n\r\n\t\t\tif (playSong && pattern != null && !song.channels[channel].muted) {\r\n\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\tif (pattern.notes[i].end <= time) {\r\n\t\t\t\t\t\tprevNote = pattern.notes[i];\r\n\t\t\t\t\t} else if (pattern.notes[i].start <= time && pattern.notes[i].end > time) {\r\n\t\t\t\t\t\tnote = pattern.notes[i];\r\n\t\t\t\t\t} else if (pattern.notes[i].start > time) {\r\n\t\t\t\t\t\tnextNote = pattern.notes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst toneList: Deque<Tone> = this.activeTones[channel];\r\n\t\t\tif (note != null) {\r\n\t\t\t\tif (prevNote != null && prevNote.end != note.start) prevNote = null;\r\n\t\t\t\tif (nextNote != null && nextNote.start != note.end) nextNote = null;\r\n\t\t\t\tthis.syncTones(channel, toneList, instrument, note.pitches, note, prevNote, nextNote, time);\r\n\t\t\t} else {\r\n\t\t\t\twhile (toneList.count() > 0) {\r\n\t\t\t\t\t// Automatically free or release seamless tones if there's no new note to take over.\r\n\t\t\t\t\tif (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n\t\t\t\t\t\tthis.releaseTone(channel, toneList.popBack());\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.freeTone(toneList.popBack());\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate syncTones(channel: number, toneList: Deque<Tone>, instrument: Instrument, pitches: number[], note: Note, prevNote: Note | null, nextNote: Note | null, currentPart: number): void {\r\n\t\tlet toneCount: number = 0;\r\n\t\t// Mod channels don't ever tie over, so the real start point is always simply the note's start.\r\n\t\tlet noteStartAdjust = (channel < this.song!.pitchChannelCount + this.song!.noiseChannelCount)\r\n\t\t\t? Math.max(0, this.tyingOver[channel])\r\n\t\t\t: 0;\r\n\t\tif (instrument.getChord().arpeggiates) {\r\n\t\t\tlet tone: Tone;\r\n\t\t\tif (toneList.count() == 0) {\r\n\t\t\t\ttone = this.newTone();\r\n\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t} else {\r\n\t\t\t\ttone = toneList.get(0);\r\n\t\t\t}\r\n\t\t\ttoneCount = 1;\r\n\r\n\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\t\t\t\ttone.pitches[i] = pitches[i];\r\n\t\t\t}\r\n\t\t\ttone.pitchCount = pitches.length;\r\n\t\t\ttone.chordSize = 1;\r\n\t\t\ttone.instrument = instrument;\r\n\t\t\ttone.note = note;\r\n\t\t\ttone.noteStart = note.start - noteStartAdjust;\r\n\t\t\ttone.noteEnd = note.end;\r\n\t\t\ttone.prevNote = prevNote;\r\n\t\t\ttone.nextNote = nextNote;\r\n\t\t\ttone.prevNotePitchIndex = 0;\r\n\t\t\ttone.nextNotePitchIndex = 0;\r\n\t\t} else {\r\n\t\t\tconst transition: Transition = instrument.getTransition();\r\n\t\t\tfor (let i: number = 0; i < pitches.length; i++) {\r\n\r\n\t\t\t\tconst strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\t\t\t\tlet prevNoteForThisTone: Note | null = (prevNote && prevNote.pitches.length > i) ? prevNote : null;\r\n\t\t\t\tlet noteForThisTone: Note = note;\r\n\t\t\t\tlet nextNoteForThisTone: Note | null = (nextNote && nextNote.pitches.length > i) ? nextNote : null;\r\n\t\t\t\tlet noteStart: number = noteForThisTone.start + strumOffsetParts - noteStartAdjust;\r\n\r\n\t\t\t\tif (noteStart > currentPart) {\r\n\t\t\t\t\tif (toneList.count() > i && (transition.isSeamless || this.tyingOver[channel] >= 0) && prevNoteForThisTone != null) {\r\n\t\t\t\t\t\tnextNoteForThisTone = noteForThisTone;\r\n\t\t\t\t\t\tnoteForThisTone = prevNoteForThisTone;\r\n\t\t\t\t\t\tprevNoteForThisTone = null;\r\n\t\t\t\t\t\tnoteStart = noteForThisTone.start + strumOffsetParts - noteStartAdjust;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet noteEnd: number = noteForThisTone.end;\r\n\t\t\t\tif ((transition.isSeamless || this.tyingOver[channel] >= 0) && nextNoteForThisTone != null) {\r\n\t\t\t\t\tnoteEnd = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEnd + strumOffsetParts);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tlet tone: Tone;\r\n\t\t\t\tif (toneList.count() <= i) {\r\n\t\t\t\t\ttone = this.newTone();\r\n\t\t\t\t\ttoneList.pushBack(tone);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttone = toneList.get(i);\r\n\t\t\t\t}\r\n\t\t\t\ttoneCount++;\r\n\r\n\t\t\t\ttone.pitches[0] = noteForThisTone.pitches[i];\r\n\t\t\t\ttone.pitchCount = 1;\r\n\t\t\t\ttone.chordSize = noteForThisTone.pitches.length;\r\n\t\t\t\ttone.instrument = instrument;\r\n\t\t\t\ttone.note = noteForThisTone;\r\n\t\t\t\ttone.noteStart = noteStart;\r\n\t\t\t\ttone.noteEnd = noteEnd;\r\n\t\t\t\ttone.prevNote = prevNoteForThisTone;\r\n\t\t\t\ttone.nextNote = nextNoteForThisTone;\r\n\t\t\t\ttone.prevNotePitchIndex = i;\r\n\t\t\t\ttone.nextNotePitchIndex = i;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twhile (toneList.count() > toneCount) {\r\n\t\t\t// Automatically free or release seamless tones if there's no new note to take over.\r\n\t\t\tif (toneList.peakBack().instrument.getTransition().releases && this.tyingOver[channel] < 0) {\r\n\t\t\t\tthis.releaseTone(channel, toneList.popBack());\r\n\t\t\t} else {\r\n\t\t\t\tthis.freeTone(toneList.popBack());\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate playTone(song: Song, stereoBufferIndex: number, stereoBufferLength: number, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n\t\tSynth.computeTone(this, song, channel, samplesPerTick, runLength, tone, released, shouldFadeOutFast);\r\n\t\tlet synthBuffer: Float32Array;\r\n\t\tswitch (tone.instrument.effects) {\r\n\t\t\tcase 0: synthBuffer = this.samplesForNone!; break;\r\n\t\t\tcase 1: synthBuffer = this.samplesForReverb!; break;\r\n\t\t\tcase 2: synthBuffer = this.samplesForChorus!; break;\r\n\t\t\tcase 3: synthBuffer = this.samplesForChorusReverb!; break;\r\n\t\t\tdefault: throw new Error();\r\n\t\t}\r\n\t\tconst synthesizer: Function = Synth.getInstrumentSynthFunction(tone.instrument);\r\n\t\tsynthesizer(this, synthBuffer, stereoBufferIndex, stereoBufferLength, runLength * 2, tone, tone.instrument);\r\n\t}\r\n\r\n\tprivate static computeEnvelope(envelope: Envelope, time: number, beats: number, customVolume: number): number {\r\n\t\tswitch (envelope.type) {\r\n\t\t\tcase EnvelopeType.custom: return customVolume;\r\n\t\t\tcase EnvelopeType.steady: return 1.0;\r\n\t\t\tcase EnvelopeType.twang:\r\n\t\t\t\treturn 1.0 / (1.0 + time * envelope.speed);\r\n\t\t\tcase EnvelopeType.swell:\r\n\t\t\t\treturn 1.0 - 1.0 / (1.0 + time * envelope.speed);\r\n\t\t\tcase EnvelopeType.tremolo:\r\n\t\t\t\treturn 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\r\n\t\t\tcase EnvelopeType.tremolo2:\r\n\t\t\t\treturn 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\r\n\t\t\tcase EnvelopeType.punch:\r\n\t\t\t\treturn Math.max(1.0, 2.0 - time * 10.0);\r\n\t\t\tcase EnvelopeType.flare:\r\n\t\t\t\tconst speed: number = envelope.speed;\r\n\t\t\t\tconst attack: number = 0.25 / Math.sqrt(speed);\r\n\t\t\t\treturn time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * speed);\r\n\t\t\tcase EnvelopeType.decay:\r\n\t\t\t\treturn Math.pow(2, -envelope.speed * time);\r\n\t\t\tdefault: throw new Error(\"Unrecognized operator envelope type.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static computeChordVolume(chordSize: number): number {\r\n\t\treturn 1.0 / ((chordSize - 1) * 0.25 + 1.0);\r\n\t}\r\n\r\n\tprivate static computeTone(synth: Synth, song: Song, channel: number, samplesPerTick: number, runLength: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n\t\tconst instrument: Instrument = tone.instrument;\r\n\t\tconst transition: Transition = instrument.getTransition();\r\n\t\tconst chord: Chord = instrument.getChord();\r\n\t\tconst chordVolume: number = chord.arpeggiates ? 1 : Synth.computeChordVolume(tone.chordSize);\r\n\t\tconst isNoiseChannel: boolean = song.getChannelIsNoise(channel);\r\n\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\tconst secondsPerPart: number = Config.ticksPerPart * samplesPerTick / synth.samplesPerSecond;\r\n\t\tconst beatsPerPart: number = 1.0 / Config.partsPerBeat;\r\n\t\tconst toneWasActive: boolean = tone.active;\r\n\t\tconst tickSampleCountdown: number = synth.tickSampleCountdown;\r\n\t\tconst startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n\t\tconst endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n\t\tconst ticksIntoBar: number = (synth.beat * Config.partsPerBeat + synth.part) * Config.ticksPerPart + synth.tick;\r\n\t\tconst partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n\t\tconst partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n\t\tconst partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n\t\tconst partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n\t\tconst instrumentIdx: number = (synth.song as Song).channels[channel].instruments.findIndex(i => i == instrument);\r\n\t\tconst treatAsSeamless: boolean = transition.isSeamless || synth.tyingOver[channel] >= 0;\r\n\r\n\t\ttone.phaseDeltaScale = 0.0;\r\n\t\ttone.filter = 1.0;\r\n\t\ttone.filterScale = 1.0;\r\n\t\ttone.vibratoScale = 0.0;\r\n\t\ttone.intervalMult = 1.0;\r\n\t\ttone.intervalVolumeMult = 1.0;\r\n\t\ttone.active = false;\r\n\r\n\t\tlet startPan: number = instrument.pan;\r\n\t\tlet endPan: number = instrument.pan;\r\n\t\tif (synth.isModActive(ModSetting.mstPan, false, channel, instrumentIdx)) {\r\n\t\t\tstartPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\r\n\t\t\tendPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\r\n\t\t}\r\n\r\n\t\tlet startPanDelay: number = instrument.panDelay;\r\n\t\tlet endPanDelay: number = instrument.panDelay;\r\n\t\tif (synth.isModActive(ModSetting.mstPanDelay, false, channel, instrumentIdx)) {\r\n\t\t\tstartPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, false);\r\n\t\t\tendPanDelay = synth.getModValue(ModSetting.mstPanDelay, false, channel, instrumentIdx, true);\r\n\t\t}\r\n\r\n\t\tconst useStartPan: number = (startPan - Config.panCenter) / Config.panCenter;\r\n\t\tconst useEndPan: number = (endPan - Config.panCenter) / Config.panCenter;\r\n\t\t// 10 pan delay is the same amount as vanilla beepbox.\r\n\t\tconst maxDelayStart: number = startPanDelay * 0.00013 * synth.samplesPerSecond;\r\n\t\tconst maxDelayEnd: number = endPanDelay * 0.00013 * synth.samplesPerSecond;\r\n\t\ttone.stereoDelayStart = -useStartPan * maxDelayStart;\r\n\t\tconst delayEnd: number = -useEndPan * maxDelayEnd;\r\n\t\ttone.stereoDelayDelta = (delayEnd - tone.stereoDelayStart) / runLength;\r\n\t\ttone.stereoVolumeLStart = Math.cos((1 + useStartPan) * Math.PI * 0.25) * 1.414;\r\n\t\ttone.stereoVolumeRStart = Math.cos((1 - useStartPan) * Math.PI * 0.25) * 1.414;\r\n\t\tconst stereoVolumeLEnd: number = Math.cos((1 + useEndPan) * Math.PI * 0.25) * 1.414;\r\n\t\tconst stereoVolumeREnd: number = Math.cos((1 - useEndPan) * Math.PI * 0.25) * 1.414;\r\n\t\ttone.stereoVolumeLDelta = (stereoVolumeLEnd - tone.stereoVolumeLStart) / runLength;\r\n\t\ttone.stereoVolumeRDelta = (stereoVolumeREnd - tone.stereoVolumeRStart) / runLength;\r\n\r\n\t\tlet resetPhases: boolean = true;\r\n\t\tlet partsSinceStart: number = 0.0;\r\n\t\tlet intervalStart: number = 0.0;\r\n\t\tlet intervalEnd: number = 0.0;\r\n\t\tlet transitionVolumeStart: number = 1.0;\r\n\t\tlet transitionVolumeEnd: number = 1.0;\r\n\t\tlet chordVolumeStart: number = chordVolume;\r\n\t\tlet chordVolumeEnd: number = chordVolume;\r\n\t\tlet customVolumeStart: number = 0.0;\r\n\t\tlet customVolumeEnd: number = 0.0;\r\n\t\tlet decayTimeStart: number = 0.0;\r\n\t\tlet decayTimeEnd: number = 0.0;\r\n\r\n\t\tlet volumeReferencePitch: number;\r\n\t\tlet basePitch: number;\r\n\t\tlet baseVolume: number;\r\n\t\tlet pitchDamping: number;\r\n\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tbasePitch = Config.spectrumBasePitch;\r\n\t\t\t\tbaseVolume = 0.6; // Note: spectrum is louder for drum channels than pitch channels!\r\n\t\t\t} else {\r\n\t\t\t\tbasePitch = Config.keys[song.key].basePitch;\r\n\t\t\t\tbaseVolume = 0.3;\r\n\t\t\t}\r\n\t\t\tvolumeReferencePitch = Config.spectrumBasePitch;\r\n\t\t\tpitchDamping = 28;\r\n\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\tbasePitch = Config.spectrumBasePitch;\r\n\t\t\tbaseVolume = 0.45;\r\n\t\t\tvolumeReferencePitch = basePitch;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.noise) {\r\n\t\t\tbasePitch = Config.chipNoises[instrument.chipNoise].basePitch;\r\n\t\t\tbaseVolume = 0.19;\r\n\t\t\tvolumeReferencePitch = basePitch;\r\n\t\t\tpitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\r\n\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\tbasePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbaseVolume = 0.03;\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n\t\t\tbasePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbaseVolume = 0.03375; // looks low compared to drums, but it's doubled for chorus and drums tend to be loud anyway.\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.harmonics) {\r\n\t\t\tbasePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbaseVolume = 0.025;\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\tbasePitch = Config.keys[song.key].basePitch;\r\n\t\t\tbaseVolume = 0.04725;\r\n\t\t\tvolumeReferencePitch = 16;\r\n\t\t\tpitchDamping = 48;\r\n\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\tbaseVolume = 1.0;\r\n\t\t\tvolumeReferencePitch = 0;\r\n\t\t\tpitchDamping = 1.0;\r\n\t\t\tbasePitch = 0;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unknown instrument type in computeTone.\");\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\ttone.phaseDeltas[i] = 0.0;\r\n\t\t\ttone.volumeStarts[i] = 0.0;\r\n\t\t\ttone.volumeDeltas[i] = 0.0;\r\n\t\t}\r\n\r\n\t\tif (released) {\r\n\t\t\tconst ticksSoFar: number = tone.noteLengthTicks + tone.ticksSinceReleased;\r\n\t\t\tconst startTicksSinceReleased: number = tone.ticksSinceReleased + startRatio;\r\n\t\t\tconst endTicksSinceReleased: number = tone.ticksSinceReleased + endRatio;\r\n\t\t\tconst startTick: number = tone.noteLengthTicks + startTicksSinceReleased;\r\n\t\t\tconst endTick: number = tone.noteLengthTicks + endTicksSinceReleased;\r\n\t\t\tconst toneTransition: Transition = tone.instrument.getTransition();\r\n\t\t\tresetPhases = false;\r\n\t\t\tpartsSinceStart = Math.floor(ticksSoFar / Config.ticksPerPart);\r\n\t\t\tintervalStart = intervalEnd = tone.lastInterval;\r\n\t\t\tcustomVolumeStart = customVolumeEnd = Synth.expressionToVolumeMult(tone.lastVolume);\r\n\t\t\ttransitionVolumeStart = Synth.expressionToVolumeMult((1.0 - startTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n\t\t\ttransitionVolumeEnd = Synth.expressionToVolumeMult((1.0 - endTicksSinceReleased / toneTransition.releaseTicks) * 6.0);\r\n\t\t\tdecayTimeStart = startTick / Config.ticksPerPart;\r\n\t\t\tdecayTimeEnd = endTick / Config.ticksPerPart;\r\n\r\n\t\t\tif (shouldFadeOutFast) {\r\n\t\t\t\ttransitionVolumeStart *= 1.0 - startRatio;\r\n\t\t\t\ttransitionVolumeEnd *= 1.0 - endRatio;\r\n\t\t\t}\r\n\t\t} else if (tone.note == null) {\r\n\t\t\ttransitionVolumeStart = transitionVolumeEnd = 1;\r\n\t\t\tcustomVolumeStart = customVolumeEnd = 1;\r\n\t\t\ttone.lastInterval = 0;\r\n\t\t\ttone.lastVolume = 6;\r\n\t\t\ttone.ticksSinceReleased = 0;\r\n\t\t\tresetPhases = false;\r\n\r\n\t\t\tconst heldTicksStart: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n\t\t\ttone.liveInputSamplesHeld += runLength;\r\n\t\t\tconst heldTicksEnd: number = tone.liveInputSamplesHeld / samplesPerTick;\r\n\t\t\ttone.noteLengthTicks = heldTicksEnd;\r\n\t\t\tconst heldPartsStart: number = heldTicksStart / Config.ticksPerPart;\r\n\t\t\tconst heldPartsEnd: number = heldTicksEnd / Config.ticksPerPart;\r\n\t\t\tpartsSinceStart = Math.floor(heldPartsStart);\r\n\t\t\tdecayTimeStart = heldPartsStart;\r\n\t\t\tdecayTimeEnd = heldPartsEnd;\r\n\t\t} else {\r\n\t\t\tconst note: Note = tone.note;\r\n\t\t\tconst prevNote: Note | null = tone.prevNote;\r\n\t\t\tconst nextNote: Note | null = tone.nextNote;\r\n\r\n\t\t\tconst time: number = synth.part + synth.beat * Config.partsPerBeat;\r\n\t\t\tconst partsPerBar: number = Config.partsPerBeat * song.beatsPerBar;\r\n\t\t\tconst noteStart: number = tone.noteStart;// - Math.max(0, synth.tyingOver[channel] || 0);\r\n\t\t\tconst noteEnd: number = tone.noteEnd;\r\n\r\n\t\t\tpartsSinceStart = time - noteStart;\r\n\r\n\t\t\tlet endPinIndex: number;\r\n\t\t\tfor (endPinIndex = 1; endPinIndex < note.pins.length - 1; endPinIndex++) {\r\n\t\t\t\tif (note.pins[endPinIndex].time + note.start > time) break;\r\n\t\t\t}\r\n\t\t\tconst startPin: NotePin = note.pins[endPinIndex - 1];\r\n\t\t\tconst endPin: NotePin = note.pins[endPinIndex];\r\n\t\t\tconst noteStartTick: number = noteStart * Config.ticksPerPart;\r\n\t\t\tconst noteEndTick: number = noteEnd * Config.ticksPerPart;\r\n\t\t\tconst noteLengthTicks: number = noteEndTick - noteStartTick;\r\n\t\t\tconst pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\r\n\t\t\tconst pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\r\n\r\n\t\t\ttone.lastInterval = note.pins[note.pins.length - 1].interval;\r\n\t\t\ttone.lastVolume = note.pins[note.pins.length - 1].volume;\r\n\t\t\ttone.ticksSinceReleased = 0;\r\n\t\t\ttone.noteLengthTicks = noteLengthTicks;\r\n\r\n\t\t\tconst tickTimeStart: number = time * Config.ticksPerPart + synth.tick;\r\n\t\t\tconst tickTimeEnd: number = time * Config.ticksPerPart + synth.tick + 1;\r\n\t\t\tconst noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\r\n\t\t\tconst noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\r\n\t\t\tconst pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\r\n\t\t\tconst pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\r\n\t\t\tlet customVolumeTickStart: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioStart;\r\n\t\t\tlet customVolumeTickEnd: number = startPin.volume + (endPin.volume - startPin.volume) * pinRatioEnd;\r\n\t\t\tlet transitionVolumeTickStart: number = 1.0;\r\n\t\t\tlet transitionVolumeTickEnd: number = 1.0;\r\n\t\t\tlet chordVolumeTickStart: number = chordVolume;\r\n\t\t\tlet chordVolumeTickEnd: number = chordVolume;\r\n\t\t\tlet intervalTickStart: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\r\n\t\t\tlet intervalTickEnd: number = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\r\n\t\t\tlet decayTimeTickStart: number = partTimeTickStart - noteStart;\r\n\t\t\tlet decayTimeTickEnd: number = partTimeTickEnd - noteStart;\r\n\t\t\tresetPhases = (tickTimeStart + startRatio - noteStartTick == 0.0) || !toneWasActive;\r\n\r\n\t\t\t// if seamless, don't reset phases at start. (it's probably not necessary to constantly reset phases if there are no notes? Just do it once when note starts? But make sure that reset phases doesn't also reset stuff that this function did to set up the tone. Remember when the first run length was lost!\r\n\t\t\t// if slide, average the interval, decayTime, and custom volume at the endpoints and interpolate between over slide duration.\r\n\t\t\t// note that currently seamless and slide make different assumptions about whether a note at the end of a bar will connect with the next bar!\r\n\t\t\tconst maximumSlideTicks: number = noteLengthTicks * 0.5;\r\n\t\t\tif (treatAsSeamless && !transition.slides && note.start == 0) {\r\n\t\t\t\t// Special case for seamless, no-slide transition: assume the previous bar ends with another seamless note, don't reset tone history.\r\n\t\t\t\tresetPhases = !toneWasActive;\r\n\t\t\t} else if (treatAsSeamless && prevNote != null) {\r\n\t\t\t\tresetPhases = !toneWasActive;\r\n\t\t\t\tif (transition.slides) {\r\n\t\t\t\t\tconst slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n\t\t\t\t\tconst slideRatioStartTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickStart / slideTicks);\r\n\t\t\t\t\tconst slideRatioEndTick: number = Math.max(0.0, 1.0 - noteTicksPassedTickEnd / slideTicks);\r\n\t\t\t\t\tconst intervalDiff: number = ((prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval) - tone.pitches[0]) * 0.5;\r\n\t\t\t\t\tconst volumeDiff: number = (prevNote.pins[prevNote.pins.length - 1].volume - note.pins[0].volume) * 0.5;\r\n\t\t\t\t\tconst decayTimeDiff: number = (prevNote.end - prevNote.start) * 0.5;\r\n\t\t\t\t\tintervalTickStart += slideRatioStartTick * intervalDiff;\r\n\t\t\t\t\tintervalTickEnd += slideRatioEndTick * intervalDiff;\r\n\t\t\t\t\tcustomVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n\t\t\t\t\tcustomVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n\t\t\t\t\tdecayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n\t\t\t\t\tdecayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n\t\t\t\t\tif (!chord.arpeggiates) {\r\n\t\t\t\t\t\tconst chordSizeDiff: number = (prevNote.pitches.length - tone.chordSize) * 0.5;\r\n\t\t\t\t\t\tchordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n\t\t\t\t\t\tchordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (treatAsSeamless && !transition.slides && note.end == partsPerBar) {\r\n\t\t\t\t// Special case for seamless, no-slide transition: assume the next bar starts with another seamless note, don't fade out.\r\n\t\t\t} else if (treatAsSeamless && nextNote != null) {\r\n\t\t\t\tif (transition.slides) {\r\n\t\t\t\t\tconst slideTicks: number = Math.min(maximumSlideTicks, transition.slideTicks);\r\n\t\t\t\t\tconst slideRatioStartTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickStart) / slideTicks);\r\n\t\t\t\t\tconst slideRatioEndTick: number = Math.max(0.0, 1.0 - (noteLengthTicks - noteTicksPassedTickEnd) / slideTicks);\r\n\t\t\t\t\tconst intervalDiff: number = (nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + note.pins[note.pins.length - 1].interval)) * 0.5;\r\n\t\t\t\t\tconst volumeDiff: number = (nextNote.pins[0].volume - note.pins[note.pins.length - 1].volume) * 0.5;\r\n\t\t\t\t\tconst decayTimeDiff: number = -(noteEnd - noteStart) * 0.5;\r\n\t\t\t\t\tintervalTickStart += slideRatioStartTick * intervalDiff;\r\n\t\t\t\t\tintervalTickEnd += slideRatioEndTick * intervalDiff;\r\n\t\t\t\t\tcustomVolumeTickStart += slideRatioStartTick * volumeDiff;\r\n\t\t\t\t\tcustomVolumeTickEnd += slideRatioEndTick * volumeDiff;\r\n\t\t\t\t\tdecayTimeTickStart += slideRatioStartTick * decayTimeDiff;\r\n\t\t\t\t\tdecayTimeTickEnd += slideRatioEndTick * decayTimeDiff;\r\n\r\n\t\t\t\t\tif (!chord.arpeggiates) {\r\n\t\t\t\t\t\tconst chordSizeDiff: number = (nextNote.pitches.length - tone.chordSize) * 0.5;\r\n\t\t\t\t\t\tchordVolumeTickStart = Synth.computeChordVolume(tone.chordSize + slideRatioStartTick * chordSizeDiff);\r\n\t\t\t\t\t\tchordVolumeTickEnd = Synth.computeChordVolume(tone.chordSize + slideRatioEndTick * chordSizeDiff);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (!(transition.releases && synth.tyingOver[channel] < 0)) {\r\n\t\t\t\tconst releaseTicks: number = transition.releaseTicks;\r\n\t\t\t\tif (releaseTicks > 0.0) {\r\n\t\t\t\t\ttransitionVolumeTickStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / releaseTicks);\r\n\t\t\t\t\ttransitionVolumeTickEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / releaseTicks);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tintervalStart = intervalTickStart + (intervalTickEnd - intervalTickStart) * startRatio;\r\n\t\t\tintervalEnd = intervalTickStart + (intervalTickEnd - intervalTickStart) * endRatio;\r\n\t\t\tif (instrument.type != InstrumentType.mod) {\r\n\t\t\t\tcustomVolumeStart = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * startRatio);\r\n\t\t\t\tcustomVolumeEnd = Synth.expressionToVolumeMult(customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * endRatio);\r\n\t\t\t} else {\r\n\t\t\t\tcustomVolumeStart = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.max(0.0, startRatio);\r\n\t\t\t\tcustomVolumeEnd = customVolumeTickStart + (customVolumeTickEnd - customVolumeTickStart) * Math.min(1.0, endRatio);\r\n\t\t\t\ttone.customVolumeStart = customVolumeStart;\r\n\t\t\t\ttone.customVolumeEnd = customVolumeEnd;\r\n\t\t\t}\r\n\t\t\ttransitionVolumeStart = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * startRatio;\r\n\t\t\ttransitionVolumeEnd = transitionVolumeTickStart + (transitionVolumeTickEnd - transitionVolumeTickStart) * endRatio;\r\n\t\t\tchordVolumeStart = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * startRatio;\r\n\t\t\tchordVolumeEnd = chordVolumeTickStart + (chordVolumeTickEnd - chordVolumeTickStart) * endRatio;\r\n\t\t\tdecayTimeStart = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * startRatio;\r\n\t\t\tdecayTimeEnd = decayTimeTickStart + (decayTimeTickEnd - decayTimeTickStart) * endRatio;\r\n\t\t}\r\n\r\n\t\tconst sampleTime: number = 1.0 / synth.samplesPerSecond;\r\n\t\ttone.active = true;\r\n\r\n\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.spectrum) {\r\n\r\n\t\t\tconst lfoEffectStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.LFOtime);\r\n\t\t\tconst lfoEffectEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrument.nextLFOtime);\r\n\r\n\t\t\tlet useVibratoStart: number = instrument.vibratoDepth;\r\n\t\t\tlet useVibratoEnd: number = instrument.vibratoDepth;\r\n\r\n\t\t\tif (synth.isModActive(ModSetting.mstVibratoDepth, false, channel, instrumentIdx)) {\r\n\t\t\t\tuseVibratoStart = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, false) / 25;\r\n\t\t\t\tuseVibratoEnd = synth.getModValue(ModSetting.mstVibratoDepth, false, channel, instrumentIdx, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\t// Only use vibrato properties if the instrument's vibrato is custom or mods are applied to it\r\n\t\t\tlet partsStart: number;\r\n\t\t\tlet partsEnd: number;\r\n\t\t\tconst activeVibratoDelayMods: boolean = synth.isModActive(ModSetting.mstVibratoDelay, false, channel, instrumentIdx);\r\n\t\t\tif (instrument.vibrato != Config.vibratos.length && !activeVibratoDelayMods) {\r\n\t\t\t\tpartsStart = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\t\tpartsEnd = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet vibratoDelayStart: number = instrument.vibratoDelay;\r\n\t\t\t\tlet vibratoDelayEnd: number = instrument.vibratoDelay;\r\n\r\n\t\t\t\tif (activeVibratoDelayMods) {\r\n\t\t\t\t\tvibratoDelayStart = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, false);\r\n\t\t\t\t\tvibratoDelayEnd = synth.getModValue(ModSetting.mstVibratoDelay, false, channel, instrumentIdx, true);\r\n\r\n\t\t\t\t\t// Special case - max vibrato delay means neeeeeever vibrato.\r\n\t\t\t\t\tif (vibratoDelayStart == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n\t\t\t\t\t\tvibratoDelayStart = Number.MAX_VALUE;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (vibratoDelayEnd == synth.song!.mstMaxVols.get(ModSetting.mstVibratoDelay)!) {\r\n\t\t\t\t\t\tvibratoDelayEnd = Number.MAX_VALUE;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpartsStart = vibratoDelayStart;\r\n\t\t\t\tpartsEnd = vibratoDelayEnd;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst vibratoScaleStart: number = (partsSinceStart < partsStart) ? 0.0 : useVibratoStart;\r\n\t\t\tconst vibratoScaleEnd: number = (partsSinceStart < partsEnd) ? 0.0 : useVibratoEnd;\r\n\r\n\t\t\tconst vibratoStart: number = vibratoScaleStart * lfoEffectStart;\r\n\t\t\tconst vibratoEnd: number = vibratoScaleEnd * lfoEffectEnd;\r\n\t\t\tintervalStart += vibratoStart;\r\n\t\t\tintervalEnd += vibratoEnd;\r\n\t\t}\r\n\r\n\t\tif (!treatAsSeamless || (!(!transition.slides && tone.note != null && tone.note.start == 0) && !(tone.prevNote != null))) {\r\n\t\t\tconst attackSeconds: number = transition.attackSeconds;\r\n\t\t\tif (attackSeconds > 0.0) {\r\n\t\t\t\ttransitionVolumeStart *= Math.min(1.0, secondsPerPart * decayTimeStart / attackSeconds);\r\n\t\t\t\ttransitionVolumeEnd *= Math.min(1.0, secondsPerPart * decayTimeEnd / attackSeconds);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst instrumentVolumeMult: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\r\n\r\n\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t// It's possible that the note will change while the user is editing it,\r\n\t\t\t// but the tone's pitches don't get updated because the tone has already\r\n\t\t\t// ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\r\n\t\t\ttone.drumsetPitch = tone.pitches[0];\r\n\t\t\tif (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\r\n\t\t\ttone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\r\n\t\t}\r\n\r\n\t\tlet filterCutModStart: number = instrument.filterCutoff;\r\n\t\tlet filterCutModEnd: number = instrument.filterCutoff;\r\n\t\tif (synth.isModActive(ModSetting.mstFilterCut, false, channel, instrumentIdx)) {\r\n\t\t\tfilterCutModStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, false), ModSetting.mstFilterCut);\r\n\t\t\tfilterCutModEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterCut, false, channel, instrumentIdx, true), ModSetting.mstFilterCut);\r\n\t\t}\r\n\r\n\t\tlet cutoffOctavesModStart: number;\r\n\t\tlet cutoffOctavesModEnd: number;\r\n\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\tcutoffOctavesModStart = 0;\r\n\t\t\tcutoffOctavesModEnd = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcutoffOctavesModStart = (filterCutModStart - (Config.filterCutoffRange - 1)) * 0.5;\r\n\t\t\tcutoffOctavesModEnd = (filterCutModEnd - (Config.filterCutoffRange - 1)) * 0.5;\r\n\t\t}\r\n\r\n\t\tconst filterEnvelope: Envelope = (instrument.type == InstrumentType.drumset) ? instrument.getDrumsetEnvelope(tone.drumsetPitch) : instrument.getFilterEnvelope();\r\n\t\tconst filterCutoffHzStart: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModStart);\r\n\t\tconst filterCutoffHzEnd: number = Config.filterCutoffMaxHz * Math.pow(2.0, cutoffOctavesModEnd);\r\n\t\tconst filterBaseStart: number = 2.0 * Math.sin(Math.PI * filterCutoffHzStart / synth.samplesPerSecond);\r\n\t\tconst filterBaseEnd: number = 2.0 * Math.sin(Math.PI * filterCutoffHzEnd / synth.samplesPerSecond);\r\n\t\tconst filterMin: number = 2.0 * Math.sin(Math.PI * Config.filterCutoffMinHz / synth.samplesPerSecond);\r\n\t\ttone.filter = filterBaseStart * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\tlet endFilter: number = filterBaseEnd * Synth.computeEnvelope(filterEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\t\ttone.filter = Math.min(Config.filterMax, Math.max(filterMin, tone.filter));\r\n\t\tendFilter = Math.min(Config.filterMax, Math.max(filterMin, endFilter));\r\n\t\ttone.filterScale = Math.pow(endFilter / tone.filter, 1.0 / runLength);\r\n\r\n\t\tlet filterVolumeStart: number = Math.pow(0.5, cutoffOctavesModStart * 0.35);\r\n\t\tlet filterVolumeEnd: number = Math.pow(0.5, cutoffOctavesModEnd * 0.35);\r\n\r\n\t\ttone.filterResonanceStart = instrument.getFilterResonance();\r\n\t\ttone.filterResonanceDelta = 0.0;\r\n\r\n\t\tlet useFilterResonanceStart: number = instrument.filterResonance;\r\n\t\tlet useFilterResonanceEnd: number = instrument.filterResonance;\r\n\r\n\t\ttone.isFirstOrder = (instrument.type == InstrumentType.drumset) ? false : (useFilterResonanceStart == 0);\r\n\r\n\t\tif (synth.isModActive(ModSetting.mstFilterPeak, false, channel, instrumentIdx)) {\r\n\t\t\t// This flag is used to avoid the special casing when filter resonance == 0 without mods. So, it will sound a bit different,\r\n\t\t\t// but the effect and ability to smoothly modulate will be preserved.\r\n\t\t\ttone.isFirstOrder = false;\r\n\r\n\t\t\tuseFilterResonanceStart = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, false), ModSetting.mstFilterPeak);\r\n\t\t\tuseFilterResonanceEnd = song.modValueToReal(synth.getModValue(ModSetting.mstFilterPeak, false, channel, instrumentIdx, true), ModSetting.mstFilterPeak);\r\n\r\n\t\t\t// Also set cut in the tone.\r\n\t\t\ttone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\t\t\tconst filterResonanceEnd: number = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceEnd - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\r\n\t\t\t// Just a linear delta. Could get messy since it's not an amazing approximation of sqrt?\r\n\t\t\ttone.filterResonanceDelta = (filterResonanceEnd - tone.filterResonanceStart) / runLength;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Still need to compute this, mods or no. This calc is delegated to the tone level instead of the synth level, a notable difference from beepbox.\r\n\t\t\t// No functional difference though.\r\n\t\t\ttone.filterResonanceStart = Config.filterMaxResonance * Math.pow(Math.max(0, useFilterResonanceStart - 1) / (Config.filterResonanceRange - 2), 0.5);\r\n\t\t}\r\n\r\n\t\tif (tone.isFirstOrder == false) {\r\n\t\t\tfilterVolumeStart = Math.pow(filterVolumeStart, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceStart - 1));\r\n\t\t\tfilterVolumeEnd = Math.pow(filterVolumeEnd, 1.7) * Math.pow(0.5, 0.125 * (useFilterResonanceEnd - 1));\r\n\t\t}\r\n\t\tif (filterEnvelope.type == EnvelopeType.decay) {\r\n\t\t\tfilterVolumeStart *= (1.25 + .025 * filterEnvelope.speed);\r\n\t\t\tfilterVolumeEnd *= (1.25 + .025 * filterEnvelope.speed);\r\n\t\t} else if (filterEnvelope.type == EnvelopeType.twang) {\r\n\t\t\tfilterVolumeStart *= (1 + .02 * filterEnvelope.speed);\r\n\t\t\tfilterVolumeEnd *= (1 + .02 * filterEnvelope.speed);\r\n\t\t}\r\n\r\n\t\tif (resetPhases) {\r\n\t\t\ttone.reset();\r\n\t\t}\r\n\r\n\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\t// phase modulation!\r\n\r\n\t\t\tlet sineVolumeBoostStart: number = 1.0;\r\n\t\t\tlet sineVolumeBoostEnd: number = 1.0;\r\n\t\t\tlet totalCarrierVolumeStart: number = 0.0;\r\n\t\t\tlet totalCarrierVolumeEnd: number = 0.0;\r\n\r\n\t\t\tlet arpeggioInterval: number = 0;\r\n\t\t\tif (tone.pitchCount > 1 && !chord.harmonizes) {\r\n\t\t\t\tconst arpeggio: number = Math.floor((instrument.arpTime) / Config.ticksPerArpeggio);\r\n\t\t\t\tarpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n\t\t\t}\r\n\r\n\t\t\tlet detuneStart: number = instrument.detune / 25;\r\n\t\t\tlet detuneEnd: number = instrument.detune / 25;\r\n\t\t\tif (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n\t\t\t\tdetuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n\t\t\t\tdetuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tif (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n\t\t\t\tdetuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n\t\t\t\tdetuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tconst carrierCount: number = Config.algorithms[instrument.algorithm].carrierCount;\r\n\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\r\n\t\t\t\tconst associatedCarrierIndex: number = Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1;\r\n\t\t\t\tconst pitch: number = tone.pitches[!chord.harmonizes ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\r\n\t\t\t\tconst freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\r\n\t\t\t\tconst interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\r\n\t\t\t\tconst startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale + interval;\r\n\t\t\t\tconst startFreq: number = freqMult * (Instrument.frequencyFromPitch(startPitch)) + Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\r\n\r\n\t\t\t\ttone.phaseDeltas[i] = startFreq * sampleTime * Config.sineWaveLength;\r\n\r\n\t\t\t\tlet amplitudeStart: number = instrument.operators[i].amplitude;\r\n\t\t\t\tlet amplitudeEnd: number = instrument.operators[i].amplitude;\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx)) {\r\n\t\t\t\t\tamplitudeStart *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, false) / 15.0;\r\n\t\t\t\t\tamplitudeEnd *= synth.getModValue(ModSetting.mstFMSlider1 + i, false, channel, instrumentIdx, true) / 15.0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\r\n\t\t\t\tconst amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\r\n\t\t\t\tconst amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n\t\t\t\tconst amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n\t\t\t\tlet volumeStart: number = amplitudeMultStart;\r\n\t\t\t\tlet volumeEnd: number = amplitudeMultEnd;\r\n\r\n\t\t\t\t// Check for mod-related volume delta\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n\t\t\t\t\t// Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n\t\t\t\t\tconst startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n\t\t\t\t\tconst endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n\t\t\t\t\tvolumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n\t\t\t\t\tvolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check for SONG mod-related volume delta\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n\t\t\t\t\tvolumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n\t\t\t\t\tvolumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i < carrierCount) {\r\n\t\t\t\t\t// carrier\r\n\t\t\t\t\tconst endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale + interval;\r\n\t\t\t\t\tconst pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\t\t\tconst pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\t\t\tvolumeStart *= pitchVolumeStart;\r\n\t\t\t\t\tvolumeEnd *= pitchVolumeEnd;\r\n\r\n\t\t\t\t\ttotalCarrierVolumeStart += amplitudeCurveStart;\r\n\t\t\t\t\ttotalCarrierVolumeEnd += amplitudeCurveEnd;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// modulator\r\n\t\t\t\t\tvolumeStart *= Config.sineWaveLength * 1.5;\r\n\t\t\t\t\tvolumeEnd *= Config.sineWaveLength * 1.5;\r\n\r\n\t\t\t\t\tsineVolumeBoostStart *= 1.0 - Math.min(1.0, amplitudeStart / 15);\r\n\t\t\t\t\tsineVolumeBoostEnd *= 1.0 - Math.min(1.0, amplitudeEnd / 15);\r\n\t\t\t\t}\r\n\t\t\t\tconst operatorEnvelope: Envelope = Config.envelopes[instrument.operators[i].envelope];\r\n\r\n\t\t\t\tvolumeStart *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\t\t\tvolumeEnd *= Synth.computeEnvelope(operatorEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n\t\t\t\ttone.volumeStarts[i] = volumeStart;\r\n\t\t\t\ttone.volumeDeltas[i] = (volumeEnd - volumeStart) / runLength;\r\n\t\t\t}\r\n\r\n\t\t\tlet useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\r\n\t\t\tlet useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\r\n\t\t\tif (synth.isModActive(ModSetting.mstFMFeedback, false, channel, instrumentIdx)) {\r\n\t\t\t\tuseFeedbackAmplitudeStart *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, false) / 15.0;\r\n\t\t\t\tuseFeedbackAmplitudeEnd *= synth.getModValue(ModSetting.mstFMFeedback, false, channel, instrumentIdx, true) / 15.0;\r\n\t\t\t}\r\n\r\n\t\t\tconst feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\r\n\t\t\tconst feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\r\n\t\t\tconst feedbackEnvelope: Envelope = Config.envelopes[instrument.feedbackEnvelope];\r\n\t\t\tlet feedbackStart: number = feedbackAmplitudeStart * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\t\tlet feedbackEnd: number = feedbackAmplitudeEnd * Synth.computeEnvelope(feedbackEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\t\t\ttone.feedbackMult = feedbackStart;\r\n\t\t\ttone.feedbackDelta = (feedbackEnd - tone.feedbackMult) / runLength;\r\n\r\n\t\t\tconst volumeMult: number = baseVolume * instrumentVolumeMult;\r\n\t\t\ttone.volumeStart = filterVolumeStart * volumeMult * transitionVolumeStart * chordVolumeStart;\r\n\t\t\tconst volumeEnd: number = filterVolumeEnd * volumeMult * transitionVolumeEnd * chordVolumeEnd;\r\n\t\t\ttone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n\t\t\tsineVolumeBoostStart *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeStart / 15.0)) - 1.0) / 3.0;\r\n\t\t\tsineVolumeBoostEnd *= (Math.pow(2.0, (2.0 - 1.4 * useFeedbackAmplitudeEnd / 15.0)) - 1.0) / 3.0;\r\n\t\t\tsineVolumeBoostStart *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeStart - 1) / 2.0);\r\n\t\t\tsineVolumeBoostEnd *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierVolumeEnd - 1) / 2.0);\r\n\t\t\ttone.volumeStart *= 1.0 + sineVolumeBoostStart * 3.0;\r\n\t\t\ttone.volumeDelta *= 1.0 + (sineVolumeBoostStart + sineVolumeBoostEnd) * 1.5; // Volume boosts are averaged such that delta brings you to next target start boost.\r\n\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\t// Modulator value is used for data, so don't actually compute audio nonsense for it.\r\n\t\t\ttone.volumeStart = transitionVolumeStart;\r\n\t\t\tlet volumeEnd: number = transitionVolumeEnd;\r\n\r\n\t\t\ttone.volumeStart *= customVolumeStart;\r\n\t\t\tvolumeEnd *= customVolumeEnd;\r\n\r\n\t\t\ttone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\r\n\t\t} else {\r\n\t\t\tlet detuneStart: number = instrument.detune / 25;\r\n\t\t\tlet detuneEnd: number = instrument.detune / 25;\r\n\t\t\tif (synth.isModActive(ModSetting.mstDetune, false, channel, instrumentIdx)) {\r\n\t\t\t\tdetuneStart = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, false) / 25;\r\n\t\t\t\tdetuneEnd = synth.getModValue(ModSetting.mstDetune, false, channel, instrumentIdx, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tif (synth.isModActive(ModSetting.mstSongDetune, true)) {\r\n\t\t\t\tdetuneStart += synth.getModValue(ModSetting.mstSongDetune, true, null, null, false) / 25;\r\n\t\t\t\tdetuneEnd += synth.getModValue(ModSetting.mstSongDetune, true, null, null, true) / 25;\r\n\t\t\t}\r\n\r\n\t\t\tlet pitch: number = tone.pitches[0];\r\n\r\n\t\t\tif (tone.pitchCount > 1) {\r\n\t\t\t\tconst arpeggio: number = Math.floor(instrument.arpTime / Config.ticksPerArpeggio);\r\n\t\t\t\tif (chord.harmonizes) {\r\n\t\t\t\t\tconst intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n\t\t\t\t\ttone.intervalMult = Math.pow(2.0, intervalOffset / Config.pitchesPerOctave);\r\n\t\t\t\t\ttone.intervalVolumeMult = Math.pow(2.0, -intervalOffset / pitchDamping);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst startPitch: number = basePitch + (pitch + intervalStart + detuneStart) * intervalScale;\r\n\t\t\tconst endPitch: number = basePitch + (pitch + intervalEnd + detuneEnd) * intervalScale;\r\n\t\t\tconst startFreq: number = Instrument.frequencyFromPitch(startPitch);\r\n\t\t\tconst pitchVolumeStart: number = Math.pow(2.0, -(startPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\tconst pitchVolumeEnd: number = Math.pow(2.0, -(endPitch - volumeReferencePitch) / pitchDamping);\r\n\t\t\tlet settingsVolumeMultStart: number = baseVolume * filterVolumeStart;\r\n\t\t\tlet settingsVolumeMultEnd: number = baseVolume * filterVolumeEnd;\r\n\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\tsettingsVolumeMultStart *= Config.chipNoises[instrument.chipNoise].volume;\r\n\t\t\t\tsettingsVolumeMultEnd *= Config.chipNoises[instrument.chipNoise].volume;\r\n\t\t\t}\r\n\t\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tsettingsVolumeMultStart *= Config.chipWaves[instrument.chipWave].volume;\r\n\t\t\t\tsettingsVolumeMultEnd *= Config.chipWaves[instrument.chipWave].volume;\r\n\t\t\t}\r\n\t\t\tif (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tsettingsVolumeMultStart *= Config.intervals[instrument.interval].volume;\r\n\t\t\t\tsettingsVolumeMultEnd *= Config.intervals[instrument.interval].volume;\r\n\t\t\t}\r\n\t\t\tif (instrument.type == InstrumentType.pwm) {\r\n\r\n\t\t\t\t// Check for PWM mods to this instrument\r\n\t\t\t\tlet pulseWidthModStart: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n\t\t\t\tlet pulseWidthModEnd: number = instrument.pulseWidth / (Config.pulseWidthRange * 2);\r\n\t\t\t\tif (synth.isModActive(ModSetting.mstPulseWidth, false, channel, instrumentIdx)) {\r\n\t\t\t\t\tpulseWidthModStart = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, false)) / (Config.pulseWidthRange * 2);\r\n\t\t\t\t\tpulseWidthModEnd = (synth.getModValue(ModSetting.mstPulseWidth, false, channel, instrumentIdx, true)) / (Config.pulseWidthRange * 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pulseEnvelope: Envelope = Config.envelopes[instrument.pulseEnvelope];\r\n\t\t\t\tconst pulseWidthStart: number = pulseWidthModStart * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeStart, beatsPerPart * partTimeStart, customVolumeStart);\r\n\t\t\t\tconst pulseWidthEnd: number = pulseWidthModEnd * Synth.computeEnvelope(pulseEnvelope, secondsPerPart * decayTimeEnd, beatsPerPart * partTimeEnd, customVolumeEnd);\r\n\r\n\t\t\t\ttone.pulseWidth = pulseWidthStart;\r\n\t\t\t\ttone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / runLength;\r\n\t\t\t}\r\n\r\n\t\t\ttone.phaseDeltas[0] = startFreq * sampleTime;\r\n\r\n\t\t\ttone.volumeStart = transitionVolumeStart * chordVolumeStart * pitchVolumeStart * settingsVolumeMultStart * instrumentVolumeMult;\r\n\t\t\tlet volumeEnd: number = transitionVolumeEnd * chordVolumeEnd * pitchVolumeEnd * settingsVolumeMultEnd * instrumentVolumeMult;\r\n\r\n\t\t\tif (filterEnvelope.type != EnvelopeType.custom && (instrument.type != InstrumentType.pwm || Config.envelopes[instrument.pulseEnvelope].type != EnvelopeType.custom)) {\r\n\t\t\t\ttone.volumeStart *= customVolumeStart;\r\n\t\t\t\tvolumeEnd *= customVolumeEnd;\r\n\t\t\t}\r\n\r\n\t\t\t// Check for mod-related volume delta\r\n\t\t\tif (synth.isModActive(ModSetting.mstInsVolume, false, channel, instrumentIdx)) {\r\n\t\t\t\t// Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n\t\t\t\tconst startVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, false);\r\n\t\t\t\tconst endVal: number = synth.getModValue(ModSetting.mstInsVolume, false, channel, instrumentIdx, true)\r\n\t\t\t\ttone.volumeStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(startVal));\r\n\t\t\t\tvolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : this.instrumentVolumeToVolumeMult(endVal));\r\n\t\t\t}\r\n\t\t\t// Check for SONG mod-related volume delta\r\n\t\t\tif (synth.isModActive(ModSetting.mstSongVolume, true)) {\r\n\t\t\t\ttone.volumeStart *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, false)) / 100.0;\r\n\t\t\t\tvolumeEnd *= (synth.getModValue(ModSetting.mstSongVolume, true, undefined, undefined, true)) / 100.0;\r\n\t\t\t}\r\n\r\n\t\t\ttone.volumeDelta = (volumeEnd - tone.volumeStart) / runLength;\r\n\t\t}\r\n\r\n\t\ttone.phaseDeltaScale = Math.pow(2.0, ((intervalEnd - intervalStart) * intervalScale / Config.pitchesPerOctave) / runLength);\r\n\t}\r\n\r\n\tpublic static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\r\n\t\tlet effect: number = 0;\r\n\t\tfor (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\r\n\t\t\teffect += Math.sin(Math.PI * 2 * secondsIntoBar / vibratoPeriodSeconds);\r\n\t\t}\r\n\t\treturn effect;\r\n\t}\r\n\r\n\tprivate static readonly fmSynthFunctionCache: Dictionary<Function> = {};\r\n\r\n\tprivate static getInstrumentSynthFunction(instrument: Instrument): Function {\r\n\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\tconst fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\r\n\t\t\tif (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\r\n\t\t\t\tconst synthSource: string[] = [];\r\n\r\n\t\t\t\tfor (const line of Synth.fmSourceTemplate) {\r\n\t\t\t\t\tif (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n\t\t\t\t\t\tconst outputs: string[] = [];\r\n\t\t\t\t\t\tfor (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\r\n\t\t\t\t\t\t\toutputs.push(\"operator\" + j + \"Scaled\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsynthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n\t\t\t\t\t} else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n\t\t\t\t\t\tfor (let j: number = Config.operatorCount - 1; j >= 0; j--) {\r\n\t\t\t\t\t\t\tfor (const operatorLine of Synth.operatorSourceTemplate) {\r\n\t\t\t\t\t\t\t\tif (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n\t\t\t\t\t\t\t\t\tlet modulators = \"\";\r\n\t\t\t\t\t\t\t\t\tfor (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\r\n\t\t\t\t\t\t\t\t\t\tmodulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\r\n\t\t\t\t\t\t\t\t\tif (feedbackIndices.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\tmodulators += \" + feedbackMult * (\";\r\n\t\t\t\t\t\t\t\t\t\tconst feedbacks: string[] = [];\r\n\t\t\t\t\t\t\t\t\t\tfor (const modulatorNumber of feedbackIndices) {\r\n\t\t\t\t\t\t\t\t\t\t\tfeedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tmodulators += feedbacks.join(\" + \") + \")\";\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tsynthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tsynthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (line.indexOf(\"#\") != -1) {\r\n\t\t\t\t\t\tfor (let j = 0; j < Config.operatorCount; j++) {\r\n\t\t\t\t\t\t\tsynthSource.push(line.replace(/\\#/g, j + \"\"));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsynthSource.push(line);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log(synthSource.join(\"\\n\"));\r\n\r\n\t\t\t\tSynth.fmSynthFunctionCache[fingerprint] = new Function(\"synth\", \"data\", \"stereoBufferIndex\", \"stereoBufferLength\", \"runLength\", \"tone\", \"instrument\", synthSource.join(\"\\n\"));\r\n\t\t\t}\r\n\t\t\treturn Synth.fmSynthFunctionCache[fingerprint];\r\n\t\t} else if (instrument.type == InstrumentType.chip) {\r\n\t\t\treturn Synth.chipSynth;\r\n\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\treturn Synth.chipSynth;\r\n\t\t} else if (instrument.type == InstrumentType.harmonics) {\r\n\t\t\treturn Synth.harmonicsSynth;\r\n\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\treturn Synth.pulseWidthSynth;\r\n\t\t} else if (instrument.type == InstrumentType.noise) {\r\n\t\t\treturn Synth.noiseSynth;\r\n\t\t} else if (instrument.type == InstrumentType.spectrum) {\r\n\t\t\treturn Synth.spectrumSynth;\r\n\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\treturn Synth.drumsetSynth;\r\n\t\t} else if (instrument.type == InstrumentType.mod) {\r\n\t\t\treturn Synth.modSynth;\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Unrecognized instrument type: \" + instrument.type);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static chipSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tvar wave: Float64Array;\r\n\t\tvar volumeScale: number;\r\n\r\n\t\tconst isCustomWave: boolean = (instrument.type == InstrumentType.customChipWave);\r\n\r\n\t\tif (!isCustomWave) {\r\n\t\t\twave = Config.chipWaves[instrument.chipWave].samples;\r\n\t\t\tvolumeScale = 1.0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\twave = instrument.customChipWaveIntegral;\r\n\t\t\t// Integrals for custom chip wave can get rather big. This \"zero point\" can be config'ed later.\r\n\t\t\tvolumeScale = 0.1;\r\n\t\t}\r\n\r\n\t\tconst waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n\t\tconst intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / Config.pitchesPerOctave);\r\n\t\tconst intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / Config.pitchesPerOctave) * tone.intervalMult;\r\n\t\tconst intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n\t\tif (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n\t\tconst deltaRatio: number = intervalB / intervalA;\r\n\t\tlet phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n\t\tlet phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n\t\tlet phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\tlet prevWaveIntegralA: number = wave[indexA];\r\n\t\tlet prevWaveIntegralB: number = wave[indexB];\r\n\t\tprevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n\t\tprevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\r\n\t\t//console.log(\"S: \" + stereoBufferIndex + \" P: \" + stopIndex);\r\n\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\r\n\t\t\tphaseA += phaseDeltaA;\r\n\t\t\tphaseB += phaseDeltaB;\r\n\r\n\t\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\t\tlet nextWaveIntegralA: number = wave[indexA];\r\n\t\t\tlet nextWaveIntegralB: number = wave[indexB];\r\n\t\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\t\tnextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n\t\t\tnextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n\t\t\tlet waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n\t\t\tlet waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n\t\t\tprevWaveIntegralA = nextWaveIntegralA;\r\n\t\t\tprevWaveIntegralB = nextWaveIntegralB;\r\n\r\n\t\t\tconst combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDeltaA *= phaseDeltaScale;\r\n\t\t\tphaseDeltaB *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume * volumeScale;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\t//debugString += \",\" + data.subarray(stereoBufferIndex - runLength, stereoBufferIndex).toString();\r\n\t\t//console.log(stereoBufferIndex);\r\n\r\n\t\ttone.phases[0] = phaseA / waveLength;\r\n\t\ttone.phases[1] = phaseB / waveLength;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\r\n\t}\r\n\r\n\r\n\tprivate static harmonicsSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tconst wave: Float32Array = instrument.harmonicsWave.getCustomWave();\r\n\t\tconst waveLength: number = +wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n\t\tconst intervalA: number = +Math.pow(2.0, (Config.intervals[instrument.interval].offset + Config.intervals[instrument.interval].spread) / Config.pitchesPerOctave);\r\n\t\tconst intervalB: number = Math.pow(2.0, (Config.intervals[instrument.interval].offset - Config.intervals[instrument.interval].spread) / Config.pitchesPerOctave) * tone.intervalMult;\r\n\t\tconst intervalSign: number = tone.intervalVolumeMult * Config.intervals[instrument.interval].sign;\r\n\t\tif (instrument.interval == 0 && !instrument.getChord().customInterval) tone.phases[1] = tone.phases[0];\r\n\t\tconst deltaRatio: number = intervalB / intervalA;\r\n\t\tlet phaseDeltaA: number = tone.phaseDeltas[0] * intervalA * waveLength;\r\n\t\tlet phaseDeltaB: number = phaseDeltaA * deltaRatio;\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n\t\tlet phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\tlet prevWaveIntegralA: number = wave[indexA];\r\n\t\tlet prevWaveIntegralB: number = wave[indexB];\r\n\t\tprevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n\t\tprevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\r\n\t\t\tphaseA += phaseDeltaA;\r\n\t\t\tphaseB += phaseDeltaB;\r\n\r\n\t\t\tconst phaseAInt: number = phaseA | 0;\r\n\t\t\tconst phaseBInt: number = phaseB | 0;\r\n\t\t\tconst indexA: number = phaseAInt % waveLength;\r\n\t\t\tconst indexB: number = phaseBInt % waveLength;\r\n\t\t\tlet nextWaveIntegralA: number = wave[indexA];\r\n\t\t\tlet nextWaveIntegralB: number = wave[indexB];\r\n\t\t\tconst phaseRatioA: number = phaseA - phaseAInt;\r\n\t\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n\t\t\tnextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n\t\t\tnextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n\t\t\tlet waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n\t\t\tlet waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n\r\n\t\t\tprevWaveIntegralA = nextWaveIntegralA;\r\n\t\t\tprevWaveIntegralB = nextWaveIntegralB;\r\n\r\n\t\t\tconst combinedWave: number = (waveA + waveB * intervalSign);\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (combinedWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDeltaA *= phaseDeltaScale;\r\n\t\t\tphaseDeltaB *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phaseA / waveLength;\r\n\t\ttone.phases[1] = phaseB / waveLength;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static pulseWidthSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0];\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phase: number = (tone.phases[0] % 1);\r\n\r\n\t\tlet pulseWidth: number = tone.pulseWidth;\r\n\t\tconst pulseWidthDelta: number = tone.pulseWidthDelta;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\r\n\t\t\tconst sawPhaseA: number = phase % 1;\r\n\t\t\tconst sawPhaseB: number = (phase + pulseWidth) % 1;\r\n\r\n\t\t\tlet pulseWave: number = sawPhaseB - sawPhaseA;\r\n\r\n\t\t\t// This a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing.\r\n\t\t\tif (sawPhaseA < phaseDelta) {\r\n\t\t\t\tvar t = sawPhaseA / phaseDelta;\r\n\t\t\t\tpulseWave += (t + t - t * t - 1) * 0.5;\r\n\t\t\t} else if (sawPhaseA > 1.0 - phaseDelta) {\r\n\t\t\t\tvar t = (sawPhaseA - 1.0) / phaseDelta;\r\n\t\t\t\tpulseWave += (t + t + t * t + 1) * 0.5;\r\n\t\t\t}\r\n\t\t\tif (sawPhaseB < phaseDelta) {\r\n\t\t\t\tvar t = sawPhaseB / phaseDelta;\r\n\t\t\t\tpulseWave -= (t + t - t * t - 1) * 0.5;\r\n\t\t\t} else if (sawPhaseB > 1.0 - phaseDelta) {\r\n\t\t\t\tvar t = (sawPhaseB - 1.0) / phaseDelta;\r\n\t\t\t\tpulseWave -= (t + t + t * t + 1) * 0.5;\r\n\t\t\t}\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (pulseWave - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tpulseWidth += pulseWidthDelta;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phase;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static fmSourceTemplate: string[] = (`\r\nconst sineWave = beepbox.Config.sineWave;\r\n\r\nlet phaseDeltaScale = +tone.phaseDeltaScale;\r\n// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\r\nlet operator#Phase\t   = +((tone.phases[#] % 1) + 1000) * beepbox.Config.sineWaveLength;\r\nlet operator#PhaseDelta  = +tone.phaseDeltas[#];\r\nlet operator#OutputMult  = +tone.volumeStarts[#];\r\nconst operator#OutputDelta = +tone.volumeDeltas[#];\r\nlet operator#Output\t  = +tone.feedbackOutputs[#];\r\nlet feedbackMult\t\t = +tone.feedbackMult;\r\nconst feedbackDelta\t\t= +tone.feedbackDelta;\r\nlet volume = +tone.volumeStart;\r\nconst volumeDelta = +tone.volumeDelta;\r\n\r\nconst isFirstOrder = tone.isFirstOrder;\r\nlet filter1 = +tone.filter;\r\nlet filter2 = isFirstOrder ? 1.0 : filter1;\r\nconst filterScale1 = +tone.filterScale;\r\nconst filterScale2 = isFirstOrder ? 1.0 : filterScale1;\r\nlet filterResonance = tone.filterResonanceStart;\r\nlet filterResonanceDelta = tone.filterResonanceDelta;\r\nlet filterSample0 = +tone.filterSample0;\r\nlet filterSample1 = +tone.filterSample1;\r\n\r\nconst stopIndex = stereoBufferIndex + runLength;\r\nstereoBufferIndex += tone.stereoOffset;\r\nlet stereoVolumeL = tone.stereoVolumeLStart;\r\nlet stereoVolumeLDelta = tone.stereoVolumeLDelta;\r\nlet stereoVolumeR = tone.stereoVolumeRStart;\r\nlet stereoVolumeRDelta = tone.stereoVolumeRDelta;\r\nlet stereoDelay = tone.stereoDelayStart;\r\nlet stereoDelayDelta = tone.stereoDelayDelta;\r\nlet delays = [];\r\nwhile (stereoBufferIndex < stopIndex) {\r\n// INSERT OPERATOR COMPUTATION HERE\r\nconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\r\n\r\nconst feedback = filterResonance + filterResonance / (1.0 - filter1);\r\nfilterSample0 += filter1 * (fmOutput - filterSample0 + feedback * (filterSample0 - filterSample1));\r\nfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\nfeedbackMult += feedbackDelta;\r\noperator#OutputMult += operator#OutputDelta;\r\noperator#Phase += operator#PhaseDelta;\r\noperator#PhaseDelta *= phaseDeltaScale;\r\nfilter1 *= filterScale1;\r\nfilter2 *= filterScale2;\r\nfilterResonance += filterResonanceDelta;\r\n\r\nconst output = filterSample1 * volume;\r\nvolume += volumeDelta;\r\n\r\n//const absStereoDelay: number = Math.abs(stereoDelay);\r\n//const fracStereoDelay: number = absStereoDelay % 1;\r\n//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\ndelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\ndata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\ndata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\ndata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\ndata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\nstereoVolumeL += stereoVolumeLDelta;\r\nstereoVolumeR += stereoVolumeRDelta;\r\nstereoDelay += stereoDelayDelta;\r\n\r\nstereoBufferIndex += 2;\r\n}\r\n\r\ntone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\r\ntone.feedbackOutputs[#] = operator#Output;\r\n\r\nconst epsilon = (1.0e-24);\r\nif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\nif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\ntone.filterSample0 = filterSample0;\r\ntone.filterSample1 = filterSample1;\r\n`).split(\"\\n\");\r\n\r\n\tprivate static operatorSourceTemplate: string[] = (`\r\nconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\r\nconst operator#PhaseInt = operator#PhaseMix|0;\r\nconst operator#Index\t= operator#PhaseInt & ` + Config.sineWaveMask + `;\r\nconst operator#Sample   = sineWave[operator#Index];\r\noperator#Output\t   = operator#Sample + (sineWave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\r\nconst operator#Scaled   = operator#OutputMult * operator#Output;\r\n`).split(\"\\n\");\r\n\r\n\tprivate static noiseSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tlet wave: Float32Array = instrument.getDrumWave();\r\n\t\tlet phaseDelta: number = +tone.phaseDeltas[0];\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n\t\tif (tone.phases[0] == 0) {\r\n\t\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\r\n\t\t\tphase = Math.random() * Config.chipNoiseLength;\r\n\t\t}\r\n\t\tlet sample: number = +tone.sample;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tconst pitchRelativefilter: number = Math.min(1.0, tone.phaseDeltas[0] * Config.chipNoises[instrument.chipNoise].pitchFilterMult);\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\t\t\tconst waveSample: number = wave[phase & 0x7fff];\r\n\r\n\t\t\tsample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phase / Config.chipNoiseLength;\r\n\t\ttone.sample = sample;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (-epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static spectrumSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tlet wave: Float32Array = instrument.getDrumWave();\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0] * (1 << 7);\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet sample: number = +tone.sample;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\r\n\t\tif (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n\t\tconst pitchRelativefilter: number = Math.min(1.0, phaseDelta);\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\t\t\tconst phaseInt: number = phase | 0;\r\n\t\t\tconst index: number = phaseInt & 0x7fff;\r\n\t\t\tlet waveSample: number = wave[index];\r\n\t\t\tconst phaseRatio: number = phase - phaseInt;\r\n\t\t\twaveSample += (wave[index + 1] - waveSample) * phaseRatio;\r\n\r\n\t\t\tsample += (waveSample - sample) * pitchRelativefilter;\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\r\n\t\ttone.phases[0] = phase / Config.chipNoiseLength;\r\n\t\ttone.sample = sample;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static drumsetSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\tlet wave: Float32Array = instrument.getDrumsetWave(tone.drumsetPitch);\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0] / Instrument.drumsetIndexReferenceDelta(tone.drumsetPitch);;\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScale;\r\n\t\tlet volume: number = +tone.volumeStart;\r\n\t\tconst volumeDelta: number = +tone.volumeDelta;\r\n\t\tlet sample: number = +tone.sample;\r\n\r\n\t\tconst isFirstOrder: boolean = tone.isFirstOrder;\r\n\t\tlet filter1: number = +tone.filter;\r\n\t\tlet filter2: number = isFirstOrder ? 1.0 : filter1;\r\n\t\tconst filterScale1: number = +tone.filterScale;\r\n\t\tconst filterScale2: number = isFirstOrder ? 1.0 : filterScale1;\r\n\t\tlet filterResonance: number = tone.filterResonanceStart;\r\n\t\tlet filterResonanceDelta: number = tone.filterResonanceDelta;\r\n\t\tlet filterSample0: number = +tone.filterSample0;\r\n\t\tlet filterSample1: number = +tone.filterSample1;\r\n\r\n\t\tlet phase: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n\t\t// Zero phase means the tone was reset, just give noise a random start phase instead.\r\n\t\tif (tone.phases[0] == 0) phase = Synth.findRandomZeroCrossing(wave) + phaseDelta;\r\n\r\n\t\tconst stopIndex: number = stereoBufferIndex + runLength;\r\n\t\tstereoBufferIndex += tone.stereoOffset;\r\n\t\tlet stereoVolumeL: number = tone.stereoVolumeLStart;\r\n\t\tlet stereoVolumeLDelta: number = tone.stereoVolumeLDelta;\r\n\t\tlet stereoVolumeR: number = tone.stereoVolumeRStart;\r\n\t\tlet stereoVolumeRDelta: number = tone.stereoVolumeRDelta;\r\n\t\tlet stereoDelay: number = tone.stereoDelayStart;\r\n\t\tlet stereoDelayDelta: number = tone.stereoDelayDelta;\r\n\t\tlet delays: number[];\r\n\t\twhile (stereoBufferIndex < stopIndex) {\r\n\t\t\tconst phaseInt: number = phase | 0;\r\n\t\t\tconst index: number = phaseInt & 0x7fff;\r\n\t\t\tsample = wave[index];\r\n\t\t\tconst phaseRatio: number = phase - phaseInt;\r\n\t\t\tsample += (wave[index + 1] - sample) * phaseRatio;\r\n\r\n\t\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - filter1);\r\n\t\t\tfilterSample0 += filter1 * (sample - filterSample0 + feedback * (filterSample0 - filterSample1));\r\n\t\t\tfilterSample1 += filter2 * (filterSample0 - filterSample1);\r\n\r\n\t\t\tphase += phaseDelta;\r\n\t\t\tfilter1 *= filterScale1;\r\n\t\t\tfilter2 *= filterScale2;\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tfilterResonance += filterResonanceDelta;\r\n\r\n\t\t\tconst output: number = filterSample1 * volume;\r\n\t\t\tvolume += volumeDelta;\r\n\r\n\t\t\t//const absStereoDelay: number = Math.abs(stereoDelay);\r\n\t\t\t//const fracStereoDelay: number = absStereoDelay % 1;\r\n\t\t\t//const floorStereoDelay: number = absStereoDelay | 0;\r\n\r\n\t\t\t//delays = stereoDelay < 0 ? [0, 0, floorStereoDelay * 2, fracStereoDelay] : [floorStereoDelay * 2, fracStereoDelay, 0, 0];\r\n\r\n\t\t\t// Optimized ver: can remove the above three declarations, but muddier conceptually. Still has that conditional, too...\r\n\t\t\tdelays = stereoDelay < 0 ? [0, 0, ((-stereoDelay) | 0) * 2, (-stereoDelay) % 1] : [(stereoDelay | 0) * 2, stereoDelay % 1, 0, 0];\r\n\r\n\t\t\tdata[(stereoBufferIndex + delays[0]) % stereoBufferLength] += output * stereoVolumeL * (1 - delays[1]);\r\n\t\t\tdata[(stereoBufferIndex + delays[0] + 2) % stereoBufferLength] += output * stereoVolumeL * delays[1];\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 1) % stereoBufferLength] += output * stereoVolumeR * (1 - delays[3]);\r\n\t\t\tdata[(stereoBufferIndex + delays[2] + 3) % stereoBufferLength] += output * stereoVolumeR * delays[3];\r\n\r\n\t\t\tstereoVolumeL += stereoVolumeLDelta;\r\n\t\t\tstereoVolumeR += stereoVolumeRDelta;\r\n\t\t\tstereoDelay += stereoDelayDelta;\r\n\r\n\t\t\tstereoBufferIndex += 2;\r\n\t\t}\r\n\t\ttone.phases[0] = phase / Config.chipNoiseLength;\r\n\t\ttone.sample = sample;\r\n\r\n\t\tconst epsilon: number = (1.0e-24);\r\n\t\tif (- epsilon < filterSample0 && filterSample0 < epsilon) filterSample0 = 0.0;\r\n\t\tif (-epsilon < filterSample1 && filterSample1 < epsilon) filterSample1 = 0.0;\r\n\t\ttone.filterSample0 = filterSample0;\r\n\t\ttone.filterSample1 = filterSample1;\r\n\t}\r\n\r\n\tprivate static modSynth(synth: Synth, data: Float32Array, stereoBufferIndex: number, stereoBufferLength: number, runLength: number, tone: Tone, instrument: Instrument): void {\r\n\t\t// Note: present modulator value is tone.volumeStart.\r\n\r\n\t\tif (!synth.song) return;\r\n\r\n\t\tlet mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\t\tlet setting: ModSetting = instrument.modSettings[mod];\r\n\r\n\t\tsynth.setModValue(tone.customVolumeStart, tone.customVolumeEnd, mod, instrument, setting);\r\n\r\n\t\t// Reset arps, but only at the start of the note\r\n\t\tif (setting == ModSetting.mstResetArpeggio && synth.tick == 0 && tone.noteStart == synth.beat * Config.partsPerBeat + synth.part) {\r\n\t\t\tsynth.song.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].arpTime = 0;\r\n\t\t}\r\n\t\telse if (setting == ModSetting.mstNextBar) {\r\n\t\t\tsynth.wantToSkip = true;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static findRandomZeroCrossing(wave: Float32Array): number {\r\n\t\tlet phase: number = Math.random() * Config.chipNoiseLength;\r\n\r\n\t\t// Spectrum and drumset waves sounds best when they start at a zero crossing,\r\n\t\t// otherwise they pop. Try to find a zero crossing.\r\n\t\tlet indexPrev: number = phase & 0x7fff;\r\n\t\tlet wavePrev: number = wave[indexPrev];\r\n\t\tconst stride: number = 16;\r\n\t\tfor (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\r\n\t\t\tconst indexNext: number = (indexPrev + stride) & 0x7fff;\r\n\t\t\tconst waveNext: number = wave[indexNext];\r\n\t\t\tif (wavePrev * waveNext <= 0.0) {\r\n\t\t\t\t// Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\r\n\t\t\t\tfor (let i: number = 0; i < 16; i++) {\r\n\t\t\t\t\tconst innerIndexNext: number = (indexPrev + 1) & 0x7fff;\r\n\t\t\t\t\tconst innerWaveNext: number = wave[innerIndexNext];\r\n\t\t\t\t\tif (wavePrev * innerWaveNext <= 0.0) {\r\n\t\t\t\t\t\t// Found the zero crossing again! Now let's find the exact intersection.\r\n\t\t\t\t\t\tconst slope: number = innerWaveNext - wavePrev;\r\n\t\t\t\t\t\tphase = indexPrev;\r\n\t\t\t\t\t\tif (Math.abs(slope) > 0.00000001) {\r\n\t\t\t\t\t\t\tphase += -wavePrev / slope;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tphase = Math.max(0, phase) % Config.chipNoiseLength;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tindexPrev = innerIndexNext;\r\n\t\t\t\t\t\twavePrev = innerWaveNext;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tindexPrev = indexNext;\r\n\t\t\t\twavePrev = waveNext;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn phase;\r\n\t}\r\n\r\n\tpublic static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\r\n\t\treturn (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\r\n\t}\r\n\tpublic static volumeMultToInstrumentVolume(volumeMult: number): number {\r\n\t\treturn (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\r\n\t}\r\n\tpublic static expressionToVolumeMult(expression: number): number {\r\n\t\treturn Math.pow(Math.max(0.0, expression) / 6.0, 1.5);\r\n\t}\r\n\tpublic static volumeMultToExpression(volumeMult: number): number {\r\n\t\treturn Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * 6.0;\r\n\t}\r\n\r\n\tprivate getSamplesPerTick(): number {\r\n\t\tif (this.song == null) return 0;\r\n\t\tlet beatsPerMinute: number = this.song.getBeatsPerMinute();\r\n\t\tif (this.isModActive(ModSetting.mstTempo, true)) {\r\n\t\t\tbeatsPerMinute = this.getModValue(ModSetting.mstTempo, true);\r\n\t\t}\r\n\t\treturn this.getSamplesPerTickSpecificBPM(beatsPerMinute);\r\n\t}\r\n\r\n\tprivate getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\r\n\t\tconst beatsPerSecond: number = beatsPerMinute / 60.0;\r\n\t\tconst partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\r\n\t\tconst tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\r\n\t\treturn this.samplesPerSecond / tickPerSecond;\r\n\t}\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class BarScrollBar {\r\n\tprivate readonly _editorWidth: number = 512;\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect(\"rect\", { fill: ColorConfig.playhead, x: 0, y: 0, width: 2, height: this._editorHeight });\r\n\tprivate readonly _notches: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 0, y: 2, width: 10, height: this._editorHeight - 4 });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 0, y: 1, width: 10, height: this._editorHeight - 2 });\r\n\tprivate readonly _leftHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _rightHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate _renderedPlayhead: number = -1;\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, width: this._editorWidth, height: this._editorHeight },\r\n\t\tthis._notches,\r\n\t\tthis._handle,\r\n\t\tthis._handleHighlight,\r\n\t\tthis._leftHighlight,\r\n\t\tthis._rightHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"barScrollBar\", style: \"width: 512px; height: 20px; overflow: hidden; position: relative;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _notchSpace: number;\r\n\tprivate _renderedNotchCount: number = -1;\r\n\tprivate _renderedBarPos: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _trackContainer: HTMLDivElement) {\r\n\t\tconst center: number = this._editorHeight * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowHeight: number = 6;\r\n\t\tthis._leftHighlight.setAttribute(\"d\", `M ${tip} ${center} L ${base} ${center + arrowHeight} L ${base} ${center - arrowHeight} z`);\r\n\t\tthis._rightHighlight.setAttribute(\"d\", `M ${this._editorWidth - tip} ${center} L ${this._editorWidth - base} ${center + arrowHeight} L ${this._editorWidth - base} ${center - arrowHeight} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t// Sorry, bypassing typescript type safety on this function because I want to use the new \"passive\" option.\r\n\t\t//this._trackContainer.addEventListener(\"scroll\", this._onScroll, {capture: false, passive: true});\r\n\t\t(<Function>this._trackContainer.addEventListener)(\"scroll\", this._onScroll, { capture: false, passive: true });\r\n\t}\r\n\r\n\tpublic animatePlayhead = (): void => {\r\n\t\tconst playhead = Math.min(512, Math.max(0, (this._notchSpace * this._doc.synth.playhead - 2)));\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onScroll = (event: Event): void => {\r\n\t\tthis._doc.barScrollPos = (this._trackContainer.scrollLeft / this._doc.getBarWidth());\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updatePreview();\r\n\t\tif (this._mouseX >= this._doc.barScrollPos * this._notchSpace && this._mouseX <= (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._dragStart = this._mouseX;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._dragging) {\r\n\t\t\twhile (this._mouseX - this._dragStart < -this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart -= this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseX - this._dragStart > this._notchSpace * 0.5) {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tpublic changePos(offset: number) {\r\n\t\twhile (Math.abs(offset) >= 1) {\r\n\r\n\t\t\tif (offset < 0) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) {\r\n\t\t\t\t\tthis._doc.barScrollPos--;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\t\t\t\t\tthis._doc.barScrollPos++;\r\n\t\t\t\t\tthis._dragStart += this._notchSpace;\r\n\t\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\toffset += (offset > 0) ? -1 : 1;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._dragging && this._mouseDown) {\r\n\t\t\tif (this._mouseX < (this._doc.barScrollPos + 8) * this._notchSpace) {\r\n\t\t\t\tif (this._doc.barScrollPos > 0) this._doc.barScrollPos--;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t} else {\r\n\t\t\t\tif (this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) this._doc.barScrollPos++;\r\n\t\t\t\tthis._doc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showleftHighlight: boolean = false;\r\n\t\tlet showRightHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseX < this._doc.barScrollPos * this._notchSpace) {\r\n\t\t\t\tshowleftHighlight = true;\r\n\t\t\t} else if (this._mouseX > (this._doc.barScrollPos + this._doc.trackVisibleBars) * this._notchSpace) {\r\n\t\t\t\tshowRightHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._leftHighlight.style.visibility = showleftHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._rightHighlight.style.visibility = showRightHighlight ? \"visible\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"visible\" : \"hidden\";\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tthis._notchSpace = (this._editorWidth - 1) / Math.max(this._doc.trackVisibleBars, this._doc.song.barCount);\r\n\r\n\t\tconst resized: boolean = this._renderedNotchCount != this._doc.song.barCount;\r\n\t\tif (resized) {\r\n\t\t\tthis._renderedNotchCount = this._doc.song.barCount;\r\n\r\n\t\t\twhile (this._notches.firstChild) this._notches.removeChild(this._notches.firstChild);\r\n\r\n\t\t\tfor (let i: number = 0; i <= this._doc.song.barCount; i++) {\r\n\t\t\t\tconst lineHeight: number = (i % 16 == 0) ? 0 : ((i % 4 == 0) ? this._editorHeight / 8 : this._editorHeight / 3);\r\n\t\t\t\tthis._notches.appendChild(SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: i * this._notchSpace - 1, y: lineHeight, width: 2, height: this._editorHeight - lineHeight * 2 }));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (resized || this._renderedBarPos != this._doc.barScrollPos) {\r\n\t\t\tthis._renderedBarPos = this._doc.barScrollPos;\r\n\t\t\tthis._handle.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handle.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t\tthis._handleHighlight.setAttribute(\"x\", \"\" + (this._notchSpace * this._doc.barScrollPos));\r\n\t\t\tthis._handleHighlight.setAttribute(\"width\", \"\" + (this._notchSpace * this._doc.trackVisibleBars));\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t\tthis._trackContainer.scrollLeft = this._doc.barScrollPos * this._doc.getBarWidth();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport class Change {\r\n\tprivate _noop: boolean = true;\r\n\r\n\tprotected _didSomething(): void {\r\n\t\tthis._noop = false;\r\n\t}\r\n\r\n\tpublic isNoop(): boolean {\r\n\t\treturn this._noop;\r\n\t}\r\n\r\n\tpublic commit(): void { }\r\n}\r\n\r\nexport class UndoableChange extends Change {\r\n\tprivate _reversed: boolean;\r\n\tprivate _doneForwards: boolean;\r\n\tconstructor(reversed: boolean) {\r\n\t\tsuper();\r\n\t\tthis._reversed = reversed;\r\n\t\tthis._doneForwards = !reversed;\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t} else {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tif (this._reversed) {\r\n\t\t\tthis._doBackwards();\r\n\t\t\tthis._doneForwards = false;\r\n\t\t} else {\r\n\t\t\tthis._doForwards();\r\n\t\t\tthis._doneForwards = true;\r\n\t\t}\r\n\t}\r\n\r\n\t// isDoneForwards() returns whether or not the Change was most recently \r\n\t// performed forwards or backwards. If the change created something, do not \r\n\t// delete it in the change destructor unless the Change was performed \r\n\t// backwards: \r\n\tprotected _isDoneForwards(): boolean {\r\n\t\treturn this._doneForwards;\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthrow new Error(\"Change.doForwards(): Override me.\");\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthrow new Error(\"Change.doBackwards(): Override me.\");\r\n\t}\r\n}\r\n\r\nexport class ChangeGroup extends Change {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tpublic append(change: Change): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSequence extends UndoableChange {\r\n\tprivate _changes: UndoableChange[];\r\n\tconstructor(changes?: UndoableChange[]) {\r\n\t\tsuper(false);\r\n\t\tif (changes == undefined) {\r\n\t\t\tthis._changes = [];\r\n\t\t} else {\r\n\t\t\tthis._changes = changes.concat();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic append(change: UndoableChange): void {\r\n\t\tif (change.isNoop()) return;\r\n\t\tthis._changes[this._changes.length] = change;\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tfor (let i: number = 0; i < this._changes.length; i++) {\r\n\t\t\tthis._changes[i].redo();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tfor (let i: number = this._changes.length - 1; i >= 0; i--) {\r\n\t\t\tthis._changes[i].undo();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Algorithm, Dictionary, InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, SpectrumWave, HarmonicsWave, Instrument, Channel, Song, ModStatus, ModSetting } from \"../synth/synth\";\r\nimport { Preset, PresetCategory, EditorConfig } from \"./EditorConfig\";\r\nimport { Change, ChangeGroup, ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport function unionOfUsedNotes(pattern: Pattern, flags: boolean[]): void {\r\n\tfor (const note of pattern.notes) {\r\n\t\tfor (const pitch of note.pitches) {\r\n\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\tconst key: number = (pitch + pin.interval) % 12;\r\n\t\t\t\tif (!flags[key]) {\r\n\t\t\t\t\tflags[key] = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function generateScaleMap(oldScaleFlags: ReadonlyArray<boolean>, newScaleValue: number): number[] {\r\n\tconst newScaleFlags: ReadonlyArray<boolean> = Config.scales[newScaleValue].flags;\r\n\tconst oldScale: number[] = [];\r\n\tconst newScale: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tif (oldScaleFlags[i]) oldScale.push(i);\r\n\t\tif (newScaleFlags[i]) newScale.push(i);\r\n\t}\r\n\tconst largerToSmaller: boolean = oldScale.length > newScale.length;\r\n\tconst smallerScale: number[] = largerToSmaller ? newScale : oldScale;\r\n\tconst largerScale: number[] = largerToSmaller ? oldScale : newScale;\r\n\r\n\tconst roles: string[] = [\"root\", \"second\", \"second\", \"third\", \"third\", \"fourth\", \"tritone\", \"fifth\", \"sixth\", \"sixth\", \"seventh\", \"seventh\", \"root\"];\r\n\tlet bestScore: number = Number.MAX_SAFE_INTEGER;\r\n\tlet bestIndexMap: number[] = [];\r\n\tconst stack: number[][] = [[0]]; // Root always maps to root.\r\n\r\n\twhile (stack.length > 0) {\r\n\t\tconst indexMap: number[] = stack.pop()!;\r\n\r\n\t\tif (indexMap.length == smallerScale.length) {\r\n\t\t\t// Score this mapping.\r\n\t\t\tlet score: number = 0;\r\n\t\t\tfor (let i: number = 0; i < indexMap.length; i++) {\r\n\t\t\t\tscore += Math.abs(smallerScale[i] - largerScale[indexMap[i]]);\r\n\t\t\t\tif (roles[smallerScale[i]] != roles[largerScale[indexMap[i]]]) {\r\n\t\t\t\t\t// Penalize changing roles.\r\n\t\t\t\t\tscore += 0.75;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (bestScore > score) {\r\n\t\t\t\tbestScore = score;\r\n\t\t\t\tbestIndexMap = indexMap;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Recursively choose next indices for mapping.\r\n\t\t\tconst lowIndex: number = indexMap[indexMap.length - 1] + 1;\r\n\t\t\tconst highIndex: number = largerScale.length - smallerScale.length + indexMap.length;\r\n\t\t\tfor (let i: number = lowIndex; i <= highIndex; i++) {\r\n\t\t\t\tstack.push(indexMap.concat(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst sparsePitchMap: number[][] = [];\r\n\tfor (let i: number = 0; i < bestIndexMap.length; i++) {\r\n\t\tconst smallerScalePitch = smallerScale[i];\r\n\t\tconst largerScalePitch = largerScale[bestIndexMap[i]];\r\n\t\tsparsePitchMap[i] = largerToSmaller\r\n\t\t\t? [largerScalePitch, smallerScalePitch]\r\n\t\t\t: [smallerScalePitch, largerScalePitch];\r\n\t}\r\n\r\n\t// To make it easier to wrap around.\r\n\tsparsePitchMap.push([12, 12]);\r\n\tnewScale.push(12);\r\n\r\n\tlet sparseIndex: number = 0;\r\n\tconst fullPitchMap: number[] = [];\r\n\tfor (let i: number = 0; i < 12; i++) {\r\n\t\tconst oldLow: number = sparsePitchMap[sparseIndex][0];\r\n\t\tconst newLow: number = sparsePitchMap[sparseIndex][1];\r\n\t\tconst oldHigh: number = sparsePitchMap[sparseIndex + 1][0];\r\n\t\tconst newHigh: number = sparsePitchMap[sparseIndex + 1][1];\r\n\t\tif (i == oldHigh - 1) sparseIndex++;\r\n\r\n\t\tconst transformedPitch: number = (i - oldLow) * (newHigh - newLow) / (oldHigh - oldLow) + newLow;\r\n\r\n\t\tlet nearestPitch: number = 0;\r\n\t\tlet nearestPitchDistance: number = Number.MAX_SAFE_INTEGER;\r\n\t\tfor (const newPitch of newScale) {\r\n\t\t\tlet distance: number = Math.abs(newPitch - transformedPitch);\r\n\t\t\tif (roles[newPitch] != roles[i]) {\r\n\t\t\t\t// Again, penalize changing roles.\r\n\t\t\t\tdistance += 0.1;\r\n\t\t\t}\r\n\t\t\tif (nearestPitchDistance > distance) {\r\n\t\t\t\tnearestPitchDistance = distance;\r\n\t\t\t\tnearestPitch = newPitch;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfullPitchMap[i] = nearestPitch;\r\n\t}\r\n\r\n\treturn fullPitchMap;\r\n}\r\n\r\nfunction projectNoteIntoBar(oldNote: Note, timeOffset: number, noteStartPart: number, noteEndPart: number, newNotes: Note[]): void {\r\n\t// Create a new note, and interpret the pitch bend and expression events\r\n\t// to determine where we need to insert pins to control interval and volume.\r\n\tconst newNote: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\tnewNotes.push(newNote);\r\n\tnewNote.pins.length = 0;\r\n\tnewNote.pitches.length = 0;\r\n\tconst newNoteLength: number = noteEndPart - noteStartPart;\r\n\r\n\tfor (const pitch of oldNote.pitches) {\r\n\t\tnewNote.pitches.push(pitch);\r\n\t}\r\n\r\n\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\tconst pin: NotePin = oldNote.pins[pinIndex];\r\n\t\tconst newPinTime: number = pin.time + timeOffset;\r\n\t\tif (newPinTime < 0) {\r\n\t\t\tif (pinIndex + 1 >= oldNote.pins.length) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst nextPin: NotePin = oldNote.pins[pinIndex + 1];\r\n\t\t\tconst nextPinTime: number = nextPin.time + timeOffset;\r\n\t\t\tif (nextPinTime > 0) {\r\n\t\t\t\t// Insert an interpolated pin at the start of the new note.\r\n\t\t\t\tconst ratio: number = (-newPinTime) / (nextPinTime - newPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(pin.interval + ratio * (nextPin.interval - pin.interval)), 0, Math.round(pin.volume + ratio * (nextPin.volume - pin.volume))));\r\n\r\n\t\t\t}\r\n\t\t} else if (newPinTime <= newNoteLength) {\r\n\t\t\tnewNote.pins.push(makeNotePin(pin.interval, newPinTime, pin.volume));\r\n\t\t} else {\r\n\t\t\tif (pinIndex < 1) throw new Error(\"Error converting pins in note overflow.\");\r\n\t\t\tconst prevPin: NotePin = oldNote.pins[pinIndex - 1];\r\n\t\t\tconst prevPinTime: number = prevPin.time + timeOffset;\r\n\t\t\tif (prevPinTime < newNoteLength) {\r\n\t\t\t\t// Insert an interpolated pin at the end of the new note.\r\n\t\t\t\tconst ratio: number = (newNoteLength - prevPinTime) / (newPinTime - prevPinTime);\r\n\t\t\t\tnewNote.pins.push(makeNotePin(Math.round(prevPin.interval + ratio * (pin.interval - prevPin.interval)), newNoteLength, Math.round(prevPin.volume + ratio * (pin.volume - prevPin.volume))));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Fix from Jummbus: Ensure the first pin's interval is zero, adjust pitches and pins to compensate.\r\n\tconst offsetInterval: number = newNote.pins[0].interval;\r\n\tfor (let pitchIdx: number = 0; pitchIdx < newNote.pitches.length; pitchIdx++) {\r\n\t\tnewNote.pitches[pitchIdx] += offsetInterval;\r\n\t}\r\n\tfor (let pinIdx: number = 0; pinIdx < newNote.pins.length; pinIdx++) {\r\n\t\tnewNote.pins[pinIdx].interval -= offsetInterval;\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveAndOverflowNotes extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newBeatsPerBar: number, partsToMove: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = []\r\n\r\n\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\tconst oldChannel: Channel = doc.song.channels[channelIndex];\r\n\t\t\tconst newChannel: Channel = new Channel();\r\n\r\n\t\t\tif (channelIndex < doc.song.pitchChannelCount) {\r\n\t\t\t\tpitchChannels.push(newChannel);\r\n\t\t\t} else if (channelIndex < doc.song.pitchChannelCount + doc.song.noiseChannelCount) {\r\n\t\t\t\tnoiseChannels.push(newChannel);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tmodChannels.push(newChannel);\r\n\t\t\t}\r\n\r\n\t\t\tnewChannel.muted = oldChannel.muted;\r\n\t\t\tnewChannel.octave = oldChannel.octave;\r\n\t\t\tnewChannel.name = oldChannel.name;\r\n\r\n\t\t\tfor (const instrument of oldChannel.instruments) {\r\n\t\t\t\tnewChannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tconst oldPartsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\tconst newPartsPerBar: number = Config.partsPerBeat * newBeatsPerBar;\r\n\t\t\tlet currentBar: number = -1;\r\n\t\t\tlet pattern: Pattern | null = null;\r\n\r\n\t\t\tfor (let oldBar: number = 0; oldBar < doc.song.barCount; oldBar++) {\r\n\t\t\t\tconst oldPattern: Pattern | null = doc.song.getPattern(channelIndex, oldBar);\r\n\t\t\t\tif (oldPattern != null) {\r\n\t\t\t\t\tconst oldBarStart: number = oldBar * oldPartsPerBar;\r\n\t\t\t\t\tfor (const oldNote of oldPattern.notes) {\r\n\r\n\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + oldBarStart + partsToMove;\r\n\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + oldBarStart + partsToMove;\r\n\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(absoluteNoteStart / newPartsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(absoluteNoteEnd / newPartsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * newPartsPerBar;\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(newPartsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar < bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tnewChannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tnewChannel.bars[currentBar] = newChannel.patterns.length;\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = oldPattern.instrument;\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// This is a consideration to allow arbitrary note sequencing, e.g. for mod channels (so the pattern being used can jump around)\r\n\t\t\t\t\t\t\t\tpattern = newChannel.patterns[newChannel.bars[bar] - 1];\r\n\r\n\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, pattern.notes);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\tremoveDuplicatePatterns(modChannels);\r\n\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t}\r\n}\r\n\r\nexport class ChangePins extends UndoableChange {\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(protected _doc: SongDocument | null, protected _note: Note) {\r\n\t\tsuper(false);\r\n\t\tthis._oldStart = this._note.start;\r\n\t\tthis._oldEnd = this._note.end;\r\n\t\tthis._newStart = this._note.start;\r\n\t\tthis._newEnd = this._note.end;\r\n\t\tthis._oldPins = this._note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = this._note.pitches;\r\n\t\tthis._newPitches = [];\r\n\t}\r\n\r\n\tprotected _finishSetup(): void {\r\n\t\tfor (let i: number = 0; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i].time >= this._newPins[i + 1].time) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst firstInterval: number = this._newPins[0].interval;\r\n\t\tconst firstTime: number = this._newPins[0].time;\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tthis._newPitches[i] = this._oldPitches[i] + firstInterval;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < this._newPins.length; i++) {\r\n\t\t\tthis._newPins[i].interval -= firstInterval;\r\n\t\t\tthis._newPins[i].time -= firstTime;\r\n\t\t}\r\n\t\tthis._newStart = this._oldStart + firstTime;\r\n\t\tthis._newEnd = this._newStart + this._newPins[this._newPins.length - 1].time;\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._note.start = this._newStart;\r\n\t\tthis._note.end = this._newEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._note.start = this._oldStart;\r\n\t\tthis._note.end = this._oldEnd;\r\n\t\tif (this._doc != null) this._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomizeInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.preset != instrument.type) {\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeCustomWave extends Change {\r\n\tconstructor(doc: SongDocument, newArray: Float64Array) {\r\n\t\tsuper();\r\n\t\tconst oldArray: Float64Array = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].customChipWave;\r\n\t\tvar comparisonResult: boolean = true;\r\n\t\tfor (let i: number = 0; i < oldArray.length; i++) {\r\n\t\t\tif (oldArray[i] != newArray[i]) {\r\n\t\t\t\tcomparisonResult = false;\r\n\t\t\t\ti = oldArray.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (comparisonResult == false) {\r\n\t\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\t\tfor (let i: number = 0; i < newArray.length; i++) {\r\n\t\t\t\tinstrument.customChipWave[i] = newArray[i];\r\n\t\t\t}\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tsum += instrument.customChipWave[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / instrument.customChipWave.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = instrument.customChipWave[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePreset extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.preset;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(newValue);\r\n\t\t\tif (preset != null) {\r\n\t\t\t\tif (preset.customType != undefined) {\r\n\t\t\t\t\tinstrument.type = preset.customType;\r\n\t\t\t\t\tif (!Config.instrumentTypeHasSpecialInterval[instrument.type] && Config.chords[instrument.chord].isCustomInterval) {\r\n\t\t\t\t\t\tinstrument.chord = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (preset.settings != undefined) {\r\n\t\t\t\t\tconst tempVolume: number = instrument.volume;\r\n\t\t\t\t\tconst tempPan: number = instrument.pan;\r\n\t\t\t\t\tconst tempPanDelay: number = instrument.panDelay;\r\n\t\t\t\t\tinstrument.fromJsonObject(preset.settings, doc.song.getChannelIsNoise(doc.channel), doc.song.getChannelIsMod(doc.channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\tinstrument.volume = tempVolume;\r\n\t\t\t\t\tinstrument.pan = tempPan;\r\n\t\t\t\t\tinstrument.panDelay = tempPanDelay;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinstrument.preset = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeRandomGeneratedInstrument extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\r\n\t\tinterface ItemWeight<T> {\r\n\t\t\treadonly item: T;\r\n\t\t\treadonly weight: number;\r\n\t\t}\r\n\t\tfunction selectWeightedRandom<T>(entries: ReadonlyArray<ItemWeight<T>>): T {\r\n\t\t\tlet total: number = 0;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\ttotal += entry.weight;\r\n\t\t\t}\r\n\t\t\tlet random: number = Math.random() * total;\r\n\t\t\tfor (const entry of entries) {\r\n\t\t\t\trandom -= entry.weight;\r\n\t\t\t\tif (random <= 0.0) return entry.item;\r\n\t\t\t}\r\n\t\t\treturn entries[(Math.random() * entries.length) | 0].item;\r\n\t\t}\r\n\t\tfunction selectCurvedDistribution(min: number, max: number, peak: number, width: number): number {\r\n\t\t\tconst entries: Array<ItemWeight<number>> = [];\r\n\t\t\tfor (let i: number = min; i <= max; i++) {\r\n\t\t\t\tentries.push({ item: i, weight: 1.0 / (Math.pow((i - peak) / width, 2.0) + 1.0) });\r\n\t\t\t}\r\n\t\t\treturn selectWeightedRandom(entries);\r\n\t\t}\r\n\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(doc.channel);\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (isNoise) {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.noise, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 3 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(4, Config.filterCutoffRange - 1, Config.filterCutoffRange - 2, 2);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 2 },\r\n\t\t\t\t{ item: \"punch\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 8 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 8 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 4 },\r\n\t\t\t\t{ item: \"decay 3\", weight: 4 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 2 },\r\n\t\t\t\t{ item: \"slide\", weight: 1 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 2 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 8 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n\t\t\t\t{ item: \"soft fade\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 3 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 4 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.noise: {\r\n\t\t\t\t\tinstrument.chipNoise = (Math.random() * Config.chipNoises.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrumGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tspectrum[i] = (Math.random() < 0.5) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst spectrum: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.52);\r\n\t\t\t\t\t\t\t\tspectrum[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn spectrum;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = spectrumGenerators[(Math.random() * spectrumGenerators.length) | 0];\r\n\t\t\t\t\tconst spectrum: number[] = generator();\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled noise instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst type: InstrumentType = selectWeightedRandom([\r\n\t\t\t\t{ item: InstrumentType.chip, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.pwm, weight: 4 },\r\n\t\t\t\t{ item: InstrumentType.harmonics, weight: 6 },\r\n\t\t\t\t{ item: InstrumentType.spectrum, weight: 1 },\r\n\t\t\t\t{ item: InstrumentType.fm, weight: 4 },\r\n\t\t\t]);\r\n\t\t\tinstrument.preset = instrument.type = type;\r\n\t\t\tinstrument.filterCutoff = selectCurvedDistribution(2, Config.filterCutoffRange - 1, 7, 1.5);\r\n\t\t\tinstrument.filterResonance = selectCurvedDistribution(0, Config.filterResonanceRange - 1, 1, 2);\r\n\t\t\tinstrument.filterEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t{ item: \"swell 3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n\t\t\t\t{ item: \"decay 3\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.transition = Config.transitions.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"seamless\", weight: 1 },\r\n\t\t\t\t{ item: \"hard\", weight: 4 },\r\n\t\t\t\t{ item: \"soft\", weight: 4 },\r\n\t\t\t\t{ item: \"slide\", weight: 2 },\r\n\t\t\t\t{ item: \"cross fade\", weight: 4 },\r\n\t\t\t\t{ item: \"hard fade\", weight: 4 },\r\n\t\t\t\t{ item: \"medium fade\", weight: 2 },\r\n\t\t\t\t{ item: \"soft fade\", weight: 2 },\r\n\t\t\t])].index;\r\n\t\t\tinstrument.effects = Config.effectsNames.indexOf(selectWeightedRandom([\r\n\t\t\t\t{ item: \"none\", weight: 1 },\r\n\t\t\t\t{ item: \"reverb\", weight: 10 },\r\n\t\t\t\t{ item: \"chorus\", weight: 2 },\r\n\t\t\t\t{ item: \"chorus & reverb\", weight: 2 },\r\n\t\t\t]));\r\n\t\t\tinstrument.chord = Config.chords.dictionary[selectWeightedRandom([\r\n\t\t\t\t{ item: \"harmony\", weight: 7 },\r\n\t\t\t\t{ item: \"strum\", weight: 2 },\r\n\t\t\t\t{ item: \"arpeggio\", weight: 1 },\r\n\t\t\t])].index;\r\n\t\t\tif (type != InstrumentType.spectrum) {\r\n\t\t\t\tinstrument.vibrato = Config.vibratos.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"none\", weight: 6 },\r\n\t\t\t\t\t{ item: \"light\", weight: 2 },\r\n\t\t\t\t\t{ item: \"delayed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"heavy\", weight: 1 },\r\n\t\t\t\t\t{ item: \"shaky\", weight: 2 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tif (type == InstrumentType.chip || type == InstrumentType.harmonics) {\r\n\t\t\t\tinstrument.interval = Config.intervals.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t{ item: \"union\", weight: 10 },\r\n\t\t\t\t\t{ item: \"shimmer\", weight: 5 },\r\n\t\t\t\t\t{ item: \"hum\", weight: 4 },\r\n\t\t\t\t\t{ item: \"honky tonk\", weight: 3 },\r\n\t\t\t\t\t{ item: \"dissonant\", weight: 1 },\r\n\t\t\t\t\t{ item: \"fifth\", weight: 1 },\r\n\t\t\t\t\t{ item: \"octave\", weight: 2 },\r\n\t\t\t\t\t{ item: \"bowed\", weight: 2 },\r\n\t\t\t\t\t{ item: \"piano\", weight: 5 },\r\n\t\t\t\t])].index;\r\n\t\t\t}\r\n\t\t\tfunction normalize(harmonics: number[]): void {\r\n\t\t\t\tlet max: number = 0;\r\n\t\t\t\tfor (const value of harmonics) {\r\n\t\t\t\t\tif (value > max) max = value;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i: number = 0; i < harmonics.length; i++) {\r\n\t\t\t\t\tharmonics[i] = Config.harmonicsMax * harmonics[i] / max;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase InstrumentType.chip: {\r\n\t\t\t\t\tinstrument.chipWave = (Math.random() * Config.chipWaves.length) | 0;\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.pwm: {\r\n\t\t\t\t\tinstrument.pulseEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 10 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 6 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"decay 3\", weight: 2 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t\tinstrument.pulseWidth = selectCurvedDistribution(0, Config.pulseWidthRange - 1, Config.pulseWidthRange - 1, 2);\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.harmonics: {\r\n\t\t\t\t\tconst harmonicGenerators: Function[] = [\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [];\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tharmonics[i] = (Math.random() < 0.4) ? Math.random() : 0.0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tharmonics[(Math.random() * 8) | 0] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t(): number[] => {\r\n\t\t\t\t\t\t\tlet current: number = 1.0;\r\n\t\t\t\t\t\t\tconst harmonics: number[] = [current];\r\n\t\t\t\t\t\t\tfor (let i = 1; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\t\t\tcurrent *= Math.pow(2, Math.random() - 0.55);\r\n\t\t\t\t\t\t\t\tharmonics[i] = current * Math.random();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn harmonics;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t];\r\n\t\t\t\t\tconst generator = harmonicGenerators[(Math.random() * harmonicGenerators.length) | 0];\r\n\t\t\t\t\tconst harmonics: number[] = generator();\r\n\t\t\t\t\tnormalize(harmonics);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.harmonicsWave.harmonics[i] = Math.round(harmonics[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.harmonicsWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.spectrum: {\r\n\t\t\t\t\tconst spectrum: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tconst isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21;\r\n\t\t\t\t\t\tif (isHarmonic) {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 0.25);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tspectrum[i] = Math.pow(Math.random(), 3) * 0.5;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnormalize(spectrum);\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\t\t\t\tinstrument.spectrumWave.spectrum[i] = Math.round(spectrum[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.spectrumWave.markCustomWaveDirty();\r\n\t\t\t\t} break;\r\n\t\t\t\tcase InstrumentType.fm: {\r\n\t\t\t\t\tinstrument.algorithm = (Math.random() * Config.algorithms.length) | 0;\r\n\t\t\t\t\tinstrument.feedbackType = (Math.random() * Config.feedbacks.length) | 0;\r\n\t\t\t\t\tconst algorithm: Algorithm = Config.algorithms[instrument.algorithm];\r\n\t\t\t\t\tfor (let i: number = 0; i < algorithm.carrierCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(0, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = selectCurvedDistribution(0, Config.operatorAmplitudeMax, Config.operatorAmplitudeMax - 1, 2);\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[\"custom\"].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = algorithm.carrierCount; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tinstrument.operators[i].frequency = selectCurvedDistribution(3, Config.operatorFrequencies.length - 1, 0, 3);\r\n\t\t\t\t\t\tinstrument.operators[i].amplitude = (Math.pow(Math.random(), 2) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\t\tinstrument.operators[i].envelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t\t{ item: \"steady\", weight: 6 },\r\n\t\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n\t\t\t\t\t\t\t{ item: \"decay 3\", weight: 1 },\r\n\t\t\t\t\t\t])].index;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstrument.feedbackAmplitude = (Math.pow(Math.random(), 3) * Config.operatorAmplitudeMax) | 0;\r\n\t\t\t\t\tinstrument.feedbackEnvelope = Config.envelopes.dictionary[selectWeightedRandom([\r\n\t\t\t\t\t\t{ item: \"steady\", weight: 4 },\r\n\t\t\t\t\t\t{ item: \"punch\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"flare 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"twang 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 1\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 2\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"swell 3\", weight: 2 },\r\n\t\t\t\t\t\t{ item: \"tremolo1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo3\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo4\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo5\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"tremolo6\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 1\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 2\", weight: 1 },\r\n\t\t\t\t\t\t{ item: \"decay 3\", weight: 1 },\r\n\t\t\t\t\t])].index;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unhandled pitched instrument type in random generator.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.transition;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.transition = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEffects extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.effects;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.effects = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternNumbers extends Change {\r\n\tconstructor(doc: SongDocument, value: number, startBar: number, startChannel: number, width: number, height: number) {\r\n\t\tsuper();\r\n\t\tif (value > doc.song.patternsPerChannel) throw new Error(\"invalid pattern\");\r\n\r\n\t\tfor (let bar: number = startBar; bar < startBar + width; bar++) {\r\n\t\t\tfor (let channel: number = startChannel; channel < startChannel + height; channel++) {\r\n\t\t\t\tif (doc.song.channels[channel].bars[bar] != value) {\r\n\t\t\t\t\tdoc.song.channels[channel].bars[bar] = value;\r\n\t\t\t\t\tthis._didSomething();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeBarCount extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, atBeginning: boolean) {\r\n\t\tsuper();\r\n\t\tif (doc.song.barCount != newValue) {\r\n\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\tif (atBeginning) {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.unshift(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (doc.song.barCount > newValue) {\r\n\t\t\t\t\t\tchannel.bars.splice(0, doc.song.barCount - newValue);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\twhile (channel.bars.length < newValue) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchannel.bars.length = newValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (atBeginning) {\r\n\t\t\t\tconst diff: number = newValue - doc.song.barCount;\r\n\t\t\t\tdoc.bar = Math.max(0, doc.bar + diff);\r\n\t\t\t\tif (diff < 0 || doc.barScrollPos > 0) {\r\n\t\t\t\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos + diff);\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart + diff);\r\n\t\t\t}\r\n\t\t\tdoc.bar = Math.min(doc.bar, newValue - 1);\r\n\t\t\tdoc.barScrollPos = Math.max(0, Math.min(newValue - doc.trackVisibleBars, doc.barScrollPos));\r\n\t\t\tdoc.song.loopLength = Math.min(newValue, doc.song.loopLength);\r\n\t\t\tdoc.song.loopStart = Math.min(newValue - doc.song.loopLength, doc.song.loopStart);\r\n\t\t\tdoc.song.barCount = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInsertBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tconst newLength: number = Math.min(Config.barCountMax, doc.song.barCount + count);\r\n\t\tcount = newLength - doc.song.barCount;\r\n\t\tif (count == 0) return;\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\twhile (channel.bars.length < newLength) {\r\n\t\t\t\tchannel.bars.splice(start, 0, 0);\r\n\t\t\t}\r\n\t\t}\r\n\t\tdoc.song.barCount = newLength;\r\n\r\n\t\tdoc.bar += count;\r\n\t\tdoc.barScrollPos = Math.min(newLength - doc.trackVisibleBars, doc.barScrollPos + count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart += count;\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength >= start) {\r\n\t\t\tdoc.song.loopLength += count;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDeleteBars extends Change {\r\n\tconstructor(doc: SongDocument, start: number, count: number) {\r\n\t\tsuper();\r\n\r\n\t\tfor (const channel of doc.song.channels) {\r\n\t\t\tchannel.bars.splice(start, count);\r\n\t\t\tif (channel.bars.length == 0) channel.bars.push(0);\r\n\t\t}\r\n\t\tdoc.song.barCount = Math.max(1, doc.song.barCount - count);\r\n\r\n\t\tdoc.bar = Math.max(0, doc.bar - count);\r\n\r\n\t\tdoc.barScrollPos = Math.max(0, doc.barScrollPos - count);\r\n\t\tif (doc.song.loopStart >= start) {\r\n\t\t\tdoc.song.loopStart = Math.max(0, doc.song.loopStart - count);\r\n\t\t} else if (doc.song.loopStart + doc.song.loopLength > start) {\r\n\t\t\tdoc.song.loopLength -= count;\r\n\t\t}\r\n\t\tdoc.song.loopLength = Math.max(1, Math.min(doc.song.barCount - doc.song.loopStart, doc.song.loopLength));\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeLimiterSettings extends Change {\r\n\tconstructor(doc: SongDocument, limitRatio: number, compressionRatio: number, limitThreshold: number, compressionThreshold: number, limitRise: number, limitDecay: number, masterGain: number) {\r\n\t\tsuper();\r\n\r\n\t\t// This check causes issues with the state change handler because it gets superceded by whenupdated when the limiter prompt closes for some reason, causing the state to revert. I think it's because the notifier change needs to happen right as the prompt closes.\r\n\t\t//if (limitRatio != doc.song.limitRatio || compressionRatio != doc.song.compressionRatio || limitThreshold != doc.song.limitThreshold || compressionThreshold != doc.song.compressionThreshold || limitRise != doc.song.limitRise || limitDecay != doc.song.limitDecay) {\r\n\r\n\t\tdoc.song.limitRatio = limitRatio;\r\n\t\tdoc.song.compressionRatio = compressionRatio;\r\n\t\tdoc.song.limitThreshold = limitThreshold;\r\n\t\tdoc.song.compressionThreshold = compressionThreshold;\r\n\t\tdoc.song.limitRise = limitRise;\r\n\t\tdoc.song.limitDecay = limitDecay;\r\n\t\tdoc.song.masterGain = masterGain;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t\t//}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelOrder extends Change {\r\n\tconstructor(doc: SongDocument, firstChannelIdx: number, secondChannelIdx: number) {\r\n\t\tsuper();\r\n\t\t// Change the order of two channels by swapping.\r\n\t\tlet toSwap = doc.song.channels[firstChannelIdx];\r\n\t\tdoc.song.channels[firstChannelIdx] = doc.song.channels[secondChannelIdx];\r\n\t\tdoc.song.channels[secondChannelIdx] = toSwap;\r\n\r\n\t\t// Update mods for each channel\r\n\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\t\t\t\t\tlet channelOffset: number = (instrument.modStatuses[i] == ModStatus.msForNoise ? doc.song.pitchChannelCount : 0);\r\n\t\t\t\t\tif (instrument.modChannels[i] + channelOffset == firstChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = secondChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (instrument.modChannels[i] + channelOffset == secondChannelIdx) {\r\n\t\t\t\t\t\tinstrument.modChannels[i] = firstChannelIdx - channelOffset;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelCount extends Change {\r\n\tconstructor(doc: SongDocument, newPitchChannelCount: number, newNoiseChannelCount: number, newModChannelCount: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.pitchChannelCount != newPitchChannelCount || doc.song.noiseChannelCount != newNoiseChannelCount || doc.song.modChannelCount != newModChannelCount) {\r\n\t\t\tconst newChannels: Channel[] = [];\r\n\r\n\t\t\tfunction changeGroup(newCount: number, oldCount: number, newStart: number, oldStart: number, octave: number, isNoise: boolean, isMod: boolean): void {\r\n\t\t\t\tfor (let i: number = 0; i < newCount; i++) {\r\n\t\t\t\t\tconst channel = i + newStart;\r\n\t\t\t\t\tconst oldChannel = i + oldStart;\r\n\t\t\t\t\tif (i < oldCount) {\r\n\t\t\t\t\t\tnewChannels[channel] = doc.song.channels[oldChannel];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewChannels[channel] = new Channel();\r\n\t\t\t\t\t\tnewChannels[channel].octave = octave;\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.instrumentsPerChannel; j++) {\r\n\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoise, isMod);\r\n\t\t\t\t\t\t\tconst presetValue: number = pickRandomPresetValue(isNoise);\r\n\t\t\t\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\tnewChannels[channel].instruments[j] = instrument;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].patterns[j] = new Pattern();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.barCount; j++) {\r\n\t\t\t\t\t\t\tnewChannels[channel].bars[j] = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tchangeGroup(newPitchChannelCount, doc.song.pitchChannelCount, 0, 0, 2, false, false);\r\n\t\t\tchangeGroup(newNoiseChannelCount, doc.song.noiseChannelCount, newPitchChannelCount, doc.song.pitchChannelCount, 0, true, false);\r\n\t\t\tchangeGroup(newModChannelCount, doc.song.modChannelCount, newNoiseChannelCount + newPitchChannelCount, doc.song.pitchChannelCount + doc.song.noiseChannelCount, 0, false, true);\r\n\r\n\t\t\tdoc.song.pitchChannelCount = newPitchChannelCount;\r\n\t\t\tdoc.song.noiseChannelCount = newNoiseChannelCount;\r\n\t\t\tdoc.song.modChannelCount = newModChannelCount;\r\n\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tdoc.song.channels[channel] = newChannels[channel];\r\n\t\t\t}\r\n\t\t\tdoc.song.channels.length = doc.song.getChannelCount();\r\n\r\n\t\t\tdoc.channel = Math.min(doc.channel, newPitchChannelCount + newNoiseChannelCount + newModChannelCount - 1);\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid channel. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? doc.song.pitchChannelCount : 0);\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (modChannel >= doc.song.pitchChannelCount + doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\r\n\t\t\tColorConfig.resetColors();\r\n\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelBar extends Change {\r\n\tconstructor(doc: SongDocument, newChannel: number, newBar: number, silently: boolean = false) {\r\n\t\tsuper();\r\n\t\tconst oldChannel: number = doc.channel;\r\n\t\tconst oldBar: number = doc.bar;\r\n\t\tdoc.channel = newChannel;\r\n\t\tdoc.bar = newBar;\r\n\t\tif (!silently) {\r\n\t\t\tdoc.barScrollPos = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), doc.barScrollPos));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldChannel != newChannel || oldBar != newBar) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeInterval extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.interval;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.interval = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeChord extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.chord;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tthis._didSomething();\r\n\t\t\tinstrument.chord = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibrato extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibrato;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.vibrato = newValue;\r\n\t\t\tinstrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n\t\t\tinstrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayParts;\r\n\t\t\tinstrument.vibratoSpeed = 10; // default\r\n\t\t\tinstrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDepth extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDepth, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDepth = newValue / 25;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoSpeed = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstVibratoDelay, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoDelay = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeVibratoType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.vibratoType;\r\n\t\tlet prevVibrato: number = instrument.vibrato;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue || prevVibrato != Config.vibratos.length) {\r\n\t\t\tinstrument.vibratoType = newValue;\r\n\t\t\tinstrument.vibrato = Config.vibratos.length; // Custom\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeArpeggioSpeed extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tinstrument.arpeggioSpeed = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstArpeggioSpeed, doc.channel, doc.getCurrentInstrument());\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFastTwoNoteArp extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.fastTwoNoteArp;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.fastTwoNoteArp = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTieNoteTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.tieNoteTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.tieNoteTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeClicklessTransition extends Change {\r\n\tconstructor(doc: SongDocument, newValue: boolean) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue = instrument.clicklessTransition;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.clicklessTransition = newValue;\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSpectrum extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, spectrumWave: SpectrumWave) {\r\n\t\tsuper();\r\n\t\tspectrumWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeHarmonics extends Change {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, harmonicsWave: HarmonicsWave) {\r\n\t\tsuper();\r\n\t\tharmonicsWave.markCustomWaveDirty();\r\n\t\tinstrument.preset = instrument.type;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDrumsetEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, drumIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.drumsetEnvelopes[drumIndex];\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.drumsetEnvelopes[drumIndex] = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeInstrumentSlider extends Change {\r\n\tprotected _instrument: Instrument;\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tthis._instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t}\r\n\r\n\tpublic commit(): void {\r\n\t\tif (!this.isNoop()) {\r\n\t\t\tthis._instrument.preset = this._instrument.type;\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePulseWidth extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.pulseWidth = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPulseWidth, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePulseEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.pulseEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.pulseEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterCutoff extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterCutoff = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterCut, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterResonance extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.filterResonance = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstFilterPeak, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFilterEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.filterEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.filterEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeAlgorithm extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.algorithm;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.algorithm = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackType extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackType;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackType = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.feedbackEnvelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.feedbackEnvelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorEnvelope extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].envelope;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].envelope = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorFrequency extends Change {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tconst oldValue: number = instrument.operators[operatorIndex].frequency;\r\n\t\tif (oldValue != newValue) {\r\n\t\t\tinstrument.operators[operatorIndex].frequency = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeOperatorAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, operatorIndex: number, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.operators[operatorIndex].amplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMSlider1 + operatorIndex, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeFeedbackAmplitude extends ChangeInstrumentSlider {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper(doc);\r\n\t\tthis._instrument.feedbackAmplitude = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative\r\n\t\t//doc.synth.unsetMod(ModSetting.mstFMFeedback, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeInstrumentsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newInstrumentsPerChannel: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.instrumentsPerChannel != newInstrumentsPerChannel) {\r\n\t\t\tfor (let channel: number = 0; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tconst sampleInstrument: Instrument = doc.song.channels[channel].instruments[doc.song.instrumentsPerChannel - 1];\r\n\t\t\t\tconst sampleInstrumentJson: any = sampleInstrument.toJsonObject();\r\n\t\t\t\tfor (let j: number = doc.song.instrumentsPerChannel; j < newInstrumentsPerChannel; j++) {\r\n\t\t\t\t\tconst newInstrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel));\r\n\t\t\t\t\tif (sampleInstrument.type == InstrumentType.mod) {\r\n\t\t\t\t\t\t// Doesn't really make sense to have two mod instruments with the same settings. Better to zero them out.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t\t} else if (sampleInstrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t// Drumsets are kinda expensive in terms of url length, so don't just copy them willy-nilly.\r\n\t\t\t\t\t\tnewInstrument.setTypeAndReset(InstrumentType.spectrum, true, false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnewInstrument.fromJsonObject(sampleInstrumentJson, doc.song.getChannelIsNoise(channel), doc.song.getChannelIsMod(channel), doc.song.rhythm == 0 || doc.song.rhythm == 2, doc.song.rhythm >= 2);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.channels[channel].instruments[j] = newInstrument;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.channels[channel].instruments.length = newInstrumentsPerChannel;\r\n\t\t\t\tfor (let j: number = 0; j < doc.song.patternsPerChannel; j++) {\r\n\t\t\t\t\tif (doc.song.channels[channel].patterns[j].instrument >= newInstrumentsPerChannel) {\r\n\t\t\t\t\t\tdoc.song.channels[channel].patterns[j].instrument = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.instrumentsPerChannel = newInstrumentsPerChannel;\r\n\r\n\t\t\t// Determine if any mod instruments now refer to an invalid instrument number. Unset them if so\r\n\t\t\tfor (let channel: number = doc.song.pitchChannelCount + doc.song.noiseChannelCount; channel < doc.song.getChannelCount(); channel++) {\r\n\t\t\t\tfor (let instrumentIdx: number = 0; instrumentIdx < doc.song.instrumentsPerChannel; instrumentIdx++) {\r\n\t\t\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\t\t\tlet instrument: Instrument = doc.song.channels[channel].instruments[instrumentIdx];\r\n\t\t\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t\t\t// Boundary checking\r\n\t\t\t\t\t\tif (modInstrument >= doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeKey extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.key != newValue) {\r\n\t\t\tdoc.song.key = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeLoop extends Change {\r\n\tconstructor(private _doc: SongDocument, public oldStart: number, public oldLength: number, public newStart: number, public newLength: number) {\r\n\t\tsuper();\r\n\t\tthis._doc.song.loopStart = this.newStart;\r\n\t\tthis._doc.song.loopLength = this.newLength;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tif (this.oldStart != this.newStart || this.oldLength != this.newLength) {\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePitchAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _pitch: number;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, note: Note, pitch: number, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._pitch = pitch;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 0, this._pitch);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pitches.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeOctave extends Change {\r\n\tconstructor(doc: SongDocument, public oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].octave = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeRhythm extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (doc.song.rhythm != newValue) {\r\n\t\t\tdoc.song.rhythm = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePaste extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, notes: any[], selectionStart: number, selectionEnd: number, oldPartDuration: number) {\r\n\t\tsuper();\r\n\r\n\t\t// Erase the current contents of the selection:\r\n\t\tthis.append(new ChangeNoteTruncate(doc, pattern, selectionStart, selectionEnd, null, true));\r\n\r\n\t\t// Mods don't follow this sequence, so skipping for now.\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\tif (pattern.notes[i].start < selectionStart) {\r\n\t\t\t\t\tif (pattern.notes[i].end > selectionStart) throw new Error();\r\n\r\n\t\t\t\t\tnoteInsertionIndex = i + 1;\r\n\t\t\t\t} else if (pattern.notes[i].start < selectionEnd) {\r\n\t\t\t\t\tthrow new Error();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnoteInsertionIndex = pattern.notes.length;\r\n\t\t}\r\n\r\n\t\twhile (selectionStart < selectionEnd) {\r\n\t\t\tfor (const noteObject of notes) {\r\n\t\t\t\tconst noteStart: number = noteObject[\"start\"] + selectionStart;\r\n\t\t\t\tconst noteEnd: number = noteObject[\"end\"] + selectionStart;\r\n\t\t\t\tif (noteStart >= selectionEnd) break;\r\n\t\t\t\tconst note: Note = new Note(noteObject[\"pitches\"][0], noteStart, noteEnd, noteObject[\"pins\"][0][\"volume\"], false);\r\n\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\tfor (const pitch of noteObject[\"pitches\"]) {\r\n\t\t\t\t\tnote.pitches.push(pitch);\r\n\t\t\t\t}\r\n\t\t\t\tnote.pins.length = 0;\r\n\t\t\t\tfor (const pin of noteObject[\"pins\"]) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(pin.interval, pin.time, pin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tpattern.notes.splice(noteInsertionIndex++, 0, note);\r\n\t\t\t\tif (note.end > selectionEnd) {\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, selectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tselectionStart += oldPartDuration;\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePasteInstrument extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, instrument: Instrument, instrumentCopy: any) {\r\n\t\tsuper();\r\n\t\tinstrument.fromJsonObject(instrumentCopy, instrumentCopy[\"isDrum\"], instrumentCopy[\"isMod\"], false, false);\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternInstrument extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tif (pattern.instrument != newValue) {\r\n\t\t\tpattern.instrument = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModChannel extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, index: number) {\r\n\t\tsuper();\r\n\t\t// Figure out if this is a pitch or noise mod, or \"song\" or \"none\"\r\n\t\tlet stat: ModStatus = ModStatus.msNone;\r\n\t\tlet channel: number = 0;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (index == 1) { // song\r\n\t\t\tstat = ModStatus.msForSong;\r\n\t\t}\r\n\t\telse if (index == 0) { // none\r\n\t\t\tstat = ModStatus.msNone;\r\n\t\t}\r\n\t\telse if (index < 2 + doc.song.pitchChannelCount) {\r\n\t\t\tstat = ModStatus.msForPitch;\r\n\t\t\tchannel = index - 2;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tstat = ModStatus.msForNoise;\r\n\t\t\tchannel = index - doc.song.pitchChannelCount - 2;\r\n\t\t}\r\n\r\n\t\tif (instrument.modStatuses[mod] != stat || instrument.modChannels[mod] != channel) {\r\n\r\n\t\t\tinstrument.modStatuses[mod] = stat;\r\n\t\t\tinstrument.modChannels[mod] = channel;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModInstrument extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, tgtInstrument: number) {\r\n\t\tsuper();\r\n\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tif (instrument.modInstruments[mod] != tgtInstrument) {\r\n\t\t\tinstrument.modInstruments[mod] = tgtInstrument;\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeModSetting extends Change {\r\n\tconstructor(doc: SongDocument, mod: number, text: string) {\r\n\t\tsuper();\r\n\r\n\t\tlet setting: ModSetting = ModSetting.mstNone;\r\n\t\tlet instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\r\n\t\tswitch (text) {\r\n\t\t\tcase \"song volume\":\r\n\t\t\t\tsetting = ModSetting.mstSongVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"tempo\":\r\n\t\t\t\tsetting = ModSetting.mstTempo;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reverb\":\r\n\t\t\t\tsetting = ModSetting.mstReverb;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"next bar\":\r\n\t\t\t\tsetting = ModSetting.mstNextBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"volume\":\r\n\t\t\t\tsetting = ModSetting.mstInsVolume;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan\":\r\n\t\t\t\tsetting = ModSetting.mstPan;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter cut\":\r\n\t\t\t\tsetting = ModSetting.mstFilterCut;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"filter peak\":\r\n\t\t\t\tsetting = ModSetting.mstFilterPeak;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 1\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 2\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 3\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm slider 4\":\r\n\t\t\t\tsetting = ModSetting.mstFMSlider4;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fm feedback\":\r\n\t\t\t\tsetting = ModSetting.mstFMFeedback;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pulse width\":\r\n\t\t\t\tsetting = ModSetting.mstPulseWidth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\":\r\n\t\t\t\tsetting = ModSetting.mstDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato depth\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDepth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato speed\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibrato delay\":\r\n\t\t\t\tsetting = ModSetting.mstVibratoDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pan delay\":\r\n\t\t\t\tsetting = ModSetting.mstPanDelay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggio speed\":\r\n\t\t\t\tsetting = ModSetting.mstArpeggioSpeed;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"reset arpeggio\":\r\n\t\t\t\tsetting = ModSetting.mstResetArpeggio;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"song detune\":\r\n\t\t\t\tsetting = ModSetting.mstSongDetune;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"none\":\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (instrument.modSettings[mod] != setting) {\r\n\r\n\t\t\tinstrument.modSettings[mod] = setting;\r\n\r\n\t\t\t// Go through each pattern where this instrument is set, and clean up any notes that are out of bounds\r\n\t\t\tlet cap: number = doc.song.mstMaxVols.get(setting)!;\r\n\r\n\t\t\tfor (let i: number = 0; i < doc.song.patternsPerChannel; i++) {\r\n\t\t\t\tconst pattern: Pattern = doc.song.channels[doc.channel].patterns[i];\r\n\t\t\t\tif (pattern.instrument == doc.getCurrentInstrument()) {\r\n\t\t\t\t\tfor (let j: number = 0; j < pattern.notes.length; j++) {\r\n\t\t\t\t\t\tconst note: Note = pattern.notes[j];\r\n\t\t\t\t\t\tif (note.pitches[0] == Config.modCount - mod - 1) {\r\n\t\t\t\t\t\t\tfor (let k: number = 0; k < note.pins.length; k++) {\r\n\t\t\t\t\t\t\t\tconst pin: NotePin = note.pins[k];\r\n\t\t\t\t\t\t\t\tif (pin.volume > cap)\r\n\t\t\t\t\t\t\t\t\tpin.volume = cap;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternsPerChannel extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.patternsPerChannel != newValue) {\r\n\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\tconst channelBars: number[] = doc.song.channels[i].bars;\r\n\t\t\t\tconst channelPatterns: Pattern[] = doc.song.channels[i].patterns;\r\n\t\t\t\tfor (let j: number = 0; j < channelBars.length; j++) {\r\n\t\t\t\t\tif (channelBars[j] > newValue) channelBars[j] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let j: number = channelPatterns.length; j < newValue; j++) {\r\n\t\t\t\t\tchannelPatterns[j] = new Pattern();\r\n\t\t\t\t}\r\n\t\t\t\tchannelPatterns.length = newValue;\r\n\t\t\t}\r\n\t\t\tdoc.song.patternsPerChannel = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeEnsurePatternExists extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _bar: number;\r\n\tprivate _channel: number;\r\n\tprivate _patternIndex: number;\r\n\tprivate _patternOldNotes: Note[] | null = null;\r\n\tprivate _oldPatternCount: number;\r\n\tprivate _newPatternCount: number;\r\n\r\n\tconstructor(doc: SongDocument, channel: number, bar: number) {\r\n\t\tsuper(false);\r\n\t\tconst song: Song = doc.song;\r\n\t\tif (song.channels[channel].bars[bar] != 0) return;\r\n\r\n\t\tthis._doc = doc;\r\n\t\tthis._bar = bar;\r\n\t\tthis._channel = channel;\r\n\t\tthis._oldPatternCount = song.patternsPerChannel;\r\n\t\tthis._newPatternCount = song.patternsPerChannel;\r\n\r\n\t\tlet firstEmptyUnusedIndex: number | null = null;\r\n\t\tlet firstUnusedIndex: number | null = null;\r\n\t\tfor (let patternIndex: number = 1; patternIndex <= song.patternsPerChannel; patternIndex++) {\r\n\t\t\tlet used = false;\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tif (song.channels[channel].bars[barIndex] == patternIndex) {\r\n\t\t\t\t\tused = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (used) continue;\r\n\t\t\tif (firstUnusedIndex == null) {\r\n\t\t\t\tfirstUnusedIndex = patternIndex;\r\n\t\t\t}\r\n\t\t\tconst pattern: Pattern = song.channels[channel].patterns[patternIndex - 1];\r\n\t\t\tif (pattern.notes.length == 0) {\r\n\t\t\t\tfirstEmptyUnusedIndex = patternIndex;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (firstEmptyUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstEmptyUnusedIndex;\r\n\t\t} else if (song.patternsPerChannel < song.barCount) {\r\n\t\t\tthis._newPatternCount = song.patternsPerChannel + 1;\r\n\t\t\tthis._patternIndex = song.patternsPerChannel + 1;\r\n\t\t} else if (firstUnusedIndex != null) {\r\n\t\t\tthis._patternIndex = firstUnusedIndex;\r\n\t\t\tthis._patternOldNotes = song.channels[channel].patterns[firstUnusedIndex - 1].notes;\r\n\t\t} else {\r\n\t\t\tthrow new Error();\r\n\t\t}\r\n\r\n\t\tthis._didSomething();\r\n\t\tthis._doForwards();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tfor (let j: number = song.patternsPerChannel; j < this._newPatternCount; j++) {\r\n\t\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\t\tsong.channels[i].patterns[j] = new Pattern();\r\n\t\t\t}\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._newPatternCount;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tpattern.notes = [];\r\n\t\tsong.channels[this._channel].bars[this._bar] = this._patternIndex;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst pattern: Pattern = song.channels[this._channel].patterns[this._patternIndex - 1];\r\n\t\tif (this._patternOldNotes != null) pattern.notes = this._patternOldNotes;\r\n\t\tsong.channels[this._channel].bars[this._bar] = 0;\r\n\t\tfor (let i: number = 0; i < song.getChannelCount(); i++) {\r\n\t\t\tsong.channels[i].patterns.length = this._oldPatternCount;\r\n\t\t}\r\n\t\tsong.patternsPerChannel = this._oldPatternCount;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangePinTime extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, pinIndex: number, shiftedTime: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tshiftedTime -= this._oldStart;\r\n\t\tconst originalTime: number = this._oldPins[pinIndex].time;\r\n\t\tconst skipStart: number = Math.min(originalTime, shiftedTime);\r\n\t\tconst skipEnd: number = Math.max(originalTime, shiftedTime);\r\n\t\tlet setPin: boolean = false;\r\n\t\tfor (let i: number = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tif (time < skipStart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t} else if (time > skipEnd) {\r\n\t\t\t\tif (!setPin) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t\t\t\tsetPin = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setPin) {\r\n\t\t\tthis._newPins.push(makeNotePin(this._oldPins[pinIndex].interval, shiftedTime, this._oldPins[pinIndex].volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePitchBend extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, bendStart: number, bendEnd: number, bendTo: number, pitchIndex: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tbendStart -= this._oldStart;\r\n\t\tbendEnd -= this._oldStart;\r\n\t\tbendTo -= note.pitches[pitchIndex];\r\n\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet setEnd: boolean = false;\r\n\t\tlet prevInterval: number = 0;\r\n\t\tlet prevVolume: number = 3;\r\n\t\tlet persist: boolean = true;\r\n\t\tlet i: number;\r\n\t\tlet direction: number;\r\n\t\tlet stop: number;\r\n\t\tlet push: (item: NotePin) => void;\r\n\t\tif (bendEnd > bendStart) {\r\n\t\t\ti = 0;\r\n\t\t\tdirection = 1;\r\n\t\t\tstop = note.pins.length;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.push(item); };\r\n\t\t} else {\r\n\t\t\ti = note.pins.length - 1;\r\n\t\t\tdirection = -1;\r\n\t\t\tstop = -1;\r\n\t\t\tpush = (item: NotePin) => { this._newPins.unshift(item); };\r\n\t\t}\r\n\t\tfor (; i != stop; i += direction) {\r\n\t\t\tconst oldPin: NotePin = note.pins[i];\r\n\t\t\tconst time: number = oldPin.time;\r\n\t\t\tfor (; ;) {\r\n\t\t\t\tif (!setStart) {\r\n\t\t\t\t\tif (time * direction <= bendStart * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendStart * direction) {\r\n\t\t\t\t\t\tpush(makeNotePin(oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(prevInterval, bendStart, prevVolume));\r\n\t\t\t\t\t\tsetStart = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (!setEnd) {\r\n\t\t\t\t\tif (time * direction <= bendEnd * direction) {\r\n\t\t\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (time * direction < bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t\t\t\t\tsetEnd = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (time * direction == bendEnd * direction) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (oldPin.interval != prevInterval) persist = false;\r\n\t\t\t\t\t\tpush(makeNotePin(persist ? bendTo : oldPin.interval, time, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!setEnd) {\r\n\t\t\tpush(makeNotePin(bendTo, bendEnd, prevVolume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternRhythm extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tconst minDivision: number = Config.partsPerBeat / Config.rhythms[doc.song.rhythm].stepsPerBeat;\r\n\r\n\t\tconst changeRhythm: (oldTime: number) => number = function (oldTime: number): number {\r\n\t\t\tlet thresholds: number[] | null = Config.rhythms[doc.song.rhythm].roundUpThresholds;\r\n\t\t\tif (thresholds != null) {\r\n\t\t\t\tconst beatStart: number = Math.floor(oldTime / Config.partsPerBeat) * Config.partsPerBeat;\r\n\t\t\t\tconst remainder: number = oldTime - beatStart;\r\n\t\t\t\tlet newTime: number = beatStart;\r\n\t\t\t\tfor (const threshold of thresholds) {\r\n\t\t\t\t\tif (remainder >= threshold) {\r\n\t\t\t\t\t\tnewTime += minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newTime;\r\n\t\t\t} else {\r\n\t\t\t\treturn Math.round(oldTime / minDivision) * minDivision;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t} else {\r\n\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeRhythmNote extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, changeRhythm: (oldTime: number) => number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, changeRhythm(oldPin.time + this._oldStart) - this._oldStart, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeMoveNotesSideways extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, beatsToMove: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tlet partsToMove: number = Math.round((beatsToMove % doc.song.beatsPerBar) * Config.partsPerBeat);\r\n\t\tif (partsToMove < 0) partsToMove += doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\tif (partsToMove == 0.0) return;\r\n\r\n\t\tswitch (strategy) {\r\n\t\t\tcase \"wrapAround\": {\r\n\t\t\t\tconst partsPerBar: number = Config.partsPerBeat * doc.song.beatsPerBar;\r\n\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\t\t\tconst newNotes: Note[] = [];\r\n\r\n\t\t\t\t\t\tfor (let bar: number = 1; bar >= 0; bar--) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\r\n\t\t\t\t\t\t\tfor (const oldNote of pattern.notes) {\r\n\t\t\t\t\t\t\t\tconst absoluteNoteStart: number = oldNote.start + partsToMove;\r\n\t\t\t\t\t\t\t\tconst absoluteNoteEnd: number = oldNote.end + partsToMove;\r\n\t\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, absoluteNoteStart - barStartPart);\r\n\t\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, absoluteNoteEnd - barStartPart);\r\n\r\n\t\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\t\tprojectNoteIntoBar(oldNote, absoluteNoteStart - barStartPart - noteStartPart, noteStartPart, noteEndPart, newNotes);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tpattern.notes = newNotes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} break;\r\n\t\t\tcase \"overflow\": {\r\n\t\t\t\tlet originalBarCount: number = doc.song.barCount;\r\n\t\t\t\tlet originalLoopStart: number = doc.song.loopStart;\r\n\t\t\t\tlet originalLoopLength: number = doc.song.loopLength;\r\n\r\n\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, doc.song.beatsPerBar, partsToMove));\r\n\r\n\t\t\t\tif (beatsToMove < 0) {\r\n\t\t\t\t\tlet firstBarIsEmpty: boolean = true;\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tif (channel.bars[0] != 0) firstBarIsEmpty = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (firstBarIsEmpty) {\r\n\t\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\t\tchannel.bars.shift();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdoc.song.barCount--;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\toriginalBarCount++;\r\n\t\t\t\t\t\toriginalLoopStart++;\r\n\t\t\t\t\t\tdoc.bar++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twhile (doc.song.barCount < originalBarCount) {\r\n\t\t\t\t\tfor (const channel of doc.song.channels) {\r\n\t\t\t\t\t\tchannel.bars.push(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdoc.song.barCount++;\r\n\t\t\t\t}\r\n\t\t\t\tdoc.song.loopStart = originalLoopStart;\r\n\t\t\t\tdoc.song.loopLength = originalLoopLength;\r\n\t\t\t} break;\r\n\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t}\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeBeatsPerBar extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number, strategy: string) {\r\n\t\tsuper();\r\n\t\tif (doc.song.beatsPerBar != newValue) {\r\n\t\t\tswitch (strategy) {\r\n\t\t\t\tcase \"splice\": {\r\n\t\t\t\t\tif (doc.song.beatsPerBar > newValue) {\r\n\t\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\t\tfor (let i: number = 0; i < doc.song.getChannelCount(); i++) {\r\n\t\t\t\t\t\t\tfor (let j: number = 0; j < doc.song.channels[i].patterns.length; j++) {\r\n\t\t\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(doc, doc.song.channels[i].patterns[j], newValue * Config.partsPerBeat, doc.song.beatsPerBar * Config.partsPerBeat, null, true));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"stretch\": {\r\n\t\t\t\t\tconst changeRhythm = function (oldTime: number): number {\r\n\t\t\t\t\t\treturn Math.round(oldTime * newValue / doc.song.beatsPerBar);\r\n\t\t\t\t\t};\r\n\t\t\t\t\tfor (let channelIndex: number = 0; channelIndex < doc.song.getChannelCount(); channelIndex++) {\r\n\t\t\t\t\t\tfor (let patternIndex: number = 0; patternIndex < doc.song.channels[channelIndex].patterns.length; patternIndex++) {\r\n\t\t\t\t\t\t\tconst pattern: Pattern = doc.song.channels[channelIndex].patterns[patternIndex];\r\n\t\t\t\t\t\t\tlet noteIndex: number = 0;\r\n\t\t\t\t\t\t\twhile (noteIndex < pattern.notes.length) {\r\n\t\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\t\t\t\t\t\t\t\tif (changeRhythm(note.start) >= changeRhythm(note.end)) {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteIndex, true));\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis.append(new ChangeRhythmNote(doc, note, changeRhythm));\r\n\t\t\t\t\t\t\t\t\tnoteIndex++;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.append(new ChangeTempo(doc, doc.song.tempo, doc.song.tempo * newValue / doc.song.beatsPerBar));\r\n\t\t\t\t} break;\r\n\t\t\t\tcase \"overflow\": {\r\n\t\t\t\t\tthis.append(new ChangeMoveAndOverflowNotes(doc, newValue, 0));\r\n\t\t\t\t\tdoc.song.loopStart = 0;\r\n\t\t\t\t\tdoc.song.loopLength = doc.song.barCount;\r\n\t\t\t\t} break;\r\n\t\t\t\tdefault: throw new Error(\"Unrecognized beats-per-bar conversion strategy.\");\r\n\t\t\t}\r\n\r\n\t\t\tdoc.song.beatsPerBar = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeScale extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tif (doc.song.scale != newValue) {\r\n\t\t\tdoc.song.scale = newValue;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDetectKey extends ChangeGroup {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst song: Song = doc.song;\r\n\t\tconst basePitch: number = Config.keys[song.key].basePitch;\r\n\t\tconst keyWeights: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\tfor (let barIndex: number = 0; barIndex < song.barCount; barIndex++) {\r\n\t\t\t\tconst pattern: Pattern | null = song.getPattern(channelIndex, barIndex);\r\n\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\tfor (const note of pattern.notes) {\r\n\t\t\t\t\t\tconst prevPin: NotePin = note.pins[0];\r\n\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\tconst nextPin: NotePin = note.pins[pinIndex];\r\n\t\t\t\t\t\t\tif (prevPin.interval == nextPin.interval) {\r\n\t\t\t\t\t\t\t\tlet weight: number = nextPin.time - prevPin.time;\r\n\t\t\t\t\t\t\t\tweight += Math.max(0, Math.min(Config.partsPerBeat, nextPin.time + note.start) - (prevPin.time + note.start));\r\n\t\t\t\t\t\t\t\tweight *= nextPin.volume + prevPin.volume;\r\n\t\t\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\t\t\tconst key = (basePitch + prevPin.interval + pitch) % 12;\r\n\t\t\t\t\t\t\t\t\tkeyWeights[key] += weight;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet bestKey: number = 0;\r\n\t\tlet bestKeyWeight: number = 0;\r\n\t\tfor (let key: number = 0; key < 12; key++) {\r\n\t\t\t// Look for the root of the most prominent major or minor chord.\r\n\t\t\tconst keyWeight: number = keyWeights[key] * (3 * keyWeights[(key + 7) % 12] + keyWeights[(key + 4) % 12] + keyWeights[(key + 3) % 12]);\r\n\t\t\tif (bestKeyWeight < keyWeight) {\r\n\t\t\t\tbestKeyWeight = keyWeight;\r\n\t\t\t\tbestKey = key;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (bestKey != song.key) {\r\n\t\t\tconst diff: number = song.key - bestKey;\r\n\t\t\tconst absoluteDiff: number = Math.abs(diff);\r\n\r\n\t\t\tfor (let channelIndex: number = 0; channelIndex < song.pitchChannelCount; channelIndex++) {\r\n\t\t\t\tfor (const pattern of song.channels[channelIndex].patterns) {\r\n\t\t\t\t\tfor (let i: number = 0; i < absoluteDiff; i++) {\r\n\t\t\t\t\t\tthis.append(new ChangeTranspose(doc, channelIndex, pattern, diff > 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsong.key = bestKey;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function pickRandomPresetValue(isNoise: boolean): number {\r\n\tconst eligiblePresetValues: number[] = [];\r\n\tfor (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tif (category.name == \"Novelty Presets\") continue;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif (preset.settings != undefined && (preset.isNoise == true) == isNoise) {\r\n\t\t\t\teligiblePresetValues.push((categoryIndex << 6) + presetIndex);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn eligiblePresetValues[(Math.random() * eligiblePresetValues.length) | 0];\r\n}\r\n\r\nexport function setDefaultInstruments(song: Song): void {\r\n\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\tfor (const instrument of song.channels[channelIndex].instruments) {\r\n\t\t\tconst isNoise: boolean = song.getChannelIsNoise(channelIndex);\r\n\t\t\tconst isMod: boolean = song.getChannelIsMod(channelIndex);\r\n\t\t\tconst presetValue: number = (channelIndex == song.pitchChannelCount) ? EditorConfig.nameToPresetValue(Math.random() > 0.5 ? \"chip noise\" : \"standard drumset\")! : pickRandomPresetValue(isNoise);\r\n\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\tinstrument.fromJsonObject(preset.settings, isNoise, isMod, song.rhythm == 0 || song.rhythm == 2, song.rhythm >= 2);\r\n\t\t\tinstrument.preset = presetValue;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeSong extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, newHash: string) {\r\n\t\tsuper();\r\n\t\tlet pitchChannelCount = doc.song.pitchChannelCount;\r\n\t\tlet noiseChannelCount = doc.song.noiseChannelCount;\r\n\t\tlet modChannelCount = doc.song.modChannelCount;\r\n\t\tdoc.song.fromBase64String(newHash);\r\n\t\tif (pitchChannelCount != doc.song.pitchChannelCount || noiseChannelCount != doc.song.noiseChannelCount || modChannelCount != doc.song.modChannelCount) {\r\n\t\t\tColorConfig.resetColors();\r\n\t\t}\r\n\t\tif (newHash == \"\") {\r\n\t\t\tthis.append(new ChangePatternSelection(doc, 0, 0));\r\n\t\t\tdoc.selection.resetBoxSelection();\r\n\t\t\tsetDefaultInstruments(doc.song);\r\n\t\t} else {\r\n\t\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\t}\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeValidateTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument) {\r\n\t\tsuper();\r\n\t\tconst channel: number = Math.min(doc.channel, doc.song.getChannelCount() - 1);\r\n\t\tconst bar: number = Math.max(0, Math.min(doc.song.barCount - 1, doc.bar));\r\n\t\tconst barScrollPos: number = Math.min(doc.bar, Math.max(doc.bar - (doc.trackVisibleBars - 1), Math.max(0, Math.min(doc.song.barCount - doc.trackVisibleBars, doc.barScrollPos))));\r\n\t\tif (doc.channel != channel || doc.bar != bar || doc.barScrollPos != barScrollPos) {\r\n\t\t\tdoc.channel = channel;\r\n\t\t\tdoc.bar = bar;\r\n\t\t\tdoc.barScrollPos = barScrollPos;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeReplacePatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, pitchChannels: Channel[], noiseChannels: Channel[], modChannels: Channel[]) {\r\n\t\tsuper();\r\n\r\n\t\tconst song: Song = doc.song;\r\n\r\n\t\tfunction removeExtraSparseChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet sparsestIndex: number = channels.length - 1;\r\n\t\t\t\tlet mostZeroes: number = 0;\r\n\t\t\t\tfor (let channelIndex: number = 0; channelIndex < channels.length - 1; channelIndex++) {\r\n\t\t\t\t\tlet zeroes: number = 0;\r\n\t\t\t\t\tfor (const bar of channels[channelIndex].bars) {\r\n\t\t\t\t\t\tif (bar == 0) zeroes++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (zeroes >= mostZeroes) {\r\n\t\t\t\t\t\tsparsestIndex = channelIndex;\r\n\t\t\t\t\t\tmostZeroes = zeroes;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchannels.splice(sparsestIndex, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tremoveExtraSparseChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tremoveExtraSparseChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tremoveExtraSparseChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\twhile (pitchChannels.length < Config.pitchChannelCountMin) pitchChannels.push(new Channel());\r\n\t\twhile (noiseChannels.length < Config.noiseChannelCountMin) noiseChannels.push(new Channel());\r\n\t\twhile (modChannels.length < Config.modChannelCountMin) modChannels.push(new Channel());\r\n\r\n\t\t// Set minimum counts.\r\n\t\tsong.barCount = 1;\r\n\t\tsong.instrumentsPerChannel = 1;\r\n\t\tsong.patternsPerChannel = 8;\r\n\t\tconst combinedChannels: Channel[] = pitchChannels.concat(noiseChannels.concat(modChannels));\r\n\t\tfor (let channelIndex: number = 0; channelIndex < combinedChannels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = combinedChannels[channelIndex];\r\n\t\t\tsong.barCount = Math.max(song.barCount, channel.bars.length);\r\n\t\t\tsong.patternsPerChannel = Math.max(song.patternsPerChannel, channel.patterns.length);\r\n\t\t\tsong.instrumentsPerChannel = Math.max(song.instrumentsPerChannel, channel.instruments.length);\r\n\t\t\tsong.channels[channelIndex] = channel;\r\n\t\t}\r\n\t\tsong.channels.length = combinedChannels.length;\r\n\t\tsong.pitchChannelCount = pitchChannels.length;\r\n\t\tsong.noiseChannelCount = noiseChannels.length;\r\n\t\tsong.modChannelCount = modChannels.length;\r\n\r\n\t\tsong.barCount = Math.min(Config.barCountMax, song.barCount);\r\n\t\tsong.patternsPerChannel = Math.min(Config.barCountMax, song.patternsPerChannel);\r\n\t\tsong.instrumentsPerChannel = Math.min(Config.instrumentsPerChannelMax, song.instrumentsPerChannel);\r\n\t\tfor (let channelIndex: number = 0; channelIndex < song.channels.length; channelIndex++) {\r\n\t\t\tconst channel: Channel = song.channels[channelIndex];\r\n\t\t\tfor (let barIndex: number = 0; barIndex < channel.bars.length; barIndex++) {\r\n\t\t\t\tif (channel.bars[barIndex] > song.patternsPerChannel || channel.bars[barIndex] < 0) {\r\n\t\t\t\t\tchannel.bars[barIndex] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const pattern of channel.patterns) {\r\n\t\t\t\tif (pattern.instrument >= song.instrumentsPerChannel || pattern.instrument < 0) {\r\n\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (channel.bars.length < song.barCount) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t\twhile (channel.patterns.length < song.patternsPerChannel) {\r\n\t\t\t\tchannel.patterns.push(new Pattern());\r\n\t\t\t}\r\n\t\t\twhile (channel.instruments.length < song.instrumentsPerChannel) {\r\n\t\t\t\tconst instrument: Instrument = new Instrument(doc.song.getChannelIsNoise(channelIndex), doc.song.getChannelIsMod(channelIndex));\r\n\t\t\t\tif (song.getChannelIsNoise(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.noise, true, false);\r\n\t\t\t\t} else if (song.getChannelIsMod(channelIndex)) {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.mod, false, true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinstrument.setTypeAndReset(InstrumentType.chip, false, false);\r\n\t\t\t\t}\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t}\r\n\r\n\t\t\tchannel.instruments.length = song.instrumentsPerChannel;\r\n\t\t\tchannel.bars.length = song.barCount;\r\n\t\t\tchannel.patterns.length = song.patternsPerChannel;\r\n\t\t}\r\n\r\n\t\tsong.loopStart = Math.max(0, Math.min(song.barCount - 1, song.loopStart));\r\n\t\tsong.loopLength = Math.min(song.barCount - song.loopStart, song.loopLength);\r\n\r\n\t\tthis.append(new ChangeValidateTrackSelection(doc));\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\r\n\t\tColorConfig.resetColors();\r\n\t}\r\n}\r\n\r\nexport function comparePatternNotes(a: Note[], b: Note[]): boolean {\r\n\tif (a.length != b.length) return false;\r\n\r\n\tfor (let noteIndex: number = 0; noteIndex < a.length; noteIndex++) {\r\n\t\tconst oldNote: Note = a[noteIndex];\r\n\t\tconst newNote: Note = b[noteIndex];\r\n\t\tif (newNote.start != oldNote.start || newNote.end != oldNote.end || newNote.pitches.length != oldNote.pitches.length || newNote.pins.length != oldNote.pins.length) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (let pitchIndex: number = 0; pitchIndex < oldNote.pitches.length; pitchIndex++) {\r\n\t\t\tif (newNote.pitches[pitchIndex] != oldNote.pitches[pitchIndex]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let pinIndex: number = 0; pinIndex < oldNote.pins.length; pinIndex++) {\r\n\t\t\tif (newNote.pins[pinIndex].interval != oldNote.pins[pinIndex].interval || newNote.pins[pinIndex].time != oldNote.pins[pinIndex].time || newNote.pins[pinIndex].volume != oldNote.pins[pinIndex].volume) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nexport function removeDuplicatePatterns(channels: Channel[]): void {\r\n\tfor (const channel of channels) {\r\n\t\tconst newPatterns: Pattern[] = [];\r\n\t\tfor (let bar: number = 0; bar < channel.bars.length; bar++) {\r\n\t\t\tif (channel.bars[bar] == 0) continue;\r\n\r\n\t\t\tconst oldPattern: Pattern = channel.patterns[channel.bars[bar] - 1];\r\n\r\n\t\t\tlet foundMatchingPattern: boolean = false;\r\n\t\t\tfor (let newPatternIndex: number = 0; newPatternIndex < newPatterns.length; newPatternIndex++) {\r\n\t\t\t\tconst newPattern: Pattern = newPatterns[newPatternIndex];\r\n\t\t\t\tif (newPattern.instrument != oldPattern.instrument || newPattern.notes.length != oldPattern.notes.length) {\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (comparePatternNotes(oldPattern.notes, newPattern.notes)) {\r\n\t\t\t\t\tfoundMatchingPattern = true;\r\n\t\t\t\t\tchannel.bars[bar] = newPatternIndex + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!foundMatchingPattern) {\r\n\t\t\t\tnewPatterns.push(oldPattern);\r\n\t\t\t\tchannel.bars[bar] = newPatterns.length;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let patternIndex: number = 0; patternIndex < newPatterns.length; patternIndex++) {\r\n\t\t\tchannel.patterns[patternIndex] = newPatterns[patternIndex];\r\n\t\t}\r\n\t\tchannel.patterns.length = newPatterns.length;\r\n\t}\r\n}\r\n\r\nexport class ChangeTempo extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.tempo = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(newValue)));\r\n\t\tdoc.synth.unsetMod(ModSetting.mstTempo);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeReverb extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.reverb = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstReverb);\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteAdded extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _pattern: Pattern;\r\n\tprivate _note: Note;\r\n\tprivate _index: number;\r\n\tconstructor(doc: SongDocument, pattern: Pattern, note: Note, index: number, deletion: boolean = false) {\r\n\t\tsuper(deletion);\r\n\t\tthis._doc = doc;\r\n\t\tthis._pattern = pattern;\r\n\t\tthis._note = note;\r\n\t\tthis._index = index;\r\n\t\tthis._didSomething();\r\n\t\tthis.redo();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 0, this._note);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._pattern.notes.splice(this._index, 1);\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteLength extends ChangePins {\r\n\tconstructor(doc: SongDocument | null, note: Note, truncStart: number, truncEnd: number) {\r\n\t\tsuper(doc, note);\r\n\r\n\t\ttruncStart -= this._oldStart;\r\n\t\ttruncEnd -= this._oldStart;\r\n\t\tlet setStart: boolean = false;\r\n\t\tlet prevVolume: number = this._oldPins[0].volume;\r\n\t\tlet prevInterval: number = this._oldPins[0].interval;\r\n\t\tlet pushLastPin: boolean = true;\r\n\t\tlet i: number;\r\n\t\tfor (i = 0; i < this._oldPins.length; i++) {\r\n\t\t\tconst oldPin: NotePin = this._oldPins[i];\r\n\t\t\tif (oldPin.time < truncStart) {\r\n\t\t\t\tprevVolume = oldPin.volume;\r\n\t\t\t\tprevInterval = oldPin.interval;\r\n\t\t\t} else if (oldPin.time <= truncEnd) {\r\n\t\t\t\tif (oldPin.time > truncStart && !setStart) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(prevInterval, truncStart, prevVolume));\r\n\t\t\t\t}\r\n\t\t\t\tthis._newPins.push(makeNotePin(oldPin.interval, oldPin.time, oldPin.volume));\r\n\t\t\t\tsetStart = true;\r\n\t\t\t\tif (oldPin.time == truncEnd) {\r\n\t\t\t\t\tpushLastPin = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (pushLastPin) this._newPins.push(makeNotePin(this._oldPins[i].interval, truncEnd, this._oldPins[i].volume));\r\n\r\n\t\tthis._finishSetup();\r\n\t}\r\n}\r\n\r\nexport class ChangeNoteTruncate extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, start: number, end: number, skipNote: Note | null = null, force: boolean = false) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note == skipNote && skipNote != null) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end <= start) {\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start >= end) {\r\n\t\t\t\t// Allow out-of-order notes for mods so that all get checked.\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel)) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t} else if (note.start < start && note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0])) {\r\n\t\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, end, copy.end));\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.start < start) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, start));\r\n\t\t\t\ti++;\r\n\t\t\t} else if (note.end > end) {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteLength(doc, note, end, note.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\tif (!doc.song.getChannelIsMod(doc.channel) || force || (skipNote != null && note.pitches[0] == skipNote.pitches[0]))\r\n\t\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t\telse\r\n\t\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeSplitNotesAtSelection extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, pattern: Pattern) {\r\n\t\tsuper();\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.start < doc.selection.patternSelectionStart && doc.selection.patternSelectionStart < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionStart));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionStart, copy.end));\r\n\t\t\t\t// i++; // The second note might be split again at the end of the selection. Check it again.\r\n\t\t\t} else if (note.start < doc.selection.patternSelectionEnd && doc.selection.patternSelectionEnd < note.end) {\r\n\t\t\t\tconst copy: Note = note.clone();\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, note, note.start, doc.selection.patternSelectionEnd));\r\n\t\t\t\ti++;\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, copy, i, false));\r\n\t\t\t\tthis.append(new ChangeNoteLength(doc, copy, doc.selection.patternSelectionEnd, copy.end));\r\n\t\t\t\ti++;\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nclass ChangeTransposeNote extends UndoableChange {\r\n\tprotected _doc: SongDocument;\r\n\tprotected _note: Note;\r\n\tprotected _oldStart: number;\r\n\tprotected _newStart: number;\r\n\tprotected _oldEnd: number;\r\n\tprotected _newEnd: number;\r\n\tprotected _oldPins: NotePin[];\r\n\tprotected _newPins: NotePin[];\r\n\tprotected _oldPitches: number[];\r\n\tprotected _newPitches: number[];\r\n\tconstructor(doc: SongDocument, channel: number, note: Note, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\t\tthis._oldPitches = note.pitches;\r\n\t\tthis._newPitches = [];\r\n\r\n\t\t// I'm disabling pitch transposing for noise channels to avoid\r\n\t\t// accidentally messing up noise channels when pitch shifting all\r\n\t\t// channels at once.\r\n\t\tconst isNoise: boolean = doc.song.getChannelIsNoise(channel);\r\n\t\tif (isNoise != doc.song.getChannelIsNoise(doc.channel)) return;\r\n\r\n\t\t// Can't transpose mods\r\n\t\tif (doc.song.getChannelIsMod(doc.channel)) return;\r\n\r\n\t\tconst maxPitch: number = (isNoise ? Config.drumCount - 1 : Config.maxPitch);\r\n\r\n\t\tfor (let i: number = 0; i < this._oldPitches.length; i++) {\r\n\t\t\tlet pitch: number = this._oldPitches[i];\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tpitch = Math.min(maxPitch, pitch + 12);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpitch = Math.max(0, pitch - 12);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let j: number = pitch + 1; j <= maxPitch; j++) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let j: number = pitch - 1; j >= 0; j--) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\t\t\tpitch = j;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet foundMatch: boolean = false;\r\n\t\t\tfor (let j: number = 0; j < this._newPitches.length; j++) {\r\n\t\t\t\tif (this._newPitches[j] == pitch) {\r\n\t\t\t\t\tfoundMatch = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!foundMatch) this._newPitches.push(pitch);\r\n\t\t}\r\n\r\n\t\tlet min: number = 0;\r\n\t\tlet max: number = maxPitch;\r\n\r\n\t\tfor (let i: number = 1; i < this._newPitches.length; i++) {\r\n\t\t\tconst diff: number = this._newPitches[0] - this._newPitches[i];\r\n\t\t\tif (min < diff) min = diff;\r\n\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t}\r\n\r\n\t\tfor (const oldPin of this._oldPins) {\r\n\t\t\tlet interval: number = oldPin.interval + this._oldPitches[0];\r\n\r\n\t\t\tif (interval < min) interval = min;\r\n\t\t\tif (interval > max) interval = max;\r\n\t\t\tif (octave && !isNoise) {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tinterval = Math.min(max, interval + 12);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinterval = Math.max(min, interval - 12);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (upward) {\r\n\t\t\t\t\tfor (let i: number = interval + 1; i <= max; i++) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i: number = interval - 1; i >= min; i--) {\r\n\t\t\t\t\t\tif (isNoise || ignoreScale || Config.scales[doc.song.scale].flags[i % 12]) {\r\n\t\t\t\t\t\t\tinterval = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tinterval -= this._newPitches[0];\r\n\t\t\tthis._newPins.push(makeNotePin(interval, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\r\n\t\tif (this._newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._note.pitches = this._newPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._note.pitches = this._oldPitches;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeTranspose extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, upward: boolean, ignoreScale: boolean = false, octave: boolean = false) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, upward, ignoreScale, octave));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeTrackSelection extends Change {\r\n\tconstructor(doc: SongDocument, newX0: number, newX1: number, newY0: number, newY1: number) {\r\n\t\tsuper();\r\n\t\tdoc.selection.boxSelectionX0 = newX0;\r\n\t\tdoc.selection.boxSelectionX1 = newX1;\r\n\t\tdoc.selection.boxSelectionY0 = newY0;\r\n\t\tdoc.selection.boxSelectionY1 = newY1;\r\n\t\tdoc.notifier.changed();\r\n\t\tthis._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePatternSelection extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _oldStart: number;\r\n\tprivate _oldEnd: number;\r\n\tprivate _oldActive: boolean;\r\n\tprivate _newStart: number;\r\n\tprivate _newEnd: number;\r\n\tprivate _newActive: boolean;\r\n\r\n\tconstructor(doc: SongDocument, newStart: number, newEnd: number) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._oldStart = doc.selection.patternSelectionStart;\r\n\t\tthis._oldEnd = doc.selection.patternSelectionEnd;\r\n\t\tthis._oldActive = doc.selection.patternSelectionActive;\r\n\t\tthis._newStart = newStart;\r\n\t\tthis._newEnd = newEnd;\r\n\t\tthis._newActive = newStart < newEnd;\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._newStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._newEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._newActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._doc.selection.patternSelectionStart = this._oldStart;\r\n\t\tthis._doc.selection.patternSelectionEnd = this._oldEnd;\r\n\t\tthis._doc.selection.patternSelectionActive = this._oldActive;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeDragSelectedNotes extends ChangeSequence {\r\n\tconstructor(doc: SongDocument, channel: number, pattern: Pattern, parts: number, transpose: number) {\r\n\t\tsuper();\r\n\r\n\t\tif (parts == 0 && transpose == 0) return;\r\n\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tthis.append(new ChangeSplitNotesAtSelection(doc, pattern));\r\n\t\t}\r\n\r\n\t\tconst oldStart: number = doc.selection.patternSelectionStart;\r\n\t\tconst oldEnd: number = doc.selection.patternSelectionEnd;\r\n\t\tconst newStart: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldStart + parts));\r\n\t\tconst newEnd: number = Math.max(0, Math.min(doc.song.beatsPerBar * Config.partsPerBeat, oldEnd + parts));\r\n\t\tif (newStart == newEnd) {\r\n\t\t\t// Just erase the current contents of the selection:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, oldEnd, null, true));\r\n\t\t} else if (parts < 0) {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, newStart, Math.min(oldStart, newEnd), null, true));\r\n\t\t\tif (oldStart < -parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, oldStart, -parts, null, true));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// Clear space for the dragged notes:\r\n\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, Math.max(oldEnd, newStart), newEnd, null, true));\r\n\t\t\tif (oldEnd > doc.song.beatsPerBar * Config.partsPerBeat - parts) {\r\n\t\t\t\t// If the dragged notes hit against the edge, truncate them too before dragging:\r\n\t\t\t\tthis.append(new ChangeNoteTruncate(doc, pattern, doc.song.beatsPerBar * Config.partsPerBeat - parts, oldEnd, null, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.append(new ChangePatternSelection(doc, newStart, newEnd));\r\n\t\tconst draggedNotes = [];\r\n\t\tlet noteInsertionIndex: number = 0;\r\n\t\tlet i: number = 0;\r\n\t\twhile (i < pattern.notes.length) {\r\n\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\tif (note.end <= oldStart || note.start >= oldEnd) {\r\n\t\t\t\ti++;\r\n\t\t\t\tif (note.end <= newStart) noteInsertionIndex = i;\r\n\t\t\t} else {\r\n\t\t\t\tdraggedNotes.push(note.clone());\r\n\t\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, i, true));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (const note of draggedNotes) {\r\n\t\t\tnote.start += parts;\r\n\t\t\tnote.end += parts;\r\n\r\n\t\t\tfor (let i: number = 0; i < Math.abs(transpose); i++) {\r\n\t\t\t\tthis.append(new ChangeTransposeNote(doc, channel, note, transpose > 0));\r\n\t\t\t}\r\n\r\n\t\t\tthis.append(new ChangeNoteAdded(doc, pattern, note, noteInsertionIndex++, false));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeDuplicateSelectedReusedPatterns extends ChangeGroup {\r\n\tconstructor(doc: SongDocument, barStart: number, barWidth: number, channelStart: number, channelHeight: number) {\r\n\t\tsuper();\r\n\t\tfor (let channel: number = channelStart; channel < channelStart + channelHeight; channel++) {\r\n\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\r\n\t\t\tfor (let bar: number = barStart; bar < barStart + barWidth; bar++) {\r\n\t\t\t\tconst currentPatternIndex: number = doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tif (reusablePatterns[String(currentPatternIndex)] == undefined) {\r\n\t\t\t\t\tlet isUsedElsewhere = false;\r\n\t\t\t\t\tfor (let bar2: number = 0; bar2 < doc.song.barCount; bar2++) {\r\n\t\t\t\t\t\tif (bar2 < barStart || bar2 >= barStart + barWidth) {\r\n\t\t\t\t\t\t\tif (doc.song.channels[channel].bars[bar2] == currentPatternIndex) {\r\n\t\t\t\t\t\t\t\tisUsedElsewhere = true;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (isUsedElsewhere) {\r\n\t\t\t\t\t\t// Need to duplicate the pattern.\r\n\t\t\t\t\t\tconst copiedPattern: Pattern = doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tthis.append(new ChangePatternNumbers(doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tthis.append(new ChangeEnsurePatternExists(doc, channel, bar));\r\n\t\t\t\t\t\tconst newPattern: Pattern | null = doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\tthis.append(new ChangePaste(doc, newPattern, copiedPattern.notes, 0, Config.partsPerBeat * doc.song.beatsPerBar, Config.partsPerBeat * doc.song.beatsPerBar));\r\n\t\t\t\t\t\tthis.append(new ChangePatternInstrument(doc, copiedPattern.instrument, newPattern));\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treusablePatterns[String(currentPatternIndex)] = currentPatternIndex;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.append(new ChangePatternNumbers(doc, reusablePatterns[String(currentPatternIndex)], bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangePatternScale extends Change {\r\n\tconstructor(doc: SongDocument, pattern: Pattern, scaleMap: number[]) {\r\n\t\tsuper();\r\n\t\tif (doc.selection.patternSelectionActive) {\r\n\t\t\tnew ChangeSplitNotesAtSelection(doc, pattern);\r\n\t\t}\r\n\t\tconst maxPitch: number = Config.maxPitch;\r\n\t\tfor (const note of pattern.notes) {\r\n\t\t\tif (doc.selection.patternSelectionActive && (note.end <= doc.selection.patternSelectionStart || note.start >= doc.selection.patternSelectionEnd)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tconst newPitches: number[] = [];\r\n\t\t\tconst newPins: NotePin[] = [];\r\n\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\tconst transformedPitch: number = scaleMap[pitch % 12] + (pitch - (pitch % 12));\r\n\t\t\t\tif (newPitches.indexOf(transformedPitch) == -1) {\r\n\t\t\t\t\tnewPitches.push(transformedPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet min: number = 0;\r\n\t\t\tlet max: number = maxPitch;\r\n\r\n\t\t\tfor (let i: number = 1; i < newPitches.length; i++) {\r\n\t\t\t\tconst diff: number = newPitches[0] - newPitches[i];\r\n\t\t\t\tif (min < diff) min = diff;\r\n\t\t\t\tif (max > diff + maxPitch) max = diff + maxPitch;\r\n\t\t\t}\r\n\r\n\t\t\tfor (const oldPin of note.pins) {\r\n\t\t\t\tlet interval: number = oldPin.interval + note.pitches[0];\r\n\t\t\t\tif (interval < min) interval = min;\r\n\t\t\t\tif (interval > max) interval = max;\r\n\t\t\t\tconst transformedInterval: number = scaleMap[interval % 12] + (interval - (interval % 12));\r\n\t\t\t\tnewPins.push(makeNotePin(transformedInterval - newPitches[0], oldPin.time, oldPin.volume));\r\n\t\t\t}\r\n\r\n\t\t\tif (newPins[0].interval != 0) throw new Error(\"wrong pin start interval\");\r\n\r\n\t\t\tfor (let i: number = 1; i < newPins.length - 1;) {\r\n\t\t\t\tif (newPins[i - 1].interval == newPins[i].interval &&\r\n\t\t\t\t\tnewPins[i].interval == newPins[i + 1].interval &&\r\n\t\t\t\t\tnewPins[i - 1].volume == newPins[i].volume &&\r\n\t\t\t\t\tnewPins[i].volume == newPins[i + 1].volume) {\r\n\t\t\t\t\tnewPins.splice(i, 1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tnote.pitches = newPitches;\r\n\t\t\tnote.pins = newPins;\r\n\t\t}\r\n\t\tthis._didSomething();\r\n\t\tdoc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolume extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].volume = newValue;\r\n\t\t// Not used currently as mod is implemented as multiplicative.\r\n\t\t//doc.synth.unsetMod(ModSetting.mstInsVolume, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeSongTitle extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 30) {\r\n\t\t\tnewValue = newValue.substring(0, 30);\r\n\t\t}\r\n\r\n\t\tdoc.song.title = newValue;\r\n\t\tdocument.title = newValue + \" - \" + EditorConfig.versionDisplayName;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeChannelName extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: string, newValue: string) {\r\n\t\tsuper();\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tnewValue = newValue.substring(0, 15);\r\n\t\t}\r\n\r\n\t\tdoc.song.channels[doc.muteEditorChannel].name = newValue;\r\n\t\tdoc.recalcChannelNames = true;\r\n\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePan extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].pan = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstPan, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangePanDelay extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].panDelay = newValue;\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeDetune extends Change {\r\n\tconstructor(doc: SongDocument, oldValue: number, newValue: number) {\r\n\t\tsuper();\r\n\t\tdoc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()].detune = newValue;\r\n\t\tdoc.synth.unsetMod(ModSetting.mstDetune, doc.channel, doc.getCurrentInstrument());\r\n\t\tdoc.notifier.changed();\r\n\t\tif (oldValue != newValue) this._didSomething();\r\n\t}\r\n}\r\n\r\nexport class ChangeVolumeBend extends UndoableChange {\r\n\tprivate _doc: SongDocument;\r\n\tprivate _note: Note;\r\n\tprivate _oldPins: NotePin[];\r\n\tprivate _newPins: NotePin[];\r\n\tconstructor(doc: SongDocument, note: Note, bendPart: number, bendVolume: number, bendInterval: number, uniformVolume: boolean) {\r\n\t\tsuper(false);\r\n\t\tthis._doc = doc;\r\n\t\tthis._note = note;\r\n\t\tthis._oldPins = note.pins;\r\n\t\tthis._newPins = [];\r\n\r\n\t\tlet inserted: boolean = false;\r\n\r\n\t\tfor (const pin of note.pins) {\r\n\t\t\tif (pin.time < bendPart) {\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t} else if (pin.time == bendPart) {\r\n\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\tinserted = true;\r\n\t\t\t} else {\r\n\t\t\t\tif (!inserted) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(bendInterval, bendPart, bendVolume));\r\n\t\t\t\t\tinserted = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (uniformVolume) {\r\n\t\t\t\t\tthis._newPins.push(makeNotePin(pin.interval, pin.time, bendVolume));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._newPins.push(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 1; i < this._newPins.length - 1;) {\r\n\t\t\tif (this._newPins[i - 1].interval == this._newPins[i].interval &&\r\n\t\t\t\tthis._newPins[i].interval == this._newPins[i + 1].interval &&\r\n\t\t\t\tthis._newPins[i - 1].volume == this._newPins[i].volume &&\r\n\t\t\t\tthis._newPins[i].volume == this._newPins[i + 1].volume) {\r\n\t\t\t\tthis._newPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doForwards();\r\n\t\tthis._didSomething();\r\n\t}\r\n\r\n\tprotected _doForwards(): void {\r\n\t\tthis._note.pins = this._newPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprotected _doBackwards(): void {\r\n\t\tthis._note.pins = this._oldPins;\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n}\r\n\r\nexport class ChangeChipWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipWave != newValue) {\r\n\t\t\tinstrument.chipWave = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class ChangeNoiseWave extends Change {\r\n\tconstructor(doc: SongDocument, newValue: number) {\r\n\t\tsuper();\r\n\t\tconst instrument: Instrument = doc.song.channels[doc.channel].instruments[doc.getCurrentInstrument()];\r\n\t\tif (instrument.chipNoise != newValue) {\r\n\t\t\tinstrument.chipNoise = newValue;\r\n\t\t\tinstrument.preset = instrument.type;\r\n\t\t\tdoc.notifier.changed();\r\n\t\t\tthis._didSomething();\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeBeatsPerBar } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class BeatsPerBarPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"splice\" }, \"Splice beats at end of bars.\"),\r\n\t\toption({ value: \"stretch\" }, \"Stretch notes to fit in bars.\"),\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Beats Per Bar\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats per bar:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: \"font-size: smaller; color: #888888;\" }, \"(Multiples of 3 or 4 are recommended)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.value = this._doc.song.beatsPerBar + \"\";\r\n\t\tthis._beatsStepper.min = Config.beatsPerBarMin + \"\";\r\n\t\tthis._beatsStepper.max = Config.beatsPerBarMax + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"beatCountStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"keypress\", BeatsPerBarPrompt._validateKey);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", BeatsPerBarPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(BeatsPerBarPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"beatCountStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeBeatsPerBar(this._doc, BeatsPerBarPrompt._validate(this._beatsStepper), this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangePatternsPerChannel, ChangeInstrumentsPerChannel, ChangeChannelCount } from \"./changes\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class ChannelSettingsPrompt implements Prompt {\r\n\tprivate readonly _patternsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _instrumentsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _pitchChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _drumChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _modChannelStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Channel Settings\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Pitch channels:\",\r\n\t\t\tthis._pitchChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Drum channels:\",\r\n\t\t\tthis._drumChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Mod channels:\",\r\n\t\t\tthis._modChannelStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Patterns per channel:\",\r\n\t\t\tthis._patternsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\t\"Instruments per channel:\",\r\n\t\t\tthis._instrumentsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._patternsStepper.value = this._doc.song.patternsPerChannel + \"\";\r\n\t\tthis._patternsStepper.min = \"1\";\r\n\t\tthis._patternsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tthis._instrumentsStepper.value = this._doc.song.instrumentsPerChannel + \"\";\r\n\t\tthis._instrumentsStepper.min = Config.instrumentsPerChannelMin + \"\";\r\n\t\tthis._instrumentsStepper.max = Config.instrumentsPerChannelMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.value = this._doc.song.pitchChannelCount + \"\";\r\n\t\tthis._pitchChannelStepper.min = Config.pitchChannelCountMin + \"\";\r\n\t\tthis._pitchChannelStepper.max = Config.pitchChannelCountMax + \"\";\r\n\r\n\t\tthis._drumChannelStepper.value = this._doc.song.noiseChannelCount + \"\";\r\n\t\tthis._drumChannelStepper.min = Config.noiseChannelCountMin + \"\";\r\n\t\tthis._drumChannelStepper.max = Config.noiseChannelCountMax + \"\";\r\n\r\n\t\tthis._modChannelStepper.value = this._doc.song.modChannelCount + \"\";\r\n\t\tthis._modChannelStepper.min = Config.modChannelCountMin + \"\";\r\n\t\tthis._modChannelStepper.max = Config.modChannelCountMax + \"\";\r\n\r\n\t\tthis._pitchChannelStepper.select();\r\n\t\tsetTimeout(() => this._pitchChannelStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.addEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.addEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._patternsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._modChannelStepper.removeEventListener(\"keypress\", ChannelSettingsPrompt._validateKey);\r\n\t\tthis._patternsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._instrumentsStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._pitchChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._drumChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis._modChannelStepper.removeEventListener(\"blur\", ChannelSettingsPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(ChannelSettingsPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangePatternsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._patternsStepper)));\r\n\t\tgroup.append(new ChangeInstrumentsPerChannel(this._doc, ChannelSettingsPrompt._validate(this._instrumentsStepper)));\r\n\t\tgroup.append(new ChangeChannelCount(this._doc, ChannelSettingsPrompt._validate(this._pitchChannelStepper), ChannelSettingsPrompt._validate(this._drumChannelStepper), ChannelSettingsPrompt._validate(this._modChannelStepper)));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeCustomWave } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2 } = HTML;\r\n\r\nexport class CustomChipPromptCanvas {\r\n\tprivate readonly _doc: SongDocument;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _lastIndex: number = 0;\r\n\tprivate _lastAmp: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tpublic chipData: Float64Array = new Float64Array(64);\r\n\tpublic startingChipData: Float64Array = new Float64Array(64);\r\n\tprivate _undoHistoryState: number = 0;\r\n\tprivate _changeQueue: Float64Array[] = [];\r\n\tprivate readonly _editorWidth: number = 768; // 64*12\r\n\tprivate readonly _editorHeight: number = 294; // 49*6\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _blocks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._blocks,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 294px; width: 768px; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tconstructor(doc: SongDocument) {\r\n\r\n\t\tthis._doc = doc;\r\n\r\n\t\tfor (let i: number = 0; i <= 4; i += 2) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 4) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 8; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 8) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\t// Horiz. ticks\r\n\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: (this._editorHeight / 2) - 1, width: this._editorWidth, height: 2 }));\r\n\t\tfor (let i: number = 0; i < 3; i++) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: 0, y: this._editorHeight - 1 - i * 8 * (this._editorHeight / 49), width: this._editorWidth, height: 1 }));\r\n\t\t}\r\n\r\n\r\n\t\tlet col: string = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let i: number = 0; i <= 64; i++) {\r\n\t\t\tlet val: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[i];\r\n\t\t\tthis.chipData[i] = val;\r\n\t\t\tthis.startingChipData[i] = val;\r\n\t\t\tthis._blocks.appendChild(SVG.rect({ fill: col, x: (i * this._editorWidth / 64), y: (val + 24) * (this._editorHeight / 49), width: this._editorWidth / 64, height: this._editorHeight / 49 }));\r\n\t\t}\r\n\r\n\t\t// Record initial state of the chip data queue\r\n\t\tthis._storeChange();\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\tthis._svg.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t}\r\n\r\n\tprivate _storeChange = (): void => {\r\n\t\t// Check if change is unique compared to the current history state\r\n\t\tvar sameCheck = true;\r\n\t\tif (this._changeQueue.length > 0) {\r\n\t\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\t\tif (this._changeQueue[this._undoHistoryState][i] != this.chipData[i]) {\r\n\t\t\t\t\tsameCheck = false; i = 64;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (sameCheck == false || this._changeQueue.length == 0) {\r\n\r\n\t\t\t// Create new branch in history, removing all after this in time\r\n\t\t\tthis._changeQueue.splice(0, this._undoHistoryState);\r\n\r\n\t\t\tthis._undoHistoryState = 0;\r\n\r\n\t\t\tthis._changeQueue.unshift(this.chipData.slice());\r\n\r\n\t\t\t// 32 undo max\r\n\t\t\tif (this._changeQueue.length > 32) {\r\n\t\t\t\tthis._changeQueue.pop();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic undo = (): void => {\r\n\t\t// Go backward, if there is a change to go back to\r\n\t\tif (this._undoHistoryState < this._changeQueue.length - 1) {\r\n\t\t\tthis._undoHistoryState++;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic redo = (): void => {\r\n\t\t// Go forward, if there is a change to go to\r\n\t\tif (this._undoHistoryState > 0) {\r\n\t\t\tthis._undoHistoryState--;\r\n\t\t\tthis.chipData = this._changeQueue[this._undoHistoryState].slice();\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\t\t\tthis.render();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._lastIndex = -1;\r\n\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst index: number = Math.min(63, Math.max(0, Math.floor(this._mouseX * 64 / this._editorWidth)));\r\n\t\t\tconst amp: number = Math.min(48, Math.max(0, Math.floor(this._mouseY * 49 / this._editorHeight)));\r\n\r\n\t\t\t// Paint between mouse drag indices unless a click just happened.\r\n\t\t\tif (this._lastIndex != -1 && this._lastIndex != index) {\r\n\t\t\t\tvar lowest = index;\r\n\t\t\t\tvar highest = this._lastIndex;\r\n\t\t\t\tvar startingAmp = amp;\r\n\t\t\t\tvar endingAmp = this._lastAmp;\r\n\t\t\t\tif (this._lastIndex < index) {\r\n\t\t\t\t\tlowest = this._lastIndex;\r\n\t\t\t\t\thighest = index;\r\n\t\t\t\t\tstartingAmp = this._lastAmp;\r\n\t\t\t\t\tendingAmp = amp;\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = lowest; i <= highest; i++) {\r\n\t\t\t\t\tconst medAmp: number = Math.round(startingAmp + (endingAmp - startingAmp) * ((i - lowest) / (highest - lowest)));\r\n\t\t\t\t\tthis.chipData[i] = medAmp - 24;\r\n\t\t\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + (medAmp * (this._editorHeight / 49)));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.chipData[index] = amp - 24;\r\n\t\t\t\tthis._blocks.children[index].setAttribute(\"y\", \"\" + (amp * (this._editorHeight / 49)));\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// Make a change to the data but don't record it, since this prompt uses its own undo/redo queue\r\n\t\t\tnew ChangeCustomWave(this._doc, this.chipData);\r\n\r\n\t\t\tthis._lastIndex = index;\r\n\t\t\tthis._lastAmp = amp;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\t// Add current data into queue, if it is unique from last data\r\n\t\tthis._storeChange();\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tfor (var i = 0; i < 64; i++) {\r\n\t\t\tthis._blocks.children[i].setAttribute(\"y\", \"\" + ((this.chipData[i] + 24) * (this._editorHeight / 49)));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class CustomChipPrompt implements Prompt {\r\n\r\n\tpublic customChipCanvas: CustomChipPromptCanvas = new CustomChipPromptCanvas(this._doc);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 600px;\" },\r\n\t\th2(\"Edit Custom Chip Instrument\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.customChipCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tsetTimeout(() => this._playButton.focus());\r\n\r\n\r\n\t\tthis.customChipCanvas.render();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (event.keyCode == 90) { // z\r\n\t\t\tthis.customChipCanvas.undo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t\tif (event.keyCode == 89) { // y\r\n\t\t\tthis.customChipCanvas.redo();\r\n\t\t\tevent.stopPropagation();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._doc.prompt = null;\r\n\t\t// Restore custom chip to starting values\r\n\t\tnew ChangeCustomWave(this._doc, this.customChipCanvas.startingChipData);\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, this.customChipCanvas.chipData), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nfunction transfer(source: ArrayBuffer, length: number): ArrayBuffer {\r\n\tconst dest: ArrayBuffer = new ArrayBuffer(length);\r\n\tlet nextOffset = 0;\r\n\tlet leftBytes = Math.min(source.byteLength, dest.byteLength);\r\n\tconst wordSizes = [8, 4, 2, 1];\r\n\tfor (const wordSize of wordSizes) {\r\n\t\tif (leftBytes >= wordSize) {\r\n\t\t\tconst done = transferWith(wordSize, source, dest, nextOffset, leftBytes);\r\n\t\t\tnextOffset = done.nextOffset;\r\n\t\t\tleftBytes = done.leftBytes;\r\n\t\t}\r\n\t}\r\n\treturn dest;\r\n\tfunction transferWith(wordSize: number, source: ArrayBuffer, dest: ArrayBuffer, nextOffset: number, leftBytes: number) {\r\n\t\tlet ViewClass: any = Uint8Array;\r\n\t\tswitch (wordSize) {\r\n\t\t\tcase 8:\r\n\t\t\t\tViewClass = Float64Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tViewClass = Float32Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tViewClass = Uint16Array;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tViewClass = Uint8Array;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tconst view_source = new ViewClass(source, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tconst view_dest = new ViewClass(dest, nextOffset, (leftBytes / wordSize) | 0);\r\n\t\tfor (let i: number = 0; i < view_dest.length; i++) {\r\n\t\t\tview_dest[i] = view_source[i];\r\n\t\t}\r\n\t\treturn {\r\n\t\t\tnextOffset: view_source.byteOffset + view_source.byteLength,\r\n\t\t\tleftBytes: leftBytes - view_dest.length * wordSize,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferWriter {\r\n\tprivate _writeIndex: number = 0;\r\n\tprivate _fileSize: number = 0;\r\n\tprivate _arrayBuffer: ArrayBuffer;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(initialCapacity: number) {\r\n\t\tthis._arrayBuffer = new ArrayBuffer(initialCapacity);\r\n\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t}\r\n\r\n\tprivate _addBytes(numBytes: number): void {\r\n\t\tthis._fileSize += numBytes;\r\n\t\tif (this._fileSize > this._arrayBuffer.byteLength) {\r\n\t\t\tthis._arrayBuffer = transfer(this._arrayBuffer, Math.max(this._arrayBuffer.byteLength * 2, this._fileSize));\r\n\t\t\tthis._data = new DataView(this._arrayBuffer);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getWriteIndex(): number {\r\n\t\treturn this._writeIndex;\r\n\t}\r\n\r\n\tpublic rewriteUint32(index: number, value: number): void {\r\n\t\tthis._data.setUint32(index, value >>> 0, false);\r\n\t}\r\n\r\n\tpublic writeUint32(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(4);\r\n\t\tthis._data.setUint32(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint24(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(3);\r\n\t\tthis._data.setUint8(this._writeIndex, (value >> 16) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 1, (value >> 8) & 0xff);\r\n\t\tthis._data.setUint8(this._writeIndex + 2, (value) & 0xff);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint16(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(2);\r\n\t\tthis._data.setUint16(this._writeIndex, value, false);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeUint8(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeInt8(value: number): void {\r\n\t\tvalue = value | 0;\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setInt8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidi7Bits(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value >= 0x80) throw new Error(\"7 bit value contained 8th bit!\");\r\n\t\tthis._addBytes(1);\r\n\t\tthis._data.setUint8(this._writeIndex, value);\r\n\t\tthis._writeIndex = this._fileSize;\r\n\t}\r\n\r\n\tpublic writeMidiVariableLength(value: number): void {\r\n\t\tvalue = value >>> 0;\r\n\t\tif (value > 0x0fffffff) throw new Error(\"writeVariableLength value too big.\");\r\n\t\tlet startWriting: boolean = false;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst shift: number = 21 - i * 7;\r\n\t\t\tconst bits: number = (value >>> shift) & 0x7f;\r\n\t\t\tif (bits != 0 || i == 3) startWriting = true; // skip leading zero bytes, but always write the last byte even if it's zero. \r\n\t\t\tif (startWriting) this.writeUint8((i == 3 ? 0x00 : 0x80) | bits);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic writeMidiAscii(string: string): void {\r\n\t\tthis.writeMidiVariableLength(string.length);\r\n\t\tfor (let i: number = 0; i < string.length; i++) {\r\n\t\t\tconst charCode: number = string.charCodeAt(i);\r\n\t\t\tif (charCode > 0x7f) throw new Error(\"Trying to write unicode character as ascii.\");\r\n\t\t\tthis.writeUint8(charCode); // technically charCodeAt returns 2 byte values, but this string should contain exclusively 1 byte values.\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toCompactArrayBuffer(): ArrayBuffer {\r\n\t\treturn transfer(this._arrayBuffer, this._fileSize);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\nexport const defaultMidiExpression: number = 0x7F;\r\nexport const defaultMidiPitchBend: number = 0x2000;\r\n\r\nexport const enum MidiChunkType {\r\n\theader = 0x4D546864, // \"MThd\" as bytes, big endian\r\n\ttrack = 0x4D54726B, // \"MTrk\" as bytes, big endian\r\n}\r\n\r\nexport const enum MidiFileFormat {\r\n\tsingleTrack = 0x0000,\r\n\tsimultaneousTracks = 0x0001,\r\n\tindependentTracks = 0x0002,\r\n}\r\n\r\n// Lower 4 bits indicate channel, except for meta and sysex events.\r\nexport const enum MidiEventType {\r\n\t//channelMode = 0x70,\r\n\tnoteOff = 0x80,\r\n\tnoteOn = 0x90,\r\n\tkeyPressure = 0xA0,\r\n\tcontrolChange = 0xB0,\r\n\tprogramChange = 0xC0,\r\n\tchannelPressure = 0xD0,\r\n\tpitchBend = 0xE0,\r\n\tmetaAndSysex = 0xF0,\r\n\r\n\t// These events are identified by all 8 bits.\r\n\tmeta = 0xFF,\r\n\t// sysexStart = 0xF0,\r\n\t// sysexEscape = 0xF7,\r\n}\r\n\r\nexport const enum MidiControlEventMessage {\r\n\r\n\tsetParameterMSB = 0x06,\r\n\tvolumeMSB = 0x07,\r\n\tpanMSB = 0x0A,\r\n\texpressionMSB = 0x0B,\r\n\r\n\tsetParameterLSB = 0x26,\r\n\t//volumeLSB = 0x27,\r\n\t//expressionLSB = 0x2B,\r\n\r\n\t//nonRegisteredParameterNumberLSB = 0x62,\r\n\t//nonRegisteredParameterNumberMSB = 0x63,\r\n\tregisteredParameterNumberLSB = 0x64,\r\n\tregisteredParameterNumberMSB = 0x65,\r\n\r\n\t// Channel mode messages:\r\n\t/*\r\n\tallSoundOff = 0x78,\r\n\tresetControllers = 0x79,\r\n\tlocalControl = 0x7A,\r\n\tallNotesOff = 0x7B,\r\n\tomniModeOff = 0x7C,\r\n\tomniModeOn = 0x7D,\r\n\tmonoMode = 0x7E,\r\n\tpolyphonicMode = 0x7F,\r\n\t*/\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberMSB {\r\n\tpitchBendRange = 0x00, // semitones\r\n\tfineTuning = 0x00,\r\n\tcoarseTuning = 0x00,\r\n\ttuningProgramSelect = 0x00,\r\n\ttuningBankSelect = 0x00,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiRegisteredParameterNumberLSB {\r\n\tpitchBendRange = 0x00, // cents\r\n\tfineTuning = 0x01,\r\n\tcoarseTuning = 0x02,\r\n\ttuningProgramSelect = 0x03,\r\n\ttuningBankSelect = 0x04,\r\n\treset = 0x7f,\r\n}\r\n\r\nexport const enum MidiMetaEventMessage {\r\n\tsequenceNumber = 0x00,\r\n\ttext = 0x01,\r\n\tcopyrightNotice = 0x02,\r\n\ttrackName = 0x03,\r\n\tinstrumentName = 0x04,\r\n\tlyricText = 0x05,\r\n\tmarker = 0x06,\r\n\tcuePoint = 0x07,\r\n\tchannelPrefix = 0x20,\r\n\tendOfTrack = 0x2F,\r\n\ttempo = 0x51,\r\n\tsmpteOffset = 0x54,\r\n\ttimeSignature = 0x58,\r\n\tkeySignature = 0x59,\r\n\tsequencerSpecificEvent = 0x7F,\r\n}\r\n\r\n// BeepBox noise channels are very different from Midi drumsets, but here's my attempt at a conversion from Midi to BeepBox.\r\nexport interface AnalogousDrum {\r\n\tfrequency: number;\r\n\tduration: number;\r\n\tvolume: number;\r\n}\r\nexport const analogousDrumMap: { [K: number]: AnalogousDrum } = {\r\n\t35: { frequency: 0, duration: 2, volume: 3 }, // Acoustic Bass Drum\r\n\t36: { frequency: 0, duration: 2, volume: 3 }, // Bass Drum 1\r\n\t37: { frequency: 5, duration: 1, volume: 3 }, // Side Stick\r\n\t38: { frequency: 4, duration: 2, volume: 3 }, // Acoustic Snare\r\n\t39: { frequency: 5, duration: 2, volume: 3 }, // Hand Clap\r\n\t40: { frequency: 4, duration: 2, volume: 3 }, // Electric Snare\r\n\t41: { frequency: 1, duration: 2, volume: 3 }, // Low Floor Tom\r\n\t42: { frequency: 8, duration: 1, volume: 3 }, // Closed Hi Hat\r\n\t43: { frequency: 1, duration: 2, volume: 3 }, // High Floor Tom\r\n\t44: { frequency: 8, duration: 1, volume: 2 }, // Pedal Hi-Hat\r\n\t45: { frequency: 2, duration: 2, volume: 3 }, // Low Tom\r\n\t46: { frequency: 8, duration: 4, volume: 3 }, // Open Hi-Hat\r\n\t47: { frequency: 2, duration: 2, volume: 3 }, // Low-Mid Tom\r\n\t48: { frequency: 3, duration: 2, volume: 3 }, // Hi-Mid Tom\r\n\t49: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 1\r\n\t50: { frequency: 3, duration: 2, volume: 3 }, // High Tom\r\n\t51: { frequency: 6, duration: 4, volume: 2 }, // Ride Cymbal 1\r\n\t52: { frequency: 7, duration: 4, volume: 3 }, // Chinese Cymbal\r\n\t53: { frequency: 6, duration: 2, volume: 3 }, // Ride Bell\r\n\t54: { frequency: 11, duration: 2, volume: 3 }, // Tambourine\r\n\t55: { frequency: 9, duration: 4, volume: 3 }, // Splash Cymbal\r\n\t56: { frequency: 7, duration: 1, volume: 2 }, // Cowbell\r\n\t57: { frequency: 7, duration: 4, volume: 3 }, // Crash Cymbal 2\r\n\t58: { frequency: 10, duration: 2, volume: 2 }, // Vibraslap\r\n\t59: { frequency: 6, duration: 4, volume: 3 }, // Ride Cymbal 2\r\n\t//60: { frequency:  7, duration: 1, volume: 3 }, // Hi Bongo\r\n\t//61: { frequency:  5, duration: 1, volume: 3 }, // Low Bongo\r\n\t//62: { frequency:  6, duration: 1, volume: 3 }, // Mute Hi Conga\r\n\t//63: { frequency:  5, duration: 1, volume: 3 }, // Open Hi Conga\r\n\t//64: { frequency:  4, duration: 1, volume: 3 }, // Low Conga\r\n\t//65: { frequency:  6, duration: 2, volume: 3 }, // High Timbale\r\n\t//66: { frequency:  4, duration: 2, volume: 3 }, // Low Timbale\r\n\t//67: { frequency: 10, duration: 1, volume: 2 }, // High Agogo\r\n\t//68: { frequency:  9, duration: 1, volume: 2 }, // Low Agogo\r\n\t69: { frequency: 10, duration: 2, volume: 3 }, // Cabasa\r\n\t70: { frequency: 10, duration: 2, volume: 3 }, // Maracas\r\n\t//71: { frequency: 10, duration: 2, volume: 3 }, // Short Whistle\r\n\t//72: { frequency:  9, duration: 2, volume: 3 }, // Long Whistle\r\n\t73: { frequency: 10, duration: 1, volume: 2 }, // Short Guiro\r\n\t74: { frequency: 10, duration: 2, volume: 2 }, // Long Guiro\r\n\t//75: { frequency: 10, duration: 1, volume: 2 }, // Claves\r\n\t//76: { frequency:  6, duration: 1, volume: 2 }, // Hi Wood Block\r\n\t//77: { frequency:  5, duration: 1, volume: 2 }, // Low Wood Block\r\n\t//78: { frequency:  6, duration: 2, volume: 3 }, // Mute Cuica\r\n\t//79: { frequency:  4, duration: 2, volume: 3 }, // Open Cuica\r\n\t//80: { frequency:  7, duration: 1, volume: 2 }, // Mute Triangle\r\n\t//81: { frequency:  7, duration: 4, volume: 2 }, // Open Triangle\r\n};\r\n\r\nexport function midiVolumeToVolumeMult(volume: number): number {\r\n\t// default midi volume is 100, pow(100/127,4)≈0.384 so I'm considering that the baseline volume.\r\n\treturn Math.pow(volume / 127, 4.0) / 0.3844015376046128;\r\n}\r\nexport function volumeMultToMidiVolume(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult * 0.3844015376046128, 0.25) * 127;\r\n}\r\nexport function midiExpressionToVolumeMult(expression: number): number {\r\n\treturn Math.pow(expression / 127, 4.0);\r\n}\r\nexport function volumeMultToMidiExpression(volumeMult: number): number {\r\n\treturn Math.pow(volumeMult, 0.25) * 127;\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, EnvelopeType, Config, getArpeggioPitchIndex } from \"../synth/SynthConfig\";\r\nimport { Instrument, Pattern, Note, Song, Synth } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ArrayBufferWriter } from \"./ArrayBufferWriter\";\r\nimport { MidiChunkType, MidiFileFormat, MidiControlEventMessage, MidiEventType, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, volumeMultToMidiVolume, volumeMultToMidiExpression, defaultMidiPitchBend, defaultMidiExpression } from \"./Midi\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nfunction lerp(low: number, high: number, t: number): number {\r\n\treturn low + t * (high - low);\r\n}\r\n\r\nfunction save(blob: Blob, name: string): void {\r\n\tif (navigator.msSaveOrOpenBlob) {\r\n\t\tnavigator.msSaveOrOpenBlob(blob, name);\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst anchor: HTMLAnchorElement = document.createElement(\"a\");\r\n\tif (anchor.download != undefined) {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tanchor.href = url;\r\n\t\tanchor.download = name;\r\n\t\t// Chrome bug regression: We need to delay dispatching the click\r\n\t\t// event. Seems to be related to going back in the browser history.\r\n\t\t// https://bugs.chromium.org/p/chromium/issues/detail?id=825100\r\n\t\tsetTimeout(function () { anchor.dispatchEvent(new MouseEvent(\"click\")); }, 0);\r\n\t} else {\r\n\t\tconst url: string = URL.createObjectURL(blob);\r\n\t\tsetTimeout(function () { URL.revokeObjectURL(url); }, 60000);\r\n\t\tif (!window.open(url, \"_blank\")) window.location.href = url;\r\n\t}\r\n}\r\n\r\nexport class ExportPrompt implements Prompt {\r\n\tprivate synth: Synth;\r\n\tprivate thenExportTo: string;\r\n\tprivate recordedSamplesL: Float32Array;\r\n\tprivate recordedSamplesR: Float32Array;\r\n\tprivate sampleFrames: number;\r\n\tprivate totalChunks: number;\r\n\tprivate currentChunk: number;\r\n\tprivate outputStarted: boolean = false;\r\n\tprivate readonly _fileName: HTMLInputElement = input({ type: \"text\", style: \"width: 10em;\", value: \"BeepBox-Song\", maxlength: 250, \"autofocus\": \"autofocus\" });\r\n\tprivate readonly _computedSamplesLabel: HTMLDivElement = div({ style: \"width: 10em;\" }, new Text(\"0:00\"));\r\n\tprivate readonly _enableIntro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _loopDropDown: HTMLInputElement = input({ style: \"width: 2em;\", type: \"number\", min: \"1\", max: \"4\", step: \"1\" });\r\n\tprivate readonly _enableOutro: HTMLInputElement = input({ type: \"checkbox\" });\r\n\tprivate readonly _formatSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"wav\" }, \"Export to .wav file.\"),\r\n\t\toption({ value: \"mp3\" }, \"Export to .mp3 file.\"),\r\n\t\toption({ value: \"midi\" }, \"Export to .mid file.\"),\r\n\t\toption({ value: \"json\" }, \"Export to .json file.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _exportButton: HTMLButtonElement = button({ class: \"exportButton\", style: \"width:45%;\" }, \"Export\");\r\n\tprivate readonly _outputProgressBar: HTMLDivElement = div({ style: `width: 0%; background: ${ColorConfig.loopAccent}; height: 100%; position: absolute; z-index: 2;` });\r\n\tprivate readonly _outputProgressLabel: HTMLDivElement = div({ style: `position: relative; top: -1px; z-index: 3;` }, \"0%\");\r\n\tprivate readonly _outputProgressContainer: HTMLDivElement = div({ style: `height: 12px; background: ${ColorConfig.uiWidgetBackground}; display: block; position: relative; z-index: 1;` },\r\n\t\tthis._outputProgressBar,\r\n\t\tthis._outputProgressLabel,\r\n\t);\r\n\tprivate static readonly midiSustainInstruments: number[] = [\r\n\t\t0x4A, // rounded -> recorder\r\n\t\t0x47, // triangle -> clarinet\r\n\t\t0x50, // square -> square wave\r\n\t\t0x46, // ¹/₃ pulse -> bassoon\r\n\t\t0x46, // ¹/₄ pulse -> bassoon\r\n\t\t0x44, // ¹/₆ pulse -> oboe\r\n\t\t0x44, // ¹/₈ pulse -> oboe\r\n\t\t0x51, // ¹/₁₂ pulse -> sawtooth wave\r\n\t\t0x51, // ¹/₁₆ pulse -> sawtooth wave\r\n\t\t0x51, // sawtooth -> sawtooth wave\r\n\t\t0x51, // double saw -> sawtooth wave\r\n\t\t0x51, // double pulse -> sawtooth wave\r\n\t\t0x51, // spiky -> sawtooth wave\r\n\t];\r\n\tprivate static readonly midiDecayInstruments: number[] = [\r\n\t\t0x21, // rounded -> fingered bass\r\n\t\t0x2E, // triangle -> harp\r\n\t\t0x2E, // square -> harp\r\n\t\t0x06, // ¹/₃ pulse -> harpsichord\r\n\t\t0x06, // ¹/₄ pulse -> harpsichord\r\n\t\t0x18, // ¹/₆ pulse -> nylon guitar\r\n\t\t0x18, // ¹/₈ pulse -> nylon guitar\r\n\t\t0x19, // ¹/₁₂ pulse -> steel guitar\r\n\t\t0x19, // ¹/₁₆ pulse -> steel guitar\r\n\t\t0x19, // sawtooth -> steel guitar\r\n\t\t0x19, // double saw -> steel guitar\r\n\t\t0x6A, // double pulse -> shamisen\r\n\t\t0x6A, // spiky -> shamisen\r\n\t];\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 200px;\" },\r\n\t\th2(\"Export Options\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"File name:\",\r\n\t\t\tthis._fileName,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: space-between;\" },\r\n\t\t\t\"Length:\",\r\n\t\t\tthis._computedSamplesLabel,\r\n\t\t),\r\n\t\tdiv({ style: \"display: table; width: 100%;\" },\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Intro:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Loop Count:\"),\r\n\t\t\t\tdiv({ style: \"display: table-cell;\" }, \"Outro:\"),\r\n\t\t\t),\r\n\t\t\tdiv({ style: \"display: table-row;\" },\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableIntro),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._loopDropDown),\r\n\t\t\t\tdiv({ style: \"display: table-cell; vertical-align: middle;\" }, this._enableOutro),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._formatSelect),\r\n\t\tdiv({ style: \"text-align: left;\" }, \"Exporting can be slow. Reloading the page or clicking the X will cancel it. Please be patient.\"),\r\n\t\tthis._outputProgressContainer,\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._exportButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._loopDropDown.value = \"1\";\r\n\r\n\t\tif (this._doc.song.loopStart == 0) {\r\n\t\t\tthis._enableIntro.checked = false;\r\n\t\t\tthis._enableIntro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableIntro.checked = true;\r\n\t\t\tthis._enableIntro.disabled = false;\r\n\t\t}\r\n\t\tif (this._doc.song.loopStart + this._doc.song.loopLength == this._doc.song.barCount) {\r\n\t\t\tthis._enableOutro.checked = false;\r\n\t\t\tthis._enableOutro.disabled = true;\r\n\t\t} else {\r\n\t\t\tthis._enableOutro.checked = true;\r\n\t\t\tthis._enableOutro.disabled = false;\r\n\t\t}\r\n\r\n\t\tconst lastExportFormat: string | null = window.localStorage.getItem(\"exportFormat\");\r\n\t\tif (lastExportFormat != null) {\r\n\t\t\tthis._formatSelect.value = lastExportFormat;\r\n\t\t}\r\n\r\n\t\tthis._fileName.select();\r\n\t\tsetTimeout(() => this._fileName.focus());\r\n\r\n\t\tthis._fileName.addEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.addEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.addEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._enableOutro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._enableIntro.addEventListener(\"click\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis._loopDropDown.addEventListener(\"change\", () => { (this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1)); });\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\r\n\t\tthis._fileName.value = _doc.song.title;\r\n\t\tExportPrompt._validateFileName(null, this._fileName);\r\n\r\n\t\t(this._computedSamplesLabel.firstChild as Text).textContent = this.samplesToTime(this._doc.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, +this._loopDropDown.value - 1));\r\n\t}\r\n\r\n\t// Could probably be moved to doc or synth. Fine here for now until needed by something else.\r\n\tprivate samplesToTime(samples: number): string {\r\n\t\tconst rawSeconds: number = Math.round(samples / this._doc.synth.samplesPerSecond);\r\n\t\tconst seconds: number = rawSeconds % 60;\r\n\t\tconst minutes: number = Math.floor(rawSeconds / 60);\r\n\t\treturn minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis.outputStarted = false;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic changeFileName(newValue: string) {\r\n\t\tthis._fileName.value = newValue;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileName.removeEventListener(\"input\", ExportPrompt._validateFileName);\r\n\t\tthis._loopDropDown.removeEventListener(\"blur\", ExportPrompt._validateNumber);\r\n\t\tthis._exportButton.removeEventListener(\"click\", this._export);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._export();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateFileName(event: Event | null, use?: HTMLInputElement): void {\r\n\r\n\t\tlet input: HTMLInputElement;\r\n\t\tif (event != null) {\r\n\t\t\tinput = <HTMLInputElement>event.target;\r\n\t\t} else if (use != undefined) {\r\n\t\t\tinput = use;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst deleteChars = /[\\+\\*\\$\\?\\|\\{\\}\\\\\\/<>#%!`&'\"=:@]/gi;\r\n\t\tif (deleteChars.test(input.value)) {\r\n\t\t\tlet cursorPos: number = <number>input.selectionStart;\r\n\t\t\tinput.value = input.value.replace(deleteChars, \"\");\r\n\t\t\tcursorPos--;\r\n\t\t\tinput.setSelectionRange(cursorPos, cursorPos);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value)))) + \"\";\r\n\t}\r\n\r\n\tprivate _export = (): void => {\r\n\t\tif (this.outputStarted == true)\r\n\t\t\treturn;\r\n\t\twindow.localStorage.setItem(\"exportFormat\", this._formatSelect.value);\r\n\t\tswitch (this._formatSelect.value) {\r\n\t\t\tcase \"wav\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"wav\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"mp3\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportTo(\"mp3\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"midi\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToMidi();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"json\":\r\n\t\t\t\tthis.outputStarted = true;\r\n\t\t\t\tthis._exportToJson();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Unhandled file export type.\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _synthesize(): void {\r\n\t\t//const timer: number = performance.now();\r\n\r\n\t\t// If output was stopped e.g. user clicked the close button, abort.\r\n\t\tif (this.outputStarted == false) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Update progress bar UI once per 5 sec of exported data\r\n\t\tconst samplesPerChunk: number = this.synth.samplesPerSecond * 5; //e.g. 44100 * 5\r\n\t\tconst currentFrame: number = this.currentChunk * samplesPerChunk;\r\n\r\n\t\tconst samplesInChunk: number = Math.min(samplesPerChunk, this.sampleFrames - currentFrame);\r\n\t\tconst tempSamplesL = new Float32Array(samplesInChunk);\r\n\t\tconst tempSamplesR = new Float32Array(samplesInChunk);\r\n\r\n\t\tthis.synth.synthesize(tempSamplesL, tempSamplesR, samplesInChunk);\r\n\r\n\t\t// Concatenate chunk data into final array\r\n\t\tthis.recordedSamplesL.set(tempSamplesL, currentFrame);\r\n\t\tthis.recordedSamplesR.set(tempSamplesR, currentFrame);\r\n\r\n\t\t// Update UI\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\");\r\n\t\tthis._outputProgressLabel.innerText = Math.round((this.currentChunk + 1) / this.totalChunks * 100.0) + \"%\";\r\n\r\n\t\t// Next call, synthesize the next chunk.\r\n\t\tthis.currentChunk++;\r\n\r\n\t\tif (this.currentChunk >= this.totalChunks) {\r\n\t\t\t// Done, call final function\r\n\t\t\tthis._outputProgressLabel.innerText = \"Encoding...\";\r\n\t\t\tif (this.thenExportTo == \"wav\") {\r\n\t\t\t\tthis._exportToWavFinish();\r\n\t\t\t}\r\n\t\t\telse if (this.thenExportTo == \"mp3\") {\r\n\t\t\t\tthis._exportToMp3Finish();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// Continue batch export\r\n\t\t\tsetTimeout(() => { this._synthesize(); });\r\n\t\t}\r\n\r\n\t\t//console.log(\"export timer\", (performance.now() - timer) / 1000.0);\r\n\t}\r\n\r\n\tprivate _exportTo(type: string): void {\r\n\t\t// Batch the export operation\r\n\t\tthis.thenExportTo = type;\r\n\t\tthis.currentChunk = 0;\r\n\t\tthis.synth = new Synth(this._doc.song);\r\n\t\tif (type == \"wav\") {\r\n\t\t\tthis.synth.samplesPerSecond = 48000; // Use professional video editing standard sample rate for .wav file export.\r\n\t\t}\r\n\t\telse if (type == \"mp3\") {\r\n\t\t\tthis.synth.samplesPerSecond = 44100; // Use consumer CD standard sample rate for .mp3 export.\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error(\"Unrecognized file export type chosen!\");\r\n\t\t}\r\n\r\n\t\tthis._outputProgressBar.style.setProperty(\"width\", \"0%\");\r\n\t\tthis._outputProgressLabel.innerText = \"0%\";\r\n\r\n\t\tthis.synth.loopRepeatCount = Number(this._loopDropDown.value) - 1;\r\n\t\tif (!this._enableIntro.checked) {\r\n\t\t\tfor (let introIter: number = 0; introIter < this._doc.song.loopStart; introIter++) {\r\n\t\t\t\tthis.synth.nextBar();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.synth.warmUpSynthesizer(this._doc.song);\r\n\t\tthis.synth.computeLatestModValues();\r\n\r\n\t\tthis.sampleFrames = this.synth.getTotalSamples(this._enableIntro.checked, this._enableOutro.checked, this.synth.loopRepeatCount);\r\n\t\t// Compute how many UI updates will need to run to determine how many \r\n\t\tthis.totalChunks = Math.ceil(this.sampleFrames / (this.synth.samplesPerSecond * 5));\r\n\t\tthis.recordedSamplesL = new Float32Array(this.sampleFrames);\r\n\t\tthis.recordedSamplesR = new Float32Array(this.sampleFrames);\r\n\r\n\t\t// Batch the actual export\r\n\t\tsetTimeout(() => { this._synthesize(); });\r\n\t}\r\n\r\n\tprivate _exportToWavFinish(): void {\r\n\t\tconst sampleFrames: number = this.recordedSamplesL.length;\r\n\t\tconst sampleRate: number = this.synth.samplesPerSecond;\r\n\r\n\t\tconst wavChannelCount: number = 2;\r\n\t\tconst bytesPerSample: number = 2;\r\n\t\tconst bitsPerSample: number = 8 * bytesPerSample;\r\n\t\tconst sampleCount: number = wavChannelCount * sampleFrames;\r\n\r\n\t\tconst totalFileSize: number = 44 + sampleCount * bytesPerSample;\r\n\r\n\t\tlet index: number = 0;\r\n\t\tconst arrayBuffer: ArrayBuffer = new ArrayBuffer(totalFileSize);\r\n\t\tconst data: DataView = new DataView(arrayBuffer);\r\n\t\tdata.setUint32(index, 0x52494646, false); index += 4;\r\n\t\tdata.setUint32(index, 36 + sampleCount * bytesPerSample, true); index += 4; // size of remaining file\r\n\t\tdata.setUint32(index, 0x57415645, false); index += 4;\r\n\t\tdata.setUint32(index, 0x666D7420, false); index += 4;\r\n\t\tdata.setUint32(index, 0x00000010, true); index += 4; // size of following header\r\n\t\tdata.setUint16(index, 0x0001, true); index += 2; // not compressed\r\n\t\tdata.setUint16(index, wavChannelCount, true); index += 2; // channel count\r\n\t\tdata.setUint32(index, sampleRate, true); index += 4; // sample rate\r\n\t\tdata.setUint32(index, sampleRate * bytesPerSample * wavChannelCount, true); index += 4; // bytes per second\r\n\t\tdata.setUint16(index, bytesPerSample * wavChannelCount, true); index += 2; // block align\r\n\t\tdata.setUint16(index, bitsPerSample, true); index += 2; // bits per sample\r\n\t\tdata.setUint32(index, 0x64617461, false); index += 4;\r\n\t\tdata.setUint32(index, sampleCount * bytesPerSample, true); index += 4;\r\n\r\n\t\tif (bytesPerSample > 1) {\r\n\t\t\t// usually samples are signed. \r\n\t\t\tconst range: number = (1 << (bitsPerSample - 1)) - 1;\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t\tif (bytesPerSample == 2) {\r\n\t\t\t\t\tdata.setInt16(index, valL, true); index += 2;\r\n\t\t\t\t\tdata.setInt16(index, valR, true); index += 2;\r\n\t\t\t\t} else if (bytesPerSample == 4) {\r\n\t\t\t\t\tdata.setInt32(index, valL, true); index += 4;\r\n\t\t\t\t\tdata.setInt32(index, valR, true); index += 4;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(\"unsupported sample size\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// 8 bit samples are a special case: they are unsigned.\r\n\t\t\tfor (let i: number = 0; i < sampleFrames; i++) {\r\n\t\t\t\tlet valL: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * 127 + 128);\r\n\t\t\t\tlet valR: number = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * 127 + 128);\r\n\t\t\t\tdata.setUint8(index, valL > 255 ? 255 : (valL < 0 ? 0 : valL)); index++;\r\n\t\t\t\tdata.setUint8(index, valR > 255 ? 255 : (valR < 0 ? 0 : valR)); index++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([arrayBuffer], { type: \"audio/wav\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".wav\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToMp3Finish(): void {\r\n\t\tconst whenEncoderIsAvailable = (): void => {\r\n\t\t\tconst lamejs: any = (<any>window)[\"lamejs\"];\r\n\t\t\tconst channelCount: number = 2;\r\n\t\t\tconst kbps: number = 192;\r\n\t\t\tconst sampleBlockSize: number = 1152;\r\n\t\t\tconst mp3encoder: any = new lamejs.Mp3Encoder(channelCount, this.synth.samplesPerSecond, kbps);\r\n\t\t\tconst mp3Data: any[] = [];\r\n\r\n\t\t\tconst left: Int16Array = new Int16Array(this.recordedSamplesL.length);\r\n\t\t\tconst right: Int16Array = new Int16Array(this.recordedSamplesR.length);\r\n\t\t\tconst range: number = (1 << 15) - 1;\r\n\t\t\tfor (let i: number = 0; i < this.recordedSamplesL.length; i++) {\r\n\t\t\t\tleft[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesL[i])) * range);\r\n\t\t\t\tright[i] = Math.floor(Math.max(-1, Math.min(1, this.recordedSamplesR[i])) * range);\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < left.length; i += sampleBlockSize) {\r\n\t\t\t\tconst leftChunk: Int16Array = left.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst rightChunk: Int16Array = right.subarray(i, i + sampleBlockSize);\r\n\t\t\t\tconst mp3buf: any = mp3encoder.encodeBuffer(leftChunk, rightChunk);\r\n\t\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\t\t\t}\r\n\r\n\t\t\tconst mp3buf: any = mp3encoder.flush();\r\n\t\t\tif (mp3buf.length > 0) mp3Data.push(mp3buf);\r\n\r\n\t\t\tconst blob: Blob = new Blob(mp3Data, { type: \"audio/mp3\" });\r\n\t\t\tsave(blob, this._fileName.value.trim() + \".mp3\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\r\n\t\tif (\"lamejs\" in window) {\r\n\t\t\twhenEncoderIsAvailable();\r\n\t\t} else {\r\n\t\t\tvar script = document.createElement(\"script\");\r\n\t\t\tscript.src = \"https://cdn.jsdelivr.net/npm/lamejs@1.2.0/lame.min.js\";\r\n\t\t\tscript.onload = whenEncoderIsAvailable;\r\n\t\t\tdocument.head.appendChild(script);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _exportToMidi(): void {\r\n\t\tconst song: Song = this._doc.song;\r\n\t\tconst midiTicksPerBeepBoxTick: number = 2;\r\n\t\tconst midiTicksPerBeat: number = midiTicksPerBeepBoxTick * Config.ticksPerPart * Config.partsPerBeat;\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeepBoxTick * Config.ticksPerPart;\r\n\t\tconst secondsPerMinute: number = 60;\r\n\t\tconst microsecondsPerMinute: number = secondsPerMinute * 1000000;\r\n\t\tconst beatsPerMinute: number = song.getBeatsPerMinute();\r\n\t\tconst microsecondsPerBeat: number = Math.round(microsecondsPerMinute / beatsPerMinute);\r\n\t\t//const secondsPerMidiTick: number = secondsPerMinute / (midiTicksPerBeat * beatsPerMinute);\r\n\t\tconst midiTicksPerBar: number = midiTicksPerBeat * song.beatsPerBar;\r\n\t\tconst pitchBendRange: number = 24;\r\n\t\tconst defaultNoteVelocity: number = 90;\r\n\r\n\t\tconst unrolledBars: number[] = [];\r\n\t\tif (this._enableIntro.checked) {\r\n\t\t\tfor (let bar: number = 0; bar < song.loopStart; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (let loopIndex: number = 0; loopIndex < Number(this._loopDropDown.value); loopIndex++) {\r\n\t\t\tfor (let bar: number = song.loopStart; bar < song.loopStart + song.loopLength; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._enableOutro.checked) {\r\n\t\t\tfor (let bar: number = song.loopStart + song.loopLength; bar < song.barCount; bar++) {\r\n\t\t\t\tunrolledBars.push(bar);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst tracks = [{ isMeta: true, channel: -1, midiChannel: -1, isNoise: false, isDrumset: false }];\r\n\t\tlet midiChannelCounter: number = 0;\r\n\t\tlet foundADrumset: boolean = false;\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tif (!foundADrumset && this._doc.song.channels[channel].instruments[0].type == InstrumentType.drumset) {\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: 9, isNoise: true, isDrumset: true });\r\n\t\t\t\tfoundADrumset = true; // There can only be one drumset channel, and it's always channel 9 (seen as 10 in most UIs). :/\r\n\t\t\t} else {\r\n\t\t\t\tif (midiChannelCounter >= 16) continue; // The MIDI standard only supports 16 channels.\r\n\t\t\t\ttracks.push({ isMeta: false, channel: channel, midiChannel: midiChannelCounter++, isNoise: this._doc.song.getChannelIsNoise(channel), isDrumset: false });\r\n\t\t\t\tif (midiChannelCounter == 9) midiChannelCounter++; // skip midi drum channel.\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst writer: ArrayBufferWriter = new ArrayBufferWriter(1024);\r\n\t\twriter.writeUint32(MidiChunkType.header);\r\n\t\twriter.writeUint32(6); // length of headers is 6 bytes\r\n\t\twriter.writeUint16(MidiFileFormat.simultaneousTracks);\r\n\t\twriter.writeUint16(tracks.length);\r\n\t\twriter.writeUint16(midiTicksPerBeat); // number of \"ticks\" per beat, independent of tempo\r\n\r\n\t\tfor (const track of tracks) {\r\n\t\t\twriter.writeUint32(MidiChunkType.track);\r\n\r\n\t\t\tconst { isMeta, channel, midiChannel, isNoise, isDrumset } = track;\r\n\r\n\t\t\t// We're gonna come back here and overwrite this placeholder once we know how many bytes this track is.\r\n\t\t\tconst trackStartIndex: number = writer.getWriteIndex();\r\n\t\t\twriter.writeUint32(0); // placeholder for track size\r\n\r\n\t\t\tlet prevTime: number = 0;\r\n\t\t\tlet barStartTime: number = 0;\r\n\t\t\tconst writeEventTime = function (time: number): void {\r\n\t\t\t\tif (time < prevTime) throw new Error(\"Midi event time cannot go backwards.\");\r\n\t\t\t\twriter.writeMidiVariableLength(time - prevTime);\r\n\t\t\t\tprevTime = time;\r\n\t\t\t}\r\n\r\n\t\t\tconst writeControlEvent = function (message: MidiControlEventMessage, value: number): void {\r\n\t\t\t\tif (!(value >= 0 && value <= 0x7F)) throw new Error(\"Midi control event value out of range: \" + value);\r\n\t\t\t\twriter.writeUint8(MidiEventType.controlChange | midiChannel);\r\n\t\t\t\twriter.writeMidi7Bits(message);\r\n\t\t\t\twriter.writeMidi7Bits(value | 0);\r\n\t\t\t}\r\n\r\n\t\t\tif (isMeta) {\r\n\t\t\t\t// for first midi track, include tempo, time signature, and key signature information.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.text);\r\n\t\t\t\twriter.writeMidiAscii(\"Composed with jummbus.bitbucket.io\");\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.tempo);\r\n\t\t\t\twriter.writeMidiVariableLength(3); // Tempo message length is 3 bytes.\r\n\t\t\t\twriter.writeUint24(microsecondsPerBeat); // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\"\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.timeSignature);\r\n\t\t\t\twriter.writeMidiVariableLength(4); // Time signature message length is 4 bytes.\r\n\t\t\t\twriter.writeUint8(song.beatsPerBar); // numerator.\r\n\t\t\t\twriter.writeUint8(2); // denominator exponent in 2^E. 2^2 = 4, and we will always use \"quarter\" notes.\r\n\t\t\t\twriter.writeUint8(24); // MIDI Clocks per metronome tick (should match beats), standard is 24\r\n\t\t\t\twriter.writeUint8(8); // number of 1/32 notes per 24 MIDI Clocks, standard is 8, meaning 24 clocks per \"quarter\" note.\r\n\r\n\t\t\t\tconst isMinor: boolean = Config.scales[song.scale].flags[3] && !Config.scales[song.scale].flags[4];\r\n\t\t\t\tconst key: number = song.key; // C=0, C#=1, counting up to B=11\r\n\t\t\t\tlet numSharps: number = key; // For even key values in major scale, number of sharps/flats is same...\r\n\t\t\t\tif ((key & 1) == 1) numSharps += 6; // For odd key values (consider circle of fifths) rotate around the circle... kinda... Look conventional key signatures are just weird, okay?\r\n\t\t\t\tif (isMinor) numSharps += 9; // A minor A scale has zero sharps, shift it appropriately\r\n\t\t\t\twhile (numSharps > 6) numSharps -= 12; // Range is (modulo 12) - 5. Midi supports -7 to +7, but I only have 12 options.\r\n\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.keySignature);\r\n\t\t\t\twriter.writeMidiVariableLength(2); // Key signature message length is 2 bytes.\r\n\t\t\t\twriter.writeInt8(numSharps); // See above calculation. Assumes scale is diatonic. :/\r\n\t\t\t\twriter.writeUint8(isMinor ? 1 : 0); // 0: major, 1: minor\r\n\r\n\t\t\t\tif (this._enableIntro.checked) barStartTime += midiTicksPerBar * song.loopStart;\r\n\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\twriter.writeMidiAscii(\"Loop Start\");\r\n\r\n\t\t\t\tfor (let loopIndex: number = 0; loopIndex < parseInt(this._loopDropDown.value); loopIndex++) {\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar * song.loopLength;\r\n\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.marker);\r\n\t\t\t\t\twriter.writeMidiAscii(loopIndex < Number(this._loopDropDown.value) - 1 ? \"Loop Repeat\" : \"Loop End\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this._enableOutro.checked) barStartTime += midiTicksPerBar * (song.barCount - song.loopStart - song.loopLength);\r\n\t\t\t\tif (barStartTime != midiTicksPerBar * unrolledBars.length) throw new Error(\"Miscalculated number of bars.\");\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// For remaining tracks, set up the instruments and write the notes:\r\n\r\n\t\t\t\tlet channelName: string = isNoise\r\n\t\t\t\t\t? \"noise channel \" + channel\r\n\t\t\t\t\t: \"pitch channel \" + channel;\r\n\t\t\t\twriteEventTime(0);\r\n\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.trackName);\r\n\t\t\t\twriter.writeMidiAscii(channelName);\r\n\r\n\t\t\t\t// This sets up pitch bend range. First we choose the pitch bend RPN (which has MSB and LSB components), then we set the value for that RPN (which also has MSB and LSB components) and finally reset the current RPN to null, which is considered best practice.\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.pitchBendRange);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterMSB, pitchBendRange); // pitch bend semitone range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.setParameterLSB, 0); // pitch bend cent range\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberMSB, MidiRegisteredParameterNumberMSB.reset);\r\n\t\t\t\twriteEventTime(0); writeControlEvent(MidiControlEventMessage.registeredParameterNumberLSB, MidiRegisteredParameterNumberLSB.reset);\r\n\r\n\t\t\t\tlet prevInstrumentIndex: number = -1;\r\n\t\t\t\tfunction writeInstrumentSettings(instrumentIndex: number): void {\r\n\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\r\n\t\t\t\t\tif (prevInstrumentIndex != instrumentIndex) {\r\n\t\t\t\t\t\tprevInstrumentIndex = instrumentIndex;\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\t\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.instrumentName);\r\n\t\t\t\t\t\twriter.writeMidiAscii(\"Instrument \" + (instrumentIndex + 1));\r\n\r\n\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\tlet instrumentProgram: number = 81; // default to sawtooth wave. \r\n\r\n\t\t\t\t\t\t\tif (preset != null && preset.midiProgram != undefined) {\r\n\t\t\t\t\t\t\t\tinstrumentProgram = preset.midiProgram;\r\n\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\t\t\t\t// The first BeepBox drumset channel is handled as a Midi drumset channel and doesn't need a program, but any subsequent drumsets will just be set to taiko.\r\n\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst envelopeType: EnvelopeType = instrument.getFilterEnvelope().type;\r\n\t\t\t\t\t\t\t\tconst instrumentDecays: boolean = envelopeType == EnvelopeType.decay || envelopeType == EnvelopeType.twang;\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.noise || instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\t\t\t\t\tif (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = 116; // taiko\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 47 : 75; // timpani : pan flute\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tconst filterInstruments: number[] = instrumentDecays\r\n\t\t\t\t\t\t\t\t\t\t? ExportPrompt.midiDecayInstruments\r\n\t\t\t\t\t\t\t\t\t\t: ExportPrompt.midiSustainInstruments;\r\n\t\t\t\t\t\t\t\t\tif (filterInstruments.length > instrument.chipWave) {\r\n\t\t\t\t\t\t\t\t\t\tinstrumentProgram = filterInstruments[instrument.chipWave];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 2 : 81; // electric grand : sawtooth\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\t\t\tinstrumentProgram = instrumentDecays ? 0x19 : 81; // steel guitar : sawtooth\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthrow new Error(\"Unrecognized instrument type.\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// Program (instrument) change event:\r\n\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.programChange | midiChannel);\r\n\t\t\t\t\t\t\twriter.writeMidi7Bits(instrumentProgram);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Instrument volume:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentVolume: number = volumeMultToMidiVolume(Synth.instrumentVolumeToVolumeMult(instrument.volume));\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.volumeMSB, Math.min(0x7f, Math.round(instrumentVolume)));\r\n\r\n\t\t\t\t\t\t// Instrument pan:\r\n\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\tlet instrumentPan: number = (instrument.pan / Config.panCenter - 1) * 0x3f + 0x40;\r\n\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.panMSB, Math.min(0x7f, Math.round(instrumentPan)));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (song.getPattern(channel, 0) == null) {\r\n\t\t\t\t\t// Go ahead and apply the instrument settings at the beginning of the channel\r\n\t\t\t\t\t// even if a bar doesn't kick in until later.\r\n\t\t\t\t\twriteInstrumentSettings(0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet prevPitchBend: number = defaultMidiPitchBend;\r\n\t\t\t\tlet prevExpression: number = defaultMidiExpression;\r\n\t\t\t\tlet shouldResetExpressionAndPitchBend: boolean = false;\r\n\t\t\t\t//let prevTremolo: number = -1;\r\n\t\t\t\tconst channelRoot: number = isNoise ? Config.spectrumBasePitch : Config.keys[song.key].basePitch;\r\n\t\t\t\tconst intervalScale: number = isNoise ? Config.noiseInterval : 1;\r\n\r\n\t\t\t\tfor (const bar of unrolledBars) {\r\n\t\t\t\t\tconst pattern: Pattern | null = song.getPattern(channel, bar);\r\n\r\n\t\t\t\t\tif (pattern != null) {\r\n\r\n\t\t\t\t\t\tconst instrumentIndex: number = pattern.instrument;\r\n\t\t\t\t\t\tconst instrument: Instrument = song.channels[channel].instruments[instrumentIndex];\r\n\t\t\t\t\t\tconst preset: Preset | null = EditorConfig.valueToPreset(instrument.preset);\r\n\t\t\t\t\t\twriteInstrumentSettings(instrumentIndex);\r\n\r\n\t\t\t\t\t\tlet chordHarmonizes: boolean = false;\r\n\t\t\t\t\t\tlet usesArpeggio: boolean = true;\r\n\t\t\t\t\t\tlet polyphony: number = 1;\r\n\t\t\t\t\t\tchordHarmonizes = instrument.getChord().harmonizes;\r\n\t\t\t\t\t\tusesArpeggio = instrument.getChord().arpeggiates;\r\n\t\t\t\t\t\tif (usesArpeggio) {\r\n\t\t\t\t\t\t\tif (chordHarmonizes) {\r\n\t\t\t\t\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = 2;\r\n\t\t\t\t\t\t\t\t} else if (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\t\t\tpolyphony = Config.operatorCount;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized instrument type for harmonizing arpeggio: \" + instrument.type);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tpolyphony = Config.maxChordSize;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let noteIndex: number = 0; noteIndex < pattern.notes.length; noteIndex++) {\r\n\t\t\t\t\t\t\tconst note: Note = pattern.notes[noteIndex];\r\n\r\n\t\t\t\t\t\t\tconst noteStartTime: number = barStartTime + note.start * midiTicksPerPart;\r\n\t\t\t\t\t\t\tlet pinTime: number = noteStartTime;\r\n\t\t\t\t\t\t\tlet pinVolume: number = note.pins[0].volume;\r\n\t\t\t\t\t\t\tlet pinInterval: number = note.pins[0].interval;\r\n\t\t\t\t\t\t\tconst prevPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst nextPitches: number[] = [-1, -1, -1, -1];\r\n\t\t\t\t\t\t\tconst toneCount: number = Math.min(polyphony, note.pitches.length);\r\n\t\t\t\t\t\t\tconst velocity: number = isDrumset ? Math.max(1, Math.round(defaultNoteVelocity * note.pins[0].volume / 6)) : defaultNoteVelocity;\r\n\r\n\t\t\t\t\t\t\t// The maximum midi pitch bend range is +/- 24 semitones from the base pitch. \r\n\t\t\t\t\t\t\t// To make the most of this, choose a base pitch that is within 24 semitones from as much of the note as possible.\r\n\t\t\t\t\t\t\t// This may involve offsetting this base pitch from BeepBox's note pitch.\r\n\t\t\t\t\t\t\tlet mainInterval: number = note.pickMainInterval();\r\n\t\t\t\t\t\t\tlet pitchOffset: number = mainInterval * intervalScale;\r\n\t\t\t\t\t\t\tif (!isDrumset) {\r\n\t\t\t\t\t\t\t\tlet maxPitchOffset: number = pitchBendRange;\r\n\t\t\t\t\t\t\t\tlet minPitchOffset: number = -pitchBendRange;\r\n\t\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\t\tconst interval = note.pins[pinIndex].interval * intervalScale;\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset = Math.min(maxPitchOffset, interval + pitchBendRange);\r\n\t\t\t\t\t\t\t\t\tminPitchOffset = Math.max(minPitchOffset, interval - pitchBendRange);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t\t\t// I'd like to be able to use pitch bend to implement arpeggio, but the \"custom inverval\" setting in chip instruments combines arpeggio in one tone with another flat tone, and midi can't selectively apply arpeggio to one out of two simultaneous tones. Also it would be hard to reimport. :/\r\n\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > polyphony) {\r\n\t\t\t\t\t\t\t\t\tlet lowestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tlet highestArpeggioOffset: number = 0;\r\n\t\t\t\t\t\t\t\t\tconst basePitch: number = note.pitches[toneCount - 1];\r\n\t\t\t\t\t\t\t\t\tfor (let pitchIndex: number = toneCount; pitchIndex < note.pitches.length; pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlowestArpeggioOffset = Math.min(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t\thighestArpeggioOffset = Math.max(note.pitches[pitchIndex] - basePitch);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tmaxPitchOffset -= lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t\tminPitchOffset += lowestArpeggioOffset;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t\t\tpitchOffset = Math.min(maxPitchOffset, Math.max(minPitchOffset, pitchOffset));\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tfor (let pinIndex: number = 1; pinIndex < note.pins.length; pinIndex++) {\r\n\t\t\t\t\t\t\t\tconst nextPinTime: number = noteStartTime + note.pins[pinIndex].time * midiTicksPerPart;\r\n\t\t\t\t\t\t\t\tconst nextPinVolume: number = note.pins[pinIndex].volume;\r\n\t\t\t\t\t\t\t\tconst nextPinInterval: number = note.pins[pinIndex].interval;\r\n\r\n\t\t\t\t\t\t\t\tconst length: number = nextPinTime - pinTime;\r\n\t\t\t\t\t\t\t\tfor (let midiTick: number = 0; midiTick < length; midiTick++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTickTime: number = pinTime + midiTick;\r\n\t\t\t\t\t\t\t\t\tconst linearVolume: number = lerp(pinVolume, nextPinVolume, midiTick / length);\r\n\t\t\t\t\t\t\t\t\tconst linearInterval: number = lerp(pinInterval, nextPinInterval, midiTick / length);\r\n\r\n\t\t\t\t\t\t\t\t\tconst interval: number = linearInterval * intervalScale - pitchOffset;\r\n\t\t\t\t\t\t\t\t\tconst pitchBend: number = Math.max(0, Math.min(0x3fff, Math.round(0x2000 * (1.0 + interval / pitchBendRange))));\r\n\r\n\t\t\t\t\t\t\t\t\tconst expression: number = Math.min(0x7f, Math.round(volumeMultToMidiExpression(Synth.expressionToVolumeMult(linearVolume))));\r\n\r\n\t\t\t\t\t\t\t\t\tif (pitchBend != prevPitchBend) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(pitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits((pitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t\t\t\tprevPitchBend = pitchBend;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (expression != prevExpression && !isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, expression);\r\n\t\t\t\t\t\t\t\t\t\tprevExpression = expression;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tconst noteStarting: boolean = midiTickTime == noteStartTime;\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tlet nextPitch: number = note.pitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\tif (isDrumset) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch += mainInterval;\r\n\t\t\t\t\t\t\t\t\t\t\tconst drumsetMap: number[] = [\r\n\t\t\t\t\t\t\t\t\t\t\t\t36, // Bass Drum 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t41, // Low Floor Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t45, // Low Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t48, // Hi-Mid Tom\r\n\t\t\t\t\t\t\t\t\t\t\t\t40, // Electric Snare\r\n\t\t\t\t\t\t\t\t\t\t\t\t39, // Hand Clap\r\n\t\t\t\t\t\t\t\t\t\t\t\t59, // Ride Cymbal 2\r\n\t\t\t\t\t\t\t\t\t\t\t\t49, // Crash Cymbal 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t46, // Open Hi-Hat\r\n\t\t\t\t\t\t\t\t\t\t\t\t55, // Splash Cymbal\r\n\t\t\t\t\t\t\t\t\t\t\t\t69, // Cabasa\r\n\t\t\t\t\t\t\t\t\t\t\t\t54, // Tambourine\r\n\t\t\t\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\t\t\t\tif (nextPitch < 0 || nextPitch >= drumsetMap.length) throw new Error(\"Could not find corresponding drumset pitch. \" + nextPitch);\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = drumsetMap[nextPitch];\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tif (usesArpeggio && note.pitches.length > toneIndex + 1 && toneIndex == toneCount - 1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksSinceBeat = (midiTickTime - barStartTime) % midiTicksPerBeat;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst midiTicksPerArpeggio = Config.ticksPerArpeggio * midiTicksPerPart / Config.ticksPerPart;\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst arpeggio: number = Math.floor(midiTicksSinceBeat / midiTicksPerArpeggio);\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch = note.pitches[toneIndex + getArpeggioPitchIndex(note.pitches.length - toneIndex, instrument.fastTwoNoteArp, arpeggio)];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tnextPitch = channelRoot + nextPitch * intervalScale + pitchOffset;\r\n\t\t\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (isNoise) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextPitch += 12 * (+EditorConfig.presetCategories.dictionary[\"Drum Presets\"].presets.dictionary[\"taiko drum\"].midiSubharmonicOctaves!);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tif (isNoise) nextPitch *= 2;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tnextPitch = Math.max(0, Math.min(127, nextPitch));\r\n\t\t\t\t\t\t\t\t\t\tnextPitches[toneIndex] = nextPitch;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (!noteStarting && prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // old pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\t\t\tif (noteStarting || prevPitches[toneIndex] != nextPitches[toneIndex]) {\r\n\t\t\t\t\t\t\t\t\t\t\twriteEventTime(midiTickTime);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOn | midiChannel);\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(nextPitches[toneIndex]); // new pitch\r\n\t\t\t\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t\t\t\t\tprevPitches[toneIndex] = nextPitches[toneIndex];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tpinTime = nextPinTime;\r\n\t\t\t\t\t\t\t\tpinVolume = nextPinVolume;\r\n\t\t\t\t\t\t\t\tpinInterval = nextPinInterval;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tconst noteEndTime: number = barStartTime + note.end * midiTicksPerPart;\r\n\r\n\t\t\t\t\t\t\t// End all tones.\r\n\t\t\t\t\t\t\tfor (let toneIndex: number = 0; toneIndex < toneCount; toneIndex++) {\r\n\t\t\t\t\t\t\t\twriteEventTime(noteEndTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.noteOff | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitches[toneIndex]); // pitch\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(velocity); // velocity\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (shouldResetExpressionAndPitchBend) {\r\n\t\t\t\t\t\t\tshouldResetExpressionAndPitchBend = false;\r\n\r\n\t\t\t\t\t\t\tif (prevExpression != defaultMidiExpression) {\r\n\t\t\t\t\t\t\t\tprevExpression = defaultMidiExpression;\r\n\t\t\t\t\t\t\t\t// Reset expression\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriteControlEvent(MidiControlEventMessage.expressionMSB, prevExpression);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (prevPitchBend != defaultMidiPitchBend) {\r\n\t\t\t\t\t\t\t\t// Reset pitch bend\r\n\t\t\t\t\t\t\t\tprevPitchBend = defaultMidiPitchBend;\r\n\t\t\t\t\t\t\t\twriteEventTime(barStartTime);\r\n\t\t\t\t\t\t\t\twriter.writeUint8(MidiEventType.pitchBend | midiChannel);\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits(prevPitchBend & 0x7f); // least significant bits\r\n\t\t\t\t\t\t\t\twriter.writeMidi7Bits((prevPitchBend >> 7) & 0x7f); // most significant bits\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbarStartTime += midiTicksPerBar;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\twriteEventTime(barStartTime);\r\n\t\t\twriter.writeUint8(MidiEventType.meta);\r\n\t\t\twriter.writeMidi7Bits(MidiMetaEventMessage.endOfTrack);\r\n\t\t\twriter.writeMidiVariableLength(0x00);\r\n\r\n\t\t\t// Finally, write the length of the track in bytes at the front of the track.\r\n\t\t\twriter.rewriteUint32(trackStartIndex, writer.getWriteIndex() - trackStartIndex - 4);\r\n\t\t}\r\n\r\n\t\tconst blob: Blob = new Blob([writer.toCompactArrayBuffer()], { type: \"audio/midi\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".mid\");\r\n\r\n\t\tthis._close();\r\n\t}\r\n\r\n\tprivate _exportToJson(): void {\r\n\t\tconst jsonObject: Object = this._doc.song.toJsonObject(this._enableIntro.checked, Number(this._loopDropDown.value), this._enableOutro.checked);\r\n\t\tconst jsonString: string = JSON.stringify(jsonObject, null, '\\t');\r\n\t\tconst blob: Blob = new Blob([jsonString], { type: \"application/json\" });\r\n\t\tsave(blob, this._fileName.value.trim() + \".json\");\r\n\t\tthis._close();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HarmonicsWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeHarmonics } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class HarmonicsEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _lastControlPoints: SVGRectElement[] = [];\r\n\tprivate readonly _lastControlPointContainer: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;\", width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._lastControlPointContainer,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"harmonics\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeHarmonics | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 1; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 3; i <= Config.harmonicsControlPoints; i = i * 2) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i - 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = SVG.rect({ fill: \"currentColor\", x: (this._editorWidth - i * 2 - 1), y: 0, width: 1, height: this._editorHeight });\r\n\t\t\tthis._lastControlPoints.push(rect);\r\n\t\t\tthis._lastControlPointContainer.appendChild(rect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.harmonicsControlPoints - 1) * x / (this._editorWidth - 8) - 0.5;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.harmonicsMax * (1 - y / this._editorHeight);\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.harmonicsControlPoints) continue;\r\n\t\t\t\t\tharmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tharmonicsWave.harmonics[Math.max(0, Math.min(Config.harmonicsControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeHarmonics(this._doc, instrument, harmonicsWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst harmonicsWave: HarmonicsWave = instrument.harmonicsWave; //(this._harmonicsIndex == null) ? instrument.harmonicsWave : instrument.drumsetSpectrumWaves[this._harmonicsIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.harmonicsMax)) * this._editorHeight;\r\n\t\t}\r\n\r\n\t\tlet bottom: string = prettyNumber(this._editorHeight);\r\n\t\tlet path: string = \"\";\r\n\t\tfor (let i: number = 0; i < Config.harmonicsControlPoints - 1; i++) {\r\n\t\t\tif (harmonicsWave.harmonics[i] == 0) continue;\r\n\t\t\tlet xPos: string = prettyNumber((i + 0.5) * (this._editorWidth - 8) / (Config.harmonicsControlPoints - 1));\r\n\t\t\tpath += \"M \" + xPos + \" \" + bottom + \" \";\r\n\t\t\tpath += \"L \" + xPos + \" \" + prettyNumber(controlPointToHeight(harmonicsWave.harmonics[i])) + \" \";\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(harmonicsWave.harmonics[Config.harmonicsControlPoints - 1]);\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst rect: SVGRectElement = this._lastControlPoints[i];\r\n\t\t\trect.setAttribute(\"y\", prettyNumber(lastHeight));\r\n\t\t\trect.setAttribute(\"height\", prettyNumber(this._editorHeight - lastHeight));\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n// A few wrapper classes that add functionality onto existing HTML elements, namely binding some events to an implementation-specified change class\r\n\r\nimport { Change } from \"./Change\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nconst { span } = HTML;\r\n\r\nexport class InputBox {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: string = \"\";\r\n\tprivate _oldValue: string = \"\";\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: (oldValue: string, newValue: string) => Change) {\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: string): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tthis._change = this._getChange(this._oldValue, this.input.value);\r\n\t\tthis._doc.setProspectiveChange(this._change);\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._doc.record(this._change!);\r\n\t\tthis._change = null;\r\n\t};\r\n}\r\n\r\nexport class Slider {\r\n\tprivate _change: Change | null = null;\r\n\tprivate _value: number = 0;\r\n\tprivate _oldValue: number = 0;\r\n\tpublic container: HTMLSpanElement;\r\n\r\n\tconstructor(public readonly input: HTMLInputElement, private readonly _doc: SongDocument, private readonly _getChange: ((oldValue: number, newValue: number) => Change) | null, midTick: boolean) {\r\n\t\t// A container is created around the input to allow for spec-compliant pseudo css classes (e.g ::before and ::after, which must be added to containers, not the input itself)\r\n\t\tthis.container = (midTick) ? span({ class: \"midTick\", style: \"position: sticky; width: 61.5%;\" }, input) : span({ style: \"position: sticky;\" }, input);\r\n\t\tinput.addEventListener(\"input\", this._whenInput);\r\n\t\tinput.addEventListener(\"change\", this._whenChange);\r\n\t}\r\n\r\n\tpublic updateValue(value: number): void {\r\n\t\tthis._value = value;\r\n\t\tthis.input.value = String(value);\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\tif (!continuingProspectiveChange) this._oldValue = this._value;\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._change = this._getChange(this._oldValue, parseInt(this.input.value));\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t};\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tif (this._getChange != null) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t};\r\n}","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//namespace beepbox {\r\n// Note: All methods are big endian.\r\nexport class ArrayBufferReader {\r\n\tprivate _readIndex: number = 0;\r\n\tprivate _data: DataView;\r\n\r\n\tconstructor(data: DataView) {\r\n\t\tthis._data = data;\r\n\t}\r\n\r\n\tpublic getReadIndex(): number {\r\n\t\treturn this._readIndex;\r\n\t}\r\n\r\n\tpublic readUint32(): number {\r\n\t\tif (this._readIndex + 4 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint32(this._readIndex, false);\r\n\t\tthis._readIndex += 4;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint24(): number {\r\n\t\treturn (this.readUint8() << 16) | (this.readUint8() << 8) | (this.readUint8());\r\n\t}\r\n\r\n\tpublic readUint16(): number {\r\n\t\tif (this._readIndex + 2 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint16(this._readIndex, false);\r\n\t\tthis._readIndex += 2;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getUint8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic readInt8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: number = this._data.getInt8(this._readIndex);\r\n\t\tthis._readIndex++;\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic peakUint8(): number {\r\n\t\tif (this._readIndex + 1 > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\treturn this._data.getUint8(this._readIndex);\r\n\t}\r\n\r\n\tpublic readMidi7Bits(): number {\r\n\t\tconst result: number = this.readUint8();\r\n\t\tif (result >= 0x80) console.log(\"7 bit value contained 8th bit! value \" + result + \", index \" + this._readIndex);\r\n\t\treturn result & 0x7f;\r\n\t}\r\n\r\n\tpublic readMidiVariableLength(): number {\r\n\t\tlet result: number = 0;\r\n\t\tfor (let i: number = 0; i < 4; i++) {\r\n\t\t\tconst nextByte: number = this.readUint8();\r\n\t\t\tresult += nextByte & 0x7f;\r\n\t\t\tif (nextByte & 0x80) {\r\n\t\t\t\tresult = result << 7;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result;\r\n\t}\r\n\r\n\tpublic skipBytes(length: number): void {\r\n\t\tthis._readIndex += length;\r\n\t}\r\n\r\n\tpublic hasMore(): boolean {\r\n\t\treturn this._data.byteLength > this._readIndex;\r\n\t}\r\n\r\n\tpublic getReaderForNextBytes(length: number): ArrayBufferReader {\r\n\t\tif (this._readIndex + length > this._data.byteLength) throw new Error(\"Reading past the end of the buffer.\");\r\n\t\tconst result: ArrayBufferReader = new ArrayBufferReader(new DataView(this._data.buffer, this._data.byteOffset + this._readIndex, length));\r\n\t\tthis.skipBytes(length);\r\n\t\treturn result;\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { InstrumentType, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, Channel, Song, Synth } from \"../synth/synth\";\r\nimport { Preset, EditorConfig } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { removeDuplicatePatterns, ChangeSong, ChangeReplacePatterns } from \"./changes\";\r\nimport { AnalogousDrum, analogousDrumMap, MidiChunkType, MidiFileFormat, MidiEventType, MidiControlEventMessage, MidiMetaEventMessage, MidiRegisteredParameterNumberMSB, MidiRegisteredParameterNumberLSB, midiVolumeToVolumeMult, midiExpressionToVolumeMult } from \"./Midi\";\r\nimport { ArrayBufferReader } from \"./ArrayBufferReader\";\r\n\r\n//namespace beepbox {\r\nconst { button, p, div, h2, input } = HTML;\r\n\r\nexport class ImportPrompt implements Prompt {\r\n\tprivate readonly _fileInput: HTMLInputElement = input({ type: \"file\", accept: \".json,application/json,.mid,.midi,audio/midi,audio/x-midi\" });\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 300px;\" },\r\n\t\th2(\"Import\"),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox songs can be exported and re-imported as .json files. You could also use other means to make .json files for BeepBox as long as they follow the same structure.\",\r\n\t\t),\r\n\t\tp({ style: \"text-align: left; margin: 0.5em 0;\" },\r\n\t\t\t\"BeepBox can also (crudely) import .mid files. There are many tools available for creating .mid files. Shorter and simpler songs are more likely to work well.\",\r\n\t\t),\r\n\t\tthis._fileInput,\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._fileInput.select();\r\n\t\tsetTimeout(() => this._fileInput.focus());\r\n\r\n\t\tthis._fileInput.addEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._fileInput.removeEventListener(\"change\", this._whenFileSelected);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _whenFileSelected = (): void => {\r\n\t\tconst file: File = this._fileInput.files![0];\r\n\t\tif (!file) return;\r\n\r\n\t\tconst extension: string = file.name.slice((file.name.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n\t\tif (extension == \"json\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, <string>reader.result), true, true);\r\n\t\t\t});\r\n\t\t\treader.readAsText(file);\r\n\t\t} else if (extension == \"midi\" || extension == \"mid\") {\r\n\t\t\tconst reader: FileReader = new FileReader();\r\n\t\t\treader.addEventListener(\"load\", (event: Event): void => {\r\n\t\t\t\tthis._doc.prompt = null;\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tthis._parseMidiFile(<ArrayBuffer>reader.result);\r\n\t\t\t});\r\n\t\t\treader.readAsArrayBuffer(file);\r\n\t\t} else {\r\n\t\t\tconsole.error(\"Unrecognized file extension.\");\r\n\t\t\tthis._close();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _parseMidiFile(buffer: ArrayBuffer): void {\r\n\r\n\t\t// First, split the file into separate buffer readers for each chunk. There should be one header chunk and one or more track chunks.\r\n\t\tconst reader = new ArrayBufferReader(new DataView(buffer));\r\n\t\tlet headerReader: ArrayBufferReader | null = null;\r\n\t\tinterface Track {\r\n\t\t\treader: ArrayBufferReader;\r\n\t\t\tnextEventMidiTick: number;\r\n\t\t\tended: boolean;\r\n\t\t\trunningStatus: number;\r\n\t\t}\r\n\t\tconst tracks: Track[] = [];\r\n\t\twhile (reader.hasMore()) {\r\n\t\t\tconst chunkType: number = reader.readUint32();\r\n\t\t\tconst chunkLength: number = reader.readUint32();\r\n\t\t\tif (chunkType == MidiChunkType.header) {\r\n\t\t\t\tif (headerReader == null) {\r\n\t\t\t\t\theaderReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.error(\"This MIDI file has more than one header chunk.\");\r\n\t\t\t\t}\r\n\t\t\t} else if (chunkType == MidiChunkType.track) {\r\n\t\t\t\tconst trackReader: ArrayBufferReader = reader.getReaderForNextBytes(chunkLength);\r\n\t\t\t\tif (trackReader.hasMore()) {\r\n\t\t\t\t\ttracks.push({\r\n\t\t\t\t\t\treader: trackReader,\r\n\t\t\t\t\t\tnextEventMidiTick: trackReader.readMidiVariableLength(),\r\n\t\t\t\t\t\tended: false,\r\n\t\t\t\t\t\trunningStatus: -1,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// Unknown chunk type. Skip it.\r\n\t\t\t\treader.skipBytes(chunkLength);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (headerReader == null) {\r\n\t\t\tconsole.error(\"No header chunk found in this MIDI file.\");\r\n\t\t\tthis._close();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst fileFormat: number = headerReader.readUint16();\r\n\t\t\t/*const trackCount: number =*/ headerReader.readUint16();\r\n\t\tconst midiTicksPerBeat: number = headerReader.readUint16();\r\n\r\n\t\t// Midi tracks are generally intended to be played in parallel, but in the format\r\n\t\t// MidiFileFormat.independentTracks, they are played in sequence. Make a list of all\r\n\t\t// of the track indices that should be played in parallel (one or all of the tracks).\r\n\t\tlet currentIndependentTrackIndex: number = 0;\r\n\t\tconst currentTrackIndices: number[] = [];\r\n\t\tconst independentTracks: boolean = (fileFormat == MidiFileFormat.independentTracks);\r\n\t\tif (independentTracks) {\r\n\t\t\tcurrentTrackIndices.push(currentIndependentTrackIndex);\r\n\t\t} else {\r\n\t\t\tfor (let trackIndex: number = 0; trackIndex < tracks.length; trackIndex++) {\r\n\t\t\t\tcurrentTrackIndices.push(trackIndex);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinterface NoteEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tpitch: number;\r\n\t\t\tvelocity: number;\r\n\t\t\tprogram: number;\r\n\t\t\tinstrumentVolume: number;\r\n\t\t\tinstrumentPan: number;\r\n\t\t\ton: boolean;\r\n\t\t}\r\n\t\tinterface PitchBendEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tinterval: number;\r\n\t\t}\r\n\t\tinterface ExpressionEvent {\r\n\t\t\tmidiTick: number;\r\n\t\t\tvolume: number;\r\n\t\t}\r\n\r\n\t\t// To read a MIDI file we have to simulate state changing over time.\r\n\t\t// Keep a record of various parameters for each channel that may\r\n\t\t// change over time, initialized to default values.\r\n\t\t// Consider making a MidiChannel class and single array of midiChannels.\r\n\t\tconst channelRPNMSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst channelRPNLSB: number[] = [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff];\r\n\t\tconst pitchBendRangeMSB: number[] = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]; // pitch bend range defaults to 2 semitones.\r\n\t\tconst pitchBendRangeLSB: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // and 0 cents.\r\n\t\tconst currentInstrumentProgram: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n\t\tconst currentInstrumentVolumes: number[] = [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100];\r\n\t\tconst currentInstrumentPans: number[] = [64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64];\r\n\t\tconst noteEvents: NoteEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst pitchBendEvents: PitchBendEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tconst expressionEvents: ExpressionEvent[][] = [[], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []];\r\n\t\tlet microsecondsPerBeat: number = 500000; // Tempo in microseconds per \"quarter\" note, commonly known as a \"beat\", default is equivalent to 120 beats per minute.\r\n\t\tlet beatsPerBar: number = 8;\r\n\t\tlet numSharps: number = 0;\r\n\t\tlet isMinor: boolean = false;\r\n\r\n\t\t// Progress in time through all tracks (in parallel or in sequence) recording state changes and events until all tracks have ended.\r\n\t\tlet currentMidiTick: number = 0;\r\n\t\twhile (true) {\r\n\t\t\tlet nextEventMidiTick: number = Number.MAX_VALUE;\r\n\t\t\tlet anyTrackHasMore: boolean = false;\r\n\t\t\tfor (const trackIndex of currentTrackIndices) {\r\n\r\n\t\t\t\t// Parse any events in this track that occur at the currentMidiTick.\r\n\t\t\t\tconst track: Track = tracks[trackIndex];\r\n\t\t\t\twhile (!track.ended && track.nextEventMidiTick == currentMidiTick) {\r\n\r\n\t\t\t\t\t// If the most significant bit is set in the first byte\r\n\t\t\t\t\t// of the event, it's a new event status, otherwise\r\n\t\t\t\t\t// reuse the running status and save the next byte for\r\n\t\t\t\t\t// the content of the event. I'm assuming running status\r\n\t\t\t\t\t// is separate for each track.\r\n\t\t\t\t\tconst peakStatus: number = track.reader.peakUint8();\r\n\t\t\t\t\tconst eventStatus: number = (peakStatus & 0x80) ? track.reader.readUint8() : track.runningStatus;\r\n\t\t\t\t\tconst eventType: number = eventStatus & 0xF0;\r\n\t\t\t\t\tconst eventChannel: number = eventStatus & 0x0F;\r\n\t\t\t\t\tif (eventType != MidiEventType.metaAndSysex) {\r\n\t\t\t\t\t\ttrack.runningStatus = eventStatus;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet foundTrackEndEvent: boolean = false;\r\n\r\n\t\t\t\t\tswitch (eventType) {\r\n\t\t\t\t\t\tcase MidiEventType.noteOff: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const velocity: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.noteOn: {\r\n\t\t\t\t\t\t\tconst pitch: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst velocity: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tif (velocity == 0) {\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({ midiTick: currentMidiTick, pitch: pitch, velocity: 0.0, program: -1, instrumentVolume: -1, instrumentPan: -1, on: false });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconst volume: number = Math.max(0, Math.min(Config.volumeRange - 1, Math.round(\r\n\t\t\t\t\t\t\t\t\tSynth.volumeMultToInstrumentVolume(midiVolumeToVolumeMult(currentInstrumentVolumes[eventChannel]))\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tconst pan: number = Math.max(0, Math.min(Config.panMax, Math.round(\r\n\t\t\t\t\t\t\t\t\t((currentInstrumentPans[eventChannel] - 64) / 63 + 1) * Config.panCenter\r\n\t\t\t\t\t\t\t\t)));\r\n\t\t\t\t\t\t\t\tnoteEvents[eventChannel].push({\r\n\t\t\t\t\t\t\t\t\tmidiTick: currentMidiTick,\r\n\t\t\t\t\t\t\t\t\tpitch: pitch,\r\n\t\t\t\t\t\t\t\t\tvelocity: Math.max(0.0, Math.min(1.0, (velocity + 14) / 90.0)),\r\n\t\t\t\t\t\t\t\t\tprogram: currentInstrumentProgram[eventChannel],\r\n\t\t\t\t\t\t\t\t\tinstrumentVolume: volume,\r\n\t\t\t\t\t\t\t\t\tinstrumentPan: pan,\r\n\t\t\t\t\t\t\t\t\ton: true,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.keyPressure: {\r\n\t\t\t\t\t\t\t\t/*const pitch: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.controlChange: {\r\n\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst value: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t//console.log(\"Control change, message:\", message, \"value:\", value);\r\n\r\n\t\t\t\t\t\t\tswitch (message) {\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterMSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.volumeMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentVolumes[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.panMSB: {\r\n\t\t\t\t\t\t\t\t\tcurrentInstrumentPans[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.expressionMSB: {\r\n\t\t\t\t\t\t\t\t\texpressionEvents[eventChannel].push({ midiTick: currentMidiTick, volume: Synth.volumeMultToExpression(midiExpressionToVolumeMult(value)) });\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.setParameterLSB: {\r\n\t\t\t\t\t\t\t\t\tif (channelRPNMSB[eventChannel] == MidiRegisteredParameterNumberMSB.pitchBendRange && channelRPNLSB[eventChannel] == MidiRegisteredParameterNumberLSB.pitchBendRange) {\r\n\t\t\t\t\t\t\t\t\t\tpitchBendRangeLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberLSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNLSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t\tcase MidiControlEventMessage.registeredParameterNumberMSB: {\r\n\t\t\t\t\t\t\t\t\tchannelRPNMSB[eventChannel] = value;\r\n\t\t\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.programChange: {\r\n\t\t\t\t\t\t\tconst program: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tcurrentInstrumentProgram[eventChannel] = program;\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.channelPressure: {\r\n\t\t\t\t\t\t\t\t/*const pressure: number =*/ track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.pitchBend: {\r\n\t\t\t\t\t\t\tconst lsb: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\tconst msb: number = track.reader.readMidi7Bits();\r\n\r\n\t\t\t\t\t\t\tconst pitchBend: number = (((msb << 7) | lsb) / 0x2000) - 1.0;\r\n\t\t\t\t\t\t\tconst pitchBendRange: number = pitchBendRangeMSB[eventChannel] + pitchBendRangeLSB[eventChannel] * 0.01;\r\n\t\t\t\t\t\t\tconst interval: number = pitchBend * pitchBendRange;\r\n\r\n\t\t\t\t\t\t\tpitchBendEvents[eventChannel].push({ midiTick: currentMidiTick, interval: interval });\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tcase MidiEventType.metaAndSysex: {\r\n\t\t\t\t\t\t\tif (eventStatus == MidiEventType.meta) {\r\n\t\t\t\t\t\t\t\tconst message: number = track.reader.readMidi7Bits();\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\t//console.log(\"Meta, message:\", message, \"length:\", length);\r\n\r\n\t\t\t\t\t\t\t\tif (message == MidiMetaEventMessage.endOfTrack) {\r\n\t\t\t\t\t\t\t\t\tfoundTrackEndEvent = true;\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.tempo) {\r\n\t\t\t\t\t\t\t\t\tmicrosecondsPerBeat = track.reader.readUint24();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 3);\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.timeSignature) {\r\n\t\t\t\t\t\t\t\t\tconst numerator: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\tlet denominatorExponent: number = track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const midiClocksPerMetronome: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\t\t/*const thirtySecondNotesPer24MidiClocks: number =*/ track.reader.readUint8();\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 4);\r\n\r\n\t\t\t\t\t\t\t\t\t// A beat is a quarter note. \r\n\t\t\t\t\t\t\t\t\t// A ratio of 4/4, or 1/1, corresponds to 4 beats per bar.\r\n\t\t\t\t\t\t\t\t\t// Apply the numerator first.\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = numerator * 4;\r\n\t\t\t\t\t\t\t\t\t// Then apply the denominator, dividing by two until either\r\n\t\t\t\t\t\t\t\t\t// the denominator is satisfied or there's an odd number of\r\n\t\t\t\t\t\t\t\t\t// beats. BeepBox doesn't support fractional beats in a bar.\r\n\t\t\t\t\t\t\t\t\twhile ((beatsPerBar & 1) == 0 && (denominatorExponent > 0 || beatsPerBar > Config.beatsPerBarMax) && beatsPerBar >= Config.beatsPerBarMin * 2) {\r\n\t\t\t\t\t\t\t\t\t\tbeatsPerBar = beatsPerBar >> 1;\r\n\t\t\t\t\t\t\t\t\t\tdenominatorExponent = denominatorExponent - 1;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tbeatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, beatsPerBar));\r\n\t\t\t\t\t\t\t\t} else if (message == MidiMetaEventMessage.keySignature) {\r\n\t\t\t\t\t\t\t\t\tnumSharps = track.reader.readInt8(); // Note: can be negative for flats.\r\n\t\t\t\t\t\t\t\t\tisMinor = track.reader.readUint8() == 1; // 0: major, 1: minor\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length - 2);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// Ignore other meta event message types.\r\n\t\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else if (eventStatus == 0xF0 || eventStatus == 0xF7) {\r\n\t\t\t\t\t\t\t\t// Sysex events, just skip the data.\r\n\t\t\t\t\t\t\t\tconst length: number = track.reader.readMidiVariableLength();\r\n\t\t\t\t\t\t\t\ttrack.reader.skipBytes(length);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tconsole.error(\"Unrecognized event status: \" + eventStatus);\r\n\t\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} break;\r\n\t\t\t\t\t\tdefault: {\r\n\t\t\t\t\t\t\tconsole.error(\"Unrecognized event type: \" + eventType);\r\n\t\t\t\t\t\t\tthis._close();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!foundTrackEndEvent && track.reader.hasMore()) {\r\n\t\t\t\t\t\ttrack.nextEventMidiTick = currentMidiTick + track.reader.readMidiVariableLength();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttrack.ended = true;\r\n\r\n\t\t\t\t\t\t// If the tracks are sequential, start the next track when this one ends.\r\n\t\t\t\t\t\tif (independentTracks) {\r\n\t\t\t\t\t\t\tcurrentIndependentTrackIndex++;\r\n\t\t\t\t\t\t\tif (currentIndependentTrackIndex < tracks.length) {\r\n\t\t\t\t\t\t\t\tcurrentTrackIndices[0] = currentIndependentTrackIndex;\r\n\t\t\t\t\t\t\t\ttracks[currentIndependentTrackIndex].nextEventMidiTick += currentMidiTick;\r\n\t\t\t\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, tracks[currentIndependentTrackIndex].nextEventMidiTick);\r\n\t\t\t\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!track.ended) {\r\n\t\t\t\t\tanyTrackHasMore = true;\r\n\t\t\t\t\tnextEventMidiTick = Math.min(nextEventMidiTick, track.nextEventMidiTick);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (anyTrackHasMore) {\r\n\t\t\t\tcurrentMidiTick = nextEventMidiTick;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Now the MIDI file is fully parsed. Next, constuct BeepBox channels out of the data.\r\n\t\tconst microsecondsPerMinute: number = 60 * 1000 * 1000;\r\n\t\tconst beatsPerMinute: number = Math.max(Config.tempoMin, Math.min(Config.tempoMax, Math.round(microsecondsPerMinute / microsecondsPerBeat)));\r\n\t\tconst midiTicksPerPart: number = midiTicksPerBeat / Config.partsPerBeat;\r\n\t\tconst partsPerBar: number = Config.partsPerBeat * beatsPerBar;\r\n\t\tconst songTotalBars: number = Math.ceil(currentMidiTick / midiTicksPerPart / partsPerBar);\r\n\r\n\t\tfunction quantizeMidiTickToPart(midiTick: number): number {\r\n\t\t\treturn Math.round(midiTick / midiTicksPerPart);\r\n\t\t}\r\n\r\n\t\tlet key: number = numSharps;\r\n\t\tif (isMinor) key += 3; // Diatonic C Major has the same sharps/flats as A Minor, and these keys are 3 semitones apart.\r\n\t\tif ((key & 1) == 1) key += 6; // If the number of sharps/flats is odd, rotate it halfway around the circle of fifths. The key of C# has little in common with the key of C.\r\n\t\twhile (key < 0) key += 12; // Wrap around to a range from 0 to 11.\r\n\t\tkey = key % 12; // Wrap around to a range from 0 to 11.\r\n\r\n\t\t// Convert each midi channel into a BeepBox channel.\r\n\t\tconst pitchChannels: Channel[] = [];\r\n\t\tconst noiseChannels: Channel[] = [];\r\n\t\tconst modChannels: Channel[] = [];\r\n\t\tfor (let midiChannel: number = 0; midiChannel < 16; midiChannel++) {\r\n\t\t\tif (noteEvents[midiChannel].length == 0) continue;\r\n\r\n\t\t\tconst channel: Channel = new Channel();\r\n\r\n\t\t\tconst channelPresetValue: number | null = EditorConfig.midiProgramToPresetValue(noteEvents[midiChannel][0].program);\r\n\t\t\tconst channelPreset: Preset | null = (channelPresetValue == null) ? null : EditorConfig.valueToPreset(channelPresetValue);\r\n\r\n\t\t\tconst isDrumsetChannel: boolean = (midiChannel == 9);\r\n\t\t\tconst isNoiseChannel: boolean = isDrumsetChannel || (channelPreset != null && channelPreset.isNoise == true);\r\n\t\t\tconst isModChannel: boolean = (channelPreset != null && channelPreset.isMod == true);\r\n\t\t\tconst channelBasePitch: number = isNoiseChannel ? Config.spectrumBasePitch : Config.keys[key].basePitch;\r\n\t\t\tconst intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n\t\t\tconst midiIntervalScale: number = isNoiseChannel ? 0.5 : 1;\r\n\t\t\tconst channelMaxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n\r\n\t\t\tif (isNoiseChannel) {\r\n\t\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\t\tnoiseChannels.unshift(channel);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnoiseChannels.push(channel);\r\n\t\t\t\t}\r\n\t\t\t} else if (isModChannel) {\r\n\t\t\t\tmodChannels.push(channel);\r\n\t\t\t} else {\r\n\t\t\t\tpitchChannels.push(channel);\r\n\t\t\t}\r\n\r\n\t\t\tlet currentVelocity: number = 1.0;\r\n\t\t\tlet currentProgram: number = 0;\r\n\t\t\tlet currentInstrumentVolume: number = 0;\r\n\t\t\tlet currentInstrumentPan: number = Config.panCenter;\r\n\r\n\t\t\tif (isDrumsetChannel) {\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet setInstrumentVolume: boolean = false;\r\n\r\n\t\t\t\tconst presetValue: number = EditorConfig.nameToPresetValue(\"standard drumset\")!;\r\n\t\t\t\tconst preset: Preset = EditorConfig.valueToPreset(presetValue)!;\r\n\t\t\t\tconst instrument: Instrument = new Instrument(false, false);\r\n\t\t\t\tinstrument.fromJsonObject(preset.settings, false, false, false, false);\r\n\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\tchannel.instruments.push(instrument);\r\n\r\n\t\t\t\tfor (let noteEventIndex: number = 0; noteEventIndex <= noteEvents[midiChannel].length; noteEventIndex++) {\r\n\t\t\t\t\tconst noMoreNotes: boolean = noteEventIndex == noteEvents[midiChannel].length;\r\n\t\t\t\t\tconst noteEvent: NoteEvent | null = noMoreNotes ? null : noteEvents[midiChannel][noteEventIndex];\r\n\t\t\t\t\tconst nextEventPart: number = noteEvent == null ? Number.MAX_SAFE_INTEGER : quantizeMidiTickToPart(noteEvent.midiTick);\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart && (noteEvent == null || noteEvent.on)) {\r\n\t\t\t\t\t\tconst bar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\t\t\t\t\t\t\tpattern.instrument = 0;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\tif (!setInstrumentVolume || instrument.volume > currentInstrumentVolume) {\r\n\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\t\t\t\t\t\t\tsetInstrumentVolume = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst drumFreqs: number[] = [];\r\n\t\t\t\t\t\tlet minDuration: number = channelMaxPitch;\r\n\t\t\t\t\t\tlet maxDuration: number = 0;\r\n\t\t\t\t\t\tlet expression: number = 1;\r\n\t\t\t\t\t\tfor (const pitch of heldPitches) {\r\n\t\t\t\t\t\t\tconst drum: AnalogousDrum | undefined = analogousDrumMap[pitch];\r\n\t\t\t\t\t\t\tif (drumFreqs.indexOf(drum.frequency) == -1) {\r\n\t\t\t\t\t\t\t\tdrumFreqs.push(drum.frequency);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\texpression = Math.max(expression, Math.round(drum.volume * currentVelocity));\r\n\t\t\t\t\t\t\tminDuration = Math.min(minDuration, drum.duration);\r\n\t\t\t\t\t\t\tmaxDuration = Math.max(maxDuration, drum.duration);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst duration: number = Math.min(maxDuration, Math.max(minDuration, 2));\r\n\t\t\t\t\t\tconst noteStartPart: number = prevEventPart - barStartPart;\r\n\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, Math.min(nextEventPart - barStartPart, noteStartPart + duration * 6));\r\n\r\n\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, expression, true);\r\n\r\n\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, drumFreqs.length); pitchIndex++) {\r\n\t\t\t\t\t\t\tconst heldPitch: number = drumFreqs[pitchIndex + Math.max(0, drumFreqs.length - Config.maxChordSize)];\r\n\t\t\t\t\t\t\tif (note.pitches.indexOf(heldPitch) == -1) {\r\n\t\t\t\t\t\t\t\tnote.pitches.push(heldPitch);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpattern.notes.push(note);\r\n\r\n\t\t\t\t\t\theldPitches.length = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (noteEvent != null && noteEvent.on && analogousDrumMap[noteEvent.pitch] != undefined) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// If not a drumset, handle as a tonal instrument.\r\n\r\n\t\t\t\t// Advance the pitch bend and expression timelines to the given midiTick, \r\n\t\t\t\t// changing the value of currentMidiInterval or currentMidiExpression.\r\n\t\t\t\t// IMPORTANT: These functions can't rewind!\r\n\t\t\t\tlet currentMidiInterval: number = 0.0;\r\n\t\t\t\tlet currentMidiExpression: number = 3.0;\r\n\t\t\t\tlet pitchBendEventIndex: number = 0;\r\n\t\t\t\tlet expressionEventIndex: number = 0;\r\n\t\t\t\tfunction updateCurrentMidiInterval(midiTick: number) {\r\n\t\t\t\t\twhile (pitchBendEventIndex < pitchBendEvents[midiChannel].length && pitchBendEvents[midiChannel][pitchBendEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiInterval = pitchBendEvents[midiChannel][pitchBendEventIndex].interval;\r\n\t\t\t\t\t\tpitchBendEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction updateCurrentMidiExpression(midiTick: number) {\r\n\t\t\t\t\twhile (expressionEventIndex < expressionEvents[midiChannel].length && expressionEvents[midiChannel][expressionEventIndex].midiTick <= midiTick) {\r\n\t\t\t\t\t\tcurrentMidiExpression = expressionEvents[midiChannel][expressionEventIndex].volume;\r\n\t\t\t\t\t\texpressionEventIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst instrumentByProgram: Instrument[] = [];\r\n\t\t\t\tconst heldPitches: number[] = [];\r\n\t\t\t\tlet currentBar: number = -1;\r\n\t\t\t\tlet pattern: Pattern | null = null;\r\n\t\t\t\tlet prevEventMidiTick: number = 0;\r\n\t\t\t\tlet prevEventPart: number = 0;\r\n\t\t\t\tlet pitchSum: number = 0;\r\n\t\t\t\tlet pitchCount: number = 0;\r\n\r\n\t\t\t\tfor (let noteEvent of noteEvents[midiChannel]) {\r\n\t\t\t\t\tconst nextEventMidiTick: number = noteEvent.midiTick;\r\n\t\t\t\t\tconst nextEventPart: number = quantizeMidiTickToPart(nextEventMidiTick);\r\n\r\n\t\t\t\t\tif (heldPitches.length > 0 && nextEventPart > prevEventPart) {\r\n\t\t\t\t\t\t// If there are any pitches held between the previous event and the next\r\n\t\t\t\t\t\t// event, iterate over all bars covered by this time period, ensure they\r\n\t\t\t\t\t\t// have a pattern instantiated, and insert notes for these pitches.\r\n\t\t\t\t\t\tconst startBar: number = Math.floor(prevEventPart / partsPerBar);\r\n\t\t\t\t\t\tconst endBar: number = Math.ceil(nextEventPart / partsPerBar);\r\n\t\t\t\t\t\tfor (let bar: number = startBar; bar < endBar; bar++) {\r\n\t\t\t\t\t\t\tconst barStartPart: number = bar * partsPerBar;\r\n\t\t\t\t\t\t\tconst barStartMidiTick: number = bar * beatsPerBar * midiTicksPerBeat;\r\n\t\t\t\t\t\t\tconst barEndMidiTick: number = (bar + 1) * beatsPerBar * midiTicksPerBeat;\r\n\r\n\t\t\t\t\t\t\tconst noteStartPart: number = Math.max(0, prevEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteEndPart: number = Math.min(partsPerBar, nextEventPart - barStartPart);\r\n\t\t\t\t\t\t\tconst noteStartMidiTick: number = Math.max(barStartMidiTick, prevEventMidiTick);\r\n\t\t\t\t\t\t\tconst noteEndMidiTick: number = Math.min(barEndMidiTick, nextEventMidiTick);\r\n\r\n\t\t\t\t\t\t\tif (noteStartPart < noteEndPart) {\r\n\t\t\t\t\t\t\t\tconst presetValue: number | null = EditorConfig.midiProgramToPresetValue(currentProgram);\r\n\t\t\t\t\t\t\t\tconst preset: Preset | null = (presetValue == null) ? null : EditorConfig.valueToPreset(presetValue);\r\n\r\n\t\t\t\t\t\t\t\t// Ensure a pattern exists for the current bar before inserting notes into it.\r\n\t\t\t\t\t\t\t\tif (currentBar != bar || pattern == null) {\r\n\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\twhile (currentBar < bar) {\r\n\t\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = 0;\r\n\t\t\t\t\t\t\t\t\t\tcurrentBar++;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpattern = new Pattern();\r\n\t\t\t\t\t\t\t\t\tchannel.patterns.push(pattern);\r\n\t\t\t\t\t\t\t\t\tchannel.bars[currentBar] = channel.patterns.length;\r\n\r\n\t\t\t\t\t\t\t\t\t// If this is the first time a note is trying to use a specific instrument\r\n\t\t\t\t\t\t\t\t\t// program in this channel, create a new BeepBox instrument for it.\r\n\t\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\tconst instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram] = instrument;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (presetValue != null && preset != null && (preset.isNoise == true) == isNoiseChannel) {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.fromJsonObject(preset.settings, isNoiseChannel, isModChannel, false, false);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.preset = presetValue;\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n\t\t\t\t\t\t\t\t\t\t\tinstrument.chord = 0; // Midi instruments use polyphonic harmony by default.\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tinstrument.volume = currentInstrumentVolume;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.pan = currentInstrumentPan;\r\n\t\t\t\t\t\t\t\t\t\tinstrument.panDelay = 0;\r\n\r\n\t\t\t\t\t\t\t\t\t\tchannel.instruments.push(instrument);\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tpattern.instrument = channel.instruments.indexOf(instrumentByProgram[currentProgram]);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Use the loudest volume setting for the instrument, since \r\n\t\t\t\t\t\t\t\t// many midis unfortunately use the instrument volume control to fade\r\n\t\t\t\t\t\t\t\t// in at the beginning and we don't want to get stuck with the initial\r\n\t\t\t\t\t\t\t\t// zero volume.\r\n\t\t\t\t\t\t\t\tif (instrumentByProgram[currentProgram] != undefined) {\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].volume = Math.min(instrumentByProgram[currentProgram].volume, currentInstrumentVolume);\r\n\t\t\t\t\t\t\t\t\tinstrumentByProgram[currentProgram].pan = Math.min(instrumentByProgram[currentProgram].pan, currentInstrumentPan);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Create a new note, and interpret the pitch bend and expression events\r\n\t\t\t\t\t\t\t\t// to determine where we need to insert pins to control interval and expression.\r\n\t\t\t\t\t\t\t\tconst note: Note = new Note(-1, noteStartPart, noteEndPart, 3, false);\r\n\t\t\t\t\t\t\t\tnote.pins.length = 0;\r\n\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(noteStartMidiTick);\r\n\t\t\t\t\t\t\t\tconst shiftedHeldPitch: number = heldPitches[0] * midiIntervalScale - channelBasePitch;\r\n\t\t\t\t\t\t\t\tconst initialBeepBoxPitch: number = Math.round((shiftedHeldPitch + currentMidiInterval) / intervalScale);\r\n\t\t\t\t\t\t\t\tconst heldPitchOffset: number = Math.round(currentMidiInterval - channelBasePitch);\r\n\t\t\t\t\t\t\t\tlet firstPin: NotePin = makeNotePin(0, 0, Math.round(currentVelocity * currentMidiExpression));\r\n\t\t\t\t\t\t\t\tnote.pins.push(firstPin);\r\n\r\n\t\t\t\t\t\t\t\tinterface PotentialPin {\r\n\t\t\t\t\t\t\t\t\tpart: number;\r\n\t\t\t\t\t\t\t\t\tpitch: number;\r\n\t\t\t\t\t\t\t\t\tvolume: number;\r\n\t\t\t\t\t\t\t\t\tkeyPitch: boolean;\r\n\t\t\t\t\t\t\t\t\tkeyVolume: boolean;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tconst potentialPins: PotentialPin[] = [\r\n\t\t\t\t\t\t\t\t\t{ part: 0, pitch: initialBeepBoxPitch, volume: firstPin.volume, keyPitch: false, keyVolume: false }\r\n\t\t\t\t\t\t\t\t];\r\n\t\t\t\t\t\t\t\tlet prevPinIndex: number = 0;\r\n\r\n\t\t\t\t\t\t\t\tlet prevPartPitch: number = (shiftedHeldPitch + currentMidiInterval) / intervalScale;\r\n\t\t\t\t\t\t\t\tlet prevPartExpression: number = currentVelocity * currentMidiExpression;\r\n\t\t\t\t\t\t\t\tfor (let part: number = noteStartPart + 1; part <= noteEndPart; part++) {\r\n\t\t\t\t\t\t\t\t\tconst midiTick: number = Math.max(noteStartMidiTick, Math.min(noteEndMidiTick - 1, Math.round(midiTicksPerPart * (part + barStartPart))));\r\n\t\t\t\t\t\t\t\t\tconst noteRelativePart: number = part - noteStartPart;\r\n\t\t\t\t\t\t\t\t\tconst lastPart: boolean = (part == noteEndPart);\r\n\r\n\t\t\t\t\t\t\t\t\t// BeepBox can only add pins at whole number intervals and expressions. Detect places where\r\n\t\t\t\t\t\t\t\t\t// the interval or expression are at or cross whole numbers, and add these to the list of\r\n\t\t\t\t\t\t\t\t\t// potential places to insert pins.\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiInterval(midiTick);\r\n\t\t\t\t\t\t\t\t\tupdateCurrentMidiExpression(midiTick);\r\n\t\t\t\t\t\t\t\t\tconst partPitch: number = (currentMidiInterval + shiftedHeldPitch) / intervalScale;\r\n\t\t\t\t\t\t\t\t\tconst partExpression: number = currentVelocity * currentMidiExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestPitch: number = Math.round(partPitch);\r\n\t\t\t\t\t\t\t\t\tconst pitchIsNearInteger: boolean = Math.abs(partPitch - nearestPitch) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst pitchCrossedInteger: boolean = (Math.abs(prevPartPitch - Math.round(prevPartPitch)) < 0.01)\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partPitch - prevPartPitch) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partPitch) != Math.floor(prevPartPitch);\r\n\t\t\t\t\t\t\t\t\tconst keyPitch: boolean = pitchIsNearInteger || pitchCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tconst nearestExpression: number = Math.round(partExpression);\r\n\t\t\t\t\t\t\t\t\tconst expressionIsNearInteger: boolean = Math.abs(partExpression - nearestExpression) < 0.01;\r\n\t\t\t\t\t\t\t\t\tconst expressionCrossedInteger: boolean = (Math.abs(prevPartExpression - Math.round(prevPartExpression)))\r\n\t\t\t\t\t\t\t\t\t\t? Math.abs(partExpression - prevPartExpression) >= 1.0\r\n\t\t\t\t\t\t\t\t\t\t: Math.floor(partExpression) != Math.floor(prevPartExpression);\r\n\t\t\t\t\t\t\t\t\tconst keyExpression: boolean = expressionIsNearInteger || expressionCrossedInteger;\r\n\r\n\t\t\t\t\t\t\t\t\tprevPartPitch = partPitch;\r\n\t\t\t\t\t\t\t\t\tprevPartExpression = partExpression;\r\n\r\n\t\t\t\t\t\t\t\t\tif (keyPitch || keyExpression || lastPart) {\r\n\t\t\t\t\t\t\t\t\t\tconst currentPin: PotentialPin = { part: noteRelativePart, pitch: nearestPitch, volume: nearestExpression, keyPitch: keyPitch || lastPart, keyVolume: keyExpression || lastPart };\r\n\t\t\t\t\t\t\t\t\t\tconst prevPin: PotentialPin = potentialPins[prevPinIndex];\r\n\r\n\t\t\t\t\t\t\t\t\t\t// At all key points in the list of potential pins, check to see if they\r\n\t\t\t\t\t\t\t\t\t\t// continue the recent slope. If not, insert a pin at the corner, where\r\n\t\t\t\t\t\t\t\t\t\t// the recent recorded values deviate the furthest from the slope.\r\n\t\t\t\t\t\t\t\t\t\tlet addPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\tlet addPinAtIndex: number = Number.MAX_VALUE;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.pitch - prevPin.pitch) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestIntervalDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addIntervalPinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyPitch) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedInterval: number = prevPin.pitch + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedInterval - potentialPin.pitch);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestIntervalDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestIntervalDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddIntervalPinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addIntervalPin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addIntervalPinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (currentPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst slope: number = (currentPin.volume - prevPin.volume) / (currentPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\tlet furthestVolumeDistance: number = Math.abs(slope); // minimum distance to make a new pin.\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePin: boolean = false;\r\n\t\t\t\t\t\t\t\t\t\t\tlet addVolumePinAtIndex: number = Number.MAX_VALUE;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let potentialIndex: number = prevPinIndex + 1; potentialIndex < potentialPins.length; potentialIndex++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst potentialPin: PotentialPin = potentialPins[potentialIndex];\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (potentialPin.keyVolume) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst interpolatedVolume: number = prevPin.volume + slope * (potentialPin.part - prevPin.part);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst distance: number = Math.abs(interpolatedVolume - potentialPin.volume);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (furthestVolumeDistance < distance) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfurthestVolumeDistance = distance;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddVolumePinAtIndex = potentialIndex;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (addVolumePin) {\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPin = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\taddPinAtIndex = Math.min(addPinAtIndex, addVolumePinAtIndex);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (addPin) {\r\n\t\t\t\t\t\t\t\t\t\t\tconst toBePinned: PotentialPin = potentialPins[addPinAtIndex];\r\n\t\t\t\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(toBePinned.pitch - initialBeepBoxPitch, toBePinned.part, toBePinned.volume));\r\n\t\t\t\t\t\t\t\t\t\t\tprevPinIndex = addPinAtIndex;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tpotentialPins.push(currentPin);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// And always add a pin at the end of the note.\r\n\t\t\t\t\t\t\t\tconst lastToBePinned: PotentialPin = potentialPins[potentialPins.length - 1];\r\n\t\t\t\t\t\t\t\tnote.pins.push(makeNotePin(lastToBePinned.pitch - initialBeepBoxPitch, lastToBePinned.part, lastToBePinned.volume));\r\n\r\n\t\t\t\t\t\t\t\t// Use interval range to constrain min/max pitches so no pin is out of bounds.\r\n\t\t\t\t\t\t\t\tlet maxPitch: number = channelMaxPitch;\r\n\t\t\t\t\t\t\t\tlet minPitch: number = 0;\r\n\t\t\t\t\t\t\t\tfor (const notePin of note.pins) {\r\n\t\t\t\t\t\t\t\t\tmaxPitch = Math.min(maxPitch, channelMaxPitch - notePin.interval);\r\n\t\t\t\t\t\t\t\t\tminPitch = Math.min(minPitch, -notePin.interval);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t// Build the note chord out of the current pitches, shifted into BeepBox channelBasePitch relative values.\r\n\t\t\t\t\t\t\t\tnote.pitches.length = 0;\r\n\t\t\t\t\t\t\t\tfor (let pitchIndex: number = 0; pitchIndex < Math.min(Config.maxChordSize, heldPitches.length); pitchIndex++) {\r\n\t\t\t\t\t\t\t\t\tlet heldPitch: number = heldPitches[pitchIndex + Math.max(0, heldPitches.length - Config.maxChordSize)] * midiIntervalScale;\r\n\t\t\t\t\t\t\t\t\tif (preset != null && preset.midiSubharmonicOctaves != undefined) {\r\n\t\t\t\t\t\t\t\t\t\theldPitch -= 12 * preset.midiSubharmonicOctaves;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tconst shiftedPitch: number = Math.max(minPitch, Math.min(maxPitch, Math.round((heldPitch + heldPitchOffset) / intervalScale)));\r\n\t\t\t\t\t\t\t\t\tif (note.pitches.indexOf(shiftedPitch) == -1) {\r\n\t\t\t\t\t\t\t\t\t\tnote.pitches.push(shiftedPitch);\r\n\t\t\t\t\t\t\t\t\t\tconst weight: number = note.end - note.start;\r\n\t\t\t\t\t\t\t\t\t\tpitchSum += shiftedPitch * weight;\r\n\t\t\t\t\t\t\t\t\t\tpitchCount += weight;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tpattern.notes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Process the next midi note event before continuing, updating the list of currently held pitches.\r\n\t\t\t\t\tif (heldPitches.indexOf(noteEvent.pitch) != -1) {\r\n\t\t\t\t\t\theldPitches.splice(heldPitches.indexOf(noteEvent.pitch), 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (noteEvent.on) {\r\n\t\t\t\t\t\theldPitches.push(noteEvent.pitch);\r\n\t\t\t\t\t\tcurrentVelocity = noteEvent.velocity;\r\n\t\t\t\t\t\tcurrentProgram = noteEvent.program;\r\n\t\t\t\t\t\tcurrentInstrumentVolume = noteEvent.instrumentVolume;\r\n\t\t\t\t\t\tcurrentInstrumentPan = noteEvent.instrumentPan;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tprevEventMidiTick = nextEventMidiTick;\r\n\t\t\t\t\tprevEventPart = nextEventPart;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst averagePitch: number = pitchSum / pitchCount;\r\n\t\t\t\tchannel.octave = (isNoiseChannel || isModChannel) ? 0 : Math.max(0, Math.min(this._doc.scrollableOctaves, Math.round((averagePitch / 12) - 1.5)));\r\n\t\t\t}\r\n\r\n\t\t\twhile (channel.bars.length < songTotalBars) {\r\n\t\t\t\tchannel.bars.push(0);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// For better or for worse, BeepBox has a more limited number of channels than Midi.\r\n\t\t// To compensate, try to merge non-overlapping channels.\r\n\t\tfunction compactChannels(channels: Channel[], maxLength: number): void {\r\n\t\t\twhile (channels.length > maxLength) {\r\n\t\t\t\tlet bestChannelIndexA: number = channels.length - 2;\r\n\t\t\t\tlet bestChannelIndexB: number = channels.length - 1;\r\n\t\t\t\tlet fewestConflicts: number = Number.MAX_VALUE;\r\n\t\t\t\tlet fewestGaps: number = Number.MAX_VALUE;\r\n\t\t\t\tfor (let channelIndexA: number = 0; channelIndexA < channels.length - 1; channelIndexA++) {\r\n\t\t\t\t\tfor (let channelIndexB: number = channelIndexA + 1; channelIndexB < channels.length; channelIndexB++) {\r\n\t\t\t\t\t\tconst channelA: Channel = channels[channelIndexA];\r\n\t\t\t\t\t\tconst channelB: Channel = channels[channelIndexB];\r\n\t\t\t\t\t\tlet conflicts: number = 0;\r\n\t\t\t\t\t\tlet gaps: number = 0;\r\n\t\t\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] != 0 && channelB.bars[barIndex] != 0) conflicts++;\r\n\t\t\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] == 0) gaps++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (conflicts <= fewestConflicts) {\r\n\t\t\t\t\t\t\tif (conflicts < fewestConflicts || gaps < fewestGaps) {\r\n\t\t\t\t\t\t\t\tbestChannelIndexA = channelIndexA;\r\n\t\t\t\t\t\t\t\tbestChannelIndexB = channelIndexB;\r\n\t\t\t\t\t\t\t\tfewestConflicts = conflicts;\r\n\t\t\t\t\t\t\t\tfewestGaps = gaps;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Merge channelB's patterns, instruments, and bars into channelA.\r\n\t\t\t\tconst channelA: Channel = channels[bestChannelIndexA];\r\n\t\t\t\tconst channelB: Channel = channels[bestChannelIndexB];\r\n\t\t\t\tconst channelAInstrumentCount: number = channelA.instruments.length;\r\n\t\t\t\tconst channelAPatternCount: number = channelA.patterns.length;\r\n\t\t\t\tfor (const instrument of channelB.instruments) {\r\n\t\t\t\t\tchannelA.instruments.push(instrument);\r\n\t\t\t\t}\r\n\t\t\t\tfor (const pattern of channelB.patterns) {\r\n\t\t\t\t\tpattern.instrument += channelAInstrumentCount;\r\n\t\t\t\t\tchannelA.patterns.push(pattern);\r\n\t\t\t\t}\r\n\t\t\t\tfor (let barIndex: number = 0; barIndex < channelA.bars.length && barIndex < channelB.bars.length; barIndex++) {\r\n\t\t\t\t\tif (channelA.bars[barIndex] == 0 && channelB.bars[barIndex] != 0) {\r\n\t\t\t\t\t\tchannelA.bars[barIndex] = channelB.bars[barIndex] + channelAPatternCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Remove channelB.\r\n\t\t\t\tchannels.splice(bestChannelIndexB, 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcompactChannels(pitchChannels, Config.pitchChannelCountMax);\r\n\t\tcompactChannels(noiseChannels, Config.noiseChannelCountMax);\r\n\t\tcompactChannels(modChannels, Config.modChannelCountMax);\r\n\r\n\t\tclass ChangeImportMidi extends ChangeGroup {\r\n\t\t\tconstructor(doc: SongDocument) {\r\n\t\t\t\tsuper();\r\n\t\t\t\tconst song: Song = doc.song;\r\n\t\t\t\tsong.tempo = beatsPerMinute;\r\n\t\t\t\tsong.beatsPerBar = beatsPerBar;\r\n\t\t\t\tsong.key = key;\r\n\t\t\t\tsong.scale = 11;\r\n\t\t\t\tsong.reverb = 1;\r\n\t\t\t\tsong.rhythm = 1;\r\n\r\n\t\t\t\tremoveDuplicatePatterns(pitchChannels);\r\n\t\t\t\tremoveDuplicatePatterns(noiseChannels);\r\n\t\t\t\tremoveDuplicatePatterns(modChannels);\r\n\r\n\t\t\t\tthis.append(new ChangeReplacePatterns(doc, pitchChannels, noiseChannels, modChannels));\r\n\t\t\t\tsong.loopStart = 0;\r\n\t\t\t\tsong.loopLength = song.barCount;\r\n\t\t\t\tthis._didSomething();\r\n\t\t\t\tdoc.notifier.changed();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._doc.goBackToStart();\r\n\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeImportMidi(this._doc), true, true);\r\n\t}\r\n}\r\n//}\r\n\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class Layout {\r\n\tprivate static readonly _normalLayout: string = `\r\n\t\t`;\r\n\r\n\tprivate static readonly _wideFullScreenLayout: string = `\r\n\t\t\t/* wide full screen (jummbox) */\r\n\t\t\t@media (min-width: 1001px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: 512px minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"track-area pattern-area settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmax-height: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: calc( 100vh - 20px );\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tposition: absolute !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _fullScreenLayout: string = `\r\n\t\t\t/* full screen (beepbox) */\r\n\t\t\t@media (min-width: 701px) {\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\tmax-width: initial;\r\n\t\t\t\t\theight: 100vh;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\tmin-height: 100vh;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) 30em; /* minmax(0, 1fr) min-content; Chrome 80 grid layout regression. https://bugs.chromium.org/p/chromium/issues/detail?id=1050307 */\r\n\t\t\t\t\tgrid-template-rows: minmax(481px, 1fr) min-content;\r\n\t\t\t\t\tgrid-template-areas: \"pattern-area settings-area\" \"track-area track-area\";\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .pattern-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\theight: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .track-area {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .editor-widget-column {\r\n\t\t\t\t\tflex: 0;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .instrument-settings-area > .editor-controls {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\twidth: 100%;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .song-settings-area {\r\n\t\t\t\t\toverflow-y: auto;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .settings-area {\r\n\t\t\t\t\twidth: 30em;\r\n\t\t\t\t\tgrid-template-columns: minmax(0, 1fr) minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-rows: auto auto auto minmax(0, 1fr);\r\n\t\t\t\t\tgrid-template-areas:\r\n\t\t\t\t\t\t\"instrument-settings-area version-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area play-pause-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area menu-area\"\r\n\t\t\t\t\t\t\"instrument-settings-area song-settings-area\";\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t.beepboxEditor .barScrollBar {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor.selectRow {\r\n\t\t\t\t\theight: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .operatorRow {\r\n\t\t\t\t\theiht: 2em;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\t\t\tmax-height: 446px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .trackContainer {\r\n\t\t\t\t\toverflow-x: auto;\r\n\t\t\t\t\tscrollbar-width: auto;\r\n\t\t\t\t\tscrollbar-color: ${ColorConfig.uiWidgetBackground} ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar {\r\n\t\t\t\t\twidth: 20px;\r\n\t\t\t\t\theight: 20px;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-track {\r\n\t\t\t\t\tbackground: ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .trackContainer::-webkit-scrollbar-thumb {\r\n\t\t\t\t\tbackground-color: ${ColorConfig.uiWidgetBackground};\r\n\t\t\t\t\tborder: 3px solid ${ColorConfig.editorBackground};\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t`;\r\n\r\n\tprivate static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setFullScreen(layout: string): void {\r\n\t\tswitch (layout) {\r\n\t\t\tcase \"normal\":\r\n\t\t\t\tthis._styleElement.textContent = this._normalLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._fullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"widefullscreen\":\r\n\t\t\t\tthis._styleElement.textContent = this._wideFullScreenLayout;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input, select, option } = HTML;\r\n\r\nexport class LayoutPrompt implements Prompt {\r\n\tprivate readonly _octaveStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\", value: \"0\" });\r\n\tprivate readonly _layoutSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"normal\" }, \"Normal Layout\"),\r\n\t\toption({ value: \"fullscreen\" }, \"Full-screen Layout\"),\r\n\t\toption({ value: \"widefullscreen\" }, \"Wide Full-screen Layout\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Set Layout\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Extra View Octaves:\",\r\n\t\t\t),\r\n\t\t\tthis._octaveStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._layoutSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._octaveStepper.min = \"0\";\r\n\t\tthis._octaveStepper.max = \"2\";\r\n\t\tconst lastOctaves: string | null = window.localStorage.getItem(\"extraOctaves\");\r\n\t\tif (lastOctaves != null) {\r\n\t\t\tthis._octaveStepper.value = lastOctaves;\r\n\t\t}\r\n\r\n\t\tconst lastLayout: string | null = window.localStorage.getItem(\"fullScreen\");\r\n\t\tif (lastLayout != null) {\r\n\t\t\tthis._layoutSelect.value = lastLayout;\r\n\t\t}\r\n\r\n\t\tthis._octaveStepper.select();\r\n\t\tsetTimeout(() => this._octaveStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.addEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._octaveStepper.removeEventListener(\"blur\", LayoutPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this._layoutSelect.value);\r\n\t\twindow.localStorage.setItem(\"extraOctaves\", this._octaveStepper.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.fullScreen = this._layoutSelect.value;\r\n\t\tLayout.setFullScreen(this._doc.fullScreen);\r\n\t\tthis._doc.windowOctaves = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\t\tthis._doc.scrollableOctaves = Config.pitchOctaves - this._doc.windowOctaves;\r\n\t\tthis._doc.windowPitchCount = this._doc.windowOctaves * Config.pitchesPerOctave + 1;\r\n\t\tthis._doc.undo();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeLimiterSettings } from \"./changes\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, input } = HTML;\r\n\r\nexport class LimiterCanvas {\r\n\tprivate readonly _editorWidth: number = 200; // 112\r\n\tprivate readonly _editorHeight: number = 52; // 26\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _ticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _subticks: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.textSelection, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _boostDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.textSelection, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _midCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.primaryText, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitCurve: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.linkAccent, \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _limitDot: SVGCircleElement = SVG.circle({ fill: ColorConfig.linkAccent, stroke: \"none\", r: \"3\" });\r\n\tprivate readonly _label0: SVGTextElement = SVG.text({ x: \"-1.5%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"0\");\r\n\tprivate readonly _label1: SVGTextElement = SVG.text({ x: \"48.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"1\");\r\n\tprivate readonly _label2: SVGTextElement = SVG.text({ x: \"98.2%\", y: \"148.5%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--secondary-text)\" }, \"2\");\r\n\tprivate readonly _inLabel: SVGTextElement = SVG.text({ x: \"-5%\", y: \"113.5%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"In\");\r\n\tprivate readonly _outLabel: SVGTextElement = SVG.text({ x: \"-9%\", y: \"131%\", \"pointer-events\": \"none\", \"font-size\": \"6pt\", fill: \"var(--secondary-text)\" }, \"Out\");\r\n\tprivate readonly _xAxisLabel: SVGTextElement = SVG.text({ x: \"42%\", y: \"172%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", fill: \"var(--primary-text)\" }, \"Volume\");\r\n\tprivate readonly _yAxisLabel: SVGTextElement = SVG.text({ x: \"55.2%\", y: \"160%\", \"pointer-events\": \"none\", \"font-size\": \"7pt\", transform: \"rotate(-90 30,120)\", fill: \"var(--primary-text)\" }, \"Gain\");\r\n\tprivate readonly _inVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"105%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"100%\", height: \"6px\", x: \"0%\", y: \"120%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _inVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"105%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _inVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"105%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"6px\", x: \"0%\", y: \"120%\", fill: \"url('#volumeGrad')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"6px\", y: \"120%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"30%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"45%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"50%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; overflow: visible;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._defs,\r\n\t\tthis._fill,\r\n\t\tthis._ticks,\r\n\t\tthis._subticks,\r\n\t\tthis._boostCurve,\r\n\t\tthis._midCurve,\r\n\t\tthis._limitCurve,\r\n\t\tthis._boostDot,\r\n\t\tthis._limitDot,\r\n\t\tthis._label0,\r\n\t\tthis._label1,\r\n\t\tthis._label2,\r\n\t\tthis._inLabel,\r\n\t\tthis._outLabel,\r\n\t\tthis._xAxisLabel,\r\n\t\tthis._yAxisLabel,\r\n\t\tthis._inVolumeBg,\r\n\t\tthis._outVolumeBg,\r\n\t\tthis._inVolumeBar,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._inVolumeCap,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"\", style: \"height: 4em; width: 80%; padding-bottom: 1.5em;\" }, this._svg);\r\n\r\n\tprivate _limiterPrompt: LimiterPrompt;\r\n\r\n\tconstructor(lim: LimiterPrompt) {\r\n\t\tfor (let i: number = 0; i <= 2; i++) {\r\n\t\t\tthis._ticks.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i * this._editorWidth / 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i <= 3; i += 2) {\r\n\t\t\tthis._subticks.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i * this._editorWidth / 4) - 1, y: 0, width: 1, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis._limiterPrompt = lim;\r\n\r\n\t}\r\n\r\n\tpublic animateVolume(inVolumeCap: number, historicInCap: number, outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._inVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, inVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._inVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicInCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(this._editorWidth, outVolumeCap * (this._editorWidth / 2.0)));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + Math.min(this._editorWidth, historicOutCap * (this._editorWidth / 2.0)));\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn Math.max(0, (1 - (point / 5)) * (this._editorHeight - 1) + 1);\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet currentSubpathIdx: number = 0;\r\n\t\tlet lastSubpathIdx: number = -1;\r\n\t\tlet path: string = \"\";\r\n\t\tlet subPaths: string[] = [\"\", \"\", \"\"];\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Calculate next value based on limiter settings\r\n\t\t\tlet limiterRatio: number = +this._limiterPrompt.limitRatioSlider.value;\r\n\t\t\tlimiterRatio = (limiterRatio < 10 ? limiterRatio / 10 : (limiterRatio - 9));\r\n\t\t\tlet compressorRatio: number = +this._limiterPrompt.compressionRatioSlider.value;\r\n\t\t\tcompressorRatio = (compressorRatio < 10 ? compressorRatio / 10 : (1 + (compressorRatio - 10) / 60));\r\n\t\t\tlet limiterThreshold: number = +this._limiterPrompt.limitThresholdSlider.value;\r\n\t\t\tlet compressorThreshold: number = +this._limiterPrompt.compressionThresholdSlider.value;\r\n\t\t\tlet useVol: number = i * 2.0 / 64.0; // Scale from 0~2\r\n\t\t\tlet nextValue: number = 1 / 1.05;\r\n\t\t\tif (useVol >= limiterThreshold) {\r\n\t\t\t\t// Limiter falloff\r\n\t\t\t\tnextValue = 1 / (1.05 * (useVol + 1 - limiterThreshold) * limiterRatio + (1 - limiterRatio));\r\n\t\t\t}\r\n\t\t\telse if (useVol < compressorThreshold) {\r\n\t\t\t\t// Compressor boost\r\n\t\t\t\tnextValue = 1 / (((useVol + 1 - compressorThreshold) * 0.8 + 0.25) * compressorRatio + 1.05 * (1 - compressorRatio));\r\n\t\t\t}\r\n\r\n\t\t\t// first point in entire path\r\n\t\t\tif (i == 0) {\r\n\t\t\t\tpath += \"M 0 \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t}\r\n\r\n\t\t\t// first point in a specific subpath\r\n\t\t\tif (currentSubpathIdx > lastSubpathIdx) {\r\n\t\t\t\tif (lastSubpathIdx >= 0) {\r\n\t\t\t\t\tsubPaths[lastSubpathIdx] += \"L \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\t\t}\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \" + prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\r\n\t\t\t\tif (currentSubpathIdx == 1 || (lastSubpathIdx == 0 && currentSubpathIdx == 2)) {\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._boostDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\t\t\t\tif (currentSubpathIdx == 2) {\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cx\", prettyNumber(i * this._editorWidth / 64));\r\n\t\t\t\t\tthis._limitDot.setAttribute(\"cy\", prettyNumber(controlPointToHeight(nextValue)));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastSubpathIdx = currentSubpathIdx;\r\n\t\t\t}\r\n\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t\tsubPaths[currentSubpathIdx] += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += prettyNumber(i * this._editorWidth / 64) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\r\n\t\t\t// Move to next subpath\r\n\t\t\tif (currentSubpathIdx == 0 && (i >= compressorThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t\tif (currentSubpathIdx == 1 && (i >= limiterThreshold * 32 - 2)) {\r\n\t\t\t\tcurrentSubpathIdx++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t\tsubPaths[currentSubpathIdx] += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tthis._boostCurve.setAttribute(\"d\", subPaths[0]);\r\n\t\tthis._midCurve.setAttribute(\"d\", subPaths[1]);\r\n\t\tthis._limitCurve.setAttribute(\"d\", subPaths[2]);\r\n\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\t}\r\n}\r\n\r\nexport class LimiterPrompt implements Prompt {\r\n\r\n\tprivate limiterCanvas: LimiterCanvas = new LimiterCanvas(this);\r\n\r\n\tpublic readonly _playButton: HTMLButtonElement = button({ style: \"width: 55%;\", type: \"button\" });\r\n\r\n\tpublic readonly limitDecaySlider: HTMLInputElement = input({ title: \"limit decay\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"1\", max: \"30\", value: \"4\", step: \"1\" });\r\n\tpublic readonly limitRiseSlider: HTMLInputElement = input({ title: \"limit rise\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"2000\", max: \"10000\", value: \"4000\", step: \"250\" });\r\n\tpublic readonly compressionThresholdSlider: HTMLInputElement = input({ title: \"compressor threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"1.1\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly limitThresholdSlider: HTMLInputElement = input({ title: \"limiter threshold\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"2\", value: \"1\", step: \"0.05\" });\r\n\tpublic readonly compressionRatioSlider: HTMLInputElement = input({ title: \"compressor ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly limitRatioSlider: HTMLInputElement = input({ title: \"limiter ratio\", style: `width: 100%; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"20\", value: \"10\", step: \"1\" });\r\n\tpublic readonly masterGainSlider: HTMLInputElement = input({ title: \"master gain\", style: `width: 5em; flex-grow: 1; margin: 0;`, type: \"range\", min: \"0\", max: \"5\", value: \"1\", step: \"0.02\" });\r\n\r\n\tprivate startingLimitDecay: number;\r\n\tprivate startingLimitRise: number;\r\n\tprivate startingCompressionThreshold: number;\r\n\tprivate startingLimitThreshold: number;\r\n\tprivate startingCompressionRatio: number;\r\n\tprivate startingLimitRatio: number;\r\n\tprivate startingMasterGain: number;\r\n\r\n\tprivate inVolumeHistoricTimer: number = 0.0;\r\n\tprivate inVolumeHistoricCap: number = 0.0;\r\n\tprivate outVolumeHistoricTimer: number = 0.0;\r\n\tprivate outVolumeHistoricCap: number = 0.0;\r\n\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\tprivate readonly _resetButton: HTMLButtonElement = button({ style: \"width:45%;\" }, \"Reset\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Limiter Options\"),\r\n\t\tdiv({ style: \"display: flex; width: 55%; align-self: center; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis._playButton,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; justify-content: center;\" },\r\n\t\t\tthis.limiterCanvas.container,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 1.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 4.5%; color: ${ColorConfig.textSelection};` },\r\n\t\t\t\t\"Boost\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `text-align: center; width: 33%; margin-right: 0%; color: ${ColorConfig.linkAccent};` },\r\n\t\t\t\t\"Cutoff\"\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; margin-top: 0.5em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Threshold:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionThresholdSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitThresholdSlider,\r\n\t\t\t),\r\n\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 25%; margin-right: 4.5%; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Ratio:\"\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 4.5%;` },\r\n\t\t\t\tthis.compressionRatioSlider,\r\n\t\t\t),\r\n\t\t\tdiv({ style: `width: 33%; margin-right: 0%;` },\r\n\t\t\t\tthis.limitRatioSlider,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Decay:\"\r\n\t\t\t),\r\n\t\t\tthis.limitDecaySlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Limit Rise:\"\r\n\t\t\t),\r\n\t\t\tthis.limitRiseSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: `text-align: right; width: 8.5em; margin-right: 1em; color: ${ColorConfig.primaryText};` },\r\n\t\t\t\t\"Master Gain:\"\r\n\t\t\t),\r\n\t\t\tthis.masterGainSlider,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t\tthis._resetButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.addEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this.whenKeyPressed);\r\n\r\n\t\tthis.limitRatioSlider.value = \"\" + (this._doc.song.limitRatio < 1 ? this._doc.song.limitRatio * 10 : 9 + this._doc.song.limitRatio);\r\n\t\tthis.compressionRatioSlider.value = \"\" + (this._doc.song.compressionRatio < 1 ? this._doc.song.compressionRatio * 10 : 10 + (this._doc.song.compressionRatio - 1) * 60);\r\n\t\tthis.limitThresholdSlider.value = \"\" + this._doc.song.limitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this._doc.song.compressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this._doc.song.limitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this._doc.song.limitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this._doc.song.masterGain;\r\n\r\n\t\tthis.startingLimitRatio = +this.limitRatioSlider.value;\r\n\t\tthis.startingCompressionRatio = +this.compressionRatioSlider.value;\r\n\t\tthis.startingLimitThreshold = +this.limitThresholdSlider.value;\r\n\t\tthis.startingCompressionThreshold = +this.compressionThresholdSlider.value;\r\n\t\tthis.startingLimitDecay = +this.limitDecaySlider.value;\r\n\t\tthis.startingLimitRise = +this.limitRiseSlider.value;\r\n\t\tthis.startingMasterGain = +this.masterGainSlider.value;\r\n\r\n\t\tthis.limitDecaySlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.compressionRatioSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.addEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\r\n\t\tthis.updatePlayButton();\r\n\r\n\t\tthis.limiterCanvas.render();\r\n\t}\r\n\r\n\tprivate _volumeUpdate = (): void => {\r\n\t\tthis.inVolumeHistoricTimer--;\r\n\t\tif (this.inVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.inVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.inVolumeCap > this.inVolumeHistoricCap) {\r\n\t\t\tthis.inVolumeHistoricCap = this._doc.song.inVolumeCap;\r\n\t\t\tthis.inVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tthis.limiterCanvas.animateVolume(this._doc.song.inVolumeCap, this.inVolumeHistoricCap, this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t//console.log(this._doc.song.volumeCap);\r\n\t\twindow.requestAnimationFrame(this._volumeUpdate);\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._songEditor._pause();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._songEditor._play();\r\n\t\t\tthis.updatePlayButton();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenInput = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t\tthis.limitThresholdSlider.value = this.compressionThresholdSlider.value;\r\n\t\t\tthis.limitThresholdSlider.addEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\t// Same as above, but for conflicts between limiter threshold and compressor threshold, favor the limiter\r\n\tprivate _whenInputFavorLimitThreshold = (): void => {\r\n\t\tif (+this.limitThresholdSlider.value < +this.compressionThresholdSlider.value) {\r\n\t\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\t\tthis.compressionThresholdSlider.value = this.limitThresholdSlider.value;\r\n\t\t\tthis.compressionThresholdSlider.addEventListener(\"input\", this._whenInput);\r\n\t\t}\r\n\t\tthis.limiterCanvas.render();\r\n\t\tthis._updateLimiter();\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\t// Reset all sliders to starting values\r\n\t\tthis.limitRatioSlider.value = \"\" + this.startingLimitRatio;\r\n\t\tthis.compressionRatioSlider.value = \"\" + this.startingCompressionRatio;\r\n\t\tthis.limitThresholdSlider.value = \"\" + this.startingLimitThreshold;\r\n\t\tthis.compressionThresholdSlider.value = \"\" + this.startingCompressionThreshold;\r\n\t\tthis.limitDecaySlider.value = \"\" + this.startingLimitDecay;\r\n\t\tthis.limitRiseSlider.value = \"\" + this.startingLimitRise;\r\n\t\tthis.masterGainSlider.value = \"\" + this.startingMasterGain;\r\n\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._resetButton.removeEventListener(\"click\", this._resetDefaults);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this.whenKeyPressed);\r\n\t\tthis.limitDecaySlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitRiseSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.limitThresholdSlider.removeEventListener(\"input\", this._whenInputFavorLimitThreshold);\r\n\t\tthis.limitRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionRatioSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.compressionThresholdSlider.removeEventListener(\"input\", this._whenInput);\r\n\t\tthis.masterGainSlider.removeEventListener(\"input\", this._whenInput);\r\n\r\n\t\tthis._playButton.removeEventListener(\"click\", this._togglePlay);\r\n\t}\r\n\r\n\tpublic whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t\tif (event.keyCode == 32) {\r\n\t\t\tthis._togglePlay();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetDefaults = (): void => {\r\n\t\t// Set song limiter settings to their default\r\n\t\tif (this.limitRatioSlider.value != \"10\" || this.limitRiseSlider.value != \"4000\" || this.limitDecaySlider.value != \"4\" || this.limitThresholdSlider.value != \"1\" || this.compressionRatioSlider.value != \"10\" || this.compressionThresholdSlider.value != \"1\" || this.masterGainSlider.value != \"1\") {\r\n\r\n\t\t\tthis.limitRatioSlider.value = \"10\";\r\n\t\t\tthis.limitRiseSlider.value = \"4000\";\r\n\t\t\tthis.limitDecaySlider.value = \"4\";\r\n\t\t\tthis.limitThresholdSlider.value = \"1\";\r\n\t\t\tthis.compressionRatioSlider.value = \"10\";\r\n\t\t\tthis.compressionThresholdSlider.value = \"1\";\r\n\t\t\tthis.masterGainSlider.value = \"1\";\r\n\r\n\t\t\tthis._whenInput();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateLimiter = (): void => {\r\n\t\t// Save slider values to song\r\n\t\tthis._doc.record(new ChangeLimiterSettings(this._doc,\r\n\t\t\t(+this.limitRatioSlider.value < 10 ? +this.limitRatioSlider.value / 10 : (+this.limitRatioSlider.value - 9)),\r\n\t\t\t(+this.compressionRatioSlider.value < 10 ? +this.compressionRatioSlider.value / 10 : (1 + (+this.compressionRatioSlider.value - 10) / 60)),\r\n\t\t\t+this.limitThresholdSlider.value,\r\n\t\t\t+this.compressionThresholdSlider.value,\r\n\t\t\t+this.limitRiseSlider.value,\r\n\t\t\t+this.limitDecaySlider.value,\r\n\t\t\t+this.masterGainSlider.value,\r\n\t\t), true);\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\tthis._updateLimiter();\r\n\t\tthis._doc.prompt = null;\r\n\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeLoop, ChangeChannelBar } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\ninterface Cursor {\r\n\tstartBar: number;\r\n\tmode: number;\r\n}\r\n\r\ninterface Endpoints {\r\n\tstart: number;\r\n\tlength: number;\r\n}\r\n\r\nexport class LoopEditor {\r\n\tprivate readonly _editorHeight: number = 20;\r\n\tprivate readonly _startMode: number = 0;\r\n\tprivate readonly _endMode: number = 1;\r\n\tprivate readonly _bothMode: number = 2;\r\n\r\n\tprivate readonly _loop: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.loopAccent, \"stroke-width\": 4 });\r\n\tprivate readonly _highlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: pan-y; position: absolute;`, height: this._editorHeight },\r\n\t\tthis._loop,\r\n\t\tthis._highlight,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ style: \"height: 20px; position: relative; margin: 5px 0;\" }, this._svg);\r\n\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _change: ChangeLoop | null = null;\r\n\tprivate _cursor: Cursor = { startBar: -1, mode: -1 };\r\n\tprivate _mouseX: number = 0;\r\n\t//private _mouseY: number = 0;\r\n\tprivate _clientStartX: number = 0;\r\n\tprivate _clientStartY: number = 0;\r\n\tprivate _startedScrolling: boolean = false;\r\n\tprivate _draggingHorizontally: boolean = false;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _renderedLoopStart: number = -1;\r\n\tprivate _renderedLoopStop: number = -1;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\tthis._cursor.startBar = bar;\r\n\r\n\t\tif (bar > this._doc.song.loopStart - 0.25 && bar < this._doc.song.loopStart + this._doc.song.loopLength + 0.25) {\r\n\t\t\tif (bar - this._doc.song.loopStart < this._doc.song.loopLength * 0.5) {\r\n\t\t\t\tthis._cursor.mode = this._startMode;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.mode = this._endMode;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis._cursor.mode = this._bothMode;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _findEndPoints(middle: number): Endpoints {\r\n\t\tlet start: number = Math.round(middle - this._doc.song.loopLength / 2);\r\n\t\tlet end: number = start + this._doc.song.loopLength;\r\n\t\tif (start < 0) {\r\n\t\t\tend -= start;\r\n\t\t\tstart = 0;\r\n\t\t}\r\n\t\tif (end > this._doc.song.barCount) {\r\n\t\t\tstart -= end - this._doc.song.barCount;\r\n\t\t\tend = this._doc.song.barCount;\r\n\t\t}\r\n\t\treturn { start: start, length: end - start };\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\tthis._whenMouseMoved(event);\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\t//event.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t\t//this._whenTouchMoved(event);\r\n\t\tthis._clientStartX = event.touches[0].clientX;\r\n\t\tthis._clientStartY = event.touches[0].clientY;\r\n\t\tthis._draggingHorizontally = false;\r\n\t\tthis._startedScrolling = false;\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\t//this._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\t//this._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\r\n\t\tif (!this._draggingHorizontally && !this._startedScrolling) {\r\n\t\t\tif (Math.abs(event.touches[0].clientY - this._clientStartY) > 10) {\r\n\t\t\t\tthis._startedScrolling = true;\r\n\t\t\t} else if (Math.abs(event.touches[0].clientX - this._clientStartX) > 10) {\r\n\t\t\t\tthis._draggingHorizontally = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._draggingHorizontally) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tlet oldStart: number = this._doc.song.loopStart;\r\n\t\t\tlet oldEnd: number = this._doc.song.loopStart + this._doc.song.loopLength;\r\n\t\t\tif (this._change != null && this._doc.lastChangeWas(this._change)) {\r\n\t\t\t\toldStart = this._change.oldStart;\r\n\t\t\t\toldEnd = oldStart + this._change.oldLength;\r\n\t\t\t}\r\n\r\n\t\t\tconst bar: number = this._mouseX / this._barWidth;\r\n\t\t\tlet start: number;\r\n\t\t\tlet end: number;\r\n\t\t\tlet temp: number;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\tstart = oldStart + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tend = oldEnd;\r\n\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\tif (start >= this._doc.song.barCount) start = this._doc.song.barCount;\r\n\t\t\t\tif (start == end) {\r\n\t\t\t\t\tstart = end - 1;\r\n\t\t\t\t} else if (start > end) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\tstart = oldStart;\r\n\t\t\t\tend = oldEnd + Math.round(bar - this._cursor.startBar);\r\n\t\t\t\tif (end < 0) end = 0;\r\n\t\t\t\tif (end >= this._doc.song.barCount) end = this._doc.song.barCount;\r\n\t\t\t\tif (end == start) {\r\n\t\t\t\t\tend = start + 1;\r\n\t\t\t\t} else if (end < start) {\r\n\t\t\t\t\ttemp = start;\r\n\t\t\t\t\tstart = end;\r\n\t\t\t\t\tend = temp;\r\n\t\t\t\t}\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, start, end - start);\r\n\t\t\t} else if (this._cursor.mode == this._bothMode) {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(bar);\r\n\t\t\t\tthis._change = new ChangeLoop(this._doc, oldStart, oldEnd - oldStart, endPoints.start, endPoints.length);\r\n\t\t\t}\r\n\t\t\tthis._doc.synth.jumpIntoLoop();\r\n\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead), true);\r\n\t\t\t}\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t} else {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tif (!this._startedScrolling) {\r\n\t\t\tthis._whenCursorMoved();\r\n\t\t\tthis._mouseOver = false;\r\n\t\t\tthis._whenCursorReleased(event);\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\tthis._change = null;\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tthis._highlight.style.visibility = showHighlight ? \"visible\" : \"hidden\";\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tconst radius: number = this._editorHeight / 2;\r\n\r\n\t\t\tlet highlightStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\t\tlet highlightStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\t\t\tif (this._cursor.mode == this._startMode) {\r\n\t\t\t\thighlightStop = (this._doc.song.loopStart) * this._barWidth + radius * 2;\r\n\t\t\t} else if (this._cursor.mode == this._endMode) {\r\n\t\t\t\thighlightStart = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth - radius * 2;\r\n\t\t\t} else {\r\n\t\t\t\tconst endPoints: Endpoints = this._findEndPoints(this._cursor.startBar);\r\n\t\t\t\thighlightStart = (endPoints.start) * this._barWidth;\r\n\t\t\t\thighlightStop = (endPoints.start + endPoints.length) * this._barWidth;\r\n\t\t\t}\r\n\r\n\t\t\tthis._highlight.setAttribute(\"d\",\r\n\t\t\t\t`M ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`L ${highlightStop - radius} ${4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStop - radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`L ${highlightStart + radius} ${this._editorHeight - 4} ` +\r\n\t\t\t\t`A ${radius - 4} ${radius - 4} ${0} ${0} ${1} ${highlightStart + radius} ${4} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\r\n\t\tconst radius: number = this._editorHeight / 2;\r\n\t\tconst loopStart: number = (this._doc.song.loopStart) * this._barWidth;\r\n\t\tconst loopStop: number = (this._doc.song.loopStart + this._doc.song.loopLength) * this._barWidth;\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t}\r\n\r\n\t\tif (this._renderedLoopStart != loopStart || this._renderedLoopStop != loopStop) {\r\n\t\t\tthis._renderedLoopStart = loopStart;\r\n\t\t\tthis._renderedLoopStop = loopStop;\r\n\t\t\tthis._loop.setAttribute(\"d\",\r\n\t\t\t\t`M ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`L ${loopStop - radius} ${2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStop - radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`L ${loopStart + radius} ${this._editorHeight - 2} ` +\r\n\t\t\t\t`A ${radius - 2} ${radius - 2} ${0} ${0} ${1} ${loopStart + radius} ${2} ` +\r\n\t\t\t\t`z`\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeMoveNotesSideways } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class MoveNotesSidewaysPrompt implements Prompt {\r\n\tprivate readonly _beatsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"0.01\", value: \"0\" });\r\n\tprivate readonly _conversionStrategySelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"overflow\" }, \"Overflow notes across bars.\"),\r\n\t\toption({ value: \"wrapAround\" }, \"Wrap notes around within bars.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Move Notes Sideways\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"text-align: right;\" },\r\n\t\t\t\t\"Beats to move:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Negative is left, positive is right)\"),\r\n\t\t\t),\r\n\t\t\tthis._beatsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._conversionStrategySelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._beatsStepper.min = (-this._doc.song.beatsPerBar) + \"\";\r\n\t\tthis._beatsStepper.max = this._doc.song.beatsPerBar + \"\";\r\n\r\n\t\tconst lastStrategy: string | null = window.localStorage.getItem(\"moveNotesSidewaysStrategy\");\r\n\t\tif (lastStrategy != null) {\r\n\t\t\tthis._conversionStrategySelect.value = lastStrategy;\r\n\t\t}\r\n\r\n\t\tthis._beatsStepper.select();\r\n\t\tsetTimeout(() => this._beatsStepper.focus(), 100); // Add 100ms because the key macro (W) gets captured by the stepper...\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.addEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._beatsStepper.removeEventListener(\"blur\", MoveNotesSidewaysPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tlet value: number = +input.value;\r\n\t\tvalue = Math.round(value * Config.partsPerBeat) / Config.partsPerBeat;\r\n\t\tvalue = Math.round(value * 100) / 100;\r\n\t\tinput.value = Math.max(+input.min, Math.min(+input.max, value)) + \"\";\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"moveNotesSidewaysStrategy\", this._conversionStrategySelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(new ChangeMoveNotesSideways(this._doc, +this._beatsStepper.value, this._conversionStrategySelect.value), true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { InputBox } from \"./HTMLWrapper\";\r\nimport { ChangeChannelOrder, ChangeChannelName, ChangeChannelCount } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongEditor } from \"./SongEditor\";\r\n\r\n//namespace beepbox {\r\nexport class MuteEditor {\r\n\tprivate readonly _buttons: HTMLDivElement[] = [];\r\n\tprivate readonly _channelCounts: HTMLDivElement[] = [];\r\n\tprivate readonly _channelNameDisplay: HTMLDivElement = HTML.div({ style: `background-color: ${ColorConfig.uiWidgetFocus}; white-space:nowrap; display: none; transform:translate(20px); width: auto; pointer-events: none; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\");\r\n\tpublic readonly _channelNameInput: InputBox = new InputBox(HTML.input({ style: `color: ${ColorConfig.primaryText}; background-color: ${ColorConfig.uiWidgetFocus}; margin-top: -2px; display: none; width: 6em; position: absolute; border-radius: 0.2em; z-index: 2;`, \"color\": ColorConfig.primaryText }, \"\"), this._doc, (oldValue: string, newValue: string) => new ChangeChannelName(this._doc, oldValue, newValue));\r\n\r\n\tprivate readonly _channelDropDown: HTMLSelectElement = HTML.select({ style: \"width: 0px; left: 19px; height: 19px; position:absolute; opacity:0\" },\r\n\r\n\t\tHTML.option({ value: \"rename\" }, \"Rename...\"),\r\n\t\tHTML.option({ value: \"chnUp\" }, \"Move Channel Up\"),\r\n\t\tHTML.option({ value: \"chnDown\" }, \"Move Channel Down\"),\r\n\t\tHTML.option({ value: \"chnMute\" }, \"Mute Channel\"),\r\n\t\tHTML.option({ value: \"chnSolo\" }, \"Solo Channel\"),\r\n\t\tHTML.option({ value: \"chnInsert\" }, \"Insert Channel Below\"),\r\n\t\tHTML.option({ value: \"chnDelete\" }, \"Delete This Channel\"),\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"muteEditor\", style: \"position: relative; margin-top: \" + Config.barEditorHeight + \"px;\" }, this._channelNameDisplay, this._channelNameInput.input, this._channelDropDown);\r\n\r\n\tprivate _editorHeight: number = 128;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedPitchChannels: number = 0;\r\n\tprivate _renderedNoiseChannels: number = 0;\r\n\tprivate _renderedModChannels: number = 0;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _channelDropDownChannel: number = 0;\r\n\tprivate _channelDropDownOpen: boolean = false;\r\n\tprivate _channelDropDownLastState: boolean = false;\r\n\r\n\tconstructor(private _doc: SongDocument, private _editor: SongEditor) {\r\n\t\tthis.container.addEventListener(\"click\", this._onClick);\r\n\t\tthis.container.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tthis.container.addEventListener(\"mouseleave\", this._onMouseLeave);\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t\tthis._channelDropDown.addEventListener(\"change\", this._channelDropDownHandler);\r\n\t\tthis._channelDropDown.addEventListener(\"mousedown\", this._channelDropDownGetOpenedPosition);\r\n\t\tthis._channelDropDown.addEventListener(\"blur\", this._channelDropDownBlur);\r\n\t\tthis._channelDropDown.addEventListener(\"click\", this._channelDropDownClick);\r\n\r\n\t\tthis._channelNameInput.input.addEventListener(\"change\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"blur\", this._channelNameInputHide);\r\n\t\tthis._channelNameInput.input.addEventListener(\"mousedown\", this._channelNameInputClicked);\r\n\t\tthis._channelNameInput.input.addEventListener(\"input\", this._channelNameInputWhenInput);\r\n\t}\r\n\r\n\tprivate _channelNameInputWhenInput = (): void => {\r\n\t\tlet newValue = this._channelNameInput.input.value;\r\n\t\tif (newValue.length > 15) {\r\n\t\t\tthis._channelNameInput.input.value = newValue.substring(0, 15);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelNameInputClicked = (event: MouseEvent): void => {\r\n\t\tevent.stopPropagation();\r\n\t}\r\n\r\n\tprivate _channelNameInputHide = (): void => {\r\n\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t}\r\n\r\n\tprivate _channelDropDownClick = (event: MouseEvent): void => {\r\n\t\tthis._channelDropDownOpen = !this._channelDropDownLastState;\r\n\t\tthis._channelDropDownGetOpenedPosition(event);\r\n\t\t//console.log(\"click \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownBlur = (): void => {\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t//console.log(\"blur \" + this._channelDropDownOpen);\r\n\t}\r\n\r\n\tprivate _channelDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\r\n\t\tthis._channelDropDownLastState = this._channelDropDownOpen;\r\n\r\n\t\tthis._channelDropDownChannel = Math.floor(Math.min(this._renderedChannelCount, Math.max(0, parseInt(this._channelDropDown.style.getPropertyValue(\"top\")) / this._renderedChannelHeight)));\r\n\t\tthis._doc.muteEditorChannel = this._channelDropDownChannel;\r\n\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\r\n\t\t// Check if channel is at limit, in which case another can't be inserted\r\n\t\tif ((this._channelDropDownChannel < this._doc.song.pitchChannelCount && this._doc.song.pitchChannelCount == Config.pitchChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.noiseChannelCount == Config.noiseChannelCountMax)\r\n\t\t\t|| (this._channelDropDownChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && this._doc.song.modChannelCount == Config.modChannelCountMax)) {\r\n\t\t\tthis._channelDropDown.options[5].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[5].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also check if a channel is eligible to move up or down based on the song's channel settings.\r\n\t\tif (this._channelDropDownChannel == 0 || this._channelDropDownChannel == this._doc.song.pitchChannelCount || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._channelDropDown.options[1].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[1].disabled = false;\r\n\t\t}\r\n\t\tif (this._channelDropDownChannel == this._doc.song.pitchChannelCount - 1 || this._channelDropDownChannel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._channelDropDownChannel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\tthis._channelDropDown.options[2].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[2].disabled = false;\r\n\t\t}\r\n\r\n\t\t// Also, can't delete the last pitch channel.\r\n\t\tif (this._doc.song.pitchChannelCount == 1 && this._channelDropDownChannel == 0) {\r\n\t\t\tthis._channelDropDown.options[6].disabled = true;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._channelDropDown.options[6].disabled = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _channelDropDownHandler = (event: Event): void => {\r\n\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\tthis._channelDropDownOpen = false;\r\n\t\tevent.stopPropagation();\r\n\t\t//console.log(\"handler \" + this._channelDropDownOpen);\r\n\r\n\t\tswitch (this._channelDropDown.value) {\r\n\t\t\tcase \"rename\":\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"display\", \"\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"transform\", this._channelNameDisplay.style.getPropertyValue(\"transform\"));\r\n\t\t\t\tif (this._channelNameDisplay.textContent != null) {\r\n\t\t\t\t\tthis._channelNameInput.input.value = this._channelNameDisplay.textContent;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._channelNameInput.input.value = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tthis._channelNameInput.input.select();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnUp\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel - 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnDown\":\r\n\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._channelDropDownChannel, this._channelDropDownChannel + 1));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnMute\":\r\n\t\t\t\tthis._doc.song.channels[this._channelDropDownChannel].muted = !this._doc.song.channels[this._channelDropDownChannel].muted;\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"chnSolo\": {\r\n\t\t\t\t// Check for any channel not matching solo pattern\r\n\t\t\t\tlet shouldSolo: boolean = false;\r\n\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\tif (this._doc.song.channels[channel].muted == (channel == this._channelDropDownChannel)) {\r\n\t\t\t\t\t\tshouldSolo = true;\r\n\t\t\t\t\t\tchannel = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (shouldSolo) {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = (channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.render();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnInsert\": {\r\n\t\t\t\t// Add a channel at the end, then swap it in.\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tlet swapIndex: number;\r\n\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tnewPitchChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tnewNoiseChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnewModChannelCount++;\r\n\t\t\t\t\tswapIndex = newPitchChannelCount + newNoiseChannelCount + newModChannelCount;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount));\r\n\r\n\t\t\t\tfor (let channel: number = swapIndex - 1; channel > this._channelDropDownChannel + 1; channel--) {\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel - 1, channel), true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tcase \"chnDelete\": {\r\n\t\t\t\tlet newPitchChannelCount: number = this._doc.song.pitchChannelCount;\r\n\t\t\t\tlet newNoiseChannelCount: number = this._doc.song.noiseChannelCount;\r\n\t\t\t\tlet newModChannelCount: number = this._doc.song.modChannelCount;\r\n\t\t\t\tif (this._channelDropDownChannel < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t// Removing pitch channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewPitchChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (this._channelDropDownChannel >= this._doc.song.pitchChannelCount && this._channelDropDownChannel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t// Removing noise channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewNoiseChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// Removing mod channel, swap to the end since ChangeChannelCount expects a channel array of the previous size.\r\n\t\t\t\t\tnewModChannelCount--;\r\n\t\t\t\t\tfor (let channel: number = this._channelDropDownChannel; channel < newPitchChannelCount + newNoiseChannelCount + newModChannelCount; channel++) {\r\n\t\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, channel, channel + 1), channel != this._channelDropDownChannel);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(new ChangeChannelCount(this._doc, newPitchChannelCount, newNoiseChannelCount, newModChannelCount), true);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this._channelDropDown.value != \"rename\")\r\n\t\t\tthis._editor.refocusStage();\r\n\r\n\t\tthis._channelDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _onClick = (event: MouseEvent): void => {\r\n\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) return;\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos < 21.0) {\r\n\t\t\tthis._doc.song.channels[index].muted = !this._doc.song.channels[index].muted;\r\n\t\t}\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tconst index = this._buttons.indexOf(<HTMLDivElement>event.target);\r\n\t\tif (index == -1) {\r\n\t\t\tif (!this._channelDropDownOpen && event.target != this._channelNameDisplay && event.target != this._channelDropDown) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet xPos: number = event.clientX - this._buttons[0].getBoundingClientRect().left;\r\n\t\tif (xPos >= 21.0) {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\t// Mouse over chn. number\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"\");\r\n\t\t\t\tvar height = this._doc.getChannelHeight();\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"transform\", \"translate(20px, \" + (height / 4 + height * index) + \"px)\");\r\n\r\n\t\t\t\tif (this._doc.song.channels[index].name != \"\") {\r\n\t\t\t\t\tthis._channelNameDisplay.textContent = this._doc.song.channels[index].name;\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (index < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Pitch \" + (index + 1);\r\n\t\t\t\t\t} else if (index < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Noise \" + (index - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._channelNameDisplay.textContent = \"Mod \" + (index - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// The name set will only show up when this becomes visible, e.g. when the dropdown is opened.\r\n\t\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._channelDropDown.style.top = (Config.barEditorHeight - 2 + index * this._renderedChannelHeight) + \"px\";\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"15px\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!this._channelDropDownOpen) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseLeave = (event: MouseEvent): void => {\r\n\t\tif (!this._channelDropDownOpen) {\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis._channelDropDown.style.setProperty(\"width\", \"0px\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic onKeyUp(event: KeyboardEvent): void {\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // esc\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter\r\n\t\t\t\tthis._channelDropDownOpen = false;\r\n\t\t\t\t//console.log(\"close\");\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tif (!this._doc.enableChannelMuting) return;\r\n\r\n\t\tconst channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\r\n\t\t\t\tconst channelCountText: HTMLDivElement = HTML.div({ class: \"noSelection muteButtonText\", style: \"display: table-cell; vertical-align: middle; text-align: center; -webkit-user-select: none; -webkit-touch-callout: none; -moz-user-select: none; -ms-user-select: none; user-select: none; pointer-events: none; width: 12px; height: 20px; transform: translate(0px, 1px);\" });\r\n\t\t\t\tconst muteButton: HTMLDivElement = HTML.div({ class: \"mute-button\", style: `display: block; pointer-events: none; width: 16px; height: 20px; transform: translate(2px, 1px);` });\r\n\r\n\t\t\t\tconst muteContainer: HTMLDivElement = HTML.div({ style: \"align-items: center; height: 20px; margin: 0px; display: table; flex-direction: row; justify-content: space-between;\" }, [\r\n\t\t\t\t\tmuteButton,\r\n\t\t\t\t\tchannelCountText,\r\n\t\t\t\t]);\r\n\t\t\t\tthis.container.appendChild(muteContainer);\r\n\t\t\t\tthis._buttons[y] = muteContainer;\r\n\t\t\t\tthis._channelCounts[y] = channelCountText;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tthis.container.removeChild(this._buttons[y]);\r\n\t\t\t}\r\n\r\n\t\t\tthis._buttons.length = this._doc.song.getChannelCount();\r\n\t\t}\r\n\r\n\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\tif (this._doc.song.channels[y].muted) {\r\n\t\t\t\tthis._buttons[y].children[0].classList.add(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitchDim;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoiseDim;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgModDim;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._buttons[y].children[0].classList.remove(\"muted\");\r\n\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgPitch;\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount)\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgNoise;\r\n\t\t\t\telse\r\n\t\t\t\t\tthis._channelCounts[y].style.color = ColorConfig.trackEditorBgMod;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._buttons[y].style.marginTop = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t\tthis._buttons[y].style.marginBottom = ((channelHeight - 20) / 2) + \"px\";\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.remove(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._buttons[y].children[0].classList.add(\"modMute\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedModChannels != this._doc.song.modChannelCount || this._renderedPitchChannels != this._doc.song.pitchChannelCount || this._renderedNoiseChannels != this._doc.song.noiseChannelCount) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tif (y < this._doc.song.pitchChannelCount) {\r\n\t\t\t\t\tlet val: number = (y + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse if (y < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet val: number = (y - this._doc.song.pitchChannelCount - this._doc.song.noiseChannelCount + 1);\r\n\t\t\t\t\tthis._channelCounts[y].textContent = val + \"\";\r\n\t\t\t\t\tthis._channelCounts[y].style.fontSize = (val >= 10) ? \"xx-small\" : \"inherit\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._renderedPitchChannels = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannels = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannels = this._doc.song.modChannelCount;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tthis._editorHeight = Config.barEditorHeight + this._doc.song.getChannelCount() * channelHeight;\r\n\t\t\tthis._channelNameDisplay.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.container.style.height = this._editorHeight + \"px\";\r\n\r\n\t\t\tif (this._renderedChannelHeight < 27) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-4px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-4px\");\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._renderedChannelHeight < 30) {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"-1px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-3px\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._channelNameDisplay.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelDropDown.style.setProperty(\"margin-top\", \"0px\");\r\n\t\t\t\tthis._channelNameInput.input.style.setProperty(\"margin-top\", \"-2px\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeOctave } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Piano } from \"./Piano\";\r\n\r\n//namespace beepbox {\r\nexport class OctaveScrollBar {\r\n\tprivate readonly _editorWidth: number = 20;\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _notchHeight: number = 4.0;\r\n\tprivate readonly _octaveCount: number = Config.pitchOctaves;\r\n\tprivate readonly _octaveHeight: number = (this._editorHeight - this._notchHeight) / this._octaveCount;\r\n\tprivate _barHeight: number = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\tprivate readonly _handle: SVGRectElement = SVG.rect({ fill: ColorConfig.uiWidgetBackground, x: 2, y: 0, width: this._editorWidth - 4, height: this._barHeight });\r\n\tprivate readonly _handleHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 0, width: this._editorWidth - 2, height: this._barHeight });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.hoverPreview, \"pointer-events\": \"none\" });\r\n\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: \"background-color: ${ColorConfig.editorBackground}; touch-action: pan-x; position: absolute;\", width: this._editorWidth, height: \"100%\", viewBox: \"0 0 20 \" + this._editorHeight, preserveAspectRatio: \"none\" });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ id: \"octaveScrollBarContainer\", style: \"width: 20px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0;\" }, this._svg);\r\n\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _dragging: boolean = false;\r\n\tprivate _dragStart: number;\r\n\tprivate _barBottom: number;\r\n\tprivate _renderedBarBottom: number = -1;\r\n\tprivate _renderedBarHeight: number = -1;\r\n\tprivate _change: ChangeOctave | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument, private _piano: Piano) {\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\r\n\t\tthis._svg.appendChild(this._handle);\r\n\r\n\t\t// notches:\r\n\t\tfor (let i: number = 0; i <= this._octaveCount; i++) {\r\n\t\t\tthis._svg.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: 0, y: i * this._octaveHeight, width: this._editorWidth, height: this._notchHeight }));\r\n\t\t}\r\n\r\n\t\tthis._svg.appendChild(this._handleHighlight);\r\n\t\tthis._svg.appendChild(this._upHighlight);\r\n\t\tthis._svg.appendChild(this._downHighlight);\r\n\r\n\t\tconst center: number = this._editorWidth * 0.5;\r\n\t\tconst base: number = 20;\r\n\t\tconst tip: number = 9;\r\n\t\tconst arrowWidth: number = 6;\r\n\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${tip} L ${center + arrowWidth} ${base} L ${center - arrowWidth} ${base} z`);\r\n\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${this._editorHeight - tip} L ${center + arrowWidth} ${this._editorHeight - base} L ${center - arrowWidth} ${this._editorHeight - base} z`);\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tthis._updatePreview();\r\n\r\n\t\tif (this._mouseY >= this._barBottom - this._barHeight && this._mouseY <= this._barBottom) {\r\n\t\t\tthis._dragging = true;\r\n\t\t\tthis._change = null;\r\n\t\t\tthis._dragStart = this._mouseY;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) return;\r\n\t\tif (this._dragging) {\r\n\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\tconst continuingProspectiveChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\tconst oldValue: number = continuingProspectiveChange ? this._change!.oldValue : currentOctave;\r\n\r\n\t\t\tlet octave: number = currentOctave;\r\n\t\t\twhile (this._mouseY - this._dragStart < -this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\toctave++;\r\n\t\t\t\t\tthis._dragStart -= this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (this._mouseY - this._dragStart > this._octaveHeight * 0.5) {\r\n\t\t\t\tif (octave > 0) {\r\n\t\t\t\t\toctave--;\r\n\t\t\t\t\tthis._dragStart += this._octaveHeight;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, octave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver) this._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel) && !this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDown) {\r\n\t\t\tif (this._dragging) {\r\n\t\t\t\tif (this._change != null) this._doc.record(this._change);\r\n\t\t\t} else {\r\n\t\t\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._change);\r\n\t\t\t\tconst oldValue: number = canReplaceLastChange ? this._change!.oldValue : this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\tconst currentOctave: number = this._doc.song.channels[this._doc.channel].octave;\r\n\r\n\t\t\t\tif (this._mouseY < this._barBottom - this._barHeight * 0.5) {\r\n\t\t\t\t\tif (currentOctave < this._doc.scrollableOctaves) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave + 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (currentOctave > 0) {\r\n\t\t\t\t\t\tthis._change = new ChangeOctave(this._doc, oldValue, currentOctave - 1);\r\n\t\t\t\t\t\tthis._doc.record(this._change, canReplaceLastChange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._dragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tconst showHighlight: boolean = this._mouseOver && !this._mouseDown;\r\n\t\tlet showUpHighlight: boolean = false;\r\n\t\tlet showDownHighlight: boolean = false;\r\n\t\tlet showHandleHighlight: boolean = false;\r\n\r\n\t\tif (showHighlight) {\r\n\t\t\tif (this._mouseY < this._barBottom - this._barHeight) {\r\n\t\t\t\tshowUpHighlight = true;\r\n\t\t\t} else if (this._mouseY > this._barBottom) {\r\n\t\t\t\tshowDownHighlight = true;\r\n\t\t\t} else {\r\n\t\t\t\tshowHandleHighlight = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._upHighlight.style.visibility = showUpHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._downHighlight.style.visibility = showDownHighlight ? \"inherit\" : \"hidden\";\r\n\t\tthis._handleHighlight.style.visibility = showHandleHighlight ? \"inherit\" : \"hidden\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tthis._barBottom = this._editorHeight - (this._octaveHeight * this._doc.song.channels[this._doc.channel].octave);\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render(): void {\r\n\t\t// Re-calculate bar height\r\n\t\tthis._barHeight = (this._octaveHeight * this._doc.windowOctaves + this._notchHeight);\r\n\r\n\t\tthis._svg.style.visibility = (this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) ? \"hidden\" : \"visible\";\r\n\t\tif (this._renderedBarBottom != this._barBottom || this._renderedBarHeight != this._barHeight) {\r\n\t\t\tthis._renderedBarBottom = this._barBottom;\r\n\t\t\tthis._renderedBarHeight = this._barHeight;\r\n\t\t\tthis._handle.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handleHighlight.setAttribute(\"height\", \"\" + this._barHeight);\r\n\t\t\tthis._handle.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\t\t\tthis._handleHighlight.setAttribute(\"y\", \"\" + (this._barBottom - this._barHeight));\r\n\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Chord, Config } from \"../synth/SynthConfig\";\r\nimport { NotePin, Note, makeNotePin, Pattern, Instrument, ModSetting } from \"../synth/synth\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ChangeSequence, UndoableChange } from \"./Change\";\r\nimport { ChangeChannelBar, ChangeDragSelectedNotes, ChangeEnsurePatternExists, ChangeNoteTruncate, ChangeNoteAdded, ChangePatternSelection, ChangePinTime, ChangeVolumeBend, ChangePitchBend, ChangePitchAdded } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nfunction makeEmptyReplacementElement<T extends Node>(node: T): T {\r\n\tconst clone: T = <T>node.cloneNode(false);\r\n\tnode.parentNode!.replaceChild(clone, node);\r\n\treturn clone;\r\n}\r\n\r\nclass PatternCursor {\r\n\tpublic valid: boolean = false;\r\n\tpublic prevNote: Note | null = null;\r\n\tpublic curNote: Note | null = null;\r\n\tpublic nextNote: Note | null = null;\r\n\tpublic pitch: number = 0;\r\n\tpublic pitchIndex: number = -1;\r\n\tpublic curIndex: number = 0;\r\n\tpublic start: number = 0;\r\n\tpublic end: number = 0;\r\n\tpublic part: number = 0;\r\n\tpublic exactPart: number = 0;\r\n\tpublic nearPinIndex: number = 0;\r\n\tpublic pins: NotePin[] = [];\r\n}\r\n\r\nexport class PatternEditor {\r\n\tpublic controlMode: boolean = false;\r\n\tpublic shiftMode: boolean = false;\r\n\tprivate readonly _svgNoteBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorNoteBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgDrumBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorDrumBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgModBackground: SVGPatternElement = SVG.pattern({ id: \"patternEditorModBackground\" + this._barOffset, x: \"0\", y: \"0\", patternUnits: \"userSpaceOnUse\" });\r\n\tprivate readonly _svgBackground: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", \"pointer-events\": \"none\", fill: \"url(#patternEditorNoteBackground\" + this._barOffset + \")\" });\r\n\tprivate _svgNoteContainer: SVGSVGElement = SVG.svg();\r\n\tprivate readonly _svgPlayhead: SVGRectElement = SVG.rect({ x: \"0\", y: \"0\", width: \"4\", fill: ColorConfig.playhead, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\" });\r\n\tprivate readonly _svgPreview: SVGPathElement = SVG.path({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": \"2\", \"pointer-events\": \"none\" });\r\n\tpublic modDragValueLabel: HTMLDivElement = HTML.div({ width: \"90\", \"text-anchor\": \"start\", contenteditable: \"true\", style: \"display: flex, justify-content: center; align-items:center; position:absolute; pointer-events: none;\", \"dominant-baseline\": \"central\", });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; position: absolute;`, width: \"100%\", height: \"100%\" },\r\n\t\tSVG.defs(\r\n\t\t\tthis._svgNoteBackground,\r\n\t\t\tthis._svgDrumBackground,\r\n\t\t\tthis._svgModBackground,\r\n\t\t),\r\n\t\tthis._svgBackground,\r\n\t\tthis._selectionRect,\r\n\t\tthis._svgNoteContainer,\r\n\t\tthis._svgPreview,\r\n\t\tthis._svgPlayhead,\r\n\t);\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"height: 100%; overflow:hidden; position: relative; flex-grow: 1;\" }, this._svg, this.modDragValueLabel);\r\n\r\n\tprivate readonly _defaultModBorder: number = 34;\r\n\tprivate readonly _backgroundPitchRows: SVGRectElement[] = [];\r\n\tprivate readonly _backgroundDrumRow: SVGRectElement = SVG.rect();\r\n\tprivate readonly _backgroundModRow: SVGRectElement = SVG.rect();\r\n\r\n\tprivate _editorWidth: number;\r\n\r\n\tprivate _modDragValueLabelLeft: number = 0;\r\n\tprivate _modDragValueLabelTop: number = 0;\r\n\tprivate _modDragValueLabelWidth: number = 0;\r\n\tpublic editingModLabel: boolean = false;\r\n\tprivate _modDragStartValue: number = 0;\r\n\tprivate _modDragPin: NotePin;\r\n\tprivate _modDragNote: Note;\r\n\tprivate _modDragSetting: ModSetting;\r\n\tprivate _modDragLowerBound: number = 0;\r\n\tprivate _modDragUpperBound: number = 6;\r\n\r\n\tprivate _editorHeight: number;\r\n\tprivate _partWidth: number;\r\n\tprivate _pitchHeight: number = -1;\r\n\tprivate _pitchBorder: number;\r\n\tprivate _pitchCount: number;\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mouseDragging: boolean = false;\r\n\tprivate _mouseHorizontal: boolean = false;\r\n\tprivate _usingTouch: boolean = false;\r\n\tprivate _copiedPinChannels: NotePin[][] = [];\r\n\tprivate _copiedPins: NotePin[];\r\n\tprivate _mouseXStart: number = 0;\r\n\tprivate _mouseYStart: number = 0;\r\n\tprivate _touchTime: number = 0;\r\n\tprivate _shiftHeld: boolean = false;\r\n\tprivate _dragConfirmed: boolean = false;\r\n\tprivate _draggingStartOfSelection: boolean = false;\r\n\tprivate _draggingEndOfSelection: boolean = false;\r\n\tprivate _draggingSelectionContents: boolean = false;\r\n\tprivate _dragTime: number = 0;\r\n\tprivate _dragPitch: number = 0;\r\n\tprivate _dragVolume: number = 0;\r\n\tprivate _dragVisible: boolean = false;\r\n\tprivate _dragChange: UndoableChange | null = null;\r\n\tprivate _changePatternSelection: UndoableChange | null = null;\r\n\tprivate _lastChangeWasPatternSelection: boolean = false;\r\n\tprivate _cursor: PatternCursor = new PatternCursor();\r\n\tprivate _stashCursorPinVols: number[][] = [];\r\n\tprivate _pattern: Pattern | null = null;\r\n\tprivate _playheadX: number = 0.0;\r\n\tprivate _octaveOffset: number = 0;\r\n\tprivate _renderedWidth: number = -1;\r\n\tprivate _renderedHeight: number = -1;\r\n\tprivate _renderedBeatWidth: number = -1;\r\n\tprivate _renderedPitchHeight: number = -1;\r\n\tprivate _renderedFifths: boolean = false;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedRhythm: number = -1;\r\n\tprivate _renderedPitchChannelCount: number = -1;\r\n\tprivate _renderedNoiseChannelCount: number = -1;\r\n\tprivate _renderedModChannelCount: number = -1;\r\n\tprivate _followPlayheadBar: number = -1;\r\n\r\n\tconstructor(private _doc: SongDocument, private _interactive: boolean, private _barOffset: number) {\r\n\t\tfor (let i: number = 0; i < Config.pitchesPerOctave; i++) {\r\n\t\t\tconst rectangle: SVGRectElement = SVG.rect();\r\n\t\t\trectangle.setAttribute(\"x\", \"1\");\r\n\t\t\trectangle.setAttribute(\"fill\", (i == 0) ? ColorConfig.tonic : ColorConfig.pitchBackground);\r\n\t\t\tthis._svgNoteBackground.appendChild(rectangle);\r\n\t\t\tthis._backgroundPitchRows[i] = rectangle;\r\n\t\t}\r\n\r\n\t\tthis._backgroundDrumRow.setAttribute(\"x\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"y\", \"1\");\r\n\t\tthis._backgroundDrumRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgDrumBackground.appendChild(this._backgroundDrumRow);\r\n\t\tthis._backgroundModRow.setAttribute(\"fill\", ColorConfig.pitchBackground);\r\n\t\tthis._svgModBackground.appendChild(this._backgroundModRow);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\t\tthis._svg.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\t\tthis._svg.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\t\tthis._svg.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\t\tthis._svg.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\r\n\t\t\tthis.modDragValueLabel.addEventListener(\"input\", this._validateModDragLabelInput);\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.style.display = \"none\";\r\n\t\t\tthis._svg.appendChild(SVG.rect({ x: 0, y: 0, width: 10000, height: 10000, fill: ColorConfig.editorBackground, style: \"opacity: 0.5;\" }));\r\n\t\t}\r\n\r\n\t\tthis.resetCopiedPins();\r\n\t}\r\n\r\n\tprivate _validateModDragLabelInput = (event: Event): void => {\r\n\t\tconst label: HTMLDivElement = <HTMLDivElement>event.target;\r\n\r\n\t\t// Special case - when user is typing a number between zero and min, allow it (the alternative is quite annoying, when min is nonzero)\r\n\t\tlet converted: number = Number(label.innerText);\r\n\t\tif (!isNaN(converted) && converted >= 0 && converted < this._modDragLowerBound)\r\n\t\t\treturn;\r\n\r\n\t\t// Another special case - allow \"\" e.g. the empty string and a single negative sign, but don't do anything about it.\r\n\t\tif (label.innerText != \"\" && label.innerText != \"-\") {\r\n\t\t\t// Force NaN results to be 0\r\n\t\t\tif (isNaN(converted)) {\r\n\t\t\t\tconverted = this._modDragLowerBound;\r\n\t\t\t\tlabel.innerText = \"\" + this._modDragLowerBound;\r\n\t\t\t}\r\n\r\n\t\t\tlet presValue: number = Math.floor(Math.max(Number(this._modDragLowerBound), Math.min(Number(this._modDragUpperBound), converted)));\r\n\t\t\tif (label.innerText != presValue + \"\")\r\n\t\t\t\tlabel.innerText = presValue + \"\";\r\n\r\n\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._doc.song.realToModValue(presValue, this._modDragSetting), this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getMaxDivision(): number {\r\n\t\tconst rhythmStepsPerBeat: number = Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t\tif (rhythmStepsPerBeat % 4 == 0) {\r\n\t\t\t// Beat is divisible by 2 (and 4).\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t} else if (rhythmStepsPerBeat % 3 == 0) {\r\n\t\t\t// Beat is divisible by 3.\r\n\t\t\treturn Config.partsPerBeat / 3;\r\n\t\t} else if (rhythmStepsPerBeat % 2 == 0) {\r\n\t\t\t// Beat is divisible by 2.\r\n\t\t\treturn Config.partsPerBeat / 2;\r\n\t\t}\r\n\t\treturn Config.partsPerBeat;\r\n\t}\r\n\r\n\tprivate _getMinDivision(): number {\r\n\t\treturn Config.partsPerBeat / Config.rhythms[this._doc.song.rhythm].stepsPerBeat;\r\n\t}\r\n\r\n\tprivate _snapToMinDivision(input: number): number {\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\treturn Math.floor(input / minDivision) * minDivision;\r\n\t}\r\n\r\n\tprivate _updateCursorStatus(): void {\r\n\t\tthis._cursor = new PatternCursor();\r\n\t\tif (this._mouseX < 0 || this._mouseX > this._editorWidth || this._mouseY < 0 || this._mouseY > this._editorHeight || this._pitchHeight <= 0) return;\r\n\r\n\t\tconst minDivision: number = this._getMinDivision();\r\n\t\tthis._cursor.exactPart = this._mouseX / this._partWidth;\r\n\t\tthis._cursor.part =\r\n\t\t\tMath.floor(\r\n\t\t\t\tMath.max(0,\r\n\t\t\t\t\tMath.min(this._doc.song.beatsPerBar * Config.partsPerBeat - minDivision, this._cursor.exactPart)\r\n\t\t\t\t)\r\n\t\t\t\t/ minDivision) * minDivision;\r\n\r\n\t\tlet foundNote: boolean = false;\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tif (note.end <= this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!foundNote)\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.prevNote = note;\r\n\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start <= this._cursor.exactPart && note.end > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t\t\tfoundNote = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// Only increment index if the sought note has been found... or if this note truly starts before the other\r\n\t\t\t\t\t\telse if (!foundNote || (this._cursor.curNote != null && note.start < this._cursor.curNote.start))\r\n\t\t\t\t\t\t\tthis._cursor.curIndex++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._cursor.curNote = note;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (note.start > this._cursor.exactPart) {\r\n\t\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tif (note.pitches[0] == Math.floor(this._findMousePitch(this._mouseY))) {\r\n\t\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.nextNote = note;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && !this.editingModLabel) {\r\n\r\n\t\t\t\tif (this._pattern.notes[this._cursor.curIndex] != null && this._cursor.curNote != null) {\r\n\r\n\t\t\t\t\tlet pinIdx: number = 0;\r\n\r\n\t\t\t\t\twhile (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time < this._cursor.exactPart && pinIdx < this._cursor.curNote.pins.length) {\r\n\t\t\t\t\t\tpinIdx++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Decide if the previous pin is closer\r\n\t\t\t\t\tif (pinIdx > 0) {\r\n\t\t\t\t\t\tif (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time - this._cursor.exactPart > this._cursor.exactPart - (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx - 1].time)) {\r\n\t\t\t\t\t\t\tpinIdx--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#666688\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\r\n\t\t\t\t\tlet setting: ModSetting = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - this._cursor.curNote.pitches[0]];\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._cursor.curNote.pins[pinIdx].volume, setting);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._cursor.curNote.start + this._cursor.curNote.pins[pinIdx].time) - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(this._cursor.curNote.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis._modDragStartValue = this._cursor.curNote.pins[pinIdx].volume;\r\n\t\t\t\t\tthis._modDragNote = this._cursor.curNote;\r\n\t\t\t\t\tthis._modDragPin = this._cursor.curNote.pins[pinIdx];\r\n\t\t\t\t\tthis._modDragLowerBound = this._doc.song.modValueToReal(0, setting);\r\n\t\t\t\t\tthis._modDragUpperBound = this._doc.song.modValueToReal(this._doc.song.mstMaxVols.get(setting) as number, setting);\r\n\t\t\t\t\tthis._modDragSetting = setting;\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (!this.editingModLabel) {\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t}\r\n\r\n\t\tlet mousePitch: number = this._findMousePitch(this._mouseY);\r\n\r\n\t\tif (this._cursor.curNote != null) {\r\n\r\n\t\t\tthis._cursor.start = this._cursor.curNote.start;\r\n\t\t\tthis._cursor.end = this._cursor.curNote.end;\r\n\t\t\tthis._cursor.pins = this._cursor.curNote.pins;\r\n\r\n\t\t\tlet interval: number = 0;\r\n\t\t\tlet error: number = 0;\r\n\t\t\tlet prevPin: NotePin;\r\n\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\tfor (let j: number = 1; j < this._cursor.curNote.pins.length; j++) {\r\n\t\t\t\tprevPin = nextPin;\r\n\t\t\t\tnextPin = this._cursor.curNote.pins[j];\r\n\t\t\t\tconst leftSide: number = this._partWidth * (this._cursor.curNote.start + prevPin.time);\r\n\t\t\t\tconst rightSide: number = this._partWidth * (this._cursor.curNote.start + nextPin.time);\r\n\t\t\t\tif (this._mouseX > rightSide) continue;\r\n\t\t\t\tif (this._mouseX < leftSide) throw new Error();\r\n\t\t\t\tconst intervalRatio: number = (this._mouseX - leftSide) / (rightSide - leftSide);\r\n\t\t\t\tconst arc: number = Math.sqrt(1.0 / Math.sqrt(4.0) - Math.pow(intervalRatio - 0.5, 2.0)) - 0.5;\r\n\t\t\t\tconst bendHeight: number = Math.abs(nextPin.interval - prevPin.interval);\r\n\t\t\t\tinterval = prevPin.interval * (1.0 - intervalRatio) + nextPin.interval * intervalRatio;\r\n\t\t\t\terror = arc * bendHeight + 0.95;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tlet minInterval: number = Number.MAX_VALUE;\r\n\t\t\tlet maxInterval: number = -Number.MAX_VALUE;\r\n\t\t\tlet bestDistance: number = Number.MAX_VALUE;\r\n\t\t\tfor (const pin of this._cursor.curNote.pins) {\r\n\t\t\t\tif (minInterval > pin.interval) minInterval = pin.interval;\r\n\t\t\t\tif (maxInterval < pin.interval) maxInterval = pin.interval;\r\n\t\t\t\tconst pinDistance: number = Math.abs(this._cursor.curNote.start + pin.time - this._mouseX / this._partWidth);\r\n\t\t\t\tif (bestDistance > pinDistance) {\r\n\t\t\t\t\tbestDistance = pinDistance;\r\n\t\t\t\t\tthis._cursor.nearPinIndex = this._cursor.curNote.pins.indexOf(pin);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tmousePitch -= interval;\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, -minInterval, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxInterval);\r\n\r\n\t\t\t// Snap to nearby existing note if present.\r\n\t\t\tif (!this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tlet nearest: number = error;\r\n\t\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\t\tconst distance: number = Math.abs(this._cursor.curNote.pitches[i] - mousePitch + 0.5);\r\n\t\t\t\t\tif (distance > nearest) continue;\r\n\t\t\t\t\tnearest = distance;\r\n\t\t\t\t\tthis._cursor.pitch = this._cursor.curNote.pitches[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = 0; i < this._cursor.curNote.pitches.length; i++) {\r\n\t\t\t\tif (this._cursor.curNote.pitches[i] == this._cursor.pitch) {\r\n\t\t\t\t\tthis._cursor.pitchIndex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t//console.log(\"default\");\r\n\r\n\t\t\tthis._cursor.pitch = this._snapToPitch(mousePitch, 0, Config.maxPitch);\r\n\t\t\tconst defaultLength: number = this._copiedPins[this._copiedPins.length - 1].time;\r\n\t\t\tconst fullBeats: number = Math.floor(this._cursor.part / Config.partsPerBeat);\r\n\t\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\t\tconst modMouse: number = this._cursor.part % Config.partsPerBeat;\r\n\t\t\tif (defaultLength == 1) {\r\n\t\t\t\tthis._cursor.start = this._cursor.part;\r\n\t\t\t} else if (defaultLength > Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t} else if (defaultLength == Config.partsPerBeat) {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tif (maxDivision < Config.partsPerBeat && modMouse > maxDivision) {\r\n\t\t\t\t\tthis._cursor.start += Math.floor(modMouse / maxDivision) * maxDivision;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.start = fullBeats * Config.partsPerBeat;\r\n\t\t\t\tlet division = Config.partsPerBeat % defaultLength == 0 ? defaultLength : Math.min(defaultLength, maxDivision);\r\n\t\t\t\twhile (division < maxDivision && Config.partsPerBeat % division != 0) {\r\n\t\t\t\t\tdivision++;\r\n\t\t\t\t}\r\n\t\t\t\tthis._cursor.start += Math.floor(modMouse / division) * division;\r\n\t\t\t}\r\n\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\tlet forceStart: number = 0;\r\n\t\t\tlet forceEnd: number = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\tif (this._cursor.prevNote != null) {\r\n\t\t\t\tforceStart = this._cursor.prevNote.end;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.nextNote != null) {\r\n\t\t\t\tforceEnd = this._cursor.nextNote.start;\r\n\t\t\t}\r\n\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\tthis._cursor.end = this._cursor.start + defaultLength;\r\n\t\t\t\tif (this._cursor.end > forceEnd) {\r\n\t\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursor.end > forceEnd) {\r\n\t\t\t\tthis._cursor.end = forceEnd;\r\n\t\t\t\tthis._cursor.start = this._cursor.end - defaultLength;\r\n\t\t\t\tif (this._cursor.start < forceStart) {\r\n\t\t\t\t\tthis._cursor.start = forceStart;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._cursor.end - this._cursor.start == defaultLength) {\r\n\t\t\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\t\t\t\tthis._cursor.pins = this._copiedPins;\r\n\t\t\t} else {\r\n\t\t\t\tthis._cursor.pins = [];\r\n\t\t\t\tfor (const oldPin of this._copiedPins) {\r\n\t\t\t\t\tif (oldPin.time <= this._cursor.end - this._cursor.start) {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t\t\tif (oldPin.time == this._cursor.end - this._cursor.start) break;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._cursor.pins.push(makeNotePin(0, this._cursor.end - this._cursor.start, oldPin.volume));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t// Return cursor to stashed cursor volumes (so pins aren't destroyed by moving the preview around several volume scales.)\r\n\t\t\t\tif (this._stashCursorPinVols != null && this._stashCursorPinVols[this._doc.channel] != null) {\r\n\t\t\t\t\tfor (let pin: number = 0; pin < this._cursor.pins.length; pin++) {\r\n\t\t\t\t\t\tthis._cursor.pins[pin].volume = this._stashCursorPinVols[this._doc.channel][pin];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Scale volume of copied pin to cap for this row\r\n\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\tfor (const pin of this._cursor.pins) {\r\n\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._cursor.valid = true;\r\n\r\n\t}\r\n\r\n\tprivate _cursorIsInSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._doc.selection.patternSelectionStart <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd;\r\n\t}\r\n\r\n\tprivate _cursorAtStartOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionStart - 3 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionStart + 1.25;\r\n\t}\r\n\r\n\tprivate _cursorAtEndOfSelection(): boolean {\r\n\t\treturn this._cursor.valid && this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1 && this._doc.selection.patternSelectionEnd - 1.25 <= this._cursor.exactPart && this._cursor.exactPart <= this._doc.selection.patternSelectionEnd + 3;\r\n\t}\r\n\r\n\tprivate _findMousePitch(pixelY: number): number {\r\n\t\treturn Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (pixelY / this._pitchHeight))) + this._octaveOffset;\r\n\t}\r\n\r\n\tprivate _snapToPitch(guess: number, min: number, max: number): number {\r\n\t\tif (guess < min) guess = min;\r\n\t\tif (guess > max) guess = max;\r\n\r\n\t\t// TODO: Figure out how scales should be implemented, and figure this logic out\r\n\r\n\t\treturn Math.floor(guess);\r\n\r\n\t\t// const scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\t// if (scale[Math.floor(guess) % Config.pitchesPerOctave] || this._doc.song.getChannelIsNoise(this._doc.channel) || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t// \treturn Math.floor(guess);\r\n\t\t// } else {\r\n\t\t\t// let topPitch: number = Math.floor(guess) + 1;\r\n\t\t\t// let bottomPitch: number = Math.floor(guess) - 1;\r\n\t\t\t\r\n\t\t\t// while (!scale[topPitch % Config.pitchesPerOctave]) {\r\n\t\t\t// \ttopPitch++;\r\n\t\t\t// }\r\n\t\t\t// while (!scale[(bottomPitch) % Config.pitchesPerOctave]) {\r\n\t\t\t// \tbottomPitch--;\r\n\t\t\t// }\r\n\t\t\t// if (topPitch > max) {\r\n\t\t\t// \tif (bottomPitch < min) {\r\n\t\t\t// \t\treturn min;\r\n\t\t\t// \t} else {\r\n\t\t\t// \t\treturn bottomPitch;\r\n\t\t\t// \t}\r\n\t\t\t// } else if (bottomPitch < min) {\r\n\t\t\t// \treturn topPitch;\r\n\t\t\t// }\r\n\t\t\t// let topRange: number = topPitch;\r\n\t\t\t// let bottomRange: number = bottomPitch + 1;\r\n\t\t\t// if (topPitch % Config.pitchesPerOctave == 0 || topPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t// \ttopRange -= 0.5;\r\n\t\t\t// }\r\n\t\t\t// if (bottomPitch % Config.pitchesPerOctave == 0 || bottomPitch % Config.pitchesPerOctave == 7) {\r\n\t\t\t// \tbottomRange += 0.5;\r\n\t\t\t// }\r\n\t\t\t// return guess - bottomRange > topRange - guess ? topPitch : bottomPitch;\r\n\t\t// }\r\n\t}\r\n\r\n\tprivate _copyPins(note: Note): void {\r\n\t\tthis._copiedPins = [];\r\n\t\tfor (const oldPin of note.pins) {\r\n\t\t\tthis._copiedPins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t}\r\n\t\tfor (let i: number = 1; i < this._copiedPins.length - 1;) {\r\n\t\t\tif (this._copiedPins[i - 1].volume == this._copiedPins[i].volume &&\r\n\t\t\t\tthis._copiedPins[i].volume == this._copiedPins[i + 1].volume) {\r\n\t\t\t\tthis._copiedPins.splice(i, 1);\r\n\t\t\t} else {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._copiedPinChannels[this._doc.channel] = this._copiedPins;\r\n\r\n\t\tthis._stashCursorPinVols[this._doc.channel] = [];\r\n\t\tfor (let pin: number = 0; pin < this._copiedPins.length; pin++) {\r\n\t\t\tthis._stashCursorPinVols[this._doc.channel].push(this._copiedPins[pin].volume);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._doc.bar + this._barOffset + (this._mouseX / this._editorWidth);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic resetCopiedPins = (): void => {\r\n\t\tconst maxDivision: number = this._getMaxDivision();\r\n\t\tlet cap: number = this._doc.song.getVolumeCap(false);\r\n\t\tthis._copiedPinChannels.length = this._doc.song.getChannelCount();\r\n\t\tthis._stashCursorPinVols.length = this._doc.song.getChannelCount();\r\n\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, cap)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, cap];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount; i < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t\tfor (let i: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; i < this._doc.song.getChannelCount(); i++) {\r\n\t\t\tthis._copiedPinChannels[i] = [makeNotePin(0, 0, cap), makeNotePin(0, maxDivision, 0)];\r\n\t\t\tthis._stashCursorPinVols[i] = [cap, 0];\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\r\n\t\tif (this._usingTouch && !this.shiftMode && !this._mouseDragging && this._mouseDown && performance.now() > this._touchTime + 1000 && this._cursor.valid && this._doc.lastChangeWas(this._dragChange)) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tthis._shiftHeld = true;\r\n\t\t\tthis._dragConfirmed = false;\r\n\t\t\tthis._whenCursorPressed();\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\r\n\t\tconst playheadBar: number = Math.floor(this._doc.synth.playhead);\r\n\r\n\t\tif (this._doc.synth.playing && ((this._pattern != null && this._doc.song.getPattern(this._doc.channel, Math.floor(this._doc.synth.playhead)) == this._pattern) || Math.floor(this._doc.synth.playhead) == this._doc.bar + this._barOffset)) {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tconst modPlayhead: number = this._doc.synth.playhead - playheadBar;\r\n\t\t\tif (Math.abs(modPlayhead - this._playheadX) > 0.1) {\r\n\t\t\t\tthis._playheadX = modPlayhead;\r\n\t\t\t} else {\r\n\t\t\t\tthis._playheadX += (modPlayhead - this._playheadX) * 0.2;\r\n\t\t\t}\r\n\t\t\tthis._svgPlayhead.setAttribute(\"x\", \"\" + prettyNumber(this._playheadX * this._editorWidth - 2));\r\n\t\t} else {\r\n\t\t\tthis._svgPlayhead.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tif (this._doc.synth.playing && this._doc.autoFollow && this._followPlayheadBar != playheadBar) {\r\n\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, playheadBar);\r\n\t\t\tthis._doc.notifier.notifyWatchers();\r\n\t\t}\r\n\t\tthis._followPlayheadBar = playheadBar;\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._usingTouch = false;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = true;\r\n\t\tthis._shiftHeld = event.shiftKey;\r\n\t\tthis._dragConfirmed = false;\r\n\t\tthis._touchTime = performance.now();\r\n\t\tthis._whenCursorPressed();\r\n\t}\r\n\r\n\tpublic stopEditingModLabel(discardChanges: boolean) {\r\n\t\tif (this.editingModLabel) {\r\n\t\t\tthis.editingModLabel = false;\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t}\r\n\t\t\t// Return pin to its state before text editing\r\n\t\t\tif (discardChanges) {\r\n\t\t\t\tthis._modDragPin.volume = this._modDragStartValue;\r\n\r\n\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._modDragStartValue, this._modDragSetting);\r\n\r\n\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * (this._modDragNote.start + this._modDragPin.time) - 4 - xOffset * 4), 2));\r\n\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._modDragNote, this._modDragPin.time, this._modDragStartValue, this._modDragPin.interval, this.shiftMode));\r\n\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t}\r\n\r\n\t\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\t\tif (continuousState) {\r\n\t\t\t\tif (this._dragChange != null) {\r\n\t\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorPressed(): void {\r\n\t\t// Check for click on mod value label\r\n\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this.modDragValueLabel.style.getPropertyValue(\"display\") != \"none\" &&\r\n\t\t\tthis._mouseX > +this._modDragValueLabelLeft - 6 &&\r\n\t\t\tthis._mouseX < +this._modDragValueLabelLeft + this._modDragValueLabelWidth + 6 &&\r\n\t\t\tthis._mouseY > +this._modDragValueLabelTop - 8 &&\r\n\t\t\tthis._mouseY < +this._modDragValueLabelTop + 11) {\r\n\t\t\t// Mod value label clicked, select it\r\n\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"fill\");\r\n\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"true\");\r\n\t\t\tif (window.getSelection) {\r\n\t\t\t\tlet sel: Selection | null = window.getSelection();\r\n\t\t\t\tif (sel != null)\r\n\t\t\t\t\tsel.selectAllChildren(this.modDragValueLabel);\r\n\t\t\t}\r\n\r\n\t\t\twindow.setTimeout(() => { this.modDragValueLabel.focus(); });\r\n\t\t\tthis.editingModLabel = true;\r\n\t\t} else {\r\n\t\t\tthis.stopEditingModLabel(false);\r\n\t\t\tif (this._doc.enableNotePreview) this._doc.synth.maintainLiveInput();\r\n\t\t\tthis._mouseDown = true;\r\n\t\t\tthis._mouseXStart = this._mouseX;\r\n\t\t\tthis._mouseYStart = this._mouseY;\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._lastChangeWasPatternSelection = this._doc.lastChangeWas(this._changePatternSelection);\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\tthis._draggingStartOfSelection = true;\r\n\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\tthis._draggingEndOfSelection = true;\r\n\t\t\t} else if (this._shiftHeld) {\r\n\t\t\t\tif ((this._doc.selection.patternSelectionActive && this._cursor.pitchIndex == -1) || this._cursorIsInSelection()) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._cursor.curNote.start, this._cursor.curNote.end));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\t\tconst end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\tthis._draggingSelectionContents = true;\r\n\t\t\t} else if (this._cursor.valid && this._cursor.curNote == null) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t// If clicking in empty space, the result will be adding a note,\r\n\t\t\t\t// so we can safely add it immediately. Note that if clicking on\r\n\t\t\t\t// or near an existing note, the result will depend on whether\r\n\t\t\t\t// a drag follows, so we couldn't add the note yet without being\r\n\t\t\t\t// confusing.\r\n\r\n\t\t\t\tconst note: Note = new Note(this._cursor.pitch, this._cursor.start, this._cursor.end, 3, this._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\tnote.pins = [];\r\n\t\t\t\tfor (const oldPin of this._cursor.pins) {\r\n\t\t\t\t\tnote.pins.push(makeNotePin(0, oldPin.time, oldPin.volume));\r\n\t\t\t\t}\r\n\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, note, this._cursor.curIndex));\r\n\r\n\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t// Play the new note out loud if enabled.\r\n\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\tthis._doc.synth.liveInputPitches = [this._cursor.pitch];\r\n\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._usingTouch = false;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._doc.enableNotePreview && this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\r\n\t\t// HACK: Undoable pattern changes rely on persistent instance\r\n\t\t// references. Loading song from hash via undo/redo breaks that,\r\n\t\t// so changes are no longer undoable and the cursor status may be\r\n\t\t// invalid. Abort further drag changes until the mouse is released.\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\r\n\t\tif (!this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tconst dx: number = this._mouseX - this._mouseXStart;\r\n\t\t\tconst dy: number = this._mouseY - this._mouseYStart;\r\n\t\t\tif (Math.sqrt(dx * dx + dy * dy) > 5) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._mouseHorizontal = Math.abs(dx) >= Math.abs(dy);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._shiftHeld && this._mouseHorizontal && Math.abs(this._mouseXStart - this._mouseX) > 5) {\r\n\t\t\tthis._dragConfirmed = true;\r\n\t\t}\r\n\r\n\t\tif (this._mouseDragging && this._mouseDown && this._cursor.valid && continuousState) {\r\n\t\t\tthis._dragChange!.undo();\r\n\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\tthis._dragChange = sequence;\r\n\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\tconst minDivision: number = this._getMinDivision();\r\n\t\t\tconst currentPart: number = this._snapToMinDivision(this._mouseX / this._partWidth);\r\n\t\t\tif (this._draggingStartOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart)), this._doc.selection.patternSelectionEnd));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingEndOfSelection) {\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, this._doc.selection.patternSelectionStart, Math.max(0, Math.min(this._doc.song.beatsPerBar * Config.partsPerBeat, currentPart))));\r\n\t\t\t\tthis._updateSelection();\r\n\t\t\t} else if (this._draggingSelectionContents) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\tif (this._mouseDragging && pattern != null) {\r\n\t\t\t\t\tthis._dragChange!.undo();\r\n\t\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\t\tthis._dragChange = sequence;\r\n\t\t\t\t\tthis._doc.setProspectiveChange(this._dragChange);\r\n\r\n\t\t\t\t\tconst notesInScale: number = Config.scales[this._doc.song.scale].flags.filter(x => x).length;\r\n\t\t\t\t\tconst pitchRatio: number = this._doc.song.getChannelIsNoise(this._doc.channel) ? 1 : Config.pitchesPerOctave / notesInScale;\r\n\t\t\t\t\tconst draggedParts: number = Math.round((this._mouseX - this._mouseXStart) / (this._partWidth * minDivision)) * minDivision;\r\n\t\t\t\t\tconst draggedTranspose: number = Math.round((this._mouseYStart - this._mouseY) / (this._pitchHeight * pitchRatio));\r\n\t\t\t\t\tsequence.append(new ChangeDragSelectedNotes(this._doc, this._doc.channel, pattern, draggedParts, draggedTranspose));\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (this._shiftHeld && this._dragConfirmed) {\r\n\r\n\t\t\t\tif (this._mouseDragging) {\r\n\t\t\t\t\tlet start: number = Math.max(0, Math.min((this._doc.song.beatsPerBar - 1) * Config.partsPerBeat, Math.floor(this._cursor.exactPart / Config.partsPerBeat) * Config.partsPerBeat));\r\n\t\t\t\t\tlet end: number = start + Config.partsPerBeat;\r\n\t\t\t\t\tif (this._cursor.curNote != null) {\r\n\t\t\t\t\t\tstart = Math.max(start, this._cursor.curNote.start);\r\n\t\t\t\t\t\tend = Math.min(end, this._cursor.curNote.end);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Todo: The following two conditional blocks could maybe be refactored.\r\n\t\t\t\t\tif (currentPart < start) {\r\n\t\t\t\t\t\tstart = 0;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end <= currentPart) {\r\n\t\t\t\t\t\t\t\t\tstart = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (start <= part && part <= currentPart) {\r\n\t\t\t\t\t\t\t\tstart = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPart > end) {\r\n\t\t\t\t\t\tend = Config.partsPerBeat * this._doc.song.beatsPerBar;\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].start >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].start;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (pattern.notes[i].end >= currentPart) {\r\n\t\t\t\t\t\t\t\t\tend = pattern.notes[i].end;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (let beat: number = 0; beat <= this._doc.song.beatsPerBar; beat++) {\r\n\t\t\t\t\t\t\tconst part: number = beat * Config.partsPerBeat;\r\n\t\t\t\t\t\t\tif (currentPart < part && part < end) {\r\n\t\t\t\t\t\t\t\tend = part;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, start, end));\r\n\t\t\t\t\tthis._updateSelection();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._cursor.curNote == null) {\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\r\n\t\t\t\t\tlet backwards: boolean;\r\n\t\t\t\t\tlet directLength: number;\r\n\t\t\t\t\tif (currentPart < this._cursor.start) {\r\n\t\t\t\t\t\tbackwards = true;\r\n\t\t\t\t\t\tdirectLength = this._cursor.start - currentPart;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbackwards = false;\r\n\t\t\t\t\t\tdirectLength = currentPart - this._cursor.start + minDivision;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet defaultLength: number = minDivision;\r\n\t\t\t\t\tfor (let i: number = minDivision; i <= this._doc.song.beatsPerBar * Config.partsPerBeat; i += minDivision) {\r\n\t\t\t\t\t\tif (minDivision == 1) {\r\n\t\t\t\t\t\t\tif (i < 5) {\r\n\t\t\t\t\t\t\t\t// Allow small lengths.\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat / 2.0) {\r\n\t\t\t\t\t\t\t\tif (i % 3 != 0 && i % 4 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i <= Config.partsPerBeat * 1.5) {\r\n\t\t\t\t\t\t\t\tif (i % 6 != 0 && i % 8 != 0) {\r\n\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else if (i % Config.partsPerBeat != 0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (i >= 5 * minDivision &&\r\n\t\t\t\t\t\t\t\ti % Config.partsPerBeat != 0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 4.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 3.0 / 2.0 &&\r\n\t\t\t\t\t\t\t\ti != Config.partsPerBeat * 4.0 / 3.0) {\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst blessedLength: number = i;\r\n\t\t\t\t\t\tif (blessedLength == directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (blessedLength < directLength) {\r\n\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (blessedLength > directLength) {\r\n\t\t\t\t\t\t\tif (defaultLength < directLength - minDivision) {\r\n\t\t\t\t\t\t\t\tdefaultLength = blessedLength;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet start: number;\r\n\t\t\t\t\tlet end: number;\r\n\r\n\t\t\t\t\tif (backwards) {\r\n\t\t\t\t\t\tend = this._cursor.start;\r\n\t\t\t\t\t\tstart = end - defaultLength;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstart = this._cursor.start;\r\n\t\t\t\t\t\tend = start + defaultLength;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (start < 0) start = 0;\r\n\t\t\t\t\tif (end > this._doc.song.beatsPerBar * Config.partsPerBeat) end = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (start < end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeEnsurePatternExists(this._doc, this._doc.channel, this._doc.bar));\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\t// Using parameter skipNote to force proper \"collision\" checking vis-a-vis pitch for mod channels.\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, pattern, start, end, new Note(this._cursor.pitch, 0, 0, 0)));\r\n\t\t\t\t\t\tlet i: number;\r\n\t\t\t\t\t\tfor (i = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\t\tif (pattern.notes[i].start >= end) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst theNote: Note = new Note(this._cursor.pitch, start, end,\r\n\t\t\t\t\t\t\tthis._doc.song.getNewNoteVolume(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch),\r\n\t\t\t\t\t\t\tthis._doc.song.getChannelIsNoise(this._doc.channel));\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, pattern, theNote, i));\r\n\t\t\t\t\t\tthis._copyPins(theNote);\r\n\r\n\t\t\t\t\t\tthis._dragTime = backwards ? start : end;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.pitch;\r\n\t\t\t\t\t\tthis._dragVolume = theNote.pins[backwards ? 0 : 1].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet prevPattern: Pattern | null = this._pattern;\r\n\r\n\t\t\t\t\tthis._pattern = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && prevPattern != this._pattern) {\r\n\t\t\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\t\t\tthis._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (this._mouseHorizontal) {\r\n\r\n\t\t\t\t\t//console.log(\"this._mouseHorizontal\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst shift: number = (this._mouseX - this._mouseXStart) / this._partWidth;\r\n\r\n\t\t\t\t\tconst shiftedPin: NotePin = this._cursor.curNote.pins[this._cursor.nearPinIndex];\r\n\t\t\t\t\tlet shiftedTime: number = Math.round((this._cursor.curNote.start + shiftedPin.time + shift) / minDivision) * minDivision;\r\n\t\t\t\t\tif (shiftedTime < 0) shiftedTime = 0;\r\n\t\t\t\t\tif (shiftedTime > this._doc.song.beatsPerBar * Config.partsPerBeat) shiftedTime = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tif (shiftedTime <= this._cursor.curNote.start && this._cursor.nearPinIndex == this._cursor.curNote.pins.length - 1 ||\r\n\t\t\t\t\t\tshiftedTime >= this._cursor.curNote.end && this._cursor.nearPinIndex == 0) {\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\r\n\t\t\t\t\t\tthis._dragVisible = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst start: number = Math.min(this._cursor.curNote.start, shiftedTime);\r\n\t\t\t\t\t\tconst end: number = Math.max(this._cursor.curNote.end, shiftedTime);\r\n\r\n\t\t\t\t\t\tthis._dragTime = shiftedTime;\r\n\t\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + this._cursor.curNote.pins[this._cursor.nearPinIndex].interval;\r\n\t\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\t\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, start, end, this._cursor.curNote));\r\n\t\t\t\t\t\tsequence.append(new ChangePinTime(this._doc, this._cursor.curNote, this._cursor.nearPinIndex, shiftedTime));\r\n\t\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (this._cursor.pitchIndex == -1 || this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\t\t\t//console.log(\"this._cursor.pitchIndex == -1\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tconst bendPart: number =\r\n\t\t\t\t\t\tMath.max(this._cursor.curNote.start,\r\n\t\t\t\t\t\t\tMath.min(this._cursor.curNote.end,\r\n\t\t\t\t\t\t\t\tMath.round(this._mouseX / (this._partWidth * minDivision)) * minDivision\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t) - this._cursor.curNote.start;\r\n\r\n\t\t\t\t\tlet prevPin: NotePin;\r\n\t\t\t\t\tlet nextPin: NotePin = this._cursor.curNote.pins[0];\r\n\t\t\t\t\tlet bendVolume: number = 0;\r\n\t\t\t\t\tlet bendInterval: number = 0;\r\n\t\t\t\t\tlet cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\r\n\t\t\t\t\t// Dragging gets a bit faster after difference in drag counts is >8.\r\n\t\t\t\t\tlet dragFactorSlow: number = 25.0 / Math.pow(cap, 0.4);\r\n\t\t\t\t\tlet dragFactorFast: number = 22.0 / Math.pow(cap, 0.5);\r\n\t\t\t\t\tlet dragSign: number = (this._mouseYStart > this._mouseY ? 1 : -1);\r\n\t\t\t\t\tlet dragCounts: number = Math.min(Math.abs(this._mouseYStart - this._mouseY) / dragFactorSlow, 8) + Math.max(0, Math.abs(this._mouseYStart - this._mouseY) / dragFactorFast - 8);\r\n\r\n\t\t\t\t\t// Note volume drag overrides attempts to make a pattern selection\r\n\t\t\t\t\tif (dragCounts > 0) {\r\n\t\t\t\t\t\tthis._shiftHeld = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i: number = 1; i < this._cursor.curNote.pins.length; i++) {\r\n\t\t\t\t\t\tprevPin = nextPin;\r\n\t\t\t\t\t\tnextPin = this._cursor.curNote.pins[i];\r\n\t\t\t\t\t\tif (bendPart > nextPin.time) continue;\r\n\t\t\t\t\t\tif (bendPart < prevPin.time) throw new Error();\r\n\t\t\t\t\t\tconst volumeRatio: number = (bendPart - prevPin.time) / (nextPin.time - prevPin.time);\r\n\t\t\t\t\t\tbendVolume = Math.round(prevPin.volume * (1.0 - volumeRatio) + nextPin.volume * volumeRatio + dragSign * dragCounts);\r\n\t\t\t\t\t\t// If not in fine control mode, round to 0~2~4~6 (normal 4 settings)\r\n\t\t\t\t\t\tif (this.controlMode == false && this._doc.alwaysFineNoteVol == false && !this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\t\tbendVolume = Math.floor(bendVolume / 2) * 2;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (bendVolume < 0) bendVolume = 0;\r\n\t\t\t\t\t\tif (bendVolume > cap) bendVolume = cap;\r\n\t\t\t\t\t\tbendInterval = this._snapToPitch(prevPin.interval * (1.0 - volumeRatio) + nextPin.interval * volumeRatio + this._cursor.curNote.pitches[0], 0, Config.maxPitch) - this._cursor.curNote.pitches[0];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._dragTime = this._cursor.curNote.start + bendPart;\r\n\t\t\t\t\tthis._dragPitch = this._cursor.curNote.pitches[this._cursor.pitchIndex == -1 ? 0 : this._cursor.pitchIndex] + bendInterval;\r\n\t\t\t\t\tthis._dragVolume = bendVolume;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\r\n\t\t\t\t\tsequence.append(new ChangeVolumeBend(this._doc, this._cursor.curNote, bendPart, bendVolume, bendInterval, this.shiftMode));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log(\"final else\");\r\n\t\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\t\tthis._dragVolume = this._cursor.curNote.pins[this._cursor.nearPinIndex].volume;\r\n\r\n\t\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\t\tlet bendStart: number;\r\n\t\t\t\t\tlet bendEnd: number;\r\n\t\t\t\t\tif (this._mouseX >= this._mouseXStart) {\r\n\t\t\t\t\t\tbendStart = Math.max(this._cursor.curNote.start, this._cursor.part);\r\n\t\t\t\t\t\tbendEnd = currentPart + minDivision;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbendStart = Math.min(this._cursor.curNote.end, this._cursor.part + minDivision);\r\n\t\t\t\t\t\tbendEnd = currentPart;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < 0) bendEnd = 0;\r\n\t\t\t\t\tif (bendEnd > this._doc.song.beatsPerBar * Config.partsPerBeat) bendEnd = this._doc.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\t\t\tif (bendEnd > this._cursor.curNote.end) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, this._cursor.curNote.start, bendEnd, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (bendEnd < this._cursor.curNote.start) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteTruncate(this._doc, this._pattern, bendEnd, this._cursor.curNote.end, this._cursor.curNote));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet minPitch: number = Number.MAX_VALUE;\r\n\t\t\t\t\tlet maxPitch: number = -Number.MAX_VALUE;\r\n\t\t\t\t\tfor (const pitch of this._cursor.curNote.pitches) {\r\n\t\t\t\t\t\tif (minPitch > pitch) minPitch = pitch;\r\n\t\t\t\t\t\tif (maxPitch < pitch) maxPitch = pitch;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tminPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\t\t\t\t\tmaxPitch -= this._cursor.curNote.pitches[this._cursor.pitchIndex];\r\n\r\n\t\t\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._findMousePitch(this._mouseY), -minPitch, (this._doc.song.getChannelIsNoise(this._doc.channel) ? Config.drumCount - 1 : Config.maxPitch) - maxPitch);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tconst bendTo: number = this._snapToPitch(this._dragPitch, -minPitch, Config.modCount - 1);\r\n\t\t\t\t\t\tsequence.append(new ChangePitchBend(this._doc, this._cursor.curNote, bendStart, bendEnd, bendTo, this._cursor.pitchIndex));\r\n\t\t\t\t\t\tthis._dragPitch = bendTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tthis._dragTime = bendEnd;\r\n\t\t\t\t\tthis._dragVisible = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!(this._mouseDown && this._cursor.valid && continuousState)) {\r\n\t\t\tthis._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event | null): void => {\r\n\t\tif (!this._cursor.valid) return;\r\n\t\tconst continuousState: boolean = this._doc.lastChangeWas(this._dragChange);\r\n\t\tif (this._mouseDown && continuousState && this._dragChange != null) {\r\n\t\t\tif (this._draggingSelectionContents) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else if (this._draggingStartOfSelection || this._draggingEndOfSelection || this._shiftHeld) {\r\n\t\t\t\tthis._setPatternSelection(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t} else if (this._mouseDragging || this._cursor.curNote == null || !this._dragChange.isNoop() || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents || this._shiftHeld) {\r\n\t\t\t\tthis._doc.record(this._dragChange);\r\n\t\t\t\tthis._dragChange = null;\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tif (this._pattern != null && this._doc.song.getChannelIsMod(this._doc.channel)) this._pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif (this._pattern == null) throw new Error();\r\n\r\n\t\t\t\tconst sequence: ChangeSequence = new ChangeSequence();\r\n\t\t\t\tsequence.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\r\n\t\t\t\tif (this._cursor.pitchIndex == -1) {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == Config.maxChordSize) {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.curNote.pitches[0], 0, true));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.length));\r\n\t\t\t\t\tthis._copyPins(this._cursor.curNote);\r\n\r\n\t\t\t\t\tif (this._doc.enableNotePreview && !this._doc.synth.playing) {\r\n\t\t\t\t\t\tconst duration: number = Math.min(Config.partsPerBeat, this._cursor.end - this._cursor.start);\r\n\t\t\t\t\t\tthis._doc.synth.liveInputDuration = duration;\r\n\t\t\t\t\t\tthis._doc.synth.liveInputPitches = this._cursor.curNote.pitches.concat();\r\n\t\t\t\t\t\tthis._doc.synth.liveInputStarted = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this._cursor.curNote.pitches.length == 1) {\r\n\t\t\t\t\t\tsequence.append(new ChangeNoteAdded(this._doc, this._pattern, this._cursor.curNote, this._cursor.curIndex, true));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tsequence.append(new ChangePitchAdded(this._doc, this._cursor.curNote, this._cursor.pitch, this._cursor.curNote.pitches.indexOf(this._cursor.pitch), true));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.record(sequence);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._draggingStartOfSelection = false;\r\n\t\tthis._draggingEndOfSelection = false;\r\n\t\tthis._draggingSelectionContents = false;\r\n\t\tthis._lastChangeWasPatternSelection = false;\r\n\t\tthis.modDragValueLabel.setAttribute(\"fill\", ColorConfig.secondaryText);\r\n\t\tthis._updateCursorStatus();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _setPatternSelection(change: UndoableChange): void {\r\n\t\tthis._changePatternSelection = change;\r\n\t\tthis._doc.record(this._changePatternSelection, this._lastChangeWasPatternSelection);\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tif (this._usingTouch) {\r\n\t\t\tif (!this._mouseDown || !this._cursor.valid || !this._mouseDragging || !this._dragVisible || this._shiftHeld || this._draggingStartOfSelection || this._draggingEndOfSelection || this._draggingSelectionContents) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tconst x: number = this._partWidth * this._dragTime;\r\n\t\t\t\tconst y: number = this._pitchToPixelHeight(this._dragPitch - this._octaveOffset);\r\n\t\t\t\tconst radius: number = (this._pitchHeight - this._pitchBorder) / 2;\r\n\t\t\t\tconst width: number = 80;\r\n\t\t\t\tconst height: number = 60;\r\n\t\t\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), this._cursor.pitch);\r\n\t\t\t\t//this._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, this._pitchHeight / 2 + 1, true, this._octaveOffset);\r\n\r\n\t\t\t\tlet pathString: string = \"\";\r\n\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap) - height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap) + height) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x + width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y - radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"M \" + prettyNumber(x) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\t\t\t\tpathString += \"L \" + prettyNumber(x - width) + \" \" + prettyNumber(y + radius * (this._dragVolume / cap)) + \" \";\r\n\r\n\t\t\t\tthis._svgPreview.setAttribute(\"d\", pathString);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this._mouseOver || this._mouseDown || !this._cursor.valid) {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"hidden\");\r\n\t\t\t\tif (!this.editingModLabel) {\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis._svgPreview.setAttribute(\"visibility\", \"visible\");\r\n\r\n\t\t\t\tif (this._cursorAtStartOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionStart;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorAtEndOfSelection()) {\r\n\t\t\t\t\tconst center: number = this._partWidth * this._doc.selection.patternSelectionEnd;\r\n\t\t\t\t\tconst left: string = prettyNumber(center - 4);\r\n\t\t\t\t\tconst right: string = prettyNumber(center + 4);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else if (this._cursorIsInSelection()) {\r\n\t\t\t\t\tconst left: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionStart - 2);\r\n\t\t\t\t\tconst right: string = prettyNumber(this._partWidth * this._doc.selection.patternSelectionEnd + 2);\r\n\t\t\t\t\tconst bottom: number = this._pitchToPixelHeight(-0.5);\r\n\t\t\t\t\tthis._svgPreview.setAttribute(\"d\", \"M \" + left + \" 0 L \" + left + \" \" + bottom + \" L \" + right + \" \" + bottom + \" L \" + right + \" 0 z\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drawNote(this._svgPreview, this._cursor.pitch, this._cursor.start, this._cursor.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateSelection(): void {\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._partWidth * this._doc.selection.patternSelectionStart));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._partWidth * (this._doc.selection.patternSelectionEnd - this._doc.selection.patternSelectionStart)));\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst nextPattern: Pattern | null = this._doc.getCurrentPattern(this._barOffset);\r\n\r\n\t\tif (this._pattern != nextPattern && this._pattern != null) {\r\n\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._interactive && nextPattern != null) {\r\n\t\t\t\t// Need to re-sort the notes by start time as they might change order if user drags them around.\r\n\t\t\t\tnextPattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n\t\t\t}\r\n\t\t\tthis._dragChange = null;\r\n\t\t\tthis._whenCursorReleased(null);\r\n\t\t}\r\n\t\tthis._pattern = nextPattern;\r\n\r\n\t\tthis._editorWidth = this.container.clientWidth;\r\n\t\tthis._editorHeight = this.container.clientHeight;\r\n\t\tthis._partWidth = this._editorWidth / (this._doc.song.beatsPerBar * Config.partsPerBeat);\r\n\t\tthis._octaveOffset = this._doc.song.channels[this._doc.channel].octave * Config.pitchesPerOctave;\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tthis._pitchBorder = this._defaultModBorder;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\r\n\t\t\tif (this._pattern != null) {\r\n\t\t\t\t// Force max height of mod channels to conform to settings.\r\n\t\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\t\tlet pitch = note.pitches[0]; // No pitch bend possible in mod channels.\r\n\t\t\t\t\tlet maxHeight: number = this._doc.song.getVolumeCap(true, this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\t\t\t\t\tlet maxFoundHeight: number = 0;\r\n\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\tif (pin.volume > maxFoundHeight) {\r\n\t\t\t\t\t\t\tmaxFoundHeight = pin.volume;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Apply scaling if the max height is below any pin setting.\r\n\t\t\t\t\tif (maxFoundHeight > maxHeight) {\r\n\t\t\t\t\t\tfor (const pin of note.pins) {\r\n\t\t\t\t\t\t\tpin.volume = Math.round(pin.volume * (maxHeight / maxFoundHeight));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchBorder = 0;\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._pitchHeight = this._editorHeight / this._pitchCount;\r\n\r\n\t\tif (this._renderedRhythm != this._doc.song.rhythm ||\r\n\t\t\tthis._renderedPitchChannelCount != this._doc.song.pitchChannelCount ||\r\n\t\t\tthis._renderedNoiseChannelCount != this._doc.song.noiseChannelCount ||\r\n\t\t\tthis._renderedModChannelCount != this._doc.song.modChannelCount) {\r\n\t\t\tthis._renderedRhythm = this._doc.song.rhythm;\r\n\t\t\tthis._renderedPitchChannelCount = this._doc.song.pitchChannelCount;\r\n\t\t\tthis._renderedNoiseChannelCount = this._doc.song.noiseChannelCount;\r\n\t\t\tthis._renderedModChannelCount = this._doc.song.modChannelCount;\r\n\t\t\tthis.resetCopiedPins();\r\n\t\t}\r\n\r\n\t\tthis._copiedPins = this._copiedPinChannels[this._doc.channel];\r\n\r\n\t\tif (this._renderedWidth != this._editorWidth || this._renderedHeight != this._editorHeight) {\r\n\t\t\tthis._renderedWidth = this._editorWidth;\r\n\t\t\tthis._renderedHeight = this._editorHeight;\r\n\t\t\tthis._svgBackground.setAttribute(\"width\", \"\" + this._editorWidth);\r\n\t\t\tthis._svgBackground.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._svgPlayhead.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", \"0\");\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", \"\" + this._editorHeight);\r\n\t\t}\r\n\r\n\t\tconst beatWidth = this._editorWidth / this._doc.song.beatsPerBar;\r\n\t\tif (this._renderedBeatWidth != beatWidth || this._renderedPitchHeight != this._pitchHeight) {\r\n\t\t\tthis._renderedBeatWidth = beatWidth;\r\n\t\t\tthis._renderedPitchHeight = this._pitchHeight;\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgNoteBackground.setAttribute(\"height\", \"\" + (this._pitchHeight * Config.pitchesPerOctave));\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgDrumBackground.setAttribute(\"height\", \"\" + this._pitchHeight);\r\n\t\t\tthis._svgModBackground.setAttribute(\"width\", \"\" + beatWidth);\r\n\t\t\tthis._svgModBackground.setAttribute(\"height\", \"\" + (this._pitchHeight));\r\n\t\t\tthis._svgModBackground.setAttribute(\"y\", \"\" + (this._pitchBorder / 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\tthis._backgroundDrumRow.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\tif (this._pitchHeight > this._pitchBorder) {\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\tthis._backgroundModRow.setAttribute(\"height\", \"\" + (this._pitchHeight - this._pitchBorder));\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\t\t\t\tconst rectangle: SVGRectElement = this._backgroundPitchRows[j];\r\n\t\t\t\tconst y: number = (Config.pitchesPerOctave - j) % Config.pitchesPerOctave;\r\n\t\t\t\trectangle.setAttribute(\"width\", \"\" + (beatWidth - 2));\r\n\t\t\t\trectangle.setAttribute(\"y\", \"\" + (y * this._pitchHeight + 1));\r\n\t\t\t\trectangle.setAttribute(\"height\", \"\" + (this._pitchHeight - 2));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._svgNoteContainer = makeEmptyReplacementElement(this._svgNoteContainer);\r\n\r\n\t\tif (this._interactive) {\r\n\t\t\tif (!this._mouseDown) this._updateCursorStatus();\r\n\t\t\tthis._updatePreview();\r\n\t\t\tthis._updateSelection();\r\n\t\t}\r\n\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._backgroundPitchRows[Math.round(Config.pitchesPerOctave * Math.log2(3 / 2))].setAttribute(\"fill\", this._doc.showFifth ? ColorConfig.fifthNote : ColorConfig.pitchBackground);\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < Config.pitchesPerOctave; j++) {\r\n\r\n\t\t\t// this._backgroundPitchRows[j].style.visibility = Config.scales[this._doc.song.scale].flags[j] ? \"visible\" : \"hidden\";\r\n\t\t\tthis._backgroundPitchRows[j].style.visibility = \"visible\";\r\n\t\t\t// TODO: Since the scales are all hardcoded for 12edo, I am disabling scales because above 12edo the notes above the first 12 are hidden by default.\r\n\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tif (!this._renderedDrums) {\r\n\t\t\t\tthis._renderedDrums = true;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorDrumBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else if (this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\tif (!this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = true;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorModBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this._renderedDrums || this._renderedMod) {\r\n\t\t\t\tthis._renderedDrums = false;\r\n\t\t\t\tthis._renderedMod = false;\r\n\t\t\t\tthis._svgBackground.setAttribute(\"fill\", \"url(#patternEditorNoteBackground\" + this._barOffset + \")\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._doc.showChannels) {\r\n\t\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\t\t\t\tfor (let channel: number = this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1; channel >= 0; channel--) {\r\n\t\t\t\t\tif (channel == this._doc.channel) continue;\r\n\t\t\t\t\tif (this._doc.song.getChannelIsNoise(channel) != this._doc.song.getChannelIsNoise(this._doc.channel)) continue;\r\n\r\n\t\t\t\t\tconst pattern2: Pattern | null = this._doc.song.getPattern(channel, this._doc.bar + this._barOffset);\r\n\t\t\t\t\tif (pattern2 == null) continue;\r\n\t\t\t\t\tfor (const note of pattern2.notes) {\r\n\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\tconst notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, channel).secondaryNote);\r\n\t\t\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, this._pitchHeight * 0.19, false, this._doc.song.channels[channel].octave * Config.pitchesPerOctave);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._pattern != null) {\r\n\t\t\tfor (const note of this._pattern.notes) {\r\n\t\t\t\tfor (let i: number = 0; i < note.pitches.length; i++) {\r\n\t\t\t\t\tconst pitch: number = note.pitches[i];\r\n\t\t\t\t\tlet notePath: SVGPathElement = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).secondaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, false, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\t\t\t\t\tnotePath = SVG.path();\r\n\t\t\t\t\tnotePath.setAttribute(\"fill\", ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote);\r\n\t\t\t\t\tnotePath.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis._drawNote(notePath, pitch, note.start, note.pins, (this._pitchHeight - this._pitchBorder) / 2 + 1, true, this._octaveOffset);\r\n\t\t\t\t\tthis._svgNoteContainer.appendChild(notePath);\r\n\r\n\t\t\t\t\tif (note.pitches.length > 1) {\r\n\t\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)];\r\n\t\t\t\t\t\tconst chord: Chord = instrument.getChord();\r\n\t\t\t\t\t\tif (!chord.harmonizes || chord.arpeggiates || chord.strumParts > 0) {\r\n\t\t\t\t\t\t\tlet oscillatorLabel: SVGTextElement = SVG.text();\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"x\", \"\" + prettyNumber(this._partWidth * note.start + 2));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"y\", \"\" + prettyNumber(this._pitchToPixelHeight(pitch - this._octaveOffset)));\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"width\", \"30\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"text-anchor\", \"start\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"dominant-baseline\", \"central\");\r\n\t\t\t\t\t\t\toscillatorLabel.setAttribute(\"pointer-events\", \"none\");\r\n\t\t\t\t\t\t\toscillatorLabel.textContent = \"\" + (i + 1);\r\n\t\t\t\t\t\t\tthis._svgNoteContainer.appendChild(oscillatorLabel);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (this._doc.song.getChannelIsMod(this._doc.channel) && this._mouseDragging && !this._mouseHorizontal && note == this._cursor.curNote) {\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"display\", \"\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"pointer-events\", \"none\");\r\n\t\t\t\t\tthis.modDragValueLabel.setAttribute(\"contenteditable\", \"false\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"color\", \"#FFFFFF\");\r\n\r\n\t\t\t\t\tlet presValue: number = this._doc.song.modValueToReal(this._dragVolume, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument(this._barOffset)].modSettings[Config.modCount - 1 - note.pitches[0]]);\r\n\r\n\t\t\t\t\t// This is me being too lazy to fiddle with the css to get it to align center.\r\n\t\t\t\t\tlet xOffset: number = (+(presValue >= 10.0)) + (+(presValue >= 100.0)) + (+(presValue < 0.0)) + (+(presValue <= -10.0));\r\n\r\n\t\t\t\t\tthis._modDragValueLabelWidth = 8 + xOffset * 8;\r\n\t\t\t\t\tthis._modDragValueLabelLeft = +prettyNumber(Math.max(Math.min(this._editorWidth - 10 - xOffset * 8, this._partWidth * this._dragTime - 4 - xOffset * 4), 2));\r\n\t\t\t\t\tthis._modDragValueLabelTop = +prettyNumber(this._pitchToPixelHeight(note.pitches[0] - this._octaveOffset) - 17 - (this._pitchHeight - this._pitchBorder) / 2);\r\n\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"left\", \"\" + this._modDragValueLabelLeft + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.style.setProperty(\"top\", \"\" + this._modDragValueLabelTop + \"px\");\r\n\t\t\t\t\tthis.modDragValueLabel.textContent = \"\" + presValue;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _drawNote(svgElement: SVGPathElement, pitch: number, start: number, pins: NotePin[], radius: number, showVolume: boolean, offset: number): void {\r\n\t\tconst totalWidth: number = this._partWidth * (pins[pins.length - 1].time + pins[0].time);\r\n\t\tconst endOffset: number = 0.5 * Math.min(2, totalWidth - 1);\r\n\r\n\t\tlet nextPin: NotePin = pins[0];\r\n\r\n\t\tconst cap: number = this._doc.song.getVolumeCap(this._doc.song.getChannelIsMod(this._doc.channel), this._doc.channel, this._doc.getCurrentInstrument(this._barOffset), pitch);\r\n\r\n\t\tlet pathString: string = \"M \" + prettyNumber(this._partWidth * (start + nextPin.time) + endOffset) + \" \" + prettyNumber(this._pitchToPixelHeight(pitch - offset) + radius * (showVolume ? nextPin.volume / cap : 1.0)) + \" \";\r\n\r\n\t\tfor (let i: number = 1; i < pins.length; i++) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) + (i == 1 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) - (i == pins.length - 1 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(prevSide + 1) + \" \" + prettyNumber(prevHeight - radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(nextSide - 1) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight - radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tfor (let i: number = pins.length - 2; i >= 0; i--) {\r\n\t\t\tlet prevPin: NotePin = nextPin;\r\n\t\t\tnextPin = pins[i];\r\n\t\t\tlet prevSide: number = this._partWidth * (start + prevPin.time) - (i == pins.length - 2 ? endOffset : 0);\r\n\t\t\tlet nextSide: number = this._partWidth * (start + nextPin.time) + (i == 0 ? endOffset : 0);\r\n\t\t\tlet prevHeight: number = this._pitchToPixelHeight(pitch + prevPin.interval - offset);\r\n\t\t\tlet nextHeight: number = this._pitchToPixelHeight(pitch + nextPin.interval - offset);\r\n\t\t\tlet prevVolume: number = showVolume ? prevPin.volume / cap : 1.0;\r\n\t\t\tlet nextVolume: number = showVolume ? nextPin.volume / cap : 1.0;\r\n\t\t\tpathString += \"L \" + prettyNumber(prevSide) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval < nextPin.interval) pathString += \"L \" + prettyNumber(prevSide - 1) + \" \" + prettyNumber(prevHeight + radius * prevVolume) + \" \";\r\n\t\t\tif (prevPin.interval > nextPin.interval) pathString += \"L \" + prettyNumber(nextSide + 1) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t\tpathString += \"L \" + prettyNumber(nextSide) + \" \" + prettyNumber(nextHeight + radius * nextVolume) + \" \";\r\n\t\t}\r\n\t\tpathString += \"z\";\r\n\r\n\t\tsvgElement.setAttribute(\"d\", pathString);\r\n\t}\r\n\r\n\tprivate _pitchToPixelHeight(pitch: number): number {\r\n\t\treturn this._pitchHeight * (this._pitchCount - (pitch) - 0.5);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Instrument, ModSetting, ModStatus } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\nexport class Piano {\r\n\tprivate readonly _pianoContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _drumContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _modContainer: HTMLDivElement = HTML.div({ style: \"width: 100%; height: 100%; display: flex; flex-direction: column-reverse; align-items: stretch;\" });\r\n\tprivate readonly _preview: HTMLDivElement = HTML.div({ style: `width: 100%; height: 40px; border: 2px solid ${ColorConfig.primaryText}; position: absolute; box-sizing: border-box; pointer-events: none;` });\r\n\tpublic readonly container: HTMLDivElement = HTML.div({ style: \"width: 32px; height: 100%; overflow: hidden; position: relative; flex-shrink: 0; touch-action: none;\" },\r\n\t\tthis._pianoContainer,\r\n\t\tthis._drumContainer,\r\n\t\tthis._modContainer,\r\n\t\tthis._preview,\r\n\t);\r\n\tprivate readonly _editorHeight: number = 481;\r\n\tprivate readonly _pianoKeys: HTMLDivElement[] = [];\r\n\tprivate readonly _pianoLabels: HTMLDivElement[] = [];\r\n\tprivate readonly _modFirstLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modSecondLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountLabels: SVGTextElement[] = [];\r\n\tprivate readonly _modCountRects: SVGRectElement[] = [];\r\n\r\n\tprivate _pitchHeight: number;\r\n\tprivate _pitchCount: number;\r\n\t//private _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _cursorPitch: number;\r\n\tprivate _playedPitch: number = -1;\r\n\tprivate _renderedScale: number = -1;\r\n\tprivate _renderedDrums: boolean = false;\r\n\tprivate _renderedMod: boolean = false;\r\n\tprivate _renderedKey: number = -1;\r\n\tprivate _renderedPitchCount: number = -1;\r\n\r\n\tpublic forceRender(): void {\r\n\t\tthis._renderedScale = -1;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tfor (let i: number = 0; i < this._doc.windowPitchCount; i++) {\r\n\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t}\r\n\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\r\n\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\tconst scale: number = (1.0 - (i / Config.drumCount) * 0.35) * 100;\r\n\t\t\tconst brightness: number = 1.0 + ((i - Config.drumCount / 2.0) / Config.drumCount) * 0.5;\r\n\t\t\tthis._drumContainer.appendChild(HTML.div({ class: \"drum-button\", style: `background-size: ${scale}% ${scale}%; filter: brightness(${brightness})` }));\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < Config.modCount; i++) {\r\n\r\n\r\n\t\t\tconst firstRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(-19px, 39px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst secondRowText: SVGTextElement = SVG.text({ class: \"modulator-label\", \"text-anchor\": \"left\", fill: ColorConfig.modLabelPrimaryText, style: \"font-weight: bold; align-self: flex-end; transform-origin: center; transform: rotate(-90deg) translate(-26px, 42px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countText: SVGTextElement = SVG.text({ class: \"modulator-inverse-label\", fill: ColorConfig.modLabelPrimary, style: \"font-weight: bold; align-self: flex-start; transform-origin: center; transform: rotate(-90deg) translate(4px, 13px); font-size: 11px; font-family: sans-serif;\" });\r\n\t\t\tconst countRect: SVGRectElement = SVG.rect({ width: \"12px\", height: \"9px\", fill: ColorConfig.indicatorPrimary, style: \"pointer-events: none; transform: translate(4px, 4px);\" });\r\n\r\n\t\t\tconst firstRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 66\", width: \"16px\", style: \"pointer-events: none; flex-grow: 1;\" }, [\r\n\t\t\t\tfirstRowText,\r\n\t\t\t]);\r\n\t\t\tconst countSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 14\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tcountRect,\r\n\t\t\t\tcountText,\r\n\t\t\t]);\r\n\t\t\tconst secondRowSVG: SVGSVGElement = SVG.svg({ viewBox: \"0 0 16 80\", width: \"16px\", style: \"pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowText,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexRow1: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tcountSVG,\r\n\t\t\t\tfirstRowSVG,\r\n\t\t\t]);\r\n\t\t\tconst flexRow2: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: column-reverse; justify-content: space-between; pointer-events: none;\" }, [\r\n\t\t\t\tsecondRowSVG,\r\n\t\t\t]);\r\n\r\n\t\t\tconst flexContainer: HTMLDivElement = HTML.div({ style: \"display: flex; flex-direction: row; justify-content: space-between; padding: 0px; width: 32px; height: 100%; overflow: hidden; pointer-events: none;\" }, [\r\n\t\t\t\tflexRow1,\r\n\t\t\t\tflexRow2,\r\n\t\t\t]);\r\n\r\n\t\t\tconst modKey: HTMLDivElement = HTML.div({ class: \"modulator-button\", style: \"background: \" + ColorConfig.modLabelPrimary + \";\" }, flexContainer);\r\n\t\t\tthis._modContainer.appendChild(modKey);\r\n\t\t\tthis._modFirstLabels.push(firstRowText);\r\n\t\t\tthis._modSecondLabels.push(secondRowText);\r\n\t\t\tthis._modCountLabels.push(countText);\r\n\t\t\tthis._modCountRects.push(countRect);\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis.container.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis.container.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenTouchReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenTouchReleased);\r\n\r\n\t\tthis._doc.notifier.watch(this._documentChanged);\r\n\t\tthis._documentChanged();\r\n\t}\r\n\r\n\tprivate _updateCursorPitch(): void {\r\n\t\tconst scale: ReadonlyArray<boolean> = Config.scales[this._doc.song.scale].flags;\r\n\t\tconst mousePitch: number = Math.max(0, Math.min(this._pitchCount - 1, this._pitchCount - (this._mouseY / this._pitchHeight)));\r\n\t\tif (scale[Math.floor(mousePitch) % 12] || this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._cursorPitch = Math.floor(mousePitch);\r\n\t\t} else {\r\n\t\t\tlet topPitch: number = Math.floor(mousePitch) + 1;\r\n\t\t\tlet bottomPitch: number = Math.floor(mousePitch) - 1;\r\n\t\t\twhile (!scale[topPitch % 12]) {\r\n\t\t\t\ttopPitch++;\r\n\t\t\t}\r\n\t\t\twhile (!scale[(bottomPitch) % 12]) {\r\n\t\t\t\tbottomPitch--;\r\n\t\t\t}\r\n\t\t\tlet topRange: number = topPitch;\r\n\t\t\tlet bottomRange: number = bottomPitch + 1;\r\n\t\t\tif (topPitch % 12 == 0 || topPitch % 12 == 7) {\r\n\t\t\t\ttopRange -= 0.5;\r\n\t\t\t}\r\n\t\t\tif (bottomPitch % 12 == 0 || bottomPitch % 12 == 7) {\r\n\t\t\t\tbottomRange += 0.5;\r\n\t\t\t}\r\n\t\t\tthis._cursorPitch = mousePitch - bottomRange > topRange - mousePitch ? topPitch : bottomPitch;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _playLiveInput(): void {\r\n\t\tconst currentPitch: number = this._cursorPitch + this._doc.song.channels[this._doc.channel].octave * 12;\r\n\t\tif (this._playedPitch == currentPitch) return;\r\n\t\tthis._playedPitch = currentPitch;\r\n\t\tthis._doc.synth.liveInputDuration = Number.MAX_SAFE_INTEGER;\r\n\t\tthis._doc.synth.liveInputPitches = [this._playedPitch];\r\n\t\tthis._doc.synth.liveInputStarted = true;\r\n\t}\r\n\r\n\tprivate _releaseLiveInput(): void {\r\n\t\tthis._playedPitch = -1;\r\n\t\tthis._doc.synth.liveInputDuration = 0;\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown || this._mouseOver) this._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mouseDown) this._releaseLiveInput();\r\n\t\tthis._mouseDown = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tthis._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._doc.synth.maintainLiveInput();\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\t//this._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t}\r\n\r\n\tprivate _whenTouchReleased = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._releaseLiveInput();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tthis._preview.style.visibility = (!this._mouseOver || this._mouseDown) ? \"hidden\" : \"visible\";\r\n\t\tif (!this._mouseOver || this._mouseDown) return;\r\n\r\n\t\tconst boundingRect: ClientRect = this.container.getBoundingClientRect();\r\n\t\tconst pitchHeight: number = this._pitchHeight / (this._editorHeight / (boundingRect.bottom - boundingRect.top));\r\n\r\n\t\tthis._preview.style.left = \"0px\";\r\n\t\tthis._preview.style.top = pitchHeight * (this._pitchCount - this._cursorPitch - 1) + \"px\";\r\n\t\tthis._preview.style.height = pitchHeight + \"px\";\r\n\t}\r\n\r\n\tprivate _documentChanged = (): void => {\r\n\t\tconst isDrum: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod: boolean = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\t\tif (isDrum) {\r\n\t\t\tthis._pitchHeight = 40;\r\n\t\t\tthis._pitchCount = Config.drumCount;\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tthis._pitchHeight = 80;\r\n\t\t\tthis._pitchCount = Config.modCount;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._pitchHeight = (this._editorHeight / this._doc.windowPitchCount);\r\n\t\t\tthis._pitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i < this._doc.windowPitchCount; i++) {\r\n\t\t\t\tconst pianoLabel: HTMLDivElement = HTML.div({ class: \"piano-label\", style: \"font-weight: bold; -webkit-text-stroke-width: 0; font-size: 11px; font-family: sans-serif; position: absolute; padding-left: 15px;\" });\r\n\t\t\t\tconst pianoKey: HTMLDivElement = HTML.div({ class: \"piano-button\", style: \"background: gray;\" }, pianoLabel);\r\n\t\t\t\tthis._pianoContainer.appendChild(pianoKey);\r\n\t\t\t\tthis._pianoLabels.push(pianoLabel);\r\n\t\t\t\tthis._pianoKeys.push(pianoKey);\r\n\t\t\t\tthis._renderedPitchCount++;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i: number = this._renderedPitchCount; i > this._doc.windowPitchCount; i--) {\r\n\t\t\t\tthis._pianoContainer.removeChild(this._pianoContainer.lastChild as Node);\r\n\t\t\t\tthis._pianoLabels.pop();\r\n\t\t\t\tthis._pianoKeys.pop();\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedPitchCount = this._doc.windowPitchCount;\r\n\t\t}\r\n\r\n\t\tthis._updateCursorPitch();\r\n\t\tif (this._mouseDown) this._playLiveInput();\r\n\t\tthis._doc.synth.liveInputChannel = this._doc.channel;\r\n\t\tthis._render();\r\n\t}\r\n\r\n\tprivate _render = (): void => {\r\n\t\tif (!this._doc.showLetters) return;\r\n\r\n\t\tconst isDrum = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tconst isMod = this._doc.song.getChannelIsMod(this._doc.channel);\r\n\r\n\t\tif (this._renderedScale == this._doc.song.scale && this._renderedKey == this._doc.song.key && this._renderedDrums == isDrum && this._renderedMod == isMod) return;\r\n\t\tthis._renderedScale = this._doc.song.scale;\r\n\t\tthis._renderedKey = this._doc.song.key;\r\n\t\tthis._renderedDrums = isDrum;\r\n\t\tthis._renderedMod = isMod;\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\tthis._pianoContainer.style.display = (isDrum || isMod) ? \"none\" : \"flex\";\r\n\t\tthis._drumContainer.style.display = isDrum ? \"flex\" : \"none\";\r\n\t\tthis._modContainer.style.display = isMod ? \"flex\" : \"none\";\r\n\r\n\t\tif (!isDrum && !isMod) {\r\n\t\t\tfor (let j: number = 0; j < this._pitchCount; j++) {\r\n\t\t\t\tconst pitchNameIndex: number = (j + Config.keys[this._doc.song.key].basePitch) % 12;\r\n\t\t\t\tconst isWhiteKey: boolean = Config.keys[pitchNameIndex].isWhiteKey;\r\n\t\t\t\tthis._pianoKeys[j].style.background = isWhiteKey ? ColorConfig.whitePianoKey : ColorConfig.blackPianoKey;\r\n\t\t\t\tif (!Config.scales[this._doc.song.scale].flags[j % 12]) {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.add(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pianoKeys[j].classList.remove(\"disabled\");\r\n\t\t\t\t\tthis._pianoLabels[j].style.display = \"\";\r\n\r\n\t\t\t\t\tlet text: string;\r\n\r\n\t\t\t\t\tif (Config.keys[pitchNameIndex].isWhiteKey) {\r\n\t\t\t\t\t\ttext = Config.keys[pitchNameIndex].name;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst shiftDir: number = Config.blackKeyNameParents[j % 12];\r\n\t\t\t\t\t\ttext = Config.keys[(pitchNameIndex + 12 + shiftDir) % 12].name;\r\n\t\t\t\t\t\tif (shiftDir == 1) {\r\n\t\t\t\t\t\t\ttext += \"♭\";\r\n\t\t\t\t\t\t} else if (shiftDir == -1) {\r\n\t\t\t\t\t\t\ttext += \"♯\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst label: HTMLDivElement = this._pianoLabels[j];\r\n\r\n\t\t\t\t\tif ((j % 12) == 0) {\r\n\t\t\t\t\t\ttext += Math.floor(j / 12) + this._doc.song.channels[this._doc.channel].octave;\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(-5px, 0px)\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tlabel.style.transform = \"translate(0px, 0px)\";\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tlabel.style.color = Config.keys[pitchNameIndex].isWhiteKey ? \"black\" : \"white\";\r\n\t\t\t\t\tlabel.textContent = text;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (isMod) {\r\n\t\t\tlet firstRow: string = \"\";\r\n\t\t\tlet secondRow: string = \"\";\r\n\t\t\tlet useFirstColor: string = ColorConfig.modLabelPrimaryText;\r\n\t\t\tlet useSecondColor: string = ColorConfig.modLabelSecondaryText;\r\n\t\t\tlet channelVal: number;\r\n\t\t\tfor (let j: number = 0; j < Config.modCount; j++) {\r\n\r\n\t\t\t\tlet usingSecondRow: boolean = true;\r\n\t\t\t\tlet usingMod: boolean = true;\r\n\t\t\t\tlet instrumentVal: number = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\tswitch (instrument.modStatuses[Config.modCount - j - 1]) {\r\n\t\t\t\t\tcase ModStatus.msNone:\r\n\t\t\t\t\t\tfirstRow = \"Mod\"\r\n\t\t\t\t\t\tusingSecondRow = false;\r\n\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForPitch:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Pitch\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Pitch \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"P\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForNoise:\r\n\t\t\t\t\t\tchannelVal = instrument.modChannels[Config.modCount - j - 1] + 1;\r\n\t\t\t\t\t\tinstrumentVal = instrument.modInstruments[Config.modCount - j - 1] + 1;\r\n\r\n\t\t\t\t\t\tif (this._doc.song.channels[channelVal - 1].name == \"\") {\r\n\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\r\n\t\t\t\t\t\t\t\tif (channelVal >= 10 || instrumentVal >= 10) {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfirstRow = \"Noise\" + channelVal;\r\n\t\t\t\t\t\t\t\t\tfirstRow += \" Ins\" + instrumentVal;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"Noise \" + channelVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// Channel name display\r\n\t\t\t\t\t\t\tif (this._doc.song.instrumentsPerChannel > 1) {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name + \" I\" + instrumentVal;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tfirstRow = \"N\" + channelVal + \" \" + this._doc.song.channels[channelVal - 1].name;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase ModStatus.msForSong:\r\n\t\t\t\t\t\tfirstRow = \"Song\";\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// When unused, show name of mod on second row\r\n\t\t\t\tif (usingSecondRow) {\r\n\t\t\t\t\tswitch (instrument.modSettings[Config.modCount - j - 1]) {\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\t\tuseSecondColor = ColorConfig.modLabelSecondaryText;\r\n\t\t\t\t\t\t\tsecondRow = \"None\";\r\n\t\t\t\t\t\t\tusingMod = false;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Cut\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tsecondRow = \"Filter Peak\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tsecondRow = \"FM Feedback\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 1\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 2\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 3\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tsecondRow = \"FM 4\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tsecondRow = \"Next Bar\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Depth\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Vibrato Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tsecondRow = \"Arp Speed\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tsecondRow = \"Reset Arp\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tsecondRow = \"Pan Delay\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tsecondRow = \"Pulse Width\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tsecondRow = \"Reverb\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tsecondRow = \"Volume\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tsecondRow = \"Tempo\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tsecondRow = \"Detune\";\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst firstLabel: SVGTextElement = this._modFirstLabels[j];\r\n\t\t\t\tconst secondLabel: SVGTextElement = this._modSecondLabels[j];\r\n\t\t\t\tconst modCountLabel: SVGTextElement = this._modCountLabels[j];\r\n\t\t\t\tconst modCountRect: SVGRectElement = this._modCountRects[j];\r\n\t\t\t\tfirstLabel.style.fill = useFirstColor;\r\n\t\t\t\tfirstLabel.textContent = firstRow;\r\n\t\t\t\tsecondLabel.style.fill = useSecondColor;\r\n\t\t\t\tsecondLabel.textContent = usingSecondRow ? secondRow : \"Not set\";\r\n\t\t\t\tmodCountLabel.textContent = \"\" + (Config.modCount - j);\r\n\t\t\t\tmodCountRect.style.fill = usingMod ? ColorConfig.indicatorPrimary : ColorConfig.modLabelSecondaryText;\r\n\r\n\t\t\t\t// Check if text is too long, if name is set\r\n\t\t\t\tif (this._doc.song.channels[instrument.modChannels[Config.modCount - j - 1]].name != \"\") {\r\n\t\t\t\t\tlet scaleFactor: string = \"1\";\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tlet length: number = firstLabel.getComputedTextLength();\r\n\t\t\t\t\tlet squeeze: number = 0;\r\n\t\t\t\t\tif (length > height - 8) {\r\n\t\t\t\t\t\tscaleFactor = \"0.65\";\r\n\t\t\t\t\t\tsqueeze = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (length > height - 24) {\r\n\t\t\t\t\t\tscaleFactor = \"0.8\";\r\n\t\t\t\t\t\tsqueeze = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - squeeze - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(\" + scaleFactor + \", 1)\";\r\n\t\t\t\t\t// Truncate end of string if it's too long, but keep instrument num\r\n\t\t\t\t\twhile (scaleFactor == \"0.65\" && firstLabel.getComputedTextLength() > height + 8) {\r\n\t\t\t\t\t\tvar offset = 4 + (instrumentVal >= 10 ? 1 : 0);\r\n\t\t\t\t\t\tfirstLabel.textContent = firstLabel.textContent.substr(0, firstLabel.textContent.length - offset) + firstLabel.textContent.substr(firstLabel.textContent.length - offset + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet height: number = firstLabel.parentElement!.parentElement!.getBoundingClientRect().height;\r\n\t\t\t\t\tfirstLabel.style.transform = \"rotate(-90deg) translate(\" + (-20 - Math.round(Math.max(0, (height - 80) / 2))) + \"px, 39px) scale(1, 1)\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeBarCount } from \"./changes\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, span, h2, input, br, select, option } = HTML;\r\n\r\nexport class SongDurationPrompt implements Prompt {\r\n\tprivate readonly _barsStepper: HTMLInputElement = input({ style: \"width: 3em; margin-left: 1em;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _positionSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"end\" }, \"Apply change at end of song.\"),\r\n\t\toption({ value: \"beginning\" }, \"Apply change at beginning of song.\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 250px;\" },\r\n\t\th2(\"Song Length\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ style: \"display: inline-block; text-align: right;\" },\r\n\t\t\t\t\"Bars per song:\",\r\n\t\t\t\tbr(),\r\n\t\t\t\tspan({ style: `font-size: smaller; color: ${ColorConfig.secondaryText};` }, \"(Multiples of 4 are recommended)\"),\r\n\r\n\t\t\t),\r\n\t\t\tthis._barsStepper,\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._positionSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\r\n\t\tthis._barsStepper.value = this._doc.song.barCount + \"\";\r\n\t\tthis._barsStepper.min = Config.barCountMin + \"\";\r\n\t\tthis._barsStepper.max = Config.barCountMax + \"\";\r\n\r\n\t\tconst lastPosition: string | null = window.localStorage.getItem(\"barCountPosition\");\r\n\t\tif (lastPosition != null) {\r\n\t\t\tthis._positionSelect.value = lastPosition;\r\n\t\t}\r\n\r\n\t\tthis._barsStepper.select();\r\n\t\tsetTimeout(() => this._barsStepper.focus());\r\n\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.addEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.addEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis._barsStepper.removeEventListener(\"keypress\", SongDurationPrompt._validateKey);\r\n\t\tthis._barsStepper.removeEventListener(\"blur\", SongDurationPrompt._validateNumber);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static _validateKey(event: KeyboardEvent): boolean {\r\n\t\tconst charCode = (event.which) ? event.which : event.keyCode;\r\n\t\tif (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprivate static _validateNumber(event: Event): void {\r\n\t\tconst input: HTMLInputElement = <HTMLInputElement>event.target;\r\n\t\tinput.value = String(SongDurationPrompt._validate(input));\r\n\t}\r\n\r\n\tprivate static _validate(input: HTMLInputElement): number {\r\n\t\treturn Math.floor(Math.max(Number(input.min), Math.min(Number(input.max), Number(input.value))));\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"barCountPosition\", this._positionSelect.value);\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tgroup.append(new ChangeBarCount(this._doc, SongDurationPrompt._validate(this._barsStepper), this._positionSelect.value == \"beginning\"));\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.record(group, true);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\n\r\n//namespace beepbox {\r\n\r\nexport interface RecoveredVersion {\r\n\tuid: string;\r\n\ttime: number;\r\n\tname: string;\r\n\twork: number;\r\n}\r\n\r\nexport interface RecoveredSong {\r\n\tversions: RecoveredVersion[];\r\n}\r\n\r\nconst versionPrefix = \"songVersion: \";\r\nconst maximumSongCount = 8;\r\nconst maximumWorkPerVersion = 3 * 60 * 1000; // 3 minutes\r\nconst minimumWorkPerSpan = 1 * 60 * 1000; // 1 minute\r\n\r\nfunction keyIsVersion(key: string): boolean {\r\n\treturn key.indexOf(versionPrefix) == 0;\r\n}\r\n\r\nfunction keyToVersion(key: string): RecoveredVersion {\r\n\treturn JSON.parse(key.substring(versionPrefix.length));\r\n}\r\n\r\nexport function versionToKey(version: RecoveredVersion): string {\r\n\treturn versionPrefix + JSON.stringify(version);\r\n}\r\n\r\nexport function generateUid(): string {\r\n\t// Not especially robust, but simple and effective!\r\n\treturn ((Math.random() * (-1 >>> 0)) >>> 0).toString(32);\r\n}\r\n\r\nfunction compareSongs(a: RecoveredSong, b: RecoveredSong): number {\r\n\treturn b.versions[0].time - a.versions[0].time;\r\n}\r\n\r\nfunction compareVersions(a: RecoveredVersion, b: RecoveredVersion): number {\r\n\treturn b.time - a.time;\r\n}\r\n\r\nexport class SongRecovery {\r\n\tprivate _saveVersionTimeoutHandle: ReturnType<typeof setTimeout>;\r\n\r\n\tprivate _song: Song = new Song();\r\n\r\n\tpublic static getAllRecoveredSongs(): RecoveredSong[] {\r\n\t\tconst songs: RecoveredSong[] = [];\r\n\t\tconst songsByUid: Dictionary<RecoveredSong> = {};\r\n\t\tfor (let i = 0; i < localStorage.length; i++) {\r\n\t\t\tconst itemKey: string = localStorage.key(i)!;\r\n\t\t\tif (keyIsVersion(itemKey)) {\r\n\t\t\t\tconst version: RecoveredVersion = keyToVersion(itemKey);\r\n\t\t\t\tlet song: RecoveredSong | undefined = songsByUid[version.uid];\r\n\t\t\t\tif (song == undefined) {\r\n\t\t\t\t\tsong = { versions: [] };\r\n\t\t\t\t\tsongsByUid[version.uid] = song;\r\n\t\t\t\t\tsongs.push(song);\r\n\t\t\t\t}\r\n\t\t\t\tsong.versions.push(version);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const song of songs) {\r\n\t\t\tsong.versions.sort(compareVersions);\r\n\t\t}\r\n\t\tsongs.sort(compareSongs);\r\n\t\treturn songs;\r\n\t}\r\n\r\n\tpublic saveVersion(uid: string, name: string, songData: string): void {\r\n\t\tconst newName: string = name;\r\n\t\tconst newTime: number = Math.round(Date.now());\r\n\r\n\t\tclearTimeout(this._saveVersionTimeoutHandle);\r\n\t\tthis._saveVersionTimeoutHandle = setTimeout((): void => {\r\n\t\t\ttry {\r\n\t\t\t\t// Ensure that the song is not corrupted before saving it.\r\n\t\t\t\tthis._song.fromBase64String(songData);\r\n\t\t\t} catch (error) {\r\n\t\t\t\twindow.alert(\"Whoops, the song data appears to have been corrupted! Please try to recover the last working version of the song from the \\\"Recover Recent Song...\\\" option in BeepBox's \\\"File\\\" menu.\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\t\t\tlet currentSong: RecoveredSong | null = null;\r\n\t\t\tfor (const song of songs) {\r\n\t\t\t\tif (song.versions[0].uid == uid) {\r\n\t\t\t\t\tcurrentSong = song;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (currentSong == null) {\r\n\t\t\t\tcurrentSong = { versions: [] };\r\n\t\t\t\tsongs.unshift(currentSong);\r\n\t\t\t}\r\n\t\t\tlet versions: RecoveredVersion[] = currentSong.versions;\r\n\r\n\t\t\tlet newWork: number = 1000; // default to 1 second of work for the first change.\r\n\t\t\tif (versions.length > 0) {\r\n\t\t\t\tconst mostRecentTime: number = versions[0].time;\r\n\t\t\t\tconst mostRecentWork: number = versions[0].work;\r\n\t\t\t\tnewWork = mostRecentWork + Math.min(maximumWorkPerVersion, newTime - mostRecentTime);\r\n\t\t\t}\r\n\r\n\t\t\tconst newVersion: RecoveredVersion = { uid: uid, name: newName, time: newTime, work: newWork };\r\n\t\t\tconst newKey: string = versionToKey(newVersion);\r\n\t\t\tversions.unshift(newVersion);\r\n\t\t\tlocalStorage.setItem(newKey, songData);\r\n\r\n\t\t\t// Consider deleting an old version to free up space.\r\n\t\t\tlet minSpan: number = minimumWorkPerSpan; // start out with a gap between versions.\r\n\t\t\tconst spanMult: number = Math.pow(2, 1 / 2); // Double the span every 2 versions back.\r\n\t\t\tfor (var i: number = 1; i < versions.length; i++) {\r\n\t\t\t\tconst currentWork: number = versions[i].work;\r\n\t\t\t\tconst olderWork: number = (i == versions.length - 1) ? 0.0 : versions[i + 1].work;\r\n\t\t\t\t// If not enough work happened between two versions, discard one of them.\r\n\t\t\t\tif (currentWork - olderWork < minSpan) {\r\n\t\t\t\t\tlet indexToDiscard: number = i;\r\n\t\t\t\t\tif (i < versions.length - 1) {\r\n\t\t\t\t\t\tconst currentTime: number = versions[i].time;\r\n\t\t\t\t\t\tconst newerTime: number = versions[i - 1].time;\r\n\t\t\t\t\t\tconst olderTime: number = versions[i + 1].time;\r\n\t\t\t\t\t\t// Weird heuristic: Between the three adjacent versions, prefer to keep\r\n\t\t\t\t\t\t// the newest and the oldest, discarding the middle one (i), unless\r\n\t\t\t\t\t\t// there is a large gap of time between the newest and middle one, in\r\n\t\t\t\t\t\t// which case the middle one represents the end of a span of work and is\r\n\t\t\t\t\t\t// thus more memorable.\r\n\t\t\t\t\t\tif ((currentTime - olderTime) < 0.5 * (newerTime - currentTime)) {\r\n\t\t\t\t\t\t\tindexToDiscard = i + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(versions[indexToDiscard]));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tminSpan *= spanMult;\r\n\t\t\t}\r\n\r\n\t\t\t// If there are too many songs, discard the least important ones.\r\n\t\t\t// Songs that are older, or have less work, are less important.\r\n\t\t\twhile (songs.length > maximumSongCount) {\r\n\t\t\t\tlet leastImportantSong: RecoveredSong | null = null;\r\n\t\t\t\tlet leastImportance: number = Number.POSITIVE_INFINITY;\r\n\t\t\t\tfor (let i: number = Math.round(maximumSongCount / 2); i < songs.length; i++) {\r\n\t\t\t\t\tconst song: RecoveredSong = songs[i];\r\n\t\t\t\t\tconst timePassed: number = newTime - song.versions[0].time;\r\n\t\t\t\t\t// Convert the time into a factor of 12 hours, add one, then divide by the result.\r\n\t\t\t\t\t// This creates a curve that starts at 1, and then gradually drops off.\r\n\t\t\t\t\tconst timeScale: number = 1.0 / ((timePassed / (12 * 60 * 60 * 1000)) + 1.0);\r\n\t\t\t\t\t// Add 5 minutes of work, to balance out simple songs a little bit.\r\n\t\t\t\t\tconst adjustedWork: number = song.versions[0].work + 5 * 60 * 1000;\r\n\t\t\t\t\tconst weight: number = adjustedWork * timeScale;\r\n\t\t\t\t\tif (leastImportance > weight) {\r\n\t\t\t\t\t\tleastImportance = weight;\r\n\t\t\t\t\t\tleastImportantSong = song;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (const version of leastImportantSong!.versions) {\r\n\t\t\t\t\tlocalStorage.removeItem(versionToKey(version));\r\n\t\t\t\t}\r\n\t\t\t\tsongs.splice(songs.indexOf(leastImportantSong!), 1);\r\n\t\t\t}\r\n\t\t}, 750); // Wait 3/4 of a second before saving a version.\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { RecoveredSong, RecoveredVersion, SongRecovery, versionToKey } from \"./SongRecovery\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, p, select, option, iframe } = HTML;\r\n\r\nexport class SongRecoveryPrompt implements Prompt {\r\n\tprivate readonly _songContainer: HTMLDivElement = div();\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt\", style: \"width: 300px;\" },\r\n\t\th2(\"Song Recovery\"),\r\n\t\tdiv({ style: \"max-height: 385px; overflow-y: auto;\" },\r\n\t\t\tp(\"This is a TEMPORARY list of songs you have recently modified. Please keep your own backups of songs you care about!\"),\r\n\t\t\tthis._songContainer,\r\n\t\t\tp(\"(If \\\"Display Song Data in URL\\\" is enabled in your preferences, then you may also be able to find song versions in your browser history. However, song recovery won't work if you were browsing in private/incognito mode.)\"),\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\r\n\t\tconst songs: RecoveredSong[] = SongRecovery.getAllRecoveredSongs();\r\n\r\n\t\tif (songs.length == 0) {\r\n\t\t\tthis._songContainer.appendChild(p(\"There are no recovered songs available yet. Try making a song!\"));\r\n\t\t}\r\n\r\n\t\tfor (const song of songs) {\r\n\t\t\tconst versionMenu: HTMLSelectElement = select({ style: \"width: 100%;\" });\r\n\r\n\t\t\tfor (const version of song.versions) {\r\n\t\t\t\tversionMenu.appendChild(option({ value: version.time }, version.name + \": \" + new Date(version.time).toLocaleString()));\r\n\t\t\t}\r\n\r\n\t\t\tconst player: HTMLIFrameElement = iframe({ style: \"width: 100%; height: 60px; border: none; display: block;\" });\r\n\t\t\tplayer.src = \"player/#song=\" + window.localStorage.getItem(versionToKey(song.versions[0]));\r\n\t\t\tconst container: HTMLDivElement = div({ style: \"margin: 4px 0;\" }, div({ class: \"selectContainer\", style: \"width: 100%; margin: 2px 0;\" }, versionMenu), player);\r\n\t\t\tthis._songContainer.appendChild(container);\r\n\r\n\t\t\tversionMenu.addEventListener(\"change\", () => {\r\n\t\t\t\tconst version: RecoveredVersion = song.versions[versionMenu.selectedIndex];\r\n\t\t\t\tplayer.contentWindow!.location.replace(\"player/#song=\" + window.localStorage.getItem(versionToKey(version)));\r\n\t\t\t\tplayer.contentWindow!.dispatchEvent(new Event(\"hashchange\"));\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { SpectrumWave, Instrument } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { ChangeSpectrum } from \"./changes\";\r\nimport { prettyNumber } from \"./EditorConfig\";\r\n\r\n//namespace beepbox {\r\nexport class SpectrumEditor {\r\n\tprivate readonly _editorWidth: number = 112;\r\n\tprivate readonly _editorHeight: number = 26;\r\n\tprivate readonly _fill: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, \"pointer-events\": \"none\" });\r\n\tprivate readonly _octaves: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _fifths: SVGSVGElement = SVG.svg({ \"pointer-events\": \"none\" });\r\n\tprivate readonly _curve: SVGPathElement = SVG.path({ fill: \"none\", stroke: \"currentColor\", \"stroke-width\": 2, \"pointer-events\": \"none\" });\r\n\tprivate readonly _arrow: SVGPathElement = SVG.path({ fill: \"currentColor\", \"pointer-events\": \"none\" });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; touch-action: none; cursor: crosshair;`, width: \"100%\", height: \"100%\", viewBox: \"0 0 \" + this._editorWidth + \" \" + this._editorHeight, preserveAspectRatio: \"none\" },\r\n\t\tthis._fill,\r\n\t\tthis._octaves,\r\n\t\tthis._fifths,\r\n\t\tthis._curve,\r\n\t\tthis._arrow,\r\n\t);\r\n\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"spectrum\", style: \"height: 2em;\" }, this._svg);\r\n\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\tprivate _freqPrev: number = 0;\r\n\tprivate _ampPrev: number = 0;\r\n\tprivate _mouseDown: boolean = false;\r\n\tprivate _change: ChangeSpectrum | null = null;\r\n\tprivate _renderedPath: String = \"\";\r\n\tprivate _renderedFifths: boolean = true;\r\n\r\n\tconstructor(private _doc: SongDocument, private _spectrumIndex: number | null) {\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._octaves.appendChild(SVG.rect({ fill: ColorConfig.tonic, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\t\tfor (let i: number = 4; i <= Config.spectrumControlPoints; i += Config.spectrumControlPointsPerOctave) {\r\n\t\t\tthis._fifths.appendChild(SVG.rect({ fill: ColorConfig.fifthNote, x: (i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2) - 1, y: 0, width: 2, height: this._editorHeight }));\r\n\t\t}\r\n\r\n\t\tthis.container.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenCursorReleased);\r\n\r\n\t\tthis.container.addEventListener(\"touchstart\", this._whenTouchPressed);\r\n\t\tthis.container.addEventListener(\"touchmove\", this._whenTouchMoved);\r\n\t\tthis.container.addEventListener(\"touchend\", this._whenCursorReleased);\r\n\t\tthis.container.addEventListener(\"touchcancel\", this._whenCursorReleased);\r\n\t}\r\n\r\n\tprivate _xToFreq(x: number): number {\r\n\t\treturn (Config.spectrumControlPoints + 2) * x / this._editorWidth - 1;\r\n\t}\r\n\r\n\tprivate _yToAmp(y: number): number {\r\n\t\treturn Config.spectrumMax * (1 - (y - 1) / (this._editorHeight - 2));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchPressed = (event: TouchEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mouseDown = true;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\r\n\t\tthis._freqPrev = this._xToFreq(this._mouseX);\r\n\t\tthis._ampPrev = this._yToAmp(this._mouseY);\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = ((event.clientX || event.pageX) - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = ((event.clientY || event.pageY) - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenTouchMoved = (event: TouchEvent): void => {\r\n\t\tif (this.container.offsetParent == null) return;\r\n\t\tif (!this._mouseDown) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.touches[0].clientX - boundingRect.left) * this._editorWidth / (boundingRect.right - boundingRect.left);\r\n\t\tthis._mouseY = (event.touches[0].clientY - boundingRect.top) * this._editorHeight / (boundingRect.bottom - boundingRect.top);\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._whenCursorMoved();\r\n\t}\r\n\r\n\tprivate _whenCursorMoved(): void {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tconst freq: number = this._xToFreq(this._mouseX);\r\n\t\t\tconst amp: number = this._yToAmp(this._mouseY);\r\n\r\n\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\r\n\t\t\tif (freq != this._freqPrev) {\r\n\t\t\t\tconst slope: number = (amp - this._ampPrev) / (freq - this._freqPrev);\r\n\t\t\t\tconst offset: number = this._ampPrev - this._freqPrev * slope;\r\n\t\t\t\tconst lowerFreq: number = Math.ceil(Math.min(this._freqPrev, freq));\r\n\t\t\t\tconst upperFreq: number = Math.floor(Math.max(this._freqPrev, freq));\r\n\t\t\t\tfor (let i: number = lowerFreq; i <= upperFreq; i++) {\r\n\t\t\t\t\tif (i < 0 || i >= Config.spectrumControlPoints) continue;\r\n\t\t\t\t\tspectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(i * slope + offset)));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tspectrumWave.spectrum[Math.max(0, Math.min(Config.spectrumControlPoints - 1, Math.round(freq)))] = Math.max(0, Math.min(Config.spectrumMax, Math.round(amp)));\r\n\r\n\t\t\tthis._freqPrev = freq;\r\n\t\t\tthis._ampPrev = amp;\r\n\r\n\t\t\tthis._change = new ChangeSpectrum(this._doc, instrument, spectrumWave);\r\n\t\t\tthis._doc.setProspectiveChange(this._change);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenCursorReleased = (event: Event): void => {\r\n\t\tif (this._mouseDown) {\r\n\t\t\tthis._doc.record(this._change!);\r\n\t\t\tthis._change = null;\r\n\t\t}\r\n\t\tthis._mouseDown = false;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst spectrumWave: SpectrumWave = (this._spectrumIndex == null) ? instrument.spectrumWave : instrument.drumsetSpectrumWaves[this._spectrumIndex];\r\n\t\tconst controlPointToHeight = (point: number): number => {\r\n\t\t\treturn (1 - (point / Config.spectrumMax)) * (this._editorHeight - 1) + 1;\r\n\t\t}\r\n\r\n\t\tlet lastValue: number = 0;\r\n\t\tlet path: string = \"M 0 \" + prettyNumber(this._editorHeight) + \" \";\r\n\t\tfor (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n\t\t\tlet nextValue: number = spectrumWave.spectrum[i];\r\n\t\t\tif (lastValue != 0 || nextValue != 0) {\r\n\t\t\t\tpath += \"L \";\r\n\t\t\t} else {\r\n\t\t\t\tpath += \"M \";\r\n\t\t\t}\r\n\t\t\tpath += prettyNumber((i + 1) * this._editorWidth / (Config.spectrumControlPoints + 2)) + \" \" + prettyNumber(controlPointToHeight(nextValue)) + \" \";\r\n\t\t\tlastValue = nextValue;\r\n\t\t}\r\n\r\n\t\tconst lastHeight: number = controlPointToHeight(lastValue);\r\n\t\tif (lastValue > 0) {\r\n\t\t\tpath += \"L \" + (this._editorWidth - 1) + \" \" + prettyNumber(lastHeight) + \" \";\r\n\t\t}\r\n\r\n\t\tif (this._renderedPath != path) {\r\n\t\t\tthis._renderedPath = path;\r\n\t\t\tthis._curve.setAttribute(\"d\", path);\r\n\t\t\tthis._fill.setAttribute(\"d\", path + \"L \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + this._editorWidth + \" \" + prettyNumber(this._editorHeight) + \" L 0 \" + prettyNumber(this._editorHeight) + \" z \");\r\n\r\n\t\t\tthis._arrow.setAttribute(\"d\", \"M \" + this._editorWidth + \" \" + prettyNumber(lastHeight) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight - 4) + \" L \" + (this._editorWidth - 4) + \" \" + prettyNumber(lastHeight + 4) + \" z\");\r\n\t\t\tthis._arrow.style.display = (lastValue > 0) ? \"\" : \"none\";\r\n\t\t}\r\n\t\tif (this._renderedFifths != this._doc.showFifth) {\r\n\t\t\tthis._renderedFifths = this._doc.showFifth;\r\n\t\t\tthis._fifths.style.display = this._doc.showFifth ? \"\" : \"none\";\r\n\t\t}\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, h2, select, option } = HTML;\r\n\r\nexport class ThemePrompt implements Prompt {\r\n\tprivate readonly _themeSelect: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ value: \"dark classic\" }, \"BeepBox Dark\"),\r\n\t\toption({ value: \"light classic\" }, \"BeepBox Light\"),\r\n\t\toption({ value: \"dark competition\" }, \"BeepBox Competition Dark\"),\r\n\t\toption({ value: \"jummbox classic\" }, \"JummBox Dark\"),\r\n\t\toption({ value: \"jummbox light\" }, \"JummBox Light\"), // It's not ready to see the world yet...\r\n\t\toption({ value: \"microbox classic\" }, \"MicroBox Dark\"),\r\n\t\toption({ value: \"forest\" }, \"Forest\"),\r\n\t\toption({ value: \"canyon\" }, \"Canyon\"),\r\n\t\toption({ value: \"midnight\" }, \"Midnight\"),\r\n\t);\r\n\tprivate readonly _cancelButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\tprivate readonly _okayButton: HTMLButtonElement = button({ class: \"okayButton\", style: \"width:45%;\" }, \"Okay\");\r\n\r\n\tpublic readonly container: HTMLDivElement = div({ class: \"prompt noSelection\", style: \"width: 220px;\" },\r\n\t\th2(\"Set Theme\"),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row; align-items: center; height: 2em; justify-content: flex-end;\" },\r\n\t\t\tdiv({ class: \"selectContainer\", style: \"width: 100%;\" }, this._themeSelect),\r\n\t\t),\r\n\t\tdiv({ style: \"display: flex; flex-direction: row-reverse; justify-content: space-between;\" },\r\n\t\t\tthis._okayButton,\r\n\t\t),\r\n\t\tthis._cancelButton,\r\n\t);\r\n\tprivate readonly lastTheme: string | null = window.localStorage.getItem(\"colorTheme\")\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tthis._themeSelect.value = this.lastTheme;\r\n\t\t}\r\n\t\tthis._okayButton.addEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.addEventListener(\"click\", this._close);\r\n\t\tthis.container.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis._themeSelect.addEventListener(\"change\", this._previewTheme);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tif (this.lastTheme != null) {\r\n\t\t\tColorConfig.setTheme(this.lastTheme);\r\n\t\t} else {\r\n\t\t\tColorConfig.setTheme(\"dark classic\");\r\n\t\t}\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._okayButton.removeEventListener(\"click\", this._saveChanges);\r\n\t\tthis._cancelButton.removeEventListener(\"click\", this._close);\r\n\t\tthis.container.removeEventListener(\"keydown\", this._whenKeyPressed);\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif ((<Element>event.target).tagName != \"BUTTON\" && event.keyCode == 13) { // Enter key\r\n\t\t\tthis._saveChanges();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _saveChanges = (): void => {\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this._themeSelect.value);\r\n\t\tthis._doc.prompt = null;\r\n\t\tthis._doc.colorTheme = this._themeSelect.value;\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tprivate _previewTheme = (): void => {\r\n\t\tColorConfig.setTheme(this._themeSelect.value);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, p, h2, h3 } = HTML;\r\n\r\nexport class TipPrompt implements Prompt {\r\n\tprivate readonly _closeButton: HTMLButtonElement = button({ class: \"cancelButton\" });\r\n\r\n\tpublic readonly container: HTMLDivElement;\r\n\r\n\tconstructor(private _doc: SongDocument, type: string) {\r\n\t\tlet message: HTMLDivElement;\r\n\r\n\t\tswitch (type) {\r\n\t\t\tcase \"scale\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Scale\"),\r\n\t\t\t\t\tp(\"This setting limits the available pitches for adding notes. You may think that there's no point in limiting your choices, but the set of pitches you use has a strong influence on the mood and feel of your song, and these scales serve as guides to help you choose appropriate pitches. Don't worry, you can change the scale at any time, so you're not locked into it. Try making little melodies using all the available notes of a scale to get a sense for how it sounds.\"),\r\n\t\t\t\t\tp(\"The most common scales are major and minor. Major scales tend to sound more playful or optimistic if you emphasize \\\"tonic\\\" notes (the brown rows in the pattern editor) at various points in your melody, whereas minor scales sound more serious or sad if you emphasize \\\"tonic\\\" notes.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"key\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Key\"),\r\n\t\t\t\t\tp(\"This setting can shift the frequency of every note in your entire song up or down to align the tonic notes (the brown rows) with the selected \\\"key\\\" pitch.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"tempo\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Song Tempo\"),\r\n\t\t\t\t\tp(\"This setting controls the speed of your song, measured in beats-per-minute.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"reverb\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Reverb\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use this slider to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"rhythm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Rhythm\"),\r\n\t\t\t\t\tp(\"This setting determines how beats are divided. The pattern editor helps you align notes to fractions of a beat based on this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentIndex\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Number\"),\r\n\t\t\t\t\tp(\"MicroBox can have multiple instruments per channel, but it can only play one instrument at a time in each channel. This setting determines which of the instruments should be used to play the currently selected pattern. Different patterns in the channel can use different instruments.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of the selected instrument without affecting the volume of the other instruments. This allows you to balance the loudness of each instrument relative to each other.\"),\r\n\t\t\t\t\tp(\"Please be careful when using volume settings above 0. This indicates amplification and too much of that can trip the audio limiter built into this tool. This can lead to your song sounding muffled if overused. But when used carefully, amplification can be a powerful tool!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pan\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Panning\"),\r\n\t\t\t\t\tp(\"If you're listening through headphones or some other stereo sound system, this controls the position of the instrument and where the sound is coming from, ranging from left to right.\"),\r\n\t\t\t\t\tp(\"As a rule of thumb, composers typically put lead melodies, drums, and basses in the center, and spread any other instruments to either side. If too many instruments seem like they're coming from the same place, it can feel crowded and harder to distinguish individual sounds, especially if they cover a similar pitch range.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"panDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Stereo Delay\"),\r\n\t\t\t\t\t\tp(\"When panning, a slight delay is often added between the left and right ear to help make a sound feel more 'directional'. For example, in the real world your left ear will hear a sound coming from the left just slightly before the right ear.\"),\r\n\t\t\t\t\t\tp(\"This setting controls how much delay is added. When this is set to minimum, panning only affects the volume of the left/right ear without changing the delay. This can help to get a more 'uniform' feeling sound, which can be desirable for making 8-bit music.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"arpeggioSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Arpeggio Speed\"),\r\n\t\t\t\t\t\tp(\"This setting affects how fast your chord will 'arpeggiate', or cycle between notes. With a fast arpeggio speed it will sound rapid-fire, with a slow speed you can hear each note one after another.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"twoNoteArpeggio\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Faster Two-Note Arpeggio\"),\r\n\t\t\t\t\t\tp(\"This setting makes arpeggios with only two notes in them happen twice as fast. Arpeggios with more notes in them are unaffected.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"detune\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Detune\"),\r\n\t\t\t\t\tp(\"This setting can be used to finely control the pitch of your instrument.\"),\r\n\t\t\t\t\tp(\"Careful - you can quickly get very dissonant sounding songs by using this setting.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"instrumentType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Type\"),\r\n\t\t\t\t\tp(\"MicroBox comes with many instrument presets. You can also create your own custom instruments!\"),\r\n\t\t\t\t\tp(\"There are also options for copying and pasting instrument settings and for generating random instruments at the top of the instrument type menu.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterCutoff\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Cutoff Frequency\"),\r\n\t\t\t\t\tp(\"The lowest setting feels \\\"muffled\\\" or \\\"dark\\\", and the highest setting feels \\\"harsh\\\" or \\\"bright\\\".\"),\r\n\t\t\t\t\tp(\"Most sounds include a range of frequencies from low to high. JummBox instruments have a filter that allows the lowest frequencies to pass through at full volume, but can reduce the volume of the higher frequencies that are above a cutoff frequency. This setting controls the cutoff frequency and thus the range of higher frequencies that are reduced.\"),\r\n\t\t\t\t\tp(\"This cutoff setting also determines which frequency resonates when the resonance peak setting is used.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterResonance\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Resonance Peak\"),\r\n\t\t\t\t\tp(\"Increasing this setting emphasizes a narrow range of frequencies, based on the position of the filter cutoff setting. This can be used to imitate the resonant bodies of acoustic instruments and other interesting effects.\"),\r\n\t\t\t\t\tp(\"The filter preserves the volume of frequencies that are below the cutoff frequency, and reduces the volume of frequencies that are above the cutoff. If this setting is used, the filter also increases the volume of frequencies that are near the cutoff.\"),\r\n\t\t\t\t\t// TODO: Add a graphic?\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"filterEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Low-Pass Filter Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Transition\"),\r\n\t\t\t\t\tp(\"This setting controls how quickly notes begin and end.\"),\r\n\t\t\t\t\tp(\"Hard transitions start suddenly and sound like instruments that are played by hitting or plucking, whereas soft transitions start gradually and sound like instruments that are played by blowing air. Some transitions also stop suddenly, whereas others fade out slowly after the end of the note.\"),\r\n\t\t\t\t\tp(\"The \\\"seamless\\\" and \\\"slide\\\" transitions connect the end of a note with the start of the next note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipWave\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chip Wave\"),\r\n\t\t\t\t\tp(\"MicroBox comes with some sound waves based on classic electronic sound chips, as well as several unique waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chipNoise\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Noise\"),\r\n\t\t\t\t\tp(\"MicroBox comes with several basic noise sounds. These do not have any distinct musical pitch, and can be used like drums to create beats and emphasize your song's rhythm.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the pulse width over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the pulse width envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"pulseWidth\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Pulse Wave Width\"),\r\n\t\t\t\t\tp(\"This setting controls the shape and sound of a pulse wave. At the minimum width, it sounds light and buzzy. At the maximum width, it is shaped like a classic square wave.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"interval\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Instrument Interval\"),\r\n\t\t\t\t\tp(\"Some JummBox instrument types can play two waves at slightly different frequencies. The difference between the frequencies is called an \\\"interval\\\", and this setting controls how large it is.\"),\r\n\t\t\t\t\tp(\"When two similar waves play at slightly different frequencies, they move in and out of phase with each other over time as different parts of the waves line up. This creates a dynamic, shifting sound. Pianos are a common example of this kind of sound, because each piano key strikes multiple strings that are tuned to slightly different frequencies.\"),\r\n\t\t\t\t\tp(\"If the interval is large, then the waves can sound out-of-tune and \\\"dissonant\\\". If the interval is even larger, then the two frequencies can even be distinct pitches.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"chords\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Chords\"),\r\n\t\t\t\t\tp(\"When multiple notes occur at the same time, this is called a chord. Chords can be created in JummBox's pattern editor by adding notes above or below another note.\"),\r\n\t\t\t\t\tp(\"This setting determines how chords are played. The standard option is \\\"harmony\\\" which plays all of the notes out loud simultaneously. The \\\"strum\\\" option is similar, but plays the notes starting at slightly different times. The \\\"arpeggio\\\" option is used in \\\"chiptune\\\" style music and plays a single tone that rapidly alternates between all of the pitches in the chord.\"),\r\n\t\t\t\t\tp(\"Some JummBox instruments have an option called \\\"custom interval\\\" which uses the chord notes to control the interval between the waves of a single tone. This can create strange sound effects when combined with FM modulators.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibrato\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Vibrato\"),\r\n\t\t\t\t\tp(\"This setting causes the frequency of a note to wobble slightly. Singers and violinists often use vibrato.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"vibratoDepth\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Depth\"),\r\n\t\t\t\t\t\tp(\"This setting affects the depth of your instrument's vibrato, making the wobbling effect sound stronger or weaker.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoDelay\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Delay\"),\r\n\t\t\t\t\t\tp(\"This setting changes when vibrato starts to kick in after a note is played. Vibrato is most common for long held notes and less common in short notes, so this can help you achieve that effect.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t} break;\r\n\t\t\tcase \"vibratoSpeed\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Speed\"),\r\n\t\t\t\t\t\tp(\"This setting determines how fast the vibrato's up-and-down wobble effect will happen for your instrument.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"vibratoType\":\r\n\t\t\t\t{\r\n\t\t\t\t\tmessage = div(\r\n\t\t\t\t\t\th2(\"Vibrato Type\"),\r\n\t\t\t\t\t\tp(\"This determines the way vibrato causes your instrument's pitch to wobble. The normal type is smooth up and down, the shaky type is chaotic.\")\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"algorithm\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"FM Algorithm\"),\r\n\t\t\t\t\tp('FM Synthesis is a mysterious but powerful technique for crafting sounds, popularized by Yamaha keyboards and the Sega Genesis/Mega Drive. It may seem confusing, but try playing around with the options until you get a feel for it, or check out some of the preset examples!'),\r\n\t\t\t\t\tp('This FM synthesizer uses up to four waves, numbered 1, 2, 3, and 4. Each wave may have its own frequency, volume, and volume envelope to control its effect over time.'),\r\n\t\t\t\t\tp('There are two kinds of waves: \"carrier\" waves play a tone out loud, but \"modulator\" waves distort other waves instead. Wave 1 is always a carrier and plays a tone, but other waves may distort it. The \"Algorithm\" setting determines which waves are modulators, and which other waves those modulators distort. For example, \"1←2\" means that wave 2 modulates wave 1, and wave 1 plays out loud.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"feedbackType\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Feedback\"),\r\n\t\t\t\t\tp('Modulators distort in one direction (like 1←2), but you can also use the feedback setting to make any wave distort in the opposite direction (1→2), or even itself (1⟲).'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorFrequency\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Frequency\"),\r\n\t\t\t\t\tp('This setting controls the frequency of an individual FM wave. The fundamental frequency (1×) is determined by the pitch of the note, and the frequency (2×) is an octave (12 semitones) above it. The frequencies with a \"~\" are slightly detuned and shift in and out of phase over time compared to the other frequencies.'),\r\n\t\t\t\t\tp('Try different combinations of a \"carrier\" wave and a \"modulator\" wave with different frequencies to get a feel for how they sound together.'),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorVolume\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Volume\"),\r\n\t\t\t\t\tp(\"This setting controls the volume of \\\"carrier\\\" waves, or the amount of distortion that \\\"modulator\\\" waves apply to other waves.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"operatorEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Operator Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the FM wave volume over time. Try the different options to see how they sound!\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the FM wave envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"spectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drum sounds when combined with a hard transition and a falling filter cutoff envelope.\"),\r\n\t\t\t\t\tp(\"If you only use certain frequencies and a soft transition, it's also possible to make howling wind sounds or even musical blown bottle sounds.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"harmonics\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Harmonics\"),\r\n\t\t\t\t\tp(\"This setting allows you to design your own sound wave! Most musical waves are actually a combination of sine waves at certain frequencies, and this lets you control the volume of each sine wave individually.\"),\r\n\t\t\t\t\tp(\"The left side of the harmonics editor controls the sine wave volumes at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"effects\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Effects\"),\r\n\t\t\t\t\tp(\"MicroBox has two special effects you can add to instruments. You can turn on either effect, or both at once.\"),\r\n\t\t\t\t\tp(\"Reverb is a kind of echo effect. You can use the \\\"reverb\\\" slider in the \\\"Song Settings\\\" section above to control the amount of reverb for instruments that enable it. A little bit helps instruments sound more natural. Adding a lot of reverb can add sense of depth or mystery.\"),\r\n\t\t\t\t\tp(\"The chorus effect combines multiple copies of the instrument's sound and adds a bit of vibrato to simulate an ensemble of instruments or voices.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetEnvelope\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Envelope\"),\r\n\t\t\t\t\tp(\"This setting can dynamically change the filter cutoff frequency over time. Each row in the pattern editor gets its own envelope.\"),\r\n\t\t\t\t\tp(\"The \\\"custom\\\" option uses the note volume as drawn in the pattern editor as the drumset cutoff envelope.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"drumsetSpectrum\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Drumset Spectrum\"),\r\n\t\t\t\t\tp(\"This setting allows you to draw your own noise spectrum! This is good for making drumsets. Each row in the pattern editor gets its own spectrum.\"),\r\n\t\t\t\t\tp(\"The left side of the spectrum editor controls the noise energy at lower frequencies, and the right side controls higher frequencies.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this instrument used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the instrument you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the instrument before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"usedPattern\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th3(\"'Is this pattern used somewhere else?'\"),\r\n\t\t\t\t\tp(\"This indicator will light up when the pattern you're currently looking at is used in another place in your song (outside the selection).\"),\r\n\t\t\t\t\tp(\"This can be useful when you're not sure if you've used the pattern before and making edits carelessly could change other parts of the song.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modChannel\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Channel\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which channel the modulators will take effect for. If you choose 'Song', you can change song-wide settings too!\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modInstrument\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Instrument\"),\r\n\t\t\t\t\tp(\"Modulators can be used to change settings in your song automatically over time. This technique is also known as automation.\"),\r\n\t\t\t\t\tp(\"This setting controls which instrument your modulator will apply to within the given channel you've chosen.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"modSet\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Modulator Setting\"),\r\n\t\t\t\t\tp(\"This is the parameter that you want to change with this modulator. For example, if you set this to 'Tempo', you can speed up or slow down your song by laying notes in the pattern editor.\"),\r\n\t\t\t\t\tp(\"Note that you'll see different options if your channel is set to 'Song' versus a channel number. With 'Song', you'll see song-wide settings such as tempo. With a channel, you'll see specific instrument settings.\"),\r\n\t\t\t\t\tp(\"Most modulators behave as you'd expect and work just as if you were moving their associated slider. But with the special setting 'Next Bar', the first note you lay will cause the playhead to skip the rest of the bar and jump right to the next one.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"transitionBar\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Tie Notes Over Bars\"),\r\n\t\t\t\t\tp(\"With this option ticked, notes won't transition across bars if you put notes with the same pitches at the start of the next bar. Instead they will 'tie over' and sound like one long note.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\t\t\tcase \"clicklessTransition\": {\r\n\t\t\t\tmessage = div(\r\n\t\t\t\t\th2(\"Clickless Transition\"),\r\n\t\t\t\t\tp(\"Sometimes, seamless and other transition types can make audible 'clicks' when changing between notes. Ticking this option will cause those clicks to be silenced as much as possible.\"),\r\n\t\t\t\t);\r\n\t\t\t} break;\r\n\r\n\t\t\tdefault: throw new Error(\"Unhandled TipPrompt type: \" + type);\r\n\t\t}\r\n\r\n\t\tthis.container = div({ class: \"prompt\", style: \"width: 250px;\" },\r\n\t\t\tmessage,\r\n\t\t\tthis._closeButton,\r\n\t\t);\r\n\r\n\t\tsetTimeout(() => this._closeButton.focus());\r\n\r\n\t\tthis._closeButton.addEventListener(\"click\", this._close);\r\n\t}\r\n\r\n\tprivate _close = (): void => {\r\n\t\tthis._doc.undo();\r\n\t}\r\n\r\n\tpublic cleanUp = (): void => {\r\n\t\tthis._closeButton.removeEventListener(\"click\", this._close);\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern } from \"../synth/synth\";\r\nimport { ColorConfig, ChannelColors } from \"./ColorConfig\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\nimport { isMobile } from \"./EditorConfig\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n//namespace beepbox {\r\n\r\nclass Box {\r\n\tprivate readonly _text: Text = document.createTextNode(\"1\");\r\n\tprivate readonly _label: SVGTextElement = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": 20, \"text-anchor\": \"middle\", \"font-weight\": \"bold\", fill: \"red\" }, this._text);\r\n\tprivate readonly _rect: SVGRectElement = SVG.rect({ x: 1, y: 1 });\r\n\tpublic readonly container: SVGSVGElement = SVG.svg(this._rect, this._label);\r\n\tprivate _renderedIndex: number = 1;\r\n\tprivate _renderedDim: boolean = true;\r\n\tprivate _renderedSelected: boolean = false;\r\n\tprivate _renderedColor: string = \"\";\r\n\r\n\tconstructor(channel: number, private readonly _x: number, private readonly _y: number, color: string) {\r\n\t\tthis._rect.setAttribute(\"fill\", ColorConfig.uiWidgetBackground);\r\n\t\tthis._label.setAttribute(\"fill\", color);\r\n\t}\r\n\r\n\tpublic setSize(width: number, height: number): void {\r\n\t\tthis.container.setAttribute(\"x\", \"\" + (this._x * width));\r\n\t\tthis.container.setAttribute(\"y\", \"\" + (Config.barEditorHeight + this._y * height));\r\n\t\tthis._rect.setAttribute(\"width\", \"\" + (width - 2));\r\n\t\tthis._rect.setAttribute(\"height\", \"\" + (height - 2));\r\n\t\tthis._label.setAttribute(\"x\", \"\" + (width / 2));\r\n\t\tthis._label.setAttribute(\"y\", \"\" + Math.round(height / 2 + 7));\r\n\t}\r\n\r\n\tpublic setIndex(index: number, dim: boolean, selected: boolean, color: string, isNoise: boolean, isMod: boolean): void {\r\n\t\tif (this._renderedIndex != index) {\r\n\t\t\tif (!this._renderedSelected && ((index == 0) != (this._renderedIndex == 0))) {\r\n\t\t\t\tif (index == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", \"none\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (index >= 100) {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"16\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, -1.5px);\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._label.setAttribute(\"font-size\", \"20\");\r\n\t\t\t\tthis._label.setAttribute(\"style\", \"transform: translate(0px, 0px);\");\r\n\t\t\t}\r\n\r\n\t\t\tthis._renderedIndex = index;\r\n\t\t\tthis._text.data = \"\" + index;\r\n\t\t}\r\n\r\n\t\tif (this._renderedDim != dim || this._renderedColor != color) {\r\n\t\t\tthis._renderedDim = dim;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this._renderedSelected != selected || this._renderedColor != color) {\r\n\t\t\tthis._renderedSelected = selected;\r\n\t\t\tif (selected) {\r\n\t\t\t\tthis._rect.setAttribute(\"fill\", color);\r\n\t\t\t\tthis._label.setAttribute(\"fill\", ColorConfig.invertedText);\r\n\t\t\t} else {\r\n\t\t\t\tthis._label.setAttribute(\"fill\", color);\r\n\r\n\t\t\t\tif (this._renderedIndex == 0) {\r\n\t\t\t\t\tthis._rect.setAttribute(\"fill\", ColorConfig.editorBackground);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (isNoise)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgNoiseDim : ColorConfig.trackEditorBgNoise);\r\n\t\t\t\t\telse if (isMod)\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgModDim : ColorConfig.trackEditorBgMod);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis._rect.setAttribute(\"fill\", dim ? ColorConfig.trackEditorBgPitchDim : ColorConfig.trackEditorBgPitch);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._renderedColor = color;\r\n\t}\r\n}\r\n\r\nexport class TrackEditor {\r\n\tpublic readonly _barDropDown: HTMLSelectElement = HTML.select({ style: \"width: 32px; height: \" + Config.barEditorHeight + \"px; top: 0px; position: absolute; opacity: 0\" },\r\n\r\n\t\tHTML.option({ value: \"barBefore\" }, \"Insert Bar Before\"),\r\n\t\tHTML.option({ value: \"barAfter\" }, \"Insert Bar After\"),\r\n\t\tHTML.option({ value: \"deleteBar\" }, \"Delete This Bar\"),\r\n\t);\r\n\tprivate readonly _boxContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _barNumberContainer: SVGGElement = SVG.g();\r\n\tprivate readonly _playhead: SVGRectElement = SVG.rect({ fill: ColorConfig.playhead, x: 0, y: 0, width: 4, height: 128 });\r\n\tprivate readonly _boxHighlight: SVGRectElement = SVG.rect({ fill: \"none\", stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"pointer-events\": \"none\", x: 1, y: 1, width: 30, height: 30 });\r\n\tprivate readonly _upHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _downHighlight: SVGPathElement = SVG.path({ fill: ColorConfig.invertedText, stroke: ColorConfig.invertedText, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _barEditorPath: SVGPathElement = SVG.path({ fill: ColorConfig.uiWidgetBackground, stroke: ColorConfig.uiWidgetBackground, \"stroke-width\": 1, \"pointer-events\": \"none\" });\r\n\tprivate readonly _selectionRect: SVGRectElement = SVG.rect({ class: \"dashed-line dash-move\", fill: ColorConfig.boxSelectionFill, stroke: ColorConfig.hoverPreview, \"stroke-width\": 2, \"stroke-dasharray\": \"5, 3\", \"fill-opacity\": \"0.4\", \"pointer-events\": \"none\", visibility: \"hidden\", x: 1, y: 1, width: 62, height: 62 });\r\n\tprivate readonly _svg: SVGSVGElement = SVG.svg({ style: `background-color: ${ColorConfig.editorBackground}; position: absolute;`, height: 128 },\r\n\t\tthis._boxContainer,\r\n\t\tthis._barEditorPath,\r\n\t\tthis._selectionRect,\r\n\t\tthis._barNumberContainer,\r\n\t\tthis._boxHighlight,\r\n\t\tthis._upHighlight,\r\n\t\tthis._downHighlight,\r\n\t\tthis._playhead,\r\n\t);\r\n\tprivate readonly _select: HTMLSelectElement = HTML.select({ class: \"trackSelectBox\", style: \"background: none; border: none; appearance: none; border-radius: initial; box-shadow: none; color: transparent; position: absolute; touch-action: none;\" });\r\n\tpublic readonly container: HTMLElement = HTML.div({ class: \"noSelection\", style: \"height: 128px; position: relative; overflow:hidden;\" }, this._svg, this._select, this._barDropDown);\r\n\r\n\tprivate readonly _grid: Box[][] = [];\r\n\tprivate readonly _barNumbers: SVGTextElement[] = [];\r\n\tprivate _mouseX: number = 0;\r\n\tprivate _mouseY: number = 0;\r\n\t//private _lastScrollTime: number = 0;\r\n\t//private _selecting: boolean = false;\r\n\t//private _selectionStartBar: number = 0;\r\n\t//private _selectionStartChannel: number = 0;\r\n\t//private _pattern: Pattern | null = null;\r\n\tprivate _mouseStartBar: number = 0;\r\n\tprivate _mouseStartChannel: number = 0;\r\n\tprivate _mouseBar: number = 0;\r\n\tprivate _mouseChannel: number = 0;\r\n\tprivate _mouseOver: boolean = false;\r\n\tprivate _mousePressed: boolean = false;\r\n\tprivate _mouseDragging = false;\r\n\tprivate _barWidth: number = 32;\r\n\tprivate _channelHeight: number = 32;\r\n\tprivate _renderedChannelCount: number = 0;\r\n\tprivate _renderedBarCount: number = 0;\r\n\tprivate _renderedPatternCount: number = 0;\r\n\tprivate _renderedPlayhead: number = -1;\r\n\tprivate _renderedBarWidth: number = -1;\r\n\tprivate _renderedChannelHeight: number = -1;\r\n\tprivate _touchMode: boolean = isMobile;\r\n\tprivate _barDropDownBar: number = 0;\r\n\tprivate _lastScrollTime: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument, private _songEditor: SongEditor) {\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t\tthis._svg.addEventListener(\"mousedown\", this._whenMousePressed);\r\n\t\tdocument.addEventListener(\"mousemove\", this._whenMouseMoved);\r\n\t\tdocument.addEventListener(\"mouseup\", this._whenMouseReleased);\r\n\t\tthis._svg.addEventListener(\"mouseover\", this._whenMouseOver);\r\n\t\tthis._svg.addEventListener(\"mouseout\", this._whenMouseOut);\r\n\r\n\t\tthis._select.addEventListener(\"change\", this._whenSelectChanged);\r\n\t\tthis._select.addEventListener(\"touchstart\", this._whenSelectPressed);\r\n\t\tthis._select.addEventListener(\"touchmove\", this._whenSelectMoved);\r\n\t\tthis._select.addEventListener(\"touchend\", this._whenSelectReleased);\r\n\t\tthis._select.addEventListener(\"touchcancel\", this._whenSelectReleased);\r\n\r\n\t\tlet determinedCursorType: boolean = false;\r\n\t\tdocument.addEventListener(\"mousedown\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = false;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\t\tdocument.addEventListener(\"touchstart\", () => {\r\n\t\t\tif (!determinedCursorType) {\r\n\t\t\t\tthis._touchMode = true;\r\n\t\t\t\tthis._updatePreview();\r\n\t\t\t}\r\n\t\t\tdeterminedCursorType = true;\r\n\t\t}, true);\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t\tthis._barDropDown.addEventListener(\"change\", this._barDropDownHandler);\r\n\t\tthis._barDropDown.addEventListener(\"mousedown\", this._barDropDownGetOpenedPosition);\r\n\r\n\t}\r\n\r\n\tprivate _barDropDownGetOpenedPosition = (event: MouseEvent): void => {\r\n\t\tthis._barDropDownBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t}\r\n\r\n\tprivate _barDropDownHandler = (event: Event): void => {\r\n\r\n\t\tvar moveBarOffset = (this._barDropDown.value == \"barBefore\") ? 0 : 1;\r\n\r\n\t\tif (this._barDropDown.value == \"barBefore\" || this._barDropDown.value == \"barAfter\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar - 1 + moveBarOffset;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.insertBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the inserted zone, though.\r\n\t\t\t// this._doc.bar = prevBar + ((prevBar < this._barDropDownBar + moveBarOffset) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead >= this._barDropDownBar + moveBarOffset) {\r\n\t\t\t\tthis._doc.synth.playhead++;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\telse if (this._barDropDown.value == \"deleteBar\") {\r\n\r\n\t\t\t//var prevBar = this._doc.bar;\r\n\r\n\t\t\tthis._doc.bar = this._barDropDownBar;\r\n\r\n\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\tthis._doc.selection.deleteBars();\r\n\r\n\t\t\t// This moves doc.bar back. I kind of like moving it to the deleted zone, though.\r\n\t\t\t// this._doc.bar = prevBar - ((prevBar <= this._barDropDownBar) ? 0 : 1);\r\n\r\n\t\t\t// Adjust song playhead\r\n\t\t\tif (this._doc.synth.playhead > this._barDropDownBar) {\r\n\t\t\t\tthis._doc.synth.playhead--;\r\n\t\t\t\tthis._songEditor._barScrollBar.animatePlayhead();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._barDropDown.selectedIndex = -1;\r\n\t}\r\n\r\n\tprivate _whenSelectChanged = (): void => {\r\n\t\tthis._doc.selection.setPattern(this._select.selectedIndex);\r\n\t}\r\n\r\n\tprivate _animatePlayhead = (timestamp: number): void => {\r\n\t\tconst playhead = (this._barWidth * this._doc.synth.playhead - 2);\r\n\t\tif (this._renderedPlayhead != playhead) {\r\n\t\t\tthis._renderedPlayhead = playhead;\r\n\t\t\tthis._playhead.setAttribute(\"x\", \"\" + playhead);\r\n\t\t}\r\n\t\twindow.requestAnimationFrame(this._animatePlayhead);\r\n\t}\r\n\r\n\tpublic movePlayheadToMouse(): void {\r\n\t\tif (this._mouseOver) {\r\n\t\t\tthis._doc.synth.playhead = this._mouseBar + (this._mouseX % this._barWidth) / this._barWidth;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _dragBoxSelection(): void {\r\n\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\tthis._doc.selection.selectionUpdated();\r\n\t}\r\n\r\n\tprivate _updateSelectPos(event: TouchEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = event.touches[0].clientX - boundingRect.left;\r\n\t\tthis._mouseY = event.touches[0].clientY - boundingRect.top;\r\n\t\tif (isNaN(this._mouseX)) this._mouseX = 0;\r\n\t\tif (isNaN(this._mouseY)) this._mouseY = 0;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenSelectPressed = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._mouseDragging = true;\r\n\t\tthis._updateSelectPos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\t}\r\n\r\n\tprivate _whenSelectMoved = (event: TouchEvent): void => {\r\n\t\tthis._updateSelectPos(event);\r\n\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t// if the touch has started dragging, cancel opening the select menu.\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\tif (this._mousePressed) this._dragBoxSelection();\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenSelectReleased = (event: TouchEvent): void => {\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseOver = (event: MouseEvent): void => {\r\n\t\tif (this._mouseOver) return;\r\n\t\tthis._mouseOver = true;\r\n\t}\r\n\r\n\tprivate _whenMouseOut = (event: MouseEvent): void => {\r\n\t\tif (!this._mouseOver) return;\r\n\t\tthis._mouseOver = false;\r\n\t}\r\n\r\n\tprivate _updateMousePos(event: MouseEvent): void {\r\n\t\tconst boundingRect: ClientRect = this._svg.getBoundingClientRect();\r\n\t\tthis._mouseX = (event.clientX || event.pageX) - boundingRect.left;\r\n\t\tthis._mouseY = (event.clientY || event.pageY) - boundingRect.top;\r\n\t\tthis._mouseBar = Math.floor(Math.min(this._doc.song.barCount - 1, Math.max(0, this._mouseX / this._barWidth)));\r\n\t\tthis._mouseChannel = Math.floor(Math.min(this._doc.song.getChannelCount() - 1, Math.max(0, (this._mouseY - Config.barEditorHeight) / this._channelHeight)));\r\n\t}\r\n\r\n\tprivate _whenMousePressed = (event: MouseEvent): void => {\r\n\t\tevent.preventDefault();\r\n\t\tthis._mousePressed = true;\r\n\t\tthis._updateMousePos(event);\r\n\t\tthis._mouseStartBar = this._mouseBar;\r\n\t\tthis._mouseStartChannel = this._mouseChannel;\r\n\r\n\t\t// Act on track portion\r\n\t\tif (this._mouseY >= Config.barEditorHeight) {\r\n\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\tthis._doc.selection.setTrackSelection(this._doc.selection.boxSelectionX0, this._mouseBar, this._doc.selection.boxSelectionY0, this._mouseChannel);\r\n\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t} else {\r\n\t\t\t\tthis._mouseDragging = false;\r\n\t\t\t\tif (this._doc.channel != this._mouseChannel || this._doc.bar != this._mouseBar) {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._mouseChannel, this._mouseBar);\r\n\t\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t\t}\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenMouseMoved = (event: MouseEvent): void => {\r\n\t\tthis._updateMousePos(event);\r\n\t\tif (this._mousePressed) {\r\n\t\t\tif (this._mouseStartBar != this._mouseBar || this._mouseStartChannel != this._mouseChannel) {\r\n\t\t\t\tthis._mouseDragging = true;\r\n\t\t\t}\r\n\t\t\tthis._dragBoxSelection();\r\n\t\t}\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _whenMouseReleased = (event: MouseEvent): void => {\r\n\t\tif (this._mousePressed && !this._mouseDragging) {\r\n\t\t\tif (this._doc.channel == this._mouseChannel && this._doc.bar == this._mouseBar) {\r\n\t\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\t\tconst patternCount: number = this._doc.song.patternsPerChannel;\r\n\t\t\t\tthis._doc.selection.setPattern((this._doc.song.channels[this._mouseChannel].bars[this._mouseBar] + (up ? 1 : patternCount)) % (patternCount + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis._mousePressed = false;\r\n\t\tthis._mouseDragging = false;\r\n\t\tthis._updatePreview();\r\n\t}\r\n\r\n\tprivate _updatePreview(): void {\r\n\t\tlet channel: number = this._mouseChannel;\r\n\t\tlet bar: number = this._mouseBar;\r\n\r\n\t\tif (this._touchMode) {\r\n\t\t\tbar = this._doc.bar;\r\n\t\t\tchannel = this._doc.channel;\r\n\t\t}\r\n\r\n\t\tconst selected: boolean = (bar == this._doc.bar && channel == this._doc.channel);\r\n\t\tconst overTrackEditor: boolean = (this._mouseY >= Config.barEditorHeight);\r\n\r\n\t\tif (this._mouseDragging && this._mouseStartBar != this._mouseBar) {\r\n\r\n\t\t\t// Handle auto-scroll in selection. Only @50ms or slower.\r\n\t\t\tvar timestamp: number = Date.now();\r\n\r\n\t\t\tif (timestamp - this._lastScrollTime >= 50) {\r\n\r\n\t\t\t\tif (bar > this._doc.barScrollPos + this._doc.trackVisibleBars - 1 && this._doc.barScrollPos < this._doc.song.barCount - this._doc.trackVisibleBars) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(1);\r\n\t\t\t\t}\r\n\t\t\t\tif (bar < this._doc.barScrollPos && this._doc.barScrollPos > 0) {\r\n\r\n\t\t\t\t\tthis._songEditor.changeBarScrollPos(-1);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._lastScrollTime = timestamp;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif (this._mouseOver && !this._mousePressed && !selected && overTrackEditor) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"\" + (1 + Config.barEditorHeight + (this._channelHeight * channel)));\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (this._channelHeight - 2));\r\n\t\t\tthis._boxHighlight.setAttribute(\"width\", \"\" + (this._barWidth - 2));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else if ((this._mouseOver || ((this._mouseX >= bar * this._barWidth) && (this._mouseX < bar * this._barWidth + this._barWidth) && (this._mouseY > 0))) && (!overTrackEditor)) {\r\n\t\t\tthis._boxHighlight.setAttribute(\"x\", \"\" + (1 + this._barWidth * bar));\r\n\t\t\tthis._boxHighlight.setAttribute(\"y\", \"1\"); // The y is set to 1 instead of 0 due to the thickness of the box causing it to go slightly outside the frame at y=0.\r\n\t\t\tthis._boxHighlight.setAttribute(\"height\", \"\" + (Config.barEditorHeight - 3));\r\n\t\t\tthis._boxHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._boxHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tif ((this._mouseOver || this._touchMode) && selected && overTrackEditor) {\r\n\t\t\tconst up: boolean = ((this._mouseY - Config.barEditorHeight) % this._channelHeight) < this._channelHeight / 2;\r\n\t\t\tconst center: number = this._barWidth * (bar + 0.8);\r\n\t\t\tconst middle: number = Config.barEditorHeight + this._channelHeight * (channel + 0.5);\r\n\t\t\tconst base: number = this._channelHeight * 0.1;\r\n\t\t\tconst tip: number = this._channelHeight * 0.4;\r\n\t\t\tconst width: number = this._channelHeight * 0.175;\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"fill\", up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\t\t\tthis._downHighlight.setAttribute(\"fill\", !up && !this._touchMode ? ColorConfig.hoverPreview : ColorConfig.invertedText);\r\n\r\n\t\t\tthis._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\tthis._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tthis._upHighlight.style.visibility = \"visible\";\r\n\t\t\tthis._downHighlight.style.visibility = \"visible\";\r\n\t\t} else {\r\n\t\t\tthis._upHighlight.style.visibility = \"hidden\";\r\n\t\t\tthis._downHighlight.style.visibility = \"hidden\";\r\n\t\t}\r\n\r\n\t\tthis._selectionRect.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\t\tthis._selectionRect.style.top = (Config.barEditorHeight + (this._channelHeight * this._doc.channel)) + \"px\";\r\n\r\n\t\tthis._select.style.left = (this._barWidth * this._doc.bar) + \"px\";\r\n\r\n\t\tthis._select.style.width = this._barWidth + \"px\";\r\n\t\tthis._select.style.top = (Config.barEditorHeight + this._channelHeight * this._doc.channel) + \"px\";\r\n\t\tthis._select.style.height = this._channelHeight + \"px\";\r\n\r\n\t\tthis._barDropDown.style.left = (this._barWidth * bar) + \"px\";\r\n\r\n\t\tconst patternCount: number = this._doc.song.patternsPerChannel + 1;\r\n\t\tfor (let i: number = this._renderedPatternCount; i < patternCount; i++) {\r\n\t\t\tthis._select.appendChild(HTML.option({ value: i }, i));\r\n\t\t}\r\n\t\tfor (let i: number = patternCount; i < this._renderedPatternCount; i++) {\r\n\t\t\tthis._select.removeChild(<Node>this._select.lastChild);\r\n\t\t}\r\n\t\tthis._renderedPatternCount = patternCount;\r\n\t\tconst selectedPattern: number = this._doc.song.channels[this._doc.channel].bars[this._doc.bar];\r\n\t\tif (this._select.selectedIndex != selectedPattern) this._select.selectedIndex = selectedPattern;\r\n\t}\r\n\r\n\tpublic render(): void {\r\n\r\n\t\tthis._barWidth = this._doc.getBarWidth();\r\n\t\tthis._channelHeight = this._doc.getChannelHeight();\r\n\r\n\t\tif (this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\r\n\t\t\t// Add new channel boxes if needed\r\n\t\t\tfor (let y: number = this._renderedChannelCount; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tthis._grid[y] = [];\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Remove old channel boxes\r\n\t\t\tfor (let y: number = this._doc.song.getChannelCount(); y < this._renderedChannelCount; y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._grid.length = this._doc.song.getChannelCount();\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedBarCount != this._doc.song.barCount || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = this._renderedBarCount; x < this._doc.song.barCount; x++) {\r\n\t\t\t\t\tconst box: Box = new Box(y, x, y, ColorConfig.getChannelColor(this._doc.song, y).secondaryChannel);\r\n\t\t\t\t\tbox.setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t\tthis._boxContainer.appendChild(box.container);\r\n\t\t\t\t\tthis._grid[y][x] = box;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let x: number = this._doc.song.barCount; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._boxContainer.removeChild(this._grid[y][x].container);\r\n\t\t\t\t}\r\n\t\t\t\tthis._grid[y].length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update bar editor's SVG\r\n\t\t\t// this._upHighlight.setAttribute(\"d\", `M ${center} ${middle - tip} L ${center + width} ${middle - base} L ${center - width} ${middle - base} z`);\r\n\t\t\t//this._downHighlight.setAttribute(\"d\", `M ${center} ${middle + tip} L ${center + width} ${middle + base} L ${center - width} ${middle + base} z`);\r\n\r\n\t\t\tvar pathString = \"\";\r\n\r\n\t\t\tfor (let x: number = 0; x < this._doc.song.barCount; x++) {\r\n\t\t\t\tvar pathLeft = x * this._barWidth + 2;\r\n\t\t\t\tvar pathTop = 1;\r\n\t\t\t\tvar pathRight = x * this._barWidth + this._barWidth - 2;\r\n\t\t\t\tvar pathBottom = Config.barEditorHeight - 3;\r\n\r\n\t\t\t\tpathString += `M ${pathLeft} ${pathTop} H ${pathRight} V ${pathBottom} H ${pathLeft} V ${pathTop} Z `;\r\n\t\t\t}\r\n\r\n\t\t\tthis._barEditorPath.setAttribute(\"d\", pathString);\r\n\r\n\t\t\tif (this._renderedBarCount < this._doc.song.barCount) {\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t\tfor (var pos = this._renderedBarCount; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos] = SVG.text({ \"font-family\": \"sans-serif\", \"font-size\": \"8px\", \"text-anchor\": \"middle\", \"font-weight\": \"bold\", \"x\": (pos * this._barWidth + this._barWidth / 2) + \"px\", \"y\": \"7px\", fill: ColorConfig.secondaryText }, \"\" + (pos + 1));\r\n\t\t\t\t\tif (pos % 4 == 0) {\r\n\t\t\t\t\t\t// Highlighting every 4 bars\r\n\t\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"fill\", ColorConfig.primaryText);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._barNumberContainer.appendChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this._renderedBarCount > this._doc.song.barCount) {\r\n\t\t\t\tfor (var pos = this._renderedBarCount - 1; pos >= this._doc.song.barCount; pos--) {\r\n\t\t\t\t\tthis._barNumberContainer.removeChild(this._barNumbers[pos]);\r\n\t\t\t\t}\r\n\t\t\t\tthis._barNumbers.length = this._doc.song.barCount;\r\n\t\t\t}\r\n\r\n\t\t\t// Update x of bar editor numbers\r\n\t\t\tif (this._renderedBarWidth != this._barWidth) {\r\n\t\t\t\tfor (var pos = 0; pos < this._barNumbers.length; pos++) {\r\n\t\t\t\t\tthis._barNumbers[pos].setAttribute(\"x\", (pos * this._barWidth + this._barWidth / 2) + \"px\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis._renderedBarCount = this._doc.song.barCount;\r\n\t\t\tconst editorWidth = this._barWidth * this._doc.song.barCount;\r\n\t\t\tthis.container.style.width = editorWidth + \"px\";\r\n\t\t\tthis._svg.setAttribute(\"width\", editorWidth + \"\");\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedBarWidth != this._barWidth) {\r\n\t\t\tthis._renderedBarWidth = this._barWidth;\r\n\t\t\tfor (let y: number = 0; y < this._doc.song.getChannelCount(); y++) {\r\n\t\t\t\tfor (let x: number = 0; x < this._renderedBarCount; x++) {\r\n\t\t\t\t\tthis._grid[y][x].setSize(this._barWidth, this._channelHeight);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._mousePressed = false;\r\n\t\t}\r\n\r\n\t\tif (this._renderedChannelHeight != this._channelHeight || this._renderedChannelCount != this._doc.song.getChannelCount()) {\r\n\t\t\tthis._renderedChannelHeight = this._channelHeight;\r\n\t\t\tthis._renderedChannelCount = this._doc.song.getChannelCount();\r\n\t\t\tconst editorHeight: number = Config.barEditorHeight + this._doc.song.getChannelCount() * this._channelHeight;\r\n\t\t\tthis._svg.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis._playhead.setAttribute(\"height\", \"\" + editorHeight);\r\n\t\t\tthis.container.style.height = editorHeight + \"px\";\r\n\t\t}\r\n\r\n\t\tfor (let j: number = 0; j < this._doc.song.getChannelCount(); j++) {\r\n\t\t\tfor (let i: number = 0; i < this._renderedBarCount; i++) {\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(j, i);\r\n\t\t\t\tconst selected: boolean = (i == this._doc.bar && j == this._doc.channel);\r\n\t\t\t\tconst dim: boolean = (pattern == null || pattern.notes.length == 0);\r\n\r\n\t\t\t\tconst box: Box = this._grid[j][i];\r\n\t\t\t\tif (i < this._doc.song.barCount) {\r\n\t\t\t\t\tconst colors: ChannelColors = ColorConfig.getChannelColor(this._doc.song, j);\r\n\t\t\t\t\tbox.setIndex(this._doc.song.channels[j].bars[i], dim, selected, dim && !selected ? colors.secondaryChannel : colors.primaryChannel, j >= this._doc.song.pitchChannelCount && j < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount, j >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount);\r\n\t\t\t\t\tbox.container.style.visibility = \"visible\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbox.container.style.visibility = \"hidden\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._select.style.display = this._touchMode ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.selection.boxSelectionWidth > 1 || this._doc.selection.boxSelectionHeight > 1) {\r\n\t\t\t// TODO: This causes the selection rectangle to repaint every time the\r\n\t\t\t// editor renders and the selection is visible. Check if anything changed\r\n\t\t\t// before overwriting the attributes?\r\n\t\t\tthis._selectionRect.setAttribute(\"x\", String(this._barWidth * this._doc.selection.boxSelectionBar + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"y\", String(Config.barEditorHeight + this._channelHeight * this._doc.selection.boxSelectionChannel + 1));\r\n\t\t\tthis._selectionRect.setAttribute(\"width\", String(this._barWidth * this._doc.selection.boxSelectionWidth - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"height\", String(this._channelHeight * this._doc.selection.boxSelectionHeight - 2));\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"visible\");\r\n\t\t} else {\r\n\t\t\tthis._selectionRect.setAttribute(\"visibility\", \"hidden\");\r\n\t\t}\r\n\r\n\t\tthis._updatePreview();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\n//import {Layout} from \"./Layout\";\r\nimport { Channel, Instrument, ModSetting, ModStatus, Pattern } from \"../synth/synth\";\r\nimport { Config, InstrumentType } from \"../synth/SynthConfig\";\r\nimport { BarScrollBar } from \"./BarScrollBar\";\r\nimport { BeatsPerBarPrompt } from \"./BeatsPerBarPrompt\";\r\nimport { Change, ChangeGroup } from \"./Change\";\r\nimport { ChangeAlgorithm, ChangeChannelBar, ChangeChipWave, ChangeChannelOrder, ChangeChord, ChangeCustomWave, ChangeDetectKey, ChangeDetune, ChangeDrumsetEnvelope, ChangeEffects, ChangeFeedbackAmplitude, ChangeFeedbackEnvelope, ChangeFeedbackType, ChangeFilterCutoff, ChangeFilterEnvelope, ChangeFilterResonance, ChangeInterval, ChangeKey, ChangeNoiseWave, ChangeOperatorAmplitude, ChangeOperatorEnvelope, ChangeOperatorFrequency, ChangePan, ChangePasteInstrument, ChangePatternNumbers, ChangePatternsPerChannel, ChangePreset, ChangePulseEnvelope, ChangePulseWidth, ChangeRandomGeneratedInstrument, ChangeReverb, ChangeRhythm, ChangeScale, ChangeSong, ChangeSongTitle, ChangeTempo, ChangeTransition, ChangeVibrato, ChangeVibratoType, ChangeVolume, ChangeVibratoDepth, ChangeVibratoSpeed, ChangeVibratoDelay, ChangePanDelay, ChangeArpeggioSpeed, pickRandomPresetValue, ChangeFastTwoNoteArp, ChangeClicklessTransition, ChangeTieNoteTransition, ChangePatternSelection } from \"./changes\";\r\nimport { ChannelSettingsPrompt } from \"./ChannelSettingsPrompt\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { CustomChipPrompt } from \"./CustomChipPrompt\";\r\nimport { EditorConfig, isMobile, prettyNumber, Preset, PresetCategory } from \"./EditorConfig\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { HarmonicsEditor } from \"./HarmonicsEditor\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { InputBox, Slider } from \"./HTMLWrapper\";\r\nimport { ImportPrompt } from \"./ImportPrompt\";\r\nimport { LayoutPrompt } from \"./LayoutPrompt\";\r\nimport { LimiterPrompt } from \"./LimiterPrompt\";\r\nimport { LoopEditor } from \"./LoopEditor\";\r\nimport { MoveNotesSidewaysPrompt } from \"./MoveNotesSidewaysPrompt\";\r\nimport { MuteEditor } from \"./MuteEditor\";\r\nimport { OctaveScrollBar } from \"./OctaveScrollBar\";\r\nimport { PatternEditor } from \"./PatternEditor\";\r\nimport { Piano } from \"./Piano\";\r\nimport { Prompt } from \"./Prompt\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { SongDurationPrompt } from \"./SongDurationPrompt\";\r\nimport { SongRecoveryPrompt } from \"./SongRecoveryPrompt\";\r\nimport { SpectrumEditor } from \"./SpectrumEditor\";\r\nimport { ThemePrompt } from \"./ThemePrompt\";\r\nimport { TipPrompt } from \"./TipPrompt\";\r\nimport { TrackEditor } from \"./TrackEditor\";\r\n\r\n//namespace beepbox {\r\nconst { button, div, input, select, span, optgroup, option, canvas } = HTML;\r\n\r\nfunction buildOptions(menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tfor (let index: number = 0; index < items.length; index++) {\r\n\t\tmenu.appendChild(option({ value: index }, items[index]));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\n// Similar to the above, but adds a non-interactive header to the list.\r\n// @jummbus: Honestly not necessary with new HTML options interface, but not exactly necessary to change either!\r\n\r\nfunction buildHeaderedOptions(header: string, menu: HTMLSelectElement, items: ReadonlyArray<string | number>): HTMLSelectElement {\r\n\tmenu.appendChild(option({ selected: true, disabled: true, value: header }, header));\r\n\r\n\tfor (const item of items) {\r\n\t\tmenu.appendChild(option({ value: item }, item));\r\n\t}\r\n\treturn menu;\r\n}\r\n\r\nfunction buildPresetOptions(isNoise: boolean, idSet: string): HTMLSelectElement {\r\n\tconst menu: HTMLSelectElement = select({ id: idSet });\r\n\r\n\t// Show the \"spectrum\" custom type in both pitched and noise channels.\r\n\t//const customTypeGroup: HTMLElement = optgroup({label: EditorConfig.presetCategories[0].name});\r\n\tif (isNoise) {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.noise }, EditorConfig.valueToPreset(InstrumentType.noise)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.drumset }, EditorConfig.valueToPreset(InstrumentType.drumset)!.name));\r\n\t} else {\r\n\t\tmenu.appendChild(option({ value: InstrumentType.chip }, EditorConfig.valueToPreset(InstrumentType.chip)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.pwm }, EditorConfig.valueToPreset(InstrumentType.pwm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.harmonics }, EditorConfig.valueToPreset(InstrumentType.harmonics)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.spectrum }, EditorConfig.valueToPreset(InstrumentType.spectrum)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.fm }, EditorConfig.valueToPreset(InstrumentType.fm)!.name));\r\n\t\tmenu.appendChild(option({ value: InstrumentType.customChipWave }, EditorConfig.valueToPreset(InstrumentType.customChipWave)!.name));\r\n\t}\r\n\r\n\tconst randomGroup: HTMLElement = optgroup({ label: \"Randomize ▾\" });\r\n\trandomGroup.appendChild(option({ value: \"randomPreset\" }, \"Random Preset\"));\r\n\trandomGroup.appendChild(option({ value: \"randomGenerated\" }, \"Random Generated\"));\r\n\tmenu.appendChild(randomGroup);\r\n\r\n\r\n\tfor (let categoryIndex: number = 1; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n\t\tconst category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n\t\tconst group: HTMLElement = optgroup({ label: category.name + \" ▾\" });\r\n\t\tlet foundAny: boolean = false;\r\n\t\tfor (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n\t\t\tconst preset: Preset = category.presets[presetIndex];\r\n\t\t\tif ((preset.isNoise == true) == isNoise) {\r\n\t\t\t\tgroup.appendChild(option({ value: (categoryIndex << 6) + presetIndex }, preset.name));\r\n\t\t\t\tfoundAny = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Need to re-sort some elements for readability. Can't just do this in the menu, because indices are saved in URLs and would get broken if the ordering actually changed.\r\n\t\tif (category.name == \"String Presets\" && foundAny) {\r\n\r\n\t\t\t// Put violin 2 after violin 1\r\n\t\t\tlet moveViolin2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveViolin2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Flute Presets\" && foundAny) {\r\n\r\n\t\t\t// Put flute 2 after flute 1\r\n\t\t\tlet moveFlute2 = group.removeChild(group.children[11]);\r\n\t\t\tgroup.insertBefore(moveFlute2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (category.name == \"Keyboard Presets\" && foundAny) {\r\n\r\n\t\t\t// Put grand piano 2 after grand piano 1\r\n\t\t\tlet moveGrandPiano2 = group.removeChild(group.children[9]);\r\n\t\t\tgroup.insertBefore(moveGrandPiano2, group.children[1]);\r\n\t\t}\r\n\r\n\t\tif (foundAny) menu.appendChild(group);\r\n\t}\r\n\r\n\treturn menu;\r\n}\r\n\r\nfunction setSelectedValue(menu: HTMLSelectElement, value: number): void {\r\n\tconst stringValue = value.toString();\r\n\tif (menu.value != stringValue) menu.value = stringValue;\r\n\r\n\t// Change select2 value, if this select is a member of that class.\r\n\tif ($(menu).data('select2')) {\r\n\t\t$(menu).val(value).trigger('change.select2');\r\n\t}\r\n}\r\n\r\nclass CustomChipCanvas {\r\n\tprivate mouseDown: boolean;\r\n\tprivate continuousEdit: boolean;\r\n\tprivate lastX: number;\r\n\tprivate lastY: number;\r\n\tpublic newArray: Float64Array;\r\n\r\n\tprivate _change: Change | null = null;\r\n\r\n\tconstructor(public readonly canvas: HTMLCanvasElement, private readonly _doc: SongDocument, private readonly _getChange: (newArray: Float64Array) => Change) {\r\n\t\t//canvas.addEventListener(\"input\", this._whenInput);\r\n\t\t//canvas.addEventListener(\"change\", this._whenChange);\r\n\t\tcanvas.addEventListener(\"mousemove\", this._onMouseMove);\r\n\t\tcanvas.addEventListener(\"mousedown\", this._onMouseDown);\r\n\t\tcanvas.addEventListener(\"mouseup\", this._onMouseUp);\r\n\t\tcanvas.addEventListener(\"mouseleave\", this._onMouseUp);\r\n\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\t\tthis.lastX = 0;\r\n\t\tthis.lastY = 0;\r\n\r\n\t\tthis.newArray = new Float64Array(64);\r\n\r\n\t\t// Init waveform\r\n\t\tthis.redrawCanvas();\r\n\r\n\t}\r\n\r\n\tpublic redrawCanvas(): void {\r\n\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t// Black BG\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\tctx.fillRect(0, 0, 128, 52);\r\n\r\n\t\t// Mid-bar\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\tctx.fillRect(0, 25, 128, 2);\r\n\r\n\t\t// 25-75 bars\r\n\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\tctx.fillRect(0, 13, 128, 1);\r\n\t\tctx.fillRect(0, 39, 128, 1);\r\n\r\n\t\t// Waveform\r\n\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tfor (let x: number = 0; x < 64; x++) {\r\n\t\t\tvar y: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].customChipWave[x] + 26;\r\n\t\t\tctx.fillRect(x * 2, y - 2, 2, 4);\r\n\r\n\t\t\tthis.newArray[x] = y - 26;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _onMouseMove = (event: MouseEvent): void => {\r\n\t\tif (this.mouseDown) {\r\n\r\n\t\t\tvar x = (event.clientX || event.pageX) - this.canvas.getBoundingClientRect().left;\r\n\t\t\tvar y = Math.floor((event.clientY || event.pageY) - this.canvas.getBoundingClientRect().top);\r\n\r\n\t\t\tif (y < 2) y = 2;\r\n\t\t\tif (y > 50) y = 50;\r\n\r\n\t\t\tvar ctx = this.canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n\r\n\t\t\tif (this.continuousEdit == true && Math.abs(this.lastX - x) < 40) {\r\n\r\n\t\t\t\tvar lowerBound = (x < this.lastX) ? x : this.lastX;\r\n\t\t\t\tvar upperBound = (x < this.lastX) ? this.lastX : x;\r\n\r\n\t\t\t\tfor (let i = lowerBound; i <= upperBound; i += 2) {\r\n\r\n\t\t\t\t\tvar progress = (Math.abs(x - this.lastX) > 2.0) ? ((x > this.lastX) ?\r\n\t\t\t\t\t\t1.0 - ((i - lowerBound) / (upperBound - lowerBound))\r\n\t\t\t\t\t\t: ((i - lowerBound) / (upperBound - lowerBound))) : 0.0;\r\n\t\t\t\t\tvar j = Math.round(y + (this.lastY - y) * progress);\r\n\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 0, 2, 53);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 25, 2, 2);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 13, 2, 1);\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, 39, 2, 1);\r\n\t\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\t\tctx.fillRect(Math.floor(i / 2) * 2, j - 2, 2, 4);\r\n\r\n\t\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\t\tthis.newArray[Math.floor(i / 2)] = (j - 26);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 0, 2, 52);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--ui-widget-background\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 25, 2, 2);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputed(\"--track-editor-bg-pitch-dim\");\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 13, 2, 1);\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, 39, 2, 1);\r\n\t\t\t\tctx.fillStyle = ColorConfig.getComputedChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\t\t\t\tctx.fillRect(Math.floor(x / 2) * 2, y - 2, 2, 4);\r\n\r\n\t\t\t\t// Actually update current instrument's custom waveform\r\n\t\t\t\tthis.newArray[Math.floor(x / 2)] = (y - 26);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.continuousEdit = true;\r\n\t\t\tthis.lastX = x;\r\n\t\t\tthis.lastY = y;\r\n\r\n\t\t\t// Preview - update integral used for sound synthesis based on new array, not actual stored array. When mouse is released, real update will happen.\r\n\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\r\n\t\t\tlet sum: number = 0.0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tsum += this.newArray[i];\r\n\t\t\t}\r\n\t\t\tconst average: number = sum / this.newArray.length;\r\n\r\n\t\t\t// Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n\t\t\tlet cumulative: number = 0;\r\n\t\t\tlet wavePrev: number = 0;\r\n\t\t\tfor (let i: number = 0; i < this.newArray.length; i++) {\r\n\t\t\t\tcumulative += wavePrev;\r\n\t\t\t\twavePrev = this.newArray[i] - average;\r\n\t\t\t\tinstrument.customChipWaveIntegral[i] = cumulative;\r\n\t\t\t}\r\n\r\n\t\t\tinstrument.customChipWaveIntegral[64] = 0.0;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _onMouseDown = (event: MouseEvent): void => {\r\n\t\tthis.mouseDown = true;\r\n\r\n\t\t// Allow single-click edit\r\n\t\tthis._onMouseMove(event);\r\n\t}\r\n\tprivate _onMouseUp = (): void => {\r\n\t\tthis.mouseDown = false;\r\n\t\tthis.continuousEdit = false;\r\n\r\n\t\tthis._whenChange();\r\n\t}\r\n\r\n\tprivate _whenChange = (): void => {\r\n\t\tthis._change = this._getChange(this.newArray);\r\n\r\n\t\tthis._doc.record(this._change!);\r\n\r\n\t\tthis._change = null;\r\n\t};\r\n\r\n}\r\n\r\nexport class SongEditor {\r\n\tpublic prompt: Prompt | null = null;\r\n\r\n\tprivate readonly _patternEditorPrev: PatternEditor = new PatternEditor(this._doc, false, -1);\r\n\tprivate readonly _patternEditor: PatternEditor = new PatternEditor(this._doc, true, 0);\r\n\tprivate readonly _patternEditorNext: PatternEditor = new PatternEditor(this._doc, false, 1);\r\n\tprivate readonly _trackEditor: TrackEditor = new TrackEditor(this._doc, this);\r\n\tprivate readonly _muteEditor: MuteEditor = new MuteEditor(this._doc, this);\r\n\tprivate readonly _loopEditor: LoopEditor = new LoopEditor(this._doc);\r\n\tprivate readonly _piano: Piano = new Piano(this._doc);\r\n\tprivate readonly _octaveScrollBar: OctaveScrollBar = new OctaveScrollBar(this._doc, this._piano);\r\n\tprivate readonly _playButton: HTMLButtonElement = button({ style: \"width: 80px;\", type: \"button\" });\r\n\tprivate readonly _prevBarButton: HTMLButtonElement = button({ class: \"prevBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Previous Bar (left bracket)\" });\r\n\tprivate readonly _nextBarButton: HTMLButtonElement = button({ class: \"nextBarButton\", style: \"width: 40px;\", type: \"button\", title: \"Next Bar (right bracket)\" });\r\n\tprivate readonly _volumeSlider: Slider = new Slider(input({ title: \"main volume\", style: \"width: 5em; flex-grow: 1; margin: 0;\", type: \"range\", min: \"0\", max: \"75\", value: \"50\", step: \"1\" }), this._doc, null, false);\r\n\tprivate readonly _outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\r\n\tprivate readonly _outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\r\n\tprivate readonly _outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\r\n\tprivate readonly _stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\r\n\tprivate readonly _stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\r\n\tprivate readonly _stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\r\n\tprivate readonly _gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, this._stop1, this._stop2, this._stop3);\r\n\tprivate readonly _defs: SVGDefsElement = SVG.defs({}, this._gradient);\r\n\tprivate readonly _volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: visible; margin: auto; max-width: 20vw;`, width: \"160px\", height: \"100%\", preserveAspectRatio: \"none\", viewBox: \"0 0 160 12\" },\r\n\t\tthis._defs,\r\n\t\tthis._outVolumeBarBg,\r\n\t\tthis._outVolumeBar,\r\n\t\tthis._outVolumeCap,\r\n\t);\r\n\tprivate readonly _volumeBarBox: HTMLDivElement = div({ class: \"playback-volume-bar\", style: \"height: 12px; align-self: center;\" },\r\n\t\tthis._volumeBarContainer,\r\n\t);\r\n\tprivate readonly _fileMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"File\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"new\" }, \"+ New Blank Song\"),\r\n\t\toption({ value: \"import\" }, \"↑ Import Song...\"),\r\n\t\toption({ value: \"export\" }, \"↓ Export Song...\"),\r\n\t\toption({ value: \"copyUrl\" }, \"⎘ Copy Song URL\"),\r\n\t\toption({ value: \"shareUrl\" }, \"⤳ Share Song URL\"),\r\n\t\toption({ value: \"shortenUrl\" }, \"… Shorten Song URL\"),\r\n\t\toption({ value: \"viewPlayer\" }, \"▶ View in Song Player\"),\r\n\t\toption({ value: \"copyEmbed\" }, \"⎘ Copy HTML Embed Code\"),\r\n\t\toption({ value: \"songRecovery\" }, \"⚠ Recover Recent Song...\"),\r\n\t);\r\n\tprivate readonly _editMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Edit\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"undo\" }, \"Undo (Z)\"),\r\n\t\toption({ value: \"redo\" }, \"Redo (Y)\"),\r\n\t\toption({ value: \"copy\" }, \"Copy Pattern (C)\"),\r\n\t\toption({ value: \"pasteNotes\" }, \"Paste Pattern Notes (V)\"),\r\n\t\toption({ value: \"pasteNumbers\" }, \"Paste Pattern Numbers (⇧V)\"),\r\n\t\toption({ value: \"insertBars\" }, \"Insert Bar After Selection (⏎)\"),\r\n\t\toption({ value: \"deleteBars\" }, \"Delete Selected Bar (⌫)\"),\r\n\t\toption({ value: \"selectAll\" }, \"Select All (A)\"),\r\n\t\toption({ value: \"selectChannel\" }, \"Select Channel (⇧A)\"),\r\n\t\toption({ value: \"duplicatePatterns\" }, \"Duplicate Reused Patterns (D)\"),\r\n\t\toption({ value: \"transposeUp\" }, \"Move Notes Up (+)\"),\r\n\t\toption({ value: \"transposeDown\" }, \"Move Notes Down (-)\"),\r\n\t\toption({ value: \"moveNotesSideways\" }, \"Move All Notes Sideways... (W)\"),\r\n\t\toption({ value: \"beatsPerBar\" }, \"Change Beats Per Bar...\"),\r\n\t\toption({ value: \"barCount\" }, \"Change Song Length... (L)\"),\r\n\t\toption({ value: \"channelSettings\" }, \"Channel Settings... (Q)\"),\r\n\t\toption({ value: \"limiterSettings\" }, \"Limiter Settings... (⇧L)\"),\r\n\t);\r\n\tprivate readonly _optionsMenu: HTMLSelectElement = select({ style: \"width: 100%;\" },\r\n\t\toption({ selected: true, disabled: true, hidden: false }, \"Preferences\"), // todo: \"hidden\" should be true but looks wrong on mac chrome, adds checkmark next to first visible option. :(\r\n\t\toption({ value: \"autoPlay\" }, \"Auto Play On Load\"),\r\n\t\toption({ value: \"autoFollow\" }, \"Auto Follow Track\"),\r\n\t\toption({ value: \"enableNotePreview\" }, \"Preview Added Notes\"),\r\n\t\toption({ value: \"showLetters\" }, \"Show Piano Keys\"),\r\n\t\toption({ value: \"showFifth\" }, 'Highlight \"Fifth\" Notes'),\r\n\t\toption({ value: \"showChannels\" }, \"Show All Channels\"),\r\n\t\toption({ value: \"showScrollBar\" }, \"Octave Scroll Bar\"),\r\n\t\toption({ value: \"alwaysFineNoteVol\" }, \"Always Fine Note Vol.\"),\r\n\t\toption({ value: \"enableChannelMuting\" }, \"Enable Channel Muting\"),\r\n\t\toption({ value: \"displayBrowserUrl\" }, \"Display Song Data in URL\"),\r\n\t\toption({ value: \"displayVolumeBar\" }, \"Show Playback Volume\"),\r\n\t\toption({ value: \"fullScreen\" }, \"Set Layout...\"),\r\n\t\toption({ value: \"colorTheme\" }, \"Set Theme...\"),\r\n\t\t//option({value: \"alwaysShowSettings\"}, \"Customize All Instruments\"),\r\n\t);\r\n\tprivate readonly _scaleSelect: HTMLSelectElement = buildOptions(select(), Config.scales.map(scale => scale.name));\r\n\tprivate readonly _keySelect: HTMLSelectElement = buildOptions(select(), Config.keys.map(key => key.name).reverse());\r\n\tprivate readonly _tempoSlider: Slider = new Slider(input({ style: \"margin: 0; vertical-align: middle;\", type: \"range\", min: \"30\", max: \"320\", value: \"160\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeTempo(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _tempoStepper: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; margin-left: 0.4em; vertical-align: middle;\", type: \"number\", step: \"1\" });\r\n\tprivate readonly _reverbSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.reverbRange - 1, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeReverb(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _rhythmSelect: HTMLSelectElement = buildOptions(select(), Config.rhythms.map(rhythm => rhythm.name));\r\n\tprivate readonly _pitchedPresetSelect: HTMLSelectElement = buildPresetOptions(false, \"pitchPresetSelect\");\r\n\tprivate readonly _drumPresetSelect: HTMLSelectElement = buildPresetOptions(true, \"drumPresetSelect\");\r\n\tprivate readonly _algorithmSelect: HTMLSelectElement = buildOptions(select(), Config.algorithms.map(algorithm => algorithm.name));\r\n\tprivate readonly _algorithmSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"algorithm\") }, \"Algorithm: \"), div({ class: \"selectContainer\" }, this._algorithmSelect));\r\n\tprivate readonly _instrumentSelect: HTMLSelectElement = select();\r\n\tprivate readonly _instrumentSelectRow: HTMLDivElement = div({ class: \"selectRow\", style: \"display: none;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentIndex\") }, \"Instrument: \"), div({ class: \"selectContainer\" }, this._instrumentSelect));\r\n\tprivate readonly _instrumentVolumeSlider: Slider = new Slider(input({ style: \"margin: 0; position: sticky;\", type: \"range\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVolume(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _instrumentVolumeSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%\", id: \"volumeSliderInputBox\", type: \"number\", step: \"1\", min: Math.floor(-Config.volumeRange / 2), max: Math.floor(Config.volumeRange / 2), value: \"0\" });\r\n\tprivate readonly _instrumentVolumeSliderTip: HTMLDivElement = div({ class: \"selectRow\", style: \"height: 1em\" }, span({ class: \"tip\", style: \"font-size: smaller;\", onclick: () => this._openPrompt(\"instrumentVolume\") }, \"Volume: \"));\r\n\tprivate readonly _instrumentVolumeSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \";\" }, span({ class: \"tip\" }, this._instrumentVolumeSliderTip)),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._instrumentVolumeSliderInputBox),\r\n\t), this._instrumentVolumeSlider.container);\r\n\tprivate readonly _panSlider: Slider = new Slider(input({ style: \"margin: 0;\", position: \"sticky;\", type: \"range\", min: \"0\", max: Config.panMax, value: Config.panCenter, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePan(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _panDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(1) }, \"▼\");\r\n\tprivate readonly _panSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"panSliderInputBox\", type: \"number\", step: \"1\", min: \"0\", max: \"100\", value: \"0\" });\r\n\tprivate readonly _panSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", tabindex: \"0\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"pan\") }, \"Pan: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._panSliderInputBox),\r\n\t), this._panDropdown, this._panSlider.container);\r\n\tprivate readonly _panDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstPanDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePanDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _panDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"panDelay\") }, \"Delay:\"), this._panDelaySlider.container);\r\n\tprivate readonly _panDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._panDelayRow);\r\n\tprivate readonly _detuneSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: Config.detuneMin, max: Config.detuneMax, value: 0, step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeDetune(this._doc, oldValue, newValue), true);\r\n\tprivate readonly _detuneSliderInputBox: HTMLInputElement = input({ style: \"width: 4em; font-size: 80%; \", id: \"detuneSliderInputBox\", type: \"number\", step: \"1\", min: \"\" + Config.detuneMin, max: \"\" + Config.detuneMax, value: \"0\" });\r\n\tprivate readonly _detuneSliderRow: HTMLDivElement = div({ class: \"selectRow\" }, div({},\r\n\t\tspan({ class: \"tip\", style: \"height:1em; font-size: smaller;\", onclick: () => this._openPrompt(\"detune\") }, \"Detune: \"),\r\n\t\tdiv({ style: \"color: \" + ColorConfig.secondaryText + \"; margin-top: -3px;\" }, this._detuneSliderInputBox),\r\n\t), this._detuneSlider.container);\r\n\tprivate readonly _chipWaveSelect: HTMLSelectElement = buildOptions(select(), Config.chipWaves.map(wave => wave.name));\r\n\tprivate readonly _chipNoiseSelect: HTMLSelectElement = buildOptions(select(), Config.chipNoises.map(wave => wave.name));\r\n\tprivate readonly _chipWaveSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipWave\") }, \"Wave: \"), div({ class: \"selectContainer\" }, this._chipWaveSelect));\r\n\tprivate readonly _chipNoiseSelectRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chipNoise\") }, \"Noise: \"), div({ class: \"selectContainer\" }, this._chipNoiseSelect));\r\n\tprivate readonly _transitionSelect: HTMLSelectElement = buildOptions(select(), Config.transitions.map(transition => transition.name));\r\n\tprivate readonly _transitionDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(3) }, \"▼\");\r\n\tprivate readonly _transitionRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"transition\") }, \"Transition:\"), this._transitionDropdown, div({ class: \"selectContainer\" }, this._transitionSelect));\r\n\tprivate readonly _tieNoteTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _tieNoteTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"transitionBar\") }, \"Tie Over Bars:\"), this._tieNoteTransitionBox);\r\n\tprivate readonly _clicklessTransitionBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _clicklessTransitionRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"clicklessTransition\") }, \"Clickless:\"), this._clicklessTransitionBox);\r\n\tprivate readonly _transitionDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._tieNoteTransitionRow, this._clicklessTransitionRow);\r\n\tprivate readonly _effectsSelect: HTMLSelectElement = buildOptions(select(), Config.effectsNames);\r\n\tprivate readonly _filterCutoffSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterCutoffRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterCutoff(this._doc, oldValue, newValue), false);\r\n\tprivate _filterCutoffRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Cutoff Frequency\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterCutoff\") }, \"Filter Cut:\"), this._filterCutoffSlider.container);\r\n\tprivate readonly _filterResonanceSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: Config.filterResonanceRange - 1, value: \"6\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFilterResonance(this._doc, oldValue, newValue), false);\r\n\tprivate _filterResonanceRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Peak Resonance\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterResonance\") }, \"Filter Peak:\"), this._filterResonanceSlider.container);\r\n\tprivate readonly _filterEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _filterEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Low-pass Filter Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"filterEnvelope\") }, \"Filter Env:\"), div({ class: \"selectContainer\" }, this._filterEnvelopeSelect));\r\n\tprivate readonly _pulseEnvelopeSelect: HTMLSelectElement = buildOptions(select(), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate _pulseEnvelopeRow: HTMLDivElement = div({ class: \"selectRow\", title: \"Pulse Width Modulator Envelope\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseEnvelope\") }, \"Pulse Env:\"), div({ class: \"selectContainer\" }, this._pulseEnvelopeSelect));\r\n\tprivate readonly _pulseWidthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"1\", max: Config.pulseWidthRange, value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangePulseWidth(this._doc, oldValue, newValue), false);\r\n\tprivate _pulseWidthRow: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"pulseWidth\") }, \"Pulse Width:\"), this._pulseWidthSlider.container);\r\n\tprivate readonly _intervalSelect: HTMLSelectElement = buildOptions(select(), Config.intervals.map(interval => interval.name));\r\n\tprivate readonly _intervalSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"interval\") }, \"Interval:\"), div({ class: \"selectContainer\" }, this._intervalSelect));\r\n\tprivate readonly _chordSelect: HTMLSelectElement = buildOptions(select(), Config.chords.map(chord => chord.name));\r\n\tprivate readonly _chordDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(2) }, \"▼\");\r\n\tprivate readonly _chordSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"chords\") }, \"Chords:\"), this._chordDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._chordSelect));\r\n\tprivate readonly _arpeggioSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstArpeggioSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeArpeggioSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _arpeggioSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"arpeggioSpeed\") }, \"Speed:\"), this._arpeggioSpeedSlider.container);\r\n\tprivate readonly _twoNoteArpBox: HTMLInputElement = input({ type: \"checkbox\", style: \"width: 1em; padding: 0; margin-right: 4em;\" });\r\n\tprivate readonly _twoNoteArpRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"twoNoteArpeggio\") }, \"Fast Two-Note:\"), this._twoNoteArpBox);\r\n\tprivate readonly _chordDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._arpeggioSpeedRow, this._twoNoteArpRow);\r\n\tprivate readonly _vibratoSelect: HTMLSelectElement = buildOptions(select(), Config.vibratos.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoDropdown: HTMLButtonElement = button({ style: \"margin-left:0em; height:1.5em; width: 10px; padding: 0px; font-size: 8px;\", onclick: () => this._toggleDropdownMenu(0) }, \"▼\");\r\n\tprivate readonly _vibratoSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"vibrato\") }, \"Vibrato:\"), this._vibratoDropdown, div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoSelect));\r\n\tprivate readonly _vibratoDepthSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDepth), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDepth(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDepthRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDepth\") }, \"Depth:\"), this._vibratoDepthSlider.container);\r\n\tprivate readonly _vibratoSpeedSlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoSpeed), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoSpeed(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoSpeedRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoSpeed\") }, \"Speed:\"), this._vibratoSpeedSlider.container);\r\n\tprivate readonly _vibratoDelaySlider: Slider = new Slider(input({ style: \"margin: 0;\", type: \"range\", min: \"0\", max: this._doc.song.mstMaxVols.get(ModSetting.mstVibratoDelay), value: \"0\", step: \"1\" }), this._doc, (oldValue: number, newValue: number) => new ChangeVibratoDelay(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _vibratoDelayRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoDelay\") }, \"Delay:\"), this._vibratoDelaySlider.container);\r\n\tprivate readonly _vibratoTypeSelect: HTMLSelectElement = buildOptions(select(), Config.vibratoTypes.map(vibrato => vibrato.name));\r\n\tprivate readonly _vibratoTypeSelectRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", style: \"margin-left:10px;\", onclick: () => this._openPrompt(\"vibratoType\") }, \"Type:\"), div({ class: \"selectContainer\", style: \"width: 61.5%;\" }, this._vibratoTypeSelect));\r\n\tprivate readonly _vibratoDropdownGroup: HTMLElement = div({ class: \"editor-controls\" }, this._vibratoDepthRow, this._vibratoSpeedRow, this._vibratoDelayRow, this._vibratoTypeSelectRow);\r\n\tprivate readonly _phaseModGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _feedbackTypeSelect: HTMLSelectElement = buildOptions(select(), Config.feedbacks.map(feedback => feedback.name));\r\n\tprivate readonly _feedbackRow1: HTMLDivElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"feedbackType\") }, \"Feedback:\"), div({ class: \"selectContainer\" }, this._feedbackTypeSelect));\r\n\tprivate readonly _spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, null);\r\n\tprivate readonly _spectrumRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"spectrum\") }, \"Spectrum:\"), this._spectrumEditor.container);\r\n\tprivate readonly _harmonicsEditor: HarmonicsEditor = new HarmonicsEditor(this._doc);\r\n\tprivate readonly _harmonicsRow: HTMLElement = div({ class: \"selectRow\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"harmonics\") }, \"Harmonics:\"), this._harmonicsEditor.container);\r\n\tprivate readonly _drumsetGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modulatorGroup: HTMLElement = div({ class: \"editor-controls\" });\r\n\tprivate readonly _modNameRows: HTMLElement[];\r\n\tprivate readonly _modChannelBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modInstrumentBoxes: HTMLSelectElement[];\r\n\tprivate readonly _modSetRows: HTMLElement[];\r\n\tprivate readonly _modSetBoxes: HTMLSelectElement[];\r\n\r\n\tprivate readonly _instrumentCopyButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"copyButton\" }, [\r\n\t\t\"Copy\",\r\n\t\t// Copy icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"-5 -21 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\", fill: \"currentColor\" }),\r\n\t\t]),\r\n\t]);\r\n\tprivate readonly _instrumentPasteButton: HTMLButtonElement = button({ style: \"max-width:86px;\", class: \"pasteButton\" }, [\r\n\t\t\"Paste\",\r\n\t\t// Paste icon:\r\n\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 50%; margin-top: -1em; pointer-events: none;\", width: \"2em\", height: \"2em\", viewBox: \"0 0 26 26\" }, [\r\n\t\t\tSVG.path({ d: \"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\", stroke: \"currentColor\", fill: \"none\" }),\r\n\t\t\tSVG.path({ d: \"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\", fill: \"currentColor\", }),\r\n\t\t]),\r\n\t]);\r\n\r\n\tprivate readonly _customWaveDrawCanvas: CustomChipCanvas = new CustomChipCanvas(canvas({ width: 128, height: 52, style: \"border:2px solid \" + ColorConfig.uiWidgetBackground, id: \"customWaveDrawCanvas\" }), this._doc, (newArray: Float64Array) => new ChangeCustomWave(this._doc, newArray));\r\n\tprivate readonly _customWavePresetDrop: HTMLSelectElement = buildHeaderedOptions(\"Load Preset\", select({ style: \"width: 50%; height:1.5em; text-align: center; text-align-last: center;\" }),\r\n\t\tConfig.chipWaves.map(wave => wave.name)\r\n\t);\r\n\tprivate readonly _customWaveZoom: HTMLButtonElement = button({ style: \"margin-left:0.5em; height:1.5em; max-width: 20px;\", onclick: () => this._openPrompt(\"customChipSettings\") }, \"+\");\r\n\r\n\tprivate readonly _customWaveDraw: HTMLDivElement = div({ style: \"height:80px; margin-top:10px; margin-bottom:5px\" }, [\r\n\t\tdiv({ style: \"height:54px; display:flex; justify-content:center;\" }, [this._customWaveDrawCanvas.canvas]),\r\n\t\tdiv({ style: \"margin-top:5px; display:flex; justify-content:center;\" }, [this._customWavePresetDrop, this._customWaveZoom]),\r\n\t]);\r\n\r\n\tprivate readonly _songTitleInputBox: InputBox = new InputBox(input({ style: \"font-weight:bold; border:none; width: 100%; background-color:${ColorConfig.editorBackground}; color:${ColorConfig.primaryText}; text-align:center\", maxlength: \"30\", type: \"text\", value: EditorConfig.versionDisplayName }), this._doc, (oldValue: string, newValue: string) => new ChangeSongTitle(this._doc, oldValue, newValue));\r\n\r\n\r\n\tprivate readonly _feedbackAmplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Feedback Amplitude\" }), this._doc, (oldValue: number, newValue: number) => new ChangeFeedbackAmplitude(this._doc, oldValue, newValue), false);\r\n\tprivate readonly _feedbackEnvelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Feedback Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\tprivate readonly _feedbackRow2: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\tdiv({ style: \"width: 3em; margin-right: .3em;\" }),\r\n\t\tthis._feedbackAmplitudeSlider.container,\r\n\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, this._feedbackEnvelopeSelect),\r\n\t);\r\n\t/*\r\n\t\t\t* @jummbus - my very real, valid reason for cutting this button: I don't like it.\r\n\t\t\t* \r\n\tprivate readonly _customizeInstrumentButton: HTMLButtonElement = button({type: \"button\", style: \"margin: 2px 0\"},\r\n\r\n\t\t\"Customize Instrument\",\r\n\t);\r\n\t\t*/\r\n\tprivate readonly _customInstrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._chipWaveSelectRow,\r\n\t\tthis._chipNoiseSelectRow,\r\n\t\tthis._detuneSliderRow,\r\n\t\tthis._customWaveDraw,\r\n\t\tthis._filterCutoffRow,\r\n\t\tthis._filterResonanceRow,\r\n\t\tthis._filterEnvelopeRow,\r\n\t\tthis._transitionRow,\r\n\t\tthis._transitionDropdownGroup,\r\n\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"effects\") }, \"Effects:\"),\r\n\t\t\tdiv({ class: \"selectContainer\" }, this._effectsSelect),\r\n\t\t),\r\n\t\tthis._chordSelectRow,\r\n\t\tthis._chordDropdownGroup,\r\n\t\tthis._vibratoSelectRow,\r\n\t\tthis._vibratoDropdownGroup,\r\n\t\tthis._intervalSelectRow,\r\n\t\tthis._algorithmSelectRow,\r\n\t\tthis._phaseModGroup,\r\n\t\tthis._feedbackRow1,\r\n\t\tthis._feedbackRow2,\r\n\t\tthis._spectrumRow,\r\n\t\tthis._harmonicsRow,\r\n\t\tthis._drumsetGroup,\r\n\t\tthis._pulseEnvelopeRow,\r\n\t\tthis._pulseWidthRow,\r\n\t);\r\n\tprivate readonly _instrumentCopyGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tdiv({ class: \"selectRow\" },\r\n\t\t\tthis._instrumentCopyButton,\r\n\t\t\tthis._instrumentPasteButton,\r\n\t\t),\r\n\t);\r\n\tprivate readonly _instrumentSettingsTextRow: HTMLDivElement = div({ id: \"instrumentSettingsText\", style: `margin: 3px 0; max-width: 15em; text-align: center; color: ${ColorConfig.secondaryText};` },\r\n\t\t\"Instrument Settings\"\r\n\t);\r\n\tprivate readonly _instrumentSettingsGroup: HTMLDivElement = div({ class: \"editor-controls\" },\r\n\t\tthis._instrumentSettingsTextRow,\r\n\t\tthis._instrumentSelectRow,\r\n\t\tdiv({ class: \"selectRow\", id: \"typeSelectRow\" },\r\n\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"instrumentType\") }, \"Type: \"),\r\n\t\t\tdiv(\r\n\t\t\t\tdiv({ class: \"pitchSelect\" }, this._pitchedPresetSelect),\r\n\t\t\t\tdiv({ class: \"drumSelect\" }, this._drumPresetSelect)\r\n\t\t\t),\r\n\t\t),\r\n\t\tthis._instrumentVolumeSliderRow,\r\n\t\tthis._panSliderRow,\r\n\t\tthis._panDropdownGroup,\r\n\t\t//this._customizeInstrumentButton,\r\n\t\tthis._customInstrumentSettingsGroup,\r\n\t);\r\n\tprivate readonly _usedPatternIndicator: SVGElement = SVG.path({ d: \"M -6 -6 H 6 V 6 H -6 V -6 M -2 -3 L -2 -3 L -1 -4 H 1 V 4 H -1 V -1.2 L -1.2 -1 H -2 V -3 z\", fill: ColorConfig.indicatorSecondary, \"fill-rule\": \"evenodd\" });\r\n\tprivate readonly _usedInstrumentIndicator: SVGElement = SVG.path({ d: \"M -6 -0.8 H -3.8 V -6 H 0.8 V 4.4 H 2.2 V -0.8 H 6 V 0.8 H 3.8 V 6 H -0.8 V -4.4 H -2.2 V 0.8 H -6 z\", fill: ColorConfig.indicatorSecondary });\r\n\r\n\tprivate readonly _promptContainer: HTMLDivElement = div({ class: \"promptContainer\", style: \"display: none;\" });\r\n\tprivate readonly _patternEditorRow: HTMLDivElement = div({ style: \"flex: 1; height: 100%; display: flex; overflow: hidden; justify-content: center;\" },\r\n\t\tthis._patternEditorPrev.container,\r\n\t\tthis._patternEditor.container,\r\n\t\tthis._patternEditorNext.container,\r\n\t);\r\n\tprivate readonly _patternArea: HTMLDivElement = div({ class: \"pattern-area\" },\r\n\t\tthis._piano.container,\r\n\t\tthis._patternEditorRow,\r\n\t\tthis._octaveScrollBar.container,\r\n\t);\r\n\tprivate readonly _trackContainer: HTMLDivElement = div({ class: \"trackContainer\" },\r\n\t\tthis._trackEditor.container,\r\n\t\tthis._loopEditor.container,\r\n\t);\r\n\tprivate readonly _trackAndMuteContainer: HTMLDivElement = div({ class: \"trackAndMuteContainer\" },\r\n\t\tthis._muteEditor.container,\r\n\t\tthis._trackContainer,\r\n\t);\r\n\tpublic readonly _barScrollBar: BarScrollBar = new BarScrollBar(this._doc, this._trackContainer);\r\n\tprivate readonly _trackArea: HTMLDivElement = div({ class: \"track-area\" },\r\n\t\tthis._trackAndMuteContainer,\r\n\t\tthis._barScrollBar.container,\r\n\t);\r\n\r\n\tpublic readonly _settingsArea: HTMLDivElement = div({ class: \"settings-area noSelection\" },\r\n\t\tdiv({ class: \"version-area\" },\r\n\t\t\tdiv({ style: \"text-align: center; color: ${ColorConfig.secondaryText};\" }, [this._songTitleInputBox.input]),\r\n\t\t),\r\n\t\tdiv({ class: \"play-pause-area\" },\r\n\t\t\tthis._volumeBarBox,\r\n\t\t\tdiv({ class: \"playback-bar-controls\" },\r\n\t\t\t\tthis._playButton,\r\n\t\t\t\tthis._prevBarButton,\r\n\t\t\t\tthis._nextBarButton,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"playback-volume-controls\" },\r\n\t\t\t\tspan({ class: \"volume-speaker\" }),\r\n\t\t\t\tthis._volumeSlider.container,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"menu-area\" },\r\n\t\t\tdiv({ class: \"selectContainer menu file\" },\r\n\t\t\t\tthis._fileMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu edit\" },\r\n\t\t\t\tthis._editMenu,\r\n\t\t\t),\r\n\t\t\tdiv({ class: \"selectContainer menu preferences\" },\r\n\t\t\t\tthis._optionsMenu,\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"song-settings-area\" },\r\n\t\t\tdiv({ class: \"editor-controls\" },\r\n\t\t\t\tdiv({ class: \"editor-song-settings\" },\r\n\t\t\t\t\tdiv({ style: \"margin: 3px 0; position: relative; text-align: center; color: ${ColorConfig.secondaryText};\" },\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position:absolute; left: 0; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedPattern\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"0.5em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedPatternIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\tdiv({ class: \"tip\", style: \"flex-shrink: 0; position: absolute; left: 14px; top: 0; width: 12px; height: 12px\", onclick: () => this._openPrompt(\"usedInstrument\") },\r\n\t\t\t\t\t\t\tSVG.svg({ style: \"flex-shrink: 0; position: absolute; left: 0; top: 0; pointer-events: none;\", width: \"12px\", height: \"12px\", \"margin-right\": \"1em\", viewBox: \"-6 -6 12 12\" },\r\n\t\t\t\t\t\t\t\tthis._usedInstrumentIndicator,\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t\"Song Settings\"\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"scale\") }, \"Scale: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._scaleSelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"key\") }, \"Key: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._keySelect),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"tempo\") }, \"Tempo: \"),\r\n\t\t\t\t\tspan({ style: \"display: flex;\" },\r\n\t\t\t\t\t\tthis._tempoSlider.container,\r\n\t\t\t\t\t\tthis._tempoStepper,\r\n\t\t\t\t\t),\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"reverb\") }, \"Reverb: \"),\r\n\t\t\t\t\tthis._reverbSlider.container,\r\n\t\t\t\t),\r\n\t\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"rhythm\") }, \"Rhythm: \"),\r\n\t\t\t\t\tdiv({ class: \"selectContainer\" }, this._rhythmSelect),\r\n\t\t\t\t),\r\n\t\t\t),\r\n\t\t),\r\n\t\tdiv({ class: \"instrument-settings-area\" },\r\n\t\t\tthis._instrumentSettingsGroup,\r\n\t\t\tthis._modulatorGroup,\r\n\t\t),\r\n\t);\r\n\r\n\tpublic readonly mainLayer: HTMLDivElement = div({ class: \"beepboxEditor\", tabIndex: \"0\" },\r\n\t\tthis._patternArea,\r\n\t\tthis._trackArea,\r\n\t\tthis._settingsArea,\r\n\t\tthis._promptContainer,\r\n\t);\r\n\r\n\tprivate _wasPlaying: boolean = false;\r\n\tprivate _currentPromptName: string | null = null;\r\n\tprivate readonly _operatorRows: HTMLDivElement[] = []\r\n\tprivate readonly _operatorAmplitudeSliders: Slider[] = []\r\n\tprivate readonly _operatorEnvelopeSelects: HTMLSelectElement[] = []\r\n\tprivate readonly _operatorFrequencySelects: HTMLSelectElement[] = []\r\n\tprivate readonly _drumsetSpectrumEditors: SpectrumEditor[] = [];\r\n\tprivate readonly _drumsetEnvelopeSelects: HTMLSelectElement[] = [];\r\n\tprivate _showModSliders: boolean[] = [];\r\n\tprivate _newShowModSliders: boolean[] = [];\r\n\tprivate _modSliderValues: number[] = [];\r\n\tprivate _hasActiveModSliders: boolean = false;\r\n\tprivate _modSliderHandle: number = 0;\r\n\tprivate _volumeHandle: number = 0;\r\n\tprivate _barScrollbarHandle: number = 0;\r\n\r\n\tprivate _openPanDropdown: boolean = false;\r\n\tprivate _openVibratoDropdown: boolean = false;\r\n\tprivate _openChordDropdown: boolean = false;\r\n\tprivate _openTransitionDropdown: boolean = false;\r\n\r\n\tprivate outVolumeHistoricTimer: number = 0;\r\n\tprivate outVolumeHistoricCap: number = 0;\r\n\tprivate lastOutVolumeCap: number = 0;\r\n\r\n\tconstructor(private _doc: SongDocument) {\r\n\t\tthis._doc.notifier.watch(this.whenUpdated);\r\n\t\twindow.addEventListener(\"resize\", this.whenUpdated);\r\n\r\n\t\tif (!(\"share\" in navigator)) {\r\n\t\t\tthis._fileMenu.removeChild(this._fileMenu.querySelector(\"[value='shareUrl']\")!);\r\n\t\t}\r\n\r\n\t\tthis._scaleSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceScale\" }, \"Snap Notes To Scale\"),\r\n\t\t));\r\n\t\tthis._keySelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"detectKey\" }, \"Detect Key\"),\r\n\t\t));\r\n\t\tthis._rhythmSelect.appendChild(optgroup({ label: \"Edit\" },\r\n\t\t\toption({ value: \"forceRhythm\" }, \"Snap Notes To Rhythm\"),\r\n\t\t));\r\n\r\n\t\tthis._vibratoSelect.appendChild(option({ hidden: true, value: 5 }, \"custom\"));\r\n\r\n\r\n\t\tthis._showModSliders = new Array<boolean>(ModSetting.mstMaxValue);\r\n\t\tthis._modSliderValues = new Array<number>(ModSetting.mstMaxValue);\r\n\r\n\t\tthis._phaseModGroup.appendChild(div({ class: \"operatorRow\", style: \"color: ${ColorConfig.secondaryText}; height: 1em; margin-top: 0.5em;\" },\r\n\t\t\tdiv({ style: \"margin-right: .1em; visibility: hidden;\" }, 1 + \".\"),\r\n\t\t\tdiv({ style: \"width: 3em; margin-right: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorFrequency\") }, \"Freq:\"),\r\n\t\t\tdiv({ style: \"width: 4em; margin: 0;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorVolume\") }, \"Volume:\"),\r\n\t\t\tdiv({ style: \"width: 5em; margin-left: .3em;\", class: \"tip\", onclick: () => this._openPrompt(\"operatorEnvelope\") }, \"Envelope:\"),\r\n\t\t));\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tconst operatorIndex: number = i;\r\n\t\t\tconst operatorNumber: HTMLDivElement = div({ style: \"margin-right: .1em; color: \" + ColorConfig.secondaryText + \";\" }, i + 1 + \".\");\r\n\t\t\tconst frequencySelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Frequency\" }), Config.operatorFrequencies.map(freq => freq.name));\r\n\t\t\tconst amplitudeSlider: Slider = new Slider(input({ style: \"margin: 0; width: 4em;\", type: \"range\", min: \"0\", max: Config.operatorAmplitudeMax, value: \"0\", step: \"1\", title: \"Volume\" }), this._doc, (oldValue: number, newValue: number) => new ChangeOperatorAmplitude(this._doc, operatorIndex, oldValue, newValue), false);\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"operatorRow\" },\r\n\t\t\t\toperatorNumber,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 3em; margin-right: .3em;\" }, frequencySelect),\r\n\t\t\t\tamplitudeSlider.container,\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-left: .3em;\" }, envelopeSelect),\r\n\t\t\t);\r\n\t\t\tthis._phaseModGroup.appendChild(row);\r\n\t\t\tthis._operatorRows[i] = row;\r\n\t\t\tthis._operatorAmplitudeSliders[i] = amplitudeSlider;\r\n\t\t\tthis._operatorEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tthis._operatorFrequencySelects[i] = frequencySelect;\r\n\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorEnvelope(this._doc, operatorIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\t\t\tfrequencySelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeOperatorFrequency(this._doc, operatorIndex, frequencySelect.selectedIndex));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis._drumsetGroup.appendChild(\r\n\t\t\tdiv({ class: \"selectRow\" },\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetEnvelope\") }, \"Envelope:\"),\r\n\t\t\t\tspan({ class: \"tip\", onclick: () => this._openPrompt(\"drumsetSpectrum\") }, \"Spectrum:\"),\r\n\t\t\t),\r\n\t\t);\r\n\t\tfor (let i: number = Config.drumCount - 1; i >= 0; i--) {\r\n\t\t\tconst drumIndex: number = i;\r\n\t\t\tconst spectrumEditor: SpectrumEditor = new SpectrumEditor(this._doc, drumIndex);\r\n\t\t\tspectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\t\tthis._drumsetSpectrumEditors[i] = spectrumEditor;\r\n\r\n\t\t\tconst envelopeSelect: HTMLSelectElement = buildOptions(select({ style: \"width: 100%;\", title: \"Filter Envelope\" }), Config.envelopes.map(envelope => envelope.name));\r\n\t\t\tthis._drumsetEnvelopeSelects[i] = envelopeSelect;\r\n\t\t\tenvelopeSelect.addEventListener(\"change\", () => {\r\n\t\t\t\tthis._doc.record(new ChangeDrumsetEnvelope(this._doc, drumIndex, envelopeSelect.selectedIndex));\r\n\t\t\t});\r\n\r\n\t\t\tconst row: HTMLDivElement = div({ class: \"selectRow\" },\r\n\t\t\t\tdiv({ class: \"selectContainer\", style: \"width: 5em; margin-right: .3em;\" }, envelopeSelect),\r\n\t\t\t\tthis._drumsetSpectrumEditors[i].container,\r\n\t\t\t);\r\n\t\t\tthis._drumsetGroup.appendChild(row);\r\n\t\t}\r\n\r\n\t\tthis._modNameRows = [];\r\n\t\tthis._modChannelBoxes = [];\r\n\t\tthis._modInstrumentBoxes = [];\r\n\t\tthis._modSetRows = [];\r\n\t\tthis._modSetBoxes = [];\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\tlet modChannelBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor; text-overflow:ellipsis;\" });\r\n\t\t\tlet modInstrumentBox: HTMLSelectElement = select({ style: \"width: 100%; color: currentColor;\" });\r\n\r\n\t\t\tlet modNameRow: HTMLDivElement = div({ class: \"operatorRow\", style: \"height: 1em; margin-bottom: 0.65em;\" },\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1em; max-width: 5.4em; min-width: 5.4em;\", id: \"modChannelText\" + mod, onclick: () => this._openPrompt(\"modChannel\") }, \"Ch:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modChannelBox),\r\n\t\t\t\tdiv({ class: \"tip\", style: \"width: 1.2em; margin-left: 0.8em;\", id: \"modInstrumentText\" + mod, onclick: () => this._openPrompt(\"modInstrument\") }, \"Ins:\"),\r\n\t\t\t\tdiv({ class: \"selectContainer\" }, modInstrumentBox),\r\n\t\t\t);\r\n\r\n\t\t\tlet modSetBox: HTMLSelectElement = select();\r\n\t\t\tlet modSetRow: HTMLDivElement = div({ class: \"selectRow\", id: \"modSettingText\" + mod, style: \"margin-bottom: 0.9em; color: currentColor;\" }, span({ class: \"tip\", onclick: () => this._openPrompt(\"modSet\") }, \"Setting: \"), div({ class: \"selectContainer\" }, modSetBox));\r\n\r\n\t\t\tthis._modNameRows.push(modNameRow);\r\n\t\t\tthis._modChannelBoxes.push(modChannelBox);\r\n\t\t\tthis._modInstrumentBoxes.push(modInstrumentBox);\r\n\t\t\tthis._modSetRows.push(modSetRow);\r\n\t\t\tthis._modSetBoxes.push(modSetBox);\r\n\r\n\t\t\tthis._modulatorGroup.appendChild(div({ style: \"margin: 3px 0; font-weight: bold; margin-bottom: 0.7em; text-align: center; color: \" + ColorConfig.secondaryText + \"; background: \" + ColorConfig.uiWidgetBackground + \";\" }, \"Modulator \" + (mod + 1)));\r\n\t\t\tthis._modulatorGroup.appendChild(modNameRow);\r\n\t\t\tthis._modulatorGroup.appendChild(modSetRow);\r\n\r\n\t\t}\r\n\r\n\t\tthis._fileMenu.addEventListener(\"change\", this._fileMenuHandler);\r\n\t\tthis._editMenu.addEventListener(\"change\", this._editMenuHandler);\r\n\t\tthis._optionsMenu.addEventListener(\"change\", this._optionsMenuHandler);\r\n\t\tthis._customWavePresetDrop.addEventListener(\"change\", this._customWavePresetHandler);\r\n\t\tthis._tempoStepper.addEventListener(\"change\", this._whenSetTempo);\r\n\t\tthis._scaleSelect.addEventListener(\"change\", this._whenSetScale);\r\n\t\tthis._keySelect.addEventListener(\"change\", this._whenSetKey);\r\n\t\tthis._rhythmSelect.addEventListener(\"change\", this._whenSetRhythm);\r\n\t\t//this._pitchedPresetSelect.addEventListener(\"change\", this._whenSetPitchedPreset);\r\n\t\t//this._drumPresetSelect.addEventListener(\"change\", this._whenSetDrumPreset);\r\n\t\tthis._algorithmSelect.addEventListener(\"change\", this._whenSetAlgorithm);\r\n\t\tthis._instrumentSelect.addEventListener(\"change\", this._whenSetInstrument);\r\n\t\t//this._customizeInstrumentButton.addEventListener(\"click\", this._whenCustomizePressed);\r\n\t\tthis._feedbackTypeSelect.addEventListener(\"change\", this._whenSetFeedbackType);\r\n\t\tthis._feedbackEnvelopeSelect.addEventListener(\"change\", this._whenSetFeedbackEnvelope);\r\n\t\tthis._chipWaveSelect.addEventListener(\"change\", this._whenSetChipWave);\r\n\t\tthis._chipNoiseSelect.addEventListener(\"change\", this._whenSetNoiseWave);\r\n\t\tthis._transitionSelect.addEventListener(\"change\", this._whenSetTransition);\r\n\t\tthis._effectsSelect.addEventListener(\"change\", this._whenSetEffects);\r\n\t\tthis._filterEnvelopeSelect.addEventListener(\"change\", this._whenSetFilterEnvelope);\r\n\t\tthis._pulseEnvelopeSelect.addEventListener(\"change\", this._whenSetPulseEnvelope);\r\n\t\tthis._intervalSelect.addEventListener(\"change\", this._whenSetInterval);\r\n\t\tthis._chordSelect.addEventListener(\"change\", this._whenSetChord);\r\n\t\tthis._vibratoSelect.addEventListener(\"change\", this._whenSetVibrato);\r\n\t\tthis._vibratoTypeSelect.addEventListener(\"change\", this._whenSetVibratoType);\r\n\t\tthis._playButton.addEventListener(\"click\", this._togglePlay);\r\n\t\tthis._prevBarButton.addEventListener(\"click\", this._whenPrevBarPressed);\r\n\t\tthis._nextBarButton.addEventListener(\"click\", this._whenNextBarPressed);\r\n\t\tthis._volumeSlider.input.addEventListener(\"input\", this._setVolumeSlider);\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this._refocusStageNotEditing);\r\n\t\tthis._trackArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\r\n\t\t// The song volume slider is styled slightly different than the class' default.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeSlider.container.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\tthis._volumeBarContainer.style.setProperty(\"flex-grow\", \"1\");\r\n\t\tthis._volumeBarContainer.style.setProperty(\"display\", \"flex\");\r\n\r\n\t\t// Also, any slider with a multiplicative effect instead of a replacement effect gets a different mod color, and a round slider.\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._volumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._instrumentVolumeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\tthis._feedbackAmplitudeSlider.container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-color\", ColorConfig.multiplicativeModSlider);\r\n\t\t\tthis._operatorAmplitudeSliders[i].container.style.setProperty(\"--mod-border-radius\", \"50%\");\r\n\t\t}\r\n\r\n\r\n\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\t\t\tlet thisRef: SongEditor = this;\r\n\t\t\tthis._modChannelBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModChannel(mod); });\r\n\t\t\tthis._modInstrumentBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModInstrument(mod); });\r\n\t\t\tthis._modSetBoxes[mod].addEventListener(\"change\", function () { thisRef._whenSetModSetting(mod); });\r\n\t\t}\r\n\r\n\t\tthis._patternArea.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._spectrumEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._harmonicsEditor.container.addEventListener(\"mousedown\", this.refocusStage);\r\n\t\tthis._tempoStepper.addEventListener(\"keydown\", this._tempoStepperCaptureNumberKeys, false);\r\n\t\tthis.mainLayer.addEventListener(\"keydown\", this._whenKeyPressed);\r\n\t\tthis.mainLayer.addEventListener(\"keyup\", this._whenKeyUp);\r\n\t\tthis._instrumentCopyButton.addEventListener(\"click\", this._copyInstrument.bind(this));\r\n\t\tthis._instrumentPasteButton.addEventListener(\"click\", this._pasteInstrument.bind(this));\r\n\r\n\t\tthis._instrumentVolumeSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeVolume(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].volume, Math.min(25.0, Math.max(-25.0, Math.round(+this._instrumentVolumeSliderInputBox.value))))) });\r\n\t\tthis._panSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangePan(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].pan, Math.min(100.0, Math.max(0.0, Math.round(+this._panSliderInputBox.value))))) });\r\n\t\tthis._detuneSliderInputBox.addEventListener(\"input\", () => { this._doc.record(new ChangeDetune(this._doc, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].detune, Math.min(Config.detuneMax, Math.max(Config.detuneMin, Math.round(+this._detuneSliderInputBox.value))))) });\r\n\t\tthis._customWaveDraw.addEventListener(\"input\", () => { this._doc.record(new ChangeCustomWave(this._doc, this._customWaveDrawCanvas.newArray)) });\r\n\t\tthis._twoNoteArpBox.addEventListener(\"input\", () => { this._doc.record(new ChangeFastTwoNoteArp(this._doc, this._twoNoteArpBox.checked)) });\r\n\t\tthis._tieNoteTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeTieNoteTransition(this._doc, this._tieNoteTransitionBox.checked)) });\r\n\t\tthis._clicklessTransitionBox.addEventListener(\"input\", () => { this._doc.record(new ChangeClicklessTransition(this._doc, this._clicklessTransitionBox.checked)) });\r\n\r\n\t\tthis._promptContainer.addEventListener(\"click\", (event) => {\r\n\t\t\tif (event.target == this._promptContainer) {\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (isMobile) {\r\n\t\t\tconst autoPlayOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=autoPlay]\");\r\n\t\t\tautoPlayOption.disabled = true;\r\n\t\t\tautoPlayOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\r\n\t\t// Beepbox uses availHeight too, but I have a display that fails the check even when one of the other layouts would look better on it. -jummbus\r\n\t\tif (window.screen.availWidth < 700 /*|| window.screen.availHeight < 700*/) {\r\n\t\t\tconst fullScreenOption: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.querySelector(\"[value=fullScreen]\");\r\n\t\t\tfullScreenOption.disabled = true;\r\n\t\t\tfullScreenOption.setAttribute(\"hidden\", \"\");\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _toggleDropdownMenu(dropdown: number): void {\r\n\t\tlet target: HTMLButtonElement = this._vibratoDropdown;\r\n\t\tlet group: HTMLElement = this._vibratoDropdownGroup;\r\n\t\tswitch (dropdown) {\r\n\t\t\tcase 0:\r\n\t\t\t\ttarget = this._vibratoDropdown;\r\n\t\t\t\tthis._openVibratoDropdown = this._openVibratoDropdown ? false : true;\r\n\t\t\t\tgroup = this._vibratoDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1:\r\n\t\t\t\ttarget = this._panDropdown;\r\n\t\t\t\tthis._openPanDropdown = this._openPanDropdown ? false : true;\r\n\t\t\t\tgroup = this._panDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\ttarget = this._chordDropdown;\r\n\t\t\t\tthis._openChordDropdown = this._openChordDropdown ? false : true;\r\n\t\t\t\tgroup = this._chordDropdownGroup;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\ttarget = this._transitionDropdown;\r\n\t\t\t\tthis._openTransitionDropdown = this._openTransitionDropdown ? false : true;\r\n\t\t\t\tgroup = this._transitionDropdownGroup;\r\n\t\t}\r\n\r\n\t\tif (target.textContent == \"▼\") {\r\n\t\t\ttarget.textContent = \"▲\";\r\n\t\t\tif (group != this._chordDropdownGroup) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t} // Only show arpeggio dropdown if chord arpeggiates\r\n\t\t\telse if (this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].chord == 2) {\r\n\t\t\t\tgroup.style.display = \"\";\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttarget.textContent = \"▼\";\r\n\t\t\tgroup.style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _modSliderUpdate(): void {\r\n\r\n\t\tif (!this._doc.synth.playing) {\r\n\t\t\tthis._hasActiveModSliders = false;\r\n\r\n\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\tthis._showModSliders[setting] = false;\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\t\t\tconst anyModActive: boolean = this._doc.synth.isAnyModActive(this._doc.channel, instrument);\r\n\r\n\t\t\t// Check and update mod values on sliders\r\n\t\t\tif (anyModActive) {\r\n\r\n\t\t\t\tlet instrument: number = this._doc.getCurrentInstrument();\r\n\r\n\t\t\t\tfunction updateModSlider(editor: SongEditor, slider: Slider, setting: ModSetting, channel: number, instrument: number): boolean {\r\n\t\t\t\t\tconst forSong: boolean = editor._doc.synth.song!.isSettingForSong(setting);\r\n\t\t\t\t\tif (editor._doc.synth.isModActive(setting, forSong, channel, instrument)) {\r\n\t\t\t\t\t\tlet currentVal: number = editor._doc.synth.song!.realToModValue(editor._doc.synth.getModValue(setting, forSong, channel, instrument, false), setting) / editor._doc.song.mstMaxVols.get(setting)!;\r\n\t\t\t\t\t\tif (currentVal != editor._modSliderValues[setting]) {\r\n\t\t\t\t\t\t\teditor._modSliderValues[setting] = currentVal;\r\n\t\t\t\t\t\t\tslider.container.style.setProperty(\"--mod-position\", (currentVal * 96.0 + 2.0) + \"%\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set mod sliders to present values\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\t// Set to last value\r\n\t\t\t\t\tthis._newShowModSliders[setting] = this._showModSliders[setting];\r\n\r\n\t\t\t\t\t// Check for newer value\r\n\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\t\t\t\t\tif (slider != null) {\r\n\t\t\t\t\t\tthis._newShowModSliders[setting] = updateModSlider(this, slider, setting, this._doc.channel, instrument);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse if (this._hasActiveModSliders) {\r\n\t\t\t\t// Zero out show-mod-slider settings (since none are active) to kill active mod slider flag\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tthis._newShowModSliders[setting] = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Class or unclass mod sliders based on present status\r\n\t\t\tif (anyModActive || this._hasActiveModSliders) {\r\n\r\n\t\t\t\tlet anySliderActive: boolean = false;\r\n\r\n\t\t\t\tfor (let setting: number = 0; setting < ModSetting.mstMaxValue; setting++) {\r\n\t\t\t\t\tif (this._newShowModSliders[setting] != this._showModSliders[setting]) {\r\n\t\t\t\t\t\tthis._showModSliders[setting] = this._newShowModSliders[setting];\r\n\t\t\t\t\t\tlet slider: Slider | null = this._getSliderForModSetting(setting);\r\n\r\n\t\t\t\t\t\tif (slider != null) {\r\n\r\n\t\t\t\t\t\t\tif (this._showModSliders[setting] == true) {\r\n\t\t\t\t\t\t\t\tslider.container.classList.add(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tslider.container.classList.remove(\"modSlider\");\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this._newShowModSliders[setting] == true)\r\n\t\t\t\t\t\tanySliderActive = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._hasActiveModSliders = anySliderActive;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprivate _getSliderForModSetting(setting: ModSetting): Slider | null {\r\n\t\tswitch (setting) {\r\n\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\treturn this._panSlider;\r\n\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\treturn this._detuneSlider;\r\n\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[0];\r\n\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[1];\r\n\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[2];\r\n\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\treturn this._operatorAmplitudeSliders[3];\r\n\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\treturn this._feedbackAmplitudeSlider;\r\n\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\treturn this._pulseWidthSlider;\r\n\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\treturn this._filterResonanceSlider;\r\n\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\treturn this._filterCutoffSlider;\r\n\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\treturn this._instrumentVolumeSlider;\r\n\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\treturn this._vibratoDepthSlider;\r\n\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\treturn this._vibratoSpeedSlider;\r\n\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\treturn this._vibratoDelaySlider;\r\n\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\treturn this._arpeggioSpeedSlider;\r\n\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\treturn this._panDelaySlider;\r\n\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\treturn this._tempoSlider;\r\n\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\treturn this._reverbSlider;\r\n\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\treturn this._volumeSlider;\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic changeInstrument(index: number): void {\r\n\t\tthis._instrumentSelect.selectedIndex = index;\r\n\t\tthis._whenSetInstrument();\r\n\t}\r\n\r\n\tprivate _openPrompt(promptName: string): void {\r\n\t\tthis._doc.openPrompt(promptName);\r\n\t\tthis._setPrompt(promptName);\r\n\t}\r\n\r\n\tprivate _setPrompt(promptName: string | null): void {\r\n\t\tif (this._currentPromptName == promptName) return;\r\n\t\tthis._currentPromptName = promptName;\r\n\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this._wasPlaying && !(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\tthis._play();\r\n\t\t\t}\r\n\t\t\tthis._wasPlaying = false;\r\n\t\t\tthis._promptContainer.style.display = \"none\";\r\n\t\t\tthis._promptContainer.removeChild(this.prompt.container);\r\n\t\t\tthis.prompt.cleanUp();\r\n\t\t\tthis.prompt = null;\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tif (promptName) {\r\n\t\t\tswitch (promptName) {\r\n\t\t\t\tcase \"export\":\r\n\t\t\t\t\tthis.prompt = new ExportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"import\":\r\n\t\t\t\t\tthis.prompt = new ImportPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"songRecovery\":\r\n\t\t\t\t\tthis.prompt = new SongRecoveryPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"barCount\":\r\n\t\t\t\t\tthis.prompt = new SongDurationPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"beatsPerBar\":\r\n\t\t\t\t\tthis.prompt = new BeatsPerBarPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\t\tthis.prompt = new MoveNotesSidewaysPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"channelSettings\":\r\n\t\t\t\t\tthis.prompt = new ChannelSettingsPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"limiterSettings\":\r\n\t\t\t\t\tthis.prompt = new LimiterPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"customChipSettings\":\r\n\t\t\t\t\tthis.prompt = new CustomChipPrompt(this._doc, this);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"theme\":\r\n\t\t\t\t\tthis.prompt = new ThemePrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"layout\":\r\n\t\t\t\t\tthis.prompt = new LayoutPrompt(this._doc);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.prompt = new TipPrompt(this._doc, promptName);\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.prompt) {\r\n\t\t\t\tif (!(this.prompt instanceof TipPrompt || this.prompt instanceof LimiterPrompt || this.prompt instanceof CustomChipPrompt)) {\r\n\t\t\t\t\tthis._wasPlaying = this._doc.synth.playing;\r\n\t\t\t\t\tthis._pause();\r\n\t\t\t\t}\r\n\t\t\t\tthis._promptContainer.style.display = \"\";\r\n\t\t\t\tthis._promptContainer.appendChild(this.prompt.container);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic refocusStage = (): void => {\r\n\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\t// Refocus stage if a sub-element that needs focus isn't being edited.\r\n\tprivate _refocusStageNotEditing = (): void => {\r\n\t\tif (!this._patternEditor.editingModLabel)\r\n\t\t\tthis.mainLayer.focus({ preventScroll: true });\r\n\t}\r\n\r\n\tpublic changeBarScrollPos(offset: number) {\r\n\t\tthis._barScrollBar.changePos(offset);\r\n\t}\r\n\r\n\tpublic whenUpdated = (): void => {\r\n\t\tthis._muteEditor.container.style.display = this._doc.enableChannelMuting ? \"\" : \"none\";\r\n\t\tconst trackBounds = this._trackContainer.getBoundingClientRect();\r\n\t\tthis._doc.trackVisibleBars = Math.floor((trackBounds.right - trackBounds.left) / this._doc.getBarWidth());\r\n\t\tthis._barScrollBar.render();\r\n\t\tthis._muteEditor.render();\r\n\t\tthis._trackEditor.render();\r\n\r\n\t\tif (document.activeElement != this._patternEditor.modDragValueLabel && this._patternEditor.editingModLabel) {\r\n\t\t\tthis._patternEditor.stopEditingModLabel(false);\r\n\t\t}\r\n\r\n\t\tthis._piano.container.style.display = this._doc.showLetters ? \"\" : \"none\";\r\n\t\tthis._octaveScrollBar.container.style.display = this._doc.showScrollBar ? \"\" : \"none\";\r\n\t\tthis._barScrollBar.container.style.display = this._doc.song.barCount > this._doc.trackVisibleBars ? \"\" : \"none\";\r\n\t\tthis._volumeBarBox.style.display = this._doc.displayVolumeBar ? \"\" : \"none\";\r\n\r\n\t\tif (this._doc.getFullScreen()) {\r\n\t\t\tconst semitoneHeight: number = this._patternEditorRow.clientHeight / this._doc.windowPitchCount;\r\n\t\t\tconst targetBeatWidth: number = semitoneHeight * 5;\r\n\t\t\tconst minBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar * 3);\r\n\t\t\tconst maxBeatWidth: number = this._patternEditorRow.clientWidth / (this._doc.song.beatsPerBar + 2);\r\n\t\t\tconst beatWidth: number = Math.max(minBeatWidth, Math.min(maxBeatWidth, targetBeatWidth));\r\n\t\t\tconst patternEditorWidth: number = beatWidth * this._doc.song.beatsPerBar;\r\n\r\n\t\t\tthis._patternEditorPrev.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditor.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorNext.container.style.width = patternEditorWidth + \"px\";\r\n\t\t\tthis._patternEditorPrev.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorNext.container.style.flexShrink = \"0\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"\";\r\n\t\t\tthis._patternEditorPrev.render();\r\n\t\t\tthis._patternEditorNext.render();\r\n\t\t} else {\r\n\t\t\tthis._patternEditor.container.style.width = \"\";\r\n\t\t\tthis._patternEditor.container.style.flexShrink = \"\";\r\n\t\t\tthis._patternEditorPrev.container.style.display = \"none\";\r\n\t\t\tthis._patternEditorNext.container.style.display = \"none\";\r\n\t\t}\r\n\t\tthis._patternEditor.render();\r\n\r\n\t\tconst optionCommands: ReadonlyArray<string> = [\r\n\t\t\t(this._doc.autoPlay ? \"✓ \" : \"\") + \"Auto Play On Load\",\r\n\t\t\t(this._doc.autoFollow ? \"✓ \" : \"\") + \"Auto Follow Track\",\r\n\t\t\t(this._doc.enableNotePreview ? \"✓ \" : \"\") + \"Preview Added Notes\",\r\n\t\t\t(this._doc.showLetters ? \"✓ \" : \"\") + \"Show Piano Keys\",\r\n\t\t\t(this._doc.showFifth ? \"✓ \" : \"\") + 'Highlight \"Fifth\" Notes',\r\n\t\t\t(this._doc.showChannels ? \"✓ \" : \"\") + \"Show All Channels\",\r\n\t\t\t(this._doc.showScrollBar ? \"✓ \" : \"\") + \"Octave Scroll Bar\",\r\n\t\t\t(this._doc.alwaysFineNoteVol ? \"✓ \" : \"\") + \"Always Fine Note Vol.\",\r\n\t\t\t(this._doc.enableChannelMuting ? \"✓ \" : \"\") + \"Enable Channel Muting\",\r\n\t\t\t(this._doc.displayBrowserUrl ? \"✓ \" : \"\") + \"Display Song Data in URL\",\r\n\t\t\t(this._doc.displayVolumeBar ? \"✓ \" : \"\") + \"Show Playback Volume\",\r\n\t\t\t\"Set Layout...\",\r\n\t\t\t\"Set Theme...\",\r\n\t\t\t//(this._doc.alwaysShowSettings ? \"✓ \" : \"\") + \"Customize All Instruments\",\r\n\t\t]\r\n\t\tfor (let i: number = 0; i < optionCommands.length; i++) {\r\n\t\t\tconst option: HTMLOptionElement = <HTMLOptionElement>this._optionsMenu.children[i + 1];\r\n\t\t\tif (option.innerText != optionCommands[i]) option.innerText = optionCommands[i];\r\n\t\t}\r\n\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\tconst instrumentIndex: number = this._doc.getCurrentInstrument();\r\n\t\tconst instrument: Instrument = channel.instruments[instrumentIndex];\r\n\t\tconst wasActive: boolean = this.mainLayer.contains(document.activeElement);\r\n\t\tconst activeElement: Element | null = document.activeElement;\r\n\r\n\t\tsetSelectedValue(this._scaleSelect, this._doc.song.scale);\r\n\t\tthis._scaleSelect.title = Config.scales[this._doc.song.scale].realName;\r\n\t\tsetSelectedValue(this._keySelect, Config.keys.length - 1 - this._doc.song.key);\r\n\t\tthis._tempoSlider.updateValue(Math.max(0, Math.round(this._doc.song.tempo)));\r\n\t\tthis._tempoStepper.value = Math.round(this._doc.song.tempo).toString();\r\n\t\tthis._songTitleInputBox.updateValue(this._doc.song.title);\r\n\t\tthis._reverbSlider.updateValue(this._doc.song.reverb);\r\n\r\n\t\tsetSelectedValue(this._rhythmSelect, this._doc.song.rhythm);\r\n\r\n\t\tif (!this._doc.song.getChannelIsMod(this._doc.channel)) {\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"\";\r\n\t\t\tthis._panSliderRow.style.display = \"\";\r\n\t\t\tthis._panDropdownGroup.style.display = (this._openPanDropdown ? \"\" : \"none\");\r\n\t\t\tthis._detuneSliderRow.style.display = \"\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"\");\r\n\t\t\tthis._instrumentSettingsGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSelectRow, this._instrumentSettingsGroup.firstChild);\r\n\t\t\tthis._instrumentSettingsGroup.insertBefore(this._instrumentSettingsTextRow, this._instrumentSettingsGroup.firstChild);\r\n\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Instrument Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"none\";\r\n\r\n\t\t\t// Check if current viewed pattern on channel is used anywhere\r\n\t\t\t// + Check if current instrument on channel is used anywhere\r\n\t\t\tvar instrumentUsed = false;\r\n\t\t\tvar patternUsed = false;\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"\";\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().show();\r\n\r\n\t\t\t\tsetSelectedValue(this._drumPresetSelect, instrument.preset);\r\n\t\t\t} else {\r\n\t\t\t\tthis._pitchedPresetSelect.style.display = \"\";\r\n\t\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\r\n\t\t\t\t// Also hide select2\r\n\t\t\t\t$(\"#pitchPresetSelect\").parent().show();\r\n\t\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\r\n\t\t\t\tsetSelectedValue(this._pitchedPresetSelect, instrument.preset);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._doc.alwaysShowSettings && instrument.preset != instrument.type) {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\t} else {\r\n\t\t\t\t//this._customizeInstrumentButton.style.display = \"none\";\r\n\t\t\t\t//this._customInstrumentSettingsGroup.style.display = \"\";\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipNoiseSelect, instrument.chipNoise);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.spectrum) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"\";\r\n\t\t\t\t\tthis._spectrumEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.harmonics) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"\";\r\n\t\t\t\t\tthis._harmonicsEditor.render();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.drumCount; i++) {\r\n\t\t\t\t\t\tsetSelectedValue(this._drumsetEnvelopeSelects[i], instrument.drumsetEnvelopes[i]);\r\n\t\t\t\t\t\tthis._drumsetSpectrumEditors[i].render();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._transitionRow.style.display = \"\";\r\n\t\t\t\t\tthis._transitionDropdownGroup.style.display = (this._openTransitionDropdown ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._chordDropdownGroup.style.display = (this._openChordDropdown && instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._chordDropdown.style.display = (instrument.chord == 2 ? \"\" : \"none\");\r\n\t\t\t\t\tthis._filterCutoffRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterResonanceRow.style.display = \"\";\r\n\t\t\t\t\tthis._filterEnvelopeRow.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t\tif (instrument.type == InstrumentType.chip) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"\";\r\n\t\t\t\t\tsetSelectedValue(this._chipWaveSelect, instrument.chipWave);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"\";\r\n\t\t\t\t\tthis._pulseWidthSlider.input.title = prettyNumber(instrument.pulseWidth) + \"%\";\r\n\t\t\t\t\tsetSelectedValue(this._pulseEnvelopeSelect, instrument.pulseEnvelope);\r\n\t\t\t\t\tthis._pulseWidthSlider.updateValue(instrument.pulseWidth);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.fm) {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"\";\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tsetSelectedValue(this._algorithmSelect, instrument.algorithm);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackTypeSelect, instrument.feedbackType);\r\n\t\t\t\t\tthis._feedbackAmplitudeSlider.updateValue(instrument.feedbackAmplitude);\r\n\t\t\t\t\tsetSelectedValue(this._feedbackEnvelopeSelect, instrument.feedbackEnvelope);\r\n\t\t\t\t\tthis._feedbackEnvelopeSelect.parentElement!.style.color = (instrument.feedbackAmplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.operatorCount; i++) {\r\n\t\t\t\t\t\tconst isCarrier: boolean = (i < Config.algorithms[instrument.algorithm].carrierCount);\r\n\t\t\t\t\t\tthis._operatorRows[i].style.color = isCarrier ? ColorConfig.primaryText : \"\";\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorFrequencySelects[i], instrument.operators[i].frequency);\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].updateValue(instrument.operators[i].amplitude);\r\n\t\t\t\t\t\tsetSelectedValue(this._operatorEnvelopeSelects[i], instrument.operators[i].envelope);\r\n\t\t\t\t\t\tconst operatorName: string = (isCarrier ? \"Voice \" : \"Modulator \") + (i + 1);\r\n\t\t\t\t\t\tthis._operatorFrequencySelects[i].title = operatorName + \" Frequency\";\r\n\t\t\t\t\t\tthis._operatorAmplitudeSliders[i].input.title = operatorName + (isCarrier ? \" Volume\" : \" Amplitude\");\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].title = operatorName + \" Envelope\";\r\n\t\t\t\t\t\tthis._operatorEnvelopeSelects[i].parentElement!.style.color = (instrument.operators[i].amplitude > 0) ? \"\" : ColorConfig.secondaryText;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (instrument.type == InstrumentType.noise) {\r\n\t\t\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t} else if (instrument.type == InstrumentType.drumset) {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._vibratoSelectRow.style.display = \"\";\r\n\t\t\t\t\t// Temporarily hide interval select, until I get them working for these instrument types!\r\n\t\t\t\t\tif (instrument.type == InstrumentType.spectrum || instrument.type == InstrumentType.fm || instrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._intervalSelectRow.style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._vibratoDropdownGroup.style.display = (this._openVibratoDropdown ? \"\" : \"none\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst hidden: boolean = !Config.instrumentTypeHasSpecialInterval[instrument.type] ? Config.chords[chordIndex].isCustomInterval : false;\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (hidden) {\r\n\t\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\toption.removeAttribute(\"hidden\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\t\tthis._panSliderInputBox.value = instrument.pan + \"\";\r\n\t\t\tthis._detuneSliderInputBox.value = instrument.detune + \"\";\r\n\t\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\t\tthis._instrumentVolumeSliderInputBox.value = \"\" + (instrument.volume);\r\n\t\t\tthis._vibratoDepthSlider.updateValue(Math.round(instrument.vibratoDepth * 25));\r\n\t\t\tthis._vibratoDelaySlider.updateValue(instrument.vibratoDelay);\r\n\t\t\tthis._vibratoSpeedSlider.updateValue(instrument.vibratoSpeed);\r\n\t\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\t\tthis._arpeggioSpeedSlider.updateValue(instrument.arpeggioSpeed);\r\n\t\t\tthis._panDelaySlider.updateValue(instrument.panDelay);\r\n\t\t\tthis._vibratoDelaySlider.input.title = \"\" + instrument.vibratoDelay;\r\n\t\t\tthis._vibratoDepthSlider.input.title = \"\" + instrument.vibratoDepth;\r\n\t\t\tthis._vibratoSpeedSlider.input.title = \"\" + instrument.vibratoSpeed;\r\n\t\t\tthis._panDelaySlider.input.title = \"\" + instrument.panDelay;\r\n\t\t\tthis._arpeggioSpeedSlider.input.title = \"x\" + prettyNumber(Config.arpSpeedScale[instrument.arpeggioSpeed]);\r\n\r\n\t\t\tif (instrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\tthis._customWaveDrawCanvas.redrawCanvas();\r\n\r\n\t\t\t\tif (this.prompt instanceof CustomChipPrompt) {\r\n\t\t\t\t\tthis.prompt.customChipCanvas.render();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// Options for mod channel\r\n\t\telse {\r\n\t\t\tvar patternUsed = false;\r\n\t\t\tvar instrumentUsed = false;\r\n\r\n\t\t\tlet lowestSelX: number = Math.min(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet highestSelX: number = Math.max(this._doc.selection.boxSelectionX0, this._doc.selection.boxSelectionX1);\r\n\t\t\tlet lowestSelY: number = Math.min(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\t\t\tlet highestSelY: number = Math.max(this._doc.selection.boxSelectionY0, this._doc.selection.boxSelectionY1);\r\n\r\n\t\t\tif (channel.bars[this._doc.bar] != 0) {\r\n\r\n\t\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t\t// Check for this exact bar in another place, but only count it if it's not within the selection\r\n\t\t\t\t\tif (channel.bars[i] == channel.bars[this._doc.bar] && i != this._doc.bar &&\r\n\t\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\t\tpatternUsed = true;\r\n\t\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\t\t// Check for this exact instrument in another place, but only count it if it's not within the selection\r\n\t\t\t\tif (channel.bars[i] != 0 && this._doc.song.getPatternInstrument(this._doc.channel, i) == instrumentIndex && i != this._doc.bar &&\r\n\t\t\t\t\t(i < lowestSelX || i > highestSelX || this._doc.channel < lowestSelY || this._doc.channel > highestSelY)) {\r\n\r\n\t\t\t\t\tinstrumentUsed = true;\r\n\t\t\t\t\ti = this._doc.song.barCount;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (patternUsed) {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedPatternIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tif (instrumentUsed) {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorPrimary);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._usedInstrumentIndicator.style.setProperty(\"fill\", ColorConfig.indicatorSecondary);\r\n\t\t\t}\r\n\r\n\t\t\tthis._pitchedPresetSelect.style.display = \"none\";\r\n\t\t\tthis._drumPresetSelect.style.display = \"none\";\r\n\t\t\t$(\"#pitchPresetSelect\").parent().hide();\r\n\t\t\t$(\"#drumPresetSelect\").parent().hide();\r\n\t\t\tthis._modulatorGroup.appendChild(this._instrumentCopyGroup);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSelectRow, this._modulatorGroup.firstChild);\r\n\t\t\tthis._modulatorGroup.insertBefore(this._instrumentSettingsTextRow, this._modulatorGroup.firstChild);\r\n\t\t\tif (this._doc.song.channels[this._doc.channel].name == \"\") {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = \"Modulator Settings\";\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._instrumentSettingsTextRow.textContent = this._doc.song.channels[this._doc.channel].name;\r\n\t\t\t}\r\n\r\n\t\t\tthis._chipNoiseSelectRow.style.display = \"none\";\r\n\t\t\tthis._chipWaveSelectRow.style.display = \"none\";\r\n\t\t\tthis._spectrumRow.style.display = \"none\";\r\n\t\t\tthis._harmonicsRow.style.display = \"none\";\r\n\t\t\tthis._transitionRow.style.display = \"none\";\r\n\t\t\tthis._chordSelectRow.style.display = \"none\";\r\n\t\t\tthis._chordDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._filterCutoffRow.style.display = \"none\";\r\n\t\t\tthis._filterResonanceRow.style.display = \"none\";\r\n\t\t\tthis._filterEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._drumsetGroup.style.display = \"none\";\r\n\t\t\tthis._customWaveDraw.style.display = \"none\";\r\n\t\t\tthis._algorithmSelectRow.style.display = \"none\";\r\n\t\t\tthis._phaseModGroup.style.display = \"none\";\r\n\t\t\tthis._feedbackRow1.style.display = \"none\";\r\n\t\t\tthis._feedbackRow2.style.display = \"none\";\r\n\t\t\tthis._pulseEnvelopeRow.style.display = \"none\";\r\n\t\t\tthis._pulseWidthRow.style.display = \"none\";\r\n\t\t\tthis._vibratoSelectRow.style.display = \"none\";\r\n\t\t\tthis._vibratoDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._intervalSelectRow.style.display = \"none\";\r\n\t\t\tthis._detuneSliderRow.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\r\n\t\t\tthis._modulatorGroup.style.display = \"\";\r\n\t\t\tthis._modulatorGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\tfor (let mod: number = 0; mod < Config.modCount; mod++) {\r\n\r\n\t\t\t\tlet instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\tlet modStatus: number = instrument.modStatuses[mod];\r\n\t\t\t\tlet modChannel: number = instrument.modChannels[mod] + ((modStatus == ModStatus.msForNoise) ? this._doc.song.pitchChannelCount : 0);\r\n\t\t\t\tlet modInstrument: number = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Boundary checking\r\n\t\t\t\tif (modInstrument >= this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\tmodInstrument = 0;\r\n\t\t\t\t\tinstrument.modInstruments[mod] = 0;\r\n\t\t\t\t\tinstrument.modSettings[mod] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount && (modStatus == ModStatus.msForPitch)) {\r\n\t\t\t\t\tmodStatus = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\t\t\t\tif (modChannel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount && (modStatus == ModStatus.msForNoise)) {\r\n\t\t\t\t\tinstrument.modStatuses[mod] = ModStatus.msNone;\r\n\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator channels (make sure it has the right number).\r\n\t\t\t\tif (this._doc.recalcChannelNames || this._modChannelBoxes[mod].children.length != 2 + this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\twhile (this._modChannelBoxes[mod].firstChild) this._modChannelBoxes[mod].remove(0);\r\n\t\t\t\t\tconst channelList: string[] = [];\r\n\t\t\t\t\tchannelList.push(\"none\");\r\n\t\t\t\t\tchannelList.push(\"song\");\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.pitchChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"pitch \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.noiseChannelCount; i++) {\r\n\t\t\t\t\t\tif (this._doc.song.channels[i + this._doc.song.pitchChannelCount].name == \"\") {\r\n\t\t\t\t\t\t\tchannelList.push(\"noise \" + (i + 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tchannelList.push(this._doc.song.channels[i + this._doc.song.pitchChannelCount].name);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modChannelBoxes[mod], channelList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on channel info.\r\n\t\t\t\tif (instrument.modStatuses[mod] == ModStatus.msNone) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 0; // none\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForSong) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = 1; // song\r\n\t\t\t\t}\r\n\t\t\t\telse if (instrument.modStatuses[mod] == ModStatus.msForPitch) {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2; // Offset to get to first pitch channel\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._modChannelBoxes[mod].selectedIndex = instrument.modChannels[mod] + 2 + this._doc.song.pitchChannelCount; // Offset to get to first noise channel\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Build options for modulator instruments (make sure it has the right number).\r\n\t\t\t\tif (this._modInstrumentBoxes[mod].children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\t\t\twhile (this._modInstrumentBoxes[mod].firstChild) this._modInstrumentBoxes[mod].remove(0);\r\n\t\t\t\t\tconst instrumentList: number[] = [];\r\n\t\t\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbuildOptions(this._modInstrumentBoxes[mod], instrumentList);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set selected index based on instrument info.\r\n\t\t\t\tthis._modInstrumentBoxes[mod].selectedIndex = instrument.modInstruments[mod];\r\n\r\n\t\t\t\t// Build options for modulator settings (based on channel settings)\r\n\r\n\t\t\t\tif (modStatus != ModStatus.msNone) {\r\n\r\n\t\t\t\t\tlet tgtInstrument: Instrument = this._doc.song.channels[modChannel].instruments[modInstrument];\r\n\r\n\t\t\t\t\twhile (this._modSetBoxes[mod].firstChild) this._modSetBoxes[mod].remove(0);\r\n\t\t\t\t\tconst settingList: string[] = [];\r\n\t\t\t\t\tsettingList.push(\"none\");\r\n\r\n\t\t\t\t\t// Populate mod setting options for the song scope.\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 1) {\r\n\t\t\t\t\t\tsettingList.push(\"song volume\");\r\n\t\t\t\t\t\tsettingList.push(\"tempo\");\r\n\t\t\t\t\t\tsettingList.push(\"reverb\");\r\n\t\t\t\t\t\tsettingList.push(\"next bar\");\r\n\t\t\t\t\t\tsettingList.push(\"song detune\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// Populate mod setting options for instrument scope.\r\n\t\t\t\t\telse {\r\n\r\n\t\t\t\t\t\tsettingList.push(\"volume\");\r\n\t\t\t\t\t\tsettingList.push(\"pan\");\r\n\t\t\t\t\t\tsettingList.push(\"pan delay\");\r\n\t\t\t\t\t\tsettingList.push(\"filter cut\");\r\n\t\t\t\t\t\tsettingList.push(\"filter peak\");\r\n\t\t\t\t\t\tsettingList.push(\"detune\");\r\n\t\t\t\t\t\tsettingList.push(\"arpeggio speed\");\r\n\t\t\t\t\t\tsettingList.push(\"reset arpeggio\");\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.chip || tgtInstrument.type == InstrumentType.fm || tgtInstrument.type == InstrumentType.harmonics || tgtInstrument.type == InstrumentType.pwm || tgtInstrument.type == InstrumentType.customChipWave) {\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato depth\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato speed\");\r\n\t\t\t\t\t\t\tsettingList.push(\"vibrato delay\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (tgtInstrument.type == InstrumentType.pwm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"pulse width\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (tgtInstrument.type == InstrumentType.fm) {\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 1\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 2\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 3\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm slider 4\");\r\n\t\t\t\t\t\t\tsettingList.push(\"fm feedback\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbuildOptions(this._modSetBoxes[mod], settingList);\r\n\r\n\t\t\t\t\tlet needReset: boolean = false;\r\n\t\t\t\t\tlet setIndex: number = 0;\r\n\r\n\t\t\t\t\t// Set selected index based on instrument info. Based on how the list is built.\r\n\t\t\t\t\t//Also has to check for a change in channel setting. Sigh...maybe it could be done better!\r\n\t\t\t\t\tswitch (instrument.modSettings[mod]) {\r\n\t\t\t\t\t\t// For song\r\n\t\t\t\t\t\tcase ModSetting.mstSongVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstTempo:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstReverb:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNextBar:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstSongDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForSong)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t// For instruments\r\n\t\t\t\t\t\tcase ModSetting.mstInsVolume:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 1;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPan:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 2;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPanDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 3;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterCut:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 4;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFilterPeak:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 5;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstDetune:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 6;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstArpeggioSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 7;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstResetArpeggio:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise)\r\n\t\t\t\t\t\t\t\tsetIndex = 8;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDepth:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 9;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoSpeed:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 10;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstVibratoDelay:\r\n\t\t\t\t\t\t\tif (modStatus == ModStatus.msForPitch)\r\n\t\t\t\t\t\t\t\tsetIndex = 11;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstPulseWidth:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.pwm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider1:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 12;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider2:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 13;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider3:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 14;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMSlider4:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 15;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstFMFeedback:\r\n\t\t\t\t\t\t\tif ((modStatus == ModStatus.msForPitch || modStatus == ModStatus.msForNoise) && tgtInstrument.type == InstrumentType.fm)\r\n\t\t\t\t\t\t\t\tsetIndex = 16;\r\n\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\tneedReset = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase ModSetting.mstNone:\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Catch instances where invalid set forced setting to \"none\"\r\n\t\t\t\t\tif (needReset) {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\t\tinstrument.modSettings[mod] = ModSetting.mstNone;\r\n\t\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = setIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if (instrument.modSettings[mod] != ModSetting.mstNone) {\r\n\t\t\t\t\tthis._modSetBoxes[mod].selectedIndex = 0;\r\n\t\t\t\t\tthis._whenSetModSetting(mod);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t//Hide instrument select if channel is \"none\" or \"song\"\r\n\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex <= 1) {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = \"Channel:\";\r\n\r\n\t\t\t\t\t//Hide setting select if channel is \"none\"\r\n\t\t\t\t\tif (this._modChannelBoxes[mod].selectedIndex == 0) {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"none\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t((this._modInstrumentBoxes[mod].parentElement) as HTMLDivElement).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modInstrumentText\" + mod).get(0).style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\t\t\t\t$(\"#modChannelText\" + mod).get(0).innerText = (this._doc.song.instrumentsPerChannel > 1) ? \"Ch:\" : \"Channel:\";\r\n\t\t\t\t\t$(\"#modSettingText\" + mod).get(0).style.display = \"\";\r\n\t\t\t\t\t((this._modSetBoxes[mod].parentElement) as HTMLDivElement).style.display = \"\";\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._doc.recalcChannelNames = false;\r\n\r\n\t\t\tfor (let chordIndex: number = 0; chordIndex < Config.chords.length; chordIndex++) {\r\n\t\t\t\tconst option: Element = this._chordSelect.children[chordIndex];\r\n\t\t\t\tif (!option.hasAttribute(\"hidden\")) {\r\n\t\t\t\t\toption.setAttribute(\"hidden\", \"\");\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._instrumentSelectRow.style.display = \"none\";\r\n\r\n\t\t\tthis._customInstrumentSettingsGroup.style.display = \"none\";\r\n\t\t\tthis._panSliderRow.style.display = \"none\";\r\n\t\t\tthis._panDropdownGroup.style.display = \"none\";\r\n\t\t\tthis._instrumentVolumeSliderRow.style.display = \"none\";\r\n\t\t\t$(\"#typeSelectRow\").css(\"display\", \"none\");\r\n\r\n\t\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\t\t// Force piano to re-show, if channel is modulator\r\n\t\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\tthis._piano.forceRender();\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._instrumentSelectRow.style.display = (this._doc.song.instrumentsPerChannel > 1) ? \"\" : \"none\";\r\n\t\tthis._instrumentSelectRow.style.visibility = (pattern == null) ? \"hidden\" : \"\";\r\n\t\tif (this._instrumentSelect.children.length != this._doc.song.instrumentsPerChannel) {\r\n\t\t\twhile (this._instrumentSelect.firstChild) this._instrumentSelect.removeChild(this._instrumentSelect.firstChild);\r\n\t\t\tconst instrumentList: number[] = [];\r\n\t\t\tfor (let i: number = 0; i < this._doc.song.instrumentsPerChannel; i++) {\r\n\t\t\t\tinstrumentList.push(i + 1);\r\n\t\t\t}\r\n\t\t\tbuildOptions(this._instrumentSelect, instrumentList);\r\n\t\t}\r\n\r\n\t\tthis._instrumentSettingsGroup.style.color = ColorConfig.getChannelColor(this._doc.song, this._doc.channel).primaryNote;\r\n\r\n\t\tthis._filterCutoffSlider.updateValue(instrument.filterCutoff);\r\n\t\tthis._filterResonanceSlider.updateValue(instrument.filterResonance);\r\n\t\tsetSelectedValue(this._filterEnvelopeSelect, instrument.filterEnvelope);\r\n\t\tsetSelectedValue(this._transitionSelect, instrument.transition);\r\n\t\tsetSelectedValue(this._effectsSelect, instrument.effects);\r\n\t\tsetSelectedValue(this._vibratoSelect, instrument.vibrato);\r\n\t\tsetSelectedValue(this._vibratoTypeSelect, instrument.vibratoType);\r\n\t\tsetSelectedValue(this._intervalSelect, instrument.interval);\r\n\t\tsetSelectedValue(this._chordSelect, instrument.chord);\r\n\t\tthis._instrumentVolumeSlider.updateValue(instrument.volume);\r\n\t\tthis._panSlider.updateValue(instrument.pan);\r\n\t\tthis._detuneSlider.updateValue(instrument.detune);\r\n\t\tthis._twoNoteArpBox.checked = instrument.fastTwoNoteArp ? true : false;\r\n\t\tthis._tieNoteTransitionBox.checked = instrument.tieNoteTransition ? true : false;\r\n\t\tthis._clicklessTransitionBox.checked = instrument.clicklessTransition ? true : false;\r\n\t\tsetSelectedValue(this._instrumentSelect, instrumentIndex);\r\n\r\n\t\tthis._volumeSlider.updateValue(this._doc.volume);\r\n\r\n\t\t// If an interface element was selected, but becomes invisible (e.g. an instrument\r\n\t\t// select menu) just select the editor container so keyboard commands still work.\r\n\t\tif (wasActive && activeElement != null && activeElement.clientWidth == 0) {\r\n\t\t\tthis.refocusStage();\r\n\t\t}\r\n\r\n\t\tthis._setPrompt(this._doc.prompt);\r\n\r\n\t\tif (this._doc.autoFollow && !this._doc.synth.playing) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic updatePlayButton(): void {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._playButton.classList.remove(\"playButton\");\r\n\t\t\tthis._playButton.classList.add(\"pauseButton\");\r\n\t\t\tthis._playButton.title = \"Pause (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Pause\";\r\n\t\t} else {\r\n\t\t\tthis._playButton.classList.remove(\"pauseButton\");\r\n\t\t\tthis._playButton.classList.add(\"playButton\");\r\n\t\t\tthis._playButton.title = \"Play (Space)\";\r\n\t\t\tthis._playButton.innerText = \"Play\";\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyUp = (event: KeyboardEvent): void => {\r\n\t\tthis._muteEditor.onKeyUp(event);\r\n\t\tif (event.keyCode == 17) { // Ctrl\r\n\t\t\tthis._patternEditor.controlMode = false;\r\n\t\t}\r\n\t\telse if (event.keyCode == 16) { // Shift\r\n\t\t\tthis._patternEditor.shiftMode = false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _tempoStepperCaptureNumberKeys = (event: KeyboardEvent): void => {\r\n\t\t// When the number input is in focus, allow some keyboard events to\r\n\t\t// edit the input without accidentally editing the song otherwise.\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\tcase 13: // enter/return\r\n\t\t\tcase 38: // up\r\n\t\t\tcase 40: // down\r\n\t\t\tcase 37: // left\r\n\t\t\tcase 39: // right\r\n\t\t\tcase 48: // 0\r\n\t\t\tcase 49: // 1\r\n\t\t\tcase 50: // 2\r\n\t\t\tcase 51: // 3\r\n\t\t\tcase 52: // 4\r\n\t\t\tcase 53: // 5\r\n\t\t\tcase 54: // 6\r\n\t\t\tcase 55: // 7\r\n\t\t\tcase 56: // 8\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tevent.stopPropagation();\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenKeyPressed = (event: KeyboardEvent): void => {\r\n\t\tif (this.prompt) {\r\n\t\t\tif (this.prompt instanceof CustomChipPrompt || this.prompt instanceof LimiterPrompt) {\r\n\t\t\t\tthis.prompt.whenKeyPressed(event);\r\n\t\t\t}\r\n\t\t\tif (event.keyCode == 27) { // ESC key\r\n\t\t\t\t// close prompt.\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing song title, channel name, or mod label\r\n\t\tif (document.activeElement == this._songTitleInputBox.input || this._patternEditor.editingModLabel || document.activeElement == this._muteEditor._channelNameInput.input) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t\tthis._patternEditor.stopEditingModLabel(event.keyCode == 27);\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Defer to actively editing volume/pan rows\r\n\t\tif (document.activeElement == this._panSliderInputBox || document.activeElement == this._detuneSliderInputBox || document.activeElement == this._instrumentVolumeSliderInputBox) {\r\n\t\t\t// Enter/esc returns focus to form\r\n\t\t\tif (event.keyCode == 13 || event.keyCode == 27) {\r\n\t\t\t\tthis.mainLayer.focus();\r\n\t\t\t}\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t//this._trackEditor.onKeyPressed(event);\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 27: // ESC key\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 16: // Shift\r\n\t\t\t\tthis._patternEditor.shiftMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 17: // Ctrl\r\n\t\t\t\tthis._patternEditor.controlMode = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32: // space\r\n\t\t\t\t// Jump to mouse\r\n\t\t\t\tif (event.ctrlKey || event.shiftKey) {\r\n\t\t\t\t\tif (!this._doc.synth.playing) {\r\n\t\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._trackEditor.movePlayheadToMouse();\r\n\t\t\t\t\tthis._patternEditor.movePlayheadToMouse();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._togglePlay();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 90: // z\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.redo();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.undo();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 89: // y\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 67: // c\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t//this._trackEditor._selectionUpdated();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 13: // enter/return\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 8: // backspace/delete\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 65: // a\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 68: // d\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 70: // f\r\n\t\t\t\tthis._doc.synth.firstBar();\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 72: // h\r\n\t\t\t\tthis._doc.synth.jumpToEditingBar(this._doc.bar);\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 76: // l\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._openPrompt(\"barCount\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 77: // m\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tthis._doc.selection.muteChannels(event.shiftKey);\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 78: // n\r\n\t\t\t\t// Find lowest-index unused pattern for current channel\r\n\t\t\t\t// Shift+n - lowest-index completely empty pattern\r\n\r\n\t\t\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\t\t\tif (event.shiftKey || event.ctrlKey) {\r\n\t\t\t\t\tlet nextEmpty: number = 0;\r\n\t\t\t\t\twhile (nextEmpty < this._doc.song.patternsPerChannel && this._doc.song.channels[this._doc.channel].patterns[nextEmpty].notes.length > 0)\r\n\t\t\t\t\t\tnextEmpty++;\r\n\r\n\t\t\t\t\tnextEmpty++; // The next empty pattern is actually the one after the found one\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextEmpty <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextEmpty > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest have something in them.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextEmpty));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextEmpty, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlet nextUnused: number = 1;\r\n\t\t\t\t\twhile (this._doc.song.channels[this._doc.channel].bars.indexOf(nextUnused) != -1\r\n\t\t\t\t\t\t&& nextUnused <= this._doc.song.patternsPerChannel)\r\n\t\t\t\t\t\tnextUnused++;\r\n\r\n\t\t\t\t\t// Can't set anything if we're at the absolute limit.\r\n\t\t\t\t\tif (nextUnused <= Config.barCountMax) {\r\n\r\n\t\t\t\t\t\tif (nextUnused > this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\t\t\t\t// Add extra empty pattern, if all the rest are used.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, nextUnused));\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Change pattern number to lowest-index unused\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, nextUnused, this._doc.bar, this._doc.channel, 1, 1));\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._doc.record(group);\r\n\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 81: // q\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 83: // s\r\n\t\t\t\tif (this._doc.enableChannelMuting) {\r\n\t\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\t\tthis._doc.selection.muteChannels(false);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis._doc.selection.soloChannels();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 86: // v\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 87: // w\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase 73: // i\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tconst instrument: Instrument = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()];\r\n\t\t\t\t\tconst instrumentObject: any = instrument.toJsonObject();\r\n\t\t\t\t\tdelete instrumentObject[\"volume\"];\r\n\t\t\t\t\tdelete instrumentObject[\"pan\"];\r\n\t\t\t\t\tdelete instrumentObject[\"preset\"];\r\n\t\t\t\t\tthis._copyTextToClipboard(JSON.stringify(instrumentObject));\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 82: // r\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._randomPreset();\r\n\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 219: // left brace\r\n\t\t\t\tthis._doc.synth.prevBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 221: // right brace\r\n\t\t\t\tthis._doc.synth.nextBar();\r\n\t\t\t\tif (this._doc.autoFollow) {\r\n\t\t\t\t\tnew ChangeChannelBar(this._doc, this._doc.channel, Math.floor(this._doc.synth.playhead));\r\n\t\t\t\t}\r\n\t\t\t\tthis._barScrollBar.animatePlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 189: // -\r\n\t\t\tcase 173: // Firefox -\r\n\t\t\t\tthis._doc.selection.transpose(false, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 187: // +\r\n\t\t\tcase 61: // Firefox +\r\n\t\t\tcase 171: // Some users have this as +? Hmm.\r\n\t\t\t\tthis._doc.selection.transpose(true, event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 38: // up\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel up, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == 0 || this._doc.channel == this._doc.song.pitchChannelCount || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel - 1, this._doc.channel), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.max(0, this._doc.selection.boxSelectionY1 - 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel - 1 + this._doc.song.getChannelCount()) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 40: // down\r\n\t\t\t\tif (event.ctrlKey) {\r\n\t\t\t\t\t// Swap channel down, if it wouldn't break from the channel type layout\r\n\t\t\t\t\tif (this._doc.channel == this._doc.song.pitchChannelCount - 1 || this._doc.channel == this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount - 1 || this._doc.channel == this._doc.song.getChannelCount() - 1) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._doc.record(new ChangeChannelOrder(this._doc, this._doc.channel, this._doc.channel + 1), false);\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1), this._doc.bar);\r\n\t\t\t\t}\r\n\t\t\t\telse if (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionY1 = Math.min(this._doc.song.getChannelCount() - 1, this._doc.selection.boxSelectionY1 + 1);\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar((this._doc.channel + 1) % this._doc.song.getChannelCount(), this._doc.bar);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 37: // left\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.max(0, this._doc.selection.boxSelectionX1 - 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + this._doc.song.barCount - 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 39: // right\r\n\t\t\t\tif (event.shiftKey) {\r\n\t\t\t\t\tthis._doc.selection.boxSelectionX1 = Math.min(this._doc.song.barCount - 1, this._doc.selection.boxSelectionX1 + 1);\r\n\t\t\t\t\tthis._doc.selection.scrollToSelection();\r\n\t\t\t\t\tthis._doc.selection.selectionUpdated();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis._doc.selection.setChannelBar(this._doc.channel, (this._doc.bar + 1) % this._doc.song.barCount);\r\n\t\t\t\t\tthis._doc.selection.resetBoxSelection();\r\n\t\t\t\t}\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 46: // Delete\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 48: // 0\r\n\t\t\t\tthis._doc.selection.nextDigit(\"0\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 49: // 1\r\n\t\t\t\tthis._doc.selection.nextDigit(\"1\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 50: // 2\r\n\t\t\t\tthis._doc.selection.nextDigit(\"2\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 51: // 3\r\n\t\t\t\tthis._doc.selection.nextDigit(\"3\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 52: // 4\r\n\t\t\t\tthis._doc.selection.nextDigit(\"4\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 53: // 5\r\n\t\t\t\tthis._doc.selection.nextDigit(\"5\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 54: // 6\r\n\t\t\t\tthis._doc.selection.nextDigit(\"6\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 55: // 7\r\n\t\t\t\tthis._doc.selection.nextDigit(\"7\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 56: // 8\r\n\t\t\t\tthis._doc.selection.nextDigit(\"8\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 57: // 9\r\n\t\t\t\tthis._doc.selection.nextDigit(\"9\", event.shiftKey || event.ctrlKey);\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis._doc.selection.digits = \"\";\r\n\t\t\t\tthis._doc.selection.instrumentDigits = \"\";\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _copyTextToClipboard(text: string): void {\r\n\t\t// Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n\t\tlet nav: any;\r\n\t\tnav = navigator;\r\n\r\n\t\tif (nav.clipboard && nav.clipboard.writeText) {\r\n\t\t\tnav.clipboard.writeText(text).catch(() => {\r\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", text);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n\t\ttextField.innerText = text;\r\n\t\tdocument.body.appendChild(textField);\r\n\t\ttextField.select();\r\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\r\n\t\ttextField.remove();\r\n\t\tthis.refocusStage();\r\n\t\tif (!succeeded) window.prompt(\"Copy this:\", text);\r\n\t}\r\n\r\n\tprivate _whenPrevBarPressed = (): void => {\r\n\t\tthis._doc.synth.prevBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _whenNextBarPressed = (): void => {\r\n\t\tthis._doc.synth.nextBar();\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate _togglePlay = (): void => {\r\n\t\tif (this._doc.synth.playing) {\r\n\t\t\tthis._pause();\r\n\t\t} else {\r\n\t\t\tthis._doc.synth.snapToBar();\r\n\t\t\tthis._play();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _play(): void {\r\n\t\tthis._doc.synth.play();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _pause(): void {\r\n\t\tthis._doc.synth.pause();\r\n\t\tthis._doc.synth.resetEffects();\r\n\t\tif (this._doc.autoFollow) {\r\n\t\t\tthis._doc.synth.goToBar(this._doc.bar);\r\n\t\t}\r\n\t\tthis._doc.synth.snapToBar();\r\n\t\tthis.updatePlayButton();\r\n\t\twindow.clearInterval(this._modSliderHandle);\r\n\t\twindow.clearInterval(this._volumeHandle);\r\n\t\twindow.clearInterval(this._barScrollbarHandle);\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t\tthis.outVolumeHistoricCap = 0;\r\n\t}\r\n\r\n\tpublic _animate = (): void => {\r\n\t\t// Need to update mods once more to clear the slider display\r\n\t\tthis._modSliderUpdate();\r\n\t\t// Same for volume display\r\n\t\tif (this._doc.displayVolumeBar) {\r\n\t\t\tthis._volumeUpdate();\r\n\t\t}\r\n\t\t// ...and barscrollbar playhead\r\n\t\tthis._barScrollBar.animatePlayhead();\r\n\r\n\t\twindow.requestAnimationFrame(this._animate);\r\n\t}\r\n\r\n\tpublic _volumeUpdate = (): void => {\r\n\t\tthis.outVolumeHistoricTimer--;\r\n\t\tif (this.outVolumeHistoricTimer <= 0) {\r\n\t\t\tthis.outVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (this._doc.song.outVolumeCap > this.outVolumeHistoricCap) {\r\n\t\t\tthis.outVolumeHistoricCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis.outVolumeHistoricTimer = 50;\r\n\t\t}\r\n\r\n\t\tif (this._doc.song.outVolumeCap != this.lastOutVolumeCap) {\r\n\t\t\tthis.lastOutVolumeCap = this._doc.song.outVolumeCap;\r\n\t\t\tthis._animateVolume(this._doc.song.outVolumeCap, this.outVolumeHistoricCap);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _animateVolume(outVolumeCap: number, historicOutCap: number): void {\r\n\t\tthis._outVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, outVolumeCap * 144));\r\n\t\tthis._outVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\r\n\t}\r\n\r\n\tprivate _setVolumeSlider = (): void => {\r\n\t\tthis._doc.setVolume(Number(this._volumeSlider.input.value));\r\n\t}\r\n\r\n\tprivate _copyInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = instrument.toJsonObject();\r\n\t\tinstrumentCopy[\"isDrum\"] = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\twindow.localStorage.setItem(\"instrumentCopy\", JSON.stringify(instrumentCopy));\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _pasteInstrument(): void {\r\n\t\tconst channel: Channel = this._doc.song.channels[this._doc.channel];\r\n\t\tconst instrument: Instrument = channel.instruments[this._doc.getCurrentInstrument()];\r\n\t\tconst instrumentCopy: any = JSON.parse(String(window.localStorage.getItem(\"instrumentCopy\")));\r\n\t\tif (instrumentCopy != null && instrumentCopy[\"isDrum\"] == this._doc.song.getChannelIsNoise(this._doc.channel)) {\r\n\t\t\tthis._doc.record(new ChangePasteInstrument(this._doc, instrument, instrumentCopy));\r\n\t\t}\r\n\t\tthis.refocusStage();\r\n\t}\r\n\r\n\tprivate _randomPreset(): void {\r\n\t\tconst isNoise: boolean = this._doc.song.getChannelIsNoise(this._doc.channel);\r\n\t\tthis._doc.record(new ChangePreset(this._doc, pickRandomPresetValue(isNoise)));\r\n\t}\r\n\r\n\tprivate _randomGenerated(): void {\r\n\t\tthis._doc.record(new ChangeRandomGeneratedInstrument(this._doc));\r\n\t}\r\n\r\n\r\n\tprivate _whenSetTempo = (): void => {\r\n\t\tthis._doc.record(new ChangeTempo(this._doc, -1, parseInt(this._tempoStepper.value) | 0));\r\n\t}\r\n\r\n\tprivate _whenSetScale = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._scaleSelect.value)) {\r\n\t\t\tswitch (this._scaleSelect.value) {\r\n\t\t\t\tcase \"forceScale\":\r\n\t\t\t\t\tthis._doc.selection.forceScale();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeScale(this._doc, this._scaleSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetKey = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._keySelect.value)) {\r\n\t\t\tswitch (this._keySelect.value) {\r\n\t\t\t\tcase \"detectKey\":\r\n\t\t\t\t\tthis._doc.record(new ChangeDetectKey(this._doc));\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeKey(this._doc, Config.keys.length - 1 - this._keySelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetRhythm = (): void => {\r\n\t\tif (isNaN(<number><unknown>this._rhythmSelect.value)) {\r\n\t\t\tswitch (this._rhythmSelect.value) {\r\n\t\t\t\tcase \"forceRhythm\":\r\n\t\t\t\t\tthis._doc.selection.forceRhythm();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangeRhythm(this._doc, this._rhythmSelect.selectedIndex));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _refocus = (): void => {\r\n\t\t// Waits a bit because select2 \"steals\" back focus even after the close event fires.\r\n\t\tvar selfRef = this;\r\n\t\tsetTimeout(function () { selfRef.mainLayer.focus(); }, 20);\r\n\t}\r\n\r\n\tpublic _whenSetPitchedPreset = (): void => {\r\n\t\tthis._setPreset($('#pitchPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tpublic _whenSetDrumPreset = (): void => {\r\n\t\tthis._setPreset($('#drumPresetSelect').val() + \"\");\r\n\t}\r\n\r\n\tprivate _setPreset(preset: string): void {\r\n\t\tif (isNaN(<number><unknown>preset)) {\r\n\t\t\tswitch (preset) {\r\n\t\t\t\tcase \"copyInstrument\":\r\n\t\t\t\t\tthis._copyInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"pasteInstrument\":\r\n\t\t\t\t\tthis._pasteInstrument();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomPreset\":\r\n\t\t\t\t\tthis._randomPreset();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"randomGenerated\":\r\n\t\t\t\t\tthis._randomGenerated();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis._doc.notifier.changed();\r\n\t\t} else {\r\n\t\t\tthis._doc.record(new ChangePreset(this._doc, parseInt(preset)));\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackType = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackType(this._doc, this._feedbackTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFeedbackEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFeedbackEnvelope(this._doc, this._feedbackEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetAlgorithm = (): void => {\r\n\t\tthis._doc.record(new ChangeAlgorithm(this._doc, this._algorithmSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInstrument = (): void => {\r\n\t\tthis._doc.selection.setInstrument(this._instrumentSelect.selectedIndex);\r\n\r\n\t\t// Force piano to re-show, if channel is modulator\r\n\t\tif (this._doc.channel >= this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount) {\r\n\t\t\tthis._piano.forceRender();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenSetModChannel = (mod: number): void => {\r\n\t\tthis._doc.selection.setModChannel(mod, this._modChannelBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModInstrument = (mod: number): void => {\r\n\t\tthis._doc.selection.setModInstrument(mod, this._modInstrumentBoxes[mod].selectedIndex);\r\n\r\n\t\t// Force piano to re-show\r\n\t\tthis._piano.forceRender();\r\n\t}\r\n\r\n\tprivate _whenSetModSetting = (mod: number): void => {\r\n\t\t//let prevSetting: number = this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod];\r\n\r\n\t\tthis._doc.selection.setModSetting(mod, this._modSetBoxes[mod].children[this._modSetBoxes[mod].selectedIndex].textContent as string);\r\n\r\n\t\t/* Currently cut this as it would have to scale all patterns to make any sense, and I'm leery about the loss of information\r\n\t\t * inherent in scaling to and from a smaller note resolution.\r\n\t\t// Cause pattern editor to scale note heights if necessary. Relies on above call to change this setting, of course.\r\n\t\tthis._patternEditor.scaleModNotes(mod, prevSetting, this._doc.song.channels[this._doc.channel].instruments[this._doc.getCurrentInstrument()].modSettings[mod]);\r\n\t\t*/\r\n\r\n\t\t// Force piano to re-show if channel is modulator, as text shown on it needs to update\r\n\t\tthis._piano.forceRender();\r\n\r\n\t}\r\n\r\n\t//private _whenCustomizePressed = (): void => {\r\n\t//\tthis._doc.record(new ChangeCustomizeInstrument(this._doc));\r\n\t//}\r\n\r\n\tprivate _whenSetChipWave = (): void => {\r\n\t\tthis._doc.record(new ChangeChipWave(this._doc, this._chipWaveSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetNoiseWave = (): void => {\r\n\t\tthis._doc.record(new ChangeNoiseWave(this._doc, this._chipNoiseSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetFilterEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangeFilterEnvelope(this._doc, this._filterEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetPulseEnvelope = (): void => {\r\n\t\tthis._doc.record(new ChangePulseEnvelope(this._doc, this._pulseEnvelopeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetTransition = (): void => {\r\n\t\tthis._doc.record(new ChangeTransition(this._doc, this._transitionSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetEffects = (): void => {\r\n\t\tthis._doc.record(new ChangeEffects(this._doc, this._effectsSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibrato = (): void => {\r\n\t\tthis._doc.record(new ChangeVibrato(this._doc, this._vibratoSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetVibratoType = (): void => {\r\n\t\tthis._doc.record(new ChangeVibratoType(this._doc, this._vibratoTypeSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetInterval = (): void => {\r\n\t\tthis._doc.record(new ChangeInterval(this._doc, this._intervalSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _whenSetChord = (): void => {\r\n\t\tthis._doc.record(new ChangeChord(this._doc, this._chordSelect.selectedIndex));\r\n\t}\r\n\r\n\tprivate _fileMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._fileMenu.value) {\r\n\t\t\tcase \"new\":\r\n\t\t\t\tthis._doc.goBackToStart();\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tthis._doc.record(new ChangeSong(this._doc, \"\"), false, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"export\":\r\n\t\t\t\tthis._openPrompt(\"export\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"import\":\r\n\t\t\t\tthis._openPrompt(\"import\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyUrl\":\r\n\t\t\t\tthis._copyTextToClipboard(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shareUrl\":\r\n\t\t\t\t(<any>navigator).share({ url: new URL(\"#\" + this._doc.song.toBase64String(), location.href).href });\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"shortenUrl\":\r\n\t\t\t\twindow.open(\"https://tinyurl.com/api-create.php?url=\" + encodeURIComponent(new URL(\"#\" + this._doc.song.toBase64String(), location.href).href));\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"viewPlayer\":\r\n\t\t\t\tlocation.href = \"player/#song=\" + this._doc.song.toBase64String();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copyEmbed\":\r\n\t\t\t\tthis._copyTextToClipboard(`<iframe width=\"384\" height=\"60\" style=\"border: none;\" src=\"${new URL(\"player/#song=\" + this._doc.song.toBase64String(), location.href).href}\"></iframe>`);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"songRecovery\":\r\n\t\t\t\tthis._openPrompt(\"songRecovery\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._fileMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _editMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._editMenu.value) {\r\n\t\t\tcase \"undo\":\r\n\t\t\t\tthis._doc.undo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"redo\":\r\n\t\t\t\tthis._doc.redo();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"copy\":\r\n\t\t\t\tthis._doc.selection.copy();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"insertBars\":\r\n\t\t\t\tthis._doc.selection.insertBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"deleteBars\":\r\n\t\t\t\tthis._doc.selection.deleteBars();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNotes\":\r\n\t\t\t\tthis._doc.selection.pasteNotes();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"pasteNumbers\":\r\n\t\t\t\tthis._doc.selection.pasteNumbers();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeUp\":\r\n\t\t\t\tthis._doc.selection.transpose(true, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"transposeDown\":\r\n\t\t\t\tthis._doc.selection.transpose(false, false);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectAll\":\r\n\t\t\t\tthis._doc.selection.selectAll();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"selectChannel\":\r\n\t\t\t\tthis._doc.selection.selectChannel();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"duplicatePatterns\":\r\n\t\t\t\tthis._doc.selection.duplicatePatterns();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"barCount\":\r\n\t\t\t\tthis._openPrompt(\"barCount\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"beatsPerBar\":\r\n\t\t\t\tthis._openPrompt(\"beatsPerBar\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"moveNotesSideways\":\r\n\t\t\t\tthis._openPrompt(\"moveNotesSideways\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"channelSettings\":\r\n\t\t\t\tthis._openPrompt(\"channelSettings\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"limiterSettings\":\r\n\t\t\t\tthis._openPrompt(\"limiterSettings\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._editMenu.selectedIndex = 0;\r\n\t}\r\n\r\n\tprivate _optionsMenuHandler = (event: Event): void => {\r\n\t\tswitch (this._optionsMenu.value) {\r\n\t\t\tcase \"autoPlay\":\r\n\t\t\t\tthis._doc.autoPlay = !this._doc.autoPlay;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"autoFollow\":\r\n\t\t\t\tthis._doc.autoFollow = !this._doc.autoFollow;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableNotePreview\":\r\n\t\t\t\tthis._doc.enableNotePreview = !this._doc.enableNotePreview;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showLetters\":\r\n\t\t\t\tthis._doc.showLetters = !this._doc.showLetters;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showFifth\":\r\n\t\t\t\tthis._doc.showFifth = !this._doc.showFifth;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showChannels\":\r\n\t\t\t\tthis._doc.showChannels = !this._doc.showChannels;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"showScrollBar\":\r\n\t\t\t\tthis._doc.showScrollBar = !this._doc.showScrollBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"alwaysFineNoteVol\":\r\n\t\t\t\tthis._doc.alwaysFineNoteVol = !this._doc.alwaysFineNoteVol;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"enableChannelMuting\":\r\n\t\t\t\tthis._doc.enableChannelMuting = !this._doc.enableChannelMuting;\r\n\t\t\t\tfor (const channel of this._doc.song.channels) channel.muted = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayBrowserUrl\":\r\n\t\t\t\tthis._doc.toggleDisplayBrowserUrl();\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"displayVolumeBar\":\r\n\t\t\t\tthis._doc.displayVolumeBar = !this._doc.displayVolumeBar;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"fullScreen\":\r\n\t\t\t\tthis._openPrompt(\"layout\");\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"colorTheme\":\r\n\t\t\t\tthis._openPrompt(\"theme\");\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tthis._optionsMenu.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n\r\n\tprivate _customWavePresetHandler = (event: Event): void => {\r\n\r\n\t\t// Update custom wave value\r\n\t\tlet customWaveArray: Float64Array = new Float64Array(64);\r\n\t\tlet index: number = this._customWavePresetDrop.selectedIndex - 1;\r\n\t\tlet maxValue: number = Number.MIN_VALUE;\r\n\t\tlet minValue: number = Number.MAX_VALUE;\r\n\t\tlet arrayPoint: number = 0;\r\n\t\tlet arrayStep: number = (Config.chipWaves[index].samples.length - 1) / 64.0;\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Compute derivative to get original wave.\r\n\t\t\tcustomWaveArray[i] = (Config.chipWaves[index].samples[Math.floor(arrayPoint)] - Config.chipWaves[index].samples[(Math.floor(arrayPoint) + 1)]) / arrayStep;\r\n\r\n\t\t\tif (customWaveArray[i] < minValue)\r\n\t\t\t\tminValue = customWaveArray[i];\r\n\r\n\t\t\tif (customWaveArray[i] > maxValue)\r\n\t\t\t\tmaxValue = customWaveArray[i];\r\n\r\n\t\t\t// Scale an any-size array to 64 elements\r\n\t\t\tarrayPoint += arrayStep;\r\n\t\t}\r\n\r\n\t\tfor (let i: number = 0; i < 64; i++) {\r\n\t\t\t// Change array range from Min~Max to 0~(Max-Min)\r\n\t\t\tcustomWaveArray[i] -= minValue;\r\n\t\t\t// Divide by (Max-Min) to get a range of 0~1,\r\n\t\t\tcustomWaveArray[i] /= (maxValue - minValue);\r\n\t\t\t//then multiply by 48 to get 0~48,\r\n\t\t\tcustomWaveArray[i] *= 48.0;\r\n\t\t\t//then subtract 24 to get - 24~24\r\n\t\t\tcustomWaveArray[i] -= 24.0;\r\n\t\t\t//need to force integers\r\n\t\t\tcustomWaveArray[i] = Math.ceil(customWaveArray[i]);\r\n\r\n\t\t\t// Copy back data to canvas\r\n\t\t\tthis._customWaveDrawCanvas.newArray[i] = customWaveArray[i];\r\n\t\t}\r\n\r\n\t\t//this._instrumentVolumeSlider.input.value = \"\" + Math.round(Config.waveVolumes[index] * 50.0 - 50.0);\r\n\r\n\t\tthis._doc.record(new ChangeCustomWave(this._doc, customWaveArray))\r\n\t\tthis._doc.record(new ChangeVolume(this._doc, +this._instrumentVolumeSlider.input.value, -Config.volumeRange / 2 + Math.round(Math.sqrt(Config.chipWaves[index].volume) * Config.volumeRange / 2)));\r\n\r\n\t\tthis._customWavePresetDrop.selectedIndex = 0;\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis._doc.savePreferences();\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, Config } from \"../synth/SynthConfig\";\r\nimport { Note, Pattern } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ChangeGroup } from \"./Change\";\r\nimport { ChangeModChannel, ChangeModInstrument, ChangeModSetting, ChangeTrackSelection, ChangeChannelBar, ChangeDuplicateSelectedReusedPatterns, ChangeNoteAdded, ChangeNoteTruncate, ChangePatternNumbers, ChangePatternSelection, ChangeInsertBars, ChangeDeleteBars, ChangeEnsurePatternExists, ChangeNoteLength, ChangePaste, ChangePatternInstrument, ChangePatternsPerChannel, ChangePatternRhythm, ChangePatternScale, ChangeTranspose, comparePatternNotes, unionOfUsedNotes, generateScaleMap } from \"./changes\";\r\n\r\ninterface PatternCopy {\r\n\tinstrument: number;\r\n\tnotes: any[];\r\n}\r\n\r\ninterface ChannelCopy {\r\n\tisNoise: boolean;\r\n\tisMod: boolean;\r\n\tpatterns: Dictionary<PatternCopy>;\r\n\tbars: number[];\r\n}\r\n\r\ninterface SelectionCopy {\r\n\tpartDuration: number;\r\n\tchannels: ChannelCopy[];\r\n}\r\n\r\nexport class Selection {\r\n\tpublic boxSelectionX0: number = 0;\r\n\tpublic boxSelectionY0: number = 0;\r\n\tpublic boxSelectionX1: number = 0;\r\n\tpublic boxSelectionY1: number = 0;\r\n\tpublic digits: string = \"\";\r\n\tpublic instrumentDigits: string = \"\";\r\n\tpublic patternSelectionStart: number = 0;\r\n\tpublic patternSelectionEnd: number = 0;\r\n\tpublic patternSelectionActive: boolean = false;\r\n\r\n\tprivate _changeTranspose: ChangeGroup | null = null;\r\n\tprivate _changeTrack: ChangeGroup | null = null;\r\n\r\n\tconstructor(private _doc: SongDocument) { }\r\n\r\n\tpublic toJSON(): { x0: number, x1: number, y0: number, y1: number, start: number, end: number } {\r\n\t\treturn {\r\n\t\t\t\"x0\": this.boxSelectionX0,\r\n\t\t\t\"x1\": this.boxSelectionX1,\r\n\t\t\t\"y0\": this.boxSelectionY0,\r\n\t\t\t\"y1\": this.boxSelectionY1,\r\n\t\t\t\"start\": this.patternSelectionStart,\r\n\t\t\t\"end\": this.patternSelectionEnd,\r\n\t\t};\r\n\t}\r\n\r\n\tpublic fromJSON(json: { x0: number, x1: number, y0: number, y1: number, start: number, end: number }): void {\r\n\t\tif (json == null) return;\r\n\t\tthis.boxSelectionX0 = +json[\"x0\"];\r\n\t\tthis.boxSelectionX1 = +json[\"x1\"];\r\n\t\tthis.boxSelectionY0 = +json[\"y0\"];\r\n\t\tthis.boxSelectionY1 = +json[\"y1\"];\r\n\t\tthis.patternSelectionStart = +json[\"start\"];\r\n\t\tthis.patternSelectionEnd = +json[\"end\"];\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t\tthis.patternSelectionActive = this.patternSelectionStart < this.patternSelectionEnd;\r\n\t}\r\n\r\n\tpublic selectionUpdated(): void {\r\n\t\tthis._doc.notifier.changed();\r\n\t\tthis.digits = \"\";\r\n\t\tthis.instrumentDigits = \"\";\r\n\t}\r\n\r\n\tpublic get boxSelectionBar(): number {\r\n\t\treturn Math.min(this.boxSelectionX0, this.boxSelectionX1);\r\n\t}\r\n\tpublic get boxSelectionChannel(): number {\r\n\t\treturn Math.min(this.boxSelectionY0, this.boxSelectionY1);\r\n\t}\r\n\tpublic get boxSelectionWidth(): number {\r\n\t\treturn Math.abs(this.boxSelectionX0 - this.boxSelectionX1) + 1;\r\n\t}\r\n\tpublic get boxSelectionHeight(): number {\r\n\t\treturn Math.abs(this.boxSelectionY0 - this.boxSelectionY1) + 1;\r\n\t}\r\n\tpublic scrollToSelection(): void {\r\n\t\tthis._doc.barScrollPos = Math.min(this._doc.barScrollPos, this.boxSelectionX1);\r\n\t\tthis._doc.barScrollPos = Math.max(this._doc.barScrollPos, this.boxSelectionX1 - (this._doc.trackVisibleBars - 1));\r\n\t}\r\n\r\n\tpublic setChannelBar(channel: number, bar: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeChannelBar(this._doc, channel, bar));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic setPattern(pattern: number): void {\r\n\t\tthis._doc.record(new ChangePatternNumbers(this._doc, pattern, this.boxSelectionBar, this.boxSelectionChannel, this.boxSelectionWidth, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic nextDigit(digit: string, forInstrument: boolean): void {\r\n\t\tif (forInstrument) {\r\n\t\t\tthis.instrumentDigits += digit;\r\n\t\t\tvar parsed = parseInt(this.instrumentDigits);\r\n\t\t\tvar pattern: Pattern | null = this._doc.getCurrentPattern();\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = digit;\r\n\t\t\tparsed = parseInt(this.instrumentDigits);\r\n\t\t\tif (parsed != 0 && parsed <= this._doc.song.instrumentsPerChannel && pattern != null) {\r\n\t\t\t\tthis.setInstrument(parsed - 1);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.instrumentDigits = \"\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.digits += digit;\r\n\t\t\tlet parsed: number = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = digit;\r\n\t\t\tparsed = parseInt(this.digits);\r\n\t\t\tif (parsed <= this._doc.song.patternsPerChannel) {\r\n\r\n\t\t\t\tthis.setPattern(parsed);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.digits = \"\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setModChannel(mod: number, index: number): void {\r\n\t\tthis._doc.record(new ChangeModChannel(this._doc, mod, index));\r\n\t}\r\n\r\n\tpublic setModInstrument(mod: number, instrument: number): void {\r\n\t\tthis._doc.record(new ChangeModInstrument(this._doc, mod, instrument));\r\n\t}\r\n\r\n\tpublic setModSetting(mod: number, text: string): void {\r\n\t\tthis._doc.record(new ChangeModSetting(this._doc, mod, text));\r\n\t}\r\n\r\n\tpublic insertBars(): void {\r\n\t\tthis._doc.record(new ChangeInsertBars(this._doc, this.boxSelectionBar + this.boxSelectionWidth, this.boxSelectionWidth));\r\n\t\tconst width: number = this.boxSelectionWidth;\r\n\t\tthis.boxSelectionX0 += width;\r\n\t\tthis.boxSelectionX1 += width;\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tpublic deleteBars(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tif (this._doc.selection.patternSelectionActive) {\r\n\r\n\t\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t\t}\r\n\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this._doc.selection.patternSelectionStart, this._doc.selection.patternSelectionEnd));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tgroup.append(new ChangePatternSelection(this._doc, 0, 0));\r\n\t\t} else {\r\n\t\t\tgroup.append(new ChangeDeleteBars(this._doc, this.boxSelectionBar, this.boxSelectionWidth));\r\n\t\t\tconst width: number = this.boxSelectionWidth;\r\n\t\t\tthis.boxSelectionX0 = Math.max(0, this.boxSelectionX0 - width);\r\n\t\t\tthis.boxSelectionX1 = Math.max(0, this.boxSelectionX1 - width);\r\n\t\t}\r\n\t\tthis._doc.record(group);\r\n\t\t//this._songEditor._barScrollBar.animatePlayhead();\r\n\t}\r\n\r\n\tprivate * _eachSelectedChannel(): IterableIterator<number> {\r\n\t\tfor (let channel: number = this.boxSelectionChannel; channel < this.boxSelectionChannel + this.boxSelectionHeight; channel++) {\r\n\t\t\tyield channel;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedBar(): IterableIterator<number> {\r\n\t\tfor (let bar: number = this.boxSelectionBar; bar < this.boxSelectionBar + this.boxSelectionWidth; bar++) {\r\n\t\t\tyield bar;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate * _eachSelectedPattern(channel: number): IterableIterator<Pattern> {\r\n\t\tconst handledPatterns: Dictionary<boolean> = {};\r\n\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\tif (currentPatternIndex == 0) continue;\r\n\t\t\tif (handledPatterns[String(currentPatternIndex)]) continue;\r\n\t\t\thandledPatterns[String(currentPatternIndex)] = true;\r\n\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\tif (pattern == null) throw new Error();\r\n\t\t\tyield pattern;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _patternIndexIsUnused(channel: number, patternIndex: number): boolean {\r\n\t\tfor (let i: number = 0; i < this._doc.song.barCount; i++) {\r\n\t\t\tif (this._doc.song.channels[channel].bars[i] == patternIndex) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tpublic copy(): void {\r\n\t\tconst channels: ChannelCopy[] = [];\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tconst patterns: Dictionary<PatternCopy> = {};\r\n\t\t\tconst bars: number[] = [];\r\n\r\n\t\t\tfor (const bar of this._eachSelectedBar()) {\r\n\t\t\t\tconst patternNumber: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tbars.push(patternNumber);\r\n\t\t\t\tif (patterns[String(patternNumber)] == undefined) {\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tlet instrument: number = 0;\r\n\t\t\t\t\tlet notes: Note[] = [];\r\n\t\t\t\t\tif (pattern != null) {\r\n\t\t\t\t\t\tinstrument = pattern.instrument;\r\n\r\n\t\t\t\t\t\tif (this.patternSelectionActive) {\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tif (note.end <= this.patternSelectionStart) continue;\r\n\t\t\t\t\t\t\t\tif (note.start >= this.patternSelectionEnd) continue;\r\n\t\t\t\t\t\t\t\tif (note.start < this.patternSelectionStart || note.end > this.patternSelectionEnd) {\r\n\t\t\t\t\t\t\t\t\tnew ChangeNoteLength(null, note, Math.max(note.start, this.patternSelectionStart), Math.min(this.patternSelectionEnd, note.end));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tnote.start -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnote.end -= this.patternSelectionStart;\r\n\t\t\t\t\t\t\t\tnotes.push(note);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnotes = pattern.notes;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpatterns[String(patternNumber)] = { \"instrument\": instrument, \"notes\": notes };\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst channelCopy: ChannelCopy = {\r\n\t\t\t\t\"isNoise\": this._doc.song.getChannelIsNoise(channel),\r\n\t\t\t\t\"isMod\": this._doc.song.getChannelIsMod(channel),\r\n\t\t\t\t\"patterns\": patterns,\r\n\t\t\t\t\"bars\": bars,\r\n\t\t\t};\r\n\t\t\tchannels.push(channelCopy);\r\n\t\t}\r\n\r\n\t\tconst selectionCopy: SelectionCopy = {\r\n\t\t\t\"partDuration\": this.patternSelectionActive ? this.patternSelectionEnd - this.patternSelectionStart : this._doc.song.beatsPerBar * Config.partsPerBeat,\r\n\t\t\t\"channels\": channels,\r\n\t\t};\r\n\t\twindow.localStorage.setItem(\"selectionCopy\", JSON.stringify(selectionCopy));\r\n\t}\r\n\r\n\t// I'm sorry this function is so complicated!\r\n\t// Basically I'm trying to avoid accidentally modifying patterns that are used\r\n\t// elsewhere in the song (unless we're just pasting a single pattern) but I'm\r\n\t// also trying to reuse patterns where it makes sense to do so, especially \r\n\t// in the same channel it was copied from.\r\n\tpublic pasteNotes(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\t\tconst copiedPartDuration: number = selectionCopy[\"partDuration\"] >>> 0;\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst isNoise: boolean = !!channelCopy[\"isNoise\"];\r\n\t\t\tconst isMod: boolean = !!channelCopy[\"isMod\"];\r\n\t\t\tconst patternCopies: Dictionary<PatternCopy> = channelCopy[\"patterns\"] || {};\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\t\t\tif (isNoise != this._doc.song.getChannelIsNoise(channel)) continue;\r\n\t\t\tif (isMod != this._doc.song.getChannelIsMod(channel)) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tif (!fillSelection && copiedBars.length == 1 && channelCopies.length == 1) {\r\n\t\t\t\t// Special case: if there's just one pattern being copied, try to insert it\r\n\t\t\t\t// into whatever pattern is already selected.\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[0] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar;\r\n\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\r\n\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\r\n\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\r\n\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\t!this.patternSelectionActive &&\r\n\t\t\t\t\t\t((comparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) && instrumentCopy == existingPattern.instrument) ||\r\n\t\t\t\t\t\t\tthis._patternIndexIsUnused(channel, copiedPatternIndex))) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t} else if (this.patternSelectionActive) {\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tconst usedPatterns: Dictionary<boolean> = {};\r\n\r\n\t\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, pasteWidth, this.boxSelectionChannel, pasteHeight));\r\n\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst currentPatternIndex: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tconst reusedIndex: string = [copiedPatternIndex, currentPatternIndex].join(\",\");\r\n\t\t\t\t\tif (copiedPatternIndex == 0 && currentPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (currentPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\t\tconst pattern: Pattern = this._doc.song.getPattern(channel, bar)!;\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\r\n\t\t\t\t\t\tif (!usedPatterns[String(currentPatternIndex)]) {\r\n\t\t\t\t\t\t\tusedPatterns[String(currentPatternIndex)] = true;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// If this pattern is used here and elsewhere, it's not safe to modify it directly, so\r\n\t\t\t\t\t\t\t// make a duplicate of it and modify that instead.\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t\tconst newPattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\t\tif (newPattern == null) throw new Error();\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, pattern.instrument, newPattern));\r\n\t\t\t\t\t\t\tfor (const note of pattern.cloneNotes()) {\r\n\t\t\t\t\t\t\t\tgroup.append(new ChangeNoteAdded(this._doc, newPattern, note, newPattern.notes.length, false));\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\tif (copiedPatternIndex == 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangeNoteTruncate(this._doc, pattern, this.patternSelectionStart, this.patternSelectionEnd));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionStart, this.patternSelectionEnd, copiedPartDuration));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst removedPattern: number = this._doc.song.channels[channel].bars[bar];\r\n\t\t\t\t\tif (removedPattern != 0) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, 0, bar, channel, 1, 1));\r\n\t\t\t\t\t\tif (this._patternIndexIsUnused(channel, removedPattern)) {\r\n\t\t\t\t\t\t\t// When a pattern becomes unused when replaced by rectangular selection pasting,\r\n\t\t\t\t\t\t\t// remove all the notes from the pattern so that it may be reused.\r\n\t\t\t\t\t\t\tthis._doc.song.channels[channel].patterns[removedPattern - 1].notes.length = 0;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst reusablePatterns: Dictionary<number> = {};\r\n\t\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\t\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\t\tconst reusedIndex: string = String(copiedPatternIndex);\r\n\t\t\t\t\tif (copiedPatternIndex == 0) continue;\r\n\t\t\t\t\tif (reusablePatterns[reusedIndex] != undefined) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, reusablePatterns[reusedIndex], bar, channel, 1, 1));\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst patternCopy: PatternCopy = patternCopies[String(copiedPatternIndex)];\r\n\t\t\t\t\tconst instrumentCopy: number = Math.min(patternCopy[\"instrument\"] >>> 0, this._doc.song.instrumentsPerChannel - 1);\r\n\t\t\t\t\tconst existingPattern: Pattern | undefined = this._doc.song.channels[channel].patterns[copiedPatternIndex - 1];\r\n\r\n\t\t\t\t\tif (existingPattern != undefined &&\r\n\t\t\t\t\t\tcopiedPartDuration == Config.partsPerBeat * this._doc.song.beatsPerBar &&\r\n\t\t\t\t\t\tcomparePatternNotes(patternCopy[\"notes\"], existingPattern.notes) &&\r\n\t\t\t\t\t\tinstrumentCopy == existingPattern.instrument) {\r\n\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (existingPattern != undefined && this._patternIndexIsUnused(channel, copiedPatternIndex)) {\r\n\t\t\t\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tgroup.append(new ChangeEnsurePatternExists(this._doc, channel, bar));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst pattern: Pattern | null = this._doc.song.getPattern(channel, bar);\r\n\t\t\t\t\t\tif (pattern == null) throw new Error();\r\n\t\t\t\t\t\tgroup.append(new ChangePaste(this._doc, pattern, patternCopy[\"notes\"], this.patternSelectionActive ? this.patternSelectionStart : 0, this.patternSelectionActive ? this.patternSelectionEnd : Config.partsPerBeat * this._doc.song.beatsPerBar, copiedPartDuration));\r\n\t\t\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrumentCopy, pattern));\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treusablePatterns[reusedIndex] = this._doc.song.channels[channel].bars[bar];\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic pasteNumbers(): void {\r\n\t\tconst selectionCopy: SelectionCopy | null = JSON.parse(String(window.localStorage.getItem(\"selectionCopy\")));\r\n\t\tif (selectionCopy == null) return;\r\n\t\tconst channelCopies: ChannelCopy[] = selectionCopy[\"channels\"] || [];\r\n\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\t\tconst fillSelection: boolean = (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1);\r\n\r\n\t\tconst pasteHeight: number = fillSelection ? this.boxSelectionHeight : Math.min(channelCopies.length, this._doc.song.getChannelCount() - this.boxSelectionChannel);\r\n\t\tfor (let pasteChannel: number = 0; pasteChannel < pasteHeight; pasteChannel++) {\r\n\t\t\tconst channelCopy: ChannelCopy = channelCopies[pasteChannel % channelCopies.length];\r\n\t\t\tconst channel: number = this.boxSelectionChannel + pasteChannel;\r\n\r\n\t\t\tconst copiedBars: number[] = channelCopy[\"bars\"] || [];\r\n\t\t\tif (copiedBars.length == 0) continue;\r\n\r\n\t\t\tconst pasteWidth: number = fillSelection ? this.boxSelectionWidth : Math.min(copiedBars.length, this._doc.song.barCount - this.boxSelectionBar);\r\n\t\t\tfor (let pasteBar: number = 0; pasteBar < pasteWidth; pasteBar++) {\r\n\t\t\t\tconst copiedPatternIndex: number = copiedBars[pasteBar % copiedBars.length] >>> 0;\r\n\t\t\t\tconst bar: number = this.boxSelectionBar + pasteBar;\r\n\r\n\t\t\t\tif (copiedPatternIndex > this._doc.song.patternsPerChannel) {\r\n\t\t\t\t\tgroup.append(new ChangePatternsPerChannel(this._doc, copiedPatternIndex));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup.append(new ChangePatternNumbers(this._doc, copiedPatternIndex, bar, channel, 1, 1));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic selectAll(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 &&\r\n\t\t\tthis.boxSelectionChannel == 0 &&\r\n\t\t\tthis.boxSelectionWidth == this._doc.song.barCount &&\r\n\t\t\tthis.boxSelectionHeight == this._doc.song.getChannelCount()) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this._doc.channel, this._doc.channel);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, 0, this._doc.song.getChannelCount() - 1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic selectChannel(): void {\r\n\t\tnew ChangePatternSelection(this._doc, 0, 0);\r\n\t\tif (this.boxSelectionBar == 0 && this.boxSelectionWidth == this._doc.song.barCount) {\r\n\t\t\tthis.setTrackSelection(this._doc.bar, this._doc.bar, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t} else {\r\n\t\t\tthis.setTrackSelection(0, this._doc.song.barCount - 1, this.boxSelectionY0, this.boxSelectionY1);\r\n\t\t}\r\n\t\tthis.selectionUpdated();\r\n\t}\r\n\r\n\tpublic duplicatePatterns(): void {\r\n\t\tthis._doc.record(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t}\r\n\r\n\tpublic muteChannels(allChannels: boolean): void {\r\n\t\tif (allChannels) {\r\n\t\t\tlet anyMuted: boolean = false;\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tif (this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyMuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.channels.length; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = !anyMuted;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tlet anyUnmuted: boolean = false;\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tif (!this._doc.song.channels[channel].muted) {\r\n\t\t\t\t\tanyUnmuted = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = anyUnmuted;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic soloChannels(): void {\r\n\t\tlet alreadySoloed: boolean = true;\r\n\r\n\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\tconst shouldBeMuted: boolean = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\tif (this._doc.song.channels[channel].muted != shouldBeMuted) {\r\n\t\t\t\talreadySoloed = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (alreadySoloed) {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (let channel: number = 0; channel < this._doc.song.pitchChannelCount + this._doc.song.noiseChannelCount; channel++) {\r\n\t\t\t\tthis._doc.song.channels[channel].muted = channel < this.boxSelectionChannel || channel >= this.boxSelectionChannel + this.boxSelectionHeight;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.notifier.changed();\r\n\t}\r\n\r\n\tpublic forceRhythm(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternRhythm(this._doc, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic forceScale(): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tconst scaleFlags: boolean[] = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tunionOfUsedNotes(pattern, scaleFlags);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst scaleMap: number[] = generateScaleMap(scaleFlags, this._doc.song.scale);\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tif (this._doc.song.getChannelIsNoise(channel) || this._doc.song.getChannelIsMod(channel)) continue;\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternScale(this._doc, pattern, scaleMap));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic setTrackSelection(newX0: number, newX1: number, newY0: number, newY1: number): void {\r\n\t\tconst canReplaceLastChange: boolean = true;//this._doc.lastChangeWas(this._changeTrack);\r\n\t\tthis._changeTrack = new ChangeGroup();\r\n\t\tthis._changeTrack.append(new ChangeTrackSelection(this._doc, newX0, newX1, newY0, newY1));\r\n\t\tthis._doc.record(this._changeTrack, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic transpose(upward: boolean, octave: boolean): void {\r\n\t\tconst canReplaceLastChange: boolean = this._doc.lastChangeWas(this._changeTranspose);\r\n\t\tthis._changeTranspose = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tthis._changeTranspose.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tthis._changeTranspose.append(new ChangeTranspose(this._doc, channel, pattern, upward, false, octave));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(this._changeTranspose, canReplaceLastChange);\r\n\t}\r\n\r\n\tpublic setInstrument(instrument: number): void {\r\n\t\tconst group: ChangeGroup = new ChangeGroup();\r\n\r\n\t\tif (this.boxSelectionWidth > 1 || this.boxSelectionHeight > 1) {\r\n\t\t\tgroup.append(new ChangeDuplicateSelectedReusedPatterns(this._doc, this.boxSelectionBar, this.boxSelectionWidth, this.boxSelectionChannel, this.boxSelectionHeight));\r\n\t\t}\r\n\r\n\t\tfor (const channel of this._eachSelectedChannel()) {\r\n\t\t\tfor (const pattern of this._eachSelectedPattern(channel)) {\r\n\t\t\t\tgroup.append(new ChangePatternInstrument(this._doc, instrument, pattern));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._doc.record(group);\r\n\t}\r\n\r\n\tpublic resetBoxSelection(): void {\r\n\t\tthis.boxSelectionX0 = this.boxSelectionX1 = this._doc.bar;\r\n\t\tthis.boxSelectionY0 = this.boxSelectionY1 = this._doc.channel;\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nexport class ChangeNotifier {\r\n\tprivate _watchers: (() => void)[] = [];\r\n\tprivate _dirty: boolean = false;\r\n\r\n\tpublic watch(watcher: () => void): void {\r\n\t\tif (this._watchers.indexOf(watcher) == -1) {\r\n\t\t\tthis._watchers.push(watcher);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic unwatch(watcher: () => void): void {\r\n\t\tconst index: number = this._watchers.indexOf(watcher);\r\n\t\tif (index != -1) {\r\n\t\t\tthis._watchers.splice(index, 1);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic changed(): void {\r\n\t\tthis._dirty = true;\r\n\t}\r\n\r\n\tpublic notifyWatchers(): void {\r\n\t\tif (!this._dirty) return;\r\n\t\tthis._dirty = false;\r\n\t\tfor (const watcher of this._watchers.concat()) {\r\n\t\t\twatcher();\r\n\t\t}\r\n\t}\r\n}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Pattern, Song, Synth } from \"../synth/synth\";\r\nimport { SongRecovery, generateUid } from \"./SongRecovery\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport { Layout } from \"./Layout\";\r\nimport { Selection } from \"./Selection\";\r\nimport { Change } from \"./Change\";\r\nimport { ChangeNotifier } from \"./ChangeNotifier\";\r\nimport { ChangeSong, setDefaultInstruments } from \"./changes\";\r\nimport { Config } from \"../synth/SynthConfig\";\r\n\r\n//namespace beepbox {\r\ninterface HistoryState {\r\n\tcanUndo: boolean;\r\n\tsequenceNumber: number;\r\n\tbar: number;\r\n\tchannel: number;\r\n\trecoveryUid: string;\r\n\tprompt: string | null;\r\n\tselection: { x0: number, x1: number, y0: number, y1: number, start: number, end: number };\r\n}\r\n\r\nexport class SongDocument {\r\n\tpublic song: Song;\r\n\tpublic synth: Synth;\r\n\tpublic notifier: ChangeNotifier = new ChangeNotifier();\r\n\tpublic selection: Selection = new Selection(this);\r\n\tpublic channel: number = 0;\r\n\tpublic muteEditorChannel: number = 0;\r\n\tpublic bar: number = 0;\r\n\tpublic recalcChannelNames: boolean;\r\n\tpublic autoPlay: boolean;\r\n\tpublic autoFollow: boolean;\r\n\tpublic enableNotePreview: boolean;\r\n\tpublic showFifth: boolean;\r\n\tpublic showLetters: boolean;\r\n\tpublic showChannels: boolean;\r\n\tpublic showScrollBar: boolean;\r\n\tpublic alwaysFineNoteVol: boolean = false;\r\n\tpublic alwaysShowSettings: boolean = true;\r\n\tpublic fullScreen: string;\r\n\tpublic enableChannelMuting: boolean;\r\n\tpublic colorTheme: string;\r\n\tpublic displayBrowserUrl: boolean;\r\n\tpublic displayVolumeBar: boolean = true;\r\n\tpublic volume: number = 75;\r\n\tpublic trackVisibleBars: number = 16;\r\n\tpublic barScrollPos: number = 0;\r\n\tpublic prompt: string | null = null;\r\n\tpublic windowOctaves: number = 3 + (+(window.localStorage.getItem(\"extraOctaves\") || \"0\"));\r\n\tpublic scrollableOctaves: number = Config.pitchOctaves - this.windowOctaves;\r\n\tpublic windowPitchCount: number = this.windowOctaves * Config.pitchesPerOctave + 1;\r\n\tprivate static readonly _maximumUndoHistory: number = 100;\r\n\tprivate _recovery: SongRecovery = new SongRecovery();\r\n\tprivate _recoveryUid: string;\r\n\tprivate _recentChange: Change | null = null;\r\n\tprivate _sequenceNumber: number = 0;\r\n\tprivate _stateShouldBePushed: boolean = false;\r\n\tprivate _recordedNewSong: boolean = false;\r\n\tpublic _waitingToUpdateState: boolean = false;\r\n\r\n\tconstructor() {\r\n\t\tthis.notifier.watch(this._normalizeSelection);\r\n\r\n\t\tthis.autoPlay = window.localStorage.getItem(\"autoPlay\") == \"true\";\r\n\t\tthis.autoFollow = window.localStorage.getItem(\"autoFollow\") == \"true\";\r\n\t\tthis.enableNotePreview = window.localStorage.getItem(\"enableNotePreview\") == \"true\";\r\n\t\tthis.showFifth = window.localStorage.getItem(\"showFifth\") == \"true\";\r\n\t\tthis.showLetters = window.localStorage.getItem(\"showLetters\") == \"true\";\r\n\t\tthis.showChannels = window.localStorage.getItem(\"showChannels\") == \"true\";\r\n\t\tthis.showScrollBar = window.localStorage.getItem(\"showScrollBar\") == \"true\";\r\n\t\tthis.alwaysFineNoteVol = window.localStorage.getItem(\"alwaysFineNoteVol\") == \"true\";\r\n\t\tthis.enableChannelMuting = window.localStorage.getItem(\"enableChannelMuting\") == \"true\";\r\n\t\tthis.displayBrowserUrl = window.localStorage.getItem(\"displayBrowserUrl\") != \"false\";\r\n\t\tthis.displayVolumeBar = window.localStorage.getItem(\"displayVolumeBar\") != \"false\";\r\n\t\tthis.fullScreen = window.localStorage.getItem(\"fullScreen\") || \"normal\";\r\n\t\tthis.colorTheme = window.localStorage.getItem(\"colorTheme\") || \"microbox classic\";\r\n\r\n\t\tColorConfig.setTheme(this.colorTheme);\r\n\t\tLayout.setFullScreen(this.fullScreen);\r\n\r\n\t\tif (window.localStorage.getItem(\"volume\") != null) {\r\n\t\t\tthis.volume = Math.min(<any>window.localStorage.getItem(\"volume\") >>> 0, 75);\r\n\t\t}\r\n\r\n\t\tif (window.sessionStorage.getItem(\"currentUndoIndex\") == null) {\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", \"0\");\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", \"0\");\r\n\t\t}\r\n\r\n\t\tlet songString: string = window.location.hash;\r\n\t\tif (songString == \"\") {\r\n\t\t\tsongString = this._getHash();\r\n\t\t}\r\n\t\tthis.song = new Song(songString);\r\n\t\tif (songString == \"\" || songString == undefined) setDefaultInstruments(this.song);\r\n\t\tsongString = this.song.toBase64String();\r\n\t\tthis.synth = new Synth(this.song);\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\r\n\t\tlet state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) {\r\n\t\t\t// When the page is first loaded, indicate that undo is NOT possible.\r\n\t\t\tstate = { canUndo: false, sequenceNumber: 0, bar: 0, channel: 0, recoveryUid: generateUid(), prompt: null, selection: this.selection.toJSON() };\r\n\t\t}\r\n\t\tif (state.recoveryUid == undefined) state.recoveryUid = generateUid();\r\n\t\tthis._replaceState(state, songString);\r\n\t\twindow.addEventListener(\"hashchange\", this._whenHistoryStateChanged);\r\n\t\twindow.addEventListener(\"popstate\", this._whenHistoryStateChanged);\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.barScrollPos = Math.max(0, this.bar - (this.trackVisibleBars - 6));\r\n\t\tthis.prompt = state.prompt;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t// For all input events, catch them when they are about to finish bubbling,\r\n\t\t// presumably after all handlers are done updating the model, then update the\r\n\t\t// view before the screen renders. mouseenter and mouseleave do not bubble,\r\n\t\t// but they are immediately followed by mousemove which does. \r\n\t\tfor (const eventName of [\"input\", \"change\", \"click\", \"keyup\", \"keydown\", \"mousedown\", \"mousemove\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"]) {\r\n\t\t\twindow.addEventListener(eventName, this._cleanDocument);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toggleDisplayBrowserUrl() {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tthis.displayBrowserUrl = !this.displayBrowserUrl;\r\n\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t}\r\n\r\n\tprivate _getHistoryState(): HistoryState | null {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.history.state;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? null : json.state;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _getHash(): string {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\treturn window.location.hash;\r\n\t\t} else {\r\n\t\t\tconst json: any = JSON.parse(window.sessionStorage.getItem(window.sessionStorage.getItem(\"currentUndoIndex\")!)!);\r\n\t\t\treturn json == null ? \"\" : json.hash;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _replaceState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.replaceState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\twindow.sessionStorage.setItem(window.sessionStorage.getItem(\"currentUndoIndex\") || \"0\", JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _pushState(state: HistoryState, hash: string): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.pushState(state, \"\", \"#\" + hash);\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\twindow.sessionStorage.setItem(\"newestUndoIndex\", String(currentIndex));\r\n\t\t\tif (currentIndex == oldestIndex) {\r\n\t\t\t\toldestIndex = (oldestIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"oldestUndoIndex\", String(oldestIndex));\r\n\t\t\t}\r\n\t\t\twindow.sessionStorage.setItem(String(currentIndex), JSON.stringify({ state, hash }));\r\n\t\t\twindow.history.replaceState(null, \"\", location.pathname);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _forward(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.forward();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet newestIndex: number = Number(window.sessionStorage.getItem(\"newestUndoIndex\"));\r\n\t\t\tif (currentIndex != newestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _back(): void {\r\n\t\tif (this.displayBrowserUrl) {\r\n\t\t\twindow.history.back();\r\n\t\t} else {\r\n\t\t\tlet currentIndex: number = Number(window.sessionStorage.getItem(\"currentUndoIndex\"));\r\n\t\t\tlet oldestIndex: number = Number(window.sessionStorage.getItem(\"oldestUndoIndex\"));\r\n\t\t\tif (currentIndex != oldestIndex) {\r\n\t\t\t\tcurrentIndex = (currentIndex + SongDocument._maximumUndoHistory - 1) % SongDocument._maximumUndoHistory;\r\n\t\t\t\twindow.sessionStorage.setItem(\"currentUndoIndex\", String(currentIndex));\r\n\t\t\t\tsetTimeout(this._whenHistoryStateChanged);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _whenHistoryStateChanged = (): void => {\r\n\t\tif (window.history.state == null && window.location.hash != \"\") {\r\n\t\t\t// The user changed the hash directly.\r\n\t\t\tthis._sequenceNumber++;\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t\tconst state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: null, selection: this.selection.toJSON() };\r\n\t\t\tnew ChangeSong(this, window.location.hash);\r\n\t\t\tthis.prompt = state.prompt;\r\n\t\t\tif (this.displayBrowserUrl) {\r\n\t\t\t\tthis._replaceState(state, this.song.toBase64String());\r\n\t\t\t} else {\r\n\t\t\t\tthis._pushState(state, this.song.toBase64String());\r\n\t\t\t}\r\n\t\t\tthis.forgetLastChange();\r\n\t\t\tthis.notifier.notifyWatchers();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst state: HistoryState | null = this._getHistoryState();\r\n\t\tif (state == null) throw new Error(\"History state is null.\");\r\n\r\n\t\t// Abort if we've already handled the current state. \r\n\t\tif (state.sequenceNumber == this._sequenceNumber) return;\r\n\r\n\t\tthis.bar = state.bar;\r\n\t\tthis.channel = state.channel;\r\n\t\tthis._sequenceNumber = state.sequenceNumber;\r\n\t\tthis.prompt = state.prompt;\r\n\t\tnew ChangeSong(this, this._getHash());\r\n\r\n\t\tthis._recoveryUid = state.recoveryUid;\r\n\t\tthis.selection.fromJSON(state.selection);\r\n\r\n\t\t//this.barScrollPos = Math.min(this.bar, Math.max(this.bar - (this.trackVisibleBars - 1), this.barScrollPos));\r\n\r\n\t\tthis.forgetLastChange();\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _cleanDocument = (): void => {\r\n\t\tthis.notifier.notifyWatchers();\r\n\t}\r\n\r\n\tprivate _normalizeSelection = (): void => {\r\n\t\t// I'm allowing the doc.bar to drift outside the box selection while playing\r\n\t\t// because it may auto-follow the playhead outside the selection but it would\r\n\t\t// be annoying to lose your selection just because the song is playing.\r\n\t\tif ((!this.synth.playing && (this.bar < this.selection.boxSelectionBar || this.selection.boxSelectionBar + this.selection.boxSelectionWidth <= this.bar)) ||\r\n\t\t\tthis.channel < this.selection.boxSelectionChannel ||\r\n\t\t\tthis.selection.boxSelectionChannel + this.selection.boxSelectionHeight <= this.channel ||\r\n\t\t\tthis.song.barCount < this.selection.boxSelectionBar + this.selection.boxSelectionWidth ||\r\n\t\t\tthis.song.getChannelCount() < this.selection.boxSelectionChannel + this.selection.boxSelectionHeight ||\r\n\t\t\t(this.selection.boxSelectionWidth == 1 && this.selection.boxSelectionHeight == 1)) {\r\n\t\t\tthis.selection.resetBoxSelection();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _updateHistoryState = (): void => {\r\n\t\tthis._waitingToUpdateState = false;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tif (this._stateShouldBePushed) this._sequenceNumber++;\r\n\t\tif (this._recordedNewSong) {\r\n\t\t\tthis._resetSongRecoveryUid();\r\n\t\t} else {\r\n\t\t\tthis._recovery.saveVersion(this._recoveryUid, this.song.title, hash);\r\n\t\t}\r\n\t\tlet state: HistoryState = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tif (this._stateShouldBePushed) {\r\n\t\t\tthis._pushState(state, hash);\r\n\t\t} else {\r\n\t\t\tthis._replaceState(state, hash);\r\n\t\t}\r\n\t\tthis._stateShouldBePushed = false;\r\n\t\tthis._recordedNewSong = false;\r\n\t}\r\n\r\n\tpublic record(change: Change, replace: boolean = false, newSong: boolean = false): void {\r\n\t\tif (change.isNoop()) {\r\n\t\t\tthis._recentChange = null;\r\n\t\t\tif (replace) this._back();\r\n\t\t} else {\r\n\t\t\tchange.commit();\r\n\t\t\tthis._recentChange = change;\r\n\t\t\tthis._stateShouldBePushed = this._stateShouldBePushed || !replace;\r\n\t\t\tthis._recordedNewSong = this._recordedNewSong || newSong;\r\n\t\t\tif (!this._waitingToUpdateState) {\r\n\t\t\t\t// Defer updating the url/history until all sequenced changes have\r\n\t\t\t\t// committed and the interface has rendered the latest changes to\r\n\t\t\t\t// improve perceived responsiveness.\r\n\t\t\t\twindow.requestAnimationFrame(this._updateHistoryState);\r\n\t\t\t\tthis._waitingToUpdateState = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate _resetSongRecoveryUid(): void {\r\n\t\tthis._recoveryUid = generateUid();\r\n\t}\r\n\r\n\tpublic openPrompt(prompt: string): void {\r\n\t\tthis.prompt = prompt;\r\n\t\tconst hash: string = this.song.toBase64String();\r\n\t\tthis._sequenceNumber++;\r\n\t\tconst state = { canUndo: true, sequenceNumber: this._sequenceNumber, bar: this.bar, channel: this.channel, recoveryUid: this._recoveryUid, prompt: this.prompt, selection: this.selection.toJSON() };\r\n\t\tthis._pushState(state, hash);\r\n\t}\r\n\r\n\tpublic undo(): void {\r\n\t\tconst state: HistoryState = this._getHistoryState()!;\r\n\t\tif (state.canUndo) this._back();\r\n\t}\r\n\r\n\tpublic redo(): void {\r\n\t\tthis._forward();\r\n\t}\r\n\r\n\tpublic setProspectiveChange(change: Change | null): void {\r\n\t\tthis._recentChange = change;\r\n\t}\r\n\r\n\tpublic forgetLastChange(): void {\r\n\t\tthis._recentChange = null;\r\n\t}\r\n\r\n\tpublic lastChangeWas(change: Change | null): boolean {\r\n\t\treturn change != null && change == this._recentChange;\r\n\t}\r\n\r\n\tpublic goBackToStart(): void {\r\n\t\tthis.channel = 0;\r\n\t\tthis.bar = 0;\r\n\t\tthis.barScrollPos = 0;\r\n\t\tthis.notifier.changed();\r\n\t\tthis.synth.snapToStart();\r\n\t\tthis.notifier.changed();\r\n\t}\r\n\r\n\tpublic savePreferences(): void {\r\n\t\twindow.localStorage.setItem(\"autoPlay\", this.autoPlay ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"autoFollow\", this.autoFollow ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableNotePreview\", this.enableNotePreview ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showFifth\", this.showFifth ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showLetters\", this.showLetters ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showChannels\", this.showChannels ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"showScrollBar\", this.showScrollBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"alwaysFineNoteVol\", this.alwaysFineNoteVol ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"enableChannelMuting\", this.enableChannelMuting ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayBrowserUrl\", this.displayBrowserUrl ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"displayVolumeBar\", this.displayVolumeBar ? \"true\" : \"false\");\r\n\t\twindow.localStorage.setItem(\"fullScreen\", this.fullScreen);\r\n\t\twindow.localStorage.setItem(\"colorTheme\", this.colorTheme);\r\n\t\twindow.localStorage.setItem(\"volume\", String(this.volume));\r\n\t}\r\n\r\n\tpublic setVolume(val: number): void {\r\n\t\tthis.volume = val;\r\n\t\tthis.savePreferences();\r\n\t\tthis.synth.volume = this._calcVolume();\r\n\t}\r\n\r\n\tprivate _calcVolume(): number {\r\n\t\treturn Math.min(1.0, Math.pow(this.volume / 50.0, 0.5)) * Math.pow(2.0, (this.volume - 75.0) / 25.0);\r\n\t}\r\n\r\n\tpublic getCurrentPattern(barOffset: number = 0): Pattern | null {\r\n\t\treturn this.song.getPattern(this.channel, this.bar + barOffset);\r\n\t}\r\n\r\n\tpublic getCurrentInstrument(barOffset: number = 0): number {\r\n\t\tconst pattern: Pattern | null = this.getCurrentPattern(barOffset);\r\n\t\treturn pattern == null ? 0 : pattern.instrument;\r\n\t}\r\n\r\n\tpublic getMobileLayout(): boolean {\r\n\t\treturn (this.fullScreen == \"widefullscreen\") ? window.innerWidth <= 1000 : window.innerWidth <= 700;\r\n\t}\r\n\r\n\tpublic getBarWidth(): number {\r\n\t\t// Bugfix: In wide fullscreen, the 32 pixel display doesn't work as the trackEditor is still horizontally constrained\r\n\t\treturn (!this.getMobileLayout() && this.enableChannelMuting && (!this.getFullScreen() || this.fullScreen == \"widefullscreen\")) ? 30 : 32;\r\n\t}\r\n\r\n\tpublic getChannelHeight(): number {\r\n\t\tconst squashed: boolean = this.getMobileLayout() || this.song.getChannelCount() > 4 || (this.song.barCount > this.trackVisibleBars && this.song.getChannelCount() > 3);\r\n\t\t// TODO: Jummbox widescreen should allow more channels before squashing or megasquashing\r\n\t\tconst megaSquashed: boolean = !this.getMobileLayout() && (((this.fullScreen != \"widefullscreen\") && this.song.getChannelCount() > 11) || this.song.getChannelCount() > 22);\r\n\t\treturn megaSquashed ? 23 : (squashed ? 27 : 32);\r\n\t}\r\n\r\n\tpublic getFullScreen(): boolean {\r\n\t\treturn !this.getMobileLayout() && (this.fullScreen != \"normal\");\r\n\t}\r\n}\r\n//}\r\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\r\nimport { isMobile, EditorConfig } from \"./EditorConfig\";\r\nimport { ColorConfig } from \"./ColorConfig\";\r\nimport \"./style\"; // Import for the side effects, there's no exports.\r\nimport { SongEditor } from \"./SongEditor\";\r\nimport { NotePin, Note, Pattern, Instrument, Channel, Synth } from \"../synth/synth\";\r\nimport { SongDocument } from \"./SongDocument\";\r\nimport { ExportPrompt } from \"./ExportPrompt\";\r\nimport { ChangePreset } from \"./changes\";\r\n\r\n\r\n//namespace beepbox {\r\nconst doc: SongDocument = new SongDocument();\r\nconst editor: SongEditor = new SongEditor(doc);\r\nconst beepboxEditorContainer: HTMLElement = document.getElementById(\"beepboxEditorContainer\")!;\r\nbeepboxEditorContainer.appendChild(editor.mainLayer);\r\neditor.whenUpdated();\r\n\r\n// Fade-in transitions\r\neditor.mainLayer.className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"pattern-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"editor-song-settings\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"instrument-settings-area\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"trackAndMuteContainer\")[0].className += \" load\";\r\neditor.mainLayer.getElementsByClassName(\"barScrollBar\")[0].className += \" load\";\r\n\r\n// Give select2 class to these\r\n$('#pitchPresetSelect').select2({ dropdownAutoWidth: true });\r\n$('#drumPresetSelect').select2({ dropdownAutoWidth: true });\r\n\r\n// Onclick event to expand/collapse optgroups\r\n$(\"body\").on('click', '.select2-container--open .select2-results__group', function () {\r\n\t$(this).siblings().toggle();\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#pitchPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#pitchPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Open event to collapse all optgroups by default\r\n$(\"#drumPresetSelect\").on('select2:open', function () {\r\n\t$('.select2-dropdown--below').css('opacity', 0);\r\n\t$('.select2-dropdown').css('opacity', 1);\r\n\t$('#drumPresetSelect')\r\n\tsetTimeout(() => {\r\n\t\tlet groups = $('.select2-container--open .select2-results__group');\r\n\t\tlet options = $('.select2-container--open .select2-results__option');\r\n\r\n\t\t$.each(groups, (index, v) => {\r\n\t\t\t$(v).siblings().hide();\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\t\t$.each(options, (index, v) => {\r\n\t\t\t$(v)[0].setAttribute(\"style\", \"color: \" + ColorConfig.getChannelColor(doc.song, doc.channel).primaryNote + \";\");\r\n\t\t})\r\n\r\n\t\t$('.select2-dropdown--below').css('opacity', 1);\r\n\t}, 0);\r\n});\r\n\r\n// Select2 events\r\n// The latter is to ensure select2 doesn't keep focus after the select2 is closed without making a selection.\r\n$('#pitchPresetSelect').on(\"change\", editor._whenSetPitchedPreset);\r\n$('#pitchPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n$('#drumPresetSelect').on(\"change\", editor._whenSetDrumPreset);\r\n$('#drumPresetSelect').on(\"select2:close\", editor._refocus);\r\n\r\n\r\neditor.mainLayer.focus();\r\n\r\n// don't autoplay on mobile devices, wait for input.\r\nif (!isMobile && doc.autoPlay) {\r\n\tfunction autoplay(): void {\r\n\t\tif (!document.hidden) {\r\n\t\t\tdoc.synth.play();\r\n\t\t\teditor.updatePlayButton();\r\n\t\t\twindow.removeEventListener(\"visibilitychange\", autoplay);\r\n\t\t}\r\n\t}\r\n\tif (document.hidden) {\r\n\t\t// Wait until the tab is visible to autoplay:\r\n\t\twindow.addEventListener(\"visibilitychange\", autoplay);\r\n\t} else {\r\n\t\tautoplay();\r\n\t}\r\n}\r\n\r\n// BeepBox uses browser history state as its own undo history. Browsers typically\r\n// remember scroll position for each history state, but BeepBox users would prefer not \r\n// auto scrolling when undoing. Sadly this tweak doesn't work on Edge or IE.\r\nif (\"scrollRestoration\" in history) history.scrollRestoration = \"manual\";\r\n\r\neditor.updatePlayButton();\r\n\r\nif (\"serviceWorker\" in navigator) {\r\n\tnavigator.serviceWorker.register(\"/service_worker.js\", { updateViaCache: \"all\", scope: \"/\" }).catch(() => { });\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Synth, ColorConfig, EditorConfig, SongDocument, SongEditor, ExportPrompt, ChangePreset };\r\n//}\r\n\r\n\r\n\r\n\r\n"]}